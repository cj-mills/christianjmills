# Christian Mills

> This is Christian Mills' personal website.

## Main Content

- [Page Not Found](https://christianjmills.com/404.html.html.md)
- [About](https://christianjmills.com/about.html.html.md)
- [blog](https://christianjmills.com/blog.html.html.md)
- [index](https://christianjmills.com/index.html.html.md)
- [README](https://christianjmills.com/README.html.md)
- [Notes on 1D Nonlinear Transformations for Games](https://christianjmills.com/posts/1d-nonlinear-transformations-for-games-notes/): My notes from Squirrel Eiserloh's presentation on 1D nonlinear transformations for game development.
- [Notes on Advanced Git Tools](https://christianjmills.com/posts/advanced-git-tools-notes/): My notes from Tobias Gunther's video covering advanced git tools.
- [Notes on *The Next Leap: How A.I. will change the 3D industry*](https://christianjmills.com/posts/ai-3d-industry-notes/): In this talk at Blender Conference 2018, Andrew Price explores the potential impact of AI and automation on the 3D industry.
- [Testing Intel's Arc A770 GPU for Deep Learning Pt. 1](https://christianjmills.com/posts/arc-a770-testing/part-1/): I tested inference performance with OpenVINO and DirectML on the A770 and attempted to train models using PyTorch-DirectML.
- [Testing Intelâ€™s Arc A770 GPU for Deep Learning Pt. 2](https://christianjmills.com/posts/arc-a770-testing/part-2/): This post covers my experience training image classification models with Intel's PyTorch extension on the Arc A770 GPU.
- [Testing Intelâ€™s Arc A770 GPU for Deep Learning Pt. 3](https://christianjmills.com/posts/arc-a770-testing/part-3/): This post covers my findings from training style transfer models and running Stable Diffusion with the ðŸ¤— Diffusers library on the Arc A770 with Intel's PyTorch extension.
- [Testing Intelâ€™s Arc A770 GPU for Deep Learning Pt. 4](https://christianjmills.com/posts/arc-a770-testing/part-4/): This post covers my findings testing the first version of Intel's PyTorch extension to support PyTorch 2.0 on native Ubuntu and Windows.
- [Notes on *Atomic Awakening: A New Look at the History and Future of Nuclear Power*](https://christianjmills.com/posts/atomic-awakening-book-notes/): My notes from the book **Atomic Awakening: A New Look at the History and Future of Nuclear Power** by **James Mahaffey**.
- [Notes on Backtracking Problems in Python](https://christianjmills.com/posts/backtracking-notes/): My notes from Lynn Zheng's video on solving LeetCode backtracking problems.
- [Barracuda Pose Estimation Project Log Pt. 1](https://christianjmills.com/posts/barracuda-pose-estimation-project-log/part-1/): The journey so far.
- [Barracuda Pose Estimation Project Log Pt. 2](https://christianjmills.com/posts/barracuda-pose-estimation-project-log/part-2/): Trying to remove bottlenecks.
- [Barracuda Pose Estimation Project Log Pt. 3](https://christianjmills.com/posts/barracuda-pose-estimation-project-log/part-3/): I might be doing something wrong.
- [Barracuda Pose Estimation Project Log Pt. 4](https://christianjmills.com/posts/barracuda-pose-estimation-project-log/part-4/): I'm an idiot.
- [Barracuda Pose Estimation Project Log Pt. 5](https://christianjmills.com/posts/barracuda-pose-estimation-project-log/part-5/): Back to it.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 1](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-1/): This tutorial series provides step-by-step instructions for how to perform human pose estimation in Unity with the Barracuda inference library.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 2](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-2/): Set up a video player and webcam in Unity.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 3](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-3/): Implement the preprocessing steps for the MobileNet and ResNet PoseNet models.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 4](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-4/): Load, modify, and execute the PoseNet models.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 5](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-5/): Implement the post-processing steps for single pose estimation with PoseNet.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 6](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-6/): Implement the post-processing steps for multi-pose estimation with PoseNet.
- [Barracuda PoseNet Tutorial 2nd Edition Pt. 7](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/part-7/): Create pose skeletons and manipulate them using output from a PoseNet model.
- [Barracuda PoseNet WebGL Tutorial](https://christianjmills.com/posts/barracuda-posenet-tutorial-v2/webgl/): Modify the Barracuda PoseNet project to run in a browser using WebGL.
- [Notes on *Brave New Words: How AI Will Revolutionize Education*](https://christianjmills.com/posts/brave-new-words-book-notes/): My notes from the book **Brave New Words: How AI Will Revolutionize Education (and Why That's a Good Thing)** by **Salman Khan**.
- [Notes on *Chip War: The Fight for the Worldâ€™s Most Critical Technology*](https://christianjmills.com/posts/chip-war-book-notes/): My notes from the book **Chip War: The Fight for the World's Most Critical Technology** by **Chris Miller**.
- [How to Convert a TensorFlow.js Graph Model to a TensorFlow SavedModel](https://christianjmills.com/posts/convert-tfjs-to-tensorflow-savedmodel-tutorial/): A simple example of how to convert a TensorFlow.js graph model to a TensorFlow SavedModel.
- [Notes on Creating Data Science Apps With Streamlit](https://christianjmills.com/posts/creating-data-science-apps-with-streamlit-notes/): My notes from Chanin Nantasenamat's video on creating data science web apps with Streamlit.
- [How to Crop Images With a GPU in Unity](https://christianjmills.com/posts/crop-images-on-gpu-tutorial/): This post explains how to efficiently crop images in Unity without writing shaders.
- [GPU MODE Lecture 1: How to profile CUDA kernels in PyTorch](https://christianjmills.com/posts/cuda-mode-notes/lecture-001/): Lecture #1 provides a practical introduction to integrating and profiling custom CUDA kernels within PyTorch programs, using tools like `load_inline`, Triton, and NVIDIA Nsight Compute.
- [GPU MODE Lecture 2: Ch.1-3 PMPP Book](https://christianjmills.com/posts/cuda-mode-notes/lecture-002/): Lecture #2 provides an introduction to parallel programming with CUDA C, covering key concepts like heterogeneous computing, data parallelism, thread organization, and memory management, and showcasing examples such as vector addition, image blurring, and matrix multiplication.
- [GPU MODE Lecture 3: Getting Started With CUDA for Python Programmers](https://christianjmills.com/posts/cuda-mode-notes/lecture-003/): Lecture #3 provides a beginner-friendly introduction to CUDA programming with PyTorch, demonstrating how to write and execute CUDA kernels within a Python environment for tasks like image processing and matrix multiplication.
- [GPU MODE Lecture 4: Compute and Memory Basics](https://christianjmills.com/posts/cuda-mode-notes/lecture-004/): Lecture #4 provides an overview of CUDA programming fundamentals, focusing on compute architecture, memory management, and optimization strategies like kernel fusion and tiling to achieve high-performance GPU computation.
- [GPU MODE Lecture 5: Going Further with CUDA for Python Programmers](https://christianjmills.com/posts/cuda-mode-notes/lecture-005/): Lecture #5 explores how to optimize matrix multiplication in CUDA for Python programmers using shared memory and tiling, comparing implementations in pure Python, CUDA C, and the Numba library.
- [GPU MODE Lecture 6: Optimizing Optimizers in PyTorch](https://christianjmills.com/posts/cuda-mode-notes/lecture-006/): Lecture #6 explores PyTorch's optimization strategies for speeding up optimizers, focusing on techniques like kernel fusion and multi-tensor apply to reduce kernel launch overhead and improve runtime performance.
- [GPU MODE Lecture 7: Advanced Quantization](https://christianjmills.com/posts/cuda-mode-notes/lecture-007/): Lecture #7 discusses GPU quantization techniques in PyTorch, focusing on performance optimizations using Triton and CUDA kernels for dynamic and weight-only quantization, including challenges and future directions.
- [GPU MODE Lecture 8: CUDA Performance Checklist](https://christianjmills.com/posts/cuda-mode-notes/lecture-008/): Lecture #8 provides a comprehensive guide to CUDA performance optimization techniques, covering key concepts like memory coalescing, occupancy, control divergence, tiling, privatization, thread coarsening, and algorithm rewriting with better math, illustrated with practical examples and profiling using NCU to improve kernel performance.
- [GPU MODE Lecture 9: Reductions](https://christianjmills.com/posts/cuda-mode-notes/lecture-009/): Lecture #9 covers parallel reduction algorithms for GPUs, focusing on optimizing their implementation in CUDA by addressing control divergence, memory divergence, minimizing global memory accesses, and thread coarsening, ultimately demonstrating how these techniques are employed in machine learning frameworks like PyTorch and Triton.
- [GPU MODE Lecture 10: Build a Prod Ready CUDA library](https://christianjmills.com/posts/cuda-mode-notes/lecture-010/): Lecture #10 explores the challenges of real-time CUDA development, focusing on building a C++ library for efficient GPU communication and task scheduling to abstract away CUDA complexities for non-expert users while maintaining performance.
- [GPU MODE Lecture 11: Sparsity](https://christianjmills.com/posts/cuda-mode-notes/lecture-011/): Lecture #11 discusses GPU sparsity, specifically semi-structured and block sparsity techniques, for accelerating neural network inference and training by leveraging optimized kernels and sparse data representations.
- [GPU MODE Lecture 12: Flash Attention](https://christianjmills.com/posts/cuda-mode-notes/lecture-012/): Lecture #12 provides an introduction to Flash Attention, a highly optimized CUDA kernel for accelerating attention computations in transformer models, including a conceptual overview, tiling strategy, softmax stabilization, and limitations.
- [GPU MODE Lecture 13: Ring Attention](https://christianjmills.com/posts/cuda-mode-notes/lecture-013/): Lecture #13 explores ring attention, a distributed computing technique for training long-context transformers, discussing its motivation and underlying mechanisms.
- [GPU MODE Lecture 14: Practitioners Guide to Triton](https://christianjmills.com/posts/cuda-mode-notes/lecture-014/): Lecture #14 provides a practical introduction to writing and optimizing GPU kernels using Triton, featuring comparisons with CUDA and hands-on examples like tensor copying, image processing, and matrix multiplication.
- [GPU MODE Lecture 15: CUTLASS](https://christianjmills.com/posts/cuda-mode-notes/lecture-015/): Lecture #15 provides an in-depth conceptual explanation of NVIDIA's Cutlass library's tensor layout algebra system, focusing on how it handles shapes, strides, and tiling operations for efficient GPU tensor computations.
- [Notes on *Trends in Deep Learning Hardware: Bill Dally (NVIDIA)*](https://christianjmills.com/posts/cuda-mode-notes/trends-in-deep-learning-hardware-bill-dally-nvidia/): In this lecture, Bill Dally discusses the historical progress of deep learning, driven by hardware advancements, especially GPUs, and explores future directions focusing on improving performance and efficiency through techniques like optimized number representation, sparsity, and specialized hardware accelerators.
- [Notes on Customizing Your GitHub Profile](https://christianjmills.com/posts/customize-github-profile-notes/): My notes from learning how to customize my GitHub profile.
- [Getting Started With Deep Learning in Unity](https://christianjmills.com/posts/deep-learning-unity-intro/): An overview of Unity's Barracuda inference library for executing deep learning models on user devices.
- [Notes on *Dumbing Us Down: The Hidden Curriculum of Compulsory Schooling* ](https://christianjmills.com/posts/dumbing-us-down-book-notes/): My notes from the book **Dumbing Us Down: The Hidden Curriculum of Compulsory Schooling** by **John Taylor Gatto**.
- [Notes on Dungeon Generation via WaveFunctionCollapse](https://christianjmills.com/posts/dungeon-generation-via-wavefunctioncollapse-notes/): My notes from Brian Bucklew's talk on procedurally generating dungeon levels using the WaveFunctionCollapse algorithm.
- [End-to-End In-Game Style Transfer Tutorial Addendum](https://christianjmills.com/posts/end-to-end-in-game-style-transfer-tutorial/addendum/): This post covers how to use a different style transfer model that is specialized for video.
- [End-to-End In-Game Style Transfer Tutorial Pt.1](https://christianjmills.com/posts/end-to-end-in-game-style-transfer-tutorial/part-1/): This tutorial series covers how to train your own style transfer model with PyTorch and implement it in Unity using the Barracuda library.
- [End-to-End In-Game Style Transfer Tutorial Pt.1.5 (Optional)](https://christianjmills.com/posts/end-to-end-in-game-style-transfer-tutorial/part-1-5/): This post covers how to use the Unity Recorder tool to generate additional training data for our style transfer model.
- [End-to-End In-Game Style Transfer Tutorial Pt.2](https://christianjmills.com/posts/end-to-end-in-game-style-transfer-tutorial/part-2/): This post covers how to train an artistic style transfer model with PyTorch in Google Colab.
- [End-to-End In-Game Style Transfer Tutorial Pt.3](https://christianjmills.com/posts/end-to-end-in-game-style-transfer-tutorial/part-3/): This post covers how implement the style transfer model in Unity with the Barracuda library.
- [Notes on fastai Book Ch. 1](https://christianjmills.com/posts/fastai-book-notes/chapter-1/): Chapter 1 covers the history of artificial neural networks, approaches for learning ML/DL, and using the fast.ai library for multiple deep learning tasks.
- [Notes on fastai Book Ch. 10](https://christianjmills.com/posts/fastai-book-notes/chapter-10/): Chapter 10 covers text preprocessing and training an RNN for text classification.
- [Notes on fastai Book Ch. 11](https://christianjmills.com/posts/fastai-book-notes/chapter-11/): Chapter 11 covers data munging with fast.ai's mid-level data API.
- [Notes on fastai Book Ch. 12](https://christianjmills.com/posts/fastai-book-notes/chapter-12/): Chapter 12 covers building and training an LSTM from scratch.
- [Notes on fastai Book Ch. 13](https://christianjmills.com/posts/fastai-book-notes/chapter-13/): Chapter 13 provides a deep dive into convolutional neural networks.
- [Notes on fastai Book Ch. 14](https://christianjmills.com/posts/fastai-book-notes/chapter-14/): Chapter 14 covers building a ResNet from scratch.
- [Notes on fastai Book Ch. 15](https://christianjmills.com/posts/fastai-book-notes/chapter-15/): Chapter 15 provides a deep dive into different application architectures in the fast.ai library.
- [Notes on fastai Book Ch. 16](https://christianjmills.com/posts/fastai-book-notes/chapter-16/): Chapter 16 covers momentum, RMSProp, Adam, decoupled weight decay, and fast.ai callbacks.
- [Notes on fastai Book Ch. 17](https://christianjmills.com/posts/fastai-book-notes/chapter-17/): Chapter 17 covers building a neural network from the foundations.
- [Notes on fastai Book Ch. 18](https://christianjmills.com/posts/fastai-book-notes/chapter-18/): Chapter 18 covers interpreting convolutional neural networks using class-activation maps.
- [Notes on fastai Book Ch. 19](https://christianjmills.com/posts/fastai-book-notes/chapter-19/): Chapter 19 covers creating a fast.ai Learner from scratch.
- [Notes on fastai Book Ch. 2](https://christianjmills.com/posts/fastai-book-notes/chapter-2/): Chapter 2 covers how to train an image classification model using a custom dataset and turn it into an online application.
- [Notes on fastai Book Ch. 3](https://christianjmills.com/posts/fastai-book-notes/chapter-3/): Chapter 3 defines data ethics, introduces essential topics in data ethics, and explains how to identify and address ethical issues.
- [Notes on fastai Book Ch. 4](https://christianjmills.com/posts/fastai-book-notes/chapter-4/): Chapter 4 covers broadcasting, stochastic gradient descent, the MNIST loss function, and the sigmoid activation functions.
- [Notes on fastai Book Ch. 5](https://christianjmills.com/posts/fastai-book-notes/chapter-5/): Chapter 5 covers creating a custom DataBlock for an image classifier, pre-sizing, cross-entropy loss, model interpretation, picking learning rates, transfer learning, and discriminative learning rates.
- [Notes on fastai Book Ch. 6](https://christianjmills.com/posts/fastai-book-notes/chapter-6/): Chapter 6 covers multi-label classification and image regression.
- [Notes on fastai Book Ch. 7](https://christianjmills.com/posts/fastai-book-notes/chapter-7/): Chapter 7 covers data normalization, progressive resizing, test-time augmentation, mixup, and label smoothing.
- [Notes on fastai Book Ch. 8](https://christianjmills.com/posts/fastai-book-notes/chapter-8/): Chapter 8 provides a deep dive into collaborative filtering.
- [Notes on fastai Book Ch. 09](https://christianjmills.com/posts/fastai-book-notes/chapter-9/): Chapter 9 provides a deep dive into tabular modeling.
- [How to Create a LibTorch Plugin for Unity on Windows Pt. 1](https://christianjmills.com/posts/fastai-libtorch-unity-tutorial/part-1/): Modify the training code from the [fastai-to-unity tutorial](../../fastai-to-unity-tutorial/part-1/) to export the model to a [TorchScript](https://pytorch.org/docs/stable/jit.html) module.
- [How to Create a LibTorch Plugin for Unity on Windows Pt. 2](https://christianjmills.com/posts/fastai-libtorch-unity-tutorial/part-2/): Create a dynamic link library (DLL) file in Visual Studio to perform image classification using [LibTorch](https://pytorch.org/cppdocs/installing.html).
- [How to Create a LibTorch Plugin for Unity on Windows Pt. 3](https://christianjmills.com/posts/fastai-libtorch-unity-tutorial/part-3/): Modify the Unity project from the [fastai-to-unity tutorial](../../fastai-to-unity-tutorial/part-1/) to classify images with [LibTorch](https://pytorch.org/cppdocs/installing.html).
- [How to Create an OpenVINO Plugin for Unity on Windows Pt. 1](https://christianjmills.com/posts/fastai-openvino-unity-tutorial/part-1/): Modify the training code from the [fastai-to-unity tutorial](../../fastai-to-unity-tutorial/part-1/) to export the model to [OpenVINO](https://docs.openvino.ai/latest/index.html).
- [How to Create an OpenVINO Plugin for Unity on Windows Pt. 2](https://christianjmills.com/posts/fastai-openvino-unity-tutorial/part-2/): Create a dynamic link library (DLL) file in Visual Studio to perform image classification with OpenVINO.
- [How to Create an OpenVINO Plugin for Unity on Windows Pt. 3](https://christianjmills.com/posts/fastai-openvino-unity-tutorial/part-3/): Modify the Unity project from the [fastai-to-unity tutorial](../../fastai-to-unity-tutorial/part-1/) to classify images with [OpenVINO](https://docs.openvino.ai/latest/index.html).
- [Fastai to Unity Beginner Tutorial Pt. 1](https://christianjmills.com/posts/fastai-to-unity-tutorial/part-1/): Train an image classifier using the fastai library and export it to [ONNX](https://onnx.ai/).
- [Fastai to Unity Beginner Tutorial Pt. 2](https://christianjmills.com/posts/fastai-to-unity-tutorial/part-2/): Classify images in a Unity project with the [Barracuda](https://docs.unity3d.com/Packages/com.unity.barracuda@3.0/manual/index.html) inference library.
- [Fastai to Unity Beginner Tutorial Pt. 3](https://christianjmills.com/posts/fastai-to-unity-tutorial/part-3/): Build a Unity project as a WebGL application and host it using GitHub Pages.
- [Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners](https://christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/): Learn how to fine-tune image classification models with fastai and the timm library by creating a hand gesture recognizer in this easy-to-follow guide for beginners.
- [Exporting timm Image Classifiers from Fastai to ONNX](https://christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/onnx-export/): Learn how to export timm image classification models from Fastai to ONNX and perform inference using ONNX Runtime.
- [Exporting timm Image Classifiers from Fastai to TorchScript](https://christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/torchscript-export/): Learn how to export timm image classification models from PyTorch to TorchScript for optimized, platform-independent deployment and enhanced performance.
- [How to Flip an Image With a Compute Shader](https://christianjmills.com/posts/flip-image-compute-shader-tutorial/): This post covers how to flip an image with a compute shader in Unity.
- [Notes on Git Branches](https://christianjmills.com/posts/git-branches-notes/): My notes from Tobias Gunther's video covering git branches.
- [Getting Started with Google Colab](https://christianjmills.com/posts/google-colab-getting-started-tutorial/): Learn the fundamentals of Google Colab, a free cloud-based Jupyter Notebook environment, to write, run, and share Python code in your browser without any setup or installation.
- [Notes on *How to Teach 5 Semesters of Game Design in 1 Class*](https://christianjmills.com/posts/how-to-teach-5-semesters-of-game-design-in-1-class-notes/): My notes from Jason Wiser's talk on how he teaches a class that covers 5 semesters worth of game design in a single semester.
- [In-Game Style Transfer](https://christianjmills.com/posts/in-game-style-transfer/): Some optimization is still required.
- [Getting Started with Intel's PyTorch Extension for Arc GPUs on Ubuntu](https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-ubuntu/): This tutorial provides a step-by-step guide to setting up Intel's PyTorch extension on Ubuntu to train computer vision models and run local large language models with Arc GPUs.
- [Getting Started with Intel's PyTorch Extension for Arc GPUs on Windows](https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/): This tutorial provides a step-by-step guide to setting up Intel's PyTorch extension on Windows to train models with Arc GPUs.
- [How to Obtain a Kaggle API Key](https://christianjmills.com/posts/kaggle-obtain-api-key-tutorial/): This tutorial provides a step-by-step guide to obtaining a Kaggle API key.
- [Notes on Learning Generative Models of 3D Structures](https://christianjmills.com/posts/learning-generative-models-of-3d-structures-notes/): In this presentation, Tao Wu provides a comprehensive overview of generative models for 3D structures, exploring various 3D representations, generative methodologies, and applications.
- [Notes on *Machine Learning and Level Generation*](https://christianjmills.com/posts/machine-learning-level-generation-notes/): In this presentation from 2017, Ben Berman explores the use of machine learning for generating game content, focusing on techniques that produce results that appear handcrafted rather than procedurally generated.
- [Notes on *How to Make Money as a Freelance Developer*](https://christianjmills.com/posts/making-money-as-freelance-developer-notes/): Luke Ciciliano provides a guide for aspiring freelance web developers, covering whether freelancing is a good fit, how to stand out from the competition, effective sales techniques, and strategies for finding clients.
- [Setting Up a Local Python Environment with Mamba for Machine Learning Projects on Windows](https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/): Learn how to install the Mamba package manager on Windows, set up a local Python environment, and install PyTorch and Jupyter for machine learning projects.
- [Conference Talk 1: Ten Commandments to Deploy Fine-Tuned Models in Production](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-001/): This talk by **Kyle Corbitt** from OpenPipe outlines ten key recommendations for successfully deploying fine-tuned language models (LLMs) in production.
- [Conference Talk 2: LLM Eval For Text2SQL](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-002/): This talk by **Ankur Goyal** from BrainTrust covers how to build evals for LLM systems by walking through a Text2SQL use case.
- [Conference Talk 3: Prompt Engineering Workshop](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-003/): This talk by **John Berryman** covers the fundamentals of language models, prompt engineering techniques, and building LLM applications.
- [Conference Talk 4: Inspect - An OSS Framework for LLM Evals](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-004/): In this talk, **J.J. Allaire** walks through the core concepts and design of the Inspect framework and demonstrate its use for a variety of evaluation tasks.
- [Conference Talk 5: Napkin Math For Fine Tuning with Johno Whitaker](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-005/): In this talk, **Jonathan Whitaker** from answer.ai shows how to build intuition around training performance with a focus on GPU-poor fine tuning.
- [Conference Talk 6: Train Almost Any LLM Model Using ðŸ¤— autotrain](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-006/): In this talk, **Abhishek Thakur**, who leads AutoTrain at ðŸ¤—, shows how to use ðŸ¤— AutoTrain to train/fine-tune LLMs without having to write any code.
- [Conference Talk 7: Best Practices For Fine Tuning Mistral](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-007/): In this talk, **Sophia Yang** from Mistal AI covers best practices for fine-tuning Mistral language models. It covers Mistral's capabilities, the benefits of fine-tuning over prompting, and provides practical demos using the Mistral Fine-tuning API and open-source codebase.
- [Conference Talk 8: Creating, curating, and cleaning data for LLMs](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-008/index.html.html.md): In this talk, **Daniel van Strien** from ðŸ¤— outlines key considerations and techniques for creating high-quality datasets for fine-tuning LLMs.
- [Conference Talk 9: Why Fine-Tuning is Dead](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-009/): In this talk, **Emmanuel Ameisen** from Anthropic argues that fine-tuning LLMs is often less effective and efficient than focusing on fundamentals like data quality, prompting, and Retrieval Augmentation Generation (RAG).
- [Conference Talk 10: Systematically Improving RAG Applications](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-010/): In this talk, **Jason Liu** covers a a systematic approach to improving Retrieval Augmented Generation (RAG) applications.
- [Conference Talk 12: Slaying OOMs with PyTorch FSDP and torchao](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-012/): In this talk, **Mark Saroufim** and **Jane Xu**, discuss techniques and tools for mitigating Out of Memory (OOM) errors in PyTorch, specifically when working with LLMs.
- [Conference Talk 13: When to Fine-Tune with Paige Bailey](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-013/): In this talk, **Paige Bailey**, Generative AI Developer Relations lead at Google, discusses Google's AI landscape with a focus on Gemini models and their applications.
- [Conference Talk 14: Explaining the Basics of Retrieval Augmented Generation](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-014/index.html.html.md): In this talk, **Ben ClaviÃ©** from Answer.ai deconstructs the concept of Retrieval-Augmented Generation (RAG) and walks through building a robust, basic RAG pipeline.
- [Conference Talk 15: Modal - Simple Scalable Serverless Services](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-015/): In this talk, **Charles Frye** provides a deeper dive into Modal, exploring its capabilities beyond fine-tuning LLMs and demonstrating how it empowers users to build and deploy scalable, cost-efficient, and serverless applications with simplicity using Python.
- [Conference Talk 16: A Deep Dive on LLM Evaluation](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-016/): In this talk, **Hailey Schoelkopf** from **Eleuther AI** provides an overview of the challenges in LLM evaluation, exploring different measurement techniques, highlighting reproducibility issues, and advocating for best practices like sharing evaluation code and using task-specific downstream evaluations.
- [Conference Talk 17: Language Models on the Command-Line](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-017/): In this talk, **Simon Willison** showcases **LLM**, a command-line tool for interacting with large language models, including how to leverage its plugin system, local model support, embedding capabilities, and integration with other Unix tools for tasks like retrieval augmented generation.
- [Conference Talk 18: Fine-Tuning OpenAI Models - Best Practices](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-018/): In this talk, **Steven Heidel** from OpenAI's fine-tuning team covers best practices, use cases, and recent updates for fine-tuning OpenAI models.
- [Conference Talk 19: Fine Tuning LLMs for Function Calling](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-019/): In this talk, **Pawell Garbacki** from **Fireworks.ai** covers the process and best practices of finetuning an LLM for function/tool use.
- [Conference Talk 20: Back to Basics for RAG](https://christianjmills.com/posts/mastering-llms-course-notes/conference-talk-020/): In this talk, **Jo Kristian Bergum** from **Vespa.ai** explores practical strategies for building better Retrieval Augmented Generation (RAG) applications, emphasizing the importance of robust evaluation methods and understanding the nuances of information retrieval beyond simple vector embeddings.
- [Livestream: Lessons from a Year of Building with LLMs](https://christianjmills.com/posts/mastering-llms-course-notes/lessons-from-a-year-of-building-with-llms/): This live discussion between six AI experts and practitioners centers on the practical lessons learned from a year of building real-world applications with LLMs, emphasizing the critical importance of data literacy, rigorous evaluation, and iterative development processes.
- [Office Hours 1: Axolotl Q&A with Wing Lian](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-001/): This Q&A session covered various topics, including template-free prompt construction, data type selection for HuggingFace datasets, DPO and RLHF, understanding chat templates and dataset types, ensuring consistent tokenization, multimodal fine-tuning, and future directions for Axolotl.
- [Office Hours 2: Q&A Session with Zach Mueller](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-002/): This Q&A session covers various aspects of LLM fine-tuning, including tools, techniques, data sets, and hardware considerations.
- [Office Hours 3: Gradio Q&A Session with Freddy Boulton](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-003/): Freddy showcases Gradio's features, advantages, and repository contributions, highlighting its potential for AI applications. He concludes with insights into its future roadmap, which includes enhanced agent workflows, real-time streaming, and improved UI features.
- [Office Hours 4: Modal with Charles Frye](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-004/): This Q&A session covers a wide array of topics related to Modal, a platform designed to simplify the execution of Python code in the cloud.
- [Office Hours 5: LangChain/LangSmith](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-005/): This Q&A session on LangChain/LangSmith covers topics like product differentiation, features, use cases, agent workflows, data set creation, and full-stack development for ML engineers.
- [Office Hours 6: Johno Whitaker](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-006/): This Q&A session covers a wide range of topics related to LLMs, including practical tips for training and optimization, insights into the current research landscape, and thoughts on future trends.
- [Office Hours 7: Replicate](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-007/): This Q&A session on the Replicate platform covers topics like enterprise readiness, model deployment, application layers for LLMs, data privacy, logging, and potential future features.
- [Office Hours 8: Predibase](https://christianjmills.com/posts/mastering-llms-course-notes/office-hours-008/): This Q&A session with Predibase compares and contrasts Lorax, an open-source adapter-tuning library for large language models, with other similar libraries, highlighting its performance optimizations, unique features like dynamic adapter loading and support for various adapter types, and its role in a broader machine learning infrastructure strategy.
- [Workshop 1: When and Why to Fine-Tune an LLM](https://christianjmills.com/posts/mastering-llms-course-notes/workshop-001/): Workshop #1 provides a practical overview of fine-tuning large language models, focusing on when it is and is not beneficial, emphasizing a workflow of simplification, prototyping, and iterative improvement using  evaluations.
- [Workshop 2: Fine-Tuning with Axolotl](https://christianjmills.com/posts/mastering-llms-course-notes/workshop-002/): Workshop #2 builds on Workshop 1 to focus on practical fine-tuning of LLMs, covering model selection, fine-tuning techniques with Axolotl, data quality improvement, debugging, and using tools like Accelerate and Modal.
- [Workshop 3: Instrumenting & Evaluating LLMs](https://christianjmills.com/posts/mastering-llms-course-notes/workshop-003/): Workshop #3 focuses on the crucial role of evaluation in fine-tuning and improving LLMs. It covers three main types of evaluations: unit tests, LLM as a judge, and human evaluation.
- [Workshop 4: Instrumenting & Evaluating LLMs](https://christianjmills.com/posts/mastering-llms-course-notes/workshop-004/index.html.html.md): Workshop #4 focuses on the practical aspects of deploying fine-tuned LLMs, covering various deployment patterns, performance optimization techniques, and platform considerations.
- [Exploring the Impact of Different Image Augmentations on Hand Gesture Recognition](https://christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/): Explore how data augmentation can improve a computer vision model's ability to generalize to new input using a hand gesture dataset.
- [Notes on *No ML Degree: How to Build an AI Portfolio*](https://christianjmills.com/posts/no-ml-degree-book-notes/): My notes on Emil Wallner's guide on how to land your first machine learning job without a degree.
- [Integrating OpenCV with Visual Studio C++ Projects on Windows](https://christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/): Learn how to set up OpenCV within a Visual Studio C++ project by creating a simple console app that loads an image file and displays it in a new window.
- [OpenVINO Plugin for Unity Tutorial Pt.1](https://christianjmills.com/posts/openvino-unity-plugin/part-1/): This post covers the prerequisite software that need to be installed and how to convert a pretrained model from ONNX format to the OpenVINO Intermediate Representation format.
- [OpenVINO Plugin for Unity Tutorial Pt. 2](https://christianjmills.com/posts/openvino-unity-plugin/part-2/): This post walks through the steps needed to create a Dynamic link library (DLL) in Visual Studio to perform inference with the pretrained deep learning model.
- [OpenVINO Plugin for Unity Tutorial Pt.3](https://christianjmills.com/posts/openvino-unity-plugin/part-3/): This post demonstrates how to access the DLL as a plugin inside a Unity project.
- [Notes on *Procedural Map Generation Techniques*](https://christianjmills.com/posts/procedural-map-generation-techniques-notes/): In this talk, Herbert Wolverson explores various procedural map generation algorithms, demonstrating their implementation and applications in game development, particularly roguelikes.
- [Notes on *Procedural World Generation of Ubisoftâ€™s Far Cry 5*](https://christianjmills.com/posts/procedural-tools-far-cry-5-notes/): In this presentation from 2018, Etienne Carrier details the procedural pipeline developed for Far Cry 5 using Houdini and Houdini Engine, focusing on its objectives, tools, user workflow, underlying mechanics, and lessons learned during development. 
- [Using PyTorch with CUDA on WSL2 (2020)](https://christianjmills.com/posts/pytorch-cuda-wsl2/): This post covers my experience getting PyTorch to run with CUDA on WSL2.
- [Fine-Tuning Image Classifiers with PyTorch and the timm library for Beginners](https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/): Learn how to fine-tune image classification models with PyTorch and the timm library by creating a hand gesture recognizer in this easy-to-follow guide for beginners.
- [Exporting timm Image Classifiers from PyTorch to ONNX](https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/onnx-export/): Learn how to export timm image classification models from PyTorch to ONNX and perform inference using ONNX Runtime.
- [Quantizing timm Image Classifiers with ONNX Runtime and TensorRT in Ubuntu](https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/ort-tensorrt-ubuntu/): Learn how to quantize timm image classification models with ONNX Runtime and TensorRT for int8 inference.
- [Training Keypoint R-CNN Models with PyTorch](https://christianjmills.com/posts/pytorch-train-keypoint-rcnn-tutorial/): Learn how to train Keypoint R-CNN models on custom datasets with PyTorch.
- [Exporting Keypoint R-CNN Models from PyTorch to ONNX](https://christianjmills.com/posts/pytorch-train-keypoint-rcnn-tutorial/onnx-export/): Learn how to export Keypoint R-CNN models from PyTorch to ONNX and perform inference using ONNX Runtime.
- [Training Mask R-CNN Models with PyTorch](https://christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/): Learn how to train Mask R-CNN models on custom datasets with PyTorch.
- [Exporting Mask R-CNN Models from PyTorch to ONNX](https://christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/onnx-export/): Learn how to export Mask R-CNN models from PyTorch to ONNX and perform inference using ONNX Runtime.
- [Training YOLOX Models for Real-Time Object Detection in PyTorch](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/): Learn how to train YOLOX models for real-time object detection in PyTorch by creating a hand gesture detection model.
- [Real-Time Object Tracking with YOLOX and ByteTrack](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/byte-track/): Learn how to track objects across video frames with YOLOX and ByteTrack.
- [Deploying YOLOX for Real-Time Object Tracking on Jetson Orin Nano](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/jetson-object-tracking/): Learn how to deploy a quantized YOLOX model on an NVIDIA Jetson Orin Nano for real-time object detection and tracking using ONNX Runtime with TensorRT.
- [Exporting YOLOX Models from PyTorch to ONNX](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/onnx-export/): Learn how to export YOLOX models from PyTorch to ONNX and perform inference using ONNX Runtime.
- [Quantizing YOLOX with ONNX Runtime and TensorRT in Ubuntu](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/ort-tensorrt-ubuntu/): Learn how to quantize YOLOX models with ONNX Runtime and TensorRT for int8 inference.
- [Deploying YOLOX for Real-Time Object Tracking on the Raspberry Pi AI Kit](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/): Learn how to deploy a quantized YOLOX model on the Raspberry Pi 5 for real-time object detection and tracking using the Raspberry Pi AI Kit.
- [Exporting YOLOX Models from PyTorch to TensorFlow.js](https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/tfjs-export/): Learn how to export YOLOX models from PyTorch to TensorFlow.js to leverage efficient object detection in web applications.
- [Notes on *Seeing What Others Don'têž‰ The Remarkable Ways We Gain Insights*](https://christianjmills.com/posts/seeing-what-others-dont/): My notes from the book **Seeing What Others Don'têž‰ The Remarkable Ways We Gain Insights** by **Gary Klein**.
- [Create a Shape Key Motion Graphic with the Blender Python API](https://christianjmills.com/posts/shape-key-motion-graphic-bpy/): This post covers how to create a simple shape-key motion graphic in Blender using the Python API.
- [Notes on the Streamlit API](https://christianjmills.com/posts/streamlit-api-notes/): My notes and reference examples for working with the Streamlit API.
- [Notes on StyleGANv2](https://christianjmills.com/posts/stylegan-v2-notes/): My notes on the overview of StyleGANv2 by Henry AI Labs.
- [Targeted In-Game Style Transfer Tutorial](https://christianjmills.com/posts/targeted-in-game-style-transfer/): This post covers how to select which game objects get stylized in the Unity scene.
- [Using Fastai and TensorFlow.js for Hand Gesture Recognition in Unity Pt. 1](https://christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/): Train a hand gesture classifier using [fastai](https://docs.fast.ai/) and export it to [TensorFlow.js](https://www.tensorflow.org/js/).
- [Using Fastai and TensorFlow.js for Hand Gesture Recognition in Unity Pt. 2](https://christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/): Create a [TensorFlow.js](https://www.tensorflow.org/js) plugin for the [Unity](https://unity.com/) game engine.
- [Using Fastai and TensorFlow.js for Hand Gesture Recognition in Unity Pt. 3](https://christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/): Build a Unity project as a WebGL application and host it using GitHub Pages.
- [How to Convert TensorFlow Models to ONNX with tf2onnx](https://christianjmills.com/posts/tensorflow-savedmodel-to-onnx-tutorial/): This post covers how to use tf2onnx to convert a TensorFlow SavedModel to ONNX.
- [Setting Up CUDA for Python on Ubuntu](https://christianjmills.com/posts/cuda-python-setup-tutorial/ubuntu/): Learn how to setup up NVIDIA CUDA on Ubuntu with the Mamba/Conda package manager. Based on Jeremy Howard's lecture, **Getting Started With CUDA for Python Programmers**.
- [Notes on *How To Speak*](https://christianjmills.com/posts/how-to-speak-notes/): My notes for Patrick Winston's course on how to speak.
- [Notes on Practical Procedural Generation](https://christianjmills.com/posts/practical-procedural-generation-notes/): My notes from Kate Compton's talk on practical techniques for procedural generation.
- [Using TensorFlow.js for In-Browser Object Detection in Unity](https://christianjmills.com/posts/tfjs-yolox-unity-tutorial/): Create a TensorFlow.js plugin for the Unity game engine to perform object detection with a YOLOX model.
- [Code Walkthrough: Unity Barracuda Inference Image Classification Package](https://christianjmills.com/posts/unity-barracuda-inference-image-classification-walkthrough/): Walk through the code for the Unity Barracuda Inference Image Classification package, which extends the functionality of `unity-barracuda-inference-base` to perform image classification using computer vision models.
- [Notes on *The Demon-Haunted Worldêž‰ Science as a Candle in the Dark*](https://christianjmills.com/posts/the-demon-haunted-world-book-notes/): My notes from the book **The Demon-Haunted Worldêž‰ Science as a Candle in the Dark** by **Carl Sagan** and **Ann Druyan**.
- [Notes on *The Great Mental Models - Volume 1: General Thinking Concepts*](https://christianjmills.com/posts/the-great-mental-models-book-series-notes/volume-1/): My notes from the book **The Great Mental Models - Volume 1: General Thinking Concepts** by **Shane Parrish** and **Rhiannon Beaubien**.
- [Notes on *The Great Mental Models - Volume 2: Physics, Chemistry, and Biology*](https://christianjmills.com/posts/the-great-mental-models-book-series-notes/volume-2/): My notes from the book **The Great Mental Models - Volume 2: Physics, Chemistry, and Biology** by **Shane Parrish** and **Rhiannon Beaubien**.
- [Notes on *The Kill Chainêž‰ Defending America in the Future of High-Tech Warfare*](https://christianjmills.com/posts/the-kill-chain-book-notes/): My notes from the book **The Kill Chainêž‰ Defending America in the Future of High-Tech Warfare** by **Christian Brose**.
- [Notes on *The Learning Gameêž‰ Teaching Kids to Think for Themselves, Embrace Challenge, and Love Learning*](https://christianjmills.com/posts/the-learning-game-book-notes/): My notes from the book **The Learning Game: Teaching Kids to Think for Themselves, Embrace Challenge, and Love Learning** by **Ana Lorena FÃ¡brega**.
- [Notes on *The Path of Least Resistance*](https://christianjmills.com/posts/the-path-of-least-resistance-book-notes/): My notes from the book ***The Path of Least Resistance: Learning to Become the Creative Force in Your Own Life*** by **Robert Fritz**.
- [Working with COCO Bounding Box Annotations in Torchvision](https://christianjmills.com/posts/torchvision-coco-annotation-tutorials/bounding-boxes/): Learn how to work with COCO bounding box annotations in torchvision for object detection tasks.
- [Working with COCO Segmentation Annotations in Torchvision](https://christianjmills.com/posts/torchvision-coco-annotation-tutorials/segmentation-polygons/): Learn how to work with COCO segmentation annotations in torchvision for instance segmentation tasks.
- [How to Create Custom Torchvision V2 Transforms](https://christianjmills.com/posts/torchvision-custom-v2-transform-tutorial/): Learn how to create custom Torchvision V2 Transforms that support bounding box annotations.
- [Working with CVAT Bounding Box Annotations in Torchvision](https://christianjmills.com/posts/torchvision-cvat-annotation-tutorials/bounding-boxes/): Learn how to work with CVAT bounding box annotations in torchvision for object detection tasks.
- [Working with CVAT Keypoint Annotations in Torchvision](https://christianjmills.com/posts/torchvision-cvat-annotation-tutorials/keypoints/): Learn how to work with CVAT keypoint annotations in torchvision for keypoint estimation tasks.
- [Working with CVAT Segmentation Annotations in Torchvision](https://christianjmills.com/posts/torchvision-cvat-annotation-tutorials/segmentation-polygons/): Learn how to work with CVAT segmentation annotations in torchvision for instance segmentation tasks.
- [Working with LabelMe Bounding Box Annotations in Torchvision](https://christianjmills.com/posts/torchvision-labelme-annotation-tutorials/bounding-boxes/): Learn how to work with LabelMe bounding box annotations in torchvision for object detection tasks.
- [Working with LabelMe Keypoint Annotations in Torchvision](https://christianjmills.com/posts/torchvision-labelme-annotation-tutorials/keypoints/): Learn how to work with LabelMe keypoint annotations in torchvision for keypoint estimation tasks.
- [Working with LabelMe Segmentation Annotations in Torchvision](https://christianjmills.com/posts/torchvision-labelme-annotation-tutorials/segmentation-polygons/): Learn how to work with LabelMe segmentation annotations in torchvision for instance segmentation tasks.
- [Notes on Transformers Book Ch. 1](https://christianjmills.com/posts/transformers-book-notes/chapter-1/): Chapter 1 covers essential advancements for transformers, recurrent architectures, the encoder-decoder framework, attention mechanisms, transfer learning in NLP, and the HuggingFace ecosystem.
- [Notes on Transformers Book Ch. 10](https://christianjmills.com/posts/transformers-book-notes/chapter-10/): Chapter 10 covers how to train a GPT-like model to generate Python source code from scratch.
- [Notes on Transformers Book Ch. 11](https://christianjmills.com/posts/transformers-book-notes/chapter-11/): Chapter 11 explores scaling up transformers, methods to make self-attention more efficient, and multimodel transformers.
- [Notes on Transformers Book Ch. 2](https://christianjmills.com/posts/transformers-book-notes/chapter-2/): Chapter 2 covers training a model to classify emotions expressed in Twitter messages.
- [Notes on Transformers Book Ch. 3](https://christianjmills.com/posts/transformers-book-notes/chapter-3/): Chapter 3 covers the Transformer architecture and different types of transformer models available on the Hugging Face Hub.
- [Notes on Transformers Book Ch. 4](https://christianjmills.com/posts/transformers-book-notes/chapter-4/): Chapter 4 covers fine-tuning a multilingual transformer model to perform named entity recognition.
- [Notes on Transformers Book Ch. 5](https://christianjmills.com/posts/transformers-book-notes/chapter-5/): Chapter 5 covers different methods for generating text with GPT-2.
- [Notes on Transformers Book Ch. 6](https://christianjmills.com/posts/transformers-book-notes/chapter-6/): Chapter 6 covers building an encoder-decoder model to condense dialogues between several people into a crisp summary.
- [Notes on Transformers Book Ch. 7](https://christianjmills.com/posts/transformers-book-notes/chapter-7/): Chapter 7 covers building a question-answering model that finds answers to questions in customer reviews.
- [Notes on Transformers Book Ch. 8](https://christianjmills.com/posts/transformers-book-notes/chapter-8/): Chapter 8 covers different methods to make transformer models more efficient in production.
- [Notes on Transformers Book Ch. 9](https://christianjmills.com/posts/transformers-book-notes/chapter-9/): Chapter 9 covers how to deal with few to no labels by training a model that automatically tags GitHub issues for the Hugging Face Transformers library.
- [Create a Triangle Motion Graphic with the Blender Python API](https://christianjmills.com/posts/triangle-motion-graphic-bpy/): This post covers how to create a simple triangle motion graphic in Blender using the Python API.
- [Code Walkthrough: Unity Barracuda Inference Base Package](https://christianjmills.com/posts/unity-barracuda-inference-base-walkthrough/): Walk through the code for the Unity Barracuda Inference Base package, which provides a foundation for performing inference with the Barracuda inference library.
- [Code Walkthrough: Unity Barracuda Inference PoseNet Package](https://christianjmills.com/posts/unity-barracuda-inference-posenet-walkthrough/): Walk through the code for the Unity Barracuda Inference PoseNet package, which extends the functionality of `unity-barracuda-inference-base` to perform 2D human pose estimation using PoseNet models.
- [Code Walkthrough: Unity Barracuda Inference YOLOX Package](https://christianjmills.com/posts/unity-barracuda-inference-yolox-walkthrough/): Walk through the code for the Unity Barracuda Inference YOLOX package, which extends the functionality of `unity-barracuda-inference-base` to perform object detection using YOLOX models.
- [Code Walkthrough: Unity Bounding Box 2D Toolkit Package](https://christianjmills.com/posts/unity-bounding-box-2d-toolkit-walkthrough/): Walk through the code for the Unity Bounding Box 2D Toolkit package, which provides an easy-to-use and customizable solution to work with and visualize 2D bounding boxes on a Unity canvas.
- [Code Walkthrough: Unity CV Image Gallery Package](https://christianjmills.com/posts/unity-cv-image-gallery-walkthrough/): Walk through the code for the Unity CV Image Gallery package, an interactive image gallery to facilitate testing computer vision applications in Unity projects.
- [Code Walkthrough: Unity Deep Learning Image Preprocessor Package](https://christianjmills.com/posts/unity-deep-learning-image-preprocessor-walkthrough/): Walk through the code for the Unity Deep Learning Image Preprocessor package, a utility for preparing image input to perform inference with deep learning models in Unity.
- [Code Walkthrough: Unity Human Pose 2D Toolkit Package](https://christianjmills.com/posts/unity-human-pose-2d-toolkit-walkthrough/): Walk through the code for the Unity Human Pose 2D Toolkit package, which provides an easy-to-use and customizable solution to work with and visualize 2D human poses on a Unity canvas.
- [Code Walkthrough: Unity Media Display Package](https://christianjmills.com/posts/unity-media-display-walkthrough/): Walk through the code for the Unity Media Display package, a tool for displaying test images, videos, and webcam streams in Unity projects.
- [Building a Computer Vision Plugin for Unity with ONNX Runtime](https://christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/): Learn how to create a native plugin for the Unity game engine to perform inference with computer vision models using ONNX Runtime.
- [Real-Time Object Detection in Unity with ONNX Runtime and DirectML](https://christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/): Learn how to integrate a native plugin within the Unity game engine for real-time object detection using ONNX Runtime.
- [Code Walkthrough: Unity YOLOX Utilities Package](https://christianjmills.com/posts/unity-yolox-utils-walkthrough/): Walk through the code for the Unity YOLOX Utilities package, which provides utility functions to work with YOLOX object detection models in Unity.
- [Notes on Version Control](https://christianjmills.com/posts/version-control-notes/): My notes from Tobias Gunther's video covering tools and concepts for version control with git.
- [Notes on WaveFunctionCollapse for 3D](https://christianjmills.com/posts/wave-function-collapse-for-3d-notes/): My notes from Martin Donald's video on using the WaveFunctionCollapse algorithm for 3D modules.
- [Notes on *Weapons of Mass Instruction: A Schoolteacher's Journey Through the Dark World of Compulsory Schooling* ](https://christianjmills.com/posts/weapons-of-mass-instruction-book-notes/): My notes from the book **Weapons of Mass Instruction: A Schoolteacher's Journey Through the Dark World of Compulsory Schooling** by **John Taylor Gatto**.
- [Notes on *Where Is My Flying Car?*](https://christianjmills.com/posts/where-is-my-flying-car-book-notes/): My notes from the book **Where Is My Flying Car?** by **J. Storrs Hall**.
- [Notes on *Why Greatness Cannot Be Planned*](https://christianjmills.com/posts/why-greatness-cannot-be-planned-book-notes/): My notes from the book ***Why Greatness Cannot Be Planned: The Myth of the Objective*** by **Kenneth O. Stanley** and **Joel Lehman**.
- [game-dev-notes](https://christianjmills.com/series/notes/game-dev-notes.html.html.md)
- [arc-a770-testing](https://christianjmills.com/series/notes/arc-a770-testing.html.html.md)
- [Books](https://christianjmills.com/series/notes/book-notes.html.html.md): My notes from various books.
- [GPU MODE Lecture Notes](https://christianjmills.com/series/notes/cuda-mode-notes.html.html.md): My notes from the ***GPU MODE*** (formerly CUDA MODE) reading group lectures run by **Andreas Kopf** and **Mark Saroufim**.
- [Education](https://christianjmills.com/series/notes/education-notes.html.html.md): My notes from resources on education.
- [fastai-book-notes](https://christianjmills.com/series/notes/fastai-book-notes.html.html.md)
- [History](https://christianjmills.com/series/notes/history-notes.html.html.md): My notes from resources on history.
- [Notes](https://christianjmills.com/series/notes/)
- [Mastering LLMs Course Notes](https://christianjmills.com/series/notes/mastering-llms-course-notes.html.html.md): My notes from the course ***Mastering LLMs: A Conference For Developers & Data Scientists*** by **Hamel Husain** and **Dan Becker**.
- [Personal & Professional Growth](https://christianjmills.com/series/notes/personal-professional-growth-notes.html.html.md): My notes from resources on personal and professional growth.
- [Procedural Generation](https://christianjmills.com/series/notes/procedural-generation-notes.html.html.md): My notes from resources on procedural generation.
- [Natural Language Processing with Transformers](https://christianjmills.com/series/notes/transformers-book-notes.html.html.md): My notes from the book ***Natural Language Processing with Transformers: Building Language Applications with Hugging Face*** by **Lewis Tunstall**, **Leandro von Werra**, and **Thomas Wolf**.
- [Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners](https://christianjmills.com/series/tutorials/fastai-train-image-classifier-series.html.html.md): Learn how to fine-tune image classification models with fastai and the timm library by creating a hand gesture recognizer in this easy-to-follow guide for beginners.
- [onnx-runtime-unity-series](https://christianjmills.com/series/tutorials/onnx-runtime-unity-series.html.html.md)
- [barracuda-posenet-tutorial-v2-series](https://christianjmills.com/series/tutorials/barracuda-posenet-tutorial-v2-series.html.html.md)
- [end-to-end-in-game-style-transfer-tutorial](https://christianjmills.com/series/tutorials/end-to-end-in-game-style-transfer-tutorial.html.html.md)
- [fastai-libtorch-unity-tutorial](https://christianjmills.com/series/tutorials/fastai-libtorch-unity-tutorial.html.html.md)
- [fastai-openvino-unity-tutorial](https://christianjmills.com/series/tutorials/fastai-openvino-unity-tutorial.html.html.md)
- [fastai-to-unity-tutorial](https://christianjmills.com/series/tutorials/fastai-to-unity-tutorial.html.html.md)
- [Foundational Setup Guides](https://christianjmills.com/series/tutorials/foundational-setup-guides.html.html.md): Step-by-step tutorials for setting up essential tools and platforms, designed to provide a solid foundation for a diverse range of projects.
- [Tutorials](https://christianjmills.com/series/tutorials/)
- [miscellaneous-blender-tutorials](https://christianjmills.com/series/tutorials/miscellaneous-blender-tutorials.html.html.md)
- [miscellaneous-unity-tutorials](https://christianjmills.com/series/tutorials/miscellaneous-unity-tutorials.html.html.md)
- [Fine-Tuning Image Classifiers with PyTorch and the timm library for Beginners](https://christianjmills.com/series/tutorials/pytorch-train-image-classifier-series.html.html.md): Learn how to fine-tune image classification models with PyTorch and the timm library by creating a hand gesture recognizer in this easy-to-follow guide for beginners.
- [pytorch-train-keypoint-rcnn-series](https://christianjmills.com/series/tutorials/pytorch-train-keypoint-rcnn-series.html.html.md)
- [pytorch-train-mask-rcnn-series](https://christianjmills.com/series/tutorials/pytorch-train-mask-rcnn-series.html.html.md)
- [Training YOLOX Models for Real-Time Object Detection in PyTorch](https://christianjmills.com/series/tutorials/pytorch-train-object-detector-yolox-series.html.html.md): Learn how to train YOLOX models for real-time object detection in PyTorch by creating a hand gesture detection model.
- [tensorflow-js-unity-series](https://christianjmills.com/series/tutorials/tensorflow-js-unity-series.html.html.md)
- [Torchvision Annotation Tutorials](https://christianjmills.com/series/tutorials/torchvision-annotation-tutorials-series.html.html.md): Tutorials showing how to load image annotation data from various formats and use it with torchvision.
