<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Christian Mills</title>
<link>christianjmills.com/blog.html</link>
<atom:link href="christianjmills.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is Christian Mills&#39; personal Blog.</description>
<image>
<url>christianjmills.com/images/logo.png</url>
<title>Christian Mills</title>
<link>christianjmills.com/blog.html</link>
<height>142</height>
<width>144</width>
</image>
<generator>quarto-1.3.450</generator>
<lastBuildDate>Tue, 21 Nov 2023 08:00:00 GMT</lastBuildDate>
<item>
  <title>Chip War Part 8: The Chip Choke</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-8/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>“Everything We’re Competing On”</li>
<li>Fujian Jinhua</li>
<li>The Assault on Huawei</li>
<li>China’s Sputnik Moment?</li>
<li>Shortages and Supply Chains</li>
<li>The Taiwan Dilemma</li>
</ul>
<section id="everything-were-competing-on" class="level2">
<h2 class="anchored" data-anchor-id="everything-were-competing-on">“Everything We’re Competing On”</h2>
<p>Chapter 49 addresses the growing concerns in the U.S. about China’s advances in the semiconductor industry. Intel CEO Brian Krzanich, in his role as chairman of the Semiconductor Industry Association in 2015, expressed anxiety over China’s push to seize a larger share of the global chip industry. The chapter discusses the U.S. semiconductor firms’ dilemma of relying on China as a crucial market while facing the threat of being cut out of China’s supply chain due to its massive semiconductor subsidies. The chapter also touches on the Obama administration’s slow response to the semiconductor issue, the Pentagon’s concerns over China’s computing power in new weapons systems, and the shift in U.S. policy under the Trump administration towards a more combative approach to technology policy.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>The U.S. semiconductor industry’s increasing anxiety over China’s growing presence in the global chip market.</li>
<li>The complex relationship between U.S. chip firms and China, where China is both a key market and a competitive threat.</li>
<li>China’s formal policy to reduce reliance on foreign semiconductors and develop its own chip industry.</li>
<li>The Obama administration’s initial underestimation of the importance of semiconductors in geopolitical competition.</li>
<li>The Pentagon’s concern over China’s use of computing power in developing new weapons systems.</li>
<li>The Trump administration’s shift to a more aggressive stance on technology policy, particularly regarding China.</li>
<li>The strategic importance of semiconductors in global power dynamics and the U.S.-China rivalry.</li>
<li>The semiconductor industry’s fear of Chinese retaliation and the dilemma faced by U.S. firms operating in China.</li>
<li>The perceived need for stronger export control regimes to prevent technological leakage to China.</li>
<li>The increasing focus of the U.S. government on semiconductors as a critical component of national security and global competitiveness.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“This massive $250 billion fund is going to bury us,” - a concern about China’s subsidies in the semiconductor sector.</li>
<li>“The future of war will be defined by computing power.”</li>
<li>“China’s chip industry might rival Silicon Valley for influence by 2030.”</li>
<li>“Intel CEOs had a long history of paranoia, but now there was more reason than ever for the company and the entire U.S. chip industry to be worried.”</li>
<li>“Xi Jinping himself has urged the PLA to accelerate the development of military intelligentization.”</li>
<li>“The world still has several hundred million subsistence farmers who’d happily fasten components into an iPhone for a dollar an hour.”</li>
<li>“China spent more money importing semiconductors than oil.”</li>
<li>“The vital gate of the supply chain is grasped in the hands of others,” - Xi Jinping on China’s reliance on foreign chips.</li>
<li>“The U.S. faces the same basic dilemma today; China can deploy more ships and planes than the U.S.”</li>
<li>“The 5G future will reset the balance of military power.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>The U.S. semiconductor industry is increasingly concerned about China’s growing influence in the global chip market.</li>
<li>U.S. semiconductor firms face a complex dynamic with China, balancing market opportunities with competitive threats.</li>
<li>China’s government has implemented policies aimed at reducing reliance on foreign semiconductors.</li>
<li>The U.S. government initially underestimated the strategic importance of semiconductors in global competition.</li>
<li>The Pentagon is concerned about China’s application of computing power in new military technologies.</li>
<li>The Trump administration adopted a more aggressive technology policy stance towards China.</li>
<li>Semiconductors are increasingly viewed as critical to national security and global power dynamics.</li>
<li>U.S. semiconductor firms are cautious about Chinese retaliation and face dilemmas in their operations in China.</li>
<li>The U.S. government has recognized the need for stronger export controls to limit technological transfer to China.</li>
<li>Semiconductors have become a central focus of U.S. national security and competitiveness strategies.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li>Analyze the strategic implications of China’s growing influence in the semiconductor industry for U.S. firms and national security.</li>
<li>Study the evolving U.S. government policies towards semiconductor technology and export controls in response to China’s advances.</li>
<li>Investigate the role of semiconductors in the U.S.-China technology rivalry and its impact on global power dynamics.</li>
<li>Examine the challenges faced by U.S. semiconductor companies operating in the Chinese market.</li>
<li>Assess the impact of China’s semiconductor development on the global technology landscape.</li>
<li>Explore the implications of semiconductor technology on military and intelligence applications in the context of U.S.-China competition.</li>
<li>Consider the effectiveness of U.S. strategies in maintaining a competitive edge in semiconductor technology.</li>
<li>Understand the complexities of the semiconductor supply chain and its geopolitical significance.</li>
<li>Reflect on the broader implications of the semiconductor industry’s evolution for global economic and technological leadership.</li>
<li>Evaluate the long-term consequences of the U.S.-China semiconductor rivalry on the global technology industry.</li>
</ol>
</section>
</section>
<section id="fujian-jinhua" class="level2">
<h2 class="anchored" data-anchor-id="fujian-jinhua">Fujian Jinhua</h2>
<p>Chapter 50 recounts the espionage incident involving Micron Technology, an American semiconductor company, and Fujian Jinhua, a Chinese state-backed firm. Kenny Wang, an employee at Micron’s Taiwan facility, downloaded confidential files related to Micron’s DRAM technology and transferred them to Google Drive before moving to United Microelectronics Corporation (UMC), which was in partnership with Fujian Jinhua. This case highlights the intense competition and espionage activities in the semiconductor industry, reflecting broader geopolitical tensions and the strategic importance of advanced technology in global power dynamics.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>The theft of Micron’s DRAM technology by Fujian Jinhua illustrates the high stakes and aggressive tactics in the semiconductor industry.</li>
<li>Kenny Wang’s role in downloading and transferring Micron’s confidential information to UMC and subsequently to Fujian Jinhua.</li>
<li>Fujian Jinhua’s strategy of partnering with UMC to acquire DRAM technology, despite UMC not being in the DRAM business.</li>
<li>The involvement of multiple employees from Micron’s Taiwan facility in the espionage, highlighting the vulnerability of intellectual property in global companies.</li>
<li>The Taiwanese government’s response to Micron’s complaint about the intellectual property theft.</li>
<li>The broader context of China’s efforts to develop its semiconductor industry and reduce reliance on foreign technology.</li>
<li>The implications of the case for U.S.-China relations and the semiconductor industry’s global landscape.</li>
<li>The impact of intellectual property theft on the competitive dynamics of the semiconductor industry.</li>
<li>The strategic importance of DRAM technology and its role in the global semiconductor market.</li>
<li>The case as an example of the complex interplay between corporate espionage, international law, and global technology competition.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Micron confidential/do not duplicate” - Label on the files downloaded by Kenny Wang.</li>
<li>“Secrets that would have taken several years and hundreds of millions of dollars to replicate” - Micron’s estimation of the value of the stolen information.</li>
<li>“The vital gate of the supply chain is grasped in the hands of others” - Xi Jinping on China’s reliance on foreign chips.</li>
<li>“China spent more money importing semiconductors than oil” - Highlighting the importance of semiconductors in China’s economy.</li>
<li>“The big three DRAM firms had spent decades investing in ultra-specialized technology processes” - The competitive edge of Micron, Samsung, and Hynix.</li>
<li>“China’s most important technology rests on a fragile foundation of imported silicon” - The vulnerability of China’s technological advancements.</li>
<li>“China’s state-backed Big Fund invested over $1 billion in Tsinghua Uni Group” - China’s investment in developing its semiconductor industry.</li>
<li>“The 5G future will reset the balance of military power” - The strategic importance of advanced technology.</li>
<li>“To compete, Jinhua had to acquire this manufacturing know-how by means fair or foul” - The desperation in China’s semiconductor strategy.</li>
<li>“The future of war will be defined by computing power” - The growing importance of technology in global power dynamics.</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>Fujian Jinhua, a Chinese state-backed semiconductor firm, was involved in the theft of DRAM technology from Micron Technology.</li>
<li>Kenny Wang, a former employee at Micron’s Taiwan facility, played a key role in downloading and transferring confidential information.</li>
<li>UMC partnered with Fujian Jinhua to acquire DRAM technology, despite not being in the DRAM business.</li>
<li>The case involved multiple individuals from Micron’s Taiwan facility, suggesting a coordinated effort to acquire Micron’s technology.</li>
<li>The incident led to legal actions and raised serious concerns about intellectual property theft in the semiconductor industry.</li>
<li>The case reflects the intense competition and strategic importance of semiconductor technology in global markets.</li>
<li>China’s efforts to develop its semiconductor industry involve significant state investment and strategies to acquire foreign technology.</li>
<li>The incident has implications for U.S.-China relations and the global semiconductor industry.</li>
<li>DRAM technology is a critical component in the global semiconductor market, with significant competitive implications.</li>
<li>The case exemplifies the challenges of protecting intellectual property in a globalized and highly competitive technological environment.</li>
</ol>
</section>
<section id="recommendations-1" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-1">Recommendations</h3>
<ol type="1">
<li>Analyze the strategic implications of intellectual property theft in the semiconductor industry.</li>
<li>Study the legal and geopolitical aspects of the Fujian Jinhua case and its impact on U.S.-China relations.</li>
<li>Investigate the role of state-backed companies in China’s semiconductor strategy.</li>
<li>Examine the challenges faced by global companies like Micron in protecting their intellectual property.</li>
<li>Assess the importance of DRAM technology in the competitive landscape of the semiconductor industry.</li>
<li>Explore the broader implications of corporate espionage on international trade and technology competition.</li>
<li>Consider the impact of such incidents on global semiconductor market dynamics and company strategies.</li>
<li>Reflect on the role of technology in national security and global power dynamics.</li>
<li>Understand the complexities of intellectual property protection in a highly competitive and globalized industry.</li>
<li>Evaluate the long-term effects of state-backed industrial strategies on global technology markets and competition.</li>
</ol>
</section>
</section>
<section id="the-assault-on-huawei" class="level2">
<h2 class="anchored" data-anchor-id="the-assault-on-huawei">The Assault on Huawei</h2>
<p>Chapter 51 focuses on the U.S. government’s actions against Huawei, a leading Chinese technology company. The chapter outlines the Trump administration’s efforts to restrict Huawei’s access to U.S. technology, particularly semiconductors, citing national security concerns and allegations of Huawei’s involvement in espionage. It discusses the broader context of the U.S.-China technology rivalry, Huawei’s significant role in global telecom infrastructure, and the geopolitical implications of the U.S.’s actions. The chapter also explores the global reactions to the U.S. campaign against Huawei, including varying responses from allies, and the impact on Huawei’s business operations and China’s technological ambitions.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>Huawei became a focal point in the U.S.-China technology rivalry, with the U.S. government citing national security concerns.</li>
<li>President Trump’s administration took significant steps to restrict Huawei’s access to American technology, particularly in the semiconductor sector.</li>
<li>Huawei’s critical role in global telecom infrastructure, particularly in 5G networks, was a key factor in the U.S.’s actions.</li>
<li>The U.S.’s campaign against Huawei reflected broader efforts to curb China’s technological rise and influence.</li>
<li>The restrictions on Huawei had significant implications for the company’s operations, including its smartphone and server businesses.</li>
<li>The U.S. government’s actions were part of a broader strategy to maintain technological superiority over China.</li>
<li>Huawei’s position as a leading global tech firm made it a target for U.S. efforts to limit China’s access to advanced technology.</li>
<li>The global response to the U.S. campaign against Huawei varied, with some countries following the U.S.’s lead and others resisting.</li>
<li>The chapter discusses the impact of U.S. restrictions on the global semiconductor ecosystem and supply chains.</li>
<li>The U.S. actions against Huawei were seen as a move to send a message worldwide, influencing other countries’ technology policies and alliances.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“The future of war will be defined by computing power.”</li>
<li>“China’s chip industry might rival Silicon Valley for influence by 2030.”</li>
<li>“Huawei executives say they invest in R&amp;D because they’ve learned from Silicon Valley.”</li>
<li>“The vital gate of the supply chain is grasped in the hands of others,” - Xi Jinping on China’s reliance on foreign chips.</li>
<li>“The U.S. faces the same basic dilemma today; China can deploy more ships and planes than the U.S.”</li>
<li>“The 5G future will reset the balance of military power.”</li>
<li>“The United States needs to strangle Huawei,” - Republican Senator Ben Sasse, 2020.</li>
<li>“Huawei’s business model wasn’t much different from that of Sony or Samsung when they first won a major position in the world’s tech ecosystem.”</li>
<li>“China’s most important technology rests on a fragile foundation of imported silicon.”</li>
<li>“Weaponized interdependence,” - a former senior official’s view on the U.S. strategy against Huawei.</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>The U.S. government targeted Huawei with restrictions, citing national security concerns.</li>
<li>Huawei is a major player in the global telecom infrastructure, especially in 5G technology.</li>
<li>The Trump administration’s actions against Huawei were part of a broader U.S.-China technology rivalry.</li>
<li>The restrictions had a significant impact on Huawei’s business operations and its ability to access critical semiconductor technology.</li>
<li>The U.S. aimed to maintain its technological superiority and curb China’s technological advancements.</li>
<li>Huawei’s global influence made it a strategic target in the U.S.’s efforts to limit China’s technological rise.</li>
<li>Responses to the U.S. campaign against Huawei varied globally, affecting international technology policies and alliances.</li>
<li>The U.S. restrictions influenced the global semiconductor ecosystem and supply chains.</li>
<li>The U.S.’s actions against Huawei were intended to influence other countries’ technology policies and alliances.</li>
<li>The U.S. strategy against Huawei was part of a broader effort to control key points in the global technology supply chain.</li>
</ol>
</section>
<section id="recommendations-2" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-2">Recommendations</h3>
<ol type="1">
<li>Analyze the strategic reasons behind the U.S. government’s actions against Huawei.</li>
<li>Study the impact of U.S. restrictions on Huawei’s business and the global semiconductor industry.</li>
<li>Investigate the role of Huawei in the global telecom infrastructure and its significance in the U.S.-China technology rivalry.</li>
<li>Examine the global responses to the U.S. campaign against Huawei and their implications for international technology alliances.</li>
<li>Assess the broader implications of the U.S.-China technology rivalry on global technological advancement and supply chains.</li>
<li>Explore the impact of national security concerns on technology policies and the semiconductor industry.</li>
<li>Consider the effectiveness of U.S. strategies in maintaining technological superiority over China.</li>
<li>Understand the complexities of the global technology market and the geopolitical implications of U.S. actions against Huawei.</li>
<li>Reflect on the broader context of U.S.-China relations and their impact on global technology dynamics.</li>
<li>Evaluate the long-term consequences of the U.S. campaign against Huawei on the global technology industry and international relations.</li>
</ol>
</section>
</section>
<section id="chinas-sputnik-moment" class="level2">
<h2 class="anchored" data-anchor-id="chinas-sputnik-moment">China’s Sputnik Moment?</h2>
<p>Chapter 52 explores China’s ambitious efforts to develop its semiconductor industry, especially during the COVID-19 pandemic. The chapter focuses on Yangtze Memory Technologies Corporation (YMTC) in Wuhan, China’s leading NAND memory producer, as a symbol of China’s push for technological independence. Despite the pandemic lockdown, YMTC continued operations, reflecting the government’s prioritization of semiconductor development. The chapter also touches on China’s response to U.S. export controls, viewing them as a catalyst for accelerating its quest for tech dominance. The narrative delves into the risks and challenges China faces in this endeavor, highlighting failed projects and the complexities of achieving technological independence in the semiconductor industry.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>YMTC’s continued operation during the COVID-19 lockdown in Wuhan illustrates China’s commitment to semiconductor development.</li>
<li>U.S. export controls on semiconductor technology have spurred China’s efforts to boost its domestic chip industry.</li>
<li>The chapter suggests that China’s response to these controls mirrors the U.S.’s reaction to the Soviet Union’s Sputnik launch, triggering significant investment in technology.</li>
<li>Despite substantial government support, including billions in funding, China’s path to semiconductor independence faces hurdles, including failed projects and technological challenges.</li>
<li>The narrative questions whether China’s massive investment in semiconductors will yield successful technological advancement or lead to wasteful expenditure.</li>
<li>China’s goal of technological independence is complicated by the multinational nature of the semiconductor supply chain and the country’s current technological capabilities.</li>
<li>The chapter discusses China’s interest in developing alternative architectures, like RISC-V, to reduce reliance on foreign technology.</li>
<li>China’s semiconductor strategy involves not only cutting-edge technology but also investment in older process technologies and emerging materials like silicon carbide and gallium nitride.</li>
<li>The chapter analyzes the geopolitical implications of China’s semiconductor ambitions and their potential impact on the global technology landscape.</li>
<li>The narrative explores the intersection of China’s national goals and commercial interests in the semiconductor sector, highlighting the government’s influence on chip companies.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“China’s digital world runs on digits… processed and stored mostly by imported semiconductors.”</li>
<li>“YMTC, based in Wuhan, is China’s leading producer of NAND memory.”</li>
<li>“China’s leaders were willing to do almost anything in their fight against the coronavirus, but their effort to build a semiconductor industry took priority.”</li>
<li>“The U.S. banned sales of chips to firms like Huawei.”</li>
<li>“Made in China 2025 would have ended up like China’s previous industrial policy efforts.”</li>
<li>“China spent more money importing semiconductors than oil.”</li>
<li>“China’s state-backed Big Fund invested over $1 billion in Tsinghua Uni Group.”</li>
<li>“The 5G future will reset the balance of military power.”</li>
<li>“China’s most important technology rests on a fragile foundation of imported silicon.”</li>
<li>“The future of war will be defined by computing power.”</li>
</ol>
</section>
</section>
<section id="facts-3" class="level2">
<h2 class="anchored" data-anchor-id="facts-3">Facts</h2>
<ol type="1">
<li>YMTC in Wuhan symbolizes China’s focus on developing its semiconductor industry.</li>
<li>U.S. export controls have intensified China’s efforts to establish technological independence in semiconductors.</li>
<li>China’s response to these controls is likened to the U.S.’s reaction to the Sputnik launch.</li>
<li>Despite heavy investment, China’s semiconductor independence efforts face significant challenges.</li>
<li>The narrative questions the effectiveness of China’s massive investment in the semiconductor industry.</li>
<li>China’s pursuit of technological independence is hindered by the global nature of the semiconductor supply chain.</li>
<li>China is exploring alternative architectures like RISC-V to reduce foreign dependency.</li>
<li>China’s strategy includes investment in various semiconductor technologies and materials.</li>
<li>The chapter highlights the geopolitical implications of China’s ambitions in the semiconductor field.</li>
<li>The government’s influence in China’s semiconductor sector is a key theme in the chapter.</li>
</ol>
<section id="recommendations-3" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-3">Recommendations</h3>
<ol type="1">
<li>Study the strategic implications of China’s semiconductor industry development, particularly in response to U.S. export controls.</li>
<li>Analyze the challenges and risks associated with China’s massive investment in semiconductor technology.</li>
<li>Investigate the role of companies like YMTC in China’s quest for technological independence.</li>
<li>Explore the geopolitical and economic impacts of China’s semiconductor ambitions.</li>
<li>Assess the potential of alternative semiconductor architectures and materials in reducing China’s reliance on foreign technology.</li>
<li>Consider the effectiveness of China’s national strategies in achieving semiconductor independence.</li>
<li>Examine the global semiconductor industry dynamics in the context of China’s technological efforts.</li>
<li>Reflect on the broader implications of China’s semiconductor strategy for international technology competition.</li>
<li>Understand the complexities and potential outcomes of China’s investment in the semiconductor sector.</li>
<li>Evaluate the long-term effects of China’s pursuit of semiconductor independence on global technology leadership and market dynamics.</li>
</ol>
</section>
</section>
<section id="shortages-and-supply-chains" class="level2">
<h2 class="anchored" data-anchor-id="shortages-and-supply-chains">Shortages and Supply Chains</h2>
<p>Chapter 53 discusses the semiconductor shortages and supply chain issues, particularly during the COVID-19 pandemic. It highlights President Biden’s emphasis on the need for the U.S. to boost its investments in technology to compete globally. The chapter delves into the semiconductor supply chain problems, exacerbated by the pandemic and strategic stockpiling by countries like China. It also covers the impact of these shortages on various industries, especially the automotive sector, and the U.S. government’s response to address these challenges. The chapter underscores the complex dynamics of the global semiconductor industry, including geopolitical aspects and the shifting landscape of chip manufacturing.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>The COVID-19 pandemic revealed the fragility and significance of semiconductor supply chains.</li>
<li>President Biden’s focus on strengthening U.S. investments in technology to maintain global competitiveness.</li>
<li>The impact of semiconductor shortages on industries like automotive, leading to significant production and revenue losses.</li>
<li>China’s strategic stockpiling of chips and the U.S.’s export controls contributing to global semiconductor shortages.</li>
<li>The shift in demand for various types of chips during the pandemic, including a surge in demand for PCs and servers.</li>
<li>The U.S. government’s interpretation of the chip shortage as a supply chain problem and its efforts to address it.</li>
<li>The broader implications of semiconductor supply chain issues for the global economy and technological advancement.</li>
<li>The dynamics between different countries and regions in the semiconductor industry, including the U.S., China, South Korea, and Taiwan.</li>
<li>The role of national policies and government interventions in shaping the semiconductor market and supply chains.</li>
<li>The challenges and strategies of semiconductor companies in navigating the complex and changing landscape of chip manufacturing and supply.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“For too long as a nation, we haven’t been making the big, bold investments we need to outpace our global competitors,” - President Biden.</li>
<li>“The world produced more chips in 2021 than ever before, over 1.1 trillion semiconductor devices.”</li>
<li>“The semiconductor shortage is mostly a story of demand growth rather than supply issues.”</li>
<li>“PC demand spiked in 2020, as millions of people upgraded their computers to work from home.”</li>
<li>“The world’s biggest auto companies can use over a thousand chips in each car.”</li>
<li>“The semiconductor industry… had a banner year.”</li>
<li>“Countries and governments can often find ways around choke points.”</li>
<li>“The substantial increase in chip production during both 2020 and 2021 is not a sign that multinational supply chains are broken. It’s a sign that they’ve worked.”</li>
<li>“Governments should think harder about semiconductor supply chains than they used to.”</li>
<li>“The entire world’s dependence on Taiwan… continues to grow.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>The COVID-19 pandemic significantly impacted semiconductor supply chains.</li>
<li>The U.S. government, under President Biden, focused on addressing technology investment to compete globally.</li>
<li>The automotive industry faced substantial losses due to semiconductor shortages.</li>
<li>China’s stockpiling and U.S. export controls contributed to global chip shortages.</li>
<li>There was a significant increase in demand for chips used in PCs and servers during the pandemic.</li>
<li>The U.S. government interpreted the chip shortage as a supply chain issue and initiated measures to address it.</li>
<li>The semiconductor shortage highlighted the interconnected nature of global supply chains.</li>
<li>The global semiconductor industry experienced a record production year in 2021.</li>
<li>National policies and government interventions play a crucial role in the semiconductor market.</li>
<li>The global reliance on Taiwanese semiconductor production continues to increase.</li>
</ol>
</section>
<section id="recommendations-4" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-4">Recommendations</h3>
<ol type="1">
<li>Analyze the impact of the COVID-19 pandemic on global semiconductor supply chains.</li>
<li>Study the U.S. government’s response to semiconductor shortages and its strategy to enhance technology investments.</li>
<li>Investigate the causes and consequences of semiconductor shortages in various industries.</li>
<li>Explore the geopolitical aspects of semiconductor production and</li>
</ol>
<p>trade, especially between the U.S. and China.</p>
<ol start="5" type="1">
<li>Assess the effectiveness of national policies and government interventions in addressing semiconductor supply chain issues.</li>
<li>Consider the changing demand dynamics for different types of semiconductor chips during the pandemic.</li>
<li>Examine the role of Taiwan in the global semiconductor industry and the implications of its central position.</li>
<li>Reflect on the broader implications of semiconductor shortages for global economic stability and technological advancement.</li>
<li>Understand the complexities of managing semiconductor supply chains in a globalized economy.</li>
<li>Evaluate the long-term effects of the pandemic on the semiconductor industry and global technology markets.</li>
</ol>
</section>
</section>
<section id="the-taiwan-dilemma" class="level2">
<h2 class="anchored" data-anchor-id="the-taiwan-dilemma">The Taiwan Dilemma</h2>
<p>Chapter 54 discusses the geopolitical tensions surrounding Taiwan, focusing on its critical role in the global semiconductor industry. The chapter highlights TSMC (Taiwan Semiconductor Manufacturing Company), the world’s largest contract chipmaker, as a central figure in these tensions. It delves into the risks posed by China’s increasing military activities near Taiwan and the potential implications of a conflict for the global semiconductor supply chain. The narrative explores various scenarios of how a conflict over Taiwan could unfold, emphasizing the strategic importance of the island due to its semiconductor production capabilities and the global reliance on these technologies.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>TSMC’s pivotal role in the global semiconductor industry makes Taiwan a focal point in U.S.-China geopolitical tensions.</li>
<li>China’s military activities near Taiwan, including exercises and drills, heighten the risk of conflict and global economic disruption.</li>
<li>The potential scenarios for a conflict over Taiwan range from a full-scale invasion to limited military pressure.</li>
<li>The global economy’s dependency on Taiwan’s semiconductor industry is a significant factor in the geopolitical calculus of the U.S. and China.</li>
<li>The chapter discusses the strategic importance of TSMC’s chip manufacturing facilities and the risks posed by their location in a geopolitically sensitive area.</li>
<li>A conflict involving Taiwan could severely disrupt global semiconductor supply chains, impacting a wide range of industries.</li>
<li>The U.S. and China’s military strategies in the region are influenced by the strategic value of Taiwan’s semiconductor production.</li>
<li>The chapter examines the challenges in ensuring the security of Taiwan and its semiconductor industry.</li>
<li>The implications of Taiwan’s geopolitical situation extend beyond military concerns to global technological and economic stability.</li>
<li>The narrative explores the complex interplay between global technology markets, military strategy, and geopolitical dynamics centered around Taiwan.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“The world’s chip industry, as well as the assembly of all the electronic goods chips enable, depends more on the Taiwan Strait and the South China coast than any other chunk of the world’s territory except Silicon Valley.”</li>
<li>“TSMC’s chairman insisted that there was no reason for concern… ‘everybody wants to have a peaceful Taiwan Strait.’”</li>
<li>“China’s military exercises near Taiwan illustrate the potential for a conflict that could disrupt global semiconductor supply chains.”</li>
<li>“The risk to Taiwan’s semiconductor industry is a reflection of its strategic importance in the global technology landscape.”</li>
<li>“A conflict over Taiwan could have catastrophic implications for the world economy, given its central role in semiconductor production.”</li>
<li>“The U.S. and China are both keenly aware of the strategic value of Taiwan’s semiconductor industry.”</li>
<li>“Taiwan’s geopolitical situation is a key factor in global technology markets and military strategies.”</li>
<li>“Ensuring the security of Taiwan and its semiconductor industry is a complex challenge with global implications.”</li>
<li>“The world economy’s reliance on Taiwan’s semiconductor production heightens the stakes of any potential conflict.”</li>
<li>“The interplay of technology, military strategy, and geopolitics around Taiwan is a critical issue for global stability.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Taiwan, home to TSMC, is crucial to the global semiconductor industry.</li>
<li>The island is a focal point in the geopolitical tensions between the U.S. and China.</li>
<li>China’s military activities near Taiwan raise the risk of conflict.</li>
<li>The global economy heavily depends on Taiwan’s semiconductor production.</li>
<li>TSMC is the largest contract chipmaker in the world.</li>
<li>A conflict involving Taiwan could disrupt global semiconductor supply chains.</li>
<li>The U.S. and China’s military strategies consider the strategic value of Taiwan’s semiconductor industry.</li>
<li>Taiwan’s geopolitical situation is complex and has far-reaching implications.</li>
<li>The security of Taiwan’s semiconductor industry is a significant global concern.</li>
<li>The stability of global technology markets is closely tied to Taiwan’s geopolitical situation.</li>
</ol>
</section>
<section id="recommendations-5" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-5">Recommendations</h3>
<ol type="1">
<li>Study the strategic implications of Taiwan’s role in the global semiconductor industry.</li>
<li>Analyze the potential impact of geopolitical tensions involving Taiwan on</li>
</ol>
<p>global technology markets.</p>
<ol start="3" type="1">
<li>Explore the scenarios and consequences of a military conflict over Taiwan.</li>
<li>Assess the global economic risks associated with disruptions in Taiwan’s semiconductor production.</li>
<li>Investigate the strategies of the U.S. and China regarding Taiwan and its semiconductor industry.</li>
<li>Examine the challenges in ensuring the security and stability of Taiwan’s semiconductor supply chain.</li>
<li>Consider the broader implications of Taiwan’s geopolitical situation for global technology and economic stability.</li>
<li>Reflect on the interplay of military strategy, technology markets, and geopolitics in the context of Taiwan.</li>
<li>Understand the complexities of managing global technology supply chains in a geopolitically sensitive environment.</li>
<li>Evaluate the long-term effects of Taiwan’s situation on global semiconductor production and technology leadership.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-8/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 7: China’s Challenge</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-7/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Made in China</li>
<li>Call Forth the Assault</li>
<li>Technology Transfer</li>
<li>“Merges Are Bound to Happen”</li>
<li>The Rise of Huawei</li>
<li>The 5G Future</li>
<li>The Next Offset</li>
</ul>
<section id="made-in-china" class="level2">
<h2 class="anchored" data-anchor-id="made-in-china">Made in China</h2>
<p>Chapter 42 explores China’s ambitious strategy to become a leader in the global semiconductor industry. The chapter delves into Xi Jinping’s policies emphasizing cybersecurity and informatization as pillars of national security and modernization. It highlights China’s reliance on foreign technologies, especially in semiconductors, despite its success in building large Internet companies. Xi’s efforts to reduce this dependence and achieve technological self-reliance are discussed, including strategies to develop domestic chip manufacturing capabilities and reduce reliance on foreign chips, particularly from the U.S. and its allies.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>Xi Jinping emphasized the critical importance of cybersecurity and informatization for China’s national security and modernization.</li>
<li>China’s technological development, particularly in the digital realm, was heavily reliant on imported semiconductors, despite the success of its internet companies.</li>
<li>Xi aimed to reduce China’s dependence on foreign technologies and enhance its self-reliance in core technologies, including semiconductors.</li>
<li>China’s efforts to build its semiconductor industry involved strategies like government investment, luring home trained scientists and engineers, and technology transfer partnerships.</li>
<li>The chapter illustrates China’s approach to leveraging its market size to negotiate technology transfers and training from foreign firms.</li>
<li>Xi’s policies were driven by a sense of vulnerability regarding China’s reliance on foreign, particularly American, technology.</li>
<li>The chapter discusses the disparity between China’s success in software and its reliance on foreign hardware for critical technologies.</li>
<li>China’s ambition to become a semiconductor powerhouse was part of a broader strategy to ascend to great power status and achieve national rejuvenation.</li>
<li>The semiconductor industry was seen as a key area where China could gain a competitive edge and reduce vulnerabilities in its supply chain.</li>
<li>China’s leaders recognized the strategic importance of domestically produced semiconductors in supporting its growing technological infrastructure.</li>
<li>The development of China’s semiconductor industry was seen as essential to avoid supply chain vulnerabilities and assert technological independence.</li>
<li>China’s aspiration to produce core technologies aimed to transform its economic model from low-profit manufacturing to high-value technology production.</li>
<li>The chapter reflects on China’s historical context and current strategies to develop a competitive semiconductor industry.</li>
<li>Xi Jinping’s leadership was pivotal in driving China’s focus on technological development, particularly in semiconductors.</li>
<li>The chapter underscores the geopolitical implications of China’s pursuit of semiconductor independence and its impact on global technology dynamics.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“Without cybersecurity, there is no national security,” declared Xi Jinping in 2014.</li>
<li>“China’s digital world runs on digits, ones and zeros, that are processed and stored mostly by imported semiconductors.”</li>
<li>“China’s tech giants depend on data centers full of foreign, largely U.S.-produced chips.”</li>
<li>“The vital gate of the supply chain is grasped in the hands of others,” Xi declared in 2016.</li>
<li>“China’s leaders didn’t need to be paranoid to think their country should build more chips at home.”</li>
<li>“The question for China’s leaders was how to pivot to producing the kind of chips the world coveted.”</li>
<li>“China can only win more valuable business if it produces what Beijing’s leaders call core technologies.”</li>
<li>“Millions of Chinese are involved in assembling the phones, but Apple makes most of the money.”</li>
<li>“China spent more money importing semiconductors than oil.”</li>
<li>“China’s most important technology rests on a fragile foundation of imported silicon.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>Xi Jinping emphasized the importance of cybersecurity and informatization for China’s national security.</li>
<li>China’s digital economy and technological advancements are heavily reliant on imported semiconductors.</li>
<li>China aims to reduce its dependence on foreign technologies and enhance self-reliance in semiconductors.</li>
<li>Strategies to develop China’s semiconductor industry include government investment, talent repatriation, technology transfer, and leveraging market size.</li>
<li>China’s reliance on foreign technology is seen as a vulnerability and a barrier to achieving greater economic and technological independence.</li>
<li>Xi Jinping’s leadership focused on transforming China’s economic model to high-value technology production.</li>
<li>The development of a domestic semiconductor industry is a strategic priority for China.</li>
<li>China’s pursuit of semiconductor independence has significant geopolitical implications.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li>Study the strategic importance of cybersecurity and informatization in national security policies, particularly in China.</li>
<li>Analyze the implications of China’s reliance on imported semiconductors and its efforts to develop domestic capabilities.</li>
<li>Explore the geopolitical and economic impacts of China’s ambition to become a semiconductor powerhouse.</li>
<li>Assess the effectiveness of China’s strategies to develop its semiconductor industry, including government investment and technology partnerships.</li>
<li>Consider the role of leadership in driving national technological agendas, as exemplified by Xi Jinping’s focus on semiconductors.</li>
<li>Reflect on the global implications of China’s pursuit of technological self-reliance and independence.</li>
<li>Investigate the challenges and opportunities in China’s transformation from a manufacturing-based economy to a technology-driven one.</li>
<li>Examine the impact of China’s technological ambitions on global supply chains and trade dynamics.</li>
<li>Understand the broader context of China’s technological development within its national rejuvenation goals.</li>
<li>Evaluate the potential outcomes of China’s efforts to achieve semiconductor independence on the global technology landscape.</li>
</ol>
</section>
</section>
<section id="call-forth-the-assault" class="level2">
<h2 class="anchored" data-anchor-id="call-forth-the-assault">Call Forth the Assault</h2>
<p>Chapter 43 discusses China’s ambitious goal to achieve semiconductor independence under Xi Jinping’s leadership. It contrasts Xi’s international rhetoric of economic openness with his domestic emphasis on self-reliance in core technologies, particularly semiconductors. The chapter outlines China’s heavy reliance on imported chips, despite its significant advancements in the digital realm. Xi’s call for a technological assault emphasizes the urgency to develop domestic chip production capabilities, reduce foreign dependence, and gain a competitive edge in the global market.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>Xi Jinping’s vision for China includes a strong emphasis on cybersecurity and informatization as pillars of national security.</li>
<li>Despite its success in creating large internet companies, China remains heavily reliant on imported semiconductors.</li>
<li>Xi aims to reduce China’s dependence on foreign technology, particularly in the semiconductor sector.</li>
<li>The chapter details China’s strategies to develop its semiconductor industry, including attracting talent, forming technology partnerships, and leveraging its market size.</li>
<li>Xi’s rhetoric underscores a vulnerability and strategic need to build more chips domestically.</li>
<li>The disparity between China’s software success and hardware dependence is highlighted.</li>
<li>China’s ambition to become a semiconductor leader is part of a broader strategy for national rejuvenation and technological independence.</li>
<li>The chapter discusses the importance of domestically produced semiconductors for China’s growing technological infrastructure.</li>
<li>China’s efforts to produce core technologies aim to transform its economy from low-profit manufacturing to high-tech production.</li>
<li>The geopolitical implications of China’s push for semiconductor independence are explored, emphasizing its impact on global technology dynamics.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Without cybersecurity, there is no national security,” - Xi Jinping, 2014.</li>
<li>“China’s tech giants depend on data centers full of foreign, largely U.S.-produced chips.”</li>
<li>“The vital gate of the supply chain is grasped in the hands of others,” - Xi Jinping, 2016.</li>
<li>“We must promote strong alliances and attack strategic passes in a coordinated manner.”</li>
<li>“China spent more money importing semiconductors than oil.”</li>
<li>“The chip industry was changing in ways that weren’t favorable to China.”</li>
<li>“China’s leaders didn’t need to be paranoid to think their country should build more chips at home.”</li>
<li>“China can only win more valuable business if it produces what Beijing’s leaders call core technologies.”</li>
<li>“Millions of Chinese are involved in assembling the phones, but Apple makes most of the money.”</li>
<li>“China’s most important technology rests on a fragile foundation of imported silicon.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>Xi Jinping has placed significant emphasis on cybersecurity and informatization for China’s national security.</li>
<li>China heavily relies on imported semiconductors, despite having large internet companies.</li>
<li>Xi is focused on reducing China’s dependence on foreign technology and enhancing self-reliance in semiconductors.</li>
<li>China’s strategies for developing its semiconductor industry involve government investment, technology transfer partnerships, and leveraging its market size.</li>
<li>There is a strategic need for China to increase its domestic chip production.</li>
<li>China’s semiconductor ambition is part of its broader strategy for national rejuvenation.</li>
<li>The development of China’s semiconductor industry is seen as essential to avoid supply chain vulnerabilities.</li>
<li>China aims to transform from a low-profit manufacturing economy to a high-tech production model.</li>
<li>The geopolitical implications of China’s semiconductor independence efforts are significant.</li>
</ol>
</section>
<section id="recommendations-1" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-1">Recommendations</h3>
<ol type="1">
<li><p>Examine the strategic importance of cybersecurity and informatization in national security, with a focus on China’s policies.</p></li>
<li><p>Analyze the challenges and strategies in reducing China’s reliance on imported semiconductors and achieving technological self-reliance.</p></li>
<li><p>Investigate the geopolitical and economic impacts of China’s ambition to become a global semiconductor leader.</p></li>
<li><p>Explore the implications of China’s heavy dependence on foreign chips for its technological infrastructure.</p></li>
<li><p>Consider the role of leadership in shaping national technology agendas, using Xi Jinping’s focus on semiconductors as a case study.</p></li>
<li><p>Assess the impact of China’s technological ambitions on global supply chains and trade dynamics.</p></li>
<li><p>Study the effectiveness of China’s strategies in developing its semiconductor industry, including talent attraction and technology partnerships.</p></li>
<li><p>Reflect on the broader context of China’s technological development and its impact on global technology dynamics.</p></li>
<li><p>Understand the challenges in transforming China’s economy from manufacturing-based to technology-driven.</p></li>
<li><p>Evaluate the potential outcomes of China’s efforts to achieve semiconductor independence and its implications for the global technology landscape.</p></li>
</ol>
</section>
</section>
<section id="technology-transfer" class="level2">
<h2 class="anchored" data-anchor-id="technology-transfer">Technology Transfer</h2>
<p>Chapter 44 discusses the complex dynamics of technology transfer between U.S. tech firms and China. It focuses on China’s efforts to gain access to advanced semiconductor technology, highlighting the strategies employed by major U.S. companies like IBM, Qualcomm, and AMD in navigating this landscape. The chapter sheds light on the delicate balance these companies struck between accessing the lucrative Chinese market and protecting their technological assets. It also touches on the geopolitical implications of these technology transfers and their impact on the global semiconductor industry.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>China’s strategy to become a semiconductor leader involves acquiring technology from foreign companies.</li>
<li>U.S. tech firms, like IBM, Qualcomm, and AMD, have engaged in various forms of technology transfer with China.</li>
<li>IBM’s approach included offering semiconductor technology to enhance cooperation in integrated circuit development with Chinese partners.</li>
<li>Qualcomm’s joint venture with a Chinese company to develop server chips represented a strategic move to gain a foothold in China’s market.</li>
<li>AMD’s controversial deal to license the production of modified x86 chips for the Chinese market exemplifies the complexities of technology transfer.</li>
<li>The chapter highlights the challenges faced by U.S. companies in balancing business interests with national security concerns.</li>
<li>Intel’s reluctance to engage in similar deals with China contrasts with other American firms’ strategies.</li>
<li>China’s strong-arming tactics to pressure U.S. companies into technology transfers are discussed.</li>
<li>The chapter explores the broader implications of technology transfers on U.S. competitiveness and China’s semiconductor ambitions.</li>
<li>The geopolitical tension arising from these technology transfers and their impact on the U.S.-China technological rivalry is a key theme.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“China’s digital world runs on digits… processed and stored mostly by imported semiconductors.”</li>
<li>“The vital gate of the supply chain is grasped in the hands of others,” - Xi Jinping.</li>
<li>“IBM’s decision to trade technology for market access made business sense.”</li>
<li>“Qualcomm agreed to a joint venture… to develop server chips.”</li>
<li>“The American chipmakers…were looking for a competitive advantage.”</li>
<li>“China spent more money importing semiconductors than oil.”</li>
<li>“Intel, which dominated sales of semiconductors for servers, had few incentives to cut deals with Beijing.”</li>
<li>“IBM would open its chip technology to Chinese partners, enabling them to create… homegrown computer systems.”</li>
<li>“China’s leaders didn’t need to be paranoid to think their country should build more chips at home.”</li>
<li>“China can only win more valuable business if it produces what Beijing’s leaders call core technologies.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>China is aggressively pursuing technology transfer to develop its semiconductor industry.</li>
<li>U.S. tech firms, including IBM, Qualcomm, and AMD, have engaged in technology transfer with Chinese entities.</li>
<li>IBM’s strategy involved offering semiconductor technology to Chinese partners for integrated circuit development.</li>
<li>Qualcomm’s joint venture in China was aimed at developing server chips.</li>
<li>AMD’s deal to license x86 chip production in China was controversial and seen as a risk to U.S. interests.</li>
<li>U.S. companies face challenges in balancing market access in China with national security concerns.</li>
<li>China employs strong-arming tactics to acquire foreign technology.</li>
<li>The technology transfers are part of China’s broader strategy to reduce dependence on foreign semiconductors.</li>
<li>These activities have significant implications for the global semiconductor industry and U.S.-China relations.</li>
<li>The impact of these technology transfers extends to geopolitical tensions and the technological rivalry between the U.S. and China.</li>
</ol>
</section>
<section id="recommendations-2" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-2">Recommendations</h3>
<ol type="1">
<li>Analyze the strategic motivations behind China’s pursuit of foreign semiconductor technology.</li>
<li>Study the approaches of U.S. tech firms like IBM, Qualcomm, and AMD in managing technology transfer to China.</li>
<li>Examine the balance between market access and technological protection for U.S. companies in China.</li>
<li>Assess the</li>
</ol>
<p>geopolitical implications of technology transfers in the U.S.-China semiconductor rivalry.</p>
<ol start="5" type="1">
<li>Investigate the impact of these transfers on global semiconductor industry dynamics.</li>
<li>Explore the challenges and opportunities faced by U.S. tech firms in the Chinese market.</li>
<li>Consider the role of national security concerns in shaping U.S. tech firms’ strategies in China.</li>
<li>Reflect on the broader implications of China’s semiconductor ambitions for global technology leadership.</li>
<li>Understand the complexities of U.S.-China relations in the context of technology transfers.</li>
<li>Evaluate the long-term effects of these technology transfers on the competitiveness of the U.S. semiconductor industry.</li>
</ol>
</section>
</section>
<section id="merges-are-bound-to-happen" class="level2">
<h2 class="anchored" data-anchor-id="merges-are-bound-to-happen">“Merges Are Bound to Happen”</h2>
<p>Chapter 45 covers Zhao Weiguo’s journey from a rural upbringing to becoming a chip billionaire in China. Zhao, who attended Tsinghua University, later shifted from a technical role to investment, eventually leading Tsinghua Uni Group. The group, linked to the university, was involved in various investments, including real estate, but later focused on semiconductor technology. Zhao’s aggressive strategy in the semiconductor industry involved acquiring several Chinese and international chip companies, reflecting China’s broader ambition to become a global leader in this field. His actions aligned with Xi Jinping’s call for technological self-reliance, especially in semiconductors.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>Zhao Weiguo’s rise from a rural background to a leading figure in China’s semiconductor industry.</li>
<li>Tsinghua Uni Group’s transformation under Zhao from a university-affiliated investment group to a major player in the semiconductor sector.</li>
<li>The strategic acquisitions of Chinese and foreign semiconductor firms by Tsinghua Uni Group as part of China’s national priority in chip technology.</li>
<li>Zhao’s partnership with Intel aimed at combining wireless modem and smartphone processor technologies.</li>
<li>The aggressive investment and expansion approach of Tsinghua Uni Group in the semiconductor industry, including a failed bid for Micron and other U.S. firms.</li>
<li>The geopolitical and economic implications of China’s push for semiconductor independence and its impact on global technology dynamics.</li>
<li>Zhao’s role in aligning Tsinghua Uni Group’s strategies with Xi Jinping’s national directive for technological self-reliance.</li>
<li>The challenges and controversies surrounding Tsinghua Uni Group’s investments and acquisitions in the semiconductor industry.</li>
<li>The broader context of China’s state-backed investment strategies in pursuing global semiconductor leadership.</li>
<li>Zhao’s perspective on the inevitability of mergers between big U.S. and Chinese companies in the semiconductor sector.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“China’s digital world runs on digits… processed and stored mostly by imported semiconductors.”</li>
<li>“The vital gate of the supply chain is grasped in the hands of others,” - Xi Jinping.</li>
<li>“Zhao Weiguo… ended up in rural China… before attending Tsinghua University.”</li>
<li>“Tsinghua Uni Group’s semiconductor strategy was a response to the government’s wishes.”</li>
<li>“Mergers between big U.S. and Chinese companies are bound to happen,” - Zhao Weiguo.</li>
<li>“China spent more money importing semiconductors than oil.”</li>
<li>“Tsinghua Uni Group… was investing in real estate and online gambling.”</li>
<li>“China’s state-backed Big Fund invested over $1 billion in Tsinghua Uni Group.”</li>
<li>“Zhao pursued stakes and joint ventures with several of Taiwan’s large chip assemblers.”</li>
<li>“Call forth the assault,” - Xi Jinping, in the context of China’s semiconductor strategy.</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>Zhao Weiguo rose from a humble background to lead Tsinghua Uni Group.</li>
<li>Tsinghua Uni Group shifted its focus under Zhao to become a key player in the semiconductor industry.</li>
<li>The group made strategic acquisitions and investments in the semiconductor sector, both domestically and internationally.</li>
<li>Zhao’s approach aligned with Xi Jinping’s directive for China to achieve technological self-reliance.</li>
<li>Tsinghua Uni Group’s strategies in the semiconductor industry reflect China’s broader national ambitions.</li>
<li>The group’s investment activities have significant geopolitical and economic implications.</li>
<li>China’s pursuit of semiconductor independence has led to aggressive investment and acquisition strategies.</li>
<li>Tsinghua Uni Group’s activities in the semiconductor sector have been controversial and faced challenges.</li>
<li>The push for semiconductor independence is part of China’s larger goal to become a global technology leader.</li>
<li>Zhao Weiguo’s actions in the semiconductor industry are reflective of the Chinese government’s strategic objectives.</li>
</ol>
</section>
<section id="resources" class="level3">
<h3 class="anchored" data-anchor-id="resources">Resources</h3>
<ol type="1">
<li>Person: Zhao Weiguo and his leadership in China’s semiconductor industry.</li>
<li>Company: Tsinghua Uni Group and its role in China’s semiconductor strategy.</li>
<li>Industry Trend: China’s national priority in semiconductor technology.</li>
<li>Geopolitical Context: The implications of China’s semiconductor strategy on global technology dynamics.</li>
<li>Economic Strategy: China’s investment and acquisition strategies in the semiconductor sector.</li>
<li>Technology: The importance of semiconductors in China’s technological infrastructure.</li>
<li>Market Dynamics: The global semiconductor industry and China’s role in it.</li>
<li>National Policy: China’s directive for technological self-reliance and its impact on the semiconductor industry.</li>
<li>Industry Evolution: The changing landscape of the global semiconductor industry due to China’s strategies.</li>
<li>Geopolitical Implications: The impact of China’s actions in the semiconductor sector on international relations and trade.</li>
</ol>
</section>
<section id="recommendations-3" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-3">Recommendations</h3>
<ol type="1">
<li><p>Study the impact of individual leadership, like Zhao Weiguo’s, on national technology strategies.</p></li>
<li><p>Analyze the role of companies like Tsinghua Uni Group in shaping China’s semiconductor industry.</p></li>
<li><p>Explore the geopolitical and economic implications of China’s aggressive semiconductor strategy.</p></li>
<li><p>Assess the impact of China’s push for semiconductor independence on global technology dynamics.</p></li>
<li><p>Investigate the broader context of China’s state-backed investment strategies in the semiconductor sector.</p></li>
<li><p>Consider the challenges and controversies surrounding investment and acquisition strategies in the semiconductor industry.</p></li>
<li><p>Reflect on the global implications of China’s pursuit of semiconductor leadership.</p></li>
<li><p>Understand the complexities of national directives like technological self-reliance in shaping industry strategies.</p></li>
<li><p>Examine the role of China in the global semiconductor industry and its impact on market dynamics.</p></li>
<li><p>Evaluate the long-term effects of China’s semiconductor strategies on international technology leadership and competition.</p></li>
</ol>
</section>
</section>
<section id="the-rise-of-huawei" class="level2">
<h2 class="anchored" data-anchor-id="the-rise-of-huawei">The Rise of Huawei</h2>
<p>Chapter 46 delves into the story of Ren Zhengfei and the growth of Huawei as a global technology powerhouse. The chapter outlines Huawei’s journey from a small telecom equipment provider to one of the world’s largest providers of mobile internet infrastructure and smartphones. It highlights Huawei’s strategy of producing high-quality technology at lower costs and its aggressive global expansion. The chapter also discusses the controversies surrounding Huawei, including allegations of intellectual property theft and its complex relationship with the Chinese government.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>Ren Zhengfei’s transformation of Huawei from a small importer of telecom switches to a global technology leader.</li>
<li>Huawei’s role in the global telecom infrastructure, rivalling giants like Nokia and Ericsson.</li>
<li>The company’s success in the smartphone market, competing with Apple and Samsung.</li>
<li>Allegations of intellectual property theft and espionage against Huawei, contributing to its controversial reputation.</li>
<li>Huawei’s adoption of efficient manufacturing processes and emphasis on R&amp;D spending.</li>
<li>The company’s unique business model, differing significantly from other Chinese tech firms.</li>
<li>Huawei’s global orientation, contrasting with the domestic focus of other Chinese tech giants.</li>
<li>The impact of Western consulting firms, particularly IBM, on Huawei’s development and business processes.</li>
<li>The role of the Chinese government in supporting Huawei’s expansion.</li>
<li>Huawei’s investment in R&amp;D, positioning it as a major player in the tech ecosystem.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“China’s digital world runs on digits… processed and stored mostly by imported semiconductors.”</li>
<li>“Ren Zhengfei… ended up in rural China… before attending Tsinghua University.”</li>
<li>“Huawei has embraced foreign competition from its earliest days.”</li>
<li>“Huawei executives say they invest in R&amp;D because they’ve learned from Silicon Valley.”</li>
<li>“The company’s international orientation was visible from its founding in 1987.”</li>
<li>“Huawei’s equipment now plays an important role in transmitting the world’s data.”</li>
<li>“Huawei’s critics often allege that its success rests on a foundation of stolen intellectual property.”</li>
<li>“Huawei’s spending on R&amp;D is world-leading.”</li>
<li>“The company’s multi-billion dollar R&amp;D spending suggests a fundamentally different ethos than the ‘copy it’ mentality.”</li>
<li>“Huawei was successfully replicating what South Korea’s Samsung had done decades earlier.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>Huawei, founded by Ren Zhengfei, grew from a small telecom equipment importer to a global tech leader.</li>
<li>Huawei competes globally in the mobile internet infrastructure and smartphone markets.</li>
<li>The company has been embroiled in controversies, including allegations of intellectual property theft.</li>
<li>Huawei is known for its efficient manufacturing processes and high R&amp;D expenditure.</li>
<li>The company’s business model and global orientation differ from other Chinese tech firms.</li>
<li>Huawei received support from Western consulting firms like IBM and the Chinese government.</li>
<li>The company’s R&amp;D investment positions it as a key player in the global tech ecosystem.</li>
</ol>
</section>
<section id="recommendations-4" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-4">Recommendations</h3>
<ol type="1">
<li>Study the transformation of Huawei from a regional player to a global tech leader.</li>
<li>Analyze Huawei’s strategies for competing in the global telecom and smartphone markets.</li>
<li>Investigate the controversies surrounding Huawei, including intellectual property issues.</li>
<li>Explore the impact of R&amp;D investment on Huawei’s growth and market position.</li>
<li>Examine the role of government support and international partnerships in Huawei’s expansion.</li>
<li>Assess the unique business model of Huawei and its differentiation from other Chinese tech firms.</li>
<li>Consider the implications of Huawei’s growth for global tech dynamics and competition.</li>
<li>Reflect on the lessons from Huawei’s adoption of Western business practices.</li>
<li>Understand the geopolitical context of Huawei’s expansion and the responses from various governments.</li>
<li>Evaluate the long-term impact of Huawei’s strategies on the global technology landscape.</li>
</ol>
</section>
</section>
<section id="the-5g-future" class="level2">
<h2 class="anchored" data-anchor-id="the-5g-future">The 5G Future</h2>
<p>Chapter 47 explores the evolution and significance of 5G technology, focusing on its transformative impact on computing and the pivotal role of semiconductors. The chapter traces the history of mobile networking from its early stages to the advanced 5G networks, emphasizing the steady increase in data transmission capabilities. It discusses how 5G technology, driven by sophisticated semiconductors, is not just about improving phone capabilities but reshaping the landscape of mobile computing and connectivity. The chapter also highlights the role of companies like Huawei and Tesla in integrating advanced semiconductors into their products, illustrating the broader implications of 5G technology in various industries.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>5G technology represents a significant leap in mobile networking, enhancing data transmission capabilities and reshaping mobile computing.</li>
<li>The evolution of mobile networks from 1G to 5G reflects the steady increase in data transmission and the growing complexity of technology.</li>
<li>Advanced semiconductors are fundamental to the functioning of 5G networks, enabling more efficient data transmission and processing.</li>
<li>5G networks will facilitate a broader range of applications, including the Internet of Things (IoT), by connecting a vast array of devices.</li>
<li>The chapter discusses the transformative impact of 5G on industries like automotive, agriculture, and healthcare, where data collection and processing are crucial.</li>
<li>Huawei’s leading role in 5G technology development and deployment is highlighted, despite the controversies surrounding the company.</li>
<li>Tesla’s use of custom-designed chips for its electric and autonomous vehicles is an example of the growing integration of advanced semiconductors in various products.</li>
<li>The chapter explores the geopolitical implications of the race for 5G dominance, particularly between China and the U.S.</li>
<li>5G technology is expected to drive significant changes in consumer behavior and expectations regarding mobile and connected devices.</li>
<li>The development of 5G networks is seen as a critical factor in the future of global connectivity and technological advancement.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“5G isn’t really about phones; it’s about the future of computing.”</li>
<li>“The evolution from 1G to 5G is marked by a steady increase in the number of ones and zeros flying to and from cell phones.”</li>
<li>“5G will provide a similar leap forward in mobile networking as previous generations.”</li>
<li>“Semiconductors have been fundamental to the ability to send more data wirelessly.”</li>
<li>“Advanced semiconductors make it possible to pack more ones and zeros into a given frequency of radio waves.”</li>
<li>“Tesla’s cars resemble a smartphone… because of custom-designed chips.”</li>
<li>“The spread of electric vehicles, requiring specialized semiconductors, foretells an increase in the number and cost of chips in a typical car.”</li>
<li>“Huawei looked likely to play a bigger role in the construction of 5G networks than any other company.”</li>
<li>“China’s chip industry might rival Silicon Valley for influence by 2030.”</li>
<li>“The 5G future will reset the balance of military power.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>5G technology represents a major advancement in mobile networking, offering significantly enhanced data transmission capabilities.</li>
<li>The evolution of mobile networks from 1G to 5G has been marked by increasing complexity and data transmission efficiency.</li>
<li>Semiconductors play a crucial role in the functioning and advancement of 5G networks.</li>
<li>5G technology is expected to transform various industries by enabling the connection of a wide range of devices and facilitating data-intensive applications.</li>
<li>Companies like Huawei and Tesla are integrating advanced semiconductors into their products, demonstrating the impact of 5G in different sectors.</li>
<li>The development of 5G technology has significant geopolitical implications, particularly in the context of the U.S.-China technology race.</li>
<li>The deployment of 5G networks is poised to change consumer behaviors and expectations regarding mobile and connected technologies.</li>
<li>The future of global connectivity and technological progress is closely tied to the development and implementation of 5G networks.</li>
</ol>
</section>
<section id="recommendations-5" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-5">Recommendations</h3>
<ol type="1">
<li>Study the technological advancements and implications of 5G mobile networking.</li>
<li>Analyze the role of semiconductors in the development and functioning of 5G networks.</li>
<li>Explore the impact of 5G on various industries and its potential to transform consumer behavior.</li>
<li>Investigate the geopolitical dynamics surrounding the global race for 5G technology dominance.</li>
<li>Examine the integration of advanced semiconductor technology in products like electric vehicles and smartphones.</li>
<li>Assess the future prospects of global connectivity and technological advancement in the 5G era.</li>
<li>Consider the economic and strategic implications of companies like Huawei and Tesla in the 5G landscape.</li>
<li>Reflect on the changing consumer expectations and market dynamics in the context of 5G deployment.</li>
<li>Understand the potential of 5G technology in driving significant changes in industries such as healthcare, agriculture, and automotive.</li>
<li>Evaluate the long-term effects of 5G technology on global technological progress and connectivity.</li>
</ol>
</section>
</section>
<section id="the-next-offset" class="level2">
<h2 class="anchored" data-anchor-id="the-next-offset">The Next Offset</h2>
<p>Chapter 48 discusses the evolving nature of warfare and the crucial role of computing power in modern military strategy. It focuses on how advancements in semiconductors and artificial intelligence (AI) are reshaping the dynamics of global military power, particularly between the U.S. and China. The chapter details China’s investment in high-tech weaponry and its efforts to match or surpass U.S. capabilities in areas like AI and cybersecurity. It also highlights the importance of semiconductor technology in various military applications, from autonomous drones to cyber warfare, and the strategic implications of these developments.</p>
<section id="ideas-6" class="level3">
<h3 class="anchored" data-anchor-id="ideas-6">Ideas</h3>
<ol type="1">
<li>Modern warfare is increasingly defined by computing power, with semiconductors playing a central role.</li>
<li>China has heavily invested in high-tech weaponry, aiming to offset U.S. military advantages.</li>
<li>The development and deployment of AI in military systems are a key focus for both the U.S. and China.</li>
<li>Semiconductor technology underpins various advanced military applications, including autonomous drones and cyber warfare capabilities.</li>
<li>The U.S. military’s historical technological edge is being challenged by China’s advancements.</li>
<li>China’s military strategies involve leveraging AI and computing power to gain a competitive advantage.</li>
<li>The chapter discusses the geopolitical ramifications of the race for technological superiority in military applications.</li>
<li>The U.S. seeks to maintain its military advantage through innovation in AI and autonomous systems.</li>
<li>China’s approach to military modernization reflects its broader ambitions for global technological leadership.</li>
<li>The intersection of military needs and semiconductor technology highlights the strategic importance of chip manufacturing and design.</li>
</ol>
</section>
<section id="quotes-6" class="level3">
<h3 class="anchored" data-anchor-id="quotes-6">Quotes</h3>
<ol type="1">
<li>“The future of war will be defined by computing power.”</li>
<li>“China’s investment in high-tech weaponry abandoned Mao-era doctrines of a low-tech people’s war.”</li>
<li>“Beijing’s aim isn’t simply to match the U.S. system by system, but to develop capabilities that could offset American advantages.”</li>
<li>“China thinks it can match the U.S. missile for missile and bite for bite.”</li>
<li>“The Soviet Union could match the U.S. missile for missile, but not bite for bite.”</li>
<li>“Whichever country can produce more ones and zeroes will have a serious military advantage.”</li>
<li>“Xi Jinping himself has urged the PLA to accelerate the development of military intelligentization.”</li>
<li>“DARPA developed the technology that made the 1970s offset possible.”</li>
<li>“China’s capabilities when it comes to AI systems are undeniably impressive.”</li>
<li>“The U.S. faces the same basic dilemma today; China can deploy more ships and planes than the U.S.”</li>
</ol>
</section>
<section id="facts-6" class="level3">
<h3 class="anchored" data-anchor-id="facts-6">Facts</h3>
<ol type="1">
<li>The nature of warfare is evolving, with a growing emphasis on computing power and technology.</li>
<li>China’s military modernization includes a focus on high-tech weaponry and AI.</li>
<li>The U.S. and China are engaged in a strategic race to develop advanced military technologies.</li>
<li>Semiconductors are crucial in various military technologies, including drones and cyber warfare systems.</li>
<li>The U.S. military’s technological superiority is being challenged by China’s advancements.</li>
<li>AI and computing power are central to modern military strategies and capabilities.</li>
<li>The global military balance is influenced by advancements in semiconductor technology.</li>
<li>China’s military strategies are part of its broader ambition for technological and geopolitical leadership.</li>
<li>The U.S. seeks to maintain its military edge through innovation in technology.</li>
<li>The race for technological superiority in military applications has significant geopolitical implications.</li>
</ol>
</section>
<section id="recommendations-6" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-6">Recommendations</h3>
<ol type="1">
<li>Study the impact of computing power and AI on the evolution of modern warfare.</li>
<li>Analyze the strategic importance of semiconductors in military technology.</li>
<li>Explore the geopolitical implications of the U.S.-China rivalry in military technology development.</li>
<li>Assess the role of technological advancements in shaping global military power dynamics.</li>
<li>Investigate the significance of AI and autonomous systems in military strategies.</li>
<li>Consider the challenges and opportunities in developing advanced military technologies.</li>
<li>Examine the impact of organizations like DARPA</li>
</ol>
<p>on innovation in military technology.</p>
<ol start="8" type="1">
<li>Reflect on the global competition for technological superiority in military applications.</li>
<li>Understand the strategic implications of military technology advancements for national security.</li>
<li>Evaluate the long-term effects of the race for technological dominance on global military balance and security.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-7/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 6: Offshore Innovation?</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-6/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>“Real Men Have Fabs”</li>
<li>The Fabless Revolution</li>
<li>Morris Chang’s Grand Alliance</li>
<li>Apple Silicon</li>
<li>EUV</li>
<li>There Is No Plan B</li>
<li>How Intel Forgot Innovation</li>
</ul>
<section id="real-men-have-fabs" class="level2">
<h2 class="anchored" data-anchor-id="real-men-have-fabs">“Real Men Have Fabs”</h2>
<p>Chapter 35 explores Jerry Sanders’ philosophy regarding semiconductor fabrication. Sanders, the founder of AMD, strongly believed in the importance of maintaining in-house manufacturing capabilities, contrasting with the rising trend of outsourcing to foundries like TSMC. The chapter discusses the economic and strategic implications of this philosophy, highlighting the evolution of the semiconductor industry and the shift towards fabless manufacturing.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li><strong>Sanders’ Belief in In-house Manufacturing</strong>: Jerry Sanders’ strong stance on the strategic importance of owning semiconductor fabrication plants.</li>
<li><strong>Shift to Outsourcing with Foundries like TSMC</strong>: The significant industry shift towards outsourcing manufacturing to foundries.</li>
<li><strong>Challenges of Maintaining Fabs</strong>: The economic and technological hurdles of sustaining fabs, particularly with increasing costs.</li>
<li><strong>Contrast with Fabless Trend</strong>: Sanders’ philosophy as a contrast to the emerging trend of fabless companies focusing on design and outsourcing production.</li>
<li><strong>Evolution Reflecting Globalization and Strategic Models</strong>: How the semiconductor industry’s evolution mirrors broader trends in globalization and strategic business approaches.</li>
<li><strong>Differing Views on Competitiveness and Innovation</strong>: The varied perspectives on the best path to competitiveness in the semiconductor industry, whether through maintaining or divesting fabs.</li>
<li><strong>Importance of Control Over Production</strong>: Sanders’ approach emphasizing control over the manufacturing process.</li>
<li><strong>Fabless Model and Design Innovation</strong>: How the fabless business model enables a focus on design innovation without manufacturing complexities.</li>
<li><strong>Shift to Fabless Manufacturing Impacting Innovation</strong>: The significant change in innovation and production approaches with the industry’s move to fabless manufacturing.</li>
<li><strong>Economic Implications of Fabs</strong>: Discussion of the high costs and risks associated with maintaining fabs.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“Jerry Sanders, the Rolex-clad, Rolls-Royce-driving brawler who founded AMD, liked to compare owning a semiconductor fab with putting a pet shark in your swimming pool.”</li>
<li>“He’d never give up his fabs.”</li>
<li>“The rise of foundries like TSMC made it possible for big chip firms to consider divesting their manufacturing operations and outsourcing to a foundry in Asia.”</li>
<li>“Sanders was committed to his fabs.”</li>
<li>“Each generation of technological improvement made fabs more expensive.”</li>
<li>“Morris Chang had drawn a similar conclusion several decades earlier, which is why he thought TSMC’s business model was superior.”</li>
<li>“A foundry like TSMC could fabricate chips for many chip designers.”</li>
<li>“The economics of this segment are different from logic and memory chips that must relentlessly shrink transistors to remain on the cutting edge.”</li>
<li>“Real men have fabs.”</li>
<li>“The biggest analog chip maker today is Texas Instruments.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>Jerry Sanders, founder of AMD, was known for his strong belief in the importance of owning semiconductor fabs.</li>
<li>The rise of foundries like TSMC marked a significant shift in the semiconductor industry towards outsourcing manufacturing.</li>
<li>Maintaining semiconductor fabs became increasingly expensive with each generation of technological improvement.</li>
<li>The fabless business model, focusing on chip design and outsourcing manufacturing, emerged as a significant trend in the semiconductor industry.</li>
<li>The chapter discusses the strategic and economic considerations in the decision to maintain or divest fabs in the semiconductor industry.</li>
<li>Texas Instruments is highlighted as the biggest analog chip maker today.</li>
<li>The memory market, particularly DRAM and NAND, has seen a push towards offshoring production, primarily in East Asia.</li>
<li>The number of firms capable of fabricating advanced logic chips has decreased due to the high costs and technological complexities involved.</li>
<li>The shift towards fabless manufacturing represents a broader trend of specialization and efficiency in the global economy.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li>Analyze the strategic implications of owning versus outsourcing semiconductor fabrication facilities.</li>
<li>Explore the economic and technological challenges associated with maintaining fabs in the semiconductor industry.</li>
<li>Consider the impact of the fabless business model on innovation and competitiveness in the semiconductor industry.</li>
<li>Study the evolution of the semiconductor industry, particularly the shift towards fabless manufacturing and its broader implications.</li>
<li>Reflect on the decisions of traditional semiconductor companies like AMD in contrast to new fabless companies.</li>
<li>Investigate the role of foundries like TSMC in transforming the semiconductor manufacturing landscape.</li>
<li>Assess the strategic and economic considerations of offshoring production in the semiconductor industry.</li>
<li>Examine the implications of the increasing cost and complexity of semiconductor fabrication on industry dynamics.</li>
<li>Understand the broader trends of specialization and efficiency in the global economy as exemplified by the semiconductor industry.</li>
<li>Consider the perspectives of industry figures like Jerry Sanders on the future of manufacturing and innovation in semiconductors.</li>
</ol>
</section>
</section>
<section id="the-fabless-revolution" class="level2">
<h2 class="anchored" data-anchor-id="the-fabless-revolution">The Fabless Revolution</h2>
<p>Chapter 36 discusses the rise of fabless semiconductor companies in Silicon Valley. It chronicles the journey of companies like Nvidia and Qualcomm, which designed chips in-house but outsourced manufacturing, primarily to TSMC. The chapter highlights the impact of this model on the semiconductor industry, emphasizing the shift from traditional fabrication methods to innovative approaches in chip design and the strategic use of foundries.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li><strong>Rise of the Fabless Semiconductor Model</strong>: The revolution in the industry led by companies like Nvidia and Qualcomm focusing on in-house design and outsourcing manufacturing.</li>
<li><strong>Innovation and Growth through Fabless Model</strong>: This model’s contribution to rapid growth and innovation in the semiconductor sector, particularly in fields like computer graphics and mobile communications.</li>
<li><strong>Emphasis on Design Over Manufacturing</strong>: The significant operational change in semiconductor companies, emphasizing design rather than traditional manufacturing.</li>
<li><strong>Success of Nvidia in GPUs</strong>: The potential of the fabless model demonstrated by Nvidia’s achievements in graphics processor units.</li>
<li><strong>Qualcomm’s Mobile Communications Technology</strong>: The company’s pivotal role in advancing mobile communications technology through the fabless model.</li>
<li><strong>Democratization of Chip Design</strong>: How the emergence of fabless companies lowered barriers for startups and encouraged competition.</li>
<li><strong>Leveraging Manufacturing Expertise of Foundries</strong>: The ability of companies to focus on design and innovation while utilizing the manufacturing capabilities of foundries like TSMC.</li>
<li><strong>Importance of Parallel Processing</strong>: Nvidia’s expansion beyond graphics into applications like CUDA software.</li>
<li><strong>Rapid Innovation in Mobile Phone Technology</strong>: Qualcomm’s success in mobile technology as a testament to the fabless model’s efficiency.</li>
<li><strong>Expansion of Semiconductor Industry Scope</strong>: The fabless revolution’s role in developing new chip categories and technologies, broadening the semiconductor industry’s impact.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Real men might have fabs, but Silicon Valley’s new wave of semiconductor entrepreneurs didn’t.”</li>
<li>“The rise of foundries like TSMC made it possible for big chip firms to consider divesting their manufacturing operations.”</li>
<li>“Nvidia not only designed GPUs capable of handling 3D graphics but also devised a software ecosystem around them.”</li>
<li>“Making realistic graphics requires use of programs called shaders.”</li>
<li>“Qualcomm’s system would make it possible to fit far more cell phone calls into existing spectrum space.”</li>
<li>“Qualcomm has made hundreds of billions of dollars selling chips and licensing intellectual property.”</li>
<li>“It’s easy to lament the offshoring of semiconductor manufacturing, but companies like Qualcomm might not have survived if they’d had to invest billions of dollars each year building fabs.”</li>
<li>“By making possible mobile phones, advanced graphics, and parallel processing, fabless firms enabled entirely new types of computing.”</li>
<li>“Field-programmable gate arrays were pioneered by companies like Xilinx and Altera.”</li>
<li>“A fabulous business model could work, requiring only a good idea and a couple of million dollars in startup capital.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li><p>Nvidia and Qualcomm are examples of successful fabless semiconductor companies.</p></li>
<li><p>Nvidia specialized in GPUs for computer graphics and gaming, later expanding into parallel processing with CUDA.</p></li>
<li><p>Qualcomm played a pivotal role in the development of mobile communications technology, significantly contributing to 2G and later generations.</p></li>
<li><p>The fabless business model allowed for significant reductions in startup costs and entry barriers in the semiconductor industry.</p></li>
<li><p>The emergence of semiconductor foundries like TSMC facilitated the growth of fabless companies by providing manufacturing services.</p></li>
<li><p>Fabless companies contributed to the evolution of new computing paradigms, such as advanced mobile phones and graphics processing.</p></li>
<li><p>Field-programmable gate arrays, an innovation in chip technology, were developed by fabless companies like Xilinx and Altera.</p></li>
<li><p>The fabless model led to a democratization of chip design, enabling more companies to compete in the semiconductor industry.</p></li>
<li><p>The chapter discusses the impact of the fabless model on the global semiconductor supply chain and manufacturing landscape.</p></li>
<li><p>The success of fabless firms like Nvidia and Qualcomm highlights the shift in the semiconductor industry towards design innovation.</p></li>
</ol>
</section>
<section id="recommendations-1" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-1">Recommendations</h3>
<ol type="1">
<li>Study the strategic advantages and challenges of the fabless semiconductor model in the industry.</li>
<li>Analyze the impact of companies like Nvidia and Qualcomm on the evolution of the semiconductor sector.</li>
<li>Explore the role of foundries like TSMC in enabling the growth of fabless companies.</li>
<li>Consider the implications of the fabless model for innovation and competition in the semiconductor industry.</li>
<li>Examine the technological advancements brought about by fabless companies, especially in fields like mobile communications and graphics processing.</li>
<li>Assess the economic and technological shifts that led to the rise of the fabless model in the semiconductor industry.</li>
<li>Investigate the role of new technologies like field-programmable gate arrays in the evolution of chip design.</li>
<li>Reflect on the impact of the fabless model on global semiconductor supply chains and manufacturing landscapes.</li>
<li>Understand the broader trends of specialization and efficiency in the global economy as reflected in the semiconductor industry.</li>
<li>Evaluate the long-term effects of the shift towards design-centric approaches in the semiconductor sector.</li>
</ol>
</section>
</section>
<section id="morris-changs-grand-alliance" class="level2">
<h2 class="anchored" data-anchor-id="morris-changs-grand-alliance">Morris Chang’s Grand Alliance</h2>
<p>Chapter 37 focuses on the visionary leadership of Morris Chang, the founder of TSMC. It contrasts the fading era of semiconductor pioneers like Jerry Sanders of AMD with the rise of a new generation of leaders who embraced the fabless model. The chapter highlights Chang’s strategic foresight in recognizing the potential of smartphones and his commitment to maintaining TSMC’s leadership in the foundry business, especially during the financial crisis of 2008-2009.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li><strong>Morris Chang’s Pivotal Leadership at TSMC</strong>: Chang’s influence in transitioning the industry to a foundry-based model.</li>
<li><strong>Vision for the Impact of Mobile Devices</strong>: Anticipating the significance of mobile computing in the semiconductor sector.</li>
<li><strong>Contrast with Traditional Semiconductor Approaches</strong>: The differing approaches of companies like AMD with in-house fabrication versus TSMC’s fabless model.</li>
<li><strong>Chang’s “Grand Alliance” Strategy</strong>: Building a cooperative ecosystem through collaboration with various companies.</li>
<li><strong>Transition in Semiconductor Leadership</strong>: The shift from pioneers like Jerry Sanders to new executives with different business models.</li>
<li><strong>Strategic Investment During Economic Downturns</strong>: Chang’s decision to invest heavily during the financial crisis, reflecting his belief in the industry’s growth.</li>
<li><strong>Innovation and Capacity Expansion at TSMC</strong>: Commitment to maintaining market leadership through continuous innovation.</li>
<li><strong>Technological Advancements in Manufacturing</strong>: The shift to advanced manufacturing technologies like FinFET transistors.</li>
<li><strong>Chang’s Investment Focus Over Cost-Cutting</strong>: Prioritizing R&amp;D and capacity investment over traditional cost-cutting measures.</li>
<li><strong>TSMC’s Role as a Neutral Industry Player</strong>: Its ability to collaborate effectively without direct competition.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“Morris Chang remained, smoking his pipe in his office in Taiwan, a habit he defended as good for his health, or at least for his mood.”</li>
<li>“An era of wild wagers on impossible technologies was being superseded by something more organized, professionalized, and rationalized.”</li>
<li>“AMD spun out these facilities into a new company…that would operate as a foundry like TSMC.”</li>
<li>“Global Foundries, as this new company that inherited AMD’s fabs was known, entered an industry that was as competitive and unforgiving as ever.”</li>
<li>“Moore’s Law marched forward through the 2000s and early 2010s, forcing cutting edge chip makers to spend ever larger sums.”</li>
<li>“The 22 nanometer node introduced a new 3D transistor, called a FinFET.”</li>
<li>“Morris Chang sat at the center… ‘TSMC knows it is important to use everyone’s innovation,’ Chang declared.”</li>
<li>“The combined R&amp;D spending of TSMC and its 10 biggest customers exceeds that of Samsung and Intel together.”</li>
<li>“Chang fired his successor and retook direct control of TSMC.”</li>
<li>“Chang thought the real risk was accepting the status quo.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>Morris Chang was a visionary leader in the semiconductor industry, founding TSMC.</li>
<li>Chang’s Grand Alliance strategy involved collaboration with a wide network of companies in the semiconductor ecosystem.</li>
<li>TSMC played a central role in the shift towards the fable</li>
</ol>
<p>ss semiconductor model.</p>
<ol start="4" type="1">
<li>Chang’s strategic decisions during the 2008-2009 financial crisis were crucial in maintaining TSMC’s industry leadership.</li>
<li>TSMC’s approach under Chang’s leadership focused on innovation, R&amp;D investment, and expanding manufacturing capacity.</li>
<li>The chapter discusses the evolution of semiconductor manufacturing technology, including the introduction of FinFET transistors.</li>
<li>Morris Chang’s return to active leadership at TSMC was a response to the challenges faced during the financial crisis.</li>
<li>TSMC’s strategy focused on being a neutral player in the industry, manufacturing chips for a wide range of clients.</li>
<li>Chang emphasized the importance of collaboration and innovation within TSMC’s ecosystem.</li>
<li>The shift in semiconductor industry leadership from founders like Jerry Sanders of AMD to a new generation of executives is highlighted.</li>
</ol>
</section>
<section id="recommendations-2" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-2">Recommendations</h3>
<ol type="1">
<li>Study the impact of leadership styles and strategic decisions on the success of companies in the semiconductor industry.</li>
<li>Analyze the role of foundries like TSMC in the evolution of the semiconductor manufacturing model.</li>
<li>Explore the technological advancements in semiconductor manufacturing, such as FinFET transistors.</li>
<li>Consider the implications of the 2008-2009 financial crisis on strategic decision-making in high-tech industries.</li>
<li>Reflect on the importance of collaboration and innovation in sustaining industry leadership.</li>
<li>Assess the shift in industry dynamics from integrated manufacturing to a foundry-based model.</li>
<li>Investigate the strategic importance of maintaining R&amp;D investment and capacity expansion during economic downturns.</li>
<li>Examine the role of TSMC’s Grand Alliance strategy in fostering a cooperative semiconductor ecosystem.</li>
<li>Understand the changing landscape of the semiconductor industry and the challenges faced by traditional companies.</li>
<li>Evaluate the long-term impacts of visionary leadership and strategic foresight in the semiconductor sector.</li>
</ol>
</section>
</section>
<section id="apple-silicon" class="level2">
<h2 class="anchored" data-anchor-id="apple-silicon">Apple Silicon</h2>
<p>Chapter 38 examines Apple’s strategic shift in designing its own silicon chips for devices like the iPhone and iPad. The chapter highlights Apple’s evolution from outsourcing chip design and production to Samsung, to acquiring PA Semi and developing its own A4 processor. This move underscored the significance of controlling hardware and software integration, a vision Steve Jobs had since Apple’s early days. Apple’s investment in chip design, particularly in facilities in Bavaria, Israel, and Silicon Valley, is discussed, along with the role of foundries like TSMC in fabricating Apple’s processors.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li><strong>Strategic Shift to In-House Chip Design</strong>: Apple’s transition to designing its own silicon chips to enhance hardware and software integration.</li>
<li><strong>Foundation of Steve Jobs’ Vision</strong>: The integral role of Jobs’ vision in integrating software and hardware in Apple’s product development.</li>
<li><strong>Significance of PA Semi Acquisition</strong>: Apple’s pivotal move in acquiring PA Semi to advance its in-house chip design capabilities.</li>
<li><strong>Milestone with A4 Processor Development</strong>: The creation of the A4 processor as a key step in Apple’s journey towards chip self-reliance.</li>
<li><strong>Contrast with Other Smartphone Companies</strong>: Apple’s distinct strategy compared to competitors relying on external chip suppliers.</li>
<li><strong>Global Investment in Chip Design Facilities</strong>: The importance of Apple’s R&amp;D and design facilities worldwide for silicon innovation.</li>
<li><strong>Partnership with TSMC for Fabrication</strong>: Apple’s processors, designed in-house but fabricated by TSMC, showcasing global semiconductor manufacturing dynamics.</li>
<li><strong>Role of Specialized Silicon in Apple Products</strong>: The impact of proprietary chip technology on the performance and efficiency of Apple devices.</li>
<li><strong>Fabless Model Adoption by Apple</strong>: The significance of Apple’s approach to design innovation in the semiconductor industry.</li>
<li><strong>Strategic Advantage in Smartphone Market</strong>: Apple’s in-house chip design as a key competitive edge in the smartphone industry.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“The greatest beneficiary of the rise of foundries like TSMC was a company that most people don’t even realize designs chips — Apple.”</li>
<li>“Steve Jobs had thought deeply about the relationship between software and hardware.”</li>
<li>“Apple bought a small Silicon Valley chip design firm called PA Semi that had expertise in energy-efficient processing.”</li>
<li>“Soon, Apple began hiring some of the industry’s best chip designers.”</li>
<li>“Apple’s investment in specialized silicon explains why Apple’s products work so smoothly.”</li>
<li>“Within four years of the iPhone’s launch, Apple was making over 60% of all the world’s profits from smartphone sales.”</li>
<li>“Apple is well known for outsourcing assembly of its phones, tablets, and other devices to several hundred thousand assembly line workers in China.”</li>
<li>“Apple’s iPhone processors are fabricated exclusively in Taiwan.”</li>
<li>“No company besides TSMC has the skill or the production capacity to build the chips Apple needs.”</li>
<li>“Apple not only designs the main processors for most of its devices but also ancillary chips that run accessories like AirPods.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>Apple’s transition to designing its own silicon chips was significant in the technology industry.</li>
<li>The company acquired PA Semi for its expertise in energy-efficient processing, which led to the development of the A4 processor.</li>
<li>Apple’s in-house chip design efforts differentiated its products in the competitive smartphone market.</li>
<li>The company invested heavily in R&amp;D and chip design facilities in various global locations.</li>
<li>TSMC plays a critical role in fabricating Apple’s processors.</li>
<li>Apple’s strategic move to design its own chips contributed to its dominance in smartphone profits.</li>
<li>The chapter highlights the global nature of semiconductor manufacturing and supply chains.</li>
<li>Apple’s approach to chip design and fabrication reflects a broader trend in the electronics industry.</li>
<li>The company designs not only the main processors for its devices but also ancillary chips for accessories.</li>
<li>Apple’s strategy in chip design is part</li>
</ol>
<p>of its larger vision for integrating hardware and software.</p>
</section>
<section id="recommendations-3" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-3">Recommendations</h3>
<ol type="1">
<li>Study the impact of in-house chip design on a technology company’s competitive advantage in the market.</li>
<li>Analyze the role of foundries like TSMC in the global semiconductor manufacturing ecosystem.</li>
<li>Explore the strategic implications of Apple’s shift from outsourcing chip design to developing its own processors.</li>
<li>Consider the effects of proprietary chip technology on product performance and market dominance.</li>
<li>Examine the importance of global R&amp;D and chip design facilities in driving technological innovation.</li>
<li>Assess the impact of the fabless model on the semiconductor industry’s business strategies.</li>
<li>Investigate the changing dynamics of the smartphone market and the role of chip design in market competition.</li>
<li>Reflect on the broader trends in the electronics industry, such as the integration of hardware and software.</li>
<li>Understand the complexities of global semiconductor supply chains and their implications for technology companies.</li>
<li>Evaluate the long-term effects of strategic decisions in chip design on a company’s success in the technology sector.</li>
</ol>
</section>
</section>
<section id="euv" class="level2">
<h2 class="anchored" data-anchor-id="euv">EUV</h2>
<p>Chapter 39 delves into the development of extreme ultraviolet (EUV) lithography, a critical technology in semiconductor manufacturing. It focuses on ASML, the Dutch lithography company, and its nearly two-decade journey to make EUV lithography functional. The chapter highlights the complex global supply chain and the collaboration of companies and national labs across the world. It discusses the enormous technological challenges and investments from major players like Intel, Samsung, and TSMC in ASML to develop this groundbreaking technology.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li><strong>EUV as a Technological Leap in Semiconductor Manufacturing</strong>: The significance of EUV lithography in creating smaller, more efficient chips.</li>
<li><strong>Global Collaboration in Developing EUV</strong>: ASML’s worldwide sourcing and collaboration to develop EUV technology.</li>
<li><strong>High-Stakes Investments from Industry Giants</strong>: The enormous investment from leading semiconductor companies like Intel, Samsung, and TSMC in EUV development.</li>
<li><strong>Overcoming Technical Challenges</strong>: The transition from visible light to EUV lithography involved overcoming numerous technical barriers.</li>
<li><strong>Innovation in Laser Technology</strong>: Developing new types of powerful, precision lasers for EUV lithography.</li>
<li><strong>Complexity of EUV Lithography Tools</strong>: Illustrating the advanced state of modern semiconductor manufacturing through the complexity of EUV tools.</li>
<li><strong>Crucial Role of EUV Mirrors by Zeiss</strong>: The development of mirrors capable of reflecting EUV light, a critical component in the technology.</li>
<li><strong>ASML’s Supply Chain Expertise</strong>: The success of EUV attributed to ASML’s ability to manage a complex, global supply chain.</li>
<li><strong>Interdependence in the Semiconductor Industry</strong>: The collaborative and global nature of the industry, as showcased by the development of EUV technology.</li>
<li><strong>Milestone in Semiconductor Manufacturing</strong>: The transition to EUV marking a significant advancement in meeting modern electronics demands.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“ASML, the Dutch lithography company, had spent nearly two decades trying to make extreme ultraviolet lithography work.”</li>
<li>“EUV was one of the biggest technological gambles of our time.”</li>
<li>“Intel alone invested $4 billion in ASML in 2012, one of the highest stakes bets the company ever made.”</li>
<li>“Producing enough EUV light requires pulverizing a small ball of tin with a laser.”</li>
<li>“ASML’s light source only worked, though, thanks to a new laser that could pulverize the tin droplets with sufficient power.”</li>
<li>“Trumpf, a German precision tooling company, was approached to build a powerful carbon dioxide-based laser for EUV.”</li>
<li>“To direct EUV light with precision, mirrors must be held perfectly still, requiring mechanics and sensors so exact that Zeiss boasted they could be used to aim a laser to hit a golf ball as far away as the moon.”</li>
<li>“ASML’s expertise was its ability to orchestrate a far-flung network of optics experts, software designers, laser companies, and many others whose capabilities were needed to make the dream of EUV a reality.”</li>
<li>“ASML’s EUV lithography tool is the most expensive mass-produced machine tool in history.”</li>
<li>“After three decades of investment, billions of dollars, a series of technological innovations, and the establishment of one of the world’s most complex supply chains, ASML’s EUV tools were finally ready to be deployed in the world’s most advanced chip fabs.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li><p>ASML, a Dutch company, has been instrumental in developing EUV lithography technology over two decades.</p></li>
<li><p>EUV lithography is essential for creating smaller, more efficient semiconductor chips.</p></li>
<li><p>Significant investments were made by major semiconductor companies like Intel, Samsung, and TSMC in ASML to develop EUV technology.</p></li>
<li><p>The development of EUV lithography involved global collaboration and a complex supply chain.</p></li>
<li><p>Producing EUV light required new technological innovations, including the use of high-powered lasers to create plasma from tin droplets.</p></li>
<li><p>German companies like Trumpf and Zeiss played crucial roles in developing components for EUV technology, including powerful lasers and advanced mirrors.</p></li>
<li><p>The complexity and cost of EUV lithography tools are unprecedented in the history of mass-produced machine tools.</p></li>
<li><p>The development of EUV technology involved overcoming numerous technical challenges, such as creating mirrors capable of reflecting EUV light.</p></li>
<li><p>ASML’s success in EUV lithography is attributed to its expertise in supply chain management and collaboration with global partners.</p></li>
<li><p>The EUV lithography tool represents a multinational effort, with crucial components sourced from various countries.</p></li>
</ol>
</section>
<section id="recommendations-4" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-4">Recommendations</h3>
<ol type="1">
<li>Study the role of EUV lithography in advancing semiconductor technology and its impact on the industry.</li>
<li>Analyze the collaborative nature of technological innovations like EUV lithography and the role of global supply chains.</li>
<li>Reflect on the strategic importance of investments in cutting-edge technologies by leading semiconductor companies.</li>
<li>Explore the technical challenges and innovations involved in developing EUV lithography.</li>
<li>Consider the impact of multinational contributions in the development of advanced manufacturing technologies.</li>
<li>Examine the role of companies like Trumpf and Zeiss in supporting the development of key components for EUV technology.</li>
<li>Assess the significance of ASML’s expertise in supply chain management for the successful development of EUV lithography.</li>
<li>Investigate the economic and technological implications of the transition from traditional to EUV lithography in chip manufacturing.</li>
<li>Understand the complexities and costs associated with developing and implementing breakthrough technologies like EUV lithography.</li>
<li>Evaluate the long-term impacts of EUV technology on the global semiconductor industry and its future direction.</li>
</ol>
</section>
</section>
<section id="there-is-no-plan-b" class="level2">
<h2 class="anchored" data-anchor-id="there-is-no-plan-b">There Is No Plan B</h2>
<p>Chapter 40 focuses on the pivotal role of extreme ultraviolet (EUV) lithography in the semiconductor industry. It highlights Tony Yen’s contributions, who after joining TSMC in the late 1990s, played a key role in the development of EUV lithography. The chapter underscores the high stakes involved in developing EUV technology, with significant investments from industry leaders like TSMC, Intel, Samsung, and GlobalFoundries. It also touches on the challenges and decisions faced by GlobalFoundries, which eventually abandoned its EUV program due to financial constraints.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li><strong>EUV Lithography as a Technological Leap</strong>: The critical role of EUV lithography in enabling smaller transistor fabrication and sustaining Moore’s Law.</li>
<li><strong>Tony Yen’s Impact at TSMC</strong>: Yen’s significant role in advancing lithography technology at TSMC.</li>
<li><strong>Collaborative Development of EUV Technology</strong>: The necessity of multi-company collaboration and substantial financial investment in EUV.</li>
<li><strong>Intel’s Major Investment in ASML</strong>: Highlighting the strategic value of EUV lithography through Intel’s significant financial commitment.</li>
<li><strong>Transitioning from DUV to EUV Lithography</strong>: The array of technical hurdles faced in moving from deep ultraviolet to EUV lithography.</li>
<li><strong>EUV as the Only Viable Path Forward</strong>: EUV lithography’s role as the singular path for continued miniaturization in semiconductor manufacturing.</li>
<li><strong>Morris Chang’s Visionary Bet on EUV</strong>: TSMC’s substantial investment in EUV technology reflecting Chang’s foresight.</li>
<li><strong>GlobalFoundries’ Challenges with EUV</strong>: The financial and technical difficulties smaller foundries face in adopting cutting-edge technologies.</li>
<li><strong>Financial and Strategic Divergence in EUV Adoption</strong>: Contrasting financial positions and strategies of major semiconductor companies regarding EUV technology.</li>
<li><strong>Consolidation in Semiconductor Manufacturing</strong>: The decline in the number of companies capable of fabricating leading-edge logic chips.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“EUV was one of the biggest technological gambles of our time.”</li>
<li>“Intel alone invested $4 billion in ASML in 2012, one of the highest stakes bets the company ever made.”</li>
<li>“Producing enough EUV light requires pulverizing a small ball of tin with a laser.”</li>
<li>“ASML’s light source only worked, thanks to a new laser that could pulverize the tin droplets with sufficient power.”</li>
<li>“Trumpf, a German precision tooling company, was approached to build a powerful carbon dioxide-based laser for EUV.”</li>
<li>“To direct EUV light with precision, mirrors must be held perfectly still, requiring mechanics and sensors so exact that Zeiss boasted they could be used to aim a laser to hit a golf ball as far away as the moon.”</li>
<li>“Morris Chang bet more heavily on EUV than anyone else in the semiconductor industry.”</li>
<li>“GlobalFoundries was considering adopting EUV as it prepared for its own 7-nanometer node.”</li>
<li>“IBM had played a fundamental role in the growth of the semiconductor business, but fabricating chips made no financial sense.”</li>
<li>“GlobalFoundries decided that as a medium-sized foundry, it could never make a 7-nanometer process financially viable.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>EUV lithography was critical for the continued miniaturization of semiconductor components.</li>
<li>Tony Yen’s work at TSMC significantly contributed to the advancement of EUV technology.</li>
<li>Intel’s investment in ASML for EUV development was a major financial commitment to semiconductor technology.</li>
<li>The transition from deep ultraviolet to EUV lithography required overcoming several technical challenges.</li>
<li>TSMC, under Morris Chang, heavily invested in EUV technology.</li>
<li>GlobalFoundries eventually abandoned its EUV program due to financial constraints.</li>
<li>The development of EUV technology marked a significant technological advancement in semiconductor manufacturing.</li>
<li>The semiconductor industry faced intense competition and pressure to innovate, especially in lithography technology.</li>
<li>EUV technology was crucial for maintaining the pace of Moore’s Law.</li>
<li>The semiconductor industry saw consolidation, with a reduction in the</li>
</ol>
<p>number of companies capable of fabricating leading-edge logic chips.</p>
</section>
<section id="recommendations-5" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-5">Recommendations</h3>
<ol type="1">
<li>Study the strategic importance of EUV lithography in the semiconductor industry and its impact on technological advancement.</li>
<li>Analyze the role of major semiconductor companies and their investments in EUV technology development.</li>
<li>Reflect on the technical challenges and innovations involved in transitioning from deep ultraviolet to EUV lithography.</li>
<li>Consider the financial and strategic implications for semiconductor companies in adopting cutting-edge technologies like EUV.</li>
<li>Explore the competitive dynamics in the semiconductor industry, particularly in the area of lithography technology.</li>
<li>Assess the impact of industry consolidation on the development and implementation of advanced technologies.</li>
<li>Investigate the role of global collaboration and supply chains in the development of EUV lithography.</li>
<li>Examine the factors contributing to the decisions of companies like GlobalFoundries to abandon their EUV programs.</li>
<li>Understand the broader trends in semiconductor manufacturing, including the pressure to continuously innovate.</li>
<li>Evaluate the long-term effects of technological advancements like EUV lithography on the global semiconductor industry.</li>
</ol>
</section>
</section>
<section id="how-intel-forgot-innovation" class="level2">
<h2 class="anchored" data-anchor-id="how-intel-forgot-innovation">How Intel Forgot Innovation</h2>
<p>Chapter 41 examines the decline of Intel’s leadership in the semiconductor industry. It focuses on Intel’s challenges in adapting to new technologies and market shifts, particularly in artificial intelligence (AI) and data center processors. The chapter contrasts Intel’s struggles with the rise of competitors like Nvidia, who embraced AI and developed GPUs optimized for this purpose. Intel’s foray into the foundry business and its failure to keep up with advancements in manufacturing processes like EUV lithography are also discussed, highlighting the company’s missed opportunities and strategic missteps.</p>
<section id="ideas-6" class="level3">
<h3 class="anchored" data-anchor-id="ideas-6">Ideas</h3>
<ol type="1">
<li><strong>Intel’s Missed Technological Shifts</strong>: Intel’s decline due to its failure to adapt to emerging technologies, particularly in AI and data centers.</li>
<li><strong>Limited Focus on CPUs Over GPUs</strong>: Intel’s limited competitiveness owing to its continued focus on CPUs, while GPUs gained prominence in AI and parallel processing.</li>
<li><strong>Nvidia’s Successful Pivot to AI</strong>: Nvidia’s strategic success in GPU design for AI, highlighting Intel’s missed opportunities.</li>
<li><strong>Integrated Model Becoming a Liability</strong>: The shift in the industry making Intel’s integrated chip design and manufacturing model less advantageous.</li>
<li><strong>Struggles in the Foundry Business</strong>: Intel’s unsuccessful foray into the foundry business and difficulties in adapting to its open, service-oriented nature.</li>
<li><strong>Delay in Adopting EUV Lithography</strong>: Intel falling behind in manufacturing technology due to its delayed adoption of EUV lithography.</li>
<li><strong>Intel’s Internal Bureaucratic Stagnation</strong>: Challenges within Intel, including bureaucratic hurdles and a lack of innovation.</li>
<li><strong>Decline in Market Share and Influence</strong>: Intel’s diminishing influence and market share amid delays and technical issues in its manufacturing processes.</li>
<li><strong>Shift in Global Semiconductor Landscape</strong>: The rise of Asian foundries and the decline of American manufacturing prowess.</li>
<li><strong>Importance of Continuous Innovation</strong>: Intel’s struggles underscoring the necessity for continuous innovation and adaptability in the tech industry.</li>
</ol>
</section>
<section id="quotes-6" class="level3">
<h3 class="anchored" data-anchor-id="quotes-6">Quotes</h3>
<ol type="1">
<li>“Intel had an unparalleled position in the semiconductor industry.”</li>
<li>“Intel’s x86 architecture remained the industry standard for PCs and data centers.”</li>
<li>“Intel squandered its lead, missing major shifts in semiconductor architecture needed for artificial intelligence.”</li>
<li>“Intel’s near monopoly in sales of processors for data centers is ending.”</li>
<li>“Intel’s foundry business won only a single major customer while in operation in the 2010s.”</li>
<li>“Intel’s market share was shrinking. The bureaucracy was stultifying. Innovation happened elsewhere.”</li>
<li>“Intel’s bungling of Moore’s Law.”</li>
<li>“Intel has repeatedly announced delays to its 10-nanometer and 7-nanometer manufacturing processes.”</li>
<li>“Many of the company’s problems stem from Intel’s delayed adoption of EUV tools.”</li>
<li>“Intel’s future is more in doubt than at any point since Grove’s decision in the 1980s to abandon memory and bet everything on microprocessors.”</li>
</ol>
</section>
<section id="facts-6" class="level3">
<h3 class="anchored" data-anchor-id="facts-6">Facts</h3>
<ol type="1">
<li><p>Intel, once a leader in the semiconductor industry, struggled to adapt to new technologies and market shifts.</p></li>
<li><p>The company’s focus on CPUs became a limitation with the rise of AI and the need for GPUs.</p></li>
<li><p>Nvidia successfully adapted to the AI market, leveraging its GPU technology.</p></li>
<li><p>Intel’s integrated model of chip design and manufacturing became less effective in a changing industry.</p></li>
<li><p>Intel’s foray into the foundry business was unsuccessful, contrasting with the success of foundries like TSMC.</p></li>
<li><p>The company faced significant delays and technical challenges in advancing its manufacturing processes.</p></li>
<li><p>Intel’s delay in adopting EUV lithography was a critical factor in its technological lag.</p></li>
<li><p>Intel’s internal challenges included bureaucracy and a lack of innovation.</p></li>
<li><p>The company’s market share and influence in the semiconductor industry declined over time.</p></li>
<li><p>The global semiconductor landscape shifted, with Asian foundries rising and American manufacturing losing ground.</p></li>
</ol>
</section>
<section id="recommendations-6" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-6">Recommendations</h3>
<ol type="1">
<li>Analyze the impact of technological shifts on leading semiconductor companies like Intel.</li>
<li>Study the strategic importance of adapting to market changes, such as the rise of AI in computing.</li>
<li>Reflect on the challenges and opportunities in transitioning from traditional CPU manufacturing to GPU and specialized processors.</li>
<li>Consider the role of continuous innovation in maintaining competitiveness in the semiconductor industry.</li>
<li>Explore the implications of internal corporate challenges, like bureaucracy and innovation stagnation, on a company’s market position.</li>
<li>Assess the strategic decisions of companies like Nvidia in pivoting towards AI and GPU technology.</li>
<li>Investigate the impact of manufacturing technology advancements, like EUV lithography, on the semiconductor industry.</li>
<li>Examine the global dynamics of the semiconductor industry, particularly the rise of Asian manufacturing and the decline of American manufacturing.</li>
<li>Understand the broader trends in computing demands, such as the need for efficient AI processing.</li>
<li>Evaluate the potential future directions for companies like Intel in regaining their leadership in semiconductor technology.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-6/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 5: Integrated Circuits, Integrated World?</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-5/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>We Want a Semiconductor Industry in Taiwan</li>
<li>All People Must Make Semiconductors</li>
<li>“Sharing God’s Love With the Chinese”</li>
<li>Lithography Wars</li>
<li>The Innovator’s Dilemma</li>
<li>Running Faster?</li>
</ul>
<section id="we-want-a-semiconductor-industry-in-taiwan" class="level2">
<h2 class="anchored" data-anchor-id="we-want-a-semiconductor-industry-in-taiwan">We Want a Semiconductor Industry in Taiwan</h2>
<p>Chapter Twenty-Nine narrates Taiwan’s ascent as a semiconductor powerhouse. It focuses on Morris Chang’s role in leading Taiwan Semiconductor Manufacturing Company (TSMC) and Taiwan’s deliberate strategy to integrate into global semiconductor supply chains. The chapter highlights Taiwan’s transition from assembling devices to producing advanced chips, supported by government investment and collaboration with the U.S. semiconductor industry. It underscores Taiwan’s strategic positioning in the semiconductor market, driven by Chang’s vision and the government’s backing.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>Taiwan’s government, particularly Minister K.T. Lee, identified semiconductors as a strategic industry and actively promoted its development.</li>
<li>Morris Chang, a former Texas Instruments executive, played a central role in Taiwan’s semiconductor industry, leading TSMC.</li>
<li>Taiwan’s entry into the semiconductor market was part of a broader strategy for economic growth and technological advancement.</li>
<li>The government’s significant investment and support were crucial in the establishment and success of TSMC.</li>
<li>Collaboration with U.S. firms and technology transfer were key factors in Taiwan’s rise as a semiconductor hub.</li>
<li>Taiwan’s shift from assembly to chip fabrication marked a significant technological leap.</li>
<li>TSMC’s foundry model, focusing on manufacturing chips designed by customers, was a novel approach that reshaped the industry.</li>
<li>The success of TSMC and Taiwan’s semiconductor industry is a testament to strategic planning, governmental support, and entrepreneurial vision.</li>
<li>Taiwan’s emergence as a leading semiconductor producer had significant implications for global technology and economics.</li>
<li>The chapter illustrates how a small nation strategically positioned itself in a critical global industry through innovation and government-industry collaboration.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“We want to promote a semiconductor industry in Taiwan,” declared Minister K.T. Lee to Morris Chang.</li>
<li>“Taiwan had deliberately inserted itself into semiconductor supply chains since the 1960s.”</li>
<li>“Morris Chang’s role in Taiwan was to lead the island’s chip industry, an offer backed by substantial government financing.”</li>
<li>“The Taiwanese government provided 48% of the startup capital for TSMC.”</li>
<li>“Chang’s business plan for TSMC was to manufacture chips designed by customers, a novel foundry concept.”</li>
<li>“Taiwan’s government played a key role in TSMC’s success, providing significant investment and support.”</li>
<li>“TSMC’s emergence revolutionized the semiconductor industry by separating chip design from manufacturing.”</li>
<li>“The rise of Taiwan as a semiconductor power was due to strategic government-industry collaboration.”</li>
<li>“Morris Chang’s leadership and vision were instrumental in positioning Taiwan at the forefront of semiconductor production.”</li>
<li>“Taiwan’s success in semiconductors showcases its strategic positioning in a critical global market.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>Taiwan’s government, led by Minister K.T. Lee, played a pivotal role in developing the country’s semiconductor industry.</li>
<li>Morris Chang was instrumental in leading TSMC and shaping Taiwan’s semiconductor sector.</li>
<li>Taiwan’s strategy involved transitioning from assembly to advanced chip production.</li>
<li>The Taiwanese government provided significant investment and support for TSMC.</li>
<li>Collaboration with U.S. companies and technology transfer were crucial in Taiwan’s semiconductor industry development.</li>
<li>TSMC’s foundry model, focusing on manufacturing customer-designed chips, was innovative and influential.</li>
<li>Taiwan’s rise as a semiconductor hub was a result of strategic planning and government-industry collaboration.</li>
<li>TSMC and Taiwan’s success in semiconductors had major global technological and economic implications.</li>
<li>The Taiwanese semiconductor industry’s growth was marked by strategic government support and entrepreneurial vision.</li>
<li>Taiwan’s emergence as a leading semiconductor producer significantly impacted the global technology landscape.</li>
</ol>
</section>
</section>
<section id="all-people-must-make-semiconductors" class="level2">
<h2 class="anchored" data-anchor-id="all-people-must-make-semiconductors">All People Must Make Semiconductors</h2>
<p>Chapter 30 contrasts the semiconductor industry’s evolution in Taiwan and China. It highlights Taiwan’s technological advancement through TSMC and the founding of Huawei in China, emphasizing the impact of political and economic policies on the development of the semiconductor industry in both regions.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>Taiwan’s advancement in semiconductor technology was rapid and significant, largely due to TSMC.</li>
<li>China’s technological development in the semiconductor industry was initially slow due to political and economic constraints.</li>
<li>Political policies, particularly in China, had a profound impact on the development of the semiconductor industry.</li>
<li>Taiwan and China’s approaches to technology and semiconductor development were markedly different.</li>
<li>The founding of TSMC and Huawei represented different strategies in technology adoption and development.</li>
<li>Taiwan’s semiconductor success was aided by its connection to global tech companies and educated engineers.</li>
<li>China’s initial backwardness in technology was a result of its isolationist policies and political turmoil.</li>
<li>The Chinese government’s late realization of the importance of semiconductors changed its approach to technology.</li>
<li>Taiwan leveraged its skilled workforce and international connections to excel in semiconductor manufacturing.</li>
<li>The Cultural Revolution in China severely hampered technological progress, particularly in the semiconductor industry.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“All People Must Make Semiconductors” - a slogan reflecting China’s late push for semiconductor development.</li>
<li>“Taiwan was a small island with big ambitions.”</li>
<li>“China, by contrast, had a vast population, but was impoverished and technologically backward.”</li>
<li>“Morris Chang set his sights on building some of the world’s most advanced chips.”</li>
<li>“China’s semiconductor manufacturing ambitions seemed hopeless.”</li>
<li>“The Cultural Revolution began to wane as Mao’s health declined.”</li>
<li>“Mao Zedong’s policies had a devastating impact on China’s scientific community.”</li>
<li>“Taiwan’s semiconductor success was built on education and global connections.”</li>
<li>“China’s late realization of the importance of semiconductors changed its approach to technology.”</li>
<li>“The rise of the semiconductor industry in East Asia is a testament to the region’s strategic focus on technology.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>TSMC was founded in Taiwan in 1987 by Morris Chang.</li>
<li>Huawei, a major telecommunications company, was established in China in 1987 by Ren Zhengfei.</li>
<li>Taiwan’s success in the semiconductor industry is partly due to its skilled engineers educated at top universities like Stanford and Berkeley.</li>
<li>China’s semiconductor industry lagged due to its political and economic isolation.</li>
<li>The Chinese government, under Jiang Zemin, identified electronics as a priority in the 1980s.</li>
<li>China’s technological capabilities in the 1980s were over a decade behind the global cutting edge.</li>
<li>Mao Zedong’s policies, especially the Cultural Revolution, hindered China’s technological advancement.</li>
<li>Taiwan’s economic strategies significantly differed from China’s, leading to a more advanced semiconductor industry.</li>
<li>The development of the semiconductor industry in East Asia was heavily influenced by political decisions and global economics.</li>
<li>Deng Xiaoping’s policy changes in the late 1970s marked a shift towards modernization in China, impacting its technological development.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li>Study the history of Taiwan’s semiconductor industry to understand its success.</li>
<li>Examine the impact of China’s political policies on its technological development.</li>
<li>Understand the significance of key figures like Morris Chang and Ren Zhengfei in the tech industry.</li>
<li>Consider the role of education and global connections in technological advancement.</li>
<li>Analyze the effects of political turmoil, like the Cultural Revolution, on scientific progress.</li>
<li>Explore how national policies can drastically impact technological industries.</li>
<li>Recognize the strategic importance of the semiconductor industry in global power dynamics.</li>
<li>Consider the implications of global economic forces on technological development and national policies.</li>
<li>Observe how late policy shifts, like those under Deng Xiaoping, can transform a country’s technological landscape.</li>
<li>Understand the pivotal role of semiconductors in modern technology and global politics.</li>
</ol>
</section>
</section>
<section id="sharing-gods-love-with-the-chinese" class="level2">
<h2 class="anchored" data-anchor-id="sharing-gods-love-with-the-chinese">“Sharing God’s Love With the Chinese”</h2>
<p>Chapter 31 focuses on Richard Chang’s efforts to establish a semiconductor industry in China, contrasting the different approaches and challenges faced by East Asian countries in semiconductor production. It highlights the geopolitical and economic shifts in chip fabrication, detailing the roles of TSMC, Huawei, and other major players in shaping the industry.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>Richard Chang’s vision for semiconductor manufacturing in China was driven by a mix of personal conviction and economic strategy.</li>
<li>The global geography of chip fabrication shifted significantly from the 1990s to the 2000s, with East Asian countries becoming more prominent.</li>
<li>U.S. dominance in chip production declined over two decades, while Asian countries increased their market share.</li>
<li>The growth of the semiconductor industry in countries like South Korea, Singapore, and Taiwan was fueled by government investment and strategic partnerships.</li>
<li>China’s approach to building a semiconductor industry included a mix of government subsidies, foreign investment, and technology transfer attempts.</li>
<li>The complexity and cost of semiconductor production require significant financial backing and technological expertise.</li>
<li>Samsung’s success in the memory chip market illustrates the competitive nature of the semiconductor industry.</li>
<li>The semiconductor industry’s evolution reflects broader trends in globalization and technological advancement.</li>
<li>The entry of China into semiconductor manufacturing marked a significant shift in the global tech landscape.</li>
<li>Political and economic decisions play a crucial role in shaping the semiconductor industry.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“Richard Chang just wanted to share God’s love with the Chinese.”</li>
<li>“The geography of chip fabrication shifted drastically over the 1990s and 2000s.”</li>
<li>“South Korea, Singapore, and Taiwan each poured funds into their chip industries.”</li>
<li>“The DRAM market was like a game of chicken.”</li>
<li>“China had the most potential to upend the semiconductor industry.”</li>
<li>“SMIC’s success in domesticating technology was only possible thanks to this foreign-trained workforce.”</li>
<li>“By the end of the 2000s, SMIC was only a couple of years behind the world’s technology leaders.”</li>
<li>“China’s leaders knew the real money was in the components that powered electronics.”</li>
<li>“Richard Chang saw bringing chips to China as his life’s calling.”</li>
<li>“Samsung had the capital to keep investing after its rivals were forced to cut back.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>Richard Chang played a pivotal role in establishing China’s semiconductor industry.</li>
<li>The U.S. share of global chip production declined from 37% in 1990 to 13% in 2010.</li>
<li>Asian countries, particularly South Korea, Singapore, and Taiwan, increased their chip production significantly.</li>
<li>Samsung became the world leader in memory chip production in 1992.</li>
<li>The semiconductor industry requires substantial investment and often relies on government support.</li>
<li>China’s chip manufacturing capabilities in the 1990s were significantly behind those of Taiwan and South Korea.</li>
<li>SMIC, founded by Richard Chang, received substantial investment from both Chinese and international sources, including U.S. investors.</li>
<li>The development of China’s semiconductor industry involved significant technology transfer and overseas hiring.</li>
<li>SMIC’s strategy mirrored that of TSMC, focusing on hiring skilled engineers and acquiring the best available tools.</li>
<li>The semiconductor industry’s growth is intertwined with the rise of smartphones and fabless semiconductor designers.</li>
</ol>
</section>
<section id="recommendations-1" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-1">Recommendations</h3>
<ol type="1">
<li>Examine the strategic importance of semiconductor technology in national economies.</li>
<li>Analyze the impact of government policies and subsidies on the semiconductor industry.</li>
<li>Consider the role of key individuals like Richard Chang in shaping the semiconductor landscape.</li>
<li>Study the competitive dynamics of the semiconductor market, including the DRAM sector.</li>
<li>Observe the impact of globalization on the semiconductor industry.</li>
<li>Understand the technological and financial challenges in semiconductor manufacturing.</li>
<li>Recognize the significance of semiconductor technology in the rise of smartphones and modern devices.</li>
<li>Explore the role of international collaboration and investment in semiconductor industry growth.</li>
<li>Assess the geopolitical implications of the semiconductor industry’s development in East Asia.</li>
<li>Reflect on the broader economic and technological trends influencing the semiconductor industry.</li>
</ol>
</section>
</section>
<section id="lithography-wars" class="level2">
<h2 class="anchored" data-anchor-id="lithography-wars">Lithography Wars</h2>
<p>Chapter 32 discusses the technological and financial challenges Intel faced in developing extreme ultraviolet (EUV) lithography. It narrates John Carruthers’ quest for funding from Intel CEO Andy Grove and the strategic decisions that led to ASML becoming the dominant player in the EUV lithography market, highlighting the geopolitical implications of these developments.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>The development of EUV lithography was a significant technological challenge, requiring substantial investment and innovation.</li>
<li>Intel’s commitment to Moore’s Law drove its investment in advanced lithography technologies.</li>
<li>The shift from deep ultraviolet to EUV lithography was essential for maintaining the pace of semiconductor miniaturization.</li>
<li>The lithography industry experienced a period of intense competition and technological experimentation.</li>
<li>ASML’s rise as a dominant player in the lithography market illustrates the importance of strategic partnerships and global supply chains.</li>
<li>The semiconductor industry’s evolution reflects broader trends in globalization, technological advancement, and corporate strategy.</li>
<li>The decline of U.S. dominance in lithography equipment manufacturing had significant geopolitical implications.</li>
<li>The collaboration between ASML and TSMC was pivotal in advancing semiconductor technology.</li>
<li>The concentration of advanced lithography technology in a few companies raised concerns about supply chain security and technological sovereignty.</li>
<li>Intel’s funding decisions reflected the complex interplay of science, business, and politics in the semiconductor industry.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“Intel’s engineers had as good a batting average as anyone in the industry.”</li>
<li>“The chip industry would either learn to use ever-smaller wavelengths for lithography, or Moore’s Law would come to a halt.”</li>
<li>“Intel would eventually spend billions of dollars on R&amp;D and billions more learning how to use EUV to carve chips.”</li>
<li>“The future of lithography was in doubt.”</li>
<li>“ASML’s ability to integrate components from different sources became its greatest strength.”</li>
<li>“U.S. fabs made 37% of the world’s chips in 1990, but this number fell to 13% by 2010.”</li>
<li>“The partnership between ASML and TSMC would have ground to a halt without advances in computing.”</li>
<li>“The U.S. was celebrating the end of the Cold War and cashing in its peace dividend.”</li>
<li>“Intel forged a partnership with several of the laboratories operated by the U.S. Department of Energy.”</li>
<li>“Intel’s goal was to make stuff, not just to measure it.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>Intel invested heavily in developing EUV lithography, a key technology for semiconductor manufacturing.</li>
<li>By 1992, Intel had regained its position as the world’s biggest chipmaker.</li>
<li>The shift from deep ultraviolet to EUV lithography was critical for producing smaller and more efficient semiconductors.</li>
<li>ASML, a Dutch company, emerged as a key player in the advanced lithography market.</li>
<li>The development of EUV lithography required global collaboration and significant financial investment.</li>
<li>U.S. chipmakers lost their dominance in lithography tool manufacturing to international competitors.</li>
<li>The U.S. government’s policy decisions influenced the development and export of lithography technology.</li>
<li>The concentration of lithography technology in a few companies raised concerns about global supply chain security.</li>
<li>The collaboration between ASML and TSMC was crucial for advancing semiconductor technology.</li>
<li>The development of EUV lithography involved challenges in engineering, business, and geopolitics.</li>
</ol>
</section>
<section id="recommendations-2" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-2">Recommendations</h3>
<ol type="1">
<li>Explore the strategic importance of advanced lithography technology in semiconductor manufacturing.</li>
<li>Analyze the impact of corporate investment and government policies on technological innovation.</li>
<li>Study the evolution of the lithography industry and the rise of companies like ASML.</li>
<li>Consider the geopolitical implications of shifts in technological leadership and supply chain control.</li>
<li>Understand the importance of international collaboration in advancing semiconductor technology.</li>
<li>Reflect on the role of technological sovereignty and supply chain security in global technology development.</li>
<li>Examine the challenges and opportunities presented by the globalization of the semiconductor industry.</li>
<li>Recognize the importance of strategic partnerships, like that between ASML and TSMC, in technological advancement.</li>
<li>Investigate the impact of financial investment and research and development on technological progress.</li>
<li>Consider the long-term implications of the “lithography wars” on the global semiconductor industry.</li>
</ol>
</section>
</section>
<section id="the-innovators-dilemma" class="level2">
<h2 class="anchored" data-anchor-id="the-innovators-dilemma">The Innovator’s Dilemma</h2>
<p>Chapter 33 explores Intel’s strategic decisions and missed opportunities in the semiconductor industry. It highlights the contrast between Intel’s focus on x86 architecture for PCs and servers and the rise of mobile devices. The chapter illustrates how Intel’s prioritization of profit margins and its reluctance to embrace new technologies like ARM architecture led to missed opportunities in the rapidly evolving mobile market, exemplified by Intel’s decision to decline Apple’s iPhone chip contract.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li><strong>Intel’s Business Strategy and x86 Architecture</strong>: The heavy influence of Intel’s commitment to x86 architecture and high profit margins on its business strategy.</li>
<li><strong>Missed Opportunities in Mobile Markets</strong>: Intel’s focus on PCs and servers leading to overlooked opportunities in the burgeoning mobile device sector.</li>
<li><strong>Short-term Financial Goals vs.&nbsp;Long-term Innovation</strong>: The prioritization of short-term financial goals over long-term technological innovation under CEO Paul Otellini.</li>
<li><strong>Shift from Engineering to Management-Driven Decisions</strong>: The transition at Intel impacting its adaptability to new market trends.</li>
<li><strong>Strategic Misstep with Apple’s iPhone</strong>: Intel’s significant strategic error in declining to produce chips for Apple’s iPhone.</li>
<li><strong>Underestimating Mobile Market Growth</strong>: The failure to recognize the rapid growth and importance of the mobile market in the semiconductor industry.</li>
<li><strong>Cultural Shift Impacting Market Position</strong>: The shift from engineering innovation to financial management within Intel and its profound market implications.</li>
<li><strong>The Innovator’s Dilemma in Intel’s Context</strong>: The challenges established companies like Intel face in adapting to technological shifts.</li>
<li><strong>Conservative Approach to Innovation Risks</strong>: The risks of Intel’s conservative approach to innovation in a rapidly evolving industry.</li>
<li><strong>Paradigm Shift in Semiconductor Industry</strong>: The rise of mobile computing representing a paradigm shift that Intel was slow to recognize and capitalize on.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“Intel’s engineers had as good a batting average as anyone in the industry.”</li>
<li>“Intel would eventually spend billions of dollars on R&amp;D and billions more learning how to use EUV to carve chips.”</li>
<li>“U.S. fabs made 37% of the world’s chips in 1990, but this number fell to 13% by 2010.”</li>
<li>“The partnership between ASML and TSMC would have ground to a halt without advances in computing.”</li>
<li>“Intel’s goal was to make stuff, not just to measure it.”</li>
<li>“ASML’s ability to integrate components from different sources became its greatest strength.”</li>
<li>“The U.S. would be reliant on ASML for a tool fundamental to all computing.”</li>
<li>“Intel forged a partnership with several of the laboratories operated by the U.S. Department of Energy.”</li>
<li>“The chip industry simply wanted to build semiconductors as efficiently as possible.”</li>
<li>“A single supply chain managed by a single company would control the future of lithography.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>Intel’s dominance in the PC and server chip market was heavily reliant on its x86 architecture.</li>
<li>Intel’s leadership, especially under CEO Paul Otellini, focused more on financial management than engineering innovation.</li>
<li>Intel missed the opportunity to produce chips for Apple’s iPhone, which later proved to be a significant market.</li>
<li>ARM architecture, which Intel had considered but rejected, became dominant in the mobile device market.</li>
<li>Intel’s conservative approach to innovation led to missed opportunities in the rapidly evolving semiconductor industry.</li>
<li>The rise of mobile devices represented a major shift in the semiconductor industry, which Intel was slow to adapt to.</li>
<li>Intel’s focus on maintaining high profit margins influenced its reluctance to invest in new technologies.</li>
<li>The partnership between Intel and Apple for Mac computers was a notable success, but did not extend to mobile devices.</li>
<li>Intel’s market position was challenged by its conservative approach to embracing new market trends and technologies.</li>
<li>The semiconductor industry’s evolution required companies to be agile and forward-thinking, a challenge for Intel’s traditional business</li>
</ol>
<p>strategy.</p>
</section>
<section id="recommendations-3" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-3">Recommendations</h3>
<ol type="1">
<li>Study the impact of corporate culture on a company’s ability to innovate and adapt to new market trends.</li>
<li>Explore the strategic implications of focusing on traditional profitable lines versus investing in emerging technologies.</li>
<li>Understand the importance of agile decision-making in rapidly evolving industries like the semiconductor market.</li>
<li>Analyze the impact of leadership styles on a company’s technological and market position.</li>
<li>Consider the risks and opportunities associated with the innovator’s dilemma in technology companies.</li>
<li>Examine the evolution of the semiconductor industry, particularly the shift towards mobile computing.</li>
<li>Reflect on the strategic decisions of companies like Intel and Apple and their long-term market implications.</li>
<li>Investigate the importance of technological adaptability in maintaining market leadership in the semiconductor industry.</li>
<li>Assess the influence of technological trends, such as ARM architecture, on the global semiconductor market.</li>
<li>Explore the role of strategic partnerships in shaping a company’s position in the technology industry.</li>
</ol>
</section>
</section>
<section id="running-faster" class="level2">
<h2 class="anchored" data-anchor-id="running-faster">Running Faster?</h2>
<p>Chapter 34 focuses on Andy Grove’s perspective on offshoring in the semiconductor industry. It details Grove’s concerns about the offshoring of advanced manufacturing jobs and the U.S.’s diminishing role in semiconductor manufacturing. The chapter highlights the strategic and geopolitical implications of these trends, with a particular focus on the rise of China’s semiconductor capabilities and the U.S.’s reliance on foreign manufacturing.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li><strong>Grove’s Concerns About Offshoring</strong>: Andy Grove’s worries about the risks of losing domestic advanced manufacturing capabilities.</li>
<li><strong>Shift of Manufacturing to Asia</strong>: The relocation of semiconductor manufacturing from the U.S. to Asia, particularly China and Taiwan, and its strategic and economic implications.</li>
<li><strong>Globalization in High-Tech Industries</strong>: Reflection on the broader implications of globalization in the high-tech sector.</li>
<li><strong>Importance of Domestic Manufacturing</strong>: Grove’s emphasis on the necessity of a strong domestic manufacturing base for strategic industries.</li>
<li><strong>Rise of China’s Semiconductor Industry</strong>: The significant shift in global technological dynamics marked by the development of China’s semiconductor sector.</li>
<li><strong>U.S. Policies Impacting the Industry</strong>: How U.S. government policies on technology exports and trade shaped the semiconductor industry.</li>
<li><strong>Contrast in Manufacturing Approaches</strong>: The differences between the U.S. and China’s strategies in semiconductor manufacturing, highlighting diverse economic and strategic priorities.</li>
<li><strong>Grove’s Skepticism of Offshoring</strong>: Challenge to the prevailing views on the long-term benefits of offshoring.</li>
<li><strong>Risks in Global Supply Chains</strong>: The dependence on key facilities in Taiwan for chip manufacturing and its risks to global supply chains.</li>
<li><strong>Balancing Economic Efficiency and Strategy</strong>: The complexities of aligning economic efficiency with strategic considerations in global manufacturing.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“Andy Grove was dining at a Palo Alto restaurant in 2010 when he was introduced to three Chinese venture capitalists.”</li>
<li>“Grove didn’t view Intel’s past success as an argument for complacency.”</li>
<li>“Seeing Chinese venture capitalists investing in Palo Alto made him wonder, was Silicon Valley smart to be offshoring production at a time of mass unemployment?”</li>
<li>“Grove worried about the offshoring of advanced manufacturing jobs.”</li>
<li>“The iPhone, which had been introduced just three years earlier, exemplified the trend.”</li>
<li>“He worried about lithium batteries needed for electric vehicles where the U.S. made up a tiny share of the market.”</li>
<li>“His solution? Levy an extra tax on the product of offshore labor.”</li>
<li>“Many people chose to write off Grove as a representative of a bygone era.”</li>
<li>“Intel’s business was now overshadowed by other tech firms with different business models.”</li>
<li>“The U.S. went so far as to give China’s SMIC special status as a ‘validated end user.’”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Andy Grove was a key figure at Intel and had concerns about the impact of offshoring on U.S. manufacturing.</li>
<li>The shift in semiconductor manufacturing from the U.S. to Asia, particularly to China, was significant.</li>
<li>The rise of China’s semiconductor industry, including companies like SMIC, indicated a major shift in global technology dynamics.</li>
<li>The U.S. government’s approach to technology exports and trade agreements played a role in the semiconductor industry’s globalization.</li>
<li>The reliance on a few facilities in Taiwan for semiconductor manufacturing created vulnerabilities in global supply chains.</li>
<li>The chapter discusses the economic and strategic implications of offshoring in high-tech industries.</li>
<li>Andy Grove’s perspective challenges the prevailing attitudes toward globalization in the semiconductor industry.</li>
<li>The U.S.’s position in the global semiconductor industry was changing, with potential implications for its technological leadership.</li>
<li>The debate over technology exports from the U.S. highlighted tensions between economic interests and national security.</li>
<li>The narrative illustrates the complexities and risks associated with the global semiconductor supply chain.</li>
</ol>
</section>
<section id="recommendations-4" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-4">Recommendations</h3>
<ol type="1">
<li>Consider the strategic importance of maintaining domestic manufacturing capabilities in critical industries.</li>
<li>Analyze the impact of globalization on high-tech industries, particularly semiconductor manufacturing.</li>
<li>Reflect on the implications of the U.S.’s diminishing role in semiconductor manufacturing for its technological leadership.</li>
<li>Explore the contrasting approaches of the U.S. and China in the semiconductor industry and their economic and strategic outcomes.</li>
<li>Examine the vulnerabilities created by global semiconductor supply chains and the reliance on a few key manufacturing locations.</li>
<li>Debate the merits and risks of offshoring in the context of national security and economic resilience.</li>
<li>Assess the long-term impacts of the U.S.’s policies on technology exports and trade agreements in the semiconductor industry.</li>
<li>Investigate the changing landscape of the global semiconductor industry and the evolving position of the U.S. within it.</li>
<li>Evaluate the perspectives and predictions of industry figures like Andy Grove on the future of manufacturing and innovation.</li>
<li>Study the balance between economic efficiency and strategic considerations in global manufacturing decisions.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-5/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 4: America Resurgent</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-4/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>The Potato Chip King</li>
<li>Disrupting Intel</li>
<li>My Enemy’s Enemy: The Rise of Korea</li>
<li>This Is the Future</li>
<li>The KGB’s Directorate T</li>
<li>Weapons of Mass Destruction: The Impact of the Offset</li>
<li>War Hero</li>
<li>The Cold War Is Over and You Have Won</li>
</ul>
<section id="the-potato-chip-king" class="level2">
<h2 class="anchored" data-anchor-id="the-potato-chip-king">The Potato Chip King</h2>
<p>Chapter Twenty-One centers on Jack Simplot, the Idaho billionaire who played a pivotal role in reviving America’s semiconductor industry. Known for his success in the potato business, Simplot invested in Micron, a DRAM chip company. The chapter details Micron’s challenges and innovations in the competitive DRAM market, dominated by Japanese firms. Simplot’s unconventional approach and focus on cost-cutting and efficiency helped Micron survive and eventually thrive, contributing to the resurgence of the U.S. semiconductor industry in the face of Japanese competition.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>Jack Simplot’s transition from the potato industry to semiconductors symbolized a unique American entrepreneurial spirit.</li>
<li>Simplot’s investment in Micron was initially seen as unlikely to succeed, given the intense competition from Japanese DRAM manufacturers.</li>
<li>Micron, despite its small size and lack of experience, managed to innovate and compete effectively in the DRAM market.</li>
<li>The chapter highlights the importance of cost-cutting and efficient manufacturing in the semiconductor industry.</li>
<li>Simplot’s unconventional business strategies were key to Micron’s survival and growth.</li>
<li>Micron’s success story serves as a counterexample to the decline of other American semiconductor companies in the 1980s.</li>
<li>The narrative illustrates the broader theme of American resilience and adaptability in high-tech industries.</li>
<li>Simplot and Micron’s journey reflects the challenges and opportunities in the global semiconductor market.</li>
<li>Micron’s ability to outmaneuver both Japanese and American competitors showcased the value of creative and strategic thinking in the semiconductor sector.</li>
<li>The resurgence of the U.S. semiconductor industry, as exemplified by Micron, was crucial for maintaining global technological competitiveness.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“Jack Simplot made his first fortune in potatoes… but his venture into semiconductors was a game changer.”</li>
<li>“Micron, initially an underdog in the DRAM market, became a symbol of American industrial resilience.”</li>
<li>“Simplot’s bet on the semiconductor industry was seen as risky but ultimately proved to be a strategic masterstroke.”</li>
<li>“Despite entering the DRAM market at its most competitive, Micron survived and eventually thrived.”</li>
<li>“Micron’s innovations and cost-cutting measures were key to its success against Japanese competition.”</li>
<li>“Jack Simplot’s unconventional approach to business was a major factor in Micron’s turnaround.”</li>
<li>“Micron’s journey highlighted the importance of adaptability and efficiency in the high-tech industry.”</li>
<li>“The success of Micron under Simplot’s guidance marked a significant win for the U.S. semiconductor industry.”</li>
<li>“Simplot’s story is an embodiment of the American entrepreneurial spirit in the face of global challenges.”</li>
<li>“Micron’s rise against Japanese DRAM giants showcased the potential for innovation and strategic thinking in the semiconductor sector.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>Jack Simplot, known for his success in the potato business, played a crucial role in the semiconductor industry by investing in Micron.</li>
<li>Micron was an American DRAM chip company that faced fierce competition from Japanese manufacturers.</li>
<li>Despite initial skepticism, Simplot’s investment in Micron and his business strategies contributed to the company’s success.</li>
<li>Micron managed to innovate and effectively compete in the DRAM market, which was dominated by Japanese firms.</li>
<li>The chapter highlights the significance of cost-cutting and efficient manufacturing practices in the semiconductor industry.</li>
<li>Micron’s success under Simplot’s guidance helped revive the American semiconductor industry.</li>
<li>The story of Simplot and Micron illustrates American resilience and adaptability in high-tech industries.</li>
<li>Micron’s ability to compete against both Japanese and American competitors in the semiconductor sector was notable.</li>
<li>The success of Micron is seen as a counterexample to the broader decline of American semiconductor companies in the 1980s.</li>
<li>Micron’s resurgence was significant for maintaining the U.S.’s global competitiveness in technology.</li>
</ol>
</section>
</section>
<section id="disrupting-intel" class="level2">
<h2 class="anchored" data-anchor-id="disrupting-intel">Disrupting Intel</h2>
<p>Chapter Twenty-Two focuses on Intel’s strategic pivot under Andy Grove’s leadership in the face of Japanese competition. The chapter highlights how Grove’s intense management style and decision to shift from DRAM to microprocessors saved Intel from bankruptcy, positioning it as a dominant player in the PC era. It details the challenges faced by Intel, including quality issues and Japanese dominance in DRAM, and how Grove’s “Copy Exactly” manufacturing strategy and focus on microprocessors, along with favorable economic conditions, led to Intel’s resurgence.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>Andy Grove’s leadership was pivotal in transforming Intel during a crucial period.</li>
<li>Intel faced significant challenges from Japanese DRAM manufacturers and internal quality issues.</li>
<li>Grove’s management style was intense and focused, driven by a sense of paranoia about competition and failure.</li>
<li>The shift from DRAM to microprocessors marked a strategic pivot for Intel in response to market changes.</li>
<li>The “Copy Exactly” manufacturing strategy was implemented to improve quality and efficiency.</li>
<li>External factors, such as the rising value of the yen and falling U.S. interest rates, aided Intel’s resurgence.</li>
<li>Intel’s success with microprocessors was bolstered by the growth of the PC market, particularly IBM’s and Compaq’s use of Intel chips.</li>
<li>Intel established a virtual monopoly in the PC chip market, driven by continuous innovation and new product releases.</li>
<li>The chapter illustrates the importance of strategic adaptation and strong leadership in the high-tech industry.</li>
<li>Intel’s turnaround under Grove is a textbook case of Silicon Valley capitalism and the value of disruptive innovation.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Andy Grove’s tenacity saved Intel from bankruptcy and made it one of the world’s most profitable and powerful companies.”</li>
<li>“Grove realized that Intel, once synonymous with innovation, was now being disrupted.”</li>
<li>“Exiting the DRAM market felt impossible… like Ford deciding to get out of cars.”</li>
<li>“Grove saw no other choice… ‘If we got kicked out and the board brought in a new CEO, what do you think he would do?’”</li>
<li>“Finally, Intel decided to leave memories, surrendering the DRAM market to the Japanese.”</li>
<li>“Grove applied his paranoia with a ruthlessness Silicon Valley had rarely seen.”</li>
<li>“Intel’s new manufacturing method was called ‘Copy Exactly.’”</li>
<li>“The microprocessor market seemed almost certain to grow, but the prospect that microprocessor sales could overtake DRAMs seemed mind-boggling.”</li>
<li>“The firm established a stranglehold on the market for PC chips.”</li>
<li>“More than innovation or expertise, it was Grove’s paranoia that saved Intel.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>Andy Grove played a critical role in transforming Intel during a challenging period.</li>
<li>Intel faced intense competition from Japanese DRAM manufacturers and internal quality issues.</li>
<li>Grove’s management style was characterized by intensity and a focus on operational efficiency.</li>
<li>Intel’s strategic shift from DRAM to microprocessors was crucial for its survival and future success.</li>
<li>The “Copy Exactly” manufacturing strategy improved Intel’s production quality and efficiency.</li>
<li>External economic factors, including the rising yen and falling U.S. interest rates, helped Intel’s resurgence.</li>
<li>Intel’s success in the microprocessor market was closely tied to the growth of the PC industry.</li>
<li>Intel established a dominant position in the PC chip market through continuous innovation.</li>
<li>Grove’s leadership at Intel is an example of disruptive innovation and strategic adaptation in the tech industry.</li>
<li>Intel’s turnaround under Grove’s leadership is a key example of successful business strategy in Silicon Valley.</li>
</ol>
</section>
</section>
<section id="my-enemys-enemy-the-rise-of-korea" class="level2">
<h2 class="anchored" data-anchor-id="my-enemys-enemy-the-rise-of-korea">My Enemy’s Enemy: The Rise of Korea</h2>
<p>Chapter Twenty-Three narrates the emergence of South Korea as a semiconductor powerhouse. It focuses on Lee Byung-chul, founder of Samsung, who capitalized on the U.S.-Japan semiconductor rivalry to establish South Korea’s semiconductor industry. The chapter details how Silicon Valley, particularly Intel, collaborated with Korean firms like Samsung to counter Japanese dominance in DRAM production. This strategic alliance, driven by economic and geopolitical motives, propelled South Korea to become a leading center for memory chip production.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>The rise of South Korea’s semiconductor industry was influenced by the U.S.-Japan semiconductor competition.</li>
<li>Lee Byung-chul’s vision transformed Samsung from a modest business into a semiconductor superpower.</li>
<li>Samsung’s entry into semiconductor manufacturing was part of South Korea’s broader industrialization strategy.</li>
<li>The U.S. semiconductor industry saw Korean companies as strategic partners against Japanese competition.</li>
<li>Silicon Valley companies, like Intel, formed joint ventures with Korean firms to offset Japanese dominance in DRAMs.</li>
<li>The U.S. government’s trade policies indirectly benefited Korean semiconductor companies.</li>
<li>The transition of South Korea’s economy from basic assembly to cutting-edge chipmaking was a significant technological leap.</li>
<li>Korean firms benefited from lower costs and wages compared to Japan, providing a competitive edge in the global market.</li>
<li>The collaboration between U.S. and Korean companies involved technology transfer and joint production efforts.</li>
<li>South Korea’s emergence as a memory chip production center was a result of strategic alliances, governmental support, and economic necessity.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“Lee Byung-chul could turn Samsung into a semiconductor superpower with the help of America’s chip industry and the South Korean state.”</li>
<li>“Silicon Valley’s strategy to outmaneuver the Japanese involved finding cheaper sources of supply in Asia, a role Samsung could easily play.”</li>
<li>“Lee’s ambition was supported by the South Korean government, identifying semiconductors as a priority.”</li>
<li>“Samsung’s venture into semiconductors was a big bet, with the government promising to invest $400 million in the industry.”</li>
<li>“Intel and other Silicon Valley firms saw Korean upstarts as potential partners against Japanese competition.”</li>
<li>“The rise of Korean DRAM producers was cheered by Intel, as it could reduce Japan’s threat to Silicon Valley.”</li>
<li>“U.S.-Japan trade tension helped Korean companies, as Washington’s policies opened the market for Korean DRAMs.”</li>
<li>“Silicon Valley was happy to work with Korean companies, undercutting Japanese competitors.”</li>
<li>“Samsung’s collaboration with U.S. firms was crucial in making South Korea a leading center for memory chip making.”</li>
<li>“Jerry Sanders’s logic was simple: ‘My enemy’s enemy is my friend.’”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>South Korea’s rise in the semiconductor industry was influenced by the competition between the U.S. and Japan.</li>
<li>Lee Byung-chul transformed Samsung into a major player in the semiconductor sector.</li>
<li>Samsung’s entry into chipmaking was part of South Korea’s industrial strategy, supported by the government.</li>
<li>The U.S. semiconductor industry collaborated with Korean firms to counter Japanese dominance in DRAMs.</li>
<li>Intel and other Silicon Valley companies formed joint ventures with Korean companies like Samsung.</li>
<li>U.S. trade policies with Japan indirectly benefited Korean semiconductor companies.</li>
<li>South Korea’s shift to advanced chipmaking marked a significant technological development.</li>
<li>Lower costs and wages in Korea provided a competitive advantage over Japanese firms.</li>
<li>Technology transfer and joint production were key aspects of U.S.-Korean semiconductor collaborations.</li>
<li>South Korea became one of the world’s leading centers for memory chip production due to strategic alliances and governmental support.</li>
</ol>
</section>
</section>
<section id="this-is-the-future" class="level2">
<h2 class="anchored" data-anchor-id="this-is-the-future">This Is the Future</h2>
<p>Chapter Twenty-Four focuses on the technological advancements and key figures that led to the resurgence of the U.S. semiconductor industry in the late 1980s and early 1990s. It highlights the role of DARPA and other government initiatives in supporting semiconductor research and development, the influence of innovators like Lin Conway and Carver Mead in standardizing chip design, and the impact of Qualcomm’s Irwin Jacobs in wireless communication. The chapter underscores the pivotal shift in chip design methodology and the rise of powerful microprocessors, exemplified by Intel’s 486 microprocessor with 1.2 million transistors.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>The U.S. semiconductor industry’s revival was fueled by a combination of government support, industry collaboration, and technological innovation.</li>
<li>DARPA played a crucial role in funding research and development in semiconductors, contributing to technological breakthroughs.</li>
<li>Innovators like Lin Conway and Carver Mead revolutionized chip design, enabling more complex and powerful microprocessors.</li>
<li>Qualcomm, founded by Irwin Jacobs, leveraged advancements in microprocessors for wireless communications, expanding the scope of semiconductor applications.</li>
<li>The shift to automated chip design methodologies represented a significant technological leap in the semiconductor industry.</li>
<li>The development of the Intel 486 microprocessor, with 1.2 million transistors, marked a milestone in computing power and efficiency.</li>
<li>Government efforts were most effective when they capitalized on pre-existing American strengths in technology and innovation.</li>
<li>The collaboration between academia and industry played a vital role in advancing semiconductor technology and applications.</li>
<li>The evolution of chip design techniques had far-reaching implications for various industries, including computing and telecommunications.</li>
<li>The chapter highlights the dynamic interplay between government policy, scientific research, and industrial innovation in driving technological progress.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“This is the future,” declared Irwin Jacobs, holding up a microprocessor chip.</li>
<li>“DARPA financed a program to let university researchers send chip designs to be produced at cutting-edge fabs.”</li>
<li>“Carver Mead and Lin Conway’s mathematical design rules paved the way for computer programs to automate chip design.”</li>
<li>“Intel’s 486 microprocessor, a small piece of silicon packed with 1.2 million microscopic switches.”</li>
<li>“The rise of Qualcomm under Jacobs’s leadership signaled the expanding role of semiconductors in wireless communication.”</li>
<li>“Government efforts were not about resuscitating failing firms but turning smart ideas into prototype products.”</li>
<li>“Silicon Valley’s chip design methodology evolved from being an art to a science.”</li>
<li>“The Mead-Conway revolution transformed how chips were designed and manufactured.”</li>
<li>“DARPA’s support for semiconductor research was crucial in maintaining America’s technological edge.”</li>
<li>“The semiconductor industry’s resurgence was marked by the collaboration between government, academia, and industry.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>The late 1980s and early 1990s saw a resurgence in the U.S. semiconductor industry.</li>
<li>DARPA played a key role in funding semiconductor research and development.</li>
<li>Innovations by Lin Conway and Carver Mead standardized chip design, leading to more advanced microprocessors.</li>
<li>Qualcomm, led by Irwin Jacobs, expanded the use of semiconductors in wireless communications.</li>
<li>The shift to automated chip design methodologies marked a significant advancement in the semiconductor industry.</li>
<li>Intel’s 486 microprocessor with 1.2 million transistors was a significant technological achievement.</li>
<li>Government support was crucial in fostering innovation and technological breakthroughs in the semiconductor sector.</li>
<li>Collaboration between academia and industry was vital for the advancement of semiconductor technology.</li>
<li>The chapter highlights the importance of technological innovation and government policy in driving the semiconductor industry.</li>
<li>The rise of powerful microprocessors had a significant impact on computing and telecommunications.</li>
</ol>
</section>
</section>
<section id="the-kgbs-directorate-t" class="level2">
<h2 class="anchored" data-anchor-id="the-kgbs-directorate-t">The KGB’s Directorate T</h2>
<p>Chapter Twenty-Five examines the Soviet Union’s espionage efforts to acquire Western semiconductor technology. The chapter centers on Vladimir Vetrov, a KGB spy, who was part of Directorate T, a division focused on stealing Western technology, particularly integrated circuits. It details the extensive scale of Soviet espionage, including stealing chips and manufacturing equipment, and the challenges of replicating advanced Western technology in the USSR. The chapter underscores the limitations of the Soviet “copy it” strategy and the significant technological gap between the Soviet Union and the West.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>The Soviet Union heavily relied on espionage to acquire Western semiconductor technology.</li>
<li>Directorate T of the KGB played a central role in these efforts, focusing on stealing and replicating Western integrated circuits.</li>
<li>The Soviet strategy of copying Western technology was hindered by their inability to replicate complex manufacturing processes.</li>
<li>Vladimir Vetrov’s involvement in Directorate T highlights the extent of Soviet efforts to bridge the technology gap.</li>
<li>The Soviet Union’s reliance on espionage for technological advancement underscored their lag in innovation.</li>
<li>Soviet espionage targeted not only semiconductor designs but also manufacturing equipment.</li>
<li>Despite extensive efforts, the USSR struggled to keep pace with Western advancements in microprocessor technology.</li>
<li>The Soviet “copy it” strategy was ultimately limited in its effectiveness due to the complexities of semiconductor technology.</li>
<li>The chapter reveals the challenges faced by the Soviet Union in developing a self-sustaining semiconductor industry.</li>
<li>The technological gap between the Soviet Union and the West was significant, despite the USSR’s espionage efforts.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“Vladimir Vetrov was a KGB spy, deeply involved in efforts to steal Western technology.”</li>
<li>“The KGB’s Directorate T was established to acquire Western equipment and technology, especially in semiconductors.”</li>
<li>“Soviet spies targeted Silicon Valley firms, stealing chips and purchasing them on the black market.”</li>
<li>“The ‘copy it’ strategy of the Soviet Union involved stealing designs and trying to reproduce them domestically.”</li>
<li>“Despite their efforts, Soviet engineers struggled to produce advanced chips at scale.”</li>
<li>“The Soviets managed to acquire nearly every facet of the semiconductor manufacturing process from the West.”</li>
<li>“The Soviet Union’s reliance on espionage highlighted their technological lag behind the West.”</li>
<li>“Stealing chip designs was only useful if they could be produced at scale in the USSR.”</li>
<li>“The complexity of building semiconductor chips made it difficult for the Soviets to catch up.”</li>
<li>“The vast scale of Soviet theft of Western industrial secrets was shocking to Western intelligence.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>The Soviet Union relied on espionage to gain access to Western semiconductor technology.</li>
<li>Directorate T of the KGB was specifically tasked with stealing Western technology, focusing on integrated circuits.</li>
<li>Soviet efforts to copy Western technology were hindered by manufacturing challenges.</li>
<li>Vladimir Vetrov, a KGB spy, was deeply involved in these espionage activities.</li>
<li>The Soviet “copy it” strategy faced limitations due to the complexities of semiconductor technology.</li>
<li>Soviet espionage included stealing both semiconductor designs and manufacturing equipment.</li>
<li>Despite extensive efforts, the Soviet Union lagged behind the West in microprocessor technology.</li>
<li>The Soviet strategy of replicating Western technology was limited in effectiveness.</li>
<li>The USSR’s reliance on espionage underscored their innovation gap with the West.</li>
<li>The scale of Soviet theft from Western industries was extensive and significant.</li>
</ol>
</section>
</section>
<section id="weapons-of-mass-destruction-the-impact-of-the-offset" class="level2">
<h2 class="anchored" data-anchor-id="weapons-of-mass-destruction-the-impact-of-the-offset">Weapons of Mass Destruction: The Impact of the Offset</h2>
<p>Chapter Twenty-Six discusses the pivotal role of semiconductor technology in modern warfare. It focuses on Soviet Marshal Nikolai Ogarkov’s predictions about the transformation of conventional explosives into weapons of mass destruction through advanced technology. The chapter illustrates how the U.S.’s offset strategy, led by figures like Bill Perry, capitalized on microelectronics to create precision-guided weapons systems, significantly shifting the balance of military power. It also highlights the technological gap between the U.S. and the Soviet Union, with the latter falling behind in semiconductor technology, impacting its military capabilities.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>Advances in semiconductor technology fundamentally changed military strategies and capabilities, particularly for the U.S.</li>
<li>The U.S.’s offset strategy involved integrating microelectronics into conventional weapons, enhancing their precision and effectiveness.</li>
<li>Soviet Marshal Nikolai Ogarkov recognized the potential of semiconductors to revolutionize warfare.</li>
<li>The technological gap in semiconductors became a crucial factor in the military balance between the U.S. and the Soviet Union.</li>
<li>Bill Perry’s offset strategy was instrumental in advancing U.S. military technology using semiconductor-based systems.</li>
<li>The Soviet Union struggled to keep pace with the U.S. in developing advanced military technologies due to its lag in semiconductor innovation.</li>
<li>The chapter underscores the strategic importance of semiconductors in national defense and global power dynamics.</li>
<li>Soviet efforts to compensate for their technological lag included espionage and attempts to replicate Western technology.</li>
<li>The U.S.’s advancements in semiconductor technology gave it a significant advantage in precision-guided munitions and missile systems.</li>
<li>The chapter highlights the intersection of technology, military strategy, and geopolitics during the Cold War.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“Long-range, highly accurate, terminally guided combat systems… would transform conventional explosives into weapons of mass destruction,” predicted Soviet Marshal Nikolai Ogarkov.</li>
<li>“Bill Perry’s offset strategy was working, and the Soviet Union didn’t have a response.”</li>
<li>“The Soviet Union had fallen hopelessly behind in the crucial technology undergirding this new driver of military power.”</li>
<li>“The Soviet Union’s inadequacy in chipmaking taught its weapons designers to limit the use of complex electronics.”</li>
<li>“The US had put a guidance computer powered by Texas Instruments chips on board the Minuteman II missile in the early 1960s.”</li>
<li>“Soviet ballistic missiles were generally told to follow a specific flight path toward their target.”</li>
<li>“By the 1980s, American missiles calculated their own path to the target.”</li>
<li>“The challenge in finding a submarine is to make sense of a cacophony of sound waves.”</li>
<li>“The U.S. had plugged its submarine sensors into the ILLIAC-4, one of the most powerful supercomputers using semiconductor memory chips.”</li>
<li>“The Soviet Union’s effort to reinvigorate its chip makers failed completely.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Semiconductor technology played a vital role in modernizing military weaponry and strategies.</li>
<li>The U.S. used its technological edge in semiconductors to develop precision-guided munitions and advanced combat systems.</li>
<li>Soviet Marshal Nikolai Ogarkov acknowledged the transformative potential of advanced technology in warfare.</li>
<li>The Soviet Union lagged behind the U.S. in semiconductor technology, impacting its military capabilities.</li>
<li>Bill Perry’s offset strategy in the U.S. leveraged semiconductor technology to enhance military systems.</li>
<li>The U.S.’s technological advancements in semiconductors provided a significant military advantage.</li>
<li>The Soviet Union’s efforts in semiconductors were hindered by a lack of innovation and reliance on espionage.</li>
<li>The chapter illustrates the critical importance of semiconductors in national defense and global military balance.</li>
<li>American advancements in missile guidance and submarine detection systems were powered by semiconductor technology.</li>
<li>The Soviet Union’s attempts to improve its semiconductor capabilities were largely unsuccessful.</li>
</ol>
</section>
</section>
<section id="war-hero" class="level2">
<h2 class="anchored" data-anchor-id="war-hero">War Hero</h2>
<p>Chapter Twenty-Seven examines the impact of semiconductor technology on modern warfare, particularly during the Persian Gulf War. It highlights the transformation of conventional explosives into precision-guided weapons, largely due to advanced microelectronics. The chapter focuses on the U.S.’s successful use of Paveway bombs and Tomahawk missiles, showcasing the effectiveness of semiconductor-based guidance systems. It underscores the significant shift in warfare brought about by semiconductors, changing the nature of military power and demonstrating the strategic importance of this technology in global conflict.</p>
<section id="ideas-6" class="level3">
<h3 class="anchored" data-anchor-id="ideas-6">Ideas</h3>
<ol type="1">
<li>The Persian Gulf War marked a turning point in the use of semiconductor technology in warfare.</li>
<li>Precision-guided munitions, like Paveway bombs, revolutionized military tactics and effectiveness.</li>
<li>The U.S. military’s reliance on semiconductor-based weapons systems demonstrated their strategic importance in modern conflict.</li>
<li>The success of these weapons systems in the Persian Gulf War highlighted the technological gap between the U.S. and other nations, particularly the Soviet Union.</li>
<li>Advanced microelectronics enabled the development of more accurate, efficient, and lethal weaponry.</li>
<li>The chapter illustrates the profound impact of semiconductors on the character and outcome of wars.</li>
<li>Semiconductor technology transformed conventional explosives into highly precise and destructive tools.</li>
<li>The U.S.’s technological superiority in semiconductors was a key factor in its military success during the Gulf War.</li>
<li>The effectiveness of semiconductor-based weapons systems in the Gulf War altered global perceptions of military power and technology.</li>
<li>The chapter underscores the critical role of semiconductors in shaping modern military capabilities and strategies.</li>
</ol>
</section>
<section id="quotes-6" class="level3">
<h3 class="anchored" data-anchor-id="quotes-6">Quotes</h3>
<ol type="1">
<li>“The Persian Gulf War was the first major test of Perry’s offset strategy, which had been devised after the Vietnam War.”</li>
<li>“The war demonstrated the triumph of silicon over steel.”</li>
<li>“Precision-guided munitions like Paveway bombs and Tomahawk missiles represented a new era in warfare.”</li>
<li>“Advanced microelectronics and a set of wings strapped to a bomb had transformed the nature of military power.”</li>
<li>“The U.S. military’s success in the Gulf War owed much to its technological edge in semiconductors.”</li>
<li>“The effectiveness of these weapons systems made it impossible to deny the changing character of war.”</li>
<li>“Semiconductor technology had elevated conventional explosives to a new level of precision and lethality.”</li>
<li>“The Gulf War showcased the strategic importance of semiconductor technology in global conflict.”</li>
<li>“The U.S.’s military superiority was underpinned by its advancements in semiconductor-based weapons systems.”</li>
<li>“The Gulf War was a technological operation, a struggle over the airwaves.”</li>
</ol>
</section>
<section id="facts-6" class="level3">
<h3 class="anchored" data-anchor-id="facts-6">Facts</h3>
<ol type="1">
<li>The Persian Gulf War was a significant demonstration of the use of semiconductor technology in modern warfare.</li>
<li>Precision-guided munitions like Paveway bombs played a crucial role in the U.S. military strategy.</li>
<li>The U.S.’s reliance on semiconductor-based weapons systems was a key factor in its military success.</li>
<li>The Gulf War highlighted the technological gap between the U.S. and other nations, including the Soviet Union.</li>
<li>Advanced microelectronics were essential in the development of precision-guided weaponry.</li>
<li>The success of these weapons systems changed the nature of warfare and global military strategies.</li>
<li>Semiconductor technology transformed conventional explosives into highly precise and effective weapons.</li>
<li>The U.S.’s technological superiority in semiconductors contributed significantly to its military capabilities.</li>
<li>The Gulf War altered global perceptions of military power and the importance of technology.</li>
<li>Semiconductors played a critical role in shaping modern military capabilities and strategies.</li>
</ol>
</section>
</section>
<section id="the-cold-war-is-over-and-you-have-won" class="level2">
<h2 class="anchored" data-anchor-id="the-cold-war-is-over-and-you-have-won">The Cold War Is Over and You Have Won</h2>
<p>Chapter Twenty-Eight explores the decline of Japan’s semiconductor industry in the early 1990s and the end of the Cold War. It focuses on Sony co-founder Akio Morita and the economic crisis in Japan, contrasting it with the resurgence of the U.S. The chapter discusses Japan’s overinvestment in semiconductor production and the challenges it faced, including the rise of competitors like Micron and Samsung. The downfall of Japan’s semiconductor dominance and the Soviet Union’s technological lag are highlighted, illustrating the shifts in global power dynamics.</p>
<section id="ideas-7" class="level3">
<h3 class="anchored" data-anchor-id="ideas-7">Ideas</h3>
<ol type="1">
<li>Japan’s semiconductor industry, once dominant, faced a significant decline in the early 1990s.</li>
<li>Sony’s Akio Morita witnessed Japan’s economic downturn and the diminishing influence of Japanese semiconductor firms.</li>
<li>Overinvestment and lack of innovation contributed to the challenges faced by Japan’s semiconductor industry.</li>
<li>The U.S. semiconductor industry regained its leading position, bolstered by companies like Intel, Micron, and Qualcomm.</li>
<li>South Korea, led by firms like Samsung, emerged as a strong competitor in the semiconductor market.</li>
<li>The Soviet Union’s technological backwardness became evident as the Cold War ended, impacting its global position.</li>
<li>The chapter underscores the importance of innovation, efficient investment, and market adaptability in the semiconductor industry.</li>
<li>The decline of Japan’s semiconductor dominance marked a shift in the global economic and technological landscape.</li>
<li>The end of the Cold War highlighted the critical role of technology in global power dynamics.</li>
<li>The U.S.’s resurgence in semiconductors was a combination of strategic moves, technological advancements, and changing market conditions.</li>
</ol>
</section>
<section id="quotes-7" class="level3">
<h3 class="anchored" data-anchor-id="quotes-7">Quotes</h3>
<ol type="1">
<li>“Sony’s Akio Morita had spent the 1980s jetting around the world… he was treated as a business oracle.”</li>
<li>“In 1990, crisis hit. Japan’s financial markets crashed.”</li>
<li>“America’s arm’s-length capital markets hadn’t felt like an advantage in the 1980s, but by the 1990s, it was clear they had kept firms on their toes.”</li>
<li>“Japanese DRAM makers would have benefited from Andy Grove’s paranoia or Jack Simplot’s wisdom about commodity market volatility.”</li>
<li>“Toshiba’s discovery of Flash or NAND memory was ignored, allowing Intel to bring this new type of memory chip to market.”</li>
<li>“Japan’s semiconductor dominance was already eroding when its stock market crashed.”</li>
<li>“In the Japan that can say no… Japan could use chip dominance to exert power over both the United States and the USSR.”</li>
<li>“The first war of the digital era… American military might astounded most observers.”</li>
<li>“Japan’s semiconductor ambitions had underwritten the country’s expanding sense of its global position.”</li>
<li>“The Cold War is over. Silicon Valley had won.”</li>
</ol>
</section>
<section id="facts-7" class="level3">
<h3 class="anchored" data-anchor-id="facts-7">Facts</h3>
<ol type="1">
<li>Japan’s semiconductor industry faced a significant downturn in the early 1990s.</li>
<li>Akio Morita observed the decline of Japan’s economic and semiconductor influence.</li>
<li>Overinvestment and a lack of innovation were key factors in Japan’s semiconductor challenges.</li>
<li>The U.S. regained its position as a leader in the semiconductor industry.</li>
<li>South Korea emerged as a significant competitor in semiconductors.</li>
<li>The Soviet Union’s technological backwardness became apparent with the end of the Cold War.</li>
<li>The decline of Japan’s semiconductor dominance marked a shift in global technological dynamics.</li>
<li>The end of the Cold War highlighted the importance of technology in global power structures.</li>
<li>The U.S.’s resurgence in the semiconductor industry was due to strategic, technological, and market factors.</li>
<li>Silicon Valley’s success was a key factor in the U.S.’s regained dominance in semiconductors.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-4/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 3: Leadership Lost?</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-3/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>That Competition is Tough</li>
<li>At War with Japan</li>
<li>Shipping Junk</li>
<li>The Crude Oil of the 1980s</li>
<li>Death Spiral</li>
<li>The Japan That Can Say No</li>
</ul>
<section id="that-competition-is-tough" class="level2">
<h2 class="anchored" data-anchor-id="that-competition-is-tough">That Competition is Tough</h2>
<p>Chapter Fifteen delves into the intense competition faced by the U.S. semiconductor sector in the 1980s, particularly from Japan. It centers on the struggles of American companies like Intel and Texas Instruments against Japanese firms such as Toshiba and NEC, known for producing high-quality DRAM chips. The chapter highlights the shift in global semiconductor dynamics, with Japanese companies excelling in quality and efficiency, challenging American technological dominance. This competition spurred significant changes in the U.S. industry, impacting companies, policies, and the broader technological landscape.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>The 1980s were a challenging decade for the U.S. semiconductor industry due to intense competition from Japan.</li>
<li>Japanese firms like Toshiba and NEC gained a significant edge in producing high-quality DRAM chips.</li>
<li>American companies underestimated Japanese competitors, who excelled in quality and efficiency.</li>
<li>Hewlett-Packard’s Richard Anderson found Japanese chips to have far lower failure rates than American counterparts.</li>
<li>The quality gap between American and Japanese chips raised questions about the viability of U.S. products in the market.</li>
<li>Japan’s rise in consumer electronics was marked by high-quality products, challenging American economic preeminence.</li>
<li>The success of Japanese companies like Sony in consumer electronics was a result of both innovation and efficient mass manufacturing.</li>
<li>American beliefs in their innovation superiority were challenged by the practical successes of Japanese firms.</li>
<li>The U.S. post-war strategy of supporting Japan’s technological development contributed to the rise of its semiconductor industry.</li>
<li>The competition from Japan caused concern in the U.S. about losing its technological edge.</li>
<li>The efficiency and productivity of Japanese semiconductor manufacturing were seen as a significant threat to American companies.</li>
<li>The shift in the semiconductor industry was part of a broader trend of Japanese excellence in various industries.</li>
<li>The U.S. semiconductor sector’s struggles reflected broader changes in global economic and technological dynamics.</li>
<li>The competition from Japan forced American semiconductor companies to reevaluate their strategies and practices.</li>
<li>The chapter highlights the global nature of the semiconductor industry and the interplay of national strategies, corporate competition, and technological innovation.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“The 1980s were a hellish decade for the entire U.S. semiconductor sector.”</li>
<li>“Richard Anderson’s judgment about a chip could shape the fate of any semiconductor company.”</li>
<li>“Japanese firms like Toshiba and NEC were now building DRAM memory chips.”</li>
<li>“U.S. chipmakers were run by people who’d invented high-tech.”</li>
<li>“Anderson tested Japanese chips and found that they were of far better quality than American competitors.”</li>
<li>“The lowest failure rate of the three American firms was 0.09 percent.”</li>
<li>“The American DRAM chips worked the same, cost the same, but malfunctioned far more often.”</li>
<li>“Sony’s Akio Morita replaced the ‘Made in Japan’ reputation for low price with high-quality products.”</li>
<li>“The U.S. had supported Japan’s post-war transformation into a transistor salesman.”</li>
<li>“Charlie Spork, managing a GE production line, found Japan’s productivity fascinating and frightening.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>The 1980s were marked by intense competition in the U.S. semiconductor industry from Japanese firms.</li>
<li>Japanese companies like Toshiba and NEC produced high-quality DRAM chips, challenging U.S. dominance.</li>
<li>American semiconductor companies initially underestimated the capabilities of their Japanese counterparts.</li>
<li>Hewlett-Packard’s analysis revealed that Japanese chips had significantly lower failure rates than American ones.</li>
<li>Japan’s rise in consumer electronics was characterized by high-quality and efficient manufacturing.</li>
<li>The success of Japanese firms in the global market challenged the belief in American innovation superiority.</li>
<li>The U.S. post-war strategy contributed to the technological rise of Japan, particularly in semiconductors.</li>
<li>The competition from Japan raised concerns in the U.S. about maintaining its technological edge.</li>
<li>American semiconductor companies faced challenges in matching the efficiency and productivity of Japanese manufacturing.</li>
<li>The struggle of the U.S. semiconductor sector in the 1980s reflected broader shifts in global economic and technological dynamics.</li>
</ol>
</section>
</section>
<section id="at-war-with-japan" class="level2">
<h2 class="anchored" data-anchor-id="at-war-with-japan">At War with Japan</h2>
<p>Chapter Sixteen chronicles the fierce competition between U.S. and Japanese semiconductor companies in the 1980s. Focusing on Jerry Sanders, CEO of Advanced Micro Devices, and Charlie Spork, the chapter explores the challenges faced by American firms like Intel and AMD in competing with Japanese companies such as Toshiba and NEC. It delves into issues of intellectual property, espionage, market access, and the advantages Japanese firms held in quality, government support, and capital access, painting a picture of a high-stakes economic battle in the semiconductor industry.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>The 1980s semiconductor industry was marked by intense competition between American and Japanese companies.</li>
<li>Japanese firms, like Toshiba and NEC, gained an edge in the DRAM market, challenging U.S. companies.</li>
<li>American semiconductor firms faced difficulties in competing with the quality and efficiency of Japanese products.</li>
<li>Intellectual property disputes and accusations of espionage added to the tensions between U.S. and Japanese companies.</li>
<li>The U.S. struggled with market access in Japan, where domestic firms dominated semiconductor sales.</li>
<li>Japanese government policies, including subsidies and collaboration encouragement, supported their semiconductor industry.</li>
<li>U.S. companies faced higher capital costs, impacting their competitiveness against Japanese firms.</li>
<li>The competition highlighted the strategic importance of the semiconductor industry in global economic and technological leadership.</li>
<li>Silicon Valley firms had to adapt to the aggressive market strategies and efficient production models of Japanese companies.</li>
<li>The rivalry reflected broader economic and political dynamics between the U.S. and Japan during this period.</li>
<li>The U.S. semiconductor industry’s struggles were indicative of changing global economic and technological landscapes.</li>
<li>The semiconductor battle was not just about technology, but also about national pride, economic policies, and global influence.</li>
<li>Accusations of unfair competition and trade practices were rampant between the U.S. and Japan.</li>
<li>The high stakes of the semiconductor industry led to legal battles, political interventions, and strategic corporate maneuvers.</li>
<li>This period marked a critical phase in the history of the semiconductor industry, with lasting impacts on the global technological landscape.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Jerry Sanders, CEO of Advanced Micro Devices, felt the fight with Japan was not a fair one.”</li>
<li>“Japanese firms like Toshiba and NEC were excelling in producing high-quality DRAM memory chips.”</li>
<li>“Richard Anderson of Hewlett-Packard noted the superior quality of Japanese chips compared to American ones.”</li>
<li>“Charlie Spork led the offshoring of chip assembly throughout Asia.”</li>
<li>“Japanese competition seemed different; it threatened to move the entire industry across the Pacific.”</li>
<li>“Japanese firms benefited from intellectual property theft, protected markets, government subsidies, and cheap capital.”</li>
<li>“U.S. chip makers were constantly suing each other over intellectual property disputes.”</li>
<li>“Silicon Valley firms had to navigate a highly competitive and rapidly evolving global semiconductor market.”</li>
<li>“Japan’s government subsidized its chip makers and pushed for industry collaboration.”</li>
<li>“American companies struggled to gain market share in Japan, impacting their global competitiveness.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>The 1980s semiconductor industry was dominated by competition between U.S. and Japanese firms.</li>
<li>Japanese companies gained a significant edge in DRAM technology, challenging U.S. dominance.</li>
<li>American semiconductor firms faced challenges in quality and efficiency compared to their Japanese counterparts.</li>
<li>Intellectual property and espionage were key issues in the U.S.-Japan semiconductor rivalry.</li>
<li>Market access in Japan was a major hurdle for U.S. semiconductor companies.</li>
<li>Japanese government policies supported the domestic semiconductor industry with subsidies and collaborative initiatives.</li>
<li>High capital costs were a significant disadvantage for U.S. semiconductor firms against Japanese competition.</li>
<li>The competition between U.S. and Japanese semiconductor companies had far-reaching economic and political implications.</li>
<li>Silicon Valley had to adapt to the aggressive strategies and efficient production models of Japanese semiconductor companies.</li>
<li>The rivalry between the U.S. and Japan in the semiconductor sector was reflective of broader economic and political tensions.</li>
</ol>
</section>
</section>
<section id="shipping-junk" class="level2">
<h2 class="anchored" data-anchor-id="shipping-junk">Shipping Junk</h2>
<p>Chapter Seventeen discusses the decline of America’s lithography industry, focusing on GCA Corporation. It traces GCA’s journey from a leader in photolithography equipment to a company struggling amid intense competition, particularly from Japan. The chapter highlights CEO Milton Greenberg’s ambitious but ultimately flawed management, detailing GCA’s challenges in maintaining market dominance, manufacturing quality, and customer service. It exemplifies the broader challenges faced by U.S. high-tech firms in the 1980s, contrasting with Japan’s rising dominance in the semiconductor industry.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>GCA Corporation’s decline mirrored the broader challenges faced by the U.S. semiconductor industry in the 1980s.</li>
<li>Milton Greenberg’s leadership at GCA was marked by ambition but lacked focus on essential business aspects.</li>
<li>GCA initially led the lithography market but struggled with manufacturing quality and customer service.</li>
<li>The company’s decline was exacerbated by competition from Japanese firms like Nikon, which provided better technology and customer responsiveness.</li>
<li>The U.S. semiconductor industry’s struggle was partly due to high-tech firms not adapting to changing market demands and manufacturing standards.</li>
<li>Mismanagement and operational inefficiencies contributed significantly to GCA’s decline.</li>
<li>GCA’s inability to keep up with technological advancements and market trends led to a loss of market share.</li>
<li>The story of GCA highlights the shift in global semiconductor dominance from the U.S. to Japan in the 1980s.</li>
<li>The chapter illustrates the consequences of failing to innovate and maintain quality in a highly competitive industry.</li>
<li>GCA’s downfall serves as a cautionary tale about the importance of customer service, manufacturing quality, and adaptability in high-tech industries.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“GCA Corporation was celebrated as one of America’s hottest high-technology corporations in the 1980s.”</li>
<li>“Milton Greenberg, CEO of GCA, imagined himself as a business titan.”</li>
<li>“Greenberg’s management style was ambitious but lacked a focus on manufacturing and quality control.”</li>
<li>“Japanese competition threatened to move the entire semiconductor industry across the Pacific.”</li>
<li>“GCA’s struggles were emblematic of the broader challenges facing the U.S. high-tech industry.”</li>
<li>“Nikon’s rise in the lithography market reflected Japan’s growing dominance in the semiconductor industry.”</li>
<li>“Mismanagement and poor customer service contributed to GCA’s decline.”</li>
<li>“GCA’s failure to adapt to market changes and technological advancements led to its downfall.”</li>
<li>“The story of GCA’s decline is a microcosm of the challenges faced by American high-tech firms in the 1980s.”</li>
<li>“The chapter shows how the U.S. lost its edge in the semiconductor industry to Japan.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>GCA Corporation was a leading American company in photolithography equipment in the 1980s.</li>
<li>CEO Milton Greenberg’s management style was marked by ambition but lacked essential business focus.</li>
<li>GCA struggled with maintaining manufacturing quality and customer service amid intense competition.</li>
<li>The company faced significant challenges from Japanese competitors, notably Nikon.</li>
<li>Operational inefficiencies and mismanagement were key factors in GCA’s decline.</li>
<li>GCA’s downfall was part of a broader trend of U.S. high-tech firms struggling in the 1980s.</li>
<li>The U.S. semiconductor industry’s challenges were contrasted with Japan’s rising dominance.</li>
<li>GCA’s decline highlights the importance of innovation, quality control, and customer responsiveness in the semiconductor industry.</li>
<li>The story of GCA illustrates the shift in global semiconductor industry dominance from the U.S. to Japan.</li>
<li>The chapter sheds light on the consequences of failing to adapt to changing technological and market dynamics in high-tech industries.</li>
</ol>
</section>
</section>
<section id="the-crude-oil-of-the-1980s" class="level2">
<h2 class="anchored" data-anchor-id="the-crude-oil-of-the-1980s">The Crude Oil of the 1980s</h2>
<p>Chapter Eighteen covers the U.S. semiconductor industry’s response to Japanese competition in the 1980s. It highlights a pivotal meeting of tech leaders like Bob Noyce, Jerry Sanders, and Charlie Spork at Ming’s Chinese restaurant in Palo Alto, where they strategized to seek government support. The chapter emphasizes the strategic importance of semiconductors, likened to crude oil, underscoring their essential role in military and civilian technology. It details the U.S. industry’s efforts, including the formation of the Semiconductor Industry Association, to lobby Washington for support against Japan’s growing dominance, which was seen as a national security issue.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>The U.S. semiconductor industry in the 1980s faced significant challenges due to Japanese competition.</li>
<li>Industry leaders, realizing the strategic importance of semiconductors, likened them to “the crude oil of the 1980s.”</li>
<li>The meeting at Ming’s Chinese restaurant marked a shift in the industry’s approach, from competition to collaboration and seeking government support.</li>
<li>Semiconductors were crucial not just for consumer electronics but also for military applications, making them a national security concern.</li>
<li>The formation of the Semiconductor Industry Association was a response to the need for a unified front in lobbying Washington.</li>
<li>Japan’s advancements in semiconductors and lithography equipment threatened U.S. technological and military superiority.</li>
<li>The U.S. semiconductor industry’s lobbying efforts were aimed at countering Japan’s subsidies and market dominance.</li>
<li>The chapter highlights the interplay between technology, economics, and national security in the context of the semiconductor industry.</li>
<li>The U.S. military’s dependence on advanced semiconductor technology underscored the urgency of supporting the domestic industry.</li>
<li>The semiconductor competition between the U.S. and Japan reflected broader global economic and geopolitical dynamics.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“Semiconductors are the crude oil of the 1980s,” Jerry Sanders declared.</li>
<li>“The people who control the crude oil will control the electronics industry.”</li>
<li>“Japan was becoming the Saudi Arabia of semiconductors.”</li>
<li>“The oil embargoes of the 1970s demonstrated the risks of relying on foreign production.”</li>
<li>“America’s computer industry expanded rapidly, as PCs were made small enough and cheap enough for individual use.”</li>
<li>“U.S. military forces depend heavily on technological superiority to win.”</li>
<li>“Electronics is the technology that can be leveraged most highly.”</li>
<li>“Semiconductors are key to leadership in electronics.”</li>
<li>“U.S. defense will soon depend on foreign sources for state-of-the-art technology in semiconductors.”</li>
<li>“The Pentagon knew just how important semiconductors were to American military primacy.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>In the 1980s, the U.S. semiconductor industry was challenged by Japanese competition.</li>
<li>Industry leaders likened semiconductors to crude oil due to their strategic importance.</li>
<li>A pivotal meeting at Ming’s Chinese restaurant led to a new strategy for the U.S. semiconductor industry.</li>
<li>Semiconductors were essential for both civilian technology and military applications.</li>
<li>The Semiconductor Industry Association was formed to lobby for government support.</li>
<li>Japan’s growing dominance in semiconductors was seen as a threat to U.S. technological and military superiority.</li>
<li>The U.S. semiconductor industry lobbied Washington to counter Japanese subsidies and market control.</li>
<li>The U.S. military’s reliance on semiconductors highlighted the industry’s national security importance.</li>
<li>The competition between the U.S. and Japan in semiconductors had significant economic and geopolitical implications.</li>
<li>The chapter emphasizes the critical role of semiconductors in global technology and security landscapes.</li>
</ol>
</section>
</section>
<section id="death-spiral" class="level2">
<h2 class="anchored" data-anchor-id="death-spiral">Death Spiral</h2>
<p>Chapter Nineteen discusses the struggles of the U.S. semiconductor industry in the late 1980s. It focuses on the decline of GCA Corporation, a leader in photolithography equipment, amidst fierce Japanese competition. Bob Noyce, a key figure in the semiconductor industry, reflects on the challenges faced by American companies, including intellectual property disputes, market access issues, and the need for government support. The chapter highlights the strategic importance of semiconductors, likened to crude oil, and details the industry’s efforts, including the creation of Sematech, to regain competitiveness.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>The U.S. semiconductor industry in the late 1980s was in a “death spiral” due to intense Japanese competition.</li>
<li>GCA Corporation’s decline exemplified the broader challenges facing American semiconductor companies.</li>
<li>Intellectual property disputes and market access issues were significant hurdles for U.S. firms.</li>
<li>Semiconductors were seen as strategically vital, akin to crude oil, due to their importance in technology and defense.</li>
<li>The U.S. government’s support was sought to counterbalance Japanese dominance in the semiconductor market.</li>
<li>Sematech was created as a consortium to enhance the competitiveness of U.S. semiconductor firms.</li>
<li>Bob Noyce’s involvement in Sematech was crucial, given his stature in the industry.</li>
<li>The U.S. semiconductor industry’s challenges reflected broader economic and technological shifts globally.</li>
<li>GCA Corporation struggled with mismanagement and an inability to compete with Japanese technological advancements.</li>
<li>The U.S. semiconductor industry’s struggles were symptomatic of the declining competitiveness of American high-tech industries.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“We’re in a death spiral,” Bob Noyce told a reporter in 1986.</li>
<li>“Can you name a field in which the U.S. is not falling behind?” Noyce wondered.</li>
<li>“Silicon Valley had a schizophrenic relationship with the government.”</li>
<li>“Semiconductors are the crude oil of the 1980s,” Jerry Sanders declared.</li>
<li>“The chip industry and the Defense Department argued that semiconductors were strategic.”</li>
<li>“Noyce estimated that he spent half his time in the 1980s in Washington.”</li>
<li>“The Japanese subsidies have been in the billions,” Sanders declared.</li>
<li>“U.S. DRAM sales into Japan barely budged.”</li>
<li>“Bob Noyce volunteered to lead Sematech.”</li>
<li>“GCA appealed one final time to the government for help.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>The late 1980s were a challenging period for the U.S. semiconductor industry due to Japanese competition.</li>
<li>GCA Corporation’s decline was indicative of the broader struggles of American semiconductor firms.</li>
<li>Intellectual property disputes and market access issues were significant challenges for U.S. companies.</li>
<li>Semiconductors were regarded as strategically crucial, similar to crude oil, due to their role in technology and defense.</li>
<li>The creation of Sematech was an industry response to improve U.S. competitiveness in semiconductors.</li>
<li>Bob Noyce, a prominent figure in the semiconductor industry, was heavily involved in Sematech.</li>
<li>The struggles of the U.S. semiconductor industry mirrored wider economic and technological changes globally.</li>
<li>GCA Corporation faced difficulties due to mismanagement and competition with Japanese technology.</li>
<li>The U.S. semiconductor industry’s difficulties were symptomatic of declining American competitiveness in high-tech sectors.</li>
<li>The U.S. government’s support was sought to help American semiconductor companies compete with Japanese firms.</li>
</ol>
</section>
</section>
<section id="the-japan-that-can-say-no" class="level2">
<h2 class="anchored" data-anchor-id="the-japan-that-can-say-no">The Japan That Can Say No</h2>
<p>Chapter Twenty discusses the rise of Japanese power and influence in the semiconductor industry. It focuses on Sony co-founder Akio Morita and his perspective on Japan’s technological and economic ascent. The chapter portrays Morita as a key figure in redefining Japan’s image from a producer of low-cost goods to a leader in high-tech industries. It delves into the changing dynamics of U.S.-Japan relations, highlighting the shift in economic power and the growing confidence of Japanese leaders in asserting their country’s technological and economic strengths.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>Japan’s transformation into a high-tech powerhouse was symbolized by Sony’s global success and Morita’s influence.</li>
<li>Morita played a significant role in changing Japan’s international image from a producer of cheap goods to a high-tech leader.</li>
<li>The success of Japanese companies in consumer electronics and semiconductors reshaped global economic dynamics.</li>
<li>Japan’s technological advancements led to a reassessment of its role in the global economy and politics.</li>
<li>Morita’s leadership at Sony demonstrated the potential of Japanese innovation and business acumen.</li>
<li>The book “The Japan That Can Say No,” co-authored by Morita, reflected a newfound assertiveness in Japanese foreign policy.</li>
<li>The changing U.S.-Japan relationship was marked by Japan’s growing confidence in challenging American economic and technological dominance.</li>
<li>Japanese advancements in semiconductors were seen as a strategic challenge to the U.S., particularly in the context of military technology.</li>
<li>The rise of Japan as a technological power led to a reevaluation of the global balance of power.</li>
<li>Morita’s views expressed in the book indicated a shift in Japanese attitudes towards the U.S., moving from deference to a more equal footing.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“Akio Morita began to detect a certain arrogance in his American friends.”</li>
<li>“Sony’s rise under Morita redefined Japan’s image abroad.”</li>
<li>“Japan was no longer seen as a producer of paper umbrellas but as a builder of the world’s most high-tech goods.”</li>
<li>“Morita’s book ‘The Japan That Can Say No’ articulated a zero-sum Japanese nationalism.”</li>
<li>“Japan’s technological prowess had earned it a position among the world’s greatest powers.”</li>
<li>“Morita found it difficult to mask his view that Japan’s technological prowess had earned it a leading global role.”</li>
<li>“Japan’s success in DRAM chips set it to overtake the United States in almost every industry that mattered.”</li>
<li>“The Japanese are rapidly catching up in logic chips and application-specific integrated circuits.”</li>
<li>“Japanese semiconductor dominance was evidence of an emerging Pax Nipponica.”</li>
<li>“America’s supply chain statecraft worked in fending off communists, but the primary beneficiary looked to have been Japan.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Japan transformed into a global leader in high-tech industries, symbolized by Sony’s success under Akio Morita.</li>
<li>Morita influenced Japan’s international image, shifting it from a producer of cheap goods to a high-tech leader.</li>
<li>The success of Japanese companies in consumer electronics and semiconductors had a significant impact on global economic dynamics.</li>
<li>Japan’s technological advancements led to changes in its global economic and political role.</li>
<li>The book “The Japan That Can Say No,” co-authored by Morita, expressed a new assertiveness in Japanese foreign policy.</li>
<li>The U.S.-Japan relationship evolved with Japan gaining confidence in challenging American dominance.</li>
<li>Japanese advancements in semiconductors posed a strategic challenge to the U.S., particularly in military technology.</li>
<li>Japan’s rise as a technological power led to a reevaluation of the global balance of power.</li>
<li>Morita’s views in the book indicated a shift in Japanese attitudes toward the U.S.</li>
<li>The rise of Japanese semiconductor technology was seen as part of an emerging Pax Nipponica.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-3/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 2: The Circuitry of the American World</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-2/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Soviet Silicon Valley</li>
<li>Copy It</li>
<li>The Transistor Salesman</li>
<li>Transistor Girls</li>
<li>Precision Strike</li>
<li>Supply Chain Statecraft</li>
<li>Intel’s Revolutionaries</li>
<li>The Pentagon’s Offset Strategy</li>
</ul>
<section id="soviet-silicon-valley" class="level2">
<h2 class="anchored" data-anchor-id="soviet-silicon-valley">Soviet Silicon Valley</h2>
<p>Chapter Seven explores the Soviet Union’s response to the U.S.’s advancements in semiconductor technology during the Cold War. It highlights Anatoly Trutko, a Soviet semiconductor engineer who studied in the U.S., and the USSR’s efforts to build its own semiconductor industry. The chapter details how the Soviet Union, recognizing the strategic importance of semiconductors, invested heavily in this technology, including creating Zelenograd, a city dedicated to semiconductor research and production, mirroring Silicon Valley.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>The Cold War era was marked by intense competition in semiconductor technology between the U.S. and the USSR.</li>
<li>Soviet scientists, like Anatoly Trutko, were sent to the U.S. to study advanced semiconductor technologies.</li>
<li>The Soviet Union recognized the strategic importance of semiconductors in both civilian and military applications.</li>
<li>The USSR’s efforts in semiconductor research were part of a broader strategy to compete with the U.S. in technology.</li>
<li>Zelenograd, the “Soviet Silicon Valley,” was established to concentrate efforts in semiconductor development.</li>
<li>Soviet semiconductor advancements were heavily influenced by what they learned from the U.S. and their own innovations.</li>
<li>The KGB’s involvement in the Soviet semiconductor industry illustrates the technology’s importance in espionage and defense.</li>
<li>The Soviets’ translation of William Shockley’s textbook into Russian underscored their commitment to semiconductor education.</li>
<li>The CIA monitored Soviet advancements in semiconductors to gauge the technological gap between the superpowers.</li>
<li>The story of Joel Barr, a Soviet spy who contributed significantly to Soviet semiconductor efforts, highlights the Cold War’s clandestine nature.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“Anatoly Trutko, a semiconductor engineer from the Soviet Union, moved into a Stanford University dormitory.”</li>
<li>“The Soviet Union was catching up in science and technology.”</li>
<li>“Silicon Valley… set the standard and pace of innovation.”</li>
<li>“The Soviets understood the value of semiconductors, translating Shockley’s textbook into Russian.”</li>
<li>“A CIA report found that America was only two to four years ahead of the Soviets in transistors.”</li>
<li>“Soviet science was rising, and several of the USSR’s Sputnik satellites were orbiting overhead.”</li>
<li>“Khrushchev was committed to out-competing the United States in every sphere.”</li>
<li>“The USSR established new semiconductor facilities across the country.”</li>
<li>“Yuri Osakian… was tasked to build semiconductor devices for the Soviet space program and the military.”</li>
<li>“Zelenograd was designed to be a scientific paradise.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>The Soviet Union actively pursued semiconductor technology during the Cold War.</li>
<li>Anatoly Trutko, a Soviet engineer, studied semiconductors at Stanford University.</li>
<li>The USSR viewed semiconductors as crucial for both civilian and military uses.</li>
<li>Zelenograd was established as a center for semiconductor research and production in the USSR.</li>
<li>Soviet advancements in semiconductors were partially influenced by U.S. technologies and strategies.</li>
<li>The KGB played a role in the Soviet semiconductor industry, reflecting its strategic importance.</li>
<li>The CIA closely monitored the Soviet Union’s progress in semiconductor technology.</li>
<li>Nikita Khrushchev saw semiconductor technology as a key area to compete with the U.S.</li>
<li>The USSR’s semiconductor industry was a mix of espionage, state-driven initiatives, and scientific research.</li>
<li>Soviet efforts in semiconductors were aimed at achieving technological parity with the U.S.</li>
</ol>
</section>
</section>
<section id="copy-it" class="level2">
<h2 class="anchored" data-anchor-id="copy-it">Copy It</h2>
<p>Chapter Eight examines the Soviet Union’s approach to semiconductor technology during the Cold War. It details the USSR’s efforts to replicate American semiconductor designs, particularly focusing on the directive of Soviet official Alexander Shokhin to copy a Texas Instruments integrated circuit. The chapter delves into the limitations and challenges of the Soviet “copy it” strategy, highlighting the difficulties in replicating complex manufacturing processes and the rapid advancements in semiconductor technology led by companies like TI and Fairchild.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>The Soviet Union’s semiconductor strategy during the Cold War heavily relied on copying American technology.</li>
<li>Soviet scientists, like Boris Malin, were tasked with reverse-engineering Western semiconductor devices.</li>
<li>The USSR struggled with the complex manufacturing processes required for high-quality chip production.</li>
<li>Soviet reliance on espionage and copying reflected a fundamental misunderstanding of the semiconductor industry’s dynamics.</li>
<li>The rapid advancement of semiconductor technology in the West, driven by Moore’s Law, made it difficult for the Soviet Union to keep pace.</li>
<li>The Soviet semiconductor industry was hindered by a lack of access to advanced materials and manufacturing techniques.</li>
<li>American companies like Texas Instruments and Fairchild Semiconductor were continually innovating, leaving Soviet counterparts behind.</li>
<li>The Soviet focus on military applications limited the scope for creativity and civilian product development in their semiconductor industry.</li>
<li>The CoCom restrictions imposed by Western allies significantly impacted the Soviet Union’s ability to access advanced technologies.</li>
<li>The Soviet “copy it” strategy resulted in an industry that was always several steps behind its American counterparts.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Alexander Shokhin ordered Soviet scientists to ‘Copy it,’ referring to a Texas Instruments integrated circuit.”</li>
<li>“Boris Malin, a Soviet student, returned from studying in the U.S. with a Texas Instruments SN51.”</li>
<li>“The Soviet Union’s semiconductor strategy was heavily dependent on copying Western technology.”</li>
<li>“Soviet scientists faced challenges in replicating the complex manufacturing processes of American chips.”</li>
<li>“The rapid pace of semiconductor technology advancements made it difficult for the USSR to keep up.”</li>
<li>“Moore’s Law drove the constant innovation in the semiconductor industry, leaving Soviet efforts behind.”</li>
<li>“Soviet reliance on copying reflected a misunderstanding of the dynamic nature of the semiconductor industry.”</li>
<li>“The CoCom restrictions significantly hindered Soviet access to advanced semiconductor technologies.”</li>
<li>“Soviet semiconductor development was characterized by a centralized, state-controlled approach.”</li>
<li>“The Soviet ‘copy it’ strategy resulted in an industry that was always catching up.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>The Soviet Union attempted to replicate American semiconductor technology during the Cold War.</li>
<li>Soviet scientists, including Boris Malin, were involved in reverse-engineering efforts.</li>
<li>The USSR faced significant challenges in matching the quality of Western semiconductor manufacturing.</li>
<li>Soviet semiconductor strategy was largely reactive, focusing on copying rather than innovating.</li>
<li>The rapid advancement of semiconductor technology in the West, exemplified by Moore’s Law, outpaced Soviet efforts.</li>
<li>Soviet semiconductor industry was heavily centralized and state-controlled.</li>
<li>Restrictions by Western allies limited the USSR’s access to advanced semiconductor technologies.</li>
<li>The Soviet focus on military applications limited their semiconductor industry’s scope for civilian innovation.</li>
<li>Soviet semiconductor facilities often used less sophisticated equipment and materials.</li>
<li>The Soviet Union’s semiconductor industry was fundamentally behind its American counterparts due to its reactive strategy.</li>
</ol>
</section>
</section>
<section id="the-transistor-salesman" class="level2">
<h2 class="anchored" data-anchor-id="the-transistor-salesman">The Transistor Salesman</h2>
<p>Chapter Nine discusses Japan’s rise in the semiconductor industry. It focuses on the role of Japanese Prime Minister Hayato Ikeda and Sony co-founder Akio Morita in embracing and promoting transistor technology. The chapter illustrates Japan’s strategic integration into America’s semiconductor industry, highlighting the transition from post-war recovery to becoming a global leader in consumer electronics, driven by innovation, licensing agreements, and government support.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>Japan’s post-World War II recovery included a strategic focus on semiconductor technology.</li>
<li>Akio Morita and Sony played a pivotal role in Japan’s semiconductor industry development.</li>
<li>The U.S. government’s support of Japan’s technological growth was part of its Cold War strategy.</li>
<li>Japan’s integration into the global semiconductor market was deliberate and supported by business elites.</li>
<li>The transistor’s introduction to Japan marked the beginning of a significant shift in the electronics industry.</li>
<li>Japanese companies, like Sony, focused on consumer electronics, diversifying from the American focus on computing and military applications.</li>
<li>Licensing agreements with American firms were crucial for Japan’s access to semiconductor technology.</li>
<li>Sony’s initial ventures in transistor radios revolutionized consumer electronics.</li>
<li>Japan’s government policies played a significant role in supporting and regulating the electronics industry.</li>
<li>The development of the Japanese semiconductor industry was marked by a focus on innovation, product design, and marketing.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“Prime Minister Hayato Ikeda… brought a Sony transistor radio as a gift to French President Charles de Gaulle.”</li>
<li>“Akio Morita’s vision for Sony focused on leveraging transistor technology for consumer electronics.”</li>
<li>“The U.S. supported Japan’s rebirth as a technological power, a shift from earlier post-war policies.”</li>
<li>“Sony’s licensing agreement with AT&amp;T was a milestone in gaining access to transistor technology.”</li>
<li>“Morita realized that transistors would revolutionize consumer electronics.”</li>
<li>“Sony’s transistor radios became a symbol of Japan’s emerging electronics prowess.”</li>
<li>“The Japanese government’s support was crucial for the growth of its high-tech industry.”</li>
<li>“Japan’s focus on consumer electronics was strategically different from the Soviet ‘copy it’ tactics.”</li>
<li>“Sony and other Japanese firms paid significant licensing fees to U.S. companies for chip technology.”</li>
<li>“Japan’s success in the global electronics market was a blend of innovation, efficient manufacturing, and effective marketing.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>Japan’s post-war strategy included a focus on developing semiconductor technology.</li>
<li>Akio Morita and Sony were instrumental in Japan’s rise in the semiconductor industry.</li>
<li>The U.S. government supported Japan’s technological development as part of its Cold War strategy.</li>
<li>Japan strategically integrated into the global semiconductor market with support from its business elites.</li>
<li>Sony’s venture into transistor radios was pivotal in revolutionizing consumer electronics.</li>
<li>Licensing agreements with American companies were key for Japan’s access to semiconductor technology.</li>
<li>The Japanese government played a significant role in supporting and regulating the electronics industry.</li>
<li>Japan’s focus on consumer electronics differentiated it from the American focus on computing and military applications.</li>
<li>Japanese companies’ success in global electronics markets was marked by manufacturing efficiency and market adaptiveness.</li>
<li>Collaboration between Japanese and American companies was crucial in the spread of semiconductor technology globally.</li>
</ol>
</section>
</section>
<section id="transistor-girls" class="level2">
<h2 class="anchored" data-anchor-id="transistor-girls">Transistor Girls</h2>
<p>Chapter Ten delves into the role of labor, particularly women’s labor, in the semiconductor industry’s growth. It explores how companies like Fairchild Semiconductor, led by figures like Charlie Sporck, shifted semiconductor assembly to Asia, capitalizing on low labor costs and lax labor laws. The chapter discusses the establishment of facilities in Hong Kong, Singapore, and Malaysia, highlighting the industry’s globalization and the exploitation of cheap, predominantly female labor.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>The semiconductor industry’s expansion relied heavily on cheap, skilled labor, particularly women.</li>
<li>Charlie Sporck’s drive for efficiency led to the offshoring of semiconductor assembly to Asia.</li>
<li>Fairchild Semiconductor was among the first to move assembly operations to Hong Kong due to lower labor costs.</li>
<li>Women were preferred in assembly line jobs due to perceived dexterity and willingness to tolerate monotonous work.</li>
<li>The semiconductor industry’s globalization began decades before it became a widespread phenomenon.</li>
<li>Asian countries like Malaysia, Singapore, and South Korea became key sites for semiconductor assembly due to low labor costs.</li>
<li>The move to Asia for chip assembly was driven by financial motives, not a strategic plan for globalization.</li>
<li>Semiconductor firms faced union challenges in the U.S. but not in Asian countries.</li>
<li>Foreign policy strategies of the U.S. saw Asian workers as vulnerable to communist influence, while industry leaders saw them as a workforce opportunity.</li>
<li>The semiconductor industry’s shift to Asia laid the groundwork for today’s Asia-centric supply chains.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“Transistor Girls, a novel illustrating the intersection of technology and labor exploitation in Asia.”</li>
<li>“Charlie Sporck was fixated on efficiency and cost reduction in semiconductor manufacturing.”</li>
<li>“Fairchild Semiconductor’s move to Hong Kong marked the beginning of the industry’s globalization.”</li>
<li>“Women were preferred for semiconductor assembly due to their perceived dexterity.”</li>
<li>“The semiconductor industry’s early globalization set the stage for current Asia-centric supply chains.”</li>
<li>“Sporck’s focus on labor costs led to the exploration of manufacturing sites across Asia.”</li>
<li>“The choice of Asian locations for assembly was driven by financial considerations.”</li>
<li>“The offshoring of semiconductor labor reshaped the industry’s global workforce dynamics.”</li>
<li>“U.S. foreign policy viewed Asian workers as potential communist targets, while the industry saw them as an opportunity.”</li>
<li>“The move to Asia for chip assembly was a cost-driven decision, not a strategic globalization plan.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>Women played a crucial role in the assembly of semiconductors, especially in Asian facilities.</li>
<li>Charlie Sporck’s management at Fairchild Semiconductor led to the offshoring of assembly operations to Asia.</li>
<li>Fairchild was one of the first semiconductor firms to establish assembly facilities in Hong Kong.</li>
<li>Lower labor costs in Asia were a primary driver for the semiconductor industry’s shift to the region.</li>
<li>The semiconductor industry’s globalization began in the 1960s, well before it became common in other industries.</li>
<li>Countries like Malaysia, Singapore, and South Korea became central to semiconductor assembly due to low wages.</li>
<li>The decision to move assembly operations to Asia was primarily financially motivated.</li>
<li>The semiconductor industry faced labor union challenges in the U.S. but not in Asian countries.</li>
<li>The shift to Asia for semiconductor assembly laid the groundwork for modern supply chains centered in the region.</li>
<li>The exploitation of cheap labor in Asia was instrumental in maintaining low semiconductor production costs.</li>
</ol>
</section>
</section>
<section id="precision-strike" class="level2">
<h2 class="anchored" data-anchor-id="precision-strike">Precision Strike</h2>
<p>Chapter Eleven examines the impact of semiconductor technology on warfare, focusing on the Vietnam War. It details how Texas Instruments (TI) developed advanced weaponry, specifically precision-guided munitions, leveraging semiconductor electronics. The chapter highlights the transformation of aerial bombing tactics with the introduction of laser-guided bombs, illustrating the pivotal role of microelectronics in modern military technology and the significant shift in warfare strategies.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>The Vietnam War saw a significant evolution in military technology, heavily influenced by advancements in semiconductors.</li>
<li>Texas Instruments played a crucial role in developing precision-guided munitions, changing the nature of aerial bombing.</li>
<li>Semiconductor technology enabled the creation of laser-guided bombs, drastically improving accuracy and effectiveness.</li>
<li>The development of these advanced weapons systems was a result of combining microelectronics with traditional weaponry.</li>
<li>The introduction of precision-guided munitions marked a shift from quantity to quality in aerial bombing strategies.</li>
<li>The Vietnam War served as a testing ground for new military technologies that would later revolutionize warfare.</li>
<li>TI’s innovations in weapon design reflected the broader impact of semiconductors on military capabilities.</li>
<li>The use of semiconductors in military technology highlighted the growing intersection between technology and warfare.</li>
<li>Precision-guided munitions, like those developed by TI, became essential tools in modern military arsenals.</li>
<li>The development of these technologies was driven by the need for more effective and efficient military strategies.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“Texas Instruments employees… were focused on making chips, not on the war.”</li>
<li>“TI’s first major contract for integrated circuits had been for massive nuclear missiles like the Minuteman II.”</li>
<li>“The early bombing campaigns in Vietnam dropped over 800,000 tons of bombs.”</li>
<li>“The Air Force realized it needed to fight smarter.”</li>
<li>“The problem with many guided munitions was the vacuum tubes.”</li>
<li>“The Sparrow missile’s radar system broke on average once every five to ten hours of use.”</li>
<li>“Weldon Word at TI wanted to change the precision of bombing in war.”</li>
<li>“Word’s idea was to use microelectronics to transform the military’s kill chain.”</li>
<li>“The intercontinental ballistic missiles presented a straightforward guidance challenge.”</li>
<li>“Word told his team to build weapons priced like an inexpensive family sedan.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>The Vietnam War saw the introduction of semiconductor-based precision-guided munitions.</li>
<li>Texas Instruments developed laser-guided bombs, significantly enhancing aerial bombing accuracy.</li>
<li>Semiconductor technology was crucial in the development of these advanced military weapons.</li>
<li>The use of precision-guided munitions marked a strategic shift in military tactics.</li>
<li>The Vietnam War served as a proving ground for new military technologies involving semiconductors.</li>
<li>The integration of microelectronics into military equipment revolutionized warfare strategies.</li>
<li>TI’s role in developing these technologies highlighted the intersection of commercial technology and military applications.</li>
<li>The introduction of these advanced weapons changed the nature of aerial combat and military strategy.</li>
<li>Laser-guided bombs represented a major advancement in the efficiency and effectiveness of aerial bombing.</li>
<li>The Vietnam War’s challenges spurred significant innovation in military technology.</li>
</ol>
</section>
</section>
<section id="supply-chain-statecraft" class="level2">
<h2 class="anchored" data-anchor-id="supply-chain-statecraft">Supply Chain Statecraft</h2>
<p>Chapter Twelve examines the strategic expansion of semiconductor supply chains into Asia, focusing on Taiwan. It details the efforts of Texas Instruments (TI) executive Mark Shepherd and Morris Chang in establishing semiconductor facilities in Taiwan. The chapter highlights the geopolitical and economic motivations behind this move, illustrating how semiconductors became integral to Taiwan’s economic development and U.S.-Asia relations, particularly amid the Vietnam War and rising tensions with China.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>The expansion of semiconductor supply chains to Asia, particularly Taiwan, was a strategic economic and geopolitical decision.</li>
<li>Mark Shepherd of Texas Instruments played a pivotal role in offshoring production to Taiwan.</li>
<li>Morris Chang, an influential figure in the semiconductor industry, was instrumental in TI’s expansion into Taiwan.</li>
<li>The move was motivated by low labor costs, favorable business climates, and geopolitical considerations during the Cold War.</li>
<li>Taiwan’s integration into the global semiconductor supply chain was part of a broader strategy to counter communist influence in Asia.</li>
<li>The development of semiconductor facilities in Taiwan bolstered the island’s economy and political stability.</li>
<li>The U.S. foreign policy during the Vietnam War era viewed semiconductor investments in Asia as a means to strengthen anti-communist allies.</li>
<li>The establishment of semiconductor plants in Taiwan and other Asian countries was also driven by the need for cheaper labor and manufacturing costs.</li>
<li>The semiconductor industry played a significant role in the economic transformation of Taiwan and other Asian countries.</li>
<li>The shift of semiconductor manufacturing to Asia marked the beginning of a new era in global technology and supply chain dynamics.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“Texas Instruments executive Mark Shepherd… led TI’s strategy of offshoring some of its production to Asia.”</li>
<li>“Morris Chang quipped that Shepherd’s expertise in Asia didn’t extend beyond bars and dancing girls.”</li>
<li>“Chang and Shepherd first visited Taiwan in 1968 as part of an Asian tour to select a location for a new chip assembly facility.”</li>
<li>“Taiwanese Economy Minister K.T. Lee and Shepherd had a contentious meeting about intellectual property and imperialist influences.”</li>
<li>“Lee eventually realized that integrating with the United States would benefit Taiwan.”</li>
<li>“The semiconductor supply chain in Asia was a response to the economic and political dynamics of the Cold War era.”</li>
<li>“TI’s board of directors approved construction of the new facility in Taiwan in 1968.”</li>
<li>“The establishment of semiconductor facilities in Taiwan was crucial for the island’s economic development.”</li>
<li>“The U.S. viewed semiconductor investments in Asia as a means to counter communist influence.”</li>
<li>“The expansion of semiconductor manufacturing to Asia marked a significant shift in the global technology landscape.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Texas Instruments expanded semiconductor production to Taiwan as part of a strategic decision.</li>
<li>Mark Shepherd and Morris Chang were key figures in TI’s expansion into Taiwan.</li>
<li>The decision was influenced by low labor costs and geopolitical considerations during the Cold War.</li>
<li>The establishment of semiconductor facilities in Taiwan was part of a broader anti-communist strategy in Asia.</li>
<li>Semiconductor investments in Taiwan and other Asian countries were driven by both economic and political motives.</li>
<li>The expansion of semiconductor manufacturing to Asia was a significant shift in global technology and supply chains.</li>
<li>Taiwan’s economic development was significantly impacted by the semiconductor industry.</li>
<li>The U.S. foreign policy during the Vietnam War era influenced semiconductor investments in Asia.</li>
<li>The semiconductor industry’s growth in Asia reshaped the region’s economic and political dynamics.</li>
<li>The relocation of semiconductor manufacturing to Asia created new global technology hubs.</li>
</ol>
</section>
</section>
<section id="intels-revolutionaries" class="level2">
<h2 class="anchored" data-anchor-id="intels-revolutionaries">Intel’s Revolutionaries</h2>
<p>Chapter Thirteen focuses on the founding of Intel in 1968 by Bob Noyce and Gordon Moore. The chapter details Intel’s groundbreaking work in developing Dynamic Random Access Memory (DRAM) and the microprocessor, setting the stage for the modern computing era. It highlights the cultural and technological shifts of the late 1960s, contrasting the societal upheavals with the quieter but revolutionary developments at Intel that would profoundly impact technology and society.</p>
<section id="ideas-6" class="level3">
<h3 class="anchored" data-anchor-id="ideas-6">Ideas</h3>
<ol type="1">
<li>Intel’s founding by Noyce and Moore marked a significant turning point in the semiconductor industry.</li>
<li>The development of DRAM by Intel represented a major advancement in computer memory technology.</li>
<li>Intel’s work on the microprocessor laid the foundation for the modern computing era.</li>
<li>The cultural context of the late 1960s, with societal upheaval and technological innovation, was a backdrop to Intel’s revolutionary work.</li>
<li>Intel’s strategy focused on mass-producing standardized chips, leading to economies of scale.</li>
<li>The company’s vision was to make transistors the cheapest and most widely used product.</li>
<li>Intel’s microprocessors enabled the proliferation of computing power in various devices.</li>
<li>The establishment of Intel marked a shift from industrial to digital society.</li>
<li>The semiconductor industry’s growth in Silicon Valley was driven by specialized knowledge, networks, and financial incentives.</li>
<li>Intel’s success illustrated the power of technology to reshape society and the economy.</li>
</ol>
</section>
<section id="quotes-6" class="level3">
<h3 class="anchored" data-anchor-id="quotes-6">Quotes</h3>
<ol type="1">
<li>“Bob Noyce and Gordon Moore founded Intel, which stood for integrated electronics.”</li>
<li>“Intel’s first product, a chip called a Dynamic Random Access Memory, or DRAM.”</li>
<li>“DRAM chips formed the core of computer memory up to the present day.”</li>
<li>“The microprocessor could be used in many different types of devices.”</li>
<li>“Bob Noyce held up a silicon wafer and declared, ‘This is going to change the world.’”</li>
<li>“Intel wasn’t the first company to think about producing a generalized logic chip.”</li>
<li>“The world’s first microprocessor, a micro-programmable computer on a chip.”</li>
<li>“Intel’s leaders knew that if they succeeded in expanding the availability of computing power, radical changes would follow.”</li>
<li>“Society’s fate will hang in the balance,” Carver Mead declared, referring to microelectronics technology.</li>
<li>“We are really the revolutionaries in the world today,” Gordon Moore declared in 1973.</li>
</ol>
</section>
<section id="facts-6" class="level3">
<h3 class="anchored" data-anchor-id="facts-6">Facts</h3>
<ol type="1">
<li>Intel was founded in 1968 by Bob Noyce and Gordon Moore.</li>
<li>Intel developed the first DRAM, a significant advancement in computer memory.</li>
<li>The company also developed the world’s first microprocessor, revolutionizing computing.</li>
<li>Intel’s strategy focused on mass-producing memory chips and standardized logic chips.</li>
<li>The development of the microprocessor facilitated the widespread use of computing power.</li>
<li>Intel’s innovations marked a shift towards a digital society and economy.</li>
<li>The semiconductor industry in Silicon Valley was driven by innovation and financial incentives.</li>
<li>Intel’s work on the microprocessor began the era of widespread computing and the tech tycoon.</li>
<li>The company’s leaders foresaw the potential of their technology to drive societal change.</li>
<li>The development of the microprocessor significantly increased the rate of information processing.</li>
</ol>
</section>
</section>
<section id="the-pentagons-offset-strategy" class="level2">
<h2 class="anchored" data-anchor-id="the-pentagons-offset-strategy">The Pentagon’s Offset Strategy</h2>
<p>Chapter Fourteen explores the U.S. Department of Defense’s strategic shift in leveraging semiconductor technology for military advantage. It focuses on William Perry’s role as the Under Secretary of Defense for Research and Engineering and his vision to integrate microprocessors and memory chips into military systems. The chapter highlights how this strategy, driven by the need to offset the Soviet Union’s military strength, led to advancements in guided missiles and precision weaponry, fundamentally changing the nature of warfare.</p>
<section id="ideas-7" class="level3">
<h3 class="anchored" data-anchor-id="ideas-7">Ideas</h3>
<ol type="1">
<li>The U.S. Defense Department’s offset strategy aimed to gain a technological edge over the Soviet Union.</li>
<li>William Perry played a critical role in incorporating semiconductor technology into military systems.</li>
<li>The use of microprocessors and memory chips in weapons systems marked a significant shift in military technology.</li>
<li>The Pentagon’s investment in new technologies was a response to the Soviet Union’s military advancements.</li>
<li>The development of precision-guided munitions was central to the U.S. military’s new strategy.</li>
<li>The U.S. aimed to counter the Soviet quantitative advantage with qualitatively superior weapons.</li>
<li>Perry’s vision was to integrate computing power into military hardware, enhancing efficiency and accuracy.</li>
<li>The shift to high-tech weaponry was seen as a solution to the challenges faced in the Vietnam War.</li>
<li>The strategy involved significant investments in guided missiles, satellites, and advanced chip technology.</li>
<li>The Pentagon’s approach represented a radical departure from traditional warfare, focusing on precision and information superiority.</li>
</ol>
</section>
<section id="quotes-7" class="level3">
<h3 class="anchored" data-anchor-id="quotes-7">Quotes</h3>
<ol type="1">
<li>“William Perry…saw microprocessors and memory chips as transformative for military systems.”</li>
<li>“The Pentagon’s offset strategy was to surpass the Soviet Union with superior technology.”</li>
<li>“Precision-guided munitions were at the heart of this new approach.”</li>
<li>“Perry envisioned a military enhanced by the power of computing.”</li>
<li>“The challenge was to integrate these technologies into the fabric of American military capabilities.”</li>
<li>“Guided missiles, satellites, and advanced chips became the focus of U.S. military investments.”</li>
<li>“Perry’s strategy represented a significant shift in warfare, emphasizing precision and control.”</li>
<li>“The implementation of the offset strategy required a leap in computing power.”</li>
<li>“The goal was to initiate an arms race that the Soviet Union couldn’t afford.”</li>
<li>“The integration of semiconductors into military equipment marked a new era in warfare.”</li>
</ol>
</section>
<section id="facts-7" class="level3">
<h3 class="anchored" data-anchor-id="facts-7">Facts</h3>
<ol type="1">
<li>The U.S. Defense Department’s offset strategy aimed to leverage semiconductor technology to gain a military advantage.</li>
<li>William Perry, as the Under Secretary of Defense for Research and Engineering, played a crucial role in this strategic shift.</li>
<li>The strategy focused on integrating microprocessors and memory chips into military systems.</li>
<li>The development of precision-guided munitions was central to the U.S. military’s new strategy.</li>
<li>The Pentagon’s approach aimed to counter the Soviet Union’s military strength with technological superiority.</li>
<li>The strategy involved significant investments in guided missiles, satellite technology, and advanced chip development.</li>
<li>The use of semiconductor technology in military systems marked a fundamental change in the nature of warfare.</li>
<li>The U.S. aimed to force the Soviet Union into a costly arms race, particularly in anti-missile defenses.</li>
<li>The Pentagon’s strategy was a response to the challenges and failures experienced in the Vietnam War.</li>
<li>The U.S. military’s technological advancements during this period were heavily dependent on the semiconductor industry’s innovations.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-2/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Part 1: Cold War Chips</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/part-1/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>From Steel to Silicon</li>
<li>The Switch</li>
<li>Noyce, Kilby, and the Integrated Circuit</li>
<li>Liftoff</li>
<li>Mortars and Mass Production</li>
<li>I Want To Get Rich</li>
</ul>
<section id="from-steel-to-silicon" class="level2">
<h2 class="anchored" data-anchor-id="from-steel-to-silicon">From Steel to Silicon</h2>
<p>Chapter One explores the transformation from the industrial age of World War II to the emergence of the semiconductor era. It highlights the experiences of key figures like Akio Morita, Morris Chang, and Andy Grove during the war, setting the stage for their future impacts in the semiconductor industry.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>World War II marked a transition from industrial warfare to technology-driven conflict.</li>
<li>The experiences of key individuals during WWII influenced the semiconductor industry’s development.</li>
<li>Akio Morita’s wartime research foreshadowed the future of guided missile technology.</li>
<li>The early life of Morris Chang in war-torn China highlighted resilience and adaptability.</li>
<li>Andy Grove’s experience in Hungary during WWII showed the human cost of war.</li>
<li>The concept of computation evolved significantly during and after WWII.</li>
<li>Mechanical computers in WWII were limited and paved the way for electronic advancements.</li>
<li>The war accelerated the need for more sophisticated computing power.</li>
<li>The development of radar and other technologies during WWII showcased the importance of innovation in warfare.</li>
<li>The atomic bombs on Hiroshima and Nagasaki signaled a new era of technological warfare.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“Japanese soldiers described World War II as a ‘typhoon of steel.’”</li>
<li>“Akio Morita… spent the final months of the war developing heat-seeking missiles.”</li>
<li>“Morris Chang’s childhood was punctuated by the sound of gunfire and air raid sirens.”</li>
<li>“Andy Grove lived through the same typhoon of steel that swept across Asia.”</li>
<li>“World War II was a conflict of industrial attrition.”</li>
<li>“The great powers had manufactured planes and tanks by the thousands.”</li>
<li>“The two atomic bombs… brought forth much speculation that a nascent atomic age might replace an era defined by coal and steel.”</li>
<li>“Early electric computers used the vacuum tube, a lightbulb-like metal filament enclosed in glass.”</li>
<li>“A tube turned on was coded as a one, while a vacuum tube turned off was a zero.”</li>
<li>“ENIAC… had 18,000 vacuum tubes… one tube malfunctioned every two days.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>World War II was a pivotal moment in the transition from industrial to technological warfare.</li>
<li>Akio Morita was involved in developing heat-seeking missile technology during WWII.</li>
<li>Morris Chang experienced the chaos and displacement of war in China during his youth.</li>
<li>Andy Grove’s early life in Hungary was marked by the harsh realities of WWII.</li>
<li>The technological developments of WWII laid the groundwork for future advancements in computing.</li>
<li>Mechanical computers used during WWII were limited in their capabilities.</li>
<li>The development of radar and other electronic devices was crucial during WWII.</li>
<li>The atomic bombings represented a significant shift in the nature of warfare.</li>
<li>The invention of the vacuum tube was a major advancement in computing technology.</li>
<li>Digital computing emerged as a response to the limitations of analog computation.</li>
</ol>
</section>
</section>
<section id="the-switch" class="level2">
<h2 class="anchored" data-anchor-id="the-switch">The Switch</h2>
<p>Chapter Two focuses on William Shockley’s contributions to semiconductor technology. It details Shockley’s background, his work at Bell Labs, and the development of the transistor, a pivotal invention in the field. The chapter also covers the collaborative efforts of Shockley’s colleagues at Bell Labs, highlighting the transistor’s revolutionary impact on technology and its initial underestimation by the public.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>William Shockley’s early life and education significantly influenced his work in semiconductors.</li>
<li>Shockley’s personality traits, like his sense of superiority, impacted his professional relationships.</li>
<li>Semiconductors’ unique properties enable them to conduct electricity under certain conditions.</li>
<li>The concept of doping semiconductors was crucial for developing new electronic devices.</li>
<li>Shockley’s initial experiments with silicon and electric fields laid the groundwork for the transistor.</li>
<li>The early instruments of the 1940s were inadequate for detecting small electric currents in semiconductors.</li>
<li>Shockley’s colleagues, Walter Bratton and John Bardeen, played key roles in proving his theories.</li>
<li>The invention of the transistor at Bell Labs marked a significant advancement in electronic technology.</li>
<li>AT&amp;T initially saw the transistor as a tool for improving telephone technology.</li>
<li>Transistors eventually replaced vacuum tubes in various electronic devices.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“William Shockley… assumed that if a better switch was to be found, it would be with the help of a type of material called semiconductors.”</li>
<li>“Shockley… was utterly convinced of his superiority over anyone around him.”</li>
<li>“Semiconductors are a unique class of materials.”</li>
<li>“Adding phosphorus or antimony to semiconducting materials like silicon or germanium, lets a negative current flow.”</li>
<li>“Shockley hypothesized that placing a piece of semiconductor material in the presence of an electric field could attract free electrons.”</li>
<li>“Nothing measurable,” Shockley explained about his early experiments.</li>
<li>“Shockley’s colleagues Walter Bratton and John Bardeen… built a device that applied two gold filaments to a block of germanium.”</li>
<li>“AT&amp;T, which owned Bell Labs, saw this device, soon christened a transistor, as useful primarily for its ability to amplify signals.”</li>
<li>“Transistors could amplify currents, and would be useful in devices such as hearing aids and radios.”</li>
<li>“Shockley locked himself in a Chicago hotel room… and began imagining different transistor structures.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>William Shockley was a key figure in the development of semiconductor technology.</li>
<li>Shockley’s background included education at Caltech and MIT, and work at Bell Labs.</li>
<li>Semiconductors can conduct electricity under specific conditions.</li>
<li>Doping semiconductors with certain materials allows for the flow of electric currents.</li>
<li>Shockley’s early experiments aimed to transform silicon into a conductive material using electric fields.</li>
<li>The transistor was a significant technological advancement in electronic computing.</li>
<li>AT&amp;T’s initial interest in the transistor was for telephone signal amplification.</li>
<li>The transistor replaced less reliable vacuum tubes in various electronic devices.</li>
<li>Shockley’s further research on transistors was driven by a desire to outperform his colleagues.</li>
<li>The transistor’s amplification capability was a major breakthrough.</li>
</ol>
</section>
</section>
<section id="noyce-kilby-and-the-integrated-circuit" class="level2">
<h2 class="anchored" data-anchor-id="noyce-kilby-and-the-integrated-circuit">Noyce, Kilby, and the Integrated Circuit</h2>
<p>Chapter Three describes the development of the integrated circuit. It details the efforts of Jack Kilby at Texas Instruments and the Fairchild Semiconductor team, including Bob Noyce and Gordon Moore, to overcome the complexity and limitations of transistor-based systems. This chapter highlights the revolutionary nature of the integrated circuit and its critical role in advancing computing and electronics.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>The transition from individual transistors to integrated circuits was a major technological leap.</li>
<li>Jack Kilby’s work at Texas Instruments was pivotal in simplifying transistor-based systems.</li>
<li>The integrated circuit was born out of the need to reduce complexity in electronic devices.</li>
<li>Bob Noyce and Gordon Moore at Fairchild Semiconductor played crucial roles in advancing integrated circuit technology.</li>
<li>William Shockley’s management style at Shockley Semiconductor led to significant talent migration, contributing to the founding of Fairchild Semiconductor.</li>
<li>The Fairchild team’s innovation was driven by the challenges of transistor manufacturing.</li>
<li>Kilby’s invention of the integrated circuit was initially a solution to reduce wiring complexities.</li>
<li>The integrated circuit represented a significant step towards miniaturization in electronics.</li>
<li>Noyce’s planar process innovation was key in developing more reliable and efficient integrated circuits.</li>
<li>The initial high cost of producing integrated circuits was a challenge for their commercial viability.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“Jack Kilby… fixated on finding a way to simplify the complexity created by all the wires that systems with transistors required.”</li>
<li>“Shockley planned to build the world’s best transistors.”</li>
<li>“The potential size of the transistor market was unclear.”</li>
<li>“Kilby’s idea was revolutionary: Multiple transistors could be built into a single slab of silicon or germanium.”</li>
<li>“The integrated circuit… became known colloquially as a chip.”</li>
<li>“The eight defectors from Shockley’s lab are widely credited with founding Silicon Valley.”</li>
<li>“Bob Noyce had a charismatic visionary enthusiasm for microelectronics.”</li>
<li>“Fairchild’s integrated circuits would be vastly more reliable than the maze of wires that other electronic devices relied on.”</li>
<li>“Noyce and Moore began to realize that miniaturization and electric efficiency were a powerful combination.”</li>
<li>“Noyce’s integrated circuit cost 50 times as much to make as a simpler device with separate components wired together.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>Jack Kilby at Texas Instruments played a crucial role in developing the integrated circuit.</li>
<li>The integrated circuit was designed to address the complexities of wiring in transistor-based systems.</li>
<li>Bob Noyce and Gordon Moore at Fairchild Semiconductor significantly advanced integrated circuit technology.</li>
<li>The departure of key engineers from Shockley Semiconductor was a turning point in the history of Silicon Valley.</li>
<li>The integrated circuit represented a major advancement in the miniaturization of electronics.</li>
<li>Noyce’s planar process was critical in creating more efficient and reliable integrated circuits.</li>
<li>The initial production cost of integrated circuits was significantly higher than that of simpler devices.</li>
<li>The integrated circuit was a key milestone in the evolution of computing technology.</li>
<li>Eugene Kleiner, a member of the “traitorous eight,” later founded Kleiner Perkins, a major venture capital firm.</li>
<li>The concept of Moore’s Law, later coined by Gordon Moore, reflected the rapid advancement in computing power.</li>
</ol>
</section>
</section>
<section id="liftoff" class="level2">
<h2 class="anchored" data-anchor-id="liftoff">Liftoff</h2>
<p>Chapter Four discusses the role of integrated circuits in the space race and military technology. It highlights the launch of Sputnik by the Soviet Union, prompting the United States to accelerate its space and missile programs. This chapter emphasizes how the demand from NASA and the U.S. military, especially for the Apollo and Minuteman programs, propelled the development and commercial success of integrated circuits, particularly for companies like Fairchild and Texas Instruments.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>Sputnik’s launch marked a turning point in global technological competition, emphasizing the importance of advanced electronics in space exploration.</li>
<li>The U.S. response to the Soviet space achievements included significant investment in technology and innovation.</li>
<li>NASA’s Apollo program became a key driver for the development of integrated circuits.</li>
<li>The Apollo Guidance Computer, using integrated circuits, was a groundbreaking advancement in computing for space exploration.</li>
<li>Fairchild Semiconductor’s integrated circuits were critical in the Apollo program, demonstrating their reliability in harsh environments.</li>
<li>The Minuteman missile program significantly contributed to the demand and advancement of integrated circuit technology.</li>
<li>Texas Instruments’ Pat Haggerty recognized the military potential of integrated circuits early on.</li>
<li>The shift from discrete transistors to integrated circuits marked a significant advancement in computing power and efficiency.</li>
<li>The Apollo and Minuteman programs showcased the practical applications of integrated circuits in critical and high-stakes environments.</li>
<li>The U.S. military became a major consumer of integrated circuits, influencing the direction of the semiconductor industry.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“Sputnik… orbited the Earth at a speed of 18,000 miles per hour.”</li>
<li>“The Soviet space program caused a crisis of confidence across America.”</li>
<li>“NASA’s vast budget in the 1960s to send astronauts to the Moon set its sights on a lunar landing.”</li>
<li>“The Apollo Guidance Computer was one of the most complicated computers ever made.”</li>
<li>“Fairchild’s micro logic chips… were used in the most unforgiving and rugged environment, outer space.”</li>
<li>“The integrated circuits in Apollo computers had run for 19 million hours with only two failures.”</li>
<li>“Chip sales to the Apollo program transformed Fairchild from a small startup into a firm with 1,000 employees.”</li>
<li>“NASA’s trust in integrated circuits was an important stamp of approval.”</li>
<li>“The Air Force’s Minuteman program was a turning point for Texas Instruments’ chip business.”</li>
<li>“Pat Haggerty’s bet on selling chips to the military was paying off.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>Sputnik’s launch by the Soviet Union marked a critical moment in the space race.</li>
<li>The U.S. Apollo program’s reliance on integrated circuits was pivotal for the semiconductor industry.</li>
<li>Fairchild Semiconductor’s chips played a significant role in the Apollo Guidance Computer.</li>
<li>The Minuteman missile program greatly increased the demand for integrated circuits.</li>
<li>Texas Instruments, under Pat Haggerty, foresaw the military applications of integrated circuits.</li>
<li>Integrated circuits were a major technological advancement over discrete transistors.</li>
<li>The U.S. military became a significant market for integrated circuits, influencing their development.</li>
<li>NASA’s adoption of integrated circuits in the Apollo program validated their reliability and efficiency.</li>
<li>The mass production of integrated circuits was a challenge initially faced by companies like Texas Instruments.</li>
<li>The Minuteman program’s need for lightweight, efficient computers was a key driver for the adoption of integrated circuits.</li>
</ol>
</section>
</section>
<section id="mortars-and-mass-production" class="level2">
<h2 class="anchored" data-anchor-id="mortars-and-mass-production">Mortars and Mass Production</h2>
<p>Chapter Five focuses on the evolution of semiconductor manufacturing, particularly photolithography. It traces the contributions of Jay Lathrop at Texas Instruments and the efforts of Morris Chang and others in advancing production techniques. The chapter underscores the challenges in mass-producing reliable transistors and integrated circuits, highlighting the role of military and space programs in driving these innovations.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>Photolithography, pioneered by Jay Lathrop, revolutionized semiconductor manufacturing by enabling the miniaturization of transistors.</li>
<li>The complexity of manufacturing reliable transistors required innovative approaches and extensive trial and error.</li>
<li>Morris Chang’s methodical approach at Texas Instruments significantly improved transistor production yields.</li>
<li>The military and space programs, particularly the Minuteman missile and Apollo spacecraft, drove the demand for large quantities of integrated circuits.</li>
<li>Texas Instruments’ commitment to mastering photolithography and mass production techniques was vital for the semiconductor industry’s growth.</li>
<li>The development of integrated circuits was not just a scientific achievement but also a triumph of engineering and manufacturing innovation.</li>
<li>The early semiconductor industry faced challenges in purifying chemicals and materials for chip production.</li>
<li>The invention of the transistor and the integrated circuit required a combination of theoretical physics and practical engineering.</li>
<li>The semiconductor industry’s growth was heavily influenced by the needs of the U.S. military during the Cold War.</li>
<li>Texas Instruments and Fairchild Semiconductor’s efforts in the 1960s laid the groundwork for the semiconductor industry’s future.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“Photolithography made it possible to imagine mass-producing tiny transistors.”</li>
<li>“Jay Lathrop’s innovation was a turning point in semiconductor manufacturing.”</li>
<li>“Morris Chang’s systematic approach transformed transistor production at Texas Instruments.”</li>
<li>“The Minuteman and Apollo programs created a massive demand for integrated circuits.”</li>
<li>“Mass production of chips was as much an art as it was a science.”</li>
<li>“The semiconductor industry’s growth was inextricably linked to the military’s needs during the Cold War.”</li>
<li>“Fairchild and Texas Instruments led the way in semiconductor manufacturing innovations.”</li>
<li>“Purifying materials for chip production was a major challenge in the early days of the semiconductor industry.”</li>
<li>“The invention of the integrated circuit combined theoretical physics with practical engineering.”</li>
<li>“Semiconductor manufacturing involved mastering numerous complex processes and variables.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>Photolithography, developed by Jay Lathrop, was a key innovation in semiconductor manufacturing.</li>
<li>The process of manufacturing reliable transistors and integrated circuits was complex and required extensive experimentation.</li>
<li>Morris Chang played a significant role in improving the production yield of transistors at Texas Instruments.</li>
<li>The U.S. military’s demand for integrated circuits for programs like Minuteman and Apollo was a major driver for the semiconductor industry.</li>
<li>Texas Instruments’ dedication to mastering photolithography and mass production was critical to the industry.</li>
<li>The development of integrated circuits was not just a scientific achievement but also a manufacturing breakthrough.</li>
<li>Challenges in purifying chemicals and materials were significant obstacles in early semiconductor production.</li>
<li>The semiconductor industry’s evolution was heavily influenced by military needs during the Cold War.</li>
<li>The mass production of semiconductors involved precise control of temperature, pressure, and chemical reactions.</li>
<li>Collaboration between universities and industry was vital in advancing semiconductor technology.</li>
</ol>
</section>
</section>
<section id="i-want-to-get-rich" class="level2">
<h2 class="anchored" data-anchor-id="i-want-to-get-rich">I Want To Get Rich</h2>
<p>Chapter Six explores the shift from military to civilian markets in the semiconductor industry during the 1960s. It focuses on Bob Noyce and Gordon Moore at Fairchild Semiconductor, highlighting their strategic decision to prioritize civilian applications over military contracts. The chapter details the industry’s expansion into the commercial sector, driven by innovations, price cuts, and the growing demand for consumer electronics, ultimately leading to a booming chip market and the birth of Silicon Valley.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>The semiconductor industry’s initial growth was heavily reliant on military and space programs.</li>
<li>Bob Noyce envisioned a larger civilian market for integrated circuits beyond military applications.</li>
<li>Noyce’s strategic decision to keep Fairchild’s R&amp;D independent from military influence was pivotal.</li>
<li>Fairchild Semiconductor played a crucial role in the transition from military to civilian markets in the semiconductor industry.</li>
<li>The invention of the integrated circuit opened opportunities in consumer electronics like hearing aids and radios.</li>
<li>The challenge for the industry was to produce affordable chips for the consumer market.</li>
<li>Civilian markets for integrated circuits were significantly larger than military markets.</li>
<li>Gordon Moore’s prediction of exponential growth in computing power, later known as Moore’s Law, was a key foresight.</li>
<li>Fairchild’s aggressive price cuts expanded the civilian market for chips.</li>
<li>The computer industry became a major consumer of integrated circuits, overtaking military demand.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“Bob Noyce knew that military and space programs were crucial for Fairchild’s early success.”</li>
<li>“Noyce always envisioned an even larger civilian market for his chips.”</li>
<li>“Fairchild’s integrated circuits were initially designed for military and space applications.”</li>
<li>“The challenge would be making chips that civilians could afford.”</li>
<li>“The civilian market for integrated circuits was far larger than even the Cold War Pentagon’s budgets.”</li>
<li>“Fairchild began winning major contracts in the private sector thanks to falling prices.”</li>
<li>“By the mid-1960s, almost all U.S. computers relied on integrated circuits.”</li>
<li>“Gordon Moore predicted exponential growth in computing power, known as Moore’s Law.”</li>
<li>“Noyce’s price cuts opened a new market for civilian computers.”</li>
<li>“Fairchild’s success in the semiconductor industry inspired a wave of startup formations in Silicon Valley.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>The semiconductor industry was initially driven by demand from military and space programs.</li>
<li>Bob Noyce and Gordon Moore at Fairchild Semiconductor focused on developing civilian applications for integrated circuits.</li>
<li>The invention of the integrated circuit enabled the expansion into consumer electronics.</li>
<li>Fairchild Semiconductor’s strategy included keeping its R&amp;D independent from military influence.</li>
<li>The civilian market for integrated circuits surpassed military demand in size and potential.</li>
<li>Moore’s Law predicted the exponential growth of computing power on integrated circuits.</li>
<li>Fairchild’s price cuts significantly expanded the civilian market for chips.</li>
<li>The computer industry became a major consumer of integrated circuits by the mid-1960s.</li>
<li>The growth of the semiconductor industry in Silicon Valley was fueled by venture capital and the rise of competing firms.</li>
<li>Financial incentives and equity became important for attracting talent in the semiconductor industry.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/part-1/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Chip War Book Overview</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/chip-war-book-notes/overview/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/chip-war-book-notes.html"><strong>Chip War: The Fight for the World’s Most Critical Technology</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>“Chip War: The Fight for the World’s Most Critical Technology” by Chris Miller delves into the pivotal role of semiconductors in shaping the global economy, international politics, and military power. It covers historical developments, influential figures in the semiconductor industry, and the geopolitical tensions surrounding this technology.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>Semiconductors are central to modern technology and global power dynamics.</li>
<li>The U.S. and China’s struggle for technological supremacy focuses heavily on computing power.</li>
<li>Taiwan’s TSMC is crucial in global semiconductor production.</li>
<li>Semiconductors have transformed from a niche invention to a backbone of the global economy.</li>
<li>Moore’s Law has driven exponential growth in computing power.</li>
<li>The semiconductor industry’s success is a blend of scientific, manufacturing, and business expertise.</li>
<li>Silicon Valley’s rise was fueled by scientific expertise, manufacturing know-how, and visionary business thinking.</li>
<li>Semiconductors are a critical component in a vast range of devices.</li>
<li>The global chip industry is a triumph of efficiency but also a significant vulnerability.</li>
<li>The concentration of chip manufacturing in East Asia is a result of deliberate decisions by governments and corporations.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“The world’s most important chip maker” (referring to TSMC).</li>
<li>“America’s military primacy stems largely from its ability to apply chips to military uses.”</li>
<li>“At the core of computing is the need for many millions of ones and zeros. The entire digital universe consists of these two numbers.”</li>
<li>“A chip is a grid of millions or billions of transistors, tiny electrical switches that flip on and off to process these digits, to remember them, and to convert real-world sensations like images, sound, and radio waves into millions and millions of ones and zeros.”</li>
<li>“The fate of nations has turned on their ability to harness computing power.”</li>
<li>“Globalization as we know it wouldn’t exist without…semiconductors.”</li>
<li>“The computing power of chips would grow exponentially” (on Moore’s Law).</li>
<li>“Silicon Valley…was the epicenter of this revolution.”</li>
<li>“The internet, the cloud, social media…only exist because engineers have learned to control the most minute movement of electrons.”</li>
<li>“No other facet of the economy is so dependent on so few firms” (referring to chip manufacturing).</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>TSMC is the world’s most crucial chip maker.</li>
<li>Taiwan Semiconductor Manufacturing Company (TSMC) produces the majority of the world’s advanced processor chips.</li>
<li>The U.S. and China are major players in the global semiconductor industry.</li>
<li>Advanced chip manufacturing is concentrated in Taiwan, South Korea, and Japan.</li>
<li>Silicon Valley’s development was heavily influenced by the U.S. military’s technological needs.</li>
<li>Moore’s Law predicts the doubling of computing power on chips every couple of years.</li>
<li>The chip industry’s revenue is significantly driven by smartphone sales.</li>
<li>Semiconductors are crucial in a wide range of devices, from phones to cars.</li>
<li>Globalization is heavily reliant on semiconductor trade.</li>
<li>The pandemic caused significant disruptions in the semiconductor supply chain.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li>Explore the history of the semiconductor industry to understand its current landscape.</li>
<li>Consider the geopolitical implications of semiconductor manufacturing locations.</li>
<li>Recognize the importance of Taiwan and TSMC in the global tech industry.</li>
<li>Acknowledge the role of semiconductors in modern military technology.</li>
<li>Understand the impact of Moore’s Law on technological progress.</li>
<li>Appreciate the complexities and vulnerabilities of the semiconductor supply chain.</li>
<li>Stay informed about the ongoing U.S.-China technology rivalry.</li>
<li>Consider the broader economic and political factors influencing the tech industry.</li>
<li>Recognize the critical role of scientific research and innovation in advancing technology.</li>
<li>Acknowledge the importance of global collaboration in the tech industry’s development.</li>
</ol>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>The conclusion connects the early history of semiconductor innovation, starting from Jack Kilby’s demonstration at Texas Instruments, to the current geopolitical landscape. It emphasizes the strategic importance of semiconductors, the pivotal role of key figures like Morris Chang, and the ongoing technological race, particularly between the U.S. and China, shaping the future of global power.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>The birth of semiconductor technology is closely linked to geopolitical tensions and military funding.</li>
<li>Innovators like Morris Chang significantly advanced semiconductor fabrication processes.</li>
<li>The U.S.’s technological edge, especially in defense, has been heavily reliant on semiconductor advances.</li>
<li>The migration of talented individuals to the U.S. contributed greatly to its technological leadership.</li>
<li>Semiconductor innovation is not just a product of science but also of market needs and business acumen.</li>
<li>Moore’s Law has driven the semiconductor industry, but its future is uncertain due to physical and economic limitations.</li>
<li>The semiconductor industry is at a crossroads, with potential shifts in global supply chains and technological leadership.</li>
<li>The end of Moore’s Law could significantly impact the semiconductor industry and global technological progress.</li>
<li>Semiconductor innovation continues to attract significant investment, indicating ongoing potential for growth and advancement.</li>
<li>The shift from general-purpose computing to specialized chips, especially for AI, is reshaping the semiconductor landscape.</li>
<li>The future of computing power is not just about transistor density but also about cost-effectiveness and practical applications.</li>
<li>The evolution of the semiconductor industry is a testament to human ingenuity and the relentless pursuit of technological advancement.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“Jack Kilby demonstrated…that all the components of a circuit could be made from semiconductor materials.”</li>
<li>“Morris Chang…earning a reputation for a nearly magical ability to eliminate errors from TI’s semiconductor fabrication processes.”</li>
<li>“The U.S. military was relying on technology to preserve its edge.”</li>
<li>“America’s centers of semiconductor production were drawing the world’s most brilliant minds.”</li>
<li>“The centrality of chips in our lives today.”</li>
<li>“Transistors today cost far less than a millionth of their 1958 price.”</li>
<li>“The chip industry produced more transistors each day than there are cells in the human body.”</li>
<li>“Moore’s Law is only a prediction, not a fact of physics.”</li>
<li>“The end of Moore’s Law would be devastating for the semiconductor industry and for the world.”</li>
<li>“We’re not running out of atoms… We know how to print single layers of atoms.”</li>
<li>“Big tech firms…are now pouring money into designing their own chips.”</li>
<li>“AI has become a lot more general-purpose today than was conceivable a decade ago.”</li>
<li>“The pessimistic view is to see this as a bifurcation of computing into a slow-lane and a fast-lane.”</li>
<li>“The important question isn’t whether we’re finally reaching the limits of Moore’s Law…but whether we’ve reached a peak in the amount of computing power a chip can cost-effectively produce.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>Jack Kilby’s innovation at Texas Instruments was a milestone in semiconductor history.</li>
<li>Morris Chang’s contributions greatly advanced semiconductor fabrication.</li>
<li>The semiconductor industry’s growth was propelled by defense funding and global talent migration to the U.S.</li>
<li>The end of Moore’s Law poses a potential challenge to the future of semiconductor innovation.</li>
<li>The shift towards specialized chips, especially for AI, marks a significant change in the semiconductor industry.</li>
<li>The cost and physical limitations of semiconductor manufacturing are becoming increasingly significant challenges.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/chip-war-book-notes/overview/index.html</guid>
  <pubDate>Tue, 21 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>The Learning Game Book Notes</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/the-learning-game-book-notes/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Seven Dangerous Lessons Taught in School</li>
<li>How did we get here?</li>
<li>How Tests and Rewards Go Wrong</li>
<li>Unlearning Lessons from School</li>
<li>The Game of School</li>
<li>Learning to Love Learning</li>
<li>Story-Driven Learning</li>
<li>Learning through Memorization</li>
<li>The Learning Style Myth</li>
<li>Confusion Sparks Curiosity</li>
<li>The Architecture of Great Games</li>
<li>The Psychology of Healthy Gaming</li>
<li>Skin in the Game</li>
<li>Raising Antifragile Kids</li>
<li>How to Develop Character like the Stoics</li>
<li>Range and Specific Knowledge</li>
<li>The Art of Failing and Quitting</li>
<li>Mental Models for Parents</li>
<li>The Thinking Toolkit</li>
<li>Conclusion</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://harriman.house/books/the-learning-game/">Publisher Page</a></li>
<li><a href="https://afabrega.com/">Author’s Website</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Ana Lorena Fábrega challenges traditional educational systems and proposes new, curiosity-driven approaches. Fábrega, a former teacher, combines her classroom experience and diverse educational background to advocate for a system that fosters lifelong learning and creativity, moving beyond standardized methods.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>Traditional education prioritizes compliance over curiosity and creativity, needing a shift towards fostering lifelong learning.</li>
<li>The current education system, mirroring the industrial age model, is outdated and calls for modernization.</li>
<li>Fábrega advocates for an education system that nurtures lifelong learners filled with curiosity.</li>
<li>Emphasis on moving beyond a one-size-fits-all curriculum to accommodate diverse learning styles and interests.</li>
<li>The importance of adapting education to the digital age, utilizing technology and the internet as learning tools.</li>
<li>Encouraging students to follow their interests, question everything, and learn at their own pace.</li>
<li>Highlighting the disconnect between students’ natural curiosity and the structured environment of schools.</li>
<li>Questioning the effectiveness of traditional grading and standardized tests in truly measuring learning.</li>
<li>Proposing storytelling and engaging teaching methods instead of conventional techniques.</li>
<li>Urging parents and educators to rethink and redesign the education system to be more student-centered and empowering.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“Teaching kids to think for themselves, embrace challenge, and love learning.”</li>
<li>“Schools should graduate lifelong learners who brim with curiosity.”</li>
<li>“Too many kids love learning but hate school, and it’s time to change that.”</li>
<li>“We believe that schools are explicitly designed to manufacture a docile and obedient population.”</li>
<li>“Ana stands out for her digitally native approach.”</li>
<li>“In the game of school, you succeed by pleasing your teachers, getting good grades, and advancing to the next grade.”</li>
<li>“Real learning happened when I was exploring my curiosities and unleashing my creativity.”</li>
<li>“Succeeding at the game of school, I figured, would grant me approval to do all the things I really wanted to do in my own time.”</li>
<li>“If we want kids to really learn, they can’t be stuck in the game of school.”</li>
<li>“Traditional schooling no longer meets the needs of our kids today.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>Fábrega attended ten schools in seven different countries as a child.</li>
<li>Her teaching experience spans almost a decade of in-person teaching.</li>
<li>The current education system closely resembles the model from a hundred years ago.</li>
<li>Fábrega’s class placed first in math and reading despite deviating from standardized test preparation.</li>
<li>She holds degrees in childhood education, special education, and psychology.</li>
<li>The book includes a section summarizing its key points for easy reference.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li><p>Rethink and redesign the education system to be more curiosity-driven.</p></li>
<li><p>Encourage students to follow their interests and question traditional norms.</p></li>
<li><p>Utilize storytelling and engaging methods in education.</p></li>
<li><p>Embrace technology as a tool to revolutionize learning.</p></li>
<li><p>Adapt education to cater to the diverse needs of students.</p></li>
<li><p>Implement student-centered approaches that empower learners.</p></li>
<li><p>Explore alternatives to traditional schooling that focus on individual growth and creativity.</p></li>
<li><p>Consider the role of mental models in shaping educational experiences.</p></li>
<li><p>Design personalized learning experiences that reflect students’ interests and abilities.</p></li>
<li><p>Foster an environment that encourages exploration and self-directed learning.</p></li>
</ol>
</section>
</section>
<section id="seven-dangerous-lessons-taught-in-school" class="level2">
<h2 class="anchored" data-anchor-id="seven-dangerous-lessons-taught-in-school">Seven Dangerous Lessons Taught in School</h2>
<p>Chapter 1 draws from John Taylor Gatto’s insights. Gatto, an acclaimed New York educator, criticizes the traditional education system for imparting harmful lessons that stifle creativity, curiosity, and self-reliance in students. Fábrega uses Gatto’s framework to analyze the current state of education and suggests alternative methods for more effective and engaging learning.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>Traditional education promotes confusion with isolated subject teaching.</li>
<li>The school system enforces a rigid class hierarchy.</li>
<li>Students learn to suppress genuine interest in subjects.</li>
<li>Schools encourage emotional dependency for self-esteem.</li>
<li>Intellectual dependency is fostered, hindering creativity.</li>
<li>Self-esteem is based on external evaluation.</li>
<li>Lack of privacy in schools stifles individual creativity.</li>
<li>Traditional education resists change, using outdated methods.</li>
<li>Centralization contributes to education rigidity.</li>
<li>Harmful lessons extend into adult education and training.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“I’ve taught public school for 26 years, but I just can’t do it anymore.”</li>
<li>“In Dumbing Us Down, The Hidden Curriculum of Compulsory Schooling, Gatto describes the problem with constraining teachers.”</li>
<li>“School curricula don’t help kids build a coherent picture of the real world.”</li>
<li>“What if instead of teaching lots of things in isolation, we taught them in context?”</li>
<li>“Schools obsess over putting every kid in their proper place.”</li>
<li>“I teach that students must stay in the class where they belong.”</li>
<li>“Kids learn to stay where they’re put.”</li>
<li>“What if we encouraged them to collaborate instead of compete for status?”</li>
<li>“I teach children not to care too much about anything.”</li>
<li>“Good students wait for a teacher to tell them what to do.”</li>
</ol>
</section>
<section id="personal-habits" class="level3">
<h3 class="anchored" data-anchor-id="personal-habits">Personal Habits</h3>
<ol type="1">
<li>John Taylor Gatto questioned and analyzed the education system.</li>
<li>He prioritized authentic learning experiences over rigid curricula.</li>
<li>Gatto valued student autonomy and self-directed learning.</li>
<li>Committed to reforming education for creativity and independent thought.</li>
<li>Believed in context and real-world application in teaching.</li>
<li>Advocated for emotional intelligence in education.</li>
<li>Emphasized resisting harmful educational practices.</li>
<li>Practiced a holistic approach to learning.</li>
<li>Valued collaboration over competition in education.</li>
<li>Addressed the impact of surveillance and lack of privacy in schools.</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>Traditional schooling teaches subjects in isolation.</li>
<li>School systems enforce a rigid hierarchy.</li>
<li>Segmented schedules suppress student interest.</li>
<li>Schools encourage emotional dependency on teachers.</li>
<li>Intellectual dependency is a key lesson in traditional schooling.</li>
<li>Self-esteem often based on external evaluations.</li>
<li>Students lack privacy and autonomy.</li>
<li>Traditional education is resistant to change.</li>
<li>Centralization contributes to education rigidity.</li>
<li>Harmful lessons extend to adult education and training.</li>
</ol>
</section>
<section id="resources" class="level3">
<h3 class="anchored" data-anchor-id="resources">Resources</h3>
<ol type="1">
<li>“<a href="https://newsociety.com/books/d/dumbing-us-down-25th-anniversary-edition">Dumbing Us Down, The Hidden Curriculum of Compulsory Schooling</a>” by John Taylor Gatto.</li>
</ol>
</section>
<section id="recommendations-1" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-1">Recommendations</h3>
<ol type="1">
<li>Reform education for context and integration in learning.</li>
<li>Challenge rigid hierarchy and class structure in schools.</li>
<li>Foster student autonomy and self-directed learning.</li>
<li>Encourage emotional intelligence and self-awareness.</li>
<li>Promote intellectual independence and critical thinking.</li>
<li>Develop models focusing on real-world problem-solving.</li>
<li>Emphasize collaboration and teamwork.</li>
<li>Create diverse and individual-expressive learning environments.</li>
<li>Reduce reliance on standardized testing.</li>
<li>Balance teacher-led instruction with student-led exploration.</li>
</ol>
</section>
</section>
<section id="how-did-we-get-here" class="level2">
<h2 class="anchored" data-anchor-id="how-did-we-get-here">How did we get here?</h2>
<p>Chapter 2 delves into the historical roots of the modern education system. It traces the origins to the Prussian model designed for creating loyal, literate citizens and soldiers, and the subsequent adaptation of the factory model in the United States, emphasizing standardization and efficiency. The chapter critiques how this history has led to a system that prioritizes instruction-based learning, limiting creativity and problem-solving skills in students.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li><strong>Prussian Model’s Influence:</strong> The modern education system’s roots in the Prussian model, designed for discipline and obedience.</li>
<li><strong>Factory Model in U.S. Education:</strong> Adaptation of the factory model in the U.S., emphasizing standardization and efficiency.</li>
<li><strong>Shift from Personalized to Mass Instruction:</strong> The historical shift from personalized learning to mass instruction.</li>
<li><strong>Decline in Creative Thinking:</strong> The reliance on instruction-based learning leading to a decline in creative and elastic thinking.</li>
<li><strong>Underestimating Students’ Abilities:</strong> The education system’s tendency to underestimate students, hindering genuine learning challenges.</li>
<li><strong>External Guidance Reliance:</strong> Students in instruction-based systems developing reliance on external guidance, affecting problem-solving skills.</li>
<li><strong>Preparation for Real-World Problems:</strong> The current model’s failure to adequately prepare students for real-world, ambiguous problems.</li>
<li><strong>Need for Exploratory Learning Models:</strong> The necessity to revert to more open-ended, exploratory learning models.</li>
<li><strong>Impact of Standardization on Motivation:</strong> The trend towards standardization leading to reduced motivation and self-esteem among students.</li>
<li><strong>Trend Away from Critical Thinking:</strong> A historical trend away from developing critical thinking and autonomy in students.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li><strong>Impact on Student Engagement:</strong> “I watched the spark of learning fade from their eyes.”</li>
<li><strong>Prussian System’s Legacy:</strong> “Prussia designed the basics of our modern school system.”</li>
<li><strong>Limitations of Academic Freedom:</strong> “They taught academic freedom, but it was limited by service to the state.”</li>
<li><strong>Factory Model in Education:</strong> “The factory model… Put them on an assembly line as well.”</li>
<li><strong>Quality Control in Education:</strong> “Standardized tests functioned as a way to track quality control.”</li>
<li><strong>Reading Level Concern:</strong> “Over half of Americans can’t read beyond a sixth grade level.”</li>
<li><strong>Innovators and Education:</strong> “Our most famous innovators… are famous for dropping out.”</li>
<li><strong>Questioning School’s Purpose:</strong> “What’s the point of school?”</li>
<li><strong>Limits of Education System:</strong> “The Lego analogy illustrates the limits of our education system.”</li>
<li><strong>Undervaluing Deep Thinking:</strong> “When we specify exactly what a final assignment should look like, we underestimate students’ ability to think deeply.”</li>
</ol>
</section>
<section id="personal-habits-1" class="level3">
<h3 class="anchored" data-anchor-id="personal-habits-1">Personal Habits</h3>
<ol type="1">
<li>Ana Lorena Fábrega practices deep historical research to understand current educational challenges.</li>
<li>She values critical analysis of traditional systems to foster innovation in education.</li>
<li>Fábrega encourages exploration of different educational models and their impacts.</li>
<li>She advocates for a shift from standardization to creativity in learning.</li>
<li>Fábrega emphasizes the importance of understanding the root causes of educational issues.</li>
<li>She promotes the idea of giving students more autonomy and creative freedom in learning.</li>
<li>Fábrega supports the use of analogies like the Lego example to illustrate educational concepts.</li>
<li>She believes in the power of storytelling to convey complex ideas about education.</li>
<li>Fábrega is committed to challenging conventional wisdom in educational practices.</li>
<li>She practices and promotes a holistic approach to understanding and reforming education.</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>The Prussian education model heavily influenced the modern education system.</li>
<li>Prussia’s educational approach was geared towards creating loyal citizens and soldiers.</li>
<li>The U.S. education system evolved to focus on training industrial managers.</li>
<li>The factory model of education emphasizes standardization and efficiency.</li>
<li>Modern education often prioritizes state needs over individual development.</li>
<li>Instruction-based learning has become a core aspect of the current education system.</li>
<li>The history of education reveals a shift from individualized learning to mass instruction.</li>
<li>Standardized testing was initially introduced for quality control in education.</li>
<li>Current educational models often fail to foster creative and elastic thinking.</li>
<li>Students in modern education systems often develop a dependency on external instructions.</li>
</ol>
</section>
<section id="resources-1" class="level3">
<h3 class="anchored" data-anchor-id="resources-1">Resources</h3>
<ul>
<li>Historical Analysis: The <a href="https://afabrega.com/my-blog/the-origin-of-the-modern-school-system">Prussian model of education</a> and its impact on modern schooling.</li>
</ul>
</section>
<section id="recommendations-2" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-2">Recommendations</h3>
<ol type="1">
<li>Move away from the Prussian and factory models of education towards more individualized learning.</li>
<li>Emphasize creativity, problem-solving, and critical thinking in education.</li>
<li>Reduce the focus on standardization and efficiency in schooling.</li>
<li>Foster more open-ended, exploratory learning environments.</li>
<li>Challenge and rethink the role of standardized testing in education.</li>
<li>Encourage educational models that prioritize student autonomy and creativity.</li>
<li>Understand and address the historical roots of current educational issues.</li>
<li>Promote educational reforms that focus on real-world, practical skills.</li>
<li>Implement teaching methods that stimulate elastic thinking in students.</li>
<li>Develop educational systems that better prepare students for the complexities of adult life.</li>
</ol>
</section>
</section>
<section id="how-tests-and-rewards-go-wrong" class="level2">
<h2 class="anchored" data-anchor-id="how-tests-and-rewards-go-wrong">How Tests and Rewards Go Wrong</h2>
<p>Chapter 3 critiques the reliance on standardized tests and extrinsic rewards in education. Ana Lorena Fábrega discusses the negative impacts, including reduced genuine learning, heightened anxiety, and compromised integrity. She argues that these practices undermine intrinsic motivation and fail to prepare students for real-world challenges. Fábrega suggests alternative assessment methods and strategies to foster intrinsic motivation and a love for learning in students.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>Standardized tests often measure test-taking skills more than actual learning or intelligence.</li>
<li>The high stakes of standardized testing create negative consequences, including teacher and student stress and unethical behaviors.</li>
<li>Extrinsic rewards can undermine long-term student engagement and intrinsic motivation.</li>
<li>Success in the real world is not accurately predicted by standardized test scores.</li>
<li>The overemphasis on testing leads to neglecting skills like problem-solving and creativity.</li>
<li>Fábrega advocates for assessments that align with students’ unique skills and learning styles.</li>
<li>Intrinsic motivation leads to more profound and sustainable learning compared to extrinsic motivators.</li>
<li>Specific feedback and asking insightful questions can enhance learning and motivation.</li>
<li>Making learning fun and relevant is crucial for fostering a love of learning.</li>
<li>The current educational system often prioritizes compliance over creativity, curiosity, and problem-solving.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“Standardized tests were intended to measure learning, but they measure a kid’s ability at taking tests.”</li>
<li>“Tests have become the most important part of the year.”</li>
<li>“The system incentivizes teachers to do whatever is necessary to bump up their students’ results.”</li>
<li>“Kids learn best when they follow their interests and passions.”</li>
<li>“Test anxiety affects performance and reduces kids’ interest in learning.”</li>
<li>“High scores measure a student’s test-taking ability, not their potential success as an adult.”</li>
<li>“Standardized testing on a pedestal creates bad incentives for all involved.”</li>
<li>“Extrinsic motivators may help kids reach short-term academic benchmarks but distract from raising self-directed, lifelong learners.”</li>
<li>“We’re telling kids to care about what they’ll get instead of enjoying the learning process.”</li>
<li>“Kids learn to love learning when they engage in activities driven by their curiosity and inner desire to explore.”</li>
</ol>
</section>
<section id="personal-habits-2" class="level3">
<h3 class="anchored" data-anchor-id="personal-habits-2">Personal Habits</h3>
<ol type="1">
<li>Fábrega practices critical evaluation of traditional educational methods.</li>
<li>She advocates for alternative assessment methods that reflect real-world skills.</li>
<li>Fábrega emphasizes the importance of fostering intrinsic motivation in students.</li>
<li>She involves students in decision-making to enhance their engagement and sense of responsibility.</li>
<li>Fábrega prioritizes making learning fun and relevant to increase student interest.</li>
<li>She focuses on providing specific feedback and asking insightful questions to enhance understanding.</li>
<li>Fábrega encourages understanding the ‘why’ behind learning activities.</li>
<li>She values creativity and curiosity over compliance in education.</li>
<li>Fábrega integrates diverse teaching strategies to cater to different learning styles.</li>
<li>She practices and promotes a holistic approach to education, focusing on overall development.</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li><p>Standardized tests often measure a student’s test-taking skills rather than their overall intelligence or learning.</p></li>
<li><p>High-stakes testing can lead to negative consequences, including unethical behavior and increased stress.</p></li>
<li><p>Extrinsic rewards in education can diminish long-term engagement and intrinsic motivation.</p></li>
<li><p>Standardized tests have evolved to become overly dominant in the education system.</p></li>
<li><p>Test anxiety significantly impacts student performance and interest in learning.</p></li>
<li><p>Success in real-world scenarios is not accurately predicted by standardized test scores.</p></li>
<li><p>The current education system often overlooks skills like problem-solving and creativity.</p></li>
<li><p>Assessments that align with students’ unique skills and learning styles are more effective.</p></li>
<li><p>Intrinsic motivation is crucial for deep and lasting learning.</p></li>
<li><p>Current educational practices often prioritize compliance over creativity and problem-solving.</p></li>
</ol>
</section>
<section id="recommendations-3" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-3">Recommendations</h3>
<ol type="1">
<li>Reduce the emphasis on standardized testing in education.</li>
<li>Foster intrinsic motivation in students for more profound and sustainable learning.</li>
<li>Implement alternative assessment methods that reflect students’ unique skills and learning styles.</li>
<li>Involve students in decision-making to increase engagement and responsibility.</li>
<li>Make learning fun and relevant to enhance student interest and enjoyment.</li>
<li>Provide specific feedback and ask insightful questions to deepen understanding.</li>
<li>Understand and communicate the ‘why’ behind learning activities to increase student engagement.</li>
<li>Shift educational focus from compliance to creativity, curiosity, and problem-solving.</li>
<li>Rethink and reform educational practices to align with genuine learning and real-world success.</li>
<li>Emphasize the development of skills like problem-solving and creativity in education.</li>
</ol>
</section>
</section>
<section id="unlearning-lessons-from-school" class="level2">
<h2 class="anchored" data-anchor-id="unlearning-lessons-from-school">Unlearning Lessons from School</h2>
<p>Chapter 4 focuses on challenging and unlearning harmful lessons ingrained in traditional schooling. Authored by Ana Lorena Fábrega, the chapter argues that certain school-taught principles like fearing mistakes, fitting in, waiting for instructions, learning just in case, and not questioning authority are detrimental. Fábrega emphasizes relearning approaches that foster independence, creativity, and critical thinking, essential for real-world success and innovation.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>The need to unlearn fearing mistakes, as real-world learning often comes from making and learning from errors.</li>
<li>Challenging the notion of fitting in, as the real world rewards those who think independently and uniquely.</li>
<li>Unlearning the habit of waiting for instructions, promoting proactive and independent problem-solving.</li>
<li>Shifting from learning ‘just in case’ to ‘learning on demand,’ focusing on relevant and immediate learning needs.</li>
<li>Encouraging questioning authority to foster independent thinking and innovation.</li>
<li>Recognizing that traditional schooling often prioritizes compliance and rote learning over creativity and critical thinking.</li>
<li>The importance of relearning to embrace risks and stand out in a conformist educational system.</li>
<li>Understanding that success in the real world often requires skills and mindsets not emphasized in school.</li>
<li>Advocating for educational models that emphasize self-directed learning and curiosity.</li>
<li>Promoting the idea of continuous learning and adaptation in response to real-world challenges.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“Unlearning is the skill of recognizing our deeply held beliefs about something and realizing that the inverse might actually be true.”</li>
<li>“In school, kids lose points for mistakes. In the real world, mistakes are how we learn the most.”</li>
<li>“The most successful people in the real world are comfortable with making and handling mistakes.”</li>
<li>“In school, students are rewarded for coloring inside the lines. In the real world, they’re rewarded for thinking outside the box.”</li>
<li>“Successful people in the real world carve their own paths.”</li>
<li>“Unlearn striving to fit in. Relearn breaking from the pack, finding what makes you different, and creating something legendary.”</li>
<li>“In school, we have to wait for instructions and do as we’re told. In the real world, we have to figure things out for ourselves.”</li>
<li>“Employers don’t like to hire people who need to be told what to do all the time.”</li>
<li>“Unlearn learning just in case. Relearn learning on demand.”</li>
<li>“In school, students learn to not question authority. In the real world, we should question everything.”</li>
</ol>
</section>
<section id="personal-habits-3" class="level3">
<h3 class="anchored" data-anchor-id="personal-habits-3">Personal Habits</h3>
<ol type="1">
<li>Ana Lorena Fábrega practices and advocates for the unlearning of traditional schooling norms.</li>
<li>She encourages embracing mistakes as learning opportunities.</li>
<li>Fábrega promotes thinking outside the box and breaking away from the norm.</li>
<li>She emphasizes the importance of independent problem-solving and initiative.</li>
<li>Fábrega advocates for on-demand learning, adapting to immediate needs.</li>
<li>She supports questioning authority and established norms to foster innovation.</li>
<li>Fábrega values continuous learning and adapting to new challenges.</li>
<li>She encourages learners to carve their own unique paths.</li>
<li>Fábrega practices a critical approach to traditional educational methods.</li>
<li>She emphasizes relearning skills and mindsets vital for success in the real world.</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>Traditional schooling often teaches fear of making mistakes, which hinders learning from errors.</li>
<li>Schools usually reward conformity, suppressing individual creativity and unique thinking.</li>
<li>The educational system often conditions students to wait for instructions, hindering independent problem-solving.</li>
<li>School curricula typically focus on learning just in case, rather than on-demand learning.</li>
<li>Traditional schooling discourages questioning authority, limiting critical thinking and innovation.</li>
<li>Real-world success often requires skills and mindsets not emphasized in</li>
</ol>
<p>traditional education.</p>
<ol start="7" type="1">
<li>Traditional education often prioritizes compliance and rote learning over creativity and problem-solving.</li>
<li>Schools inadvertently teach students to play it safe and avoid questioning the status quo.</li>
<li>Educational models that emphasize self-directed learning and curiosity are essential for real-world challenges.</li>
<li>A shift from a one-size-fits-all approach to personalized learning is needed in education.</li>
</ol>
</section>
<section id="recommendations-4" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-4">Recommendations</h3>
<ol type="1">
<li>Encourage the unlearning of traditional schooling norms that hinder real-world success.</li>
<li>Promote embracing mistakes as valuable learning experiences.</li>
<li>Foster independent problem-solving skills in students.</li>
<li>Shift educational focus to on-demand learning for real-time relevance.</li>
<li>Encourage questioning and challenging authority and established norms.</li>
<li>Emphasize the development of creativity, innovation, and critical thinking in education.</li>
<li>Support continuous learning and adaptation in response to real-world challenges.</li>
<li>Advocate for educational models that prioritize self-directed learning and curiosity.</li>
<li>Promote the development of unique and creative thinking in students.</li>
<li>Reform the education system to focus on personalized and relevant learning experiences.</li>
</ol>
</section>
</section>
<section id="the-game-of-school" class="level2">
<h2 class="anchored" data-anchor-id="the-game-of-school">The Game of School</h2>
<p>Chapter 5 critiques formal education for deviating from natural human learning methods. It contrasts self-directed play and exploration with the structured, often ineffective learning in schools, emphasizing the need for a shift towards a more engaging, personalized approach.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>Humans naturally learn through play, exploration, and trial and error.</li>
<li>Formal schooling often misaligns with these natural learning methods.</li>
<li>The chapter argues for a shift from institutional learning to a more intuitive, exploratory approach.</li>
<li>It discusses the ‘game of school,’ where success is measured by compliance and performance rather than genuine learning.</li>
<li>Many students learn to navigate the school system without truly grasping the knowledge.</li>
<li>The focus on grades and standardized performance can overshadow real understanding.</li>
<li>Some students resist the pressures of conventional schooling, focusing instead on deeper, personal learning.</li>
<li>These ‘rebel’ students often find more fulfillment and success by learning on their own terms.</li>
<li>The chapter advocates for breaking out of traditional educational molds.</li>
<li>It highlights the importance of adapting education to individual strengths and needs.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“Humans are designed, by nature, to learn.”</li>
<li>“We learn by digging deep into our interests, making things, and reflecting on the impact and consequences of our actions.”</li>
<li>“Formal school does not match the usual way humans learn.”</li>
<li>“The game of school is easy to master.”</li>
<li>“Kids quickly pick up on what a successful student looks like.”</li>
<li>“Students who fall behind aren’t the ones who learn the least.”</li>
<li>“The average student figures out how to graduate from school, but not how to learn.”</li>
<li>“We need to help kids master a different game, one that plays to their strengths.”</li>
<li>“Some kids recognize the harmful patterns and resist the pressures to conform.”</li>
<li>“They’re in the business of learning, a much more powerful and lasting reward.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Humans instinctively learn through self-directed methods.</li>
<li>Formal schooling often contradicts natural learning processes.</li>
<li>Success in school is frequently based on compliance and performance metrics.</li>
<li>Many students adapt to the system without deeply understanding the material.</li>
<li>Some students choose to focus on personal learning rather than conforming to school norms.</li>
<li>These independent learners often find greater success and fulfillment.</li>
</ol>
</section>
<section id="recommendations-5" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-5">Recommendations</h3>
<ol type="1">
<li>Embrace natural learning methods like play, exploration, and trial and error.</li>
<li>Shift from institutional to more intuitive, exploratory approaches in education.</li>
<li>Focus on individual student strengths and needs rather than standardized performance.</li>
<li>Encourage independent, self-directed learning.</li>
<li>Break out of traditional educational molds for greater life success.</li>
<li>Rethink conventional assumptions about education and learning.</li>
<li>Adapt educational practices to align with natural human learning instincts.</li>
</ol>
</section>
</section>
<section id="learning-to-love-learning" class="level2">
<h2 class="anchored" data-anchor-id="learning-to-love-learning">Learning to Love Learning</h2>
<p>Chapter 6 emphasizes the importance of self-directed projects in fostering genuine learning in children. Fábrega argues that hobbies and personal interests, often sidelined in traditional schooling, are crucial for developing a passion for learning and innovative thinking.</p>
<section id="ideas-6" class="level3">
<h3 class="anchored" data-anchor-id="ideas-6">Ideas</h3>
<ol type="1">
<li>Separating learning from joy in formal education limits children’s natural curiosity.</li>
<li>Personal projects are essential for genuine learning, allowing children to explore their interests.</li>
<li>Children learn more effectively when they have agency over their work.</li>
<li>Projects like building treehouses can teach valuable skills like math, engineering, and teamwork.</li>
<li>School often fails to recognize the educational value of voluntary projects.</li>
<li>Allowing children to work on personal projects cultivates innovative and critical thinking.</li>
<li>The book proposes that school should revolve around student-chosen projects.</li>
<li>Real learning occurs when working intensely on matters of personal significance.</li>
<li>Children’s natural inclination for independent projects should be nurtured.</li>
<li>Encouraging children to work on their projects can lead to a lifelong love of learning.</li>
</ol>
</section>
<section id="quotes-6" class="level3">
<h3 class="anchored" data-anchor-id="quotes-6">Quotes</h3>
<ol type="1">
<li>“When we tell kids to put away the guitar or stop diving into vintage fashion and get back to ‘real work,’ that is, schoolwork, we’re telling them that learning and joy are separate.”</li>
<li>“Personal projects often look like play, and we tend to think that play and learning shouldn’t overlap.”</li>
<li>“In school, we continue to treat voluntary projects as different from real work.”</li>
<li>“Real learning happens when we work intensely on things that matter to us.”</li>
<li>“Projects of their own create the perfect conditions for genuine learning.”</li>
<li>“Vous j’adait occurs when we face something familiar, but we see it with a fresh perspective.”</li>
<li>“We’re born with a natural ability to think independently, but school trains it out of us.”</li>
<li>“Kids engage in deep learning when they pursue projects of their own.”</li>
<li>“Let’s normalize encouraging kids to work on projects of their own.”</li>
<li>“It’s a bit sad to think of all the high school kids turning their backs on building treehouses and sitting in class dutifully learning about Darwin or Newton to pass some exam, when the work that made Darwin and Newton famous was actually closer in spirit to building treehouses than studying for exams.”</li>
</ol>
</section>
<section id="facts-6" class="level3">
<h3 class="anchored" data-anchor-id="facts-6">Facts</h3>
<ol type="1">
<li>Personal projects provide a platform for children to learn various skills in an engaging manner.</li>
<li>Projects like building treehouses can teach children about math, engineering, and teamwork.</li>
<li>The school system often undervalues the educational significance of personal projects.</li>
<li>Independent projects can lead to innovation and critical thinking.</li>
<li>The concept of “vous j’adait” involves seeing familiar situations with fresh eyes.</li>
</ol>
</section>
<section id="recommendations-6" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-6">Recommendations</h3>
<ol type="1">
<li>Integrate personal projects into children’s learning to cultivate genuine interest and joy.</li>
<li>Recognize the educational value of activities that children are naturally drawn to.</li>
<li>Foster an environment where children can explore their curiosities and interests.</li>
<li>Encourage children to challenge default assumptions and think critically.</li>
<li>Promote innovative thinking by allowing children to step back and observe from a distance.</li>
<li>Teach children to reject the defaults and seek novel insights.</li>
<li>Encourage skepticism and independent thought in children.</li>
<li>Nurture children’s natural ability for independent thinking.</li>
<li>Create learning experiences that combine personal interests with educational goals.</li>
<li>Emphasize the importance of seeing familiar things with a fresh perspective.</li>
</ol>
</section>
</section>
<section id="story-driven-learning" class="level2">
<h2 class="anchored" data-anchor-id="story-driven-learning">Story-Driven Learning</h2>
<p>Chapter 7 advocates for incorporating storytelling into education. It discusses how stories make learning more engaging and memorable, contrasting this approach with traditional methods focused on rote memorization and formulaic teaching. The chapter highlights how stories can bring abstract concepts to life and inspire students by connecting them to real-world examples and successful individuals.</p>
<section id="ideas-7" class="level3">
<h3 class="anchored" data-anchor-id="ideas-7">Ideas</h3>
<ol type="1">
<li>Storytelling is a natural and powerful tool for learning, deeply rooted in human history.</li>
<li>Traditional education often neglects the effectiveness of story-driven learning.</li>
<li>Stories make abstract concepts more concrete and relatable.</li>
<li>They help in forming emotional connections, enhancing memory and understanding.</li>
<li>Storytelling can be more effective than traditional teaching methods like rote memorization.</li>
<li>Real-world examples and narratives of successful people can inspire and teach practical lessons.</li>
<li>Story-driven learning aligns with human nature’s preference for engaging and relatable content.</li>
<li>Personal stories of individuals can make subjects like statistics more interesting and understandable.</li>
<li>Stories can turn studying from a chore into an enjoyable activity.</li>
<li>The chapter challenges educators to leverage storytelling for better engagement and retention.</li>
</ol>
</section>
<section id="quotes-7" class="level3">
<h3 class="anchored" data-anchor-id="quotes-7">Quotes</h3>
<ol type="1">
<li>“We weren’t designed in a laboratory to follow code. We evolved to learn by mimicking people from stories.”</li>
<li>“Stories make concepts concrete and offer us practical examples.”</li>
<li>“Stories are memorable, exciting, and captivating.”</li>
<li>“The best educators are those who align teaching with human nature.”</li>
<li>“Kids play out stories they’ve heard, applying them to the real world.”</li>
<li>“Story-driven learning turns studying from a chore to a joy.”</li>
<li>“If we want to master something, we need to start with the story.”</li>
<li>“We learn best when we can connect an idea with a person and their story.”</li>
<li>“Story-driven learning is the natural way we’re meant to learn.”</li>
<li>“The internet is overflowing with stories of amazing people from every area of life.”</li>
</ol>
</section>
<section id="facts-7" class="level3">
<h3 class="anchored" data-anchor-id="facts-7">Facts</h3>
<ol type="1">
<li>Storytelling has been an integral part of human learning since ancient times.</li>
<li>Traditional education systems often overlook the value of story-driven learning.</li>
<li>Emotional connections formed through stories enhance learning and memory.</li>
<li>Story-driven learning can make complex subjects like statistics more accessible.</li>
<li>The internet provides a vast resource for learning through stories.</li>
<li>Schools typically underutilize story-driven learning in favor of rote memorization.</li>
</ol>
</section>
<section id="resources-2" class="level3">
<h3 class="anchored" data-anchor-id="resources-2">Resources</h3>
<ul>
<li>Newsletter: “<a href="https://theprofile.substack.com/">The Profile</a>” by Polina Pompliano, offering stories of unique individuals for learning.</li>
</ul>
</section>
<section id="recommendations-7" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-7">Recommendations</h3>
<ol type="1">
<li>Incorporate storytelling into the educational curriculum to enhance engagement and understanding.</li>
<li>Use stories to make abstract concepts concrete and relatable.</li>
<li>Encourage students to form emotional connections with the subjects they study through narratives.</li>
<li>Explore real-world examples and stories of successful individuals to inspire students.</li>
<li>Shift from rote memorization to a more story-driven approach in teaching.</li>
<li>Leverage the internet’s abundance of resources for story-driven learning.</li>
<li>Challenge traditional education systems to integrate storytelling for more effective learning.</li>
<li>Utilize biographies and personal stories as teaching tools across various subjects.</li>
<li>Emphasize understanding the ‘why’ and ‘how’ behind concepts through storytelling.</li>
<li>Make learning more enjoyable by transforming it from a chore to an engaging activity with stories.</li>
</ol>
</section>
</section>
<section id="learning-through-memorization" class="level2">
<h2 class="anchored" data-anchor-id="learning-through-memorization">Learning through Memorization</h2>
<p>Chapter 8 reevaluates the role of memorization in education. It highlights the need for meaningful memorization, integrating understanding with memory. The chapter discusses innovative methods like the ‘memory palace’ to make memorization more effective and engaging, moving away from rote learning to a deeper, more contextual understanding.</p>
<section id="ideas-8" class="level3">
<h3 class="anchored" data-anchor-id="ideas-8">Ideas</h3>
<ol type="1">
<li>The accessibility of information via technology has changed the role of memorization in education.</li>
<li>Memorization should be paired with meaning and understanding, not just rote learning.</li>
<li>The chapter criticizes traditional education for focusing on memorization without context.</li>
<li>It emphasizes the importance of understanding the ‘why’ behind memorized facts.</li>
<li>Fábrega advocates for focusing on essential knowledge that is practical and relevant.</li>
<li>The concept of the ‘memory palace’ is introduced as an effective memorization technique.</li>
<li>This approach makes memorization more natural, memorable, and enjoyable.</li>
<li>Fábrega suggests that memorization should be creative and align with natural brain functions.</li>
<li>Educators are encouraged to rethink traditional methods of memorization.</li>
<li>The chapter challenges the notion that memorization is inherently boring or frustrating.</li>
</ol>
</section>
<section id="quotes-8" class="level3">
<h3 class="anchored" data-anchor-id="quotes-8">Quotes</h3>
<ol type="1">
<li>“Anything you want to know is a Google search away, changing how we think about memorization.”</li>
<li>“Memorization is still important, but for different reasons.”</li>
<li>“We need to memorize less and analyze more.”</li>
<li>“Too often we give children answers to remember rather than problems to solve.”</li>
<li>“Memorization makes it look like they’re learning, but they are really imitating learning.”</li>
<li>“Kids need to learn both the what and the why.”</li>
<li>“Genuine learning happens when we understand how things work.”</li>
<li>“Focus less on memorizing trivia and more time mastering ideas that matter most.”</li>
<li>“Build a memory palace.”</li>
<li>“Memorization can be fun and creative, fitting with the actual way our brains work.”</li>
</ol>
</section>
<section id="facts-8" class="level3">
<h3 class="anchored" data-anchor-id="facts-8">Facts</h3>
<ol type="1">
<li>The chapter discusses the changing role of memorization in the digital age.</li>
<li>It emphasizes the importance of understanding the reasoning behind memorized facts.</li>
<li>The ‘memory palace’ technique is presented as a more effective approach to memorization.</li>
<li>Fábrega critiques the traditional educational focus on rote memorization without context.</li>
<li>The chapter proposes that memorization should be more aligned with natural brain functions.</li>
</ol>
</section>
<section id="resources-3" class="level3">
<h3 class="anchored" data-anchor-id="resources-3">Resources</h3>
<ul>
<li>Technique: The ‘<a href="https://artofmemory.com/blog/how-to-build-a-memory-palace/">memory palace</a>’ method for effective memorization.</li>
<li>Book: “<a href="https://joshuafoer.com/moonwalking-with-einstein/">Moonwalking with Einstein</a>” by Joshua Foer, exploring memory techniques.</li>
</ul>
</section>
<section id="recommendations-8" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-8">Recommendations</h3>
<ol type="1">
<li>Pair memorization with meaningful understanding rather than rote learning.</li>
<li>Use the ‘memory palace’ technique to make memorization more engaging and effective.</li>
<li>Focus on essential, practical knowledge in education rather than trivia.</li>
<li>Embrace creative and natural methods of memorization.</li>
<li>Encourage educators to rethink traditional memorization tactics.</li>
<li>Utilize memorization as a tool for deeper learning and faster information retrieval.</li>
<li>Avoid forcing students to memorize irrelevant information.</li>
<li>Apply memorization techniques that are both fun and align with how the brain naturally works.</li>
<li>Integrate context and reasoning into the memorization process.</li>
<li>Challenge the conventional view of memorization in education.</li>
</ol>
</section>
</section>
<section id="the-learning-style-myth" class="level2">
<h2 class="anchored" data-anchor-id="the-learning-style-myth">The Learning Style Myth</h2>
<p>Chapter 9 challenges the widely accepted notion of individual learning styles. Fábrega critiques the classification of students into visual, auditory, or kinesthetic learners, arguing that this approach is overly simplistic and not supported by scientific evidence. She advocates for a more holistic, flexible approach to learning, emphasizing the importance of engaging multiple senses and avoiding fixed mindsets.</p>
<section id="ideas-9" class="level3">
<h3 class="anchored" data-anchor-id="ideas-9">Ideas</h3>
<ol type="1">
<li>The concept of distinct learning styles (visual, auditory, kinesthetic) is a myth.</li>
<li>Scientific studies have debunked the idea of a dominant sensory modality in learning.</li>
<li>Learning involves the interconnection of multiple sensory modalities.</li>
<li>Tailoring education to specific learning styles does not improve learning outcomes.</li>
<li>Classifying students by learning style can encourage a fixed mindset.</li>
<li>Fábrega argues for a more fluid approach to learning preferences.</li>
<li>She suggests that learning habits change over time and are situational.</li>
<li>Encouraging a variety of learning methods is more effective than sticking to one style.</li>
<li>Fábrega emphasizes that we learn best using multiple sensory modalities.</li>
<li>The chapter discusses the flexibility and adaptability in learning methods.</li>
</ol>
</section>
<section id="quotes-9" class="level3">
<h3 class="anchored" data-anchor-id="quotes-9">Quotes</h3>
<ol type="1">
<li>“The idea that we have a dominant sensory modality is false.”</li>
<li>“We learn best when we engage more than one sense at a time.”</li>
<li>“Tailoring instruction to various learning styles doesn’t improve learning outcomes.”</li>
<li>“Learning styles encourage a fixed mindset.”</li>
<li>“We all learn best when we use a combination of many sensory modalities.”</li>
<li>“Our learning habits change over time and depend on the situation.”</li>
<li>“Kids have a big toolbox of ways to learn.”</li>
<li>“Variety in learning methods is good.”</li>
<li>“Encourage kids to use different mental tools for different topics.”</li>
<li>“We have countless ways to learn in this day and age.”</li>
</ol>
</section>
<section id="facts-9" class="level3">
<h3 class="anchored" data-anchor-id="facts-9">Facts</h3>
<ol type="1">
<li>The theory of distinct learning styles is not scientifically supported.</li>
<li>Learning involves multiple sensory inputs, not just one dominant style.</li>
<li>Studies show that tailoring education to specific learning styles doesn’t improve outcomes.</li>
<li>Fixed classifications of learning styles can limit students’ learning potential.</li>
<li>Modern educational resources offer diverse ways to engage in learning.</li>
</ol>
</section>
<section id="recommendations-9" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-9">Recommendations</h3>
<ol type="1">
<li>Move away from the notion of fixed learning styles and embrace a more holistic approach.</li>
<li>Utilize multiple sensory modalities for more effective learning.</li>
<li>Recognize that learning preferences are fluid and situation-dependent.</li>
<li>Encourage students to explore a variety of learning methods.</li>
<li>Teach students to use different tools and approaches for different learning scenarios.</li>
<li>Provide opportunities for students to learn in diverse ways.</li>
<li>Question the notion of making learning ‘easier’ and explore the value of struggle in learning.</li>
<li>Foster a growth mindset by avoiding fixed classifications in learning styles.</li>
<li>Emphasize adaptability and flexibility in learning methods.</li>
<li>Encourage curiosity and exploration in learning processes.</li>
</ol>
</section>
</section>
<section id="confusion-sparks-curiosity" class="level2">
<h2 class="anchored" data-anchor-id="confusion-sparks-curiosity">Confusion Sparks Curiosity</h2>
<p>Chapter 10 explores the positive aspects of confusion in learning. Fábrega emphasizes that confusion, when approached correctly, can lead to curiosity, motivation, engagement, and deeper learning. The chapter discusses techniques like embracing cognitive disequilibrium and learning through connections, highlighting the effectiveness of real-world applications and problem-solving in education.</p>
<section id="ideas-10" class="level3">
<h3 class="anchored" data-anchor-id="ideas-10">Ideas</h3>
<ol type="1">
<li>Confusion, often seen negatively, is actually a powerful tool for learning.</li>
<li>Cognitive disequilibrium occurs when new information challenges existing mental models.</li>
<li>Embracing confusion can lead to deeper understanding and problem-solving skills.</li>
<li>Traditional schooling often avoids confusion, leading to less effective learning.</li>
<li>Learning in context, such as through real-world examples, enhances understanding.</li>
<li>Fábrega advocates for teaching that encourages students to face and resolve confusion.</li>
<li>Exposing students to challenging situations can foster curiosity and engagement.</li>
<li>Allowing students to struggle productively is essential for learning.</li>
<li>Synthesis uses complex team games to teach problem-solving and critical thinking.</li>
<li>Changing the dialogue around confusion to view it as an opportunity, not a failure.</li>
</ol>
</section>
<section id="quotes-10" class="level3">
<h3 class="anchored" data-anchor-id="quotes-10">Quotes</h3>
<ol type="1">
<li>“Confusion is a powerful feeling. With the right approach, it can spark curiosity.”</li>
<li>“We find that confusion can be beneficial to learning if appropriately regulated.”</li>
<li>“When we are confused, we are experiencing cognitive disequilibrium.”</li>
<li>“Real learning comes from understanding relationships across different disciplines.”</li>
<li>“Teaching should help kids change perspectives to see difficult problems as exciting opportunities.”</li>
<li>“Synthesis works because it helps kids approach confusion.”</li>
<li>“Expose kids to confusion. Encourage them to solve that harder math problem.”</li>
<li>“Confusion is not synonymous with failure or incompetence.”</li>
<li>“Don’t jump to the rescue when kids get confused.”</li>
<li>“A moderate amount of confusion is key to getting kids engaged.”</li>
</ol>
</section>
<section id="facts-10" class="level3">
<h3 class="anchored" data-anchor-id="facts-10">Facts</h3>
<ol type="1">
<li>Cognitive disequilibrium is a key concept in understanding how confusion aids learning.</li>
<li>Effective learning involves facing and resolving confusion.</li>
<li>Synthesis, a school program at SpaceX, uses complex games for teaching.</li>
<li>The program was designed to help children learn to embrace and solve complex problems.</li>
<li>The chapter emphasizes the importance of not sheltering children from confusion.</li>
</ol>
</section>
<section id="resources-4" class="level3">
<h3 class="anchored" data-anchor-id="resources-4">Resources</h3>
<ul>
<li>Educational Program: <a href="https://www.synthesis.com/">Synthesis</a>, developed by Elon Musk’s school teacher, for complex problem-solving.</li>
<li>Psychological Concept: <a href="https://link.springer.com/referenceworkentry/10.1007/978-0-387-79061-9_598">Cognitive disequilibrium</a> and its role in learning.</li>
</ul>
</section>
<section id="recommendations-10" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-10">Recommendations</h3>
<ol type="1">
<li>Embrace confusion as a positive aspect of learning.</li>
<li>Foster cognitive disequilibrium to enhance problem-solving skills.</li>
<li>Avoid sheltering students from confusion to promote deeper learning.</li>
<li>Use real-world examples and challenges to contextualize learning.</li>
<li>Encourage independent problem-solving among students.</li>
<li>Change the dialogue around confusion to view it as a learning opportunity.</li>
<li>Implement teaching methods that mimic game design for better engagement.</li>
<li>Integrate complex, real-world challenges into educational curricula.</li>
<li>Teach students to embrace and resolve confusion.</li>
<li>Design learning experiences that encourage curiosity and sustained engagement.</li>
</ol>
</section>
</section>
<section id="the-architecture-of-great-games" class="level2">
<h2 class="anchored" data-anchor-id="the-architecture-of-great-games">The Architecture of Great Games</h2>
<p>Chapter 11 delves into how game design principles can enhance learning. Fábrega discusses the concepts of flow, intrinsically interesting challenges, and the ‘Super Mario effect’ in gaming to create compelling learning experiences. She argues that traditional schooling methods often fail to engage students, while game design techniques can make learning more exciting and effective.</p>
<section id="ideas-11" class="level3">
<h3 class="anchored" data-anchor-id="ideas-11">Ideas</h3>
<ol type="1">
<li>Game design principles can be applied to education to make learning more engaging.</li>
<li>Traditional classrooms often lack elements of game design, leading to disengagement.</li>
<li>The concept of flow is crucial in keeping students engaged and focused.</li>
<li>Intrinsically interesting challenges in games can make learning more enjoyable.</li>
<li>The ‘Super Mario effect’ focuses on the end goal rather than failures, encouraging persistence.</li>
<li>True gamification involves creating challenges that are inherently interesting to students.</li>
<li>Games teach valuable skills like critical thinking, problem-solving, and resilience.</li>
<li>Video games can be a significant means of learning due to their interactivity and complexity.</li>
<li>Learning through games can be more effective than traditional methods.</li>
<li>Fábrega suggests rethinking education to incorporate more game-like elements.</li>
</ol>
</section>
<section id="quotes-11" class="level3">
<h3 class="anchored" data-anchor-id="quotes-11">Quotes</h3>
<ol type="1">
<li>“Every maker of video games knows something that the makers of curriculum don’t seem to understand.”</li>
<li>“Games put us into a psychological state called flow.”</li>
<li>“In flow, we are entirely absorbed in a single task. We are totally aware of the present and feel in complete control.”</li>
<li>“Kids learn complicated skills in video games like critical thinking, problem-solving, resilience, strategy, and collaboration.”</li>
<li>“Games at the New York Public Library are a perfect example of true gamification.”</li>
<li>“Great games engage and excite us even when we fail.”</li>
<li>“Mark Rober calls this the Super Mario Effect, focusing on the princess, the end goal, and not the pits, mistakes and failures.”</li>
<li>“Video games are destined to be an important means of human learning for the rest of history.”</li>
<li>“You learn the mental skills with which you are learning the video game, and those skills are good for learning anything.”</li>
<li>“Games can help us shift kids from focusing on short-term marks or grades to focusing more on their ultimate end goals.”</li>
</ol>
</section>
<section id="facts-11" class="level3">
<h3 class="anchored" data-anchor-id="facts-11">Facts</h3>
<ol type="1">
<li>Game design principles can significantly enhance the learning experience.</li>
<li>Traditional classrooms often lack the engagement found in games.</li>
<li>Video games teach valuable skills like critical thinking and problem-solving.</li>
<li>The concept of flow is vital for keeping players engaged in games.</li>
<li>The ‘Super Mario effect’ emphasizes focusing on end goals rather than failures.</li>
<li>Games offer a safe environment for learning through trial and error.</li>
<li>Video games can be a powerful tool for learning due to their interactive and complex nature.</li>
</ol>
</section>
<section id="resources-5" class="level3">
<h3 class="anchored" data-anchor-id="resources-5">Resources</h3>
<ul>
<li>Podcast: Patrick O’Shaughnessy’s interview with Jane McGonigal on true gamification (<a href="https://pod.casts.io/podcasts/invest-like-the-best/episodes/jane-mcgonigal-how-games-make-life-better-invest-like-the-best-ep-138">link</a>).</li>
</ul>
</section>
<section id="recommendations-11" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-11">Recommendations</h3>
<ol type="1">
<li>Incorporate game design principles into educational curricula to enhance engagement.</li>
<li>Focus on creating learning experiences that are intrinsically interesting to students.</li>
<li>Utilize the concept of flow to keep students focused and absorbed in learning tasks.</li>
<li>Apply the ‘Super Mario effect’ in education to encourage persistence and focus on end goals.</li>
<li>Shift the focus from short-term grades to long-term learning and skill development.</li>
<li>Use video games as a tool for teaching critical thinking and problem-solving skills.</li>
<li>Create educational experiences that mimic the engagement and challenge of video games.</li>
<li>Recognize the potential negative aspects of gaming and address them in educational contexts.</li>
<li>Design learning activities that are interactive, complex, and offer risk-free trial and error.</li>
<li>Emphasize the importance of meaningful challenges and rewards in educational games.</li>
</ol>
</section>
</section>
<section id="the-psychology-of-healthy-gaming" class="level2">
<h2 class="anchored" data-anchor-id="the-psychology-of-healthy-gaming">The Psychology of Healthy Gaming</h2>
<p>Chapter 12 explores the psychological aspects of screen time and gaming for children. It discusses the balance between beneficial and harmful aspects of technology, focusing on how to help children develop a healthy relationship with screens. The chapter emphasizes the importance of understanding children’s motivations and guiding them towards healthy technology use, including managing screen time and gaming in a way that supports mental well-being and development.</p>
<section id="ideas-12" class="level3">
<h3 class="anchored" data-anchor-id="ideas-12">Ideas</h3>
<ol type="1">
<li>Kids spend significant time on screens, drawn to activities like gaming and social media.</li>
<li>Screen time fulfills psychological needs: autonomy, competency, and relatedness.</li>
<li>School environments often lack these elements, leading kids to seek them online.</li>
<li>Excessive screen time can become unhealthy, needing parental guidance and balance.</li>
<li>Tactics for managing screen time include discussing its pros and cons with kids.</li>
<li>Setting examples and creating boundaries collaboratively can help manage screen time.</li>
<li>Providing real-world opportunities for autonomy, competency, and relatedness is key.</li>
<li>Encouraging creation over consumption online can lead to healthier screen time.</li>
<li>Understanding the motivations behind excessive screen time is important for healthy management.</li>
<li>Strategies for healthy gaming include examining motivations, limiting hours, and choosing types of games.</li>
</ol>
</section>
<section id="quotes-12" class="level3">
<h3 class="anchored" data-anchor-id="quotes-12">Quotes</h3>
<ol type="1">
<li>“Kids spend an average of 7.5 hours per day in front of screens.”</li>
<li>“Are they dangerously addictive, or do kids simply lack self-control?”</li>
<li>“School is the antithesis of a place where kids feel competence, autonomy, and relatedness.”</li>
<li>“Kids have tons of autonomy online.”</li>
<li>“On the Internet, kids can learn anything they want.”</li>
<li>“The Internet is like a big playground where people can connect over shared interests.”</li>
<li>“Screen time goes from an important outlet to an unhealthy obsession.”</li>
<li>“Discuss the pros and cons of screen time together.”</li>
<li>“It’s easy to fall into the trap of laying down rules without giving good reasons.”</li>
<li>“When your kids do spend time online, encourage them to learn, make, socialize, and create.”</li>
</ol>
</section>
<section id="facts-12" class="level3">
<h3 class="anchored" data-anchor-id="facts-12">Facts</h3>
<ol type="1">
<li>Kids average 7.5 hours per day on screens.</li>
<li>Screen time fulfills psychological needs not met in traditional schooling.</li>
<li>The internet offers learning opportunities and social connections for kids.</li>
<li>Excessive screen time can become unhealthy without proper guidance.</li>
<li>Healthy gaming involves examining motivations and setting time limits.</li>
<li>Video games can be beneficial up to three hours a day.</li>
<li>Strategies for healthy gaming include avoiding aggressive games with strangers.</li>
</ol>
</section>
<section id="resources-6" class="level3">
<h3 class="anchored" data-anchor-id="resources-6">Resources</h3>
<ul>
<li>Book: “<a href="https://www.nirandfar.com/indistractable/">Indistractable</a>” by Nir Eyal, exploring the impact of technology on children.</li>
</ul>
</section>
<section id="recommendations-12" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-12">Recommendations</h3>
<ol type="1">
<li><p>Understand and discuss the psychological needs fulfilled by screen time.</p></li>
<li><p>Encourage a balance between online and offline activities.</p></li>
<li><p>Engage in open conversations about the pros and cons of technology use.</p></li>
<li><p>Collaboratively set boundaries for screen time with kids.</p></li>
<li><p>Encourage creative and productive online activities over passive consumption.</p></li>
<li><p>Provide real-world opportunities for kids to experience autonomy, competency, and relatedness.</p></li>
<li><p>Limit video gaming to a healthy duration and avoid aggressive games with strangers.</p></li>
<li><p>Involve kids in managing their screen time and gaming habits.</p></li>
<li><p>Understand the motivations behind kids’ screen use for effective guidance.</p></li>
<li><p>Set positive examples of technology use and offer fulfilling offline activities.</p></li>
</ol>
</section>
</section>
<section id="skin-in-the-game" class="level2">
<h2 class="anchored" data-anchor-id="skin-in-the-game">Skin in the Game</h2>
<p>Chapter 13 discusses the importance of personal investment in the educational process for both children and parents. Fábrega argues that real learning and responsibility come from facing the consequences of one’s decisions, a concept she refers to as having “skin in the game.” The chapter explores how this approach can lead to more meaningful, engaging, and effective learning experiences.</p>
<section id="ideas-13" class="level3">
<h3 class="anchored" data-anchor-id="ideas-13">Ideas</h3>
<ol type="1">
<li>Personal responsibility in learning is essential for real-world preparation.</li>
<li>“Skin in the game” means facing the consequences of one’s decisions.</li>
<li>Traditional schooling often lacks real stakes, making learning less effective.</li>
<li>Real-life problems and high-stakes scenarios enhance learning.</li>
<li>Children need opportunities to make decisions and face outcomes.</li>
<li>Parents should be more involved in their children’s learning process.</li>
<li>Collaboration between child and parent can enhance the educational experience.</li>
<li>Allowing children to tackle real problems helps them deal with life’s challenges.</li>
<li>Real stakes in learning foster motivation, focus, and memory retention.</li>
<li>The chapter suggests shifting from theoretical to practical, life-like education.</li>
</ol>
</section>
<section id="quotes-13" class="level3">
<h3 class="anchored" data-anchor-id="quotes-13">Quotes</h3>
<ol type="1">
<li>“In life, our choices have consequences, both good and bad.”</li>
<li>“Those who make a decision should also shoulder its risks.”</li>
<li>“Kids need more opportunities to make decisions and wrestle with the outcomes.”</li>
<li>“Parents need to take more responsibility for their children’s learning.”</li>
<li>“Synthesis started as a series of complex challenges for kids.”</li>
<li>“Real learning happens when we are dealing with the consequences of our decisions.”</li>
<li>“Skin in the game sets up the right conditions for real learning.”</li>
<li>“When the stakes are high, our motivation kicks into gear.”</li>
<li>“Teaching should help kids change perspectives to see difficult problems as exciting opportunities.”</li>
<li>“It’s important for parents to be deeply engaged in their children’s education.”</li>
</ol>
</section>
<section id="facts-13" class="level3">
<h3 class="anchored" data-anchor-id="facts-13">Facts</h3>
<ol type="1">
<li>Real-life challenges and high-stakes scenarios are effective in learning.</li>
<li>Personal investment and facing consequences enhance learning.</li>
<li>Synthesis is a program that uses real-world scenarios for educational purposes.</li>
<li>Parental involvement in education can provide stability and tailored learning experiences.</li>
<li>Teaching children at home can fill gaps in their formal education.</li>
</ol>
</section>
<section id="resources-7" class="level3">
<h3 class="anchored" data-anchor-id="resources-7">Resources</h3>
<ul>
<li>Concept: “<a href="https://www.penguinrandomhouse.com/books/537828/skin-in-the-game-by-nassim-nicholas-taleb/">Skin in the Game</a>” as described by Nassim Taleb.</li>
</ul>
</section>
<section id="recommendations-13" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-13">Recommendations</h3>
<ol type="1">
<li>Encourage children to make decisions and face the outcomes.</li>
<li>Integrate real-life problems and scenarios into education.</li>
<li>Increase parental involvement in children’s learning process.</li>
<li>Balance providing guidance with giving children autonomy.</li>
<li>Explore various educational options, including homeschooling.</li>
<li>Engage in passion projects with children to enhance learning.</li>
<li>Use practical, life-like education methods rather than purely theoretical ones.</li>
<li>Teach children to view challenges as opportunities.</li>
<li>Address gaps in formal education by teaching children at home.</li>
<li>Understand and respond to children’s educational needs through active parental participation.</li>
</ol>
</section>
</section>
<section id="raising-antifragile-kids" class="level2">
<h2 class="anchored" data-anchor-id="raising-antifragile-kids">Raising Antifragile Kids</h2>
<p>Chapter 14 addresses the concept of antifragility in children’s development. Fábrega argues against overprotective parenting, emphasizing the importance of exposing kids to moderate levels of stress and reasonable risks. The chapter discusses how such experiences can strengthen children, making them more resilient and capable of handling life’s challenges.</p>
<section id="ideas-14" class="level3">
<h3 class="anchored" data-anchor-id="ideas-14">Ideas</h3>
<ol type="1">
<li>Overprotective parenting can lead to sensitive, risk-averse children.</li>
<li>Antifragility, a concept by Nassim Taleb, refers to things that gain strength from stress.</li>
<li>Children are inherently antifragile, benefiting from facing challenges and low-stake conflicts.</li>
<li>Fábrega argues for allowing children to face moderate stress and risks.</li>
<li>Overprotected children often can’t handle disappointments independently.</li>
<li>It’s crucial for children to learn to navigate through life’s ups and downs.</li>
<li>Parents should encourage children to take risks and face challenges.</li>
<li>Exposing children to stressors can enhance their resilience and independence.</li>
<li>The chapter advocates for a balanced approach in parenting and teaching.</li>
<li>Encouraging children to try new things and solve problems on their own is essential.</li>
</ol>
</section>
<section id="quotes-14" class="level3">
<h3 class="anchored" data-anchor-id="quotes-14">Quotes</h3>
<ol type="1">
<li>“We are dealing with a generation of children that are sensitive and risk-averse.”</li>
<li>“Children grow stronger from facing challenges, moderate pain, and low-stake conflicts.”</li>
<li>“Real learning happens when we are dealing with the consequences of our decisions.”</li>
<li>“Overprotected children can’t handle disappointments without adult intervention.”</li>
<li>“Antifragility describes things that become stronger when exposed to stress and randomness.”</li>
<li>“It is our job to continue cultivating their antifragility by not intervening when they face moderate stress.”</li>
<li>“Good parenting, like good teaching, is about mastering the art of balance.”</li>
<li>“Children are antifragile.”</li>
<li>“Let children experience discomfort and deal with difficult people.”</li>
<li>“Exposing them to difficult situations will help them become more resilient, independent, and self-confident.”</li>
</ol>
</section>
<section id="facts-14" class="level3">
<h3 class="anchored" data-anchor-id="facts-14">Facts</h3>
<ol type="1">
<li>Overprotective parenting can lead to children being overly sensitive and risk-averse.</li>
<li>Antifragility is about gaining strength from stress and challenges.</li>
<li>Children benefit from facing moderate challenges and risks.</li>
<li>Overprotection can hinder children’s long-term development and resilience.</li>
<li>Letting children struggle and face challenges builds character and maturity.</li>
</ol>
</section>
<section id="resources-8" class="level3">
<h3 class="anchored" data-anchor-id="resources-8">Resources</h3>
<ul>
<li>Concept: <a href="https://www.penguinrandomhouse.com/books/176227/antifragile-by-nassim-nicholas-taleb/">Antifragility</a>, as described by Nassim Taleb.</li>
</ul>
</section>
<section id="recommendations-14" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-14">Recommendations</h3>
<ol type="1">
<li>Allow children to face moderate stress and reasonable risks for their development.</li>
<li>Balance being protective with letting children learn from their experiences.</li>
<li>Encourage risk-taking and problem-solving in children.</li>
<li>Teach children to handle challenges and disappointments independently.</li>
<li>Foster resilience and independence in children through life’s ups and downs.</li>
<li>Avoid overprotecting children to prevent them from becoming overly sensitive and risk-averse.</li>
<li>Involve children in decision-making and facing the consequences.</li>
<li>Provide opportunities for children to build character and ethical values.</li>
<li>Encourage reflection and conflict resolution skills in children.</li>
<li>Emphasize the importance of balancing safety and freedom in parenting and teaching.</li>
</ol>
</section>
</section>
<section id="how-to-develop-character-like-the-stoics" class="level2">
<h2 class="anchored" data-anchor-id="how-to-develop-character-like-the-stoics">How to Develop Character like the Stoics</h2>
<p>Chapter 15 explores Stoicism’s principles and their application in developing children’s character. Fábrega highlights four Stoic virtues—courage, temperance, justice, and wisdom—and provides practical tactics for integrating these virtues into children’s daily lives. She emphasizes the role of character building in guiding children through life’s challenges and preparing them to make meaningful contributions to the world.</p>
<section id="ideas-15" class="level3">
<h3 class="anchored" data-anchor-id="ideas-15">Ideas</h3>
<ol type="1">
<li>Stoicism, an ancient philosophy, emphasizes self-control, perseverance, and moral virtue.</li>
<li>The four Stoic virtues are courage, temperance, justice, and wisdom.</li>
<li>Courage involves facing adversity bravely, not recklessly.</li>
<li>Temperance balances courage by avoiding unnecessary risks.</li>
<li>Justice is about contributing to society’s good and treating others with respect.</li>
<li>Wisdom guides decisions and actions with long-term benefits.</li>
<li>These virtues help guide children’s decisions and develop strong moral character.</li>
<li>Character development should be an essential part of education.</li>
<li>Practical techniques like reading hero stories can help children understand and embody virtues.</li>
<li>Discussing virtue as a muscle emphasizes consistent effort and growth in character building.</li>
</ol>
</section>
<section id="quotes-15" class="level3">
<h3 class="anchored" data-anchor-id="quotes-15">Quotes</h3>
<ol type="1">
<li>“Stoicism is a philosophy that started in ancient Greece, known for its practical guide for life.”</li>
<li>“Courage is the bravery to face adversity.”</li>
<li>“Temperance is about avoiding foolish risks.”</li>
<li>“Justice means we exist for the sake of others.”</li>
<li>“Wisdom turns our ideas about virtue into action.”</li>
<li>“Character building is essential for helping kids grow up into well-rounded adults.”</li>
<li>“Read stories of heroes to your kids to grasp the benefits of virtue.”</li>
<li>“Focus on what you can control.”</li>
<li>“A virtue journal helps kids reflect on their actions and character growth.”</li>
<li>“Virtue is like a muscle that grows stronger with consistent effort.”</li>
</ol>
</section>
<section id="facts-15" class="level3">
<h3 class="anchored" data-anchor-id="facts-15">Facts</h3>
<ol type="1">
<li>Stoicism teaches the importance of virtues like courage, temperance, justice, and wisdom.</li>
<li>These virtues guide decisions and actions towards moral and ethical living.</li>
<li>Stoicism emphasizes character development as essential for a good life.</li>
<li>Practical techniques can help children understand and practice Stoic virtues.</li>
<li>Character development is crucial for children to become well-rounded adults.</li>
</ol>
</section>
<section id="recommendations-15" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-15">Recommendations</h3>
<ol type="1">
<li>Integrate Stoic virtues into children’s education and upbringing.</li>
<li>Use stories of historical heroes to illustrate the importance of virtues.</li>
<li>Teach children to focus on what they can control, fostering temperance and justice.</li>
<li>Encourage children to keep a virtue journal for self-reflection and character development.</li>
<li>Discuss the concept of virtue as a muscle that requires consistent effort to grow.</li>
<li>Emphasize the role of character building in guiding children through life’s challenges.</li>
<li>Introduce children to Stoic principles for moral and ethical decision-making.</li>
<li>Provide opportunities for children to practice courage, temperance, justice, and wisdom.</li>
<li>Foster a balanced approach to risk-taking and problem-solving.</li>
<li>Help children understand the long-term benefits of virtuous actions.</li>
</ol>
</section>
</section>
<section id="range-and-specific-knowledge" class="level2">
<h2 class="anchored" data-anchor-id="range-and-specific-knowledge">Range and Specific Knowledge</h2>
<p>Chapter 16 challenges the notion that early specialization is key to success. It advocates for developing a broad base of knowledge, encouraging children to explore various areas to discover their unique value. The chapter draws on concepts from David Epstein’s book “Range,” emphasizing the benefits of generalization before specialization and exploring Naval Ravikant’s idea of specific knowledge—unique traits and skills that individuals can offer the world.</p>
<section id="ideas-16" class="level3">
<h3 class="anchored" data-anchor-id="ideas-16">Ideas</h3>
<ol type="1">
<li>Early specialization is less beneficial than a broad base of knowledge.</li>
<li>Success often comes from a generalist background, not just specialization.</li>
<li>Generalization before specialization allows for more creative solutions and innovations.</li>
<li>Children should be encouraged to explore a range of activities and interests.</li>
<li>A ‘sampling period’ for new activities can help children find their passions.</li>
<li>Unstructured play is crucial for developing autonomy and discovering new interests.</li>
<li>Exposing children to a diverse range of subjects and thinking styles is beneficial.</li>
<li>Specific knowledge is a combination of unique traits, upbringing, and responses to life.</li>
<li>Helping children develop specific knowledge is about encouraging their natural curiosities and skills.</li>
<li>Embracing failure and quitting is part of the process of finding one’s specific knowledge.</li>
</ol>
</section>
<section id="quotes-16" class="level3">
<h3 class="anchored" data-anchor-id="quotes-16">Quotes</h3>
<ol type="1">
<li>“If we want exceptional kids, we should force them to specialize early, right? It’s time to bust this myth.”</li>
<li>“Generalize, then specialize, not the other way around.”</li>
<li>“Kids need more opportunities to make decisions and wrestle with the outcomes.”</li>
<li>“Encourage a sampling period for new activities and interests.”</li>
<li>“Unstructured play gives kids a sense of autonomy and the freedom to find new interests.”</li>
<li>“Specific knowledge is what you, and only you, can offer the world.”</li>
<li>“Specific knowledge is not necessarily the same as specialized knowledge.”</li>
<li>“Figure out what you were doing as a kid or teenager almost effortlessly.”</li>
<li>“Specific knowledge is about figuring out what you bring to the world that no one else can offer.”</li>
<li>“Helping kids develop specific knowledge is about helping them discover their curiosities, gifts, and skills.”</li>
</ol>
</section>
<section id="facts-16" class="level3">
<h3 class="anchored" data-anchor-id="facts-16">Facts</h3>
<ol type="1">
<li>Early specialization is less effective than developing a range of skills and knowledge.</li>
<li>Nobel laureates often have a wide range of interests outside their specialized field.</li>
<li>Specific knowledge combines unique traits and upbringing with personal responses to life.</li>
<li>Encouraging a variety of activities and interests helps children discover their unique skills.</li>
<li>Specific knowledge often involves connecting knowledge from multiple areas.</li>
</ol>
</section>
<section id="resources-9" class="level3">
<h3 class="anchored" data-anchor-id="resources-9">Resources</h3>
<ul>
<li>Book: “<a href="https://davidepstein.com/the-range/">Range</a>” by David Epstein, advocating for generalization before specialization.</li>
</ul>
</section>
<section id="recommendations-16" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-16">Recommendations</h3>
<ol type="1">
<li>Encourage children to explore a variety of interests and activities.</li>
<li>Foster a generalist background before moving towards specialization.</li>
<li>Introduce children to a diverse range of subjects and thinking styles.</li>
<li>Encourage self-reflection to help children understand their talents and passions.</li>
<li>Focus on developing specific knowledge that is unique to each child.</li>
<li>Allow children to engage in activities that feel like play to them.</li>
<li>Provide a strong foundation of general knowledge for children.</li>
<li>Emphasize the importance of embracing failure and quitting as part of learning.</li>
<li>Encourage children to find connections between different areas of knowledge.</li>
<li>Avoid forcing early specialization and instead let children discover their interests organically.</li>
</ol>
</section>
</section>
<section id="the-art-of-failing-and-quitting" class="level2">
<h2 class="anchored" data-anchor-id="the-art-of-failing-and-quitting">The Art of Failing and Quitting</h2>
<p>Chapter 17 reframes the concepts of failure and quitting as essential for learning and growth. The chapter encourages embracing failures as opportunities for feedback and learning, and recognizing when to quit activities that are unfulfilling or not aligned with one’s strengths. It emphasizes the importance of teaching kids to make thoughtful decisions about quitting and to see failure as a part of the learning process.</p>
<section id="ideas-17" class="level3">
<h3 class="anchored" data-anchor-id="ideas-17">Ideas</h3>
<ol type="1">
<li>Failure is a natural and necessary part of the learning process.</li>
<li>Quitting is not always negative; it can be a strategic decision to focus on more fulfilling activities.</li>
<li>Schools often create a fear of failure, hindering children’s willingness to take risks and try new things.</li>
<li>Encouraging kids to take risks and learn from failures can lead to greater discovery and innovation.</li>
<li>The art of failure involves seeing mistakes as feedback for improvement.</li>
<li>Constructive quitting involves recognizing when an activity does not align with one’s strengths or interests.</li>
<li>Parents and educators should encourage kids to experiment and explore various interests.</li>
<li>Children should learn to differentiate between small, constructive failures and catastrophic failures.</li>
<li>Sharing stories of successful people who have failed and learned from their experiences can be inspiring.</li>
<li>Teaching kids to reflect on their experiences helps them make informed decisions about quitting.</li>
</ol>
</section>
<section id="quotes-17" class="level3">
<h3 class="anchored" data-anchor-id="quotes-17">Quotes</h3>
<ol type="1">
<li>“We are taught in school that quitters never win.”</li>
<li>“Failure should be something we encourage, not punish.”</li>
<li>“No progress is possible without trial and error.”</li>
<li>“The best way to avoid catastrophic failure as an adult is to make lots of small failures as a kid.”</li>
<li>“Giving our kids the option to quit celebrates the idea that they should have the chance to try out new things without the expectation that every new thing will fit.”</li>
<li>“When kids see work as what they do rather than who they are, they are more willing to explore different possibilities.”</li>
<li>“Quitting early and often, not because it’s hard, but because it sucks.”</li>
<li>“We shouldn’t look down on kids for failing and quitting, as they are both necessary for growth.”</li>
<li>“Raising successful kids is all about exposing them to difficulties and risks, but not overwhelming them too much.”</li>
<li>“It’s about helping them build a general range of skills, but also helping them find their specific knowledge.”</li>
</ol>
</section>
<section id="facts-17" class="level3">
<h3 class="anchored" data-anchor-id="facts-17">Facts</h3>
<ol type="1">
<li>Failure is crucial for discovery and progress.</li>
<li>Quitting can be a strategic decision for better focusing one’s efforts.</li>
<li>Schools often instill a fear of failure in students.</li>
<li>Small failures are essential for learning and avoiding catastrophic failures.</li>
<li>The average person holds a dozen different jobs in their lifetime, indicating the normality of quitting and changing paths.</li>
</ol>
</section>
<section id="resources-10" class="level3">
<h3 class="anchored" data-anchor-id="resources-10">Resources</h3>
<ul>
<li>Book: “<a href="https://www.johnholtgws.com/how-children-fail-by-john-holt">How Children Fail</a>” by John Holt, exploring the school system’s impact on fear of failure.</li>
<li>Speech: Professor Deepak Malhotra’s speech to Harvard Business School on the value of quitting (<a href="https://www.youtube.com/watch?v=D73mm29XXAw">link</a>).</li>
<li>Book: “<a href="https://adamgrant.net/book/think-again/">Think Again</a>” by Adam Grant, presenting alternative perspectives on careers and identity.</li>
</ul>
</section>
<section id="recommendations-17" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-17">Recommendations</h3>
<ol type="1">
<li>Encourage children to see failure as a learning opportunity and not as a negative outcome.</li>
<li>Teach kids to differentiate between constructive and catastrophic failures.</li>
<li>Share stories of successful individuals who have failed and learned from their experiences.</li>
<li>Model a positive attitude towards failure and quitting for children.</li>
<li>Help children develop their own criteria for when to quit an activity.</li>
<li>Encourage a range of experiences to help children find their specific knowledge and interests.</li>
<li>Teach children that it’s okay to change their career paths or interests over time.</li>
<li>Foster an environment where children feel safe to try new things and potentially fail.</li>
<li>Guide children in reflective thinking to make informed decisions about quitting.</li>
<li>Encourage exploration of various interests to develop a broad skill set before specializing.</li>
</ol>
</section>
</section>
<section id="mental-models-for-parents" class="level2">
<h2 class="anchored" data-anchor-id="mental-models-for-parents">Mental Models for Parents</h2>
<p>Chapter 18 delves into how parents can use mental models to effectively navigate the complexities of parenting. The chapter introduces concepts like Maslow’s Hammer, Reactants, Nudges, Reframing, and Inversion, explaining how these can aid in making better parenting decisions. It emphasizes the importance of understanding these models to respond appropriately to children’s needs and behaviors.</p>
<section id="ideas-18" class="level3">
<h3 class="anchored" data-anchor-id="ideas-18">Ideas</h3>
<ol type="1">
<li>Mental models are frameworks or concepts that help organize experiences and make sense of the world.</li>
<li>Maslow’s Hammer warns against over-relying on a single approach or tool in parenting.</li>
<li>Reactants highlight the human desire for autonomy, including children’s need for choice.</li>
<li>Nudges involve subtly guiding children towards better choices through environmental changes.</li>
<li>Reframing teaches changing perspectives to find positives in challenging situations.</li>
<li>Inversion, as a mental model, involves tackling problems by considering their opposite.</li>
<li>Understanding these models can help parents respond more effectively to their children’s needs.</li>
<li>Mental models assist in interpreting complex situations and making informed decisions.</li>
<li>Parents can use these models to adapt to each child’s unique developmental stage and challenges.</li>
<li>The chapter encourages parents to build their own mental models based on their experiences and observations.</li>
</ol>
</section>
<section id="quotes-18" class="level3">
<h3 class="anchored" data-anchor-id="quotes-18">Quotes</h3>
<ol type="1">
<li>“Mental models are like maps for life, helping us make connections and gain a higher-level perspective.”</li>
<li>“Maslow’s Hammer: If the only tool you have is a hammer, everything looks like a nail.”</li>
<li>“Reactants: Humans naturally want choice and autonomy, and that goes for kids, too.”</li>
<li>“Nudges: A simple change in context makes good choices easier than bad choices.”</li>
<li>“Reframing helps kids see a bad situation from a different angle and find positives.”</li>
<li>“Inversion: Looking at problems from the opposite perspective can offer new solutions.”</li>
<li>“Understanding mental models is critical for anyone interested in thinking clearly, rationally, and effectively.”</li>
<li>“Mental models help parents sort the good ideas from the bad and take decisive action.”</li>
<li>“Building your own mental models based on experiences with your children is crucial.”</li>
<li>“Checklists can help remember the right actions to take in complex parenting scenarios.”</li>
</ol>
</section>
<section id="facts-18" class="level3">
<h3 class="anchored" data-anchor-id="facts-18">Facts</h3>
<ol type="1">
<li>Mental models are essential tools for effective parenting and decision-making.</li>
<li>Models like Maslow’s Hammer, Reactants, Nudges, Reframing, and Inversion offer different approaches to parenting challenges.</li>
<li>Regular application of these models can help parents adapt to the evolving needs of their children.</li>
<li>Documentation and reflection on children’s behavior are useful in developing specific mental models.</li>
<li>Mental models can simplify complex parenting situations by providing structured approaches.</li>
</ol>
</section>
<section id="resources-11" class="level3">
<h3 class="anchored" data-anchor-id="resources-11">Resources</h3>
<ul>
<li>Website: <a href="https://fs.blog/">Farnam Street</a>, run by Shane Parrish, providing resources on mental models for parenting.</li>
<li>Book: “<a href="https://www.penguinrandomhouse.com/books/562923/super-thinking-by-gabriel-weinberg-and-lauren-mccann/">Super Thinking</a>” by Gabriel Weinberg and Lauren McCann, exploring over 100 mental models applicable in real life.</li>
</ul>
</section>
<section id="recommendations-18" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-18">Recommendations</h3>
<ol type="1">
<li>Understand and apply various mental models to respond effectively to children’s behaviors and needs.</li>
<li>Avoid over-reliance on a single approach in parenting; adapt techniques to each situation.</li>
<li>Foster children’s autonomy by providing choices and understanding their need for control.</li>
<li>Use nudges to subtly guide children towards better decisions.</li>
<li>Practice reframing to help children view challenges positively.</li>
<li>Apply inversion to approach problems from different angles.</li>
<li>Regularly practice and refine parenting strategies based on mental models.</li>
<li>Keep notes on children’s behavior to develop specific mental models tailored to them.</li>
<li>Create checklists as practical tools for applying effective parenting tactics.</li>
<li>Explore additional tools and tactics for a comprehensive approach to parenting.</li>
</ol>
</section>
</section>
<section id="the-thinking-toolkit" class="level2">
<h2 class="anchored" data-anchor-id="the-thinking-toolkit">The Thinking Toolkit</h2>
<p>Chapter 19 focuses on developing good thinking skills in children, emphasizing the importance of various thinking strategies. It introduces the concept of ‘thinking hats’ for different perspectives, discusses thinking in probabilities, and emphasizes elastic thinking for creative problem-solving. The chapter critiques traditional education’s focus on analytical thinking, advocating for a more flexible, creative approach to prepare children for a rapidly changing world.</p>
<section id="ideas-19" class="level3">
<h3 class="anchored" data-anchor-id="ideas-19">Ideas</h3>
<ol type="1">
<li><strong>Good Thinking as a Skill</strong>: Emphasizing that good thinking is a skill that can be developed, not just an innate trait.</li>
<li><strong>Six Thinking Hats</strong>: Introducing different ‘thinking hats’ to approach problems from various perspectives.</li>
<li><strong>Importance of Creative Thinking</strong>: Highlighting the need for creativity and exploration in thinking, beyond logic and analysis.</li>
<li><strong>Teaching Children to Think</strong>: Discussing methods to teach children how to use different thinking strategies effectively.</li>
<li><strong>Thinking in Probabilities</strong>: Encouraging thinking in terms of probabilities instead of absolutes, to better handle uncertainty.</li>
<li><strong>Elastic Thinking</strong>: Advocating for elastic thinking, which involves creative and spontaneous connections, in problem-solving.</li>
<li><strong>Limits of Analytical Thinking</strong>: Criticizing the overemphasis on analytical thinking in traditional education.</li>
<li><strong>Preparing for the Future</strong>: Stressing the need for elastic thinking to tackle future, unforeseen challenges.</li>
<li><strong>Encouraging Intuition in Children</strong>: Promoting the use of intuition and unstructured play in learning.</li>
<li><strong>Rethinking Education for Elastic Thinking</strong>: Proposing changes to the education system to foster elastic thinking.</li>
</ol>
</section>
<section id="quotes-19" class="level3">
<h3 class="anchored" data-anchor-id="quotes-19">Quotes</h3>
<ol type="1">
<li>“Good thinking isn’t exactly an innate trait.”</li>
<li>“The skill of the car driver determines how the power of the car is used.”</li>
<li>“Thinking hats, thinking in bits, and elastic thinking.”</li>
<li>“Wisdom is the ultimate goal of good thinking.”</li>
<li>“Unlike intelligence, wisdom is not a natural-born talent.”</li>
<li>“Great thinkers are also great gamblers.”</li>
<li>“They constantly make bets and use probabilities.”</li>
<li>“We shouldn’t use results to judge our decisions.”</li>
<li>“Elastic thinking helps people solve problems humanity has never faced before.”</li>
<li>“Automatic thinking helps us drive cars and analytical thinking helps us build them.”</li>
</ol>
</section>
<section id="resources-12" class="level3">
<h3 class="anchored" data-anchor-id="resources-12">Resources</h3>
<ol type="1">
<li>Book: “<a href="https://www.debono.com/Books/teach-your-child-how-to-think">Teach Your Child How to Think</a>” by Edward de Bono, offers methods to teach children different thinking strategies.</li>
<li>Book: “<a href="https://www.penguinrandomhouse.com/books/552885/thinking-in-bets-by-annie-duke/">Thinking in Bets</a>” by Annie Duke discusses decision-making and probability thinking.</li>
<li>Concept: <a href="https://www.debono.com/Books/six-thinking-hats">Six Thinking Hats</a> is a technique for approaching problems from different perspectives.</li>
<li><a href="https://www.amazon.com/gp/product/0141987391/">Elastic</a> by Leonard Mlodinow: Elastic thinking encourages creative and spontaneous problem-solving.</li>
</ol>
</section>
<section id="recommendations-19" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-19">Recommendations</h3>
<ol type="1">
<li><p><strong>Develop Various Thinking Strategies</strong>: Teach children to use different thinking hats for broader perspectives.</p></li>
<li><p><strong>Encourage Creative Problem-Solving</strong>: Foster elastic thinking in children for innovative solutions.</p></li>
<li><p><strong>Teach Probability Thinking</strong>: Help children make decisions based on probabilities rather than certainties.</p></li>
<li><p><strong>Focus on Process Over Outcome</strong>: Teach the importance of a good decision-making process over the outcome.</p></li>
<li><p><strong>Reduce Emphasis on Analytical Thinking</strong>: Balance analytical thinking with creative and elastic thinking in education.</p></li>
<li><p><strong>Address Biases in Decision-Making</strong>: Educate children about biases and how to overcome them.</p></li>
<li><p><strong>Encourage Intuition and Exploration</strong>: Allow children to engage in unstructured play and self-directed projects.</p></li>
<li><p><strong>Rethink Educational Practices</strong>: Advocate for educational reforms to encourage more flexible thinking.</p></li>
<li><p><strong>Recognize Children’s Potential</strong>: Acknowledge and nurture the untapped innovative capabilities in children.</p></li>
</ol>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>The author provides a set of guidelines for designing a learning environment that fosters creativity, independence, and critical thinking in children. The focus is on moving away from traditional education methods, emphasizing the importance of failure, intrinsic motivation, and diverse thinking strategies. The chapter encourages parents and educators to rethink their approach to children’s learning, aiming to cultivate curiosity, resilience, and a love for learning.</p>
<section id="ideas-20" class="level3">
<h3 class="anchored" data-anchor-id="ideas-20">Ideas</h3>
<ol type="1">
<li><strong>Designing Learning Environments</strong>: Creating spaces that allow for independent and creative thinking in children.</li>
<li><strong>Rethinking Failure</strong>: Viewing failure as a learning opportunity rather than something to be feared.</li>
<li><strong>Value of Intrinsic Motivation</strong>: Focusing on internal drives rather than external rewards in learning.</li>
<li><strong>Diverse Thinking Strategies</strong>: Encouraging the use of various mental models and thinking approaches.</li>
<li><strong>Parental Involvement in Education</strong>: The importance of active parental engagement in the learning process.</li>
<li><strong>Challenging Overprotection</strong>: Recognizing the need to allow children to face and overcome challenges.</li>
<li><strong>Encouraging Skepticism and Inquiry</strong>: Teaching children to question and critically evaluate information.</li>
<li><strong>Valuing Unstructured Play</strong>: The role of play and exploration in learning and development.</li>
<li><strong>Fostering a Growth Mindset</strong>: Cultivating resilience, perseverance, and a willingness to learn from mistakes.</li>
<li><strong>Navigating Screen Time</strong>: Balancing the benefits and drawbacks of digital media in children’s lives.</li>
</ol>
</section>
<section id="quotes-20" class="level3">
<h3 class="anchored" data-anchor-id="quotes-20">Quotes</h3>
<ol type="1">
<li>“Stop over instructing kids so they have space to think creatively and independently.”</li>
<li>“Reframe the learning process so that kids are not scared of failure.”</li>
<li>“Recognize effort, not ability.”</li>
<li>“Give kids choices and make them feel accountable.”</li>
<li>“Real learning happens when kids work intensely on things that matter to them.”</li>
<li>“Broaden the methods by which you measure progress.”</li>
<li>“Unlock intrinsic motivation instead of relying on extrinsic motivators.”</li>
<li>“Help kids get comfortable with the uncomfortable.”</li>
<li>“Let kids dwell on their confusion.”</li>
<li>“Teach your kids that it’s okay to inquire and ask for more evidence.”</li>
</ol>
</section>
<section id="recommendations-20" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-20">Recommendations</h3>
<ol type="1">
<li><strong>Foster Independent Thinking</strong>: Encourage spaces and opportunities for children to think creatively and independently.</li>
<li><strong>Normalize and Learn from Failure</strong>: Teach children to view failure as a part of the learning process.</li>
<li><strong>Encourage Intrinsic Motivation</strong>: Shift focus from external rewards to fostering internal motivation in learning.</li>
<li><strong>Utilize Diverse Thinking Strategies</strong>: Introduce various mental models and thinking approaches to children.</li>
<li><strong>Actively Participate in Children’s Education</strong>: Engage as parents or educators in the learning journey of children.</li>
<li><strong>Challenge Overprotective Tendencies</strong>: Allow children to face and overcome challenges independently.</li>
<li><strong>Promote Inquiry and Skepticism</strong>: Teach children to question and critically evaluate information.</li>
<li><strong>Value Unstructured Play</strong>: Recognize the importance of play and exploration in learning.</li>
<li><strong>Cultivate a Growth Mindset</strong>: Encourage resilience and perseverance in children.</li>
<li><strong>Balance Screen Time Effectively</strong>: Manage digital media use to ensure it’s beneficial to learning.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>education</category>
  <category>notes</category>
  <guid>christianjmills.com/posts/the-learning-game-book-notes/index.html</guid>
  <pubDate>Mon, 20 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>The Kill Chain Book Notes</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/the-kill-chain-book-notes/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>What Happened to Yoda’s Revolution?</li>
<li>Little Green Men and Assassin’s Mace</li>
<li>A Tale of Two Cities</li>
<li>Information Revolution 2.0</li>
<li>Something Worse Than Change</li>
<li>A Different Kind of Arms Race</li>
<li>Human Command, Machine Control</li>
<li>A Military Internet of Things</li>
<li>Move, Shoot, Communicate</li>
<li>Defense Without Dominance</li>
<li>Bureaucracy Does Its Thing</li>
<li>How the Future Can Win</li>
<li>Conclusion</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://www.hachettebookgroup.com/titles/christian-brose/the-kill-chain/9780316533362/">Publisher Page</a></li>
<li><a href="https://www.linkedin.com/in/christian-brose-50b026ab/">Author’s LinkedIn Page</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level1">
<h1>Introduction</h1>
<p>Christian Brose, in “The Kill Chain: Defending America in the Future of High-Tech Warfare,” discusses the declining technological advantage of the U.S. military against countries like China. He reflects on his experiences as John McCain’s national security advisor and the urgent need for the U.S. to adapt its military strategy and technologies to maintain global dominance.</p>
<section id="ideas" class="level3">
<h3 class="anchored" data-anchor-id="ideas">Ideas</h3>
<ol type="1">
<li>The U.S. military’s technological edge is rapidly eroding, particularly against China.</li>
<li>There’s a critical need for America to modernize its military capabilities.</li>
<li>Traditional military platforms are becoming less effective against advanced technologies.</li>
<li>The concept of the ‘kill chain’—understanding, deciding, and acting in warfare—is central to military effectiveness.</li>
<li>The U.S. defense establishment has been slow to adapt to technological changes.</li>
<li>Current military platforms are not integrated into an effective battle network.</li>
<li>The U.S. military’s dependence on large, expensive platforms is a strategic weakness.</li>
<li>Emerging technologies like AI and robotics are key to future warfare.</li>
<li>China’s military modernization is outpacing the U.S. in critical areas.</li>
<li>America’s military strategy needs to shift from offensive to defensive capabilities.</li>
<li>The U.S. must reimagine its military structure to counter new types of warfare.</li>
<li>A lack of imagination, not resources, is hindering U.S. military advancement.</li>
<li>The U.S. needs to invest in smaller, more autonomous, and expendable military technology.</li>
<li>U.S. military dominance has led to complacency in defense innovation.</li>
<li>Political gridlock and bureaucratic inertia impede necessary military reforms.</li>
<li>Technology alone isn’t the solution; new strategic thinking is also essential.</li>
<li>The military-industrial complex needs a paradigm shift to adapt to new challenges.</li>
<li>Effective military power depends on more than just advanced platforms.</li>
<li>The role of the military is changing due to technological advances.</li>
<li>U.S. military strategy must evolve to maintain global security and dominance.</li>
</ol>
</section>
<section id="quotes" class="level3">
<h3 class="anchored" data-anchor-id="quotes">Quotes</h3>
<ol type="1">
<li>“The accelerating erosion of the U.S. military’s technological advantage over other great powers, primarily China, which was rapidly building up arsenals of advanced weapons with the explicit purpose of being able to fight and win a war against the United States.”</li>
<li>“We mistake inputs for outcomes.”</li>
<li>“The goal of a military should not be to buy platforms. The goal is to buy deterrence.”</li>
<li>“The ability to prevail in war and thereby prevent it comes down to one thing, the kill chain.”</li>
<li>“The U.S. military would no longer be the best.”</li>
<li>“America’s military superiority has eroded to a dangerous degree.”</li>
<li>“The U.S. military could suffer unacceptably high casualties and loss of major capital assets in its next conflict.”</li>
<li>“For years McCain and I had been pleading with Pentagon leaders to be clearer and more forthcoming with Congress and the American people.”</li>
<li>“The Chinese Communist Party knew far more about the U.S. military and its vulnerabilities than the American people and their elected representatives did.”</li>
<li>“China poses far more than just a military challenge to the United States.”</li>
<li>“The problem is that America is playing a losing game.”</li>
<li>“The real problem is a lack of imagination.”</li>
<li>“The entire model of American military power now finds itself in much the same position that Barnes and Noble or Blockbuster Video did amid the rise of Amazon, Apple, and Netflix.”</li>
<li>“China could in one decade have a larger gross domestic product than America.”</li>
<li>“The Chinese Communist Party aims to become the dominant power in Asia and in the world.”</li>
</ol>
</section>
<section id="facts" class="level3">
<h3 class="anchored" data-anchor-id="facts">Facts</h3>
<ol type="1">
<li>Christian Brose served as John McCain’s national security advisor.</li>
<li>The U.S. military spends roughly $700 billion each year.</li>
<li>The Chinese military budget increased by 900% from 1990 to 2017.</li>
<li>The U.S. military relies heavily on large, expensive, and hard-to-replace platforms.</li>
<li>China is rapidly developing advanced military technologies.</li>
<li>The U.S. military faces challenges in integrating new technologies into its existing systems.</li>
<li>Emerging technologies are transforming the nature of warfare.</li>
<li>The U.S. has been dominant in global military power for decades.</li>
<li>Political and bureaucratic challenges hinder military innovation in the U.S.</li>
<li>The U.S. military has been slow to adapt to changes in warfare technology.</li>
</ol>
</section>
<section id="recommendations" class="level3">
<h3 class="anchored" data-anchor-id="recommendations">Recommendations</h3>
<ol type="1">
<li><p>Modernize U.S. military capabilities to match emerging threats.</p></li>
<li><p>Shift focus from traditional platforms to more agile and adaptable technologies.</p></li>
<li><p>Increase investment in AI, robotics, and autonomous systems for defense.</p></li>
<li><p>Reassess and reform the military-industrial complex to encourage innovation.</p></li>
<li><p>Develop new strategic doctrines to counter advanced military threats.</p></li>
<li><p>Improve integration of various military systems into a cohesive battle network.</p></li>
<li><p>Prioritize defense against cyber warfare and electronic attacks.</p></li>
<li><p>Expand U.S. military capabilities in space and other emerging domains.</p></li>
<li><p>Foster a culture of agility and adaptability within the U.S. military.</p></li>
<li><p>Strengthen alliances and partnerships to counter global military challenges.</p></li>
</ol>
</section>
</section>
<section id="what-happened-to-yodas-revolution" class="level1">
<h1>What Happened to Yoda’s Revolution?</h1>
<p>Chapter 1 explores the evolution and challenges of U.S. military technology and strategy. He focuses on Andrew Marshall’s revolutionary ideas for military technology, their initial neglect, and the gradual realization of their necessity in the face of emerging threats, especially from China.</p>
<section id="ideas-1" class="level3">
<h3 class="anchored" data-anchor-id="ideas-1">Ideas</h3>
<ol type="1">
<li>Andrew Marshall, nicknamed “Yoda,” foresaw significant changes in warfare driven by technology.</li>
<li>Marshall’s report in 1992 highlighted the need for the U.S. to revolutionize its military approach.</li>
<li>The U.S. military’s traditional platform-centered approach was becoming outdated.</li>
<li>The Gulf War displayed U.S. technological superiority but also revealed limitations.</li>
<li>Marshall emphasized the importance of building effective ‘kill chains’ in modern warfare.</li>
<li>The U.S. military struggled with integrating new technologies into its existing frameworks.</li>
<li>The early 2000s saw a shift in focus to counterterrorism, overshadowing the need for military modernization.</li>
<li>China began developing capabilities that challenged the traditional U.S. military approach.</li>
<li>The U.S. military invested heavily in traditional platforms, often at the expense of newer technologies.</li>
<li>Political and bureaucratic inertia hindered the adoption of revolutionary military concepts.</li>
<li>The U.S. military’s reliance on large, expensive platforms made it vulnerable to new forms of warfare.</li>
<li>The concept of ‘anti-access and area-denial capabilities’ became crucial in understanding modern military strategy.</li>
<li>The U.S. military needed to adapt to the information age and integrate advanced technologies like AI.</li>
<li>The Pentagon and Congress often prioritized legacy systems over more innovative technologies.</li>
<li>The U.S. military’s technological dominance led to a complacency in adapting to new threats.</li>
<li>The focus on counterterrorism post-9/11 diverted resources from essential military modernization.</li>
<li>The U.S. failed to fully exploit the revolution in military affairs, particularly in terms of information technology.</li>
<li>The lack of a unified approach to military technology development led to inefficiencies and missed opportunities.</li>
<li>The U.S. military’s strategic focus remained anchored in past successes, overlooking emerging threats.</li>
<li>The U.S. defense establishment’s business model often prioritized platform development over network integration.</li>
</ol>
</section>
<section id="quotes-1" class="level3">
<h3 class="anchored" data-anchor-id="quotes-1">Quotes</h3>
<ol type="1">
<li>“The ability to prevail in war and thereby prevent it comes down to one thing, the kill chain.”</li>
<li>“The United States did not come close to its potential to move the most useful information rapidly to those who needed it most.”</li>
<li>“The U.S. military’s technological advantage over other great powers, primarily China, was rapidly eroding.”</li>
<li>“The real problem is a lack of imagination.”</li>
<li>“The Pentagon and Congress often prioritized legacy systems over more innovative technologies.”</li>
<li>“Marshall’s report warned that we were likely in the early stages of a change that could run another one or two decades.”</li>
<li>“China was beginning to build capabilities that challenged the traditional U.S. military approach.”</li>
<li>“Washington turned against the entire idea of a military revolution.”</li>
<li>“Marshall had been influenced by then classified writings of Soviet military planners about a coming military technical revolution.”</li>
<li>“The U.S. military’s reliance on large, expensive platforms made it vulnerable to new forms of warfare.”</li>
</ol>
</section>
<section id="facts-1" class="level3">
<h3 class="anchored" data-anchor-id="facts-1">Facts</h3>
<ol type="1">
<li>Andrew Marshall directed the Office of Net Assessment in the Department of Defense.</li>
<li>The Gulf War demonstrated the U.S. military’s technological superiority but also its limitations.</li>
<li>Marshall’s report in 1992 highlighted the emerging importance of information technology in warfare.</li>
<li>The U.S. defense establishment was slow in adopting Marshall’s revolutionary concepts.</li>
<li>The focus on counterterrorism post-9/11 overshadowed the need for broader military modernization.</li>
<li>China started developing capabilities to counter traditional U.S. military strategies.</li>
<li>The U.S. continued investing heavily in traditional military platforms.</li>
<li>The Pentagon and Congress often favored legacy systems over new technologies.</li>
<li>The U.S. military’s approach to warfare remained largely unchanged since the Gulf War.</li>
<li>The concept of ‘anti-access and area-denial capabilities’ became significant in modern military strategy.</li>
</ol>
</section>
<section id="recommendations-1" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-1">Recommendations</h3>
<ol type="1">
<li><p>Embrace and integrate new technologies like AI and unmanned systems in military strategy.</p></li>
<li><p>Transition from a platform-centered approach to a network-centric military model.</p></li>
<li><p>Prioritize the development of effective ‘kill chains’ to enhance military effectiveness.</p></li>
<li><p>Increase focus on modernizing military strategies to counter emerging threats, especially from China.</p></li>
<li><p>Foster a culture of innovation and adaptation within the U.S. military and defense establishment.</p></li>
<li><p>Reallocate resources to support the development of advanced military technologies and strategies.</p></li>
<li><p>Enhance collaboration between the Pentagon, Congress, and the defense industry to prioritize future-focused military capabilities.</p></li>
<li><p>Address bureaucratic and political inertia that hinders military innovation.</p></li>
<li><p>Shift strategic focus from maintaining legacy systems to developing new capabilities.</p></li>
<li><p>Improve information sharing and integration across different military platforms and services.</p></li>
</ol>
</section>
</section>
<section id="little-green-men-and-assassins-mace" class="level1">
<h1>Little Green Men and Assassin’s Mace</h1>
<p>Chapter 2 describes the emergence of new forms of warfare, focusing on Russia’s military actions in Ukraine (2014) and Syria, and China’s military developments. It details the tactical surprises and technological advancements of these nations, emphasizing their challenges to U.S. military dominance and the need for the U.S. to adapt its strategy and technology.</p>
<section id="ideas-2" class="level3">
<h3 class="anchored" data-anchor-id="ideas-2">Ideas</h3>
<ol type="1">
<li>Russia’s military intervention in Ukraine (2014) marked a significant shift in modern warfare tactics.</li>
<li>The Russian military employed advanced technology and unconventional tactics, including electronic warfare and precision strikes.</li>
<li>China’s military strategy focused on developing “Assassin’s Mace” weapons to counter U.S. military advantages.</li>
<li>Both Russia and China’s strategies aim to exploit vulnerabilities in U.S. military technology and strategy.</li>
<li>The U.S. military faced challenges in adapting to these new forms of warfare.</li>
<li>The U.S. reliance on traditional military platforms and systems has become a strategic weakness.</li>
<li>Russia and China’s advancements highlight the importance of integrating modern technology like AI and cyber capabilities into military strategy.</li>
<li>The U.S. military has been slow to respond to the evolving nature of global military threats.</li>
<li>China’s assertive actions in the South China Sea demonstrate its expanding military capabilities and strategic ambitions.</li>
<li>The U.S. has underestimated the speed and scope of China’s military modernization.</li>
<li>Russia’s use of unconventional warfare tactics in Ukraine and Syria was a wake-up call for U.S. military planners.</li>
<li>The U.S. has been complacent in its military technological dominance, leading to a lack of urgency in modernization.</li>
<li>Both Russia and China have developed strategies to disrupt U.S. command, control, and communication systems.</li>
<li>The U.S. needs a new strategic approach to address these emerging threats and maintain its military superiority.</li>
<li>The U.S. military’s focus on counterterrorism has diverted attention and resources from addressing state-based threats.</li>
<li>The U.S. military requires a paradigm shift towards network-centric warfare to counter these new challenges.</li>
<li>Russia and China have effectively utilized technology theft and espionage to advance their military capabilities.</li>
<li>The U.S.’s failure to adapt quickly to these changes has exposed vulnerabilities in its military strategy.</li>
<li>China’s development of anti-access and area-denial capabilities is designed to prevent U.S. military intervention in regional conflicts.</li>
<li>The U.S. needs to reevaluate its military alliances and partnerships in light of these emerging threats.</li>
</ol>
</section>
<section id="quotes-2" class="level3">
<h3 class="anchored" data-anchor-id="quotes-2">Quotes</h3>
<ol type="1">
<li>“The Russian military that emerged in Ukraine in 2014 was not one that most in Washington recognized.”</li>
<li>“China’s military strategy was to confront U.S. vulnerabilities with ‘Assassin’s Mace’ weapons.”</li>
<li>“The United States was losing a quarter of $1 trillion every year to cyber-enabled industrial espionage, much of it by China.”</li>
<li>“The events of 2014 were the culmination of Russian military modernization and growing geopolitical ambition.”</li>
<li>“China’s assertive actions in the South China Sea were a demonstration of its expanding military capabilities.”</li>
<li>“The U.S. military’s technological dominance had led to complacency in adapting to new threats.”</li>
<li>“Russia and China’s advancements in modern warfare require the U.S. to adapt its strategy and technology.”</li>
<li>“The U.S. has been slow to respond to the evolving nature of global military threats.”</li>
<li>“The U.S. has underestimated the speed and scope of China’s military modernization.”</li>
<li>“Russia’s use of unconventional warfare tactics in Ukraine was a wake-up call for U.S. military planners.”</li>
</ol>
</section>
<section id="facts-2" class="level3">
<h3 class="anchored" data-anchor-id="facts-2">Facts</h3>
<ol type="1">
<li>In 2014, Russia used advanced military tactics and technology in its intervention in Ukraine.</li>
<li>China has been developing “Assassin’s Mace” weapons to counter U.S. military advantages.</li>
<li>Russia and China have focused on exploiting vulnerabilities in U.S. military technology and strategy.</li>
<li>The U.S. military has faced challenges in adapting to new forms of warfare.</li>
<li>China’s assertive actions in the South China Sea demonstrate its expanding military capabilities.</li>
<li>The U.S. has been slow to respond to the evolving nature of global military threats.</li>
<li>Russia and China have effectively used technology theft and espionage to advance their military capabilities.</li>
<li>China’s development of anti-access and area-denial capabilities is designed to prevent U.S. intervention in regional conflicts.</li>
<li>The U.S. military’s focus on counterterrorism has diverted attention from state-based threats.</li>
<li>The U.S. needs to reevaluate its military alliances and partnerships in light of emerging threats.</li>
</ol>
</section>
<section id="recommendations-2" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-2">Recommendations</h3>
<ol type="1">
<li><p>Integrate modern technology, including AI and cyber capabilities, into U.S. military strategy.</p></li>
<li><p>Adapt U.S. military strategy to address emerging threats from Russia and China.</p></li>
<li><p>Develop countermeasures against unconventional warfare tactics used by adversaries.</p></li>
<li><p>Prioritize technological modernization to maintain U.S. military superiority.</p></li>
<li><p>Reassess U.S. military alliances and partnerships in response to global threats.</p></li>
<li><p>Enhance cybersecurity measures to protect against espionage and technology theft.</p></li>
<li><p>Increase focus on network-centric warfare to counter new challenges.</p></li>
<li><p>Improve U.S. military agility and adaptability to respond to rapid changes in warfare.</p></li>
<li><p>Strengthen U.S. military capabilities in areas like electronic warfare and precision strikes.</p></li>
<li><p>Foster innovation in defense technology to stay ahead of adversaries.</p></li>
</ol>
</section>
</section>
<section id="a-tale-of-two-cities" class="level1">
<h1>A Tale of Two Cities</h1>
<p>Chapter 3 analyzes the growing divide between U.S. defense and technology sectors, tracing back to the Cold War era. It highlights the initial close collaboration between the U.S. government and Silicon Valley, and how this relationship deteriorated, leading to challenges in military technology development. The chapter emphasizes the impact of bureaucracy, changing priorities, and a lack of innovation focus, resulting in the U.S. military’s struggle to keep pace with technological advancements.</p>
<section id="ideas-3" class="level3">
<h3 class="anchored" data-anchor-id="ideas-3">Ideas</h3>
<ol type="1">
<li>The early Cold War era saw a tight collaboration between the U.S. government and Silicon Valley, fostering significant technological advances.</li>
<li>The U.S. military initially integrated civilian technologists and industrialists in developing new technologies.</li>
<li>Eisenhower’s approach focused on empowering exceptional individuals (“founders”) to develop breakthrough technologies.</li>
<li>The U.S. defense industry’s initial success was driven by a concentration of priorities, resources, and talent.</li>
<li>The bureaucracy and regulatory environment in the U.S. military acquisition process grew over time, hindering innovation.</li>
<li>The Vietnam War marked a turning point, with Silicon Valley engineers becoming uncomfortable working for the government.</li>
<li>The end of the Cold War led to a decrease in defense R&amp;D funding and a shift in priorities.</li>
<li>The defense acquisition system became overly complex and inefficient, focusing on cost over innovation.</li>
<li>Consolidation in the defense industry reduced competition and hindered technological advancement.</li>
<li>The U.S. government’s procurement processes became unattractive to new technology developers.</li>
<li>The Pentagon’s focus remained on traditional platforms rather than network-centric warfare.</li>
<li>The information revolution in the commercial sector outpaced the technological advancements in the defense sector.</li>
<li>The U.S. military failed to adapt to the rapid changes in technology during the information revolution.</li>
<li>The gap between the defense establishment and Silicon Valley widened, impacting military technology development.</li>
<li>The U.S. defense acquisition system prioritized fairness and efficiency over speed and innovation.</li>
<li>The bureaucracy in the defense procurement process discouraged creative and fast-paced technological development.</li>
<li>The U.S. government’s policies inadvertently pushed technology developers away from defense applications.</li>
<li>The commercial technology economy became more lucrative and appealing than defense technology.</li>
<li>The U.S. military’s technological edge began to decay amid China’s accelerating military modernization.</li>
<li>The U.S. defense establishment was ill-prepared for the rapid technological changes brought by the information revolution.</li>
</ol>
</section>
<section id="quotes-3" class="level3">
<h3 class="anchored" data-anchor-id="quotes-3">Quotes</h3>
<ol type="1">
<li>“The early years of the Cold War saw a close collaboration between the U.S. government and Silicon Valley.”</li>
<li>“Eisenhower’s strategy was to empower exceptional individuals to develop breakthrough technologies.”</li>
<li>“The bureaucracy in the U.S. military acquisition process grew, hindering innovation.”</li>
<li>“Silicon Valley engineers became uncomfortable working for the government during the Vietnam War.”</li>
<li>“The end of the Cold War led to a decrease in defense R&amp;D funding.”</li>
<li>“The defense acquisition system focused on cost over innovation.”</li>
<li>“Consolidation in the defense industry reduced competition and technological advancement.”</li>
<li>“The Pentagon’s focus remained on traditional platforms, not network-centric warfare.”</li>
<li>“The information revolution in the commercial sector outpaced advancements in defense.”</li>
<li>“The U.S. military failed to adapt to rapid technological changes during the information revolution.”</li>
</ol>
</section>
<section id="facts-3" class="level3">
<h3 class="anchored" data-anchor-id="facts-3">Facts</h3>
<ol type="1">
<li>The U.S. government and Silicon Valley collaborated closely during the early Cold War era.</li>
<li>Eisenhower focused on empowering individuals to develop new military technologies.</li>
<li>The U.S. defense acquisition process became increasingly bureaucratic over time.</li>
<li>The Vietnam War marked a shift in Silicon Valley’s attitude towards working with the government.</li>
<li>Defense R&amp;D funding decreased after the Cold War.</li>
<li>The defense acquisition system became overly complex and inefficient.</li>
<li>The defense industry underwent significant consolidation.</li>
<li>The Pentagon’s focus remained on traditional platforms rather than on network-centric warfare.</li>
<li>The commercial technology sector outpaced the defense sector in innovation.</li>
<li>The U.S. military struggled to adapt to the rapid technological changes of the information revolution.</li>
</ol>
</section>
<section id="recommendations-3" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-3">Recommendations</h3>
<ol type="1">
<li>Foster closer collaboration between the U.S. military and technology sectors, especially Silicon Valley.</li>
<li>Simplify the defense acquisition process to encourage innovation and efficiency.</li>
<li>Prioritize funding for defense R&amp;D to maintain the U.S. military’s technological edge.</li>
<li>Shift the Pentagon’s focus towards network-centric warfare and modern technologies.</li>
<li>Create incentives for technology companies to engage in defense-related projects.</li>
<li>Embrace rapid technological changes and integrate them into military strategy.</li>
<li>Reduce bureaucratic hurdles in the defense procurement process to attract innovative companies.</li>
<li>Encourage the development of new, competitive firms in the defense industry.</li>
<li>Re-evaluate the U.S. military’s strategic priorities to align with current technological advancements.</li>
<li>Increase collaboration and partnerships between government, industry, and academia to foster technological innovation in defense.</li>
</ol>
</section>
</section>
<section id="information-revolution-2.0" class="level1">
<h1>Information Revolution 2.0</h1>
<p>Chapter 4 discusses the rapid advancements in commercial technology, especially in AI and machine learning, and contrasts these with the U.S. military’s lag in adopting these innovations. Brose reflects on his meeting with Nvidia executives and the vast gap between commercial computing capabilities and those of the U.S. military. He highlights the challenges the military faces in adapting to these technological shifts and the widening divide between Silicon Valley and the Department of Defense.</p>
<section id="ideas-4" class="level3">
<h3 class="anchored" data-anchor-id="ideas-4">Ideas</h3>
<ol type="1">
<li>Commercial technology, particularly in AI and machine learning, has far surpassed military technology in capability and innovation.</li>
<li>The U.S. military’s computing power is significantly behind that of commercial technologies, as exemplified by the comparison between Nvidia’s and the F-35’s processing capabilities.</li>
<li>The U.S. military’s approach to data processing is outdated, relying heavily on manual human analysis rather than automated machine learning.</li>
<li>Commercial companies like Nvidia are leading in fields like edge computing and AI, while the military lags.</li>
<li>The widening gap between Silicon Valley and the Department of Defense is a significant concern for U.S. military capabilities.</li>
<li>The U.S. military’s procurement and technological development processes are bureaucratic and slow, hindering innovation.</li>
<li>Brose advocates for the military’s adoption of commercial technological advances to maintain a competitive edge.</li>
<li>The chapter illustrates the need for a paradigm shift in the U.S. military’s approach to technology and data.</li>
<li>The U.S. military’s technological stagnation is in stark contrast to the rapid advancements in the commercial sector.</li>
<li>The military’s reluctance or inability to integrate cutting-edge technologies from the commercial sector poses strategic risks.</li>
<li>Brose emphasizes the importance of modernizing military systems to leverage advancements in AI and machine learning.</li>
<li>The U.S. military’s outdated technology and processes are not only inefficient but also potentially detrimental to national security.</li>
<li>The chapter highlights the critical role of data in modern warfare and the need for the military to adapt to this reality.</li>
<li>Brose suggests that the U.S. military’s technological backwardness could be a significant disadvantage in future conflicts.</li>
<li>The military’s slow adoption of new technologies contrasts sharply with the fast-paced innovation in the private sector.</li>
</ol>
</section>
<section id="quotes-4" class="level3">
<h3 class="anchored" data-anchor-id="quotes-4">Quotes</h3>
<ol type="1">
<li>“The most capable computer on board a U.S. military system is the core processor in the F-35 Joint Strike Fighter.”</li>
<li>“Nvidia’s technology enables vehicles to make sense of the myriad events that happen every second on congested roads.”</li>
<li>“The U.S. military’s computing power is significantly behind that of commercial technologies.”</li>
<li>“Commercial technology companies have far surpassed military technology in capability and innovation.”</li>
<li>“The U.S. military’s approach to data processing is outdated.”</li>
<li>“The widening gap between Silicon Valley and the Department of Defense is a significant concern.”</li>
<li>“Commercial companies like Nvidia are leading in fields like edge computing and AI.”</li>
<li>“The U.S. military’s procurement and technological development processes are bureaucratic and slow.”</li>
<li>“The military’s reluctance or inability to integrate cutting-edge technologies poses strategic risks.”</li>
<li>“The U.S. military’s technological stagnation is in stark contrast to the rapid advancements in the commercial sector.”</li>
</ol>
</section>
<section id="facts-4" class="level3">
<h3 class="anchored" data-anchor-id="facts-4">Facts</h3>
<ol type="1">
<li>Nvidia’s technology is significantly more advanced than the computing capabilities of the U.S. military.</li>
<li>The F-35 Joint Strike Fighter’s processor is the most advanced in U.S. military systems but pales in comparison to commercial technologies.</li>
<li>The U.S. military relies heavily on manual data processing, unlike the automated processes in commercial technologies.</li>
<li>The gap between Silicon Valley’s technological advancements and the U.S. military’s capabilities is growing.</li>
<li>The U.S. military’s technology development process is burdened by bureaucracy and inefficiency.</li>
<li>Nvidia leads in fields like edge computing, AI, and autonomous vehicles.</li>
<li>The U.S. military’s approach to data and technology is significantly outdated.</li>
<li>The U.S. military’s technological capabilities are lagging behind the commercial sector, especially in AI and machine learning.</li>
<li>The military’s slow adoption of new technologies contrasts with the rapid innovation pace in the private sector.</li>
<li>The U.S. military’s technological backwardness could be a disadvantage in future conflicts.</li>
</ol>
</section>
<section id="recommendations-4" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-4">Recommendations</h3>
<ol type="1">
<li>The U.S. military should adopt commercial technological advances, especially in AI and machine learning.</li>
<li>Modernize military systems to leverage advancements in AI and machine learning.</li>
<li>Streamline the military’s procurement and technology development processes to reduce bureaucracy and encourage innovation.</li>
<li>Integrate cutting-edge technologies from the commercial sector into military systems.</li>
<li>Address the growing gap between Silicon Valley and the Department of Defense by fostering better collaboration.</li>
<li>Prioritize the modernization of military computing capabilities to match commercial standards.</li>
<li>Emphasize the importance of automated data processing in modern warfare.</li>
<li>Adapt military strategies to leverage</li>
</ol>
<p>the technological advancements in the private sector. 9. Encourage a cultural shift within the military to embrace rapid technological change. 10. Invest in partnerships with leading technology companies to bring state-of-the-art innovations to military applications.</p>
</section>
</section>
<section id="something-worse-than-change" class="level1">
<h1>Something Worse Than Change</h1>
<p>Chapter 5 addresses the challenges facing U.S. national defense, particularly in the context of great power competition, military innovation, and emerging technologies. Brose critiques the persistent issues in U.S. defense policy and procurement, highlighting the irony of repeating historical rhetoric without meaningful change. He examines the consequences of misplaced priorities, bureaucratic inertia, and technological stagnation, emphasizing the need for a fundamental shift in approach to maintain U.S. military superiority, especially against rising powers like China.</p>
<section id="ideas-5" class="level3">
<h3 class="anchored" data-anchor-id="ideas-5">Ideas</h3>
<ol type="1">
<li>Great power competition has reemerged as a central theme in U.S. national defense, necessitating military innovation and the integration of emerging technologies.</li>
<li>Historical patterns of defense rhetoric show little change over decades, leading to current strategic and technological deficiencies.</li>
<li>The U.S. military’s excessive investment in large bases and expensive platforms has been exploited by adversaries developing advanced weapons.</li>
<li>Transformational procurement programs have been delayed or failed, resulting in aging military systems without modern replacements.</li>
<li>The U.S. military faces a recovery challenge after years of overseas operations and is hindered by technological stagnation.</li>
<li>The information age has not been effectively leveraged for military benefit, leading to a diminished margin of error in global affairs.</li>
<li>Mismanagement in defense spending, prioritization of wrong military programs, and reluctance to make tough decisions contributed to current issues.</li>
<li>The September 11th attacks diverted attention to counterterrorism, impacting the focus on broader military modernization.</li>
<li>Military innovation often occurs in response to wartime demands, raising concerns about peacetime adaptation and change.</li>
<li>The U.S. military’s current capabilities may have limited utility against technologically advanced state competitors.</li>
<li>Bureaucratic resistance and conservative culture in the military have hindered necessary changes and innovation.</li>
<li>Past examples of successful military innovation in peacetime highlight the importance of clear threat definition and bottom-up problem-solving.</li>
<li>Leadership, both civilian and military, plays a crucial role in driving innovation and overcoming institutional resistance.</li>
<li>True military innovation requires operational and organizational transformation, not just technological acquisition.</li>
<li>The rise of China presents a unique challenge, with its integration into the global economy and rapid technological development.</li>
<li>China’s military-civil fusion doctrine and its aggressive technology acquisition strategies pose significant threats to U.S. interests.</li>
<li>The Chinese Communist Party’s use of technology for authoritarian control and military advancement is alarming.</li>
<li>U.S. military dominance is eroding in the face of China’s technological and military parity.</li>
<li>America’s failure to adapt to the changing character of war and the shift from offense to defense has strategic implications.</li>
<li>The U.S. military must develop new force structures and strategies to maintain deterrence and counter potential Chinese aggression.</li>
</ol>
</section>
<section id="quotes-5" class="level3">
<h3 class="anchored" data-anchor-id="quotes-5">Quotes</h3>
<ol type="1">
<li>“The irony is that much of what is said today [about U.S. national defense] is strikingly similar to what has been said for the past three decades.”</li>
<li>“Our military is overly invested in large bases and expensive platforms that our rivals have spent decades building advanced weapons to attack.”</li>
<li>“The wide margin of error that America once enjoyed in the world is gone.”</li>
<li>“The problem is that many of the innovations the U.S. military has developed to fight terrorist groups will likely be of limited utility for the challenge it now faces.”</li>
<li>“The main problem we are struggling to address is incredibly difficult. Can militaries innovate and change in the absence of war?”</li>
<li>“Military innovation and adaptation are made more difficult because the nature of any bureaucracy is to resist change, not promote it.”</li>
<li>“China’s inherently unobjectionable desire for advanced technologies is troubling because of the Chinese Communist Party’s ideology.”</li>
<li>“The rise of China is no ordinary foreign policy challenge. It is an unprecedented world historical event.”</li>
<li>“America has been so badly ambushed by the future. For far too long, we have not truly believed there is something worse than change.”</li>
<li>“The entire basis by which the U.S. military understands events, makes decisions, and takes actions, will not withstand the future of warfare.”</li>
</ol>
</section>
<section id="facts-5" class="level3">
<h3 class="anchored" data-anchor-id="facts-5">Facts</h3>
<ol type="1">
<li>Great power competition has reemerged as a key focus in U.S. national defense.</li>
<li>U.S. military investments have focused on large bases and expensive platforms.</li>
<li>Transformational procurement programs in the U.S. military have been delayed or unsuccessful.</li>
<li>The U.S. military has been strained by years of overseas operations.</li>
<li>The September 11th attacks shifted U.S. defense focus primarily to counterterrorism.</li>
<li>The U.S. military has struggled with peacetime innovation and adaptation.</li>
<li>China’s rise presents a unique challenge due to its economic and technological advancements.</li>
<li>The Chinese Communist Party’s ideology influences China’s technological pursuits.</li>
<li>China’s military-civil fusion doctrine aims to utilize civilian advancements for military purposes.</li>
<li>The U.S. military faces the prospect of losing its technological and strategic superiority.</li>
</ol>
</section>
<section id="recommendations-5" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-5">Recommendations</h3>
<ol type="1">
<li>Embrace a new era of military innovation focused on emerging technologies and changing strategic realities.</li>
<li>Reevaluate and realign U.S. defense priorities and spending to address current and future threats effectively.</li>
<li>Foster a culture of agility and adaptability within the U.S. military to respond to the changing nature of warfare.</li>
<li>Encourage bottom-up problem-solving and innovation within the military to address specific operational challenges.</li>
<li>Strengthen partnerships between civilian leadership and military mavericks to drive meaningful change.</li>
<li>Prioritize operational and organizational transformation over mere technological acquisition for true military innovation.</li>
<li>Develop strategies to counter China’s technological and military advancements while maintaining global stability.</li>
<li>Reassess U.S. military force structures and strategies to ensure effective deterrence against potential aggression by great powers like China.</li>
<li>Increase investment in research and development to maintain technological superiority in critical areas.</li>
<li>Encourage collaboration between the U.S. military and the private sector, particularly in the field of emerging technologies.</li>
</ol>
</section>
</section>
<section id="a-different-kind-of-arms-race" class="level1">
<h1>A Different Kind of Arms Race</h1>
<p>Chapter 6 examines the new dynamics of global military competition, focusing on the development of autonomous weapons, AI, and emerging technologies. It emphasizes China’s strategic advancements and its implications for U.S. military capabilities. Brose explores the complexities of arms control in the modern era, the potential risks and impacts of these technologies, and the urgent need for the U.S. to adapt and compete effectively in this new arms race.</p>
<section id="ideas-6" class="level3">
<h3 class="anchored" data-anchor-id="ideas-6">Ideas</h3>
<ol type="1">
<li>The international debate on banning lethal autonomous weapons highlights the challenges of modern arms control.</li>
<li>China supports banning the use of autonomous weapons but continues to develop them, indicating a strategic pursuit of military advantage.</li>
<li>The concept of ‘intelligentized warfare’ is central to China’s military strategy, incorporating autonomous systems in all domains.</li>
<li>The U.S. military faces challenges in keeping pace with China’s rapid advancements in military technology.</li>
<li>The global arms race now extends beyond traditional weaponry to emerging technologies like AI, hypersonics, and quantum computing.</li>
<li>China’s approach to technology, including mass data collection and authoritarian control, presents unique challenges to the U.S.</li>
<li>The new arms race is characterized by a competition over information and cognitive dominance, rather than just physical weaponry.</li>
<li>Emerging technologies like hypersonic weapons and directed energy weapons are reshaping military strategies.</li>
<li>The military applications of AI could transform command and control processes, enhancing decision-making and operational effectiveness.</li>
<li>The race to develop quantum computers and other advanced technologies will likely be a key determinant of future military superiority.</li>
<li>Biotechnology advancements could lead to significant enhancements in human performance, with profound military implications.</li>
<li>Space is becoming a critical domain in military competition, with the U.S. and China racing to develop new space-based capabilities.</li>
<li>The U.S. must confront the reality of a complex and multi-faceted technological arms race with China.</li>
<li>The U.S. faces the risk of falling behind in the race for military technological superiority.</li>
<li>The development of intelligent machines and autonomous weapons could redefine warfare and military strategy.</li>
</ol>
</section>
<section id="quotes-6" class="level3">
<h3 class="anchored" data-anchor-id="quotes-6">Quotes</h3>
<ol type="1">
<li>“The rush to develop increasingly autonomous weapons has sparked concerns of a global arms race for killer robots.”</li>
<li>“China’s military development efforts envision a future of intelligentized warfare.”</li>
<li>“The U.S. military’s technological dominance is challenged by China’s rapid advancements.”</li>
<li>“The arms race now includes AI, hypersonic weapons, quantum computing, and biotechnology.”</li>
<li>“China’s approach to technology poses unique challenges to U.S. military capabilities.”</li>
<li>“The new arms race is less about arms than cognition, focusing on information and decision-making.”</li>
<li>“Emerging technologies will transform the character of military power.”</li>
<li>“China’s military strategy includes a focus on intelligent machines and autonomous systems.”</li>
<li>“Quantum computing and AI are critical areas of competition in the new arms race.”</li>
<li>“The U.S. must adapt to the realities of this new and complex technological arms race.”</li>
</ol>
</section>
<section id="facts-6" class="level3">
<h3 class="anchored" data-anchor-id="facts-6">Facts</h3>
<ol type="1">
<li>International discussions have been ongoing about banning lethal autonomous weapons.</li>
<li>China is actively pursuing the development of autonomous military systems.</li>
<li>The global arms race now encompasses emerging technologies like AI and hypersonics.</li>
<li>China’s military strategy emphasizes the integration of advanced technologies.</li>
<li>The U.S. is competing with China in developing new military technologies.</li>
<li>Hypersonic weapons and directed energy weapons are reshaping military capabilities.</li>
<li>The development of AI and quantum computing is critical to future military superiority.</li>
<li>Biotechnology advancements have significant implications for military applications.</li>
<li>Space-based capabilities are becoming a central aspect of military strategy.</li>
<li>The U.S. faces challenges in maintaining technological superiority in the face of China’s advancements.</li>
</ol>
</section>
<section id="recommendations-6" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-6">Recommendations</h3>
<ol type="1">
<li>Accelerate the development of autonomous and AI-enhanced military systems to keep pace with global competitors.</li>
<li>Invest in hypersonic and directed energy weapons to maintain a competitive edge in modern warfare.</li>
<li>Prioritize the development of quantum computing and other advanced technologies for military applications.</li>
<li>Explore the potential of biotechnology for enhancing human performance in military contexts.</li>
<li>Expand the U.S. military’s space-based capabilities to ensure dominance in this critical domain.</li>
<li>Recognize and adapt to the multi-dimensional nature of the modern technological arms race.</li>
<li>Enhance cybersecurity and information warfare capabilities to protect against emerging threats.</li>
<li>Foster collaboration between the military, government, and private sector to accelerate technological advancements.</li>
<li>Develop ethical guidelines and strategies for the use of autonomous weapons and AI in warfare.</li>
<li>Strengthen U.S. military innovation and agility to effectively compete in the evolving global military landscape.</li>
</ol>
</section>
</section>
<section id="human-command-machine-control" class="level1">
<h1>Human Command, Machine Control</h1>
<p>Chapter 7 delves into the ethical and strategic implications of integrating intelligent machines and autonomous weapons in warfare. Brose reflects on the moral complexities of using such technologies, emphasizing the need for human command and control over these systems. He discusses the balance between effectiveness and ethical responsibility in military decisions, and the challenges posed by emerging technologies in the arms race, particularly against adversaries like China.</p>
<section id="ideas-7" class="level3">
<h3 class="anchored" data-anchor-id="ideas-7">Ideas</h3>
<ol type="1">
<li>The rise of intelligent machines and autonomous weapons in warfare raises profound ethical questions.</li>
<li>There is a debate over whether to maintain human control over the kill chain or to partially delegate it to machines.</li>
<li>The use of intelligent machines in warfare should focus on ends rather than means, and actions rather than actors.</li>
<li>Autonomous weapons systems like the U.S. Navy’s Phalanx and Aegis have already been in use, indicating a precedent for such technology.</li>
<li>The military use of intelligent machines must be grounded in rigorous training, testing, and trust-building.</li>
<li>The U.S. military must ensure that human agency initiates actions, particularly the use of violence, with clear accountability.</li>
<li>Machines in warfare should perform tasks that leverage their technical capabilities without compromising ethical values.</li>
<li>Intelligent machines can potentially reduce civilian casualties and risks to U.S. troops.</li>
<li>There’s a distinction between what machines are capable of doing (automation) and what they are permitted to do (autonomy).</li>
<li>The decision-making process of current intelligent machines can be opaque, necessitating the development of more explainable AI.</li>
<li>The U.S. must adapt its laws, policies, and military practices to incorporate the use of intelligent machines effectively and ethically.</li>
<li>The U.S. faces a challenge in maintaining transparency and ethical conduct while developing autonomous weapons systems.</li>
<li>The U.S. should engage in radical transparency in its development and use of autonomous weapons to maintain public trust.</li>
<li>The future military uses of intelligent machines and emerging technologies will be shaped by their builders and users.</li>
<li>Brose argues for the cautious development of lethal autonomous weapons by the U.S., considering the advancements of strategic competitors.</li>
<li>The U.S. should build autonomous weapons systems as a deterrence and for extreme cases of self-defense.</li>
<li>The ethical and legal accountability for the use of intelligent machines in warfare ultimately rests with human commanders.</li>
<li>The development of autonomous weapons systems should be guided by ethical imperatives and international law.</li>
<li>The U.S. must consider the broader implications of its technological advancements on warfare and global security.</li>
<li>The ethical debate over autonomous weapons should balance the risks and benefits of trusting intelligent machines in military operations.</li>
</ol>
</section>
<section id="quotes-7" class="level3">
<h3 class="anchored" data-anchor-id="quotes-7">Quotes</h3>
<ol type="1">
<li>“The rush to develop increasingly autonomous weapons has sparked concerns of a global arms race for killer robots.”</li>
<li>“The current debate over the role of intelligent machines in war too often focuses on the wrong things.”</li>
<li>“Intelligent machines will have a significant impact on the future of war.”</li>
<li>“The real issue now and for the foreseeable future is the military use of narrow artificial intelligence.”</li>
<li>“Humans must remain in charge and issue orders, but increasingly intelligent machines will be able to carry out more of those orders.”</li>
<li>“Military uses of intelligent machines, if thought about the right way, can be incorporated into our ethical principles, laws, policies, and practices.”</li>
<li>“The U.S. military refers to the relationship between human beings and intelligent machines as human-machine teaming.”</li>
<li>“The machines must demonstrate to the humans who are accountable for them that they can safely, reliably, and effectively perform the tasks that might be assigned to them.”</li>
<li>“The decision-making process of current intelligent machines can be highly opaque.”</li>
<li>“Greater use of intelligent machines today could lead to more ethical outcomes in war, such as reducing the number of civilian casualties.”</li>
</ol>
</section>
<section id="facts-7" class="level3">
<h3 class="anchored" data-anchor-id="facts-7">Facts</h3>
<ol type="1">
<li>Intelligent machines and autonomous weapons are becoming increasingly prevalent in modern warfare.</li>
<li>The U.S. Navy uses autonomous weapons systems like the Phalanx and Aegis for defense.</li>
<li>The military use of intelligent machines involves training, testing, and trust-building.</li>
<li>The decision-making process of current intelligent machines can be opaque, necessitating explainable AI.</li>
<li>Autonomous weapons systems have made costly mistakes in the past, such as friendly fire incidents.</li>
<li>The development of autonomous weapons systems is guided by ethical and legal standards.</li>
<li>The U.S. military uses laws and rules to govern the use of violence in combat.</li>
<li>The U.S. is facing challenges in maintaining transparency in the development and use of autonomous weapons.</li>
<li>The development and use of lethal autonomous weapons by the U.S. are subject to ethical and legal considerations.</li>
<li>The U.S. military’s approach to autonomous weapons includes considerations of self-defense and deterrence.</li>
</ol>
</section>
<section id="recommendations-7" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-7">Recommendations</h3>
<ol type="1">
<li><p>Ensure rigorous training, testing, and trust-building for the use of intelligent machines in warfare.</p></li>
<li><p>Maintain human command and control over autonomous weapons systems to ensure ethical and legal accountability.</p></li>
<li><p>Develop more explainable AI to improve understanding and trust in intelligent machines.</p></li>
<li><p>Foster radical transparency in the development and use of autonomous weapons to maintain public trust and ethical conduct.</p></li>
<li><p>Adapt U.S. laws, policies, and military practices to effectively incorporate the use of intelligent machines.</p></li>
<li><p>Balance the development of lethal autonomous weapons with ethical imperatives and international law.</p></li>
<li><p>Consider the broader implications of technological advancements on warfare and global security.</p></li>
<li><p>Engage in public and international discussions about the ethical use of autonomous weapons.</p></li>
<li><p>Develop autonomous weapons systems for deterrence and extreme cases of self-defense.</p></li>
<li><p>Continually reassess and update ethical and legal frameworks to address the evolving nature of autonomous weapons and intelligent machines.</p></li>
</ol>
</section>
</section>
<section id="a-military-internet-of-things" class="level1">
<h1>A Military Internet of Things</h1>
<p>Chapter 8 discusses the potential transformation of the U.S. military through the integration of advanced technologies. Brose envisions a military network akin to the commercial Internet of Things, utilizing autonomous systems, AI, and interconnected devices to enhance warfare capabilities. He argues for a shift from traditional, human-centric platforms to a network-focused approach, emphasizing the need for the U.S. to adapt to maintain its military edge.</p>
<section id="ideas-8" class="level3">
<h3 class="anchored" data-anchor-id="ideas-8">Ideas</h3>
<ol type="1">
<li>The U.S. military could benefit from adopting a network-centric approach, similar to the commercial Internet of Things.</li>
<li>Autonomous systems, like the XQ-58A Valkyrie and the Extra-Large Unmanned Underwater Vehicle, represent the future of military technology.</li>
<li>Intelligent machines can operate with limited human involvement, increasing efficiency and reducing risks to personnel.</li>
<li>The integration of AI and machine learning in military systems can significantly improve data processing and decision-making.</li>
<li>A military Internet of Things would enable a vast, interconnected network of intelligent machines, enhancing situational awareness and response capabilities.</li>
<li>The U.S. military needs to shift from a platform-centric to a network-centric approach to maintain its technological edge.</li>
<li>Advanced manufacturing methods can reduce the cost and complexity of military machines, making them more expendable and attritable.</li>
<li>The U.S. military’s current systems are outdated, leading to inefficiencies and limitations in warfare capabilities.</li>
<li>The concept of leader elections in machine networks can optimize operations and decision-making processes.</li>
<li>A military Internet of Things would involve a radical shift in command and control structures, with machines playing a more central role.</li>
<li>The U.S. military could achieve greater scale and speed in operations through intelligent machines and automation.</li>
<li>Human command and machine control would still be essential, ensuring ethical and strategic decision-making in military operations.</li>
<li>The U.S. military faces the challenge of balancing technological advancements with ethical considerations in warfare.</li>
<li>Developing a military Internet of Things requires a fundamental change in the U.S. military’s approach to technology, focusing on integration and network-building.</li>
<li>The U.S. military’s success in future conflicts may depend on its ability to adapt to and integrate these emerging technologies.</li>
</ol>
</section>
<section id="quotes-8" class="level3">
<h3 class="anchored" data-anchor-id="quotes-8">Quotes</h3>
<ol type="1">
<li>“A military Internet of Things would involve a vast, interconnected network of intelligent machines.”</li>
<li>“The U.S. military could benefit from adopting a network-centric approach, similar to the commercial Internet of Things.”</li>
<li>“Intelligent machines can operate with limited human involvement, increasing efficiency and reducing risks.”</li>
<li>“The integration of AI and machine learning in military systems can significantly improve decision-making.”</li>
<li>“Advanced manufacturing methods can reduce the cost and complexity of military machines.”</li>
<li>“The U.S. military’s current systems are outdated, leading to inefficiencies in warfare capabilities.”</li>
<li>“The concept of leader elections in machine networks can optimize operations.”</li>
<li>“Human command and machine control would still be essential in a military Internet of Things.”</li>
<li>“The U.S. military faces the challenge of balancing technological advancements with ethical considerations.”</li>
<li>“Developing a military Internet of Things requires a fundamental change in the military’s approach to technology.”</li>
</ol>
</section>
<section id="facts-8" class="level3">
<h3 class="anchored" data-anchor-id="facts-8">Facts</h3>
<ol type="1">
<li>The XQ-58A Valkyrie and the Extra-Large Unmanned Underwater Vehicle are examples of advanced autonomous military systems.</li>
<li>A military Internet of Things would consist of interconnected, intelligent machines enhancing warfare capabilities.</li>
<li>The integration of AI and machine learning can improve military data processing and decision-making.</li>
<li>Advanced manufacturing methods can make military machines more expendable and attritable.</li>
<li>The U.S. military currently faces limitations due to outdated systems and a platform-centric approach.</li>
<li>Leader elections in machine networks can enhance decision-making and operational efficiency.</li>
<li>A military Internet of Things would require a shift in command and control structures.</li>
<li>The U.S. military must balance technological advancements with ethical considerations in warfare.</li>
<li>The success of the U.S. military in future conflicts may depend on its ability to integrate emerging technologies.</li>
<li>The development of a military Internet of Things represents a significant change in the U.S. military’s approach to technology.</li>
</ol>
</section>
<section id="recommendations-8" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-8">Recommendations</h3>
<ol type="1">
<li><p>The U.S. military should adopt a network-centric approach, akin to the commercial Internet of Things, to enhance its warfare capabilities.</p></li>
<li><p>Invest in the development and integration of autonomous systems, AI, and machine learning to improve efficiency and decision-making.</p></li>
<li><p>Focus on advanced manufacturing methods to create more expendable and attritable military machines.</p></li>
<li><p>Update and modernize the U.S. military’s systems to overcome current limitations and inefficiencies.</p></li>
<li><p>Implement leader election mechanisms in machine networks to optimize operations and decision-making.</p></li>
<li><p>Ensure a balance between human command and machine control to maintain ethical and strategic decision-making in military operations.</p></li>
<li><p>Address the ethical implications and challenges posed by the integration of advanced technologies in warfare.</p></li>
<li><p>Encourage a fundamental shift in the U.S. military’s approach to technology, focusing on integration and network-building.</p></li>
<li><p>Prepare the U.S. military for the challenges of future conflicts by adapting to and integrating emerging technologies.</p></li>
<li><p>Promote collaboration and innovation within the military to develop and implement a successful military Internet of Things.</p></li>
</ol>
</section>
</section>
<section id="move-shoot-communicate" class="level1">
<h1>Move, Shoot, Communicate</h1>
<p>Chapter 9 focuses on the evolving nature of warfare, drawing parallels between historical and current military technologies and strategies. Brose highlights Jan Bloch’s predictions about modern combat and the importance of movement, shooting, and communication in warfare. He emphasizes the growing challenges faced by the U.S. military due to technological parity with adversaries like China and the need for innovative approaches in movement, shooting, and communications strategies.</p>
<section id="ideas-9" class="level3">
<h3 class="anchored" data-anchor-id="ideas-9">Ideas</h3>
<ol type="1">
<li>Historical insights from Jan Bloch show the significant impact of technology on warfare.</li>
<li>The evolution of military technology has historically altered warfare, as seen in World War I.</li>
<li>Modern warfare is characterized by a balance of offensive and defensive capabilities.</li>
<li>The U.S. military’s traditional dominance is challenged by technological parity with adversaries, particularly China.</li>
<li>The proliferation of information technologies and precision strike weapons has eroded America’s military dominance.</li>
<li>Technological advancements in warfare have increased the lethality and complexity of conflicts.</li>
<li>The U.S. military’s ability to fight offensively is hindered by vulnerabilities in its large platforms.</li>
<li>The nature of military competitions, such as the kill chain, is evolving with technology.</li>
<li>Understanding, decision-making, and action in military operations are critical components of modern warfare.</li>
<li>The U.S. military must innovate in the domains of movement, shooting, and communication.</li>
<li>The balance of power in warfare is shifting due to technological advancements.</li>
<li>The U.S. must adapt to the changing character of war, including the shift from traditional to non-terrestrial domains like cyber and space.</li>
<li>Military strategies must evolve to account for the high attrition rates of advanced machines and weapons.</li>
<li>Communications in future warfare will be characterized by decentralized, resilient networks.</li>
<li>The U.S. faces challenges in adapting to a military landscape where traditional assumptions about warfare are no longer valid.</li>
<li>The U.S. military’s future success will depend on its ability to adapt to new technologies and warfare tactics.</li>
<li>The rise of China as a peer competitor poses significant challenges to U.S. military dominance.</li>
<li>The character of war is constantly changing, necessitating continual adaptation by militaries.</li>
<li>The U.S. must be attentive to shifts in threats and technology, especially given the rapid pace of change.</li>
<li>Reimagining America’s national defense is crucial in an era where U.S. military dominance is no longer assured.</li>
</ol>
</section>
<section id="quotes-9" class="level3">
<h3 class="anchored" data-anchor-id="quotes-9">Quotes</h3>
<ol type="1">
<li>“The rush to develop increasingly autonomous weapons has sparked concerns of a global arms race for killer robots.”</li>
<li>“Technology had increased the killing power of defenders in every way.”</li>
<li>“The U.S. military’s technological dominance is challenged by China’s rapid advancements.”</li>
<li>“The proliferation of information technologies and precision strike weapons has eroded America’s longstanding military dominance.”</li>
<li>“The U.S. military’s ability to fight offensively depends on large platforms that are now more vulnerable than ever.”</li>
<li>“There is a competition over the kill chain, how militaries compete to gain better understanding, make better decisions, and take better actions.”</li>
<li>“The United States and China will become peers that likely have the same technologies.”</li>
<li>“The character of war is always changing.”</li>
<li>“The United States must be attentive to how threats and technology will inevitably shift.”</li>
<li>“We must reimagine America’s national defense in the absence of dominance.”</li>
</ol>
</section>
<section id="facts-9" class="level3">
<h3 class="anchored" data-anchor-id="facts-9">Facts</h3>
<ol type="1">
<li>Jan Bloch was a banker who studied the impact of technology on warfare.</li>
<li>The U.S. military faces challenges due to technological parity with adversaries like China.</li>
<li>Modern warfare involves a balance of offensive and defensive capabilities.</li>
<li>Technological advancements have increased the complexity and lethality of warfare.</li>
<li>The U.S. military’s traditional platforms are now more vulnerable to advanced weapons.</li>
<li>The nature of military competitions, such as the kill chain, is evolving.</li>
<li>The U.S. must innovate in movement, shooting, and communication strategies.</li>
<li>The balance of power in warfare is shifting due to technological advancements.</li>
<li>Future warfare will involve decentralized, resilient communication networks.</li>
<li>The character of war is constantly changing, requiring continual adaptation.</li>
</ol>
</section>
<section id="recommendations-9" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-9">Recommendations</h3>
<ol type="1">
<li><p>The U.S. military should focus on adapting to the evolving nature of warfare, particularly in the areas of movement, shooting, and communication.</p></li>
<li><p>Innovate in the domains of cyber and space to maintain a competitive edge.</p></li>
<li><p>Develop strategies to adapt to the high attrition rates of advanced machines and weapons.</p></li>
<li><p>Shift to decentralized and resilient communication networks in future warfare.</p></li>
<li><p>Reassess traditional assumptions about warfare and adapt to new realities.</p></li>
<li><p>Stay attentive to shifts in threats and technology to maintain military effectiveness.</p></li>
<li><p>Reimagine America’s national defense strategy in response to the erosion of traditional military dominance.</p></li>
<li><p>Invest in emerging technologies to stay competitive in the global military landscape.</p></li>
<li><p>Focus on developing adaptable and innovative military strategies to respond to rapid changes in warfare.</p></li>
<li><p>Encourage collaboration between military, government, and private sectors to foster technological advancements in defense.</p></li>
</ol>
</section>
</section>
<section id="defense-without-dominance" class="level1">
<h1>Defense Without Dominance</h1>
<p>Chapter 10 focuses on shifting U.S. national defense priorities towards great power competition, specifically with China and Russia. Brose, through a letter he helped John McCain write to Defense Secretary James Mattis, emphasizes the need for a revised National Defense Strategy. He advocates for rethinking America’s military goals and strategies in an era where U.S. military dominance is no longer assured, stressing the importance of adapting to technological advancements and new global realities.</p>
<section id="ideas-10" class="level3">
<h3 class="anchored" data-anchor-id="ideas-10">Ideas</h3>
<ol type="1">
<li>The U.S. must shift its national defense focus to prioritize challenges posed by great power competitors like China and Russia.</li>
<li>America’s longstanding military advantage has declined significantly, particularly against China.</li>
<li>The U.S. can no longer afford to maintain its expansive military commitments globally.</li>
<li>Effective defense strategy must prioritize and make tough choices, focusing on real threats and capabilities.</li>
<li>The National Defense Strategy of 2018 marked a shift towards recognizing long-term strategic competitions with China and Russia.</li>
<li>A change in defense strategy is crucial to meet the challenges of a world where the U.S. no longer enjoys uncontested military superiority.</li>
<li>Great power competition requires the U.S. to define its core interests and make strategic compromises.</li>
<li>The U.S. must adapt to the reality of other great powers imposing limits on American military goals.</li>
<li>America’s defense strategy should focus on denying military dominance to China, not on maintaining global dominance.</li>
<li>Future warfare might involve defending the U.S. homeland against conventional attacks from great powers.</li>
<li>The U.S. military needs to prepare for conflicts where its traditional assumptions about warfare are no longer valid.</li>
<li>A new American way of war should focus on defensive strategies rather than offensive ones.</li>
<li>The U.S. must rethink how its military operates, moving away from large, expensive platforms to networks of smaller, cheaper systems.</li>
<li>Allies play a crucial role in balancing power against China; the U.S. needs to encourage allies to contribute more to collective defense.</li>
<li>The U.S. defense strategy must prioritize conserving strategic resources, such as military power, money, and international goodwill.</li>
<li>The U.S. should focus on building a military capable of countering Chinese advancements, rather than projecting power globally.</li>
<li>The defense strategy must evolve to manage the increasing gray zone conflicts, such as cyber and information warfare.</li>
<li>The U.S. must prepare for a future where conflicts involve advanced technologies like hypersonic weapons and intelligent machines.</li>
<li>American defense strategy should prioritize denying military dominance to adversaries over achieving global military dominance.</li>
<li>The U.S. needs to adapt quickly to changing global realities, focusing on essential defense priorities and efficient resource allocation.</li>
</ol>
</section>
<section id="quotes-10" class="level3">
<h3 class="anchored" data-anchor-id="quotes-10">Quotes</h3>
<ol type="1">
<li>“We no longer enjoy the wide margins of power we once had.”</li>
<li>“The National Defense Strategy is perhaps the best opportunity in two decades to redefine America’s national defense.”</li>
<li>“America’s strategic margin for error has disappeared.”</li>
<li>“The return of great power competition requires us to think differently about our goals.”</li>
<li>“We must reimagine the ends, ways, and means of U.S. military power.”</li>
<li>“China may be capable of denying dominance to America, but America can do the same to China.”</li>
<li>“Great powers force each other to define their core interests.”</li>
<li>“Real homeland defense will have to become an American goal.”</li>
<li>“The United States must change the way that its military operates.”</li>
<li>“America needs to put the defense back in our defense strategy.”</li>
</ol>
</section>
<section id="facts-10" class="level3">
<h3 class="anchored" data-anchor-id="facts-10">Facts</h3>
<ol type="1">
<li>John McCain and Christian Brose advocated for a focus on China in U.S. defense strategy.</li>
<li>The National Defense Strategy of 2018 prioritizes strategic competition with China and Russia.</li>
<li>U.S. military dominance has declined, particularly against China.</li>
<li>Great power competition requires the U.S. to redefine its military goals.</li>
<li>Future conflicts may involve defending the U.S. homeland against conventional attacks.</li>
<li>A new American way of war should focus on defensive objectives.</li>
<li>The U.S. military needs to adapt to changing warfare dynamics, including advanced technologies.</li>
<li>Allies are crucial for balancing power against China.</li>
<li>The U.S. defense strategy must prioritize resource conservation.</li>
<li>The U.S. needs to adapt quickly to maintain effective national defense in changing global conditions.</li>
</ol>
</section>
<section id="recommendations-10" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-10">Recommendations</h3>
<ol type="1">
<li><p>Realign U.S. national defense priorities to focus on great power competition, particularly with China and Russia.</p></li>
<li><p>Redefine America’s military goals to adapt to a world without uncontested U.S. military dominance.</p></li>
<li><p>Prioritize development of a National Defense Strategy that addresses current and emerging threats.</p></li>
<li><p>Focus on denying military dominance to China, rather than maintaining global military dominance.</p></li>
<li><p>Prepare for homeland defense against conventional attacks in future great power conflicts.</p></li>
<li><p>Shift U.S. military strategy towards defensive objectives, emphasizing cost-effective and adaptable capabilities.</p></li>
<li><p>Encourage greater contributions and capabilities from allies in collective defense efforts.</p></li>
<li><p>Conserve strategic resources like military power and funding by prioritizing essential defense objectives.</p></li>
<li><p>Adapt to technological advancements and new forms of warfare, including cyber and information conflicts.</p></li>
<li><p>Accelerate strategic and operational adaptations to maintain effective defense in the face of global power shifts.</p></li>
</ol>
</section>
</section>
<section id="bureaucracy-does-its-thing" class="level1">
<h1>Bureaucracy Does Its Thing</h1>
<p>Chapter 11 delves into the complexities and inefficiencies of the U.S. defense bureaucracy. It illustrates how entrenched interests and bureaucratic processes often hinder significant changes in America’s military, using the example of the USS Harry Truman’s planned retirement. Brose criticizes the defense budget process for its slow, tedious nature and its preference for present needs over future capabilities, highlighting the challenges in adapting U.S. military strategies and technologies to changing global realities.</p>
<section id="ideas-11" class="level3">
<h3 class="anchored" data-anchor-id="ideas-11">Ideas</h3>
<ol type="1">
<li>The U.S. defense bureaucracy is resistant to change, often prioritizing present needs over future capabilities.</li>
<li>Attempts to make significant changes, like retiring the USS Harry Truman, face strong opposition from various stakeholders.</li>
<li>The defense budget process is slow and cumbersome, characterized by messy compromises and a focus on current programs.</li>
<li>The system overwhelmingly favors maintaining legacy systems, hindering investment in future technologies.</li>
<li>The annual defense budget process, involving numerous stakeholders, dictates how the U.S. allocates its defense spending.</li>
<li>The Pentagon’s risk-averse acquisition system is not optimized for rapid technology development.</li>
<li>The defense industry’s consolidation has limited competition and innovation.</li>
<li>There’s a disconnection between the national security and technology communities.</li>
<li>Brose argues that the bureaucracy’s structure and incentives are misaligned, focusing on immediate concerns over long-term needs.</li>
<li>The budget process is influenced by entrenched interests that resist embracing emerging technologies and innovative approaches.</li>
<li>Political and bureaucratic processes impede the military’s ability to adapt quickly to new challenges.</li>
<li>The defense budget process often results in spending on legacy systems at the expense of future capabilities.</li>
<li>The Pentagon’s budgeting and planning processes are hindered by a lack of flexibility and responsiveness to new developments.</li>
<li>Congressional restrictions on defense spending limit the military’s ability to reallocate funds for emerging technologies.</li>
<li>The power structure within the Department of Defense often prevents significant changes and favors existing programs.</li>
<li>Brose critiques the lack of imagination and leadership in addressing the challenges of strategic competition with China.</li>
<li>The bureaucratic processes are criticized for hindering the U.S. military’s effectiveness and adaptability.</li>
<li>Brose emphasizes the need for a defense acquisition system that prioritizes rapid technology development and innovation.</li>
<li>The Department of Defense’s focus on immediate challenges leaves little room for planning and investing in the future.</li>
<li>The complex and slow-moving bureaucracy of the U.S. defense establishment is portrayed as a significant impediment to meaningful change.</li>
</ol>
</section>
<section id="quotes-11" class="level3">
<h3 class="anchored" data-anchor-id="quotes-11">Quotes</h3>
<ol type="1">
<li>“The budget process is slow, tedious, unruly, and defined by messy, imperfect compromises.”</li>
<li>“Most people are rewarded and punished in the budget process based on how well they look after the needs of today, not tomorrow.”</li>
<li>“The Pentagon’s budgeting and planning processes are hindered by a lack of flexibility and responsiveness to new developments.”</li>
<li>“Defense industry consolidation has limited competition and innovation.”</li>
<li>“The defense acquisition system is not optimized for rapid technology development.”</li>
<li>“The system overwhelmingly favors the present at the expense of the future.”</li>
<li>“The very structure of the Department of Defense can even be a disincentive to right thinking.”</li>
<li>“The Pentagon develops its budgets from the bottom up.”</li>
<li>“The budget process matters because as the old saying goes, budgets are policy.”</li>
<li>“Incentives generate a powerful reluctance to do things differently, take more risk, and move more urgently.”</li>
</ol>
</section>
<section id="facts-11" class="level3">
<h3 class="anchored" data-anchor-id="facts-11">Facts</h3>
<ol type="1">
<li>The defense budget process is cumbersome and slow, focusing on current programs and legacy systems.</li>
<li>Attempts to retire the USS Harry Truman faced strong opposition from Congress and stakeholders.</li>
<li>The U.S. defense budget process involves numerous stakeholders, including defense industry, veterans organizations, and unions.</li>
<li>The Pentagon’s acquisition system is criticized for being risk-averse and not conducive to rapid technology development.</li>
<li>The defense industry in the U.S. has become increasingly consolidated.</li>
<li>The Pentagon’s budgeting and planning processes lack flexibility and responsiveness to new technologies.</li>
<li>Congressional restrictions on defense spending limit the Pentagon’s ability to reallocate funds.</li>
<li>The Department of Defense’s structure often prevents significant changes and favors existing programs.</li>
<li>The U.S. military’s future ability to defend the nation is hampered by the current bureaucratic processes.</li>
<li>The defense budget process often results in spending on legacy systems at the expense of future capabilities.</li>
</ol>
</section>
<section id="recommendations-11" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-11">Recommendations</h3>
<ol type="1">
<li><p>Streamline the defense budget process to be more responsive and flexible towards emerging technologies and future capabilities.</p></li>
<li><p>Encourage innovation and competition within the defense industry by reducing the consolidation of major defense contractors.</p></li>
<li><p>Reform the Pentagon’s acquisition system to prioritize rapid technology development and innovation.</p></li>
<li><p>Align the Department of Defense’s structure and incentives to focus more on future needs and capabilities.</p></li>
<li><p>Increase transparency and accountability in the defense budget process to mitigate the influence of entrenched interests.</p></li>
<li><p>Foster collaboration between the national security and technology communities to bridge the gap in understanding and application.</p></li>
<li><p>Reallocate defense spending to prioritize investments in future capabilities and technologies over legacy systems.</p></li>
<li><p>Develop a defense acquisition system that is adaptable and responsive to new challenges and technological advancements.</p></li>
<li><p>Encourage leadership within the Department of Defense to make bold decisions and embrace risk for the sake of innovation.</p></li>
<li><p>Address the bureaucratic challenges in the U.S. defense establishment to improve the military’s effectiveness and adaptability.</p></li>
</ol>
</section>
</section>
<section id="how-the-future-can-win" class="level1">
<h1>How the Future Can Win</h1>
<p>Chapter 12 discusses the challenges and solutions for modernizing the U.S. military. It highlights the JSTARS program revision, emphasizing the need for agility, technological integration, and political strategy in defense. The chapter underlines the importance of adapting to new warfare technologies and the difficulties posed by entrenched interests and bureaucratic inertia.</p>
<section id="ideas-12" class="level3">
<h3 class="anchored" data-anchor-id="ideas-12">Ideas</h3>
<ol type="1">
<li>Military modernization requires political strategy and technological agility.</li>
<li>JSTARS program’s revision exemplifies the need for adaptable military systems.</li>
<li>The U.S. military’s reliance on outdated platforms hampers its effectiveness.</li>
<li>Technological advancements in warfare demand a shift from traditional methods.</li>
<li>The inertia of the military-industrial complex impedes necessary changes.</li>
<li>Political and economic interests often obstruct defense modernization.</li>
<li>Disaggregating military capabilities enhances resilience and adaptability.</li>
<li>A ‘military internet of things’ is pivotal for future warfare efficiency.</li>
<li>The importance of understanding and adapting to the geopolitical landscape.</li>
<li>Effective lobbying and political maneuvering are crucial for defense reforms.</li>
<li>Encouraging competition within the defense industry can foster innovation.</li>
<li>The role of private sector and startups in defense technology development.</li>
<li>Overcoming bureaucratic and cultural obstacles is key to military advancement.</li>
<li>The potential of AI and autonomous systems in redefining military capabilities.</li>
<li>The importance of clear, operationally relevant problem definitions for military strategy.</li>
<li>Restructuring incentives in defense spending to prioritize efficiency and innovation.</li>
<li>Navigating the transition from legacy systems to modern capabilities.</li>
<li>The need for senior defense leadership to drive and own the change process.</li>
<li>Leveraging congressional support and policy-making for defense initiatives.</li>
<li>The critical role of transparency and accountability in defense spending and reforms.</li>
</ol>
</section>
<section id="quotes-12" class="level3">
<h3 class="anchored" data-anchor-id="quotes-12">Quotes</h3>
<ol type="1">
<li>“The future can win inside our current system.”</li>
<li>“Air Force’s success in shifting to a new program.”</li>
<li>“Military modernization is more than just technological advancement.”</li>
<li>“The role of political strategy in military reforms.”</li>
<li>“Resilience and adaptability are key in modern warfare.”</li>
<li>“The challenge of overcoming bureaucratic inertia in the defense sector.”</li>
<li>“The importance of integrating new technologies into military strategy.”</li>
<li>“Defense industry needs to focus on effective solutions, not just technology.”</li>
<li>“Political maneuvering and lobbying are essential in defense reforms.”</li>
<li>“Competition drives innovation in the defense sector.”</li>
<li>“Private sector’s role in advancing military technology.”</li>
<li>“Cultural change is necessary for military modernization.”</li>
<li>“AI and autonomous systems as game-changers in defense.”</li>
<li>“Clarifying operational problems is crucial for effective military strategy.”</li>
<li>“Incentivizing efficiency and innovation in defense spending.”</li>
<li>“Transitioning from traditional to modern military capabilities.”</li>
<li>“Senior leadership must be at the forefront of defense reforms.”</li>
<li>“Congressional support is vital for successful defense initiatives.”</li>
<li>“Transparency and accountability in defense reforms are essential.”</li>
<li>“Creating incentives for a diversified defense industrial base.”</li>
</ol>
</section>
<section id="facts-12" class="level3">
<h3 class="anchored" data-anchor-id="facts-12">Facts</h3>
<ol type="1">
<li>The JSTARS program was revised to adapt to modern warfare requirements.</li>
<li>Traditional military platforms are becoming increasingly obsolete.</li>
<li>Political and economic interests often hinder military modernization efforts.</li>
<li>Emerging technologies like AI and robotics are reshaping military capabilities.</li>
<li>Bureaucratic inertia poses significant challenges to defense reforms.</li>
<li>Private sector involvement is crucial in developing advanced military technologies.</li>
<li>Clear and specific problem definitions are essential for effective military strategy.</li>
<li>Transitioning from legacy systems requires strategic planning and execution.</li>
<li>The defense industry is moving towards more integrated and resilient systems.</li>
<li>Congressional support and policy-making play a crucial role in defense initiatives.</li>
<li>The defense industry’s competitiveness fosters innovation and efficiency.</li>
<li>Transparency and accountability are vital in defense spending and reforms.</li>
<li>The U.S. military faces</li>
</ol>
<p>cultural challenges in adapting to new technologies. 14. Senior leadership is key in driving and implementing defense reforms. 15. Incentives in defense spending impact the development of new capabilities.</p>
</section>
<section id="recommendations-12" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-12">Recommendations</h3>
<ol type="1">
<li>Prioritize technological agility and adaptability in military systems.</li>
<li>Focus on integrating modern technologies into military strategies.</li>
<li>Overcome bureaucratic and cultural barriers in the defense sector.</li>
<li>Foster innovation and competition within the defense industry.</li>
<li>Collaborate with the private sector for advanced military technology development.</li>
<li>Ensure transparency and accountability in defense spending and reforms.</li>
<li>Develop clear and specific operational problem definitions for military strategy.</li>
<li>Strategically plan the transition from legacy to modern military systems.</li>
<li>Leverage congressional support for defense initiatives and reforms.</li>
<li>Restructure incentives in defense spending to prioritize efficiency and innovation.</li>
</ol>
</section>
</section>
<section id="conclusion" class="level1">
<h1>Conclusion</h1>
<p>In the conclusion, the author reflects on personal experiences with John McCain and the state of U.S. national defense. Brose expresses frustration over political divisiveness and bureaucratic inertia hindering defense reforms. He emphasizes the need for imaginative solutions to modernize America’s defense strategy in the face of growing challenges, particularly from technological advancements and geopolitical shifts.</p>
<section id="ideas-13" class="level3">
<h3 class="anchored" data-anchor-id="ideas-13">Ideas</h3>
<ol type="1">
<li>The importance of imaginative thinking in addressing national defense challenges.</li>
<li>Reflections on personal experiences with John McCain highlight the need for leadership in defense.</li>
<li>The impact of political divisiveness on America’s ability to adapt to new defense realities.</li>
<li>The role of bureaucracy in stifling necessary defense reforms.</li>
<li>Recognition of the U.S.’s strategic advantages, like technology and dedicated personnel.</li>
<li>The challenge of shifting from a traditional defense mindset to a more modern approach.</li>
<li>The potential of new technologies to transform national defense.</li>
<li>The necessity of overcoming internal political and bureaucratic barriers for effective change.</li>
<li>Acknowledgment of the urgency and magnitude of the national defense crisis.</li>
<li>The danger of complacency and resistance to change in the defense sector.</li>
<li>The impact of America’s historical dominance on its current defense posture.</li>
<li>The need for proactive change to maintain national security and global standing.</li>
<li>The risks associated with America’s failure to adapt to the changing nature of warfare.</li>
<li>The critical need for a collective, serious approach to national defense issues.</li>
<li>The potential consequences of continued inaction and lack of serious reform in defense.</li>
</ol>
</section>
<section id="quotes-13" class="level3">
<h3 class="anchored" data-anchor-id="quotes-13">Quotes</h3>
<ol type="1">
<li>“A failure of imagination.”</li>
<li>“I know things can be different, and I want them to be different.”</li>
<li>“Political divisiveness and bureaucratic inertia are harming our ability to prepare for the future.”</li>
<li>“The future of national defense requires more than just technological advancement; it requires a shift in mindset.”</li>
<li>“The exceptional period of history from which we are emerging casts a long shadow over our imagination.”</li>
<li>“Our failure to adapt will not stop others from doing so.”</li>
<li>“If America does not change itself, change will still happen.”</li>
<li>“Revolutionary change in military affairs will primarily benefit others if we do not lead it.”</li>
<li>“We could have prevented, shaped for our benefit, and should have been able to imagine.”</li>
<li>“Hope is not a strategy.”</li>
<li>“The responsibility for defending America lies with us, and time is running out.”</li>
<li>“We have every advantage to address our national defense challenges.”</li>
<li>“Our old position of unrivaled dominance is influencing our current defense strategies.”</li>
<li>“Change will happen to us, rather than being something we control, if we fail to adapt.”</li>
<li>“Living at the mercy of our rivals is the price of failing to imagine and adapt.”</li>
</ol>
</section>
<section id="facts-13" class="level3">
<h3 class="anchored" data-anchor-id="facts-13">Facts</h3>
<ol type="1">
<li>Political divisiveness is a significant obstacle to U.S. defense modernization.</li>
<li>The U.S. faces a national defense crisis due to a lack of serious reform efforts.</li>
<li>Bureaucratic inertia is a major challenge in implementing defense strategies.</li>
<li>Technological advancements are rapidly transforming the landscape of national defense.</li>
<li>America’s historical position of dominance affects its current defense strategies.</li>
<li>The U.S. risks losing its global standing due to a failure to adapt to new defense realities.</li>
<li>Emerging threats and technologies necessitate a reimagining of national defense.</li>
<li>Internal political and bureaucratic struggles hinder effective defense changes.</li>
<li>The potential consequences of inaction in defense are significant and far-reaching.</li>
<li>The U.S. possesses strategic advantages like advanced technology and dedicated personnel.</li>
</ol>
</section>
<section id="recommendations-13" class="level3">
<h3 class="anchored" data-anchor-id="recommendations-13">Recommendations</h3>
<ol type="1">
<li>Foster imaginative and forward-thinking approaches in national defense strategy.</li>
<li>Address political divisiveness to enable effective defense reforms.</li>
<li>Overcome bureaucratic inertia for successful implementation of new strategies.</li>
<li>Embrace technological advancements to transform defense capabilities.</li>
<li>Recognize and adapt to the changing nature of global threats and warfare.</li>
<li>Encourage leadership that drives proactive and effective defense reforms.</li>
<li>Prioritize long-term strategic planning in national defense.</li>
<li>Promote collaboration and innovation within the defense sector.</li>
<li>Ensure accountability and transparency in defense decision-making processes.</li>
<li>Urgently address the need for defense reforms in the face of global shifts.</li>
</ol>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>history</category>
  <guid>christianjmills.com/posts/the-kill-chain-book-notes/index.html</guid>
  <pubDate>Mon, 20 Nov 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Real-Time Object Tracking with YOLOX and ByteTrack</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/byte-track/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/pytorch-train-object-detector-yolox-series.html"><strong>Training YOLOX Models for Real-Time Object Detection in PyTorch</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading the Checkpoint Data</li>
<li>Defining Utility Functions</li>
<li>Tracking Objects in Videos</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on real-time object detection with YOLOX! Previously, we <a href="../">fine-tuned a YOLOX</a> model in PyTorch to detect hand signs and <a href="../onnx-export">exported it to ONNX</a>. This tutorial combines our YOLOX model with the <a href="https://arxiv.org/abs/2110.06864">ByteTrack</a> object tracker to track objects continuously across video frames.</p>
<p>Tracking objects over time unlocks a wide range of potential applications. With our hand-sign detector, we could implement gesture-based controls to control devices and create interactive gaming and multimedia experiences. Beyond our specific model, object tracking has applications in everything from sports analysis to wildlife monitoring.</p>
<p>By the end of this tutorial, you will understand how to combine a YOLOX object detection model with ByteTrack, enabling you to effectively track hand signs or other objects across consecutive video frames.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../onnx-export/">Exporting YOLOX Models from PyTorch to ONNX</a></li>
</ul>
</div>
</div>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/pytorch-yolox-object-tracking-onnx-byte-track.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/pytorch-yolox-object-tracking-onnx-byte-track-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>We need to add a couple of new libraries to our <a href="../#setting-up-your-python-environment">Python environment</a>. We will use <a href="https://opencv.org/">OpenCV</a> to read and write video files. I also made a package with a standalone implementation of ByteTrack. Make sure to install <code>onnx</code> and <code>onnxruntime</code> if you did not follow the previous tutorial.</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>onnx</code></td>
<td>This package provides a Python API for working with ONNX models. (<a href="https://pypi.org/project/onnx/">link</a>)</td>
</tr>
<tr class="even">
<td><code>onnxruntime</code></td>
<td>ONNX Runtime is a runtime accelerator for machine learning models. (<a href="https://onnxruntime.ai/">link</a>)</td>
</tr>
<tr class="odd">
<td><code>opencv-python</code></td>
<td>Wrapper package for <a href="https://opencv.org/">OpenCV</a> python bindings. (<a href="">link</a>)</td>
</tr>
<tr class="even">
<td><code>cjm-byte-track</code></td>
<td>A standalone Python implementation of the <a href="https://arxiv.org/abs/2110.06864">ByteTrack</a> multi-object tracker based on the official implementation. (<a href="https://github.com/cj-mills/cjm-byte-track">link</a>)</td>
</tr>
</tbody>
</table>
<p>Run the following command to install these additional libraries:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install packages</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install onnx onnxruntime opencv-python cjm_byte_track</span></code></pre></div>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>With our environment updated, we can dive into the code. First, we will import the necessary Python dependencies into our Jupyter Notebook.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> dataclasses <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> dataclass</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> List</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ByteTrack package</span></span>
<span id="cb2-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_byte_track.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BYTETracker</span>
<span id="cb2-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_byte_track.matching <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> match_detections_with_tracks</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb2-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file</span>
<span id="cb2-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img</span>
<span id="cb2-16"></span>
<span id="cb2-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import OpenCV</span></span>
<span id="cb2-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cv2</span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy</span></span>
<span id="cb2-21"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb2-24"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb2-27"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, ImageDraw, ImageFont</span>
<span id="cb2-28"></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ONNX dependencies</span></span>
<span id="cb2-30"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnx <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the onnx module</span></span>
<span id="cb2-31"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnxruntime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ort <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the ONNX Runtime</span></span>
<span id="cb2-32"></span>
<span id="cb2-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import tqdm for progress bar</span></span>
<span id="cb2-34"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm.auto <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span></code></pre></div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>In this section, we will set the folder locations for our project and the directory with the ONNX model and JSON colormap file. We should also ensure we have a font file for annotating images.</p>
<section id="set-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="set-the-directory-paths">Set the Directory Paths</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb3-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pytorch-yolox-object-detector"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb3-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb3-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb3-11">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2023-08-17_16-14-43"</span>)</span>
<span id="cb3-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># checkpoint_dir = Path(project_dir/f"pretrained-coco")</span></span>
<span id="cb3-13"></span>
<span id="cb3-14">pd.Series({</span>
<span id="cb3-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir,</span>
<span id="cb3-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb3-17">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_125b0">
<thead>
</thead>
<tbody>
<tr>
<th id="T_125b0_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_125b0_row0_col0" class="data row0 col0">
pytorch-yolox-object-detector
</td>
</tr>
<tr>
<th id="T_125b0_level0_row1" class="row_heading level0 row1">
Checkpoint Directory:
</th>
<td id="T_125b0_row1_col0" class="data row1 col0">
pytorch-yolox-object-detector/2023-08-17_16-14-43
</td>
</tr>
</tbody>

</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="I made an ONNX model  available on Hugging Face Hub with a colormap file in the repository linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
I made an ONNX model available on Hugging Face Hub with a colormap file in the repository linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://huggingface.co/cj-mills/yolox-hagrid-onnx/tree/main">cj-mills/yolox-hagrid-onnx</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
<section id="download-a-font-file" class="level3">
<h3 class="anchored" data-anchor-id="download-a-font-file">Download a Font File</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the font file</span></span>
<span id="cb4-2">font_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KFOlCnqEu92Fr1MmEU9vAw.ttf'</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the font file</span></span>
<span id="cb4-5">download_file(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://fonts.gstatic.com/s/roboto/v30/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>font_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span></code></pre></div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the colormap and set the max stride value and input dimension slice.</p>
<section id="load-the-colormap" class="level3">
<h3 class="anchored" data-anchor-id="load-the-colormap">Load the Colormap</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The colormap path</span></span>
<span id="cb5-2">colormap_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*colormap.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON colormap data</span></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(colormap_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb5-6">        colormap_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the JSON data to a dictionary        </span></span>
<span id="cb5-9">colormap_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]: item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormap_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]}</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the class names from the colormap</span></span>
<span id="cb5-12">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(colormap_dict.keys())</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of the colormap in integer format</span></span>
<span id="cb5-15">int_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> color) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormap_dict.values()]</span></code></pre></div>
</section>
<section id="set-the-preprocessing-and-post-processing-parameters" class="level3">
<h3 class="anchored" data-anchor-id="set-the-preprocessing-and-post-processing-parameters">Set the Preprocessing and Post-Processing Parameters</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">max_stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span>
<span id="cb6-2">input_dim_slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">slice</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span></code></pre></div>
</section>
</section>
<section id="defining-utility-functions" class="level2">
<h2 class="anchored" data-anchor-id="defining-utility-functions">Defining Utility Functions</h2>
<p>Next, we will define some utility functions for preparing the input data and processing the model output.</p>
<section id="define-a-function-to-prepare-images-for-inference" class="level3">
<h3 class="anchored" data-anchor-id="define-a-function-to-prepare-images-for-inference">Define a Function to Prepare Images for Inference</h3>
<p>OpenCV uses the BGR (Blue, Green, Red) color format for images, so we must change the current video frame to RGB before performing the <a href="../#preparing-input-data">standard preprocessing steps</a> for the YOLOX model.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> prepare_image_for_inference(frame:np.ndarray, target_sz:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, max_stride:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>):</span>
<span id="cb7-2"></span>
<span id="cb7-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Prepares an image for inference by performing a series of preprocessing steps.</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Steps:</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    1. Converts a BGR image to RGB.</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    2. Resizes the image to a target size without cropping, considering a given divisor.</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    3. Calculates input dimensions as multiples of the max stride.</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    4. Calculates offsets based on the resized image dimensions and input dimensions.</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    5. Computes the scale between the original and resized image.</span></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    6. Crops the resized image based on calculated input dimensions.</span></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - frame (numpy.ndarray): The input image in BGR format.</span></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - target_sz (int): The target minimum size for resizing the image.</span></span>
<span id="cb7-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - max_stride (int): The maximum stride to be considered for calculating input dimensions.</span></span>
<span id="cb7-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    tuple: </span></span>
<span id="cb7-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - rgb_img (PIL.Image): The converted RGB image.</span></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - input_dims (list of int): Dimensions of the image that are multiples of max_stride.</span></span>
<span id="cb7-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - offsets (numpy.ndarray): Offsets from the resized image dimensions to the input dimensions.</span></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - min_img_scale (float): Scale factor between the original and resized image.</span></span>
<span id="cb7-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - input_img (PIL.Image): Cropped image based on the calculated input dimensions.</span></span>
<span id="cb7-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb7-27"></span>
<span id="cb7-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the BGR image to RGB</span></span>
<span id="cb7-29">    rgb_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))</span>
<span id="cb7-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize image without cropping to multiple of the max stride</span></span>
<span id="cb7-31">    resized_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(rgb_img, target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>target_sz, divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-32">    </span>
<span id="cb7-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculating the input dimensions that multiples of the max stride</span></span>
<span id="cb7-34">    input_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> max_stride <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> resized_img.size]</span>
<span id="cb7-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the offsets from the resized image dimensions to the input dimensions</span></span>
<span id="cb7-36">    offsets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (np.array(resized_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> input_dims) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb7-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the scale between the source image and the resized image</span></span>
<span id="cb7-38">    min_img_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(rgb_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(resized_img.size)</span>
<span id="cb7-39">    </span>
<span id="cb7-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crop the resized image to the input dimensions</span></span>
<span id="cb7-41">    input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resized_img.crop(box<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>offsets, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>resized_img.size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offsets])</span>
<span id="cb7-42">    </span>
<span id="cb7-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> rgb_img, input_dims, offsets, min_img_scale, input_img</span></code></pre></div>
</section>
<section id="define-functions-to-process-yolox-output" class="level3">
<h3 class="anchored" data-anchor-id="define-functions-to-process-yolox-output">Define Functions to Process YOLOX Output</h3>
<p>We can use the same <a href="../onnx-export/#define-utility-functions">utility functions</a> defined in the previous tutorial on exporting the model to ONNX.</p>
<section id="define-a-function-to-generate-the-output-grids" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-generate-the-output-grids">Define a function to generate the output grids</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> generate_output_grids_np(height, width, strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>]):</span>
<span id="cb8-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate a numpy array containing grid coordinates and strides for a given height and width.</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb8-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        height (int): The height of the image.</span></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        width (int): The width of the image.</span></span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        np.ndarray: A numpy array containing grid coordinates and strides.</span></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb8-12"></span>
<span id="cb8-13">    all_coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb8-14"></span>
<span id="cb8-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> stride <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> strides:</span>
<span id="cb8-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the grid height and width</span></span>
<span id="cb8-17">        grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb8-18">        grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb8-19"></span>
<span id="cb8-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate grid coordinates</span></span>
<span id="cb8-21">        g1, g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(np.arange(grid_height), np.arange(grid_width), indexing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij'</span>)</span>
<span id="cb8-22"></span>
<span id="cb8-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an array of strides</span></span>
<span id="cb8-24">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((grid_height, grid_width), stride)</span>
<span id="cb8-25"></span>
<span id="cb8-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stack the coordinates along with the stride</span></span>
<span id="cb8-27">        coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.stack((g0.flatten(), g1.flatten(), s.flatten()), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-28"></span>
<span id="cb8-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append to the list</span></span>
<span id="cb8-30">        all_coordinates.append(coordinates)</span>
<span id="cb8-31"></span>
<span id="cb8-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate all arrays in the list along the first dimension</span></span>
<span id="cb8-33">    output_grids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(all_coordinates, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb8-34"></span>
<span id="cb8-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> output_grids</span></code></pre></div>
</section>
<section id="define-a-function-to-calculate-bounding-boxes-and-probabilities" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-calculate-bounding-boxes-and-probabilities">Define a function to calculate bounding boxes and probabilities</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calculate_boxes_and_probs(model_output:np.ndarray, output_grids:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb9-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculate the bounding boxes and their probabilities.</span></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    model_output (numpy.ndarray): The output of the model.</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_grids (numpy.ndarray): The output grids.</span></span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    numpy.ndarray: The array containing the bounding box coordinates, class labels, and maximum probabilities.</span></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb9-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the bounding box coordinates</span></span>
<span id="cb9-13">    box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (model_output[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_grids[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb9-14">    box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb9-15"></span>
<span id="cb9-16">    x0, y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> np.split(box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb9-17">    w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> np.split(box_sizes, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb9-18"></span>
<span id="cb9-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the probabilities for each class</span></span>
<span id="cb9-20">    box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb9-21">    box_cls_scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:]</span>
<span id="cb9-22">    box_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(box_objectness, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_scores</span>
<span id="cb9-23"></span>
<span id="cb9-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the maximum probability and corresponding class for each proposal</span></span>
<span id="cb9-25">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-26">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-27"></span>
<span id="cb9-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> np.array([x0, y0, w, h, labels, max_probs]).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
</section>
<section id="define-a-function-to-extract-object-proposals-from-the-raw-model-output" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-extract-object-proposals-from-the-raw-model-output">Define a function to extract object proposals from the raw model output</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> process_outputs(outputs:np.ndarray, input_dims:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>, bbox_conf_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>):</span>
<span id="cb10-2"></span>
<span id="cb10-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Process the model outputs to generate bounding box proposals filtered by confidence threshold.</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - outputs (numpy.ndarray): The raw output from the model, which will be processed to calculate boxes and probabilities.</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - input_dims (tuple of int): Dimensions (height, width) of the input image to the model.</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - bbox_conf_thresh (float): Threshold for the bounding box confidence/probability. Bounding boxes with a confidence</span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                score below this threshold will be discarded.</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb10-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - numpy.array: An array of proposals where each proposal is an array containing bounding box coordinates</span></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                   and its associated probability, sorted in descending order by probability.</span></span>
<span id="cb10-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb10-16"></span>
<span id="cb10-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the model output</span></span>
<span id="cb10-18">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_boxes_and_probs(outputs, generate_output_grids_np(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>input_dims))</span>
<span id="cb10-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the proposals based on the confidence threshold</span></span>
<span id="cb10-20">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb10-21">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bbox_conf_thresh</span>
<span id="cb10-22">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[mask]</span>
<span id="cb10-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the proposals by probability in descending order</span></span>
<span id="cb10-24">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposals[..., <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].argsort()][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb10-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> proposals</span></code></pre></div>
</section>
<section id="define-a-function-to-calculate-the-intersection-over-union" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-calculate-the-intersection-over-union">Define a function to calculate the intersection-over-union</h4>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> calc_iou(proposals:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb11-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculates the Intersection over Union (IoU) for all pairs of bounding boxes (x,y,w,h) in 'proposals'.</span></span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The IoU is a measure of overlap between two bounding boxes. It is calculated as the area of</span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    intersection divided by the area of union of the two boxes.</span></span>
<span id="cb11-7"></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    proposals (2D np.array): A NumPy array of bounding boxes, where each box is an array [x, y, width, height].</span></span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (2D np.array): The IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb11-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb11-14"></span>
<span id="cb11-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate coordinates for the intersection rectangles</span></span>
<span id="cb11-16">    x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb11-17">    y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb11-18">    x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb11-19">    y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb11-20">    </span>
<span id="cb11-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate intersection areas</span></span>
<span id="cb11-22">    intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.maximum(y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb11-23"></span>
<span id="cb11-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate union areas</span></span>
<span id="cb11-25">    areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb11-26">    unions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> areas[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> intersections</span>
<span id="cb11-27"></span>
<span id="cb11-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate IoUs</span></span>
<span id="cb11-29">    iou <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> unions</span>
<span id="cb11-30"></span>
<span id="cb11-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the iou matrix</span></span>
<span id="cb11-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> iou</span></code></pre></div>
</section>
<section id="define-a-function-to-filter-bounding-box-proposals-using-non-maximum-suppression" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-filter-bounding-box-proposals-using-non-maximum-suppression">Define a function to filter bounding box proposals using Non-Maximum Suppression</h4>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> nms_sorted_boxes(iou:np.ndarray, iou_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb12-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Applies non-maximum suppression (NMS) to sorted bounding boxes.</span></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It suppresses boxes that have high overlap (as defined by the IoU threshold) with a box that </span></span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    has a higher score.</span></span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (np.ndarray): An IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou_thresh (float): The IoU threshold for suppression. Boxes with IoU &gt; iou_thresh are suppressed.</span></span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    keep (np.ndarray): The indices of the boxes to keep after applying NMS.</span></span>
<span id="cb12-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb12-15"></span>
<span id="cb12-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a boolean mask to keep track of boxes</span></span>
<span id="cb12-17">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>)</span>
<span id="cb12-18"></span>
<span id="cb12-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression</span></span>
<span id="cb12-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb12-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> mask[i]:</span>
<span id="cb12-22">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress boxes with higher index and IoU &gt; threshold</span></span>
<span id="cb12-23">            mask[(iou[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iou_thresh) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> i)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb12-24"></span>
<span id="cb12-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the indices of the boxes to keep</span></span>
<span id="cb12-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[mask]</span></code></pre></div>
</section>
</section>
<section id="define-a-function-to-annotate-images-with-bounding-boxes" class="level3">
<h3 class="anchored" data-anchor-id="define-a-function-to-annotate-images-with-bounding-boxes">Define a Function to Annotate Images with Bounding Boxes</h3>
<p>Likewise, we can use the same <a href="../onnx-export/#define-a-function-to-annotate-an-image-with-bounding-boxes">function for annotating images</a> with bounding boxes with PIL.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_bboxes_pil(image, boxes, labels, colors, font, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, font_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb13-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Annotates an image with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - image (PIL.Image): The input image on which annotations will be drawn.</span></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - boxes (list of tuples): A list of bounding box coordinates where each tuple is (x, y, w, h).</span></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - labels (list of str): A list of labels corresponding to each bounding box.</span></span>
<span id="cb13-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - colors (list of str): A list of colors for each bounding box and its corresponding label.</span></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - font (str): Path to the font file to be used for displaying the labels.</span></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - width (int, optional): Width of the bounding box lines. Defaults to 2.</span></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - font_size (int, optional): Size of the font for the labels. Defaults to 18.</span></span>
<span id="cb13-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - probs (list of float, optional): A list of probability scores corresponding to each label. Defaults to None.</span></span>
<span id="cb13-14"></span>
<span id="cb13-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb13-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - annotated_image (PIL.Image): The image annotated with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb13-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb13-18">    </span>
<span id="cb13-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a reference diagonal</span></span>
<span id="cb13-20">    REFERENCE_DIAGONAL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb13-21">    </span>
<span id="cb13-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale the font size using the hypotenuse of the image</span></span>
<span id="cb13-23">    font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.hypot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>image.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> REFERENCE_DIAGONAL))</span>
<span id="cb13-24">    </span>
<span id="cb13-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add probability scores to labels if provided</span></span>
<span id="cb13-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> probs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb13-27">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> label, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(labels, probs)]</span>
<span id="cb13-28"></span>
<span id="cb13-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an ImageDraw object for drawing on the image</span></span>
<span id="cb13-30">    draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(image)</span>
<span id="cb13-31"></span>
<span id="cb13-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the font file (outside the loop)</span></span>
<span id="cb13-33">    fnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageFont.truetype(font, font_size)</span>
<span id="cb13-34">    </span>
<span id="cb13-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the mean color value for each color</span></span>
<span id="cb13-36">    mean_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [np.mean(np.array(color)) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colors]</span>
<span id="cb13-37"></span>
<span id="cb13-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through the bounding boxes, labels, and colors</span></span>
<span id="cb13-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> box, label, color, mean_color <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(boxes, labels, colors, mean_colors):</span>
<span id="cb13-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the bounding box coordinates</span></span>
<span id="cb13-41">        x, y, w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box</span>
<span id="cb13-42"></span>
<span id="cb13-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the bounding box on the image</span></span>
<span id="cb13-44">        draw.rectangle([x, y, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>w, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>h], outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb13-45">        </span>
<span id="cb13-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the size of the label text box</span></span>
<span id="cb13-47">        label_w, label_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw.textbbox(xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label, font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb13-48">        </span>
<span id="cb13-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label rectangle on the image</span></span>
<span id="cb13-50">        draw.rectangle([x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>label_w, y], outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color)</span>
<span id="cb13-51"></span>
<span id="cb13-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label text on the image</span></span>
<span id="cb13-53">        font_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> mean_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">127.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span></span>
<span id="cb13-54">        draw.multiline_text((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h), label, font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>font_color)</span>
<span id="cb13-55">        </span>
<span id="cb13-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> image</span></code></pre></div>
<p>That takes care of the required utility functions. In the next section, we will use our ONNX model with ByteTrack to track objects in a video.</p>
</section>
</section>
<section id="tracking-objects-in-videos" class="level2">
<h2 class="anchored" data-anchor-id="tracking-objects-in-videos">Tracking Objects in Videos</h2>
<p>We will first initialize an inference session with our ONNX model.</p>
<section id="create-an-inference-session" class="level3">
<h3 class="anchored" data-anchor-id="create-an-inference-session">Create an Inference Session</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a filename for the ONNX model</span></span>
<span id="cb14-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.onnx'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model and create an InferenceSession</span></span>
<span id="cb15-2">providers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb15-3">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CPUExecutionProvider'</span>,</span>
<span id="cb15-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># "CUDAExecutionProvider",</span></span>
<span id="cb15-5">]</span>
<span id="cb15-6">sess_options <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.SessionOptions()</span>
<span id="cb15-7">session <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.InferenceSession(onnx_file_path, sess_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sess_options, providers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>providers)</span></code></pre></div>
</section>
<section id="select-a-test-video" class="level3">
<h3 class="anchored" data-anchor-id="select-a-test-video">Select a Test Video</h3>
<p>Next, we need a video to test the object tracking performance. We can use this one from <a href="https://www.pexels.com/video/a-woman-giving-a-thumbs-up-10373924/">Pexels</a>, a free stock photo &amp; video site.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Specify the directory where videos are or will be stored.</span></span>
<span id="cb16-2">video_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./videos/"</span></span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name of the test video to be used.</span></span>
<span id="cb16-5">test_video_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pexels-rodnae-productions-10373924.mp4"</span></span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the full path for the video using the directory and video name.</span></span>
<span id="cb16-8">video_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>video_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>test_video_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-9"></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the URL for the test video stored on Huggingface's server.</span></span>
<span id="cb16-11">test_video_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/cj-mills/pexels-object-tracking-test-videos/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_video_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the video file from the specified URL to the local video directory.</span></span>
<span id="cb16-14">download_file(test_video_url, video_dir, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb16-15"></span>
<span id="cb16-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the video using the Video function (assuming an appropriate library/module is imported).</span></span>
<span id="cb16-17">Video(video_path)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./video/pexels-rodnae-productions-10373924.mp4" class="img-fluid" controls=""><a href="./video/pexels-rodnae-productions-10373924.mp4">Video</a></video></p>
</figure>
</div>
</section>
<section id="initialize-a-videocapture-object" class="level3">
<h3 class="anchored" data-anchor-id="initialize-a-videocapture-object">Initialize a <code>VideoCapture</code> Object</h3>
<p>Now that we have a test video, we can use OpenCV’s <a href="https://docs.opencv.org/4.x/d8/dfe/classcv_1_1VideoCapture.html"><code>VideoCapture</code></a> class to iterate through it and access relevant metadata.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the video file located at 'video_path' using OpenCV</span></span>
<span id="cb17-2">video_capture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.VideoCapture(video_path)</span>
<span id="cb17-3"></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the frame width of the video</span></span>
<span id="cb17-5">frame_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(video_capture.get(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the frame height of the video</span></span>
<span id="cb17-7">frame_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(video_capture.get(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the frames per second (FPS) of the video</span></span>
<span id="cb17-9">frame_fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(video_capture.get(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the total number of frames in the video</span></span>
<span id="cb17-11">frames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(video_capture.get(cv2.CAP_PROP_FRAME_COUNT))</span>
<span id="cb17-12"></span>
<span id="cb17-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a pandas Series containing video metadata and convert it to a DataFrame</span></span>
<span id="cb17-14">pd.Series({</span>
<span id="cb17-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frame Width:"</span>: frame_width,</span>
<span id="cb17-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frame Height:"</span>: frame_height,</span>
<span id="cb17-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frame FPS:"</span>: frame_fps,</span>
<span id="cb17-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Frames:"</span>: frames</span>
<span id="cb17-19">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_b9b06">
<thead>
</thead>
<tbody>
<tr>
<th id="T_b9b06_level0_row0" class="row_heading level0 row0">
Frame Width:
</th>
<td id="T_b9b06_row0_col0" class="data row0 col0">
720
</td>
</tr>
<tr>
<th id="T_b9b06_level0_row1" class="row_heading level0 row1">
Frame Height:
</th>
<td id="T_b9b06_row1_col0" class="data row1 col0">
1280
</td>
</tr>
<tr>
<th id="T_b9b06_level0_row2" class="row_heading level0 row2">
Frame FPS:
</th>
<td id="T_b9b06_row2_col0" class="data row2 col0">
29
</td>
</tr>
<tr>
<th id="T_b9b06_level0_row3" class="row_heading level0 row3">
Frames:
</th>
<td id="T_b9b06_row3_col0" class="data row3 col0">
226
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="initialize-a-videowriter-object" class="level3">
<h3 class="anchored" data-anchor-id="initialize-a-videowriter-object">Initialize a <code>VideoWriter</code> Object</h3>
<p>We will use OpenCV’s <a href="https://docs.opencv.org/3.4/dd/d9e/classcv_1_1VideoWriter.html"><code>VideoWriter</code></a> class to save the annotated version of our test video.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the output video path </span></span>
<span id="cb18-2">video_out_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(video_dir)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>Path(video_path)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-byte-track.mp4"</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a VideoWriter object for video writing.</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. video_out_path: Specifies the name of the output video file.</span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. cv2.VideoWriter_fourcc(*'mp4v'): Specifies the codec for the output video. 'mp4v' is used for .mp4 format.</span></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. frame_fps: Specifies the frames per second for the output video.</span></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. (frame_width, frame_height): Specifies the width and height of the frames in the output video.</span></span>
<span id="cb18-9">video_writer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.VideoWriter(video_out_path, cv2.VideoWriter_fourcc(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mp4v'</span>), frame_fps, (frame_width, frame_height))</span></code></pre></div>
</section>
<section id="define-inference-parameters" class="level3">
<h3 class="anchored" data-anchor-id="define-inference-parameters">Define Inference Parameters</h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">test_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span></span>
<span id="cb19-2">bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb19-3">iou_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span></span></code></pre></div>
</section>
<section id="detect-track-and-annotate-objects-in-video-frames" class="level3">
<h3 class="anchored" data-anchor-id="detect-track-and-annotate-objects-in-video-frames">Detect, Track, and Annotate Objects in Video Frames</h3>
<p>In this section, we’ll iterate through each frame of our test video, detect objects, track those objects across video frames, and then annotate the video frames with the corresponding bounding boxes and tracking IDs.</p>
<p>We start by initializing a ByteTracker object. Then, we can iterate over the video frames using our VideoCapture object. For each frame, we pass it through the <code>prepare_image_for_inference</code> function to apply the preprocessing steps. We then convert the image to a NumPy array and scale the values to the range <code>[0,1]</code>.</p>
<p>Next, we pass the input to our YOLOX model to get the raw prediction data. After that, we can process the raw output to extract the bounding box predictions. We then pass the bounding box predictions to the ByteTracker object so it can update its current object tracks.</p>
<p>Once we match the updated track data with the current bounding box predictions, we can annotate the current frame with bounding boxes and associated track IDs.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a ByteTracker object</span></span>
<span id="cb20-2">tracker <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BYTETracker(track_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, track_buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, match_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, frame_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>frame_fps)</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> tqdm(total<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>frames, desc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processing frames"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pbar:</span>
<span id="cb20-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> video_capture.isOpened():</span>
<span id="cb20-6">        ret, frame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> video_capture.read()</span>
<span id="cb20-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> ret:</span>
<span id="cb20-8">            </span>
<span id="cb20-9">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare an input image for inference</span></span>
<span id="cb20-10">            rgb_img, input_dims, offsets, min_img_scale, input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare_image_for_inference(frame, test_sz, max_stride)</span>
<span id="cb20-11">                        </span>
<span id="cb20-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the existing input image to NumPy format</span></span>
<span id="cb20-13">            input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb20-14"></span>
<span id="cb20-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start performance counter</span></span>
<span id="cb20-16">            start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb20-17">                        </span>
<span id="cb20-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb20-19">            outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb20-20"></span>
<span id="cb20-21">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the model output</span></span>
<span id="cb20-22">            proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_outputs(outputs, input_tensor_np.shape[input_dim_slice], bbox_conf_thresh)</span>
<span id="cb20-23">            </span>
<span id="cb20-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression to the proposals with the specified threshold</span></span>
<span id="cb20-25">            proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nms_sorted_boxes(calc_iou(proposals[:, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), iou_thresh)</span>
<span id="cb20-26">            proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposal_indices]</span>
<span id="cb20-27">            </span>
<span id="cb20-28">            bbox_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (proposals[:,:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>offsets, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>min_img_scale</span>
<span id="cb20-29">            label_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [class_names[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(idx)] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb20-30">            probs_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb20-31"></span>
<span id="cb20-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update tracker with detections.</span></span>
<span id="cb20-33">            track_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(bbox_list)</span>
<span id="cb20-34"></span>
<span id="cb20-35">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to tlbr format</span></span>
<span id="cb20-36">            tlbr_boxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bbox_list.copy()</span>
<span id="cb20-37">            tlbr_boxes[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tlbr_boxes[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb20-38"></span>
<span id="cb20-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update tracker with detections</span></span>
<span id="cb20-40">            tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tracker.update(</span>
<span id="cb20-41">                output_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.concatenate([tlbr_boxes, probs_list[:, np.newaxis]], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb20-42">                img_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rgb_img.size,</span>
<span id="cb20-43">                img_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rgb_img.size)</span>
<span id="cb20-44">            track_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> match_detections_with_tracks(tlbr_boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tlbr_boxes, track_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>track_ids, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tracks)</span>
<span id="cb20-45"></span>
<span id="cb20-46">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># End performance counter</span></span>
<span id="cb20-47">            end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb20-48">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the combined FPS for object detection and tracking</span></span>
<span id="cb20-49">            fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time)</span>
<span id="cb20-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the frame rate in the progress bar</span></span>
<span id="cb20-51">            pbar.set_postfix(fps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fps)</span>
<span id="cb20-52"></span>
<span id="cb20-53">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter object detections based on tracking results</span></span>
<span id="cb20-54">            bbox_list, label_list, probs_list, track_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[(bbox, label, prob, track_id) </span>
<span id="cb20-55">                                                                 <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> bbox, label, prob, track_id </span>
<span id="cb20-56">                                                                 <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(bbox_list, label_list, probs_list, track_ids) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> track_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb20-57"></span>
<span id="cb20-58">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate the current frame with bounding boxes and tracking IDs</span></span>
<span id="cb20-59">            annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_bboxes_pil(</span>
<span id="cb20-60">                image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rgb_img, </span>
<span id="cb20-61">                boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bbox_list, </span>
<span id="cb20-62">                labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>track_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> track_id, label <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(track_ids, label_list)],</span>
<span id="cb20-63">                probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>probs_list,</span>
<span id="cb20-64">                colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[int_colors[class_names.index(i)] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> label_list],  </span>
<span id="cb20-65">                font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>font_file,</span>
<span id="cb20-66">            )</span>
<span id="cb20-67">            annotated_frame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.cvtColor(np.array(annotated_img), cv2.COLOR_RGB2BGR)</span>
<span id="cb20-68">            </span>
<span id="cb20-69">            video_writer.write(annotated_frame)</span>
<span id="cb20-70">            pbar.update(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb20-71">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb20-72">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span></span>
<span id="cb20-73">video_capture.release()</span>
<span id="cb20-74">video_writer.release()</span></code></pre></div>
<p>Finally, we can check the annotated video to see how the object tracker performed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./video/pexels-rodnae-productions-10373924-byte-track.mp4" class="img-fluid" controls=""><a href="./video/pexels-rodnae-productions-10373924-byte-track.mp4">Video</a></video></p>
</figure>
</div>
<p>The ByteTracker had no issue tracking the two hands throughout the video, as the track IDs remained the same for each hand.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>Don’t forget to download the the annotated video from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</li>
</ol>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial on object tracking with YOLOX and ByteTrack! With this knowledge, we have unlocked a new realm of potential applications for our YOLOX model.</p>
<p>Combining YOLOX’s robust detection capabilities with ByteTrack’s tracking efficiency gives you a powerful toolset to work on myriad projects, from video analysis to immersive augmented reality experiences.</p>
<p>As a follow-up project, consider integrating our hand sign detector with ByteTrack in an application for gesture-based controls or training a new YOLOX model for other domains. The potential applications of this powerful combination are vast, limited only by your imagination.</p>
<p>If you found this guide helpful, consider sharing it with others.</p>


</section>

 ]]></description>
  <category>onnx</category>
  <category>object-detection</category>
  <category>object-tracking</category>
  <category>yolox</category>
  <category>byte-track</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/byte-track/index.html</guid>
  <pubDate>Fri, 27 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Real-Time Object Detection in Unity with ONNX Runtime and DirectML</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/onnx-runtime-unity-series.html"><strong>ONNX Runtime in Unity</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Setting Up the Starter Project</li>
<li>Importing Plugin Assets</li>
<li>Installing Unity Package Dependencies</li>
<li>Making DirectML Accessible to the Editor</li>
<li>Importing Plugin Functions</li>
<li>Performing Inference with the Plugin</li>
<li>Setting Up the Demo Scene</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on creating plugins for the Unity game engine with ONNX Runtime! <a href="../">Previously</a>, we created a simple plugin for performing inference on RGB images in Visual Studio. This tutorial builds on that by showing how to integrate the plugin into a Unity project to perform real-time object detection.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post assumes <a href="https://unity.com/download">Unity</a> is present on your system.</p>
</div>
</div>
</section>
<section id="setting-up-the-starter-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-starter-project">Setting Up the Starter Project</h2>
<p>To keep the focus for this tutorial on integrating the ONNX Runtime plugin, I created a starter Unity project for us to build on. This project simplifies testing various computer vision models using sample images and live webcam feeds.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The starter project uses <a href="unityhub://2023.1.14f1/9492f7722ddd">Unity 2023.1.14</a>, but the latest LTS release should work fine.</p>
</div>
</div>
<section id="obtaining-the-starter-project" class="level3">
<h3 class="anchored" data-anchor-id="obtaining-the-starter-project">Obtaining the Starter Project</h3>
<p>The starter project is available on GitHub at the link below:</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-2d-cv-tutorial-starter">unity-2d-cv-tutorial-starter</a></li>
</ul>
<p>There are two main ways to obtain the project:</p>
<ol type="1">
<li><p><strong>Clone with Git</strong>: If you have <a href="https://git-scm.com/downloads">Git</a> installed, you can clone the repository directly to your local machine using the command below:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/cj-mills/unity-2d-cv-tutorial-starter.git</span></code></pre></div></li>
<li><p><strong>Download ZIP</strong>: Alternatively, on the GitHub repository page, you can choose the option to download the entire project as a ZIP file.</p></li>
</ol>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/github-repository-show-download-options.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="launching-the-starter-project-in-unity" class="level3">
<h3 class="anchored" data-anchor-id="launching-the-starter-project-in-unity">Launching the Starter Project in Unity</h3>
<section id="open-the-project" class="level4">
<h4 class="anchored" data-anchor-id="open-the-project">Open the Project</h4>
<p>Once you’ve secured a copy of the starter project, launch the Unity Editor and open the project.</p>
</section>
<section id="access-the-sample-scene" class="level4">
<h4 class="anchored" data-anchor-id="access-the-sample-scene">Access the Sample Scene</h4>
<p>Within the Unity Editor, navigate to the <code>Assets-&gt;Scenes</code> directory in the <a href="https://docs.unity3d.com/Manual/ProjectView.html">Project Window</a>. From there, double-click on the <code>SampleScene</code> to open it.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-sample-scene-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="preview-the-scene" class="level4">
<h4 class="anchored" data-anchor-id="preview-the-scene">Preview the Scene</h4>
<p>Press the <code>Play</code> button to enter Play mode. If everything works correctly, you should see something like the image below in the <a href="https://docs.unity3d.com/Manual/GameView.html">Game view</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-verify-2d-cv-starter-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="exit-play-mode" class="level4">
<h4 class="anchored" data-anchor-id="exit-play-mode">Exit Play Mode</h4>
<p>Once you’ve confirmed the sample scene is operational, click the <code>Play</code> button again to exit play mode. Our starter project is now ready, and we can proceed to integrate the ONNX Runtime plugin.</p>
</section>
</section>
</section>
<section id="importing-plugin-assets" class="level2">
<h2 class="anchored" data-anchor-id="importing-plugin-assets">Importing Plugin Assets</h2>
<p>Now that we’ve initialized our Unity project, the next step is to import the assets required for our ONNX Runtime plugin.</p>
<section id="setting-up-plugin-directories" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-plugin-directories">Setting Up Plugin Directories</h3>
<section id="creating-the-plugins-directory" class="level4">
<h4 class="anchored" data-anchor-id="creating-the-plugins-directory">Creating the <code>Plugins</code> Directory</h4>
<p>Within the Unity Editor, navigate to the Assets folder and create a new folder named <code>Plugins</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-create-plugins-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="adding-the-x86_64-directory" class="level4">
<h4 class="anchored" data-anchor-id="adding-the-x86_64-directory">Adding the <code>x86_64</code> Directory</h4>
<p>Inside the <code>Plugins</code> folder, create another folder titled <code>x86_64</code>. This folder will house the necessary DLL files for our plugin.</p>
</section>
</section>
<section id="importing-the-dll-files" class="level3">
<h3 class="anchored" data-anchor-id="importing-the-dll-files">Importing the DLL Files</h3>
<p>If you don’t have the DLL files from the previous tutorial, download them from the links below:</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-onnxruntime-inference-yolox-demo/raw/main/Assets/Plugins/x86_64/DirectML.dll">DirectML.dll</a></li>
<li><a href="https://github.com/cj-mills/unity-onnxruntime-inference-yolox-demo/raw/main/Assets/Plugins/x86_64/onnxruntime.dll">onnxruntime.dll</a></li>
<li><a href="https://github.com/cj-mills/unity-onnxruntime-inference-yolox-demo/raw/main/Assets/Plugins/x86_64/UnityONNXInferenceCVPlugin.dll">UnityONNXInferenceCVPlugin.dll</a></li>
</ul>
<p>After obtaining the DLL files, drag and drop them into the <code>x86_64</code> directory inside Unity.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-import-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Close and reopen your Unity project once you’ve imported the DLL files. This step ensures Unity recognizes and registers the new plugin files.</p>
</section>
<section id="importing-the-onnx-model-and-assets" class="level3">
<h3 class="anchored" data-anchor-id="importing-the-onnx-model-and-assets">Importing the ONNX Model and Assets</h3>
<section id="download-the-yolox-model-and-colormap" class="level4">
<h4 class="anchored" data-anchor-id="download-the-yolox-model-and-colormap">Download the YOLOX Model and Colormap</h4>
<p>For demonstration purposes, we’ll use a YOLOX Tiny model that detects various hand gestures created using the following tutorial:</p>
<ul>
<li><a href="https://christianjmills.com/series/tutorials/pytorch-train-object-detector-yolox-series.html">Training YOLOX Models for Real-Time Object Detection in PyTorch</a></li>
</ul>
<p>Download the pre-trained model and its associated colormap using the links below:</p>
<ul>
<li><a href="https://huggingface.co/cj-mills/yolox-hagrid-onnx/resolve/main/yolox_tiny/hagrid-sample-30k-384p-yolox_tiny.onnx">hagrid-sample-30k-384p-yolox_tiny.onnx</a></li>
<li><a href="https://huggingface.co/cj-mills/yolox-hagrid-onnx/resolve/main/hagrid-sample-30k-384p-colormap.json">hagrid-sample-30k-384p-colormap.json</a>
<ul>
<li>(To save the colormap file, right-click the link and opt for <code>Save Link As...</code>)</li>
</ul></li>
</ul>
</section>
<section id="import-colormap-file" class="level4">
<h4 class="anchored" data-anchor-id="import-colormap-file">Import Colormap File</h4>
<p>Return to the Unity Editor and, under the Assets folder, create a new folder called Colormaps. Transfer the downloaded JSON colormap file into this directory.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-import-json-colormap-file.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="import-the-onnx-model" class="level4">
<h4 class="anchored" data-anchor-id="import-the-onnx-model">Import the ONNX Model</h4>
<p>Since Unity doesn’t inherently recognize ONNX files, we must store them as <a href="https://docs.unity3d.com/Manual/StreamingAssets.html">streaming assets</a>. Create a folder called <code>StreamingAssets</code> within the Assets directory. Inside the <code>StreamingAssets</code> folder, create another folder named <code>Models</code>. Place the ONNX model you downloaded here.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-import-onnx-model.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>That takes care of the required asset files.</p>
</section>
</section>
</section>
<section id="installing-unity-package-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="installing-unity-package-dependencies">Installing Unity Package Dependencies</h2>
<p>Before we dive into the code for our Unity project, we will install a package I made that provides utility functions for extracting bounding box proposals from the raw output of our YOLOX model:</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Code Walkthrough</th>
<th>Git URL</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/unity-yolox-utils">Unity YOLOX Utilities</a></td>
<td><a href="../../../posts/unity-yolox-utils-walkthrough/">Blog Post</a></td>
<td><code>https://github.com/cj-mills/unity-yolox-utils.git</code></td>
</tr>
</tbody>
</table>
<section id="installing-the-package" class="level3">
<h3 class="anchored" data-anchor-id="installing-the-package">Installing the Package</h3>
<p>We can install this package from the <a href="https://docs.unity3d.com/Manual/upm-ui.html">Package Manager window</a>.</p>
<section id="open-the-package-manager" class="level4">
<h4 class="anchored" data-anchor-id="open-the-package-manager">Open the Package Manager</h4>
<p>In the Unity Editor, navigate to the top menu and select <code>Window -&gt; Package Manager</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-open-package-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="add-the-package" class="level4">
<h4 class="anchored" data-anchor-id="add-the-package">Add the Package</h4>
<p>Click the add <img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/iconAdd.png" class="img-fluid" alt="iconAdd"> button in the top left corner of the Package Manager window and select the <code>Install package from git URL...</code> option from the dropdown menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-package-manager-select-install-package-from-git-url.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Enter the git URL for the package and click <code>Install</code>.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">https://github.com/cj-mills/unity-yolox-utils.git</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-package-manager-install-unity-yolox-utils.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>You may notice the package automatically installs another package called <a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit"><code>Bounding Box 2D Toolkit</code></a>. This package provides functionality for working with and visualizing 2D bounding boxes on a Unity canvas.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-package-manager-bounding-box-2d-toolkit.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>That’s it for the package dependencies. In the next section, we will dive into the code for our project.</p>
</section>
</section>
</section>
<section id="making-directml-accessible-to-the-editor" class="level2">
<h2 class="anchored" data-anchor-id="making-directml-accessible-to-the-editor">Making DirectML Accessible to the Editor</h2>
<p>While the DLL files for our plugin and ONNX Runtime work fine in Unity’s default plugins folder, the file for DirectML must be in the same folder as the current application’s executable. Since we are in the Editor, we must store a copy of the DirectML DLL file in the folder for the Editor application. We can create a script to handle this automatically.</p>
<p>Create a new Assets folder called <code>Editor</code>. Inside the <code>Editor</code> folder, create a new C# script named <code>DirectMLDllCopier</code>. This script will only run while we are in the Unity Editor.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-create-directml-dll-copier-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the script and replace the default content with the following code:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DirectMLDllCopier</span>
<span id="cb3-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DirectMLDllCopier</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyDirectMLDllToEditorDirectory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-11"></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyDirectMLDllToEditorDirectory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get all files named "DirectML.dll" in the Assets directory</span></span>
<span id="cb3-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./Assets/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchOption<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AllDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through each found file</span></span>
<span id="cb3-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-19">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the file is in the "x86_64" folder</span></span>
<span id="cb3-20">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb3-21">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-22">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the file path for the Editor application</span></span>
<span id="cb3-23">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> editorPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">applicationPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the parent folder for the Editor application</span></span>
<span id="cb3-25">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> editorDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetParent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>editorPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToString</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-26">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define target file path</span></span>
<span id="cb3-27">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> targetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{editorDir}/DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-28">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only copy the file to the Editor application folder if it is not already present</span></span>
<span id="cb3-29">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Copy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-30">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-31">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We use the <a href="https://docs.unity3d.com/ScriptReference/InitializeOnLoadAttribute.html">InitializeOnLoad</a> attribute to have the Editor run this script whenever Unity loads or scripts recompile. That way, we can ensure the Editor has a copy of the DirectML file even when we change Unity versions.</p>
<p>Save the script and go back to the Editor. Doing so will cause the script to execute and copy the DirectML DLL file to the folder for the current Editor version.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/file-explorer-unity-editor-verify-directml-dll-file.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Relaunch the Editor to ensure it loads with the DirectML file.</p>
</section>
<section id="importing-plugin-functions" class="level2">
<h2 class="anchored" data-anchor-id="importing-plugin-functions">Importing Plugin Functions</h2>
<p>Now that Unity can access DirectML, we will create a script that imports the plugin functions, allowing us to access them in other C# scripts.</p>
<p>Create a new C# script inside the <code>Assets-&gt;Scripts</code> folder named <code>ONNXRuntimePluginImporter</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-create-onnx-runtime-plugin-importer-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the script and replace the default content with the following code:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InteropServices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Class with Native plugin functions for ONNX Runtime.</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ONNXRuntimePluginImporter</span>
<span id="cb4-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Name of the DLL file</span></span>
<span id="cb4-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UnityONNXInferenceCVPlugin"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11"></span>
<span id="cb4-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitOrtAPI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-17"></span>
<span id="cb4-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> IntPtr <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-20"></span>
<span id="cb4-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FreeResources</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-23"></span>
<span id="cb4-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> IntPtr <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> execution_provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-26"></span>
<span id="cb4-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We use the <a href="https://learn.microsoft.com/en-us/dotnet/api/system.runtime.interopservices.dllimportattribute"><code>DllImport</code></a> attribute from the <code>.NET</code> <a href="https://learn.microsoft.com/en-us/dotnet/api/system.runtime.interopservices"><code>System.Runtime.InteropServices</code></a> namespace to indicate the methods are from a DLL. Note we specify <a href="https://learn.microsoft.com/en-us/dotnet/api/system.intptr"><code>IntPtr</code></a> as the return value for methods that return a string.</p>
</section>
<section id="performing-inference-with-the-plugin" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference-with-the-plugin">Performing Inference with the Plugin</h2>
<p>Now that we’ve imported the plugin functionality, we can create a script to handle performing inference. Inside the Scripts folder, create a new C# script named <code>InferenceController</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-create-inference-controller-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<section id="importing-namespace-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="importing-namespace-dependencies">Importing Namespace Dependencies</h3>
<p>Inside the <code>InferenceController</code> script, we’ll first update the namespace dependencies:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rendering</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InteropServices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BBox2DToolkit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeepLearningImageProcessor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">YOLOXUtils</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ul>
<li><code>UnityEngine.Rendering</code>: Provides access to the elements of the rendering pipeline.</li>
<li><code>System.IO</code>: Allows reading and writing to files and data streams.</li>
<li><code>System.Runtime.InteropServices</code>: Provides a variety of members that support <a href="https://learn.microsoft.com/en-us/dotnet/standard/native-interop/cominterop">COM interop</a> and <a href="https://learn.microsoft.com/en-us/dotnet/standard/native-interop/pinvoke">platform invoke</a> services.</li>
<li><code>CJM.BBox2DToolkit</code>: Provides an easy-to-use and customizable solution to work with and visualize 2D bounding boxes on a Unity canvas.</li>
<li><code>CJM.DeepLearningImageProcessor</code>: Provides Shaders and Compute Shaders for various image processing tasks, such as cropping, normalizing, and flipping images in Unity.</li>
<li><code>CJM.YOLOXUtils</code>: Provides utility functions to work with YOLOX object detection models in Unity.</li>
</ul>
</section>
<section id="declaring-serialized-fields" class="level3">
<h3 class="anchored" data-anchor-id="declaring-serialized-fields">Declaring Serialized Fields</h3>
<p>Next, we will declare the variables we want to make accessible through the <a href="https://docs.unity3d.com/Manual/UsingTheInspector.html">Inspector window</a> in Unity Editor.</p>
<section id="gameobject-components" class="level4">
<h4 class="anchored" data-anchor-id="gameobject-components">GameObject Components</h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Components"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Responsible for image preprocessing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ImageProcessor imageProcessor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Visualizes detected object bounding boxes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> BoundingBox2DVisualizer boundingBoxVisualizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Renders the input image on a screen"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> MeshRenderer screenRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ul>
<li><strong><code>imageProcessor</code></strong>: This component is responsible for the necessary image preprocessing operations before we feed to the ONNX model.</li>
<li><strong><code>boundingBoxVisualizer</code></strong>: The YOLOX model predicts coordinates and dimensions for bounding boxes that contain detected objects in the input image. This component handles visualizing these boxes on the screen, allowing users to see the locations of detected objects within the image.</li>
<li><strong><code>screenRenderer</code></strong>: This renders the input image on a screen or a canvas in the Unity environment. It helps users see the original image alongside any visualized detections or annotations.</li>
</ul>
</section>
<section id="data-processing-settings" class="level4">
<h4 class="anchored" data-anchor-id="data-processing-settings">Data Processing Settings</h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The target dimensions for the processed image"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flag to normalize input images before passing them to the model."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> normalizeInput <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flag to flip input images around the X-axis before passing them to the model."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> flipInput <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flag to enable/disable async GPU readback for the input image"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ul>
<li><strong><code>targetDim</code></strong>: This field specifies the desired height of input images.</li>
<li><strong><code>normalizeInput</code></strong>: Normalization is a common preprocessing step that involves scaling the pixel values of an image to a standard range. It helps in maintaining consistency and can affect the model’s performance. Our model performs this step internally, but others might not.</li>
<li><strong><code>flipInput</code></strong>: The input image gets flipped upside down when it goes to the plugin. We can pre-flip it in a <a href="https://docs.unity3d.com/Manual/class-ComputeShader.html">Compute Shader</a> to ensure it is right-side up when we feed it to the model.</li>
<li><strong><code>useAsyncGPUReadback</code></strong>: We need to download the pixel data for the input image from the GPU to system memory before sending it to the plugin. This download process can cause a significant performance bottleneck as it waits for the GPU to complete all previous work. We mitigate the performance hit by downloading the pixel data asynchronously. This approach can significantly improve frame rates at the cost of some latency.</li>
</ul>
</section>
<section id="output-processing-settings" class="level4">
<h4 class="anchored" data-anchor-id="output-processing-settings">Output Processing Settings</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum confidence score for an object proposal to be considered"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> confidenceThreshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Threshold for Non-Maximum Suppression (NMS)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> nmsThreshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JSON file with bounding box colormaps"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextAsset colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ul>
<li><strong><code>confidenceThreshold</code></strong>: The YOLOX model assigns a confidence score to each detected object. This threshold ensures we only keep detections with a confidence score above the specified value. It helps in reducing false positives.</li>
<li><strong><code>nmsThreshold</code></strong>: Non-maximum suppression (NMS) is a technique used to ensure that a single object doesn’t get detected multiple times with overlapping boxes. The threshold determines how much overlap to tolerate before ignoring a detection.</li>
<li><strong><code>colormapFile</code></strong>: We can access the JSON colormap file we imported early as a Unity <a href="https://docs.unity3d.com/ScriptReference/TextAsset.html">TextAsset</a>.</li>
</ul>
</section>
<section id="onnx" class="level4">
<h4 class="anchored" data-anchor-id="onnx">ONNX</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ONNX"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the ONNX models folder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> onnxModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<ul>
<li><strong><code>onnxModelsDir</code></strong>: This field specifies the name of the directory in the StreamingAssets folder we used to store the ONNX model.</li>
</ul>
</section>
</section>
<section id="declaring-private-variables" class="level3">
<h3 class="anchored" data-anchor-id="declaring-private-variables">Declaring Private Variables</h3>
<p>After that, we can define the private variables we want to remain internal to the script.</p>
<section id="bounding-box-information" class="level4">
<h4 class="anchored" data-anchor-id="bounding-box-information">Bounding Box Information</h4>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> BBox2DInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Array to store bounding box information</span></span></code></pre></div>
<ul>
<li><strong><code>bboxInfoArray</code></strong>: Stores information related to detected objects’ bounding boxes and their associated label and color from the colormap.</li>
</ul>
</section>
<section id="screen-properties" class="level4">
<h4 class="anchored" data-anchor-id="screen-properties">Screen Properties</h4>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flag to check if the screen is mirrored</span></span></code></pre></div>
<ul>
<li><strong><code>mirrorScreen</code></strong>: A flag that tracks whether the screen is mirrored or not. We need to know this when processing the predicted bounding boxes.</li>
</ul>
</section>
<section id="image-processing" class="level4">
<h4 class="anchored" data-anchor-id="image-processing">Image Processing</h4>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Offset used when cropping the input image</span></span>
<span id="cb12-2">Texture2D inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model CPU input texture</span></span></code></pre></div>
<ul>
<li><strong><code>offsets</code></strong>: We need to ensure the input image dimensions are multiples of 32. We do this by cropping the resized input image. This variable stores the distance in pixels from the top-left corner of the input image and the cropped area. We then use these offset values to adjust the predicted bounding box locations.</li>
<li><strong><code>inputTextureCPU</code></strong>: Stores the pixel data for the input image in system memory.</li>
</ul>
</section>
<section id="color-and-label-management" class="level4">
<h4 class="anchored" data-anchor-id="color-and-label-management">Color and Label Management</h4>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List to store label and color pairs for each class</span></span>
<span id="cb13-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> colormapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;();</span></span></code></pre></div>
<ul>
<li><strong><code>colormapList</code></strong>: We use this list to associate each detected object’s class with the matching color and label from the colormap.</li>
</ul>
</section>
<section id="yolox-model-information" class="level4">
<h4 class="anchored" data-anchor-id="yolox-model-information">YOLOX Model Information</h4>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List to store grid and stride information for the YOLOX model</span></span>
<span id="cb14-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridCoordinateAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> gridCoordsAndStrides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridCoordinateAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> proposalLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Length of the proposal array for YOLOX output</span></span>
<span id="cb14-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the raw model output</span></span></code></pre></div>
<ul>
<li><strong><code>gridCoordsAndStrides</code></strong>: Stores information related to the grid coordinates and strides for the YOLOX model, which we use for processing the model’s raw output into usable bounding box data.</li>
<li><strong><code>proposalLength</code></strong>: Represents the length of a single object proposal from the YOLOX model’s output.</li>
<li><strong><code>outputArray</code></strong>: A container that holds the raw output data from the YOLOX model.</li>
</ul>
</section>
<section id="onnx-model-information" class="level4">
<h4 class="anchored" data-anchor-id="onnx-model-information">ONNX Model Information</h4>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// File paths for the available ONNX models</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelPaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available ONNX models</span></span>
<span id="cb15-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available ONNX execution providers</span></span>
<span id="cb15-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> onnxExecutionProviders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span></code></pre></div>
<ul>
<li><strong><code>modelPaths</code></strong>: Contains the file paths for all available ONNX models within the specified directory.</li>
<li><strong><code>modelNames</code></strong>: Holds the names of all available ONNX models. We can use this for display purposes or logging/debugging.</li>
<li><strong><code>onnxExecutionProviders</code></strong>: Lists the names of available execution providers for ONNX. In our case, there should be two: the CPU and DirectML execution providers.</li>
</ul>
</section>
</section>
<section id="defining-private-methods" class="level3">
<h3 class="anchored" data-anchor-id="defining-private-methods">Defining Private Methods</h3>
<p>Now, we can define the private methods for our script.</p>
<section id="prepare-input-textures" class="level4">
<h4 class="anchored" data-anchor-id="prepare-input-textures">Prepare Input Textures</h4>
<p>This method creates a temporary <code>RenderTexture</code> with the specified dimensions. We use this when setting up a texture for processing before sending it to the model, ensuring it matches the target input dimensions.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Prepare a temporary RenderTexture with the given input dimensions.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input dimensions for the RenderTexture</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A temporary RenderTexture with the specified input dimensions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb16-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTexture <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PrepareInputTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="process-input-images" class="level4">
<h4 class="anchored" data-anchor-id="process-input-images">Process Input Images</h4>
<p>This method takes in an input texture and applies a series of transformations, like cropping, normalization, and flipping.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Process the input image and apply necessary transformations.</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input RenderTexture to process</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"imageTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source image texture</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"sourceDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source image dimensions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input dimensions for processing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessInputImage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Texture imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the offset for cropping the input image</span></span>
<span id="cb17-11">    offset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourceDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-12"></span>
<span id="cb17-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a temporary render texture to store the cropped image</span></span>
<span id="cb17-14">    RenderTexture sourceTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-15">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-16"></span>
<span id="cb17-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Crop and normalize the input image using Compute Shaders</span></span>
<span id="cb17-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SystemInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">supportsComputeShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-20">        imageProcessor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CropImageComputeShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normalizeInput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> imageProcessor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageComputeShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NormalizeImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-22">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>flipInput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> imageProcessor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageComputeShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FlipXAxis"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-24"></span>
<span id="cb17-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the temporary render texture</span></span>
<span id="cb17-26">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="update-bounding-boxes" class="level4">
<h4 class="anchored" data-anchor-id="update-bounding-boxes">Update Bounding Boxes</h4>
<p>This method adjusts the position and scale of the bounding boxes based on the processed input’s dimensions and the screen’s dimensions. We use this to ensure the bounding boxes correctly overlay on the displayed image, considering any transformations made during the image processing phase.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the bounding boxes based on the input dimensions and screen dimensions.</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input dimensions for processing</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the screen is mirrored</span></span>
<span id="cb18-8">    mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">z</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-9"></span>
<span id="cb18-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the screen dimensions</span></span>
<span id="cb18-11">    Vector2 screenDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-12"></span>
<span id="cb18-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale and position the bounding boxes based on the input and screen dimensions</span></span>
<span id="cb18-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb18-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-16">        bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BBox2DUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> mirrorScreen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="get-onnx-models" class="level4">
<h4 class="anchored" data-anchor-id="get-onnx-models">Get ONNX Models</h4>
<p>This method scans the specified directory for available ONNX models and records their file paths and names. We can then pass a model path to the plugin to initialize an inference session.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the file paths for available ONNX models</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb19-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for each model folder</span></span>
<span id="cb19-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/{onnxModelsDir}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb19-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">EndsWith</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".onnx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb19-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-11">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the model folder name</span></span>
<span id="cb19-12">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'\\'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb19-13">            Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"modelName: {modelName}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add name to list of model names</span></span>
<span id="cb19-15">            modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-16">            modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="get-onnx-execution-providers" class="level4">
<h4 class="anchored" data-anchor-id="get-onnx-execution-providers">Get ONNX Execution Providers</h4>
<p>This method fetches the names of the available execution providers from the plugin. We can then choose which one to use for inference.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb20-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the names of the available ONNX execution providers</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb20-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXExecutionProviders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb20-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the number of available ONNX execution providers</span></span>
<span id="cb20-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> providerCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ONNXRuntimePluginImporter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-8">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Provider Count: {providerCount}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-9"></span>
<span id="cb20-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> providerCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb20-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> providerName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Marshal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PtrToStringAnsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ONNXRuntimePluginImporter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb20-13">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>providerName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-14">        providerName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> providerName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ExecutionProvider"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-15">        onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>providerName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-17">    onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reverse</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="update-onnx-model" class="level4">
<h4 class="anchored" data-anchor-id="update-onnx-model">Update ONNX Model</h4>
<p>This method loads the selected ONNX model with the specified execution provider and input dimensions. For a production application, you may want to provide options to switch between models and execution providers. For this demo, we’ll hardcode using the first model found and the last execution provider in the list. In our case, that will be the DirectML provider.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the selected ONNX model</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb21-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateONNXModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb21-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-7">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb21-8">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span></span>
<span id="cb21-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb21-10"></span>
<span id="cb21-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the specified ONNX model</span></span>
<span id="cb21-12">    IntPtr resultPtr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ONNXRuntimePluginImporter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb21-13">        modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb21-14">        onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb21-15">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-16"></span>
<span id="cb21-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> return_msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Marshal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PtrToStringAnsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>resultPtr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert IntPtr to string</span></span>
<span id="cb21-18"></span>
<span id="cb21-19">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Return message: {return_msg}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="asynchronous-gpu-readback" class="level4">
<h4 class="anchored" data-anchor-id="asynchronous-gpu-readback">Asynchronous GPU Readback</h4>
<p>This method handles the completion of an asynchronous GPU readback request. It ensures the readback data correctly transfers to a Texture2D object and resolves potential errors and resizing issues.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnCompleteReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AsyncGPUReadbackRequest request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Texture2D targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTexture sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hasError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-5">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU readback error detected."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-8"></span>
<span id="cb22-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure the Texture2D is not null</span></span>
<span id="cb22-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if dimensions of targetTexture and sourceTexture are different</span></span>
<span id="cb22-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Re-create the Texture2D with the same dimensions as the RenderTexture</span></span>
<span id="cb22-16">            targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reinitialize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sourceTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// It's usually a good idea to clear out any previous data after resizing</span></span>
<span id="cb22-18">            targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb22-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-20"></span>
<span id="cb22-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fill Texture2D with raw data from the AsyncGPUReadbackRequest</span></span>
<span id="cb22-22">        targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb22-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply changes to Texture2D</span></span>
<span id="cb22-24">        targetTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb22-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="defining-public-methods" class="level3">
<h3 class="anchored" data-anchor-id="defining-public-methods">Defining Public Methods</h3>
<p>We only have one public method, which handles changes to the confidence threshold from the GUI.</p>
<section id="update-the-confidence-threshold" class="level4">
<h4 class="anchored" data-anchor-id="update-the-confidence-threshold">Update the Confidence Threshold</h4>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb23-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the confidence threshold for object detection.</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb23-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"value"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The new confidence threshold value</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb23-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-7">    confidenceThreshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="defining-monobehaviour-methods" class="level3">
<h3 class="anchored" data-anchor-id="defining-monobehaviour-methods">Defining MonoBehaviour Methods</h3>
<p>Lastly, we will define the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.html"><code>MonoBehaviour</code></a> methods and implement the steps the script should execute when it’s loading, before the first frame update, during each frame, and when the application closes.</p>
<section id="make-directml-accessible-to-the-project-build" class="level4">
<h4 class="anchored" data-anchor-id="make-directml-accessible-to-the-project-build">Make DirectML Accessible to the Project Build</h4>
<p>As mentioned earlier, the DirectML DLL file must be in the same directory as the application executable for us to use the DirectML execution provider. We’ve already addressed that for working in the Editor, and now we’ll do the same for our compiled Unity project.</p>
<p>When the compiled application runs outside the Editor, it will copy the DirectML DLL file from the plugins folder to the same directory as the executable file. We want to ensure this code runs before the rest of the script, so we’ll place it in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Awake.html"><code>Awake()</code></a> method.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Awake runs when the script instance is being loaded</span></span>
<span id="cb24-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Awake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>UNITY_EDITOR</span>
<span id="cb24-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the path for the DirectML.dll file in the StreamingAssets folder</span></span>
<span id="cb24-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> sourcePath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.dataPath}/Plugins/x86_64/DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-7"></span>
<span id="cb24-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dataPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> buildDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetParent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dataPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToString</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-10"></span>
<span id="cb24-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the destination path for the DirectML.dll file</span></span>
<span id="cb24-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> targetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{buildDir}/DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only copy the file if it is not already present at the destination</span></span>
<span id="cb24-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Copy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourcePath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb24-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initialize-the-plugin-and-colormap" class="level4">
<h4 class="anchored" data-anchor-id="initialize-the-plugin-and-colormap">Initialize the Plugin and Colormap</h4>
<p>We want to load the colormap and initialize the plugin before the first frame update. Therefore, we’ll perform these steps in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Start.html"><code>Start()</code></a> method.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb25-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb25-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-4">    colormapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ColormapUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadColorMapList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load colormap information from JSON file</span></span>
<span id="cb25-5">    proposalLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> YOLOXConstants<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NumBBoxFields</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate proposal length</span></span>
<span id="cb25-6"></span>
<span id="cb25-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the file paths for available ONNX models</span></span>
<span id="cb25-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the ONNX Runtime API</span></span>
<span id="cb25-10">    ONNXRuntimePluginImporter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitOrtAPI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the names of available ONNX execution providers</span></span>
<span id="cb25-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXExecutionProviders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="perform-inference-with-the-plugin" class="level4">
<h4 class="anchored" data-anchor-id="perform-inference-with-the-plugin">Perform Inference with the Plugin</h4>
<p>The <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Update.html"><code>Update()</code></a> method orchestrates real-time object detection in each frame.</p>
<p>First, it extracts the current frame’s image data and applies the preprocessing steps. If the input dimensions change, the method updates the plugin with the new dimensions.</p>
<p>We then download the pixel data for the input image from the GPU to the system memory, either asynchronously or synchronously, and pass it to the plugin for inference.</p>
<p>The raw model output gets translated into potential bounding box proposals, which we further refine using Non-Maximum Suppression to eliminate redundant boxes. These proposals are then structured and filtered to offer actionable data, like object positions and labels.</p>
<p>Finally, we pass the bounding boxes to the visualizer to display them on screen, showing the detected objects in real time.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the InferenceController every frame, processing the input image and updating the UI and bounding boxes.</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb26-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb26-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the input image and dimensions</span></span>
<span id="cb26-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> imageTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> imageDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> imageProcessor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-10"></span>
<span id="cb26-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate source and input dimensions for model input</span></span>
<span id="cb26-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> sourceDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-13">    inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CropInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-14"></span>
<span id="cb26-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prepare and process the input texture</span></span>
<span id="cb26-16">    RenderTexture inputTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PrepareInputTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessInputImage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-18"></span>
<span id="cb26-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the plugin with the current input dimensions</span></span>
<span id="cb26-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-22">        inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGB24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-23">        gridCoordsAndStrides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateGridCoordinatesWithStrides</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>YOLOXConstants<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Strides</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-24"></span>
<span id="cb26-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> output_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gridCoordsAndStrides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposalLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-26">        outputArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>output_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb26-27">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updating output array to {output_size}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-28">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims: {inputTextureCPU.width}x{inputTextureCPU.height}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-29"></span>
<span id="cb26-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the selected ONNX model</span></span>
<span id="cb26-31">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateONNXModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-33"></span>
<span id="cb26-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download the input image data from the GPU to system memory</span></span>
<span id="cb26-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-37">        AsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Request</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGB24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span></span>
<span id="cb26-38">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-39">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnCompleteReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-40">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb26-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-42">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb26-43">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download pixel data from GPU to CPU</span></span>
<span id="cb26-45">        RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-46">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-47">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-49"></span>
<span id="cb26-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass the input image to the model and get the raw output</span></span>
<span id="cb26-51">    ONNXRuntimePluginImporter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-52"></span>
<span id="cb26-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free the memory for the input RenderTexture</span></span>
<span id="cb26-54">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-55"></span>
<span id="cb26-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate bounding box proposals from the output array</span></span>
<span id="cb26-57">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BBox2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateBoundingBoxProposals</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-58">                                                                       gridCoordsAndStrides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-59">                                                                       colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-60">                                                                       YOLOXConstants<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NumBBoxFields</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb26-61">                                                                       confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-62"></span>
<span id="cb26-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply Non-Maximum Suppression (NMS) to the proposals</span></span>
<span id="cb26-64">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposalIndices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BBox2DUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NMSSortedBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> nmsThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create an array of BBox2DInfo objects containing the filtered bounding boxes, class labels, and colors</span></span>
<span id="cb26-66">    bboxInfoArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetBBox2DInfos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> proposalIndices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-67"></span>
<span id="cb26-68"></span>
<span id="cb26-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update bounding boxes and user interface</span></span>
<span id="cb26-70">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-71">    boundingBoxVisualizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBoxVisualizations</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-72"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="clean-up-plugin-resources" class="level4">
<h4 class="anchored" data-anchor-id="clean-up-plugin-resources">Clean Up Plugin Resources</h4>
<p>The last piece of code to add will free the resources the plugin allocates when the application closes or when we exit play mode in the Editor.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnApplicationQuit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb27-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-3">    ONNXRuntimePluginImporter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FreeResources</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb27-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>That’s it for the project code. All that’s left is to set up the demo scene.</p>
</section>
</section>
</section>
<section id="setting-up-the-demo-scene" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-demo-scene">Setting Up the Demo Scene</h2>
<p>In this final section, we’ll add the InferenceController script and a Bounding Box Visualizer to our demo scene.</p>
<section id="adding-the-gameobjects" class="level3">
<h3 class="anchored" data-anchor-id="adding-the-gameobjects">Adding the GameObjects</h3>
<p>We’ll first add the GameObjects for our InferenceController script and the Bounding Box Visualizer to the demo scene.</p>
<section id="create-an-empty-gameobject" class="level4">
<h4 class="anchored" data-anchor-id="create-an-empty-gameobject">Create an Empty GameObject</h4>
<p>Right-click an open space in the <a href="https://docs.unity3d.com/Manual/Hierarchy.html">Hierarchy window</a> and select <code>Create Empty</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-hierarchy-create-empty-object.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the new object <code>InferenceManager</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-hierarchy-name-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="add-the-bounding-box-visualizer-to-the-scene" class="level4">
<h4 class="anchored" data-anchor-id="add-the-bounding-box-visualizer-to-the-scene">Add the Bounding Box Visualizer to the Scene</h4>
<p>Next, go to the Project window and open the Packages-&gt;Bounding Box 2D Toolkit-&gt;Prefabs folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-packages-select-bounding-box-2d-visualizer-prefab.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the BBox2DVisualizer prefab and drag it into the Hierarchy window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-hierarchy-add-bounding-box-2d-visualizer.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="configure-inference-manager" class="level3">
<h3 class="anchored" data-anchor-id="configure-inference-manager">Configure Inference Manager</h3>
<p>Now, we only need to configure the InferenceManager. With the InferenceManager object selected in the Hierarchy tab, drag the InferenceController script from the Assets folder to the <a href="https://docs.unity3d.com/Manual/UsingTheInspector.html">Inspector window</a>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-add-inference-controller-component.png" class="img-fluid figure-img"></p>
</figure>
</div>
<section id="add-the-image-processor-component" class="level4">
<h4 class="anchored" data-anchor-id="add-the-image-processor-component">Add the Image Processor Component</h4>
<p>Next, click the Add Component button in the Inspector window. Type Image Processor into the search box and press Enter.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-add-image-processor-component.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="assign-inference-controller-components" class="level4">
<h4 class="anchored" data-anchor-id="assign-inference-controller-components">Assign Inference Controller Components</h4>
<p>Now, we can assign the ImageProcessor component to the InferenceController component.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-assign-image-processor-component.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>After that, drag the BBox2DVisualizer from the Hierarchy window onto the Bounding Box Visualizer field in the InferenceController.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-assign-bounding-box-visualizer-component.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Next, drag the Screen object onto the Screen Render field.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-assign-mesh-renderer-component.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Also, set the flags for flipping the input image and enabling asynchronous GPU readback.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-enable-flip-input-async-readback.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Lastly, drag the Colormap file from the Assets folder into the Colormap File field.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-inspector-tab-assign-colormap.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="test-in-editor" class="level3">
<h3 class="anchored" data-anchor-id="test-in-editor">Test in Editor</h3>
<p>We are finally ready to test our project. If you enter Play mode, you should see the following in the Game view:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/images/unity-editor-play-test-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on completing this tutorial! We previously created a native plugin in Visual Studio with ONNX Runtime and have now integrated it into a Unity project to perform real-time object detection. By now, you should have a firm grasp on how to embed a native plugin into the Unity game engine and leverage the power of ONNX Runtime for computer vision tasks.</p>


</section>

 ]]></description>
  <category>onnx</category>
  <category>directml</category>
  <category>yolox</category>
  <category>object-detection</category>
  <category>unity</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/unity-integration/index.html</guid>
  <pubDate>Fri, 20 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Building a Computer Vision Plugin for Unity with ONNX Runtime</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../series/tutorials/onnx-runtime-unity-series.html"><strong>ONNX Runtime in Unity</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Creating a Dynamic-Link Library Project</li>
<li>Configuring the Release Build</li>
<li>Installing ONNX Runtime via NuGet</li>
<li>Including the ONNX Runtime Header Files</li>
<li>Preparing Functions for Export and Preventing Name Mangling</li>
<li>Declaring Global Variables</li>
<li>Defining Utility Functions</li>
<li>Loading a Model</li>
<li>Performing Inference</li>
<li>Building the Project</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this tutorial, we’ll create a native plugin for the Unity game engine that leverages ONNX Runtime for computer vision tasks. ONNX (Open Neural Network Exchange) Runtime is a high-performance, cross-platform engine that allows developers to run standardized machine learning models. Leveraging ONNX Runtime for computer vision in Unity applications will unlock many potential applications for users and developers.</p>
<p>I’ll guide you step-by-step, from setting up a Visual Studio environment to compiling the project as a DLL. In a <a href="./unity-integration">follow-up post</a>, we’ll implement a simple Unity scene where we will use our plugin to perform object detection with a YOLOX model. The sample Unity project is available on GitHub at the link below:</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-onnxruntime-inference-yolox-demo">unity-onnxruntime-inference-yolox-demo</a></li>
</ul>
<p>By the end of this tutorial, you’ll have a plugin for using ONNX Runtime to run a wide range of computer vision models in Unity projects.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post assumes <a href="https://visualstudio.microsoft.com/downloads/">Visual Studio</a> is present on your system and has the <code>Desktop Development with C++</code> workload installed.</p>
</div>
</div>
</section>
<section id="creating-a-dynamic-link-library-project" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-dynamic-link-library-project">Creating a Dynamic-Link Library Project</h2>
<p>In this section, we initialize a C++ DLL project in Visual Studio.</p>
<section id="launching-visual-studio" class="level3">
<h3 class="anchored" data-anchor-id="launching-visual-studio">Launching Visual Studio</h3>
<p>Begin by opening Visual Studio. On the welcome screen, locate the <code>Get started</code> section and choose <code>Create a new project</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-create-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="selecting-the-project-type" class="level3">
<h3 class="anchored" data-anchor-id="selecting-the-project-type">Selecting the Project Type</h3>
<p>We’ll use the C++ <code>Dynamic-Link Library (DLL)</code> template for our project. Select the template from the list and click <code>Next</code> to proceed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-new-c++-dll-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="naming-and-locating-your-project" class="level3">
<h3 class="anchored" data-anchor-id="naming-and-locating-your-project">Naming and Locating Your Project</h3>
<p>Choose an appropriate name and location for the project and click the <code>Create</code> button. By default, the <code>.dll</code> file will use the project name.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-choose-project-name-and-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="configuring-the-release-build" class="level2">
<h2 class="anchored" data-anchor-id="configuring-the-release-build">Configuring the Release Build</h2>
<p>Once the project opens in Visual Studio, we must configure it for a <code>Release</code> build. At the top of the window, open the Solution Configurations dropdown menu and select <code>Release</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-switch-to-release.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="installing-onnx-runtime-via-nuget" class="level2">
<h2 class="anchored" data-anchor-id="installing-onnx-runtime-via-nuget">Installing ONNX Runtime via NuGet</h2>
<p>With the project configured, it’s time to install ONNX Runtime. For this tutorial, we will install ONNX Runtime with the DirectML execution provider. DirectML is a high-performance, hardware-accelerated DirectX 12 library for machine learning on Windows. It provides GPU acceleration for machine learning tasks across a broad range of supported hardware and drivers.</p>
<p>We can install ONNX Runtime with DirectML directly into our project via the <a href="https://www.nuget.org/">NuGet</a> package manager integrated with Visual Studio.</p>
<section id="accessing-nuget-packages-in-visual-studio" class="level3">
<h3 class="anchored" data-anchor-id="accessing-nuget-packages-in-visual-studio">Accessing NuGet Packages in Visual Studio</h3>
<p>Open the <code>Project</code> menu and select <code>Manage NuGet Packages...</code> from the dropdown menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-project-manage-nuget-packages.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="searching-for-the-onnx-runtime-package" class="level3">
<h3 class="anchored" data-anchor-id="searching-for-the-onnx-runtime-package">Searching for the ONNX Runtime Package</h3>
<p>Within the NuGet tab, select the <code>Browse</code> option and enter <code>Microsoft.ML.OnnxRuntime.DirectML</code> into the search box.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-nuget-package-manager-search-for-package.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="installing-the-package" class="level3">
<h3 class="anchored" data-anchor-id="installing-the-package">Installing the Package</h3>
<p>Select the appropriate package from the search results. For this tutorial, we’ll be using version <code>1.16.1</code>. Click on the <code>Install</code> button to add it to your project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-nuget-package-manager-install-package.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="confirming-the-installation" class="level3">
<h3 class="anchored" data-anchor-id="confirming-the-installation">Confirming the Installation</h3>
<p>A confirmation popup will appear detailing the pending changes to the project. Review these and then click <code>Apply</code> to proceed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-approve-nuget-package-install.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="including-the-onnx-runtime-header-files" class="level2">
<h2 class="anchored" data-anchor-id="including-the-onnx-runtime-header-files">Including the ONNX Runtime Header Files</h2>
<p>Now that we have ONNX Runtime installed, it’s time to dive into the code. First, we must include the header files for ONNX Runtime and the DirectML extension to access their functionality.</p>
<p>Remove the default code after the <code>#include "pch.h"</code> line and add the following lines at the top of the dllmain.cpp file:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;onnxruntime_cxx_api.h&gt;</span></span>
<span id="cb1-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"dml_provider_factory.h"</span></span>
<span id="cb1-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;string&gt;</span></span>
<span id="cb1-4"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;vector&gt;</span></span>
<span id="cb1-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;functional&gt;</span></span></code></pre></div>
<ol type="1">
<li><code>&lt;onnxruntime_cxx_api.h&gt;</code>: This header provides the primary C++ API definitions for ONNX Runtime, giving us access to core functionalities like sessions, input and output binding, etc.</li>
<li><code>"dml_provider_factory.h"</code>: This header is specifically for the DirectML execution provider. It facilitates GPU acceleration via DirectML.</li>
</ol>
<p>The rest of the headers are from the C++ standard library.</p>
</section>
<section id="preparing-functions-for-export-and-preventing-name-mangling" class="level2">
<h2 class="anchored" data-anchor-id="preparing-functions-for-export-and-preventing-name-mangling">Preparing Functions for Export and Preventing Name Mangling</h2>
<p>Before getting further into our plugin’s logic, we must set some groundwork to ensure smooth interoperability between our C++ code and Unity, which uses C#.</p>
<section id="creating-an-export-macro" class="level3">
<h3 class="anchored" data-anchor-id="creating-an-export-macro">Creating an Export Macro</h3>
<p>When developing a DLL for Unity, we need a mechanism to specify which functions are available for external use. In C++, we can accomplish this by marking them with the <code>__declspec(dllexport)</code> directive. To streamline this process, we can define a macro:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define DLLExport </span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">__declspec(dllexport)</span></span></code></pre></div>
<p>By prefixing a function with <code>DLLExport</code>, we signal that it’s available for Unity to call.</p>
</section>
<section id="preventing-name-mangling" class="level3">
<h3 class="anchored" data-anchor-id="preventing-name-mangling">Preventing Name Mangling</h3>
<p>C++ compilers often modify function names as part of the compilation process—a mechanism known as “name mangling.” Name mangling can make it challenging for other software (like Unity) to locate and call the functions.</p>
<p>We can prevent name mangling by wrapping our code within an <code>extern "C"</code> block. This wrapper tells the compiler not to mangle the names of the contained functions, preserving their original signatures:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extern</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Your function declarations and definitions will go here...</span></span>
<span id="cb3-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>All subsequent code—including global variable declarations, utility functions, and the core logic of our plugin—should reside within this <code>extern "C"</code> block to ensure they remain accessible and free from name-mangling complications.</p>
<p>With these preparations in place, we’re ready to dive into the specifics of our plugin, starting with global variable declarations.</p>
</section>
</section>
<section id="declaring-global-variables" class="level2">
<h2 class="anchored" data-anchor-id="declaring-global-variables">Declaring Global Variables</h2>
<p>Since we are making a plugin, we want to make our variables global so the functions we call through Unity can access them. Here are the variables we’ll need for our plugin:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Width of the input image</span></span>
<span id="cb4-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Height of the input image</span></span>
<span id="cb4-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_pixels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total number of pixels in the input image (width x height)</span></span>
<span id="cb4-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of color channels in the input image (3 for RGB)</span></span>
<span id="cb4-5"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> OrtApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ort <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pointer to the ONNX Runtime C API, used for most ONNX operations</span></span>
<span id="cb4-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of providers available for ONNX runtime, e.g., DirectML</span></span>
<span id="cb4-7">OrtEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> env <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ONNX Runtime environment, encapsulating global options and logging functionality</span></span>
<span id="cb4-8">OrtSessionOptions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> session_options <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Configurations and settings for the ONNX session</span></span>
<span id="cb4-9">OrtSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> session <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The ONNX Runtime session, representing the loaded model and its state</span></span>
<span id="cb4-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Name of the model's input node</span></span>
<span id="cb4-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Name of the model's output node</span></span>
<span id="cb4-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Buffer to hold preprocessed input data before feeding it to the model</span></span></code></pre></div>
<p>These global variables serve various purposes:</p>
<ul>
<li><code>input_w</code> and <code>input_h</code> will define the dimensions of our input images.</li>
<li><code>n_pixels</code> provides a quick reference to the number of pixels.</li>
<li>ONNX Runtime-related variables (<code>ort</code>, <code>env</code>, <code>session_options</code>, <code>session</code>) are for managing the model and performing inference.</li>
<li><code>input_name</code> and <code>output_name</code> will specify which nodes of the model we’re interfacing with.</li>
<li><code>input_data</code> provides a buffer to handle the preprocessed data, ready to be ingested by our machine-learning model.</li>
</ul>
<p>With our global variables declared, we can start defining the functions for the plugin.</p>
</section>
<section id="defining-utility-functions" class="level2">
<h2 class="anchored" data-anchor-id="defining-utility-functions">Defining Utility Functions</h2>
<p>In this section, we will define several utility functions that will aid in initializing the ONNX Runtime, converting strings, querying available providers, and cleaning up resources.</p>
<section id="string-conversion" class="level3">
<h3 class="anchored" data-anchor-id="string-conversion">String Conversion</h3>
<p>Certain Windows APIs and functions expect wide strings (<code>wstring</code>) as arguments. In our case, we need to convert the string file path for the ONNX model when creating an Inference Session. We’ll perform this step in a dedicated function:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Convert a standard string to a wide string.</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"str"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A standard string to convert.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The wide string representation of the given string.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb5-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>wstring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>stringToWstring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>wstring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>wstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>begin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span></span>
<span id="cb5-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> wstr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializing-onnx-runtime" class="level3">
<h3 class="anchored" data-anchor-id="initializing-onnx-runtime">Initializing ONNX Runtime</h3>
<p>We need to initialize a pointer to access the ONNX Runtime API. Once we can access the API, we’ll get the available execution providers. By default, there should always be a CPU execution provider. There may be additional execution providers available depending on which NuGet package we install, like the one we selected for DirectML.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the ONNX Runtime API and retrieve the available providers.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb6-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> InitOrtAPI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the ONNX Runtime API</span></span>
<span id="cb6-7">    ort <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OrtGetApiBase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()-&gt;</span>GetApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ORT_API_VERSION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Temporary pointers to fetch provider names</span></span>
<span id="cb6-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> raw_provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> provider_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-12"></span>
<span id="cb6-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get available providers</span></span>
<span id="cb6-14">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetAvailableProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>raw_provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>provider_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-15"></span>
<span id="cb6-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Populate the global provider names vector</span></span>
<span id="cb6-17">    provider_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>raw_provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> raw_provider_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> provider_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="getting-the-number-of-providers" class="level3">
<h3 class="anchored" data-anchor-id="getting-the-number-of-providers">Getting the Number of Providers</h3>
<p>We will likely want to know how many execution providers are available for the plugin inside a Unity application. This function allows us to get the number of available execution providers within Unity:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the number of available execution providers.</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The number of execution providers.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb7-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> GetProviderCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static_cast</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span></span>
<span id="cb7-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="retrieving-a-provider-name" class="level3">
<h3 class="anchored" data-anchor-id="retrieving-a-provider-name">Retrieving a Provider Name</h3>
<p>Once we have the number of available execution providers inside Unity, we can index into the <code>vector</code> that stores the provider names and return the values to Unity.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Retrieve the name of a specific execution provider.</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The index of the provider.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the provider or nullptr if index is out of bounds.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb8-6">DLLExport <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> GetProviderName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>c_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb8-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="cleaning-up-resources" class="level3">
<h3 class="anchored" data-anchor-id="cleaning-up-resources">Cleaning Up Resources</h3>
<p>We will allocate system memory for various resources while using the plugin. It’s a good practice to free these resources when they’re no longer needed.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Release allocated ONNX Runtime resources.</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb9-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> FreeResources<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="loading-a-model" class="level2">
<h2 class="anchored" data-anchor-id="loading-a-model">Loading a Model</h2>
<p>Next, we will cover creating an Inference Session using information passed in from a Unity application.</p>
<section id="the-loadmodel-function" class="level3">
<h3 class="anchored" data-anchor-id="the-loadmodel-function">The <code>LoadModel</code> Function</h3>
<p>This function will take a model path, an execution provider name, and the expected image dimensions. It handles the necessary steps to prepare the ONNX Runtime environment, load the model, and store some essential metadata:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load an ONNX model and prepare it for inference.</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model_path"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Path to the ONNX model file.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"execution_provider"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The execution provider to use (e.g., "CPU" or "Dml").</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image_dims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Dimensions of the input image [width, height].</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A message indicating the success or failure of the loading process.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb10-8">DLLExport <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> LoadModel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> execution_provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define an instance name for the session</span></span>
<span id="cb10-11">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>instance_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"inference-session"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-12"></span>
<span id="cb10-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create an ONNX Runtime environment with a given logging level</span></span>
<span id="cb10-14">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ORT_LOGGING_LEVEL_WARNING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> instance_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>c_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-15"></span>
<span id="cb10-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Disable telemetry events</span></span>
<span id="cb10-17">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>DisableTelemetryEvents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-18"></span>
<span id="cb10-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create session options for further configuration</span></span>
<span id="cb10-20">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateSessionOptions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-21"></span>
<span id="cb10-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the execution provider</span></span>
<span id="cb10-23">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>provider_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> execution_provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-24"></span>
<span id="cb10-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Map execution providers to specific actions (e.g., settings for DML)</span></span>
<span id="cb10-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>unordered_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>function<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()&gt;&gt;</span> execution_provider_actions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CPU"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}},</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No special settings for CPU</span></span>
<span id="cb10-28">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[&amp;]()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Settings for DirectML (DML)</span></span>
<span id="cb10-29">                ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>DisableMemPattern<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-30">                ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>SetSessionExecutionMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ExecutionMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>ORT_SEQUENTIAL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-31">                OrtSessionOptionsAppendExecutionProvider_DML<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-32">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}}</span></span>
<span id="cb10-33">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb10-34"></span>
<span id="cb10-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply the settings based on the chosen execution provider</span></span>
<span id="cb10-36">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> action_taken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> pair <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> execution_provider_actions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-38">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>first<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-39">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> action <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pair<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>second<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-40"></span>
<span id="cb10-41">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>provider_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">::</span>npos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-42">                action<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb10-43">                action_taken <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-44">                <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-45">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-46">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-47"></span>
<span id="cb10-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>action_taken<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-49">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unknown execution provider specified."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-50">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-51"></span>
<span id="cb10-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the ONNX model</span></span>
<span id="cb10-53">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> stringToWstring<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span>c_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-54">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseSessionOptions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-55"></span>
<span id="cb10-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set up an allocator for retrieving input-output names</span></span>
<span id="cb10-57">        Ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>AllocatorWithDefaultOptions allocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-58"></span>
<span id="cb10-59">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> temp_input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-60">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>SessionGetInputName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> allocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>temp_input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-61">        input_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-62"></span>
<span id="cb10-63">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> temp_output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-64">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>SessionGetOutputName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> allocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>temp_output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-65">        output_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> temp_output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-66"></span>
<span id="cb10-67">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store image dimensions and prepare the input data container</span></span>
<span id="cb10-68">        input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-69">        input_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-70">        n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-71">        input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-72"></span>
<span id="cb10-73">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model loaded successfully."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-74">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-75">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>exception<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-76">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle standard exceptions and return their messages</span></span>
<span id="cb10-77">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> e<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>what<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb10-78">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(...)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-80">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle all other exceptions</span></span>
<span id="cb10-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"An unknown error occurred while loading the model."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-82">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-83"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>The function sets up the ONNX Runtime environment based on the specified execution provider. It then loads the model, fetches the names of input and output tensors, and prepares the input data structure. Proper exception handling ensures that any issues encountered get passed back to the Unity application.</p>
</section>
</section>
<section id="performing-inference" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference">Performing Inference</h2>
<p>Once the ONNX model is loaded, the next step is to use this model for inference. Inference refers to inputting data (in our case, an image) into the model and obtaining the predicted output.</p>
<section id="the-performinference-function" class="level3">
<h3 class="anchored" data-anchor-id="the-performinference-function">The <code>PerformInference</code> Function</h3>
<p>This function carries out the steps of preprocessing the input image, performing inference, and then storing the raw output in an array passed from Unity:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Perform inference using the loaded ONNX model.</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image_data"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Raw image data as bytes.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"output_array"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Array to store the inferred results.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"length"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Length of the output_array.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb11-8">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> PerformInference<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>byte<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-9"></span>
<span id="cb11-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Preprocessing: Normalize and restructure the image data</span></span>
<span id="cb11-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n_pixels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-13">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Normalize pixel values to [0, 1] and reorder channels</span></span>
<span id="cb11-14">            input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-17"></span>
<span id="cb11-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the names of input and output tensors for inference</span></span>
<span id="cb11-19">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>c_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-20">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>c_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-21"></span>
<span id="cb11-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the shape of the input tensor</span></span>
<span id="cb11-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int64_t</span> input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb11-24"></span>
<span id="cb11-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a memory info instance for CPU allocation</span></span>
<span id="cb11-26">    OrtMemoryInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-27">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateCpuMemoryInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>OrtArenaAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> OrtMemTypeDefault<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-28"></span>
<span id="cb11-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the processed image data into an ONNX tensor format</span></span>
<span id="cb11-30">    OrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-31">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateTensorWithDataAsOrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb11-32">        memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb11-33">        input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>input_tensor</span>
<span id="cb11-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-35"></span>
<span id="cb11-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free the memory info after usage</span></span>
<span id="cb11-37">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseMemoryInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-38"></span>
<span id="cb11-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference using the ONNX Runtime</span></span>
<span id="cb11-40">    OrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-41">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Run<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">nullptr</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> OrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)&amp;</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-42"></span>
<span id="cb11-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If inference fails, release resources and return</span></span>
<span id="cb11-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-45">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-47">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-48"></span>
<span id="cb11-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract data from the output tensor</span></span>
<span id="cb11-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-51">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetTensorMutableData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**)&amp;</span>out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-52"></span>
<span id="cb11-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the inference results to the provided output array</span></span>
<span id="cb11-54">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>memcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb11-55"></span>
<span id="cb11-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release resources associated with the tensors</span></span>
<span id="cb11-57">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-58">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-59"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>That takes care of the code for our plugin. In the next section, we will compile our project as a DLL.</p>
</section>
</section>
<section id="building-the-project" class="level2">
<h2 class="anchored" data-anchor-id="building-the-project">Building the Project</h2>
<p>Now that we’ve completed the code for the plugin, we are ready to build our project. Follow the steps below to compile the DLL.</p>
<section id="compiling-the-code" class="level3">
<h3 class="anchored" data-anchor-id="compiling-the-code">Compiling the Code</h3>
<p>Open the Build menu at the top of the Visual Studio window and click Build Solution. This action will compile the project and generate the necessary output files in the project directory. Visual Studio will create a new <code>x64</code> folder in the project directory containing the DLL files.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-build-solution.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="accessing-the-build-output" class="level3">
<h3 class="anchored" data-anchor-id="accessing-the-build-output">Accessing the Build Output</h3>
<p>To locate the compiled application, right-click the project name in the <code>Solution Explorer</code> panel and select <code>Open Folder in File Explorer</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-open-folder-in-explorer.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the new File Explorer window, go to the parent folder and open the <code>x64 → Release</code> subfolder. Here, we should see the following DLL files:</p>
<ul>
<li><code>DirectML.dll</code></li>
<li><code>onnxruntime.dll</code></li>
<li><code>UnityONNXInferenceCVPlugin.dll</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/images/visual-studio-project-folder-x64-release-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We’ll need to copy the three DLL files in the Release folder into a Unity project’s <code>Assets/Plugings/x86_64</code> folder.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on building an ONNX Runtime plugin for Unity! The combination of Unity and ONNX opens up many possibilities, from AR/VR applications with real-time object recognition to simulations with dynamic behavior influenced by neural network outputs.</p>
<p>Remember, this guide is just the foundation. You may need to expand and customize the functionalities of this plugin further for more advanced projects.</p>
<p>Check out the <a href="./unity-integration">follow-up post</a> to learn how to integrate the plugin into a Unity project to perform real-time object detection with a YOLOX model.</p>
</section>
<section id="recommended-tutorials" class="level2">
<h2 class="anchored" data-anchor-id="recommended-tutorials">Recommended Tutorials</h2>
<ul>
<li><a href="./unity-integration/"><strong>Real-Time Object Detection in Unity with ONNX Runtime and DirectML</strong></a>: Learn how to integrate a native plugin in the Unity game engine to perform real-time object detection with ONNX Runtime.</li>
</ul>


</section>

 ]]></description>
  <category>onnx</category>
  <category>directml</category>
  <category>unity</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/unity-onnxruntime-cv-plugin-tutorial/index.html</guid>
  <pubDate>Thu, 19 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Integrating OpenCV with Visual Studio C++ Projects on Windows</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Obtaining OpenCV: GitHub Download</li>
<li>Creating a Console App Project</li>
<li>Configuring for Release Build in Visual Studio</li>
<li>Setting Up Include Directories</li>
<li>Integrating Linker Dependencies</li>
<li>Defining Post-Build Events</li>
<li>Incorporating OpenCV in Our C++ Code</li>
<li>Building and Running the Project</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this beginner-friendly tutorial, I’ll walk you through integrating <a href="https://opencv.org/">OpenCV</a> with your Visual Studio C++ projects on Windows. OpenCV (Open Source Computer Vision Library) is one of the most popular and mature libraries for computer vision. It provides tools and functionality to process and analyze images, videos, and more, which are invaluable for many applications, from facial recognition to augmented reality.</p>
<p>I’ll guide you step-by-step, from downloading the latest OpenCV release from GitHub to embedding it within a Visual Studio C++ project. As a practical demonstration, we’ll create a straightforward application that loads an image file and showcases it in a new window. By the end of this guide, you’ll know how to integrate OpenCV into other Visual Studio C++ projects.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>This post assumes <a href="https://visualstudio.microsoft.com/downloads/">Visual Studio</a> is present on your system and has the <code>Desktop Development with C++</code> workload installed.</p>
</div>
</div>
</section>
<section id="obtaining-opencv-github-download" class="level2">
<h2 class="anchored" data-anchor-id="obtaining-opencv-github-download">Obtaining OpenCV: GitHub Download</h2>
<p>In this section, we’ll download OpenCV from its official GitHub repository and extract it for use in our Visual Studio project.</p>
<section id="opencv-github-download" class="level3">
<h3 class="anchored" data-anchor-id="opencv-github-download">OpenCV GitHub Download</h3>
<p>At the time of writing, the latest version of OpenCV was 4.8.1, which is available at the link below:</p>
<ul>
<li><a href="https://github.com/opencv/opencv/releases/tag/4.8.1">OpenCV 4.8.1</a></li>
</ul>
<p>On the release page, click <code>opencv-4.8.1-windows.exe</code> in the Assets list to download the executable.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/opencv_github_download_executable.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Run the executable once it finishes downloading.</p>
</section>
<section id="windows-defender-smartscreen-warning" class="level3">
<h3 class="anchored" data-anchor-id="windows-defender-smartscreen-warning">Windows Defender SmartScreen Warning</h3>
<p>You might get a warning from Windows that the executable is an unrecognized app. We can bypass this by clicking the <code>More info</code> text, then the <code>Run anyway</code> button.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/windows-defender-smartscreen-warning.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/windows-defender-smartscreen-warning-run-anyway.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="select-extraction-location" class="level3">
<h3 class="anchored" data-anchor-id="select-extraction-location">Select Extraction Location</h3>
<p>After bypassing the security warning, the executable will prompt us to select a location to extract the opencv folder. We must give Visual Studio this location to access OpenCV’s functionality. I tend to place my C++ dependencies in a dedicated folder for consistency.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/opencv-select-extraction-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="verify-the-extraction" class="level3">
<h3 class="anchored" data-anchor-id="verify-the-extraction">Verify the Extraction</h3>
<p>Once the extraction is complete, navigate to the chosen directory to ensure the OpenCV files are present and organized correctly. Inside the opencv folder, we can see a build and a source folder. Everything we need is in the build folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/opencv-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>You’ve successfully downloaded and extracted OpenCV from GitHub. Now, we can integrate this library into a Visual Studio project.</p>
</section>
</section>
<section id="creating-a-console-app-project" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-console-app-project">Creating a Console App Project</h2>
<p>In this section, we’ll create a simple C++ Console Application project.</p>
<section id="launching-visual-studio" class="level3">
<h3 class="anchored" data-anchor-id="launching-visual-studio">Launching Visual Studio</h3>
<p>Begin by opening Visual Studio. On the welcome screen, locate the <code>Get started</code> section and choose <code>Create a new project</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-create-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="selecting-the-project-type" class="level3">
<h3 class="anchored" data-anchor-id="selecting-the-project-type">Selecting the Project Type</h3>
<p>We’ll use the C++ <code>Console App</code> template for our project. Select the template from the list and click <code>Next</code> to proceed.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-new-c++-console-app-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="naming-and-locating-your-project" class="level3">
<h3 class="anchored" data-anchor-id="naming-and-locating-your-project">Naming and Locating Your Project</h3>
<p>Choose an appropriate name and location for the project and click the <code>Create</code> button. By default, the executable file will use the project name.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-choose-opencv-project-name-and-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="configuring-for-release-build-in-visual-studio" class="level2">
<h2 class="anchored" data-anchor-id="configuring-for-release-build-in-visual-studio">Configuring for Release Build in Visual Studio</h2>
<p>Once the project opens in Visual Studio, we must configure it for Release build. At the top of the window, open the Solution Configurations dropdown menu and select <code>Release</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-switch-to-release.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="setting-up-include-directories" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-include-directories">Setting Up Include Directories</h2>
<p>For our Visual Studio project to leverage OpenCV, it must be aware of the OpenCV library locations. By setting up include directories, we inform Visual Studio of OpenCV’s whereabouts, allowing us to access its API.</p>
<section id="navigating-to-the-project-properties" class="level3">
<h3 class="anchored" data-anchor-id="navigating-to-the-project-properties">Navigating to the Project Properties</h3>
<p>Right-click the project name in the Solution Explorer panel.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-solution-explorer-select-project-name.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Then, select the <code>Properties</code> option in the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-open-properties.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="accessing-the-include-directories" class="level3">
<h3 class="anchored" data-anchor-id="accessing-the-include-directories">Accessing the Include Directories</h3>
<p>In the Properties Window, open on the <code>C/C++</code> dropdown. Select the <code>Additional Include Directories</code> section and click <code>&lt;Edit..&gt;</code> in the dropdown.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-open-additional-include-directories.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="incorporating-opencv-path" class="level3">
<h3 class="anchored" data-anchor-id="incorporating-opencv-path">Incorporating OpenCV Path</h3>
<p>Add the path for the following folder, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenCV library, and click OK.</p>
<ul>
<li><code>&lt;parent-folder-path&gt;\opencv\build\include</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-add-additional-include-directories.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With this setup, Visual Studio now knows where to find OpenCV.</p>
</section>
</section>
<section id="integrating-linker-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="integrating-linker-dependencies">Integrating Linker Dependencies</h2>
<p>Now that we’ve directed Visual Studio to the OpenCV includes, we must specify the necessary linker dependencies. These dependencies ensure the compiler knows which library files to consider during the build process.</p>
<section id="navigating-to-linker-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="navigating-to-linker-dependencies">Navigating to Linker Dependencies</h3>
<p>Open the Linker dropdown in the Properties window and select Input. Select Additional Dependencies and click <code>&lt;Edit..&gt;</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-linker-additional-dependencies.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="specifying-the-opencv-library-path" class="level3">
<h3 class="anchored" data-anchor-id="specifying-the-opencv-library-path">Specifying the OpenCV Library Path</h3>
<p>Add the following path, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenCV library, and click <code>OK</code>.</p>
<ul>
<li><code>&lt;parent-folder-path&gt;\opencv\build\x64\vc16\lib\*.lib</code></li>
</ul>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The path to the <code>.lib</code> files can change between OpenCV versions. Verify the library path for the specific OpenCV version you are using.</p>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-linker-add-additional-dependencies.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With this configuration in place, Visual Studio has all the necessary references to incorporate OpenCV functionality into our project.</p>
</section>
</section>
<section id="defining-post-build-events" class="level2">
<h2 class="anchored" data-anchor-id="defining-post-build-events">Defining Post-Build Events</h2>
<p>Post-build events are crucial for automating specific tasks that should occur right after a successful build. In our case, we must ensure that the necessary DLL files from OpenCV get copied to the project’s build directory. Setting this up will save you the manual effort of copy-pasting files after every build.</p>
<section id="identifying-the-necessary-dll" class="level3">
<h3 class="anchored" data-anchor-id="identifying-the-necessary-dll">Identifying the Necessary DLL</h3>
<p>Our executable file will depend on the following DLL file included with OpenCV.</p>
<ul>
<li><code>opencv_world481.dll</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/get-opencv-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The name and path of the <code>.dll</code> file can change between OpenCV versions. Verify the DLL file path for the specific OpenCV version you are using.</p>
</div>
</div>
</section>
<section id="setting-up-post-build-events" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-post-build-events">Setting up Post-Build Events</h3>
<p>We can add a post-build event in Visual Studio to automatically copy these DLL files to the build folder for the project at compile time. Open the Build Events dropdown in the Properties window and select Post-Build Event. Select Command Line and click <code>&lt;Edit..&gt;</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-post-build-event-edit-command-line-events.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="inputting-the-xcopy-command" class="level3">
<h3 class="anchored" data-anchor-id="inputting-the-xcopy-command">Inputting the Xcopy Command</h3>
<p>Add the following command, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenCV library, and click OK.</p>
<ul>
<li><pre class="text"><code>  xcopy &lt;parent-folder-path&gt;\opencv\build\x64\vc16\bin\opencv_world481.dll $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></pre></li>
</ul>
<p>This command tells Visual Studio to copy the OpenCV DLL into the appropriate build directory of your project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-post-build-event-add-xcopy-commands.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="saving-project-configurations" class="level3">
<h3 class="anchored" data-anchor-id="saving-project-configurations">Saving Project Configurations</h3>
<p>To finalize all the changes we’ve made, click on the Apply button. With that done, you can safely close out of the Properties window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-properties-apply-changes.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="incorporating-opencv-in-our-c-code" class="level2">
<h2 class="anchored" data-anchor-id="incorporating-opencv-in-our-c-code">Incorporating OpenCV in Our C++ Code</h2>
<p>Now that our Visual Studio project can access OpenCV, it’s time to dive into the code. In this section, we’ll write a simple C++ program that leverages OpenCV to read an image file and display it in a window.</p>
<section id="include-opencv-headers" class="level3">
<h3 class="anchored" data-anchor-id="include-opencv-headers">Include OpenCV Headers</h3>
<p>Remove the default headers in the C++ file and add the OpenCV header:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;opencv2/opencv.hpp&gt;</span></span></code></pre></div>
</section>
<section id="basic-program-structure" class="level3">
<h3 class="anchored" data-anchor-id="basic-program-structure">Basic Program Structure</h3>
<p>Our <code>main</code> function begins by checking if the user provided an image path as an argument:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>argc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if an argument is provided</span></span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cerr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> &lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Usage: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" &lt;path_to_image&gt;"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loading-the-image" class="level3">
<h3 class="anchored" data-anchor-id="loading-the-image">Loading the Image</h3>
<p>We load the image from the provided path using the <a href="https://docs.opencv.org/4.x/d4/da8/group__imgcodecs.html#ga288b8b3da0892bd651fce07b3bbd3a56"><code>cv::imread</code></a> function:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the image using the path provided as an argument</span></span>
<span id="cb4-2">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Mat image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>imread<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span></code></pre></div>
<p>It’s essential to verify whether the image loaded successfully:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>empty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the image was loaded successfully</span></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cerr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> &lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Could not open or find the image!"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="displaying-the-image" class="level3">
<h3 class="anchored" data-anchor-id="displaying-the-image">Displaying the Image</h3>
<p>Once our image is successfully loaded, we create a window and display the image using OpenCV functions. We use <a href="https://docs.opencv.org/4.x/d7/dfc/group__highgui.html#ga5afdf8410934fd099df85c75b2e0888b"><code>cv::namedWindow</code></a> to create a window with the given name and <a href="https://docs.opencv.org/4.x/d7/dfc/group__highgui.html#ga453d42fe4cb60e5723281a89973ee563"><code>cv::imshow</code></a> to display our image in that window:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb6-1">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>namedWindow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenCV Test"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>WINDOW_AUTOSIZE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-2">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>imshow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenCV Test"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="await-user-interaction" class="level3">
<h3 class="anchored" data-anchor-id="await-user-interaction">Await User Interaction</h3>
<p>Finally, we use the <a href="https://docs.opencv.org/4.x/d7/dfc/group__highgui.html#gafa15c0501e0ddd90918f17aa071d3dd0"><code>cv::waitKey(0)</code></a> function to pause the program and wait indefinitely for the user to press a key. That ensures our image window remains open until we choose to close it:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb7-1">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>waitKey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
</section>
<section id="complete-code" class="level3">
<h3 class="anchored" data-anchor-id="complete-code">Complete Code</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb8-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;opencv2/opencv.hpp&gt;</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> argc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb8-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>argc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if an argument is provided</span></span>
<span id="cb8-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-7">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cerr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> &lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Usage: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" &lt;path_to_image&gt;"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the image using the path provided as an argument</span></span>
<span id="cb8-12">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Mat image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>imread<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>argv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb8-13"></span>
<span id="cb8-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>empty<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the image was loaded successfully</span></span>
<span id="cb8-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-16">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cerr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> &lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error: Could not open or find the image!"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-19"></span>
<span id="cb8-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Display the image in a window named "OpenCV Test"</span></span>
<span id="cb8-21">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>namedWindow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenCV Test"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>WINDOW_AUTOSIZE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-22">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>imshow<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenCV Test"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-23"></span>
<span id="cb8-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wait for a key press indefinitely</span></span>
<span id="cb8-25">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>waitKey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-26"></span>
<span id="cb8-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="building-and-running-the-project" class="level2">
<h2 class="anchored" data-anchor-id="building-and-running-the-project">Building and Running the Project</h2>
<p>Having integrated OpenCV into our code, we are ready to build and test our project. Follow the steps below to compile, run, and validate the Visual Studio C++ project.</p>
<section id="compiling-the-code" class="level3">
<h3 class="anchored" data-anchor-id="compiling-the-code">Compiling the Code</h3>
<p>Open the Build menu at the top of the Visual Studio window and click <code>Build Solution</code>. This action will compile the project and generate the necessary output files in the project directory. Visual Studio will create a new <code>x64</code> folder in the project directory containing the executable file and the DLL file it depends on.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-build-solution.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="accessing-the-build-output" class="level3">
<h3 class="anchored" data-anchor-id="accessing-the-build-output">Accessing the Build Output</h3>
<p>To locate the compiled application, right-click the project name in the Solution Explorer panel and select Open Folder in File Explorer from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-open-folder-in-explorer.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the new File Explorer window, go to the parent folder and open the x64 → Release subfolder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-project-folder-x64-release-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="preparing-an-image" class="level3">
<h3 class="anchored" data-anchor-id="preparing-an-image">Preparing an Image</h3>
<p>Next, we’ll need an image to test the application. I’ll use this photo of the polar nights from Pexels, a free stock photo site.</p>
<ul>
<li><a href="https://www.pexels.com/photo/colorful-polar-lights-over-snowy-mountain-1559817/">Colorful polar lights over snowy mountain by Tobias Bjørkli</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/pexels-tobias-bjørkli-1559817.jpg" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="running-the-application" class="level3">
<h3 class="anchored" data-anchor-id="running-the-application">Running the Application</h3>
<p>Now, we can open a command prompt and run the application. Select the address bar in the File Explorer window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-project-folder-x64-release-folder-select-file-path.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Type <code>cmd</code> into the text box and press Enter.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/visual-studio-opencv-project-folder-x64-release-folder-launch-cmd.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the command prompt opened in the correct directory, run the application by typing its name followed by the image’s path:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">OpenCVSimpleConsoleApp.exe</span> pexels-tobias-bjørkli-1559817.jpg</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/cmd-enter-executable-name-and-image-file-path.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="viewing-the-result" class="level3">
<h3 class="anchored" data-anchor-id="viewing-the-result">Viewing the Result</h3>
<p>After executing the command, the selected image should materialize in a new window, validating that the program runs as intended and that the OpenCV integration was successful.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/images/opencv-test-window.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Congratulations! You’ve successfully set up, built, and run a C++ project in Visual Studio integrated with OpenCV.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this tutorial, we’ve walked through the process of integrating OpenCV with a Visual Studio C++ project, from obtaining the library to displaying an image using the OpenCV API. This foundational knowledge will be instrumental as you delve deeper into computer vision projects leveraging OpenCV’s capabilities. With your new skills, a plethora of advanced applications await exploration.</p>


</section>

 ]]></description>
  <category>opencv</category>
  <category>visual-studio</category>
  <category>getting-started</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/opencv-visual-studio-getting-started-tutorial/windows/index.html</guid>
  <pubDate>Tue, 10 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Exporting timm Image Classifiers from Fastai to TorchScript</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/torchscript-export/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/fastai-train-image-classifier-series.html"><strong>Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Getting Started with the Code</li>
<li>Importing the Required Dependencies</li>
<li>Loading the Checkpoint Data</li>
<li>Exporting the Model to TorchScript</li>
<li>Performing Inference with the TorchScript Module</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on fine-tuning image classifiers with fastai and the timm library! <a href="../">Previously</a>, we demonstrated how to fine-tune a ResNet18 model from the timm library with fastai by creating a hand gesture classifier. This tutorial builds on that by showing how to export the underlying PyTorch model to <a href="https://pytorch.org/docs/stable/jit.html">TorchScript</a> for seamless deployment across various platforms and optimized inference.</p>
<p>Exporting a PyTorch model to TorchScript offers performance optimization through <a href="https://www.freecodecamp.org/news/just-in-time-compilation-explained/">JIT compilation</a>, ensuring faster and more efficient model execution. This conversion also enhances deployment flexibility by enabling platform independence, especially in environments where Python isn’t available, and ensures consistent behavior across diverse platforms. Additionally, TorchScript provides robustness with static typing and boosts security by decoupling from the Python runtime.</p>
<p>Additionally, we’ll wrap the PyTorch model with the required preprocessing and post-processing steps to include them in the TorchScript module. By the end of this tutorial, you’ll have a deployable TorchScript ResNet18 model compatible with various environments and which contains all crucial processing steps for real-world use.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../">Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners</a></li>
</ul>
</div>
</div>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-torchscript-export.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-torchscript-export-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>First, we will import the necessary Python dependencies into our Jupyter Notebook.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb1-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb1-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb1-5"></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file</span>
<span id="cb1-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy</span></span>
<span id="cb1-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb1-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb1-15"></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb1-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb1-18"></span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb1-20"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-21"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nn</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import fastai function to load a saved learner object </span></span>
<span id="cb1-24"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.learner <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_learner</span></code></pre></div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>Next, we will set the folder locations for our project and training session with the exported Learner object.</p>
<section id="set-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="set-the-directory-paths">Set the Directory Paths</h3>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb2-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"fastai-timm-image-classifier"</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb2-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb2-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb2-11">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2023-10-06_11-17-36"</span>)</span>
<span id="cb2-12"></span>
<span id="cb2-13">pd.Series({</span>
<span id="cb2-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir,</span>
<span id="cb2-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb2-16">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_b16e5">
<thead>
</thead>
<tbody>
<tr>
<th id="T_b16e5_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_b16e5_row0_col0" class="data row0 col0">
fastai-timm-image-classifier
</td>
</tr>
<tr>
<th id="T_b16e5_level0_row1" class="row_heading level0 row1">
Checkpoint Directory:
</th>
<td id="T_b16e5_row1_col0" class="data row1 col0">
fastai-timm-image-classifier/2023-10-06_11-17-36
</td>
</tr>
</tbody>

</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the class labels and normalization stats and get the fine-tuned ResNet18-D model from the saved Learner object.</p>
<section id="load-the-class-labels" class="level3">
<h3 class="anchored" data-anchor-id="load-the-class-labels">Load the Class Labels</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The class labels path</span></span>
<span id="cb3-2">class_labels_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*classes.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON class labels data</span></span>
<span id="cb3-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb3-6">        class_labels_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the list of classes</span></span>
<span id="cb3-9">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_labels_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classes'</span>]</span>
<span id="cb3-10"></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the list of classes</span></span>
<span id="cb3-12">pd.DataFrame(class_names)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
call
</td>
</tr>
<tr>
<th>
1
</th>
<td>
dislike
</td>
</tr>
<tr>
<th>
2
</th>
<td>
fist
</td>
</tr>
<tr>
<th>
3
</th>
<td>
four
</td>
</tr>
<tr>
<th>
4
</th>
<td>
like
</td>
</tr>
<tr>
<th>
5
</th>
<td>
mute
</td>
</tr>
<tr>
<th>
6
</th>
<td>
no_gesture
</td>
</tr>
<tr>
<th>
7
</th>
<td>
ok
</td>
</tr>
<tr>
<th>
8
</th>
<td>
one
</td>
</tr>
<tr>
<th>
9
</th>
<td>
palm
</td>
</tr>
<tr>
<th>
10
</th>
<td>
peace
</td>
</tr>
<tr>
<th>
11
</th>
<td>
peace_inverted
</td>
</tr>
<tr>
<th>
12
</th>
<td>
rock
</td>
</tr>
<tr>
<th>
13
</th>
<td>
stop
</td>
</tr>
<tr>
<th>
14
</th>
<td>
stop_inverted
</td>
</tr>
<tr>
<th>
15
</th>
<td>
three
</td>
</tr>
<tr>
<th>
16
</th>
<td>
three2
</td>
</tr>
<tr>
<th>
17
</th>
<td>
two_up
</td>
</tr>
<tr>
<th>
18
</th>
<td>
two_up_inverted
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="load-the-normalization-statistics" class="level3">
<h3 class="anchored" data-anchor-id="load-the-normalization-statistics">Load the Normalization Statistics</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The normalization stats path</span></span>
<span id="cb4-2">norm_stats_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'norm_stats.json'</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the normalization stats from the JSON file</span></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(norm_stats_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb4-6">    norm_stats_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the dictionary to a tuple</span></span>
<span id="cb4-9">norm_stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (norm_stats_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>], norm_stats_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"std_dev"</span>])</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the mean and standard deviation</span></span>
<span id="cb4-12">pd.DataFrame(norm_stats)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
<th>
1
</th>
<th>
2
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
0.485
</td>
<td>
0.456
</td>
<td>
0.406
</td>
</tr>
<tr>
<th>
1
</th>
<td>
0.229
</td>
<td>
0.224
</td>
<td>
0.225
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="load-the-learner-checkpoint" class="level3">
<h3 class="anchored" data-anchor-id="load-the-learner-checkpoint">Load the Learner Checkpoint</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The learner checkpoint path</span></span>
<span id="cb5-2">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.pkl'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the learner checkpoint onto the CPU</span></span>
<span id="cb5-5">learner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_learner(checkpoint_path)</span></code></pre></div>
</section>
<section id="get-the-finetuned-model" class="level3">
<h3 class="anchored" data-anchor-id="get-the-finetuned-model">Get the Finetuned Model</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the fine-tuned model from the exported Learner object</span></span>
<span id="cb6-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_learner(checkpoint_path).model</span></code></pre></div>
</section>
</section>
<section id="exporting-the-model-to-torchscript" class="level2">
<h2 class="anchored" data-anchor-id="exporting-the-model-to-torchscript">Exporting the Model to TorchScript</h2>
<p>Before exporting the model, we will wrap it with the preprocessing and post-processing steps. These steps will be included in the TorchScript module, reducing the code we need to write when deploying the model to other platforms.</p>
<section id="prepare-the-model-for-inference" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-model-for-inference">Prepare the Model for Inference</h3>
<p>Whenever we make predictions with the model, we must normalize the input data and pass the model output through a <a href="https://pytorch.org/docs/stable/generated/torch.nn.Softmax.html">Softmax</a> function. We can define a wrapper class that automatically performs these steps.</p>
<p>Additionally, we can include options to scale pixel data from the range [0,255] to[0,1] and set the model to expect input tensors in channels-last format. These settings can be helpful when deploying to platforms where tensor operations are less convenient.</p>
<section id="define-model-export-wrapper" class="level4">
<h4 class="anchored" data-anchor-id="define-model-export-wrapper">Define model export wrapper</h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> InferenceWrapper(nn.Module):</span>
<span id="cb7-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, model, normalize_mean, normalize_std, scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb7-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb7-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model</span>
<span id="cb7-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.register_buffer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalize_mean"</span>, normalize_mean)</span>
<span id="cb7-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.register_buffer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalize_std"</span>, normalize_std)</span>
<span id="cb7-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.scale_inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scale_inp</span>
<span id="cb7-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.channels_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> channels_last</span>
<span id="cb7-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.softmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Softmax(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb7-10"></span>
<span id="cb7-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> preprocess_input(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb7-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.scale_inp:</span>
<span id="cb7-13">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span></span>
<span id="cb7-14"></span>
<span id="cb7-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.channels_last:</span>
<span id="cb7-16">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb7-17"></span>
<span id="cb7-18">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.normalize_mean) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.normalize_std</span>
<span id="cb7-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span>
<span id="cb7-20"></span>
<span id="cb7-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb7-22">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.preprocess_input(x)</span>
<span id="cb7-23">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model(x)</span>
<span id="cb7-24">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.softmax(x)</span>
<span id="cb7-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span></code></pre></div>
</section>
<section id="wrap-model-with-preprocessing-and-post-processing-steps" class="level4">
<h4 class="anchored" data-anchor-id="wrap-model-with-preprocessing-and-post-processing-steps">Wrap model with preprocessing and post-processing steps</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the normalization mean and standard deviation</span></span>
<span id="cb8-2">mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-3">std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the model to evaluation mode</span></span>
<span id="cb8-6">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wrap the model with preprocessing and post-processing steps</span></span>
<span id="cb8-9">wrapped_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> InferenceWrapper(model, </span>
<span id="cb8-10">                                 mean_tensor, </span>
<span id="cb8-11">                                 std_tensor, </span>
<span id="cb8-12">                                 scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale input values from the rang [0,255] to [0,1]</span></span>
<span id="cb8-13">                                 channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Have the model expect input in channels-last format</span></span>
<span id="cb8-14">                                )</span></code></pre></div>
</section>
</section>
<section id="prepare-the-input-tensor" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor">Prepare the Input Tensor</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div>
</section>
<section id="export-the-model-to-torchscript" class="level3">
<h3 class="anchored" data-anchor-id="export-the-model-to-torchscript">Export the Model to TorchScript</h3>
<p>We can export the model using the <a href="https://pytorch.org/docs/stable/generated/torch.jit.trace.html#torch.jit.trace"><code>torch.jit.trace()</code></a> function. This function performs a single pass through the model and records all operations to create a static computation graph representing the model’s forward pass.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set a filename for the TorchScript module</span></span>
<span id="cb10-2">torchscript_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_labels_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-classes'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.pt"</span></span>
<span id="cb10-3"></span>
<span id="cb10-4">traced_script_module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.jit.trace(wrapped_model.cpu(), input_tensor)</span>
<span id="cb10-5">traced_script_module.save(torchscript_file_path)</span></code></pre></div>
</section>
</section>
<section id="performing-inference-with-the-torchscript-module" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference-with-the-torchscript-module">Performing Inference with the TorchScript Module</h2>
<p>Now that we have our TorchScript module, it’s time to compare its performance with the original PyTorch model.</p>
<section id="load-the-torchscript-module" class="level3">
<h3 class="anchored" data-anchor-id="load-the-torchscript-module">Load the TorchScript Module</h3>
<p>We can load the saved TorchScript module using the <a href="https://pytorch.org/docs/stable/generated/torch.jit.load.html#torch.jit.load"><code>torch.jit.load()</code></a> function.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the TorchScript module</span></span>
<span id="cb11-2">traced_script_module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.jit.load(torchscript_file_path)</span></code></pre></div>
</section>
<section id="select-a-test-image" class="level3">
<h3 class="anchored" data-anchor-id="select-a-test-image">Select a Test Image</h3>
<p>Let’s use the same test image and input size from the previous tutorial to compare the results with the PyTorch model.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">test_img_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pexels-elina-volkova-16191659.jpg"</span></span>
<span id="cb12-2">test_img_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/cj-mills/pexel-hand-gesture-test-images/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb12-3"></span>
<span id="cb12-4">download_file(test_img_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb12-5"></span>
<span id="cb12-6">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_img_name)</span>
<span id="cb12-7">display(test_img)</span>
<span id="cb12-8"></span>
<span id="cb12-9">target_cls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mute"</span></span>
<span id="cb12-10"></span>
<span id="cb12-11">pd.Series({</span>
<span id="cb12-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test Image Size:"</span>: test_img.size, </span>
<span id="cb12-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Target Class:"</span>: target_cls</span>
<span id="cb12-14">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/torchscript-export/images/output_31_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_b113f">
<thead>
</thead>
<tbody>
<tr>
<th id="T_b113f_level0_row0" class="row_heading level0 row0">
Test Image Size:
</th>
<td id="T_b113f_row0_col0" class="data row0 col0">
(637, 960)
</td>
</tr>
<tr>
<th id="T_b113f_level0_row1" class="row_heading level0 row1">
Target Class:
</th>
<td id="T_b113f_row1_col0" class="data row1 col0">
mute
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="prepare-the-test-image" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-test-image">Prepare the Test Image</h3>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set test image size</span></span>
<span id="cb13-2">test_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize image without cropping to multiple of the max stride</span></span>
<span id="cb13-5">input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(test_img.copy(), target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_sz)</span>
<span id="cb13-6"></span>
<span id="cb13-7">display(input_img)</span>
<span id="cb13-8"></span>
<span id="cb13-9">pd.Series({</span>
<span id="cb13-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Image Size:"</span>: input_img.size</span>
<span id="cb13-11">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/torchscript-export/images/output_33_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_a5232">
<thead>
</thead>
<tbody>
<tr>
<th id="T_a5232_level0_row0" class="row_heading level0 row0">
Input Image Size:
</th>
<td id="T_a5232_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="prepare-the-input-tensor-1" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor-1">Prepare the Input Tensor</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the existing input image to a PyTorch tensor</span></span>
<span id="cb14-2">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.Tensor(np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span></code></pre></div>
</section>
<section id="compute-the-predictions" class="level3">
<h3 class="anchored" data-anchor-id="compute-the-predictions">Compute the Predictions</h3>
<p>Now, we can see how the TorchScript module compares with the PyTorch model.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># outputs = session.run(None, {"input": input_tensor_np})[0]</span></span>
<span id="cb15-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb15-4">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> traced_script_module(input_tensor)</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the highest confidence score</span></span>
<span id="cb15-7">confidence_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb15-8"></span>
<span id="cb15-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class index with the highest confidence score and convert it to the class name</span></span>
<span id="cb15-10">pred_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_names[outputs.argmax()]</span>
<span id="cb15-11"></span>
<span id="cb15-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb15-13">display(test_img)</span>
<span id="cb15-14"></span>
<span id="cb15-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the prediction data in a Pandas Series for easy formatting</span></span>
<span id="cb15-16">pd.Series({</span>
<span id="cb15-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Size:"</span>: input_img.size,</span>
<span id="cb15-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Target Class:"</span>: target_cls,</span>
<span id="cb15-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class:"</span>: pred_class,</span>
<span id="cb15-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Score:"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>confidence_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span></span>
<span id="cb15-21">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/torchscript-export/images/output_38_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_6889d">
<thead>
</thead>
<tbody>
<tr>
<th id="T_6889d_level0_row0" class="row_heading level0 row0">
Input Size:
</th>
<td id="T_6889d_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
<tr>
<th id="T_6889d_level0_row1" class="row_heading level0 row1">
Target Class:
</th>
<td id="T_6889d_row1_col0" class="data row1 col0">
mute
</td>
</tr>
<tr>
<th id="T_6889d_level0_row2" class="row_heading level0 row2">
Predicted Class:
</th>
<td id="T_6889d_row2_col0" class="data row2 col0">
mute
</td>
</tr>
<tr>
<th id="T_6889d_level0_row3" class="row_heading level0 row3">
Confidence Score:
</th>
<td id="T_6889d_row3_col0" class="data row3 col0">
99.99%
</td>
</tr>
</tbody>

</table>
</div>
<p>The model predictions should be virtually identical to the PyTorch model.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>Don’t forget to download the TorchScript module from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</li>
</ol>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial! We previously fine-tuned a model from the timm library with fastai for hand gesture classification and now exported the underlying PyTorch model to TorchScript. With this conversion, you can deploy your model seamlessly across diverse platforms, ensuring optimized performance and enhanced portability for real-world applications.</p>
<p>If you found this guide helpful, consider sharing it with others.</p>


</section>

 ]]></description>
  <category>fastai</category>
  <category>libtorch</category>
  <category>image-classification</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/torchscript-export/index.html</guid>
  <pubDate>Sun, 08 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Exporting timm Image Classifiers from Fastai to ONNX</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/onnx-export/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/fastai-train-image-classifier-series.html"><strong>Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading the Checkpoint Data</li>
<li>Exporting the Model to ONNX</li>
<li>Performing Inference with ONNX Runtime</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on fine-tuning image classifiers with fastai and the timm library! <a href="../">Previously</a>, we demonstrated how to fine-tune a ResNet18-D model from the timm library with fastai by creating a hand gesture classifier. This tutorial builds on that by showing how to export the underlying PyTorch model to <a href="https://onnx.ai/">ONNX</a> and perform inference using <a href="https://onnxruntime.ai/docs/">ONNX Runtime</a>.</p>
<p>ONNX (Open Neural Network Exchange) is an open format to represent machine learning models and make them portable across various platforms. ONNX Runtime is a cross-platform inference accelerator that provides interfaces to hardware-specific libraries. By exporting our model to ONNX, we can deploy it to multiple devices and leverage hardware acceleration for faster inference.</p>
<p>Additionally, we’ll wrap the PyTorch model with the required preprocessing and post-processing steps to include them in the ONNX model. By the end of this tutorial, you will have an ONNX version of our ResNet18-D model that you can deploy to servers and edge devices using ONNX Runtime.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../">Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners</a></li>
</ul>
</div>
</div>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-onnx-export.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-onnx-export-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>We’ll need to add a few new libraries to our <a href="../#setting-up-your-python-environment">Python environment</a> for working with ONNX models.</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>onnx</code></td>
<td>This package provides a Python API for working with ONNX models. (<a href="https://pypi.org/project/onnx/">link</a>)</td>
</tr>
<tr class="even">
<td><code>onnxruntime</code></td>
<td>ONNX Runtime is a runtime accelerator for machine learning models. (<a href="https://onnxruntime.ai/">link</a>)</td>
</tr>
<tr class="odd">
<td><code>onnx-simplifier</code></td>
<td>This package helps simplify ONNX models. (<a href="https://pypi.org/project/onnx-simplifier/">link</a>)</td>
</tr>
</tbody>
</table>
<p>Run the following command to install these additional libraries:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install ONNX packages</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install onnx onnxruntime onnx-simplifier</span></code></pre></div>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>With our environment updated, we can dive into the code. First, we will import the necessary Python dependencies into our Jupyter Notebook.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file, get_source_code</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy</span></span>
<span id="cb2-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb2-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb2-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb2-20"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb2-21"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> nn</span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import fastai function to load a saved learner object </span></span>
<span id="cb2-24"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.learner <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> load_learner</span>
<span id="cb2-25"></span>
<span id="cb2-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ONNX dependencies</span></span>
<span id="cb2-27"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnx <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the onnx module</span></span>
<span id="cb2-28"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxsim <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> simplify <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the method to simplify ONNX models</span></span>
<span id="cb2-29"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnxruntime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ort <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the ONNX Runtime</span></span></code></pre></div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>In this section, we’ll set the folder locations for our project and training session with the exported Learner object.</p>
<section id="set-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="set-the-directory-paths">Set the Directory Paths</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb3-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"fastai-timm-image-classifier"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb3-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb3-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb3-11">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2023-10-06_11-17-36"</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13">pd.Series({</span>
<span id="cb3-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir,</span>
<span id="cb3-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb3-16">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_45505">
<thead>
</thead>
<tbody>
<tr>
<th id="T_45505_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_45505_row0_col0" class="data row0 col0">
fastai-timm-image-classifier
</td>
</tr>
<tr>
<th id="T_45505_level0_row1" class="row_heading level0 row1">
Checkpoint Directory:
</th>
<td id="T_45505_row1_col0" class="data row1 col0">
fastai-timm-image-classifier/2023-10-06_11-17-36
</td>
</tr>
</tbody>

</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the class labels and normalization stats and get the fine-tuned ResNet18-D model from the saved Learner object.</p>
<section id="load-the-class-labels" class="level3">
<h3 class="anchored" data-anchor-id="load-the-class-labels">Load the Class Labels</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The class labels path</span></span>
<span id="cb4-2">class_labels_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*classes.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON class labels data</span></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-6">        class_labels_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the list of classes</span></span>
<span id="cb4-9">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_labels_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classes'</span>]</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the list of classes</span></span>
<span id="cb4-12">pd.DataFrame(class_names)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
call
</td>
</tr>
<tr>
<th>
1
</th>
<td>
dislike
</td>
</tr>
<tr>
<th>
2
</th>
<td>
fist
</td>
</tr>
<tr>
<th>
3
</th>
<td>
four
</td>
</tr>
<tr>
<th>
4
</th>
<td>
like
</td>
</tr>
<tr>
<th>
5
</th>
<td>
mute
</td>
</tr>
<tr>
<th>
6
</th>
<td>
no_gesture
</td>
</tr>
<tr>
<th>
7
</th>
<td>
ok
</td>
</tr>
<tr>
<th>
8
</th>
<td>
one
</td>
</tr>
<tr>
<th>
9
</th>
<td>
palm
</td>
</tr>
<tr>
<th>
10
</th>
<td>
peace
</td>
</tr>
<tr>
<th>
11
</th>
<td>
peace_inverted
</td>
</tr>
<tr>
<th>
12
</th>
<td>
rock
</td>
</tr>
<tr>
<th>
13
</th>
<td>
stop
</td>
</tr>
<tr>
<th>
14
</th>
<td>
stop_inverted
</td>
</tr>
<tr>
<th>
15
</th>
<td>
three
</td>
</tr>
<tr>
<th>
16
</th>
<td>
three2
</td>
</tr>
<tr>
<th>
17
</th>
<td>
two_up
</td>
</tr>
<tr>
<th>
18
</th>
<td>
two_up_inverted
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="load-the-normalization-statistics" class="level3">
<h3 class="anchored" data-anchor-id="load-the-normalization-statistics">Load the Normalization Statistics</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The normalization stats path</span></span>
<span id="cb5-2">norm_stats_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'norm_stats.json'</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the normalization stats from the JSON file</span></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(norm_stats_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-6">    norm_stats_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the dictionary to a tuple</span></span>
<span id="cb5-9">norm_stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (norm_stats_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>], norm_stats_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"std_dev"</span>])</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the mean and standard deviation</span></span>
<span id="cb5-12">pd.DataFrame(norm_stats)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
<th>
1
</th>
<th>
2
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
0.485
</td>
<td>
0.456
</td>
<td>
0.406
</td>
</tr>
<tr>
<th>
1
</th>
<td>
0.229
</td>
<td>
0.224
</td>
<td>
0.225
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="load-the-learner-checkpoint" class="level3">
<h3 class="anchored" data-anchor-id="load-the-learner-checkpoint">Load the Learner Checkpoint</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The learner checkpoint path</span></span>
<span id="cb6-2">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.pkl'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the learner checkpoint onto the CPU</span></span>
<span id="cb6-5">learner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_learner(checkpoint_path)</span></code></pre></div>
</section>
<section id="load-the-finetuned-model" class="level3">
<h3 class="anchored" data-anchor-id="load-the-finetuned-model">Load the Finetuned Model</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the fine-tuned model from the exported Learner object</span></span>
<span id="cb7-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> load_learner(checkpoint_path).model</span></code></pre></div>
</section>
</section>
<section id="exporting-the-model-to-onnx" class="level2">
<h2 class="anchored" data-anchor-id="exporting-the-model-to-onnx">Exporting the Model to ONNX</h2>
<p>Before exporting the model, we will wrap it with the preprocessing and post-processing steps. These steps will be included in the ONNX model, reducing the code we need to write when deploying the model to other platforms.</p>
<section id="prepare-the-model-for-inference" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-model-for-inference">Prepare the Model for Inference</h3>
<p>Whenever we make predictions with the model, we must normalize the input data and pass the model output through a <a href="https://pytorch.org/docs/stable/generated/torch.nn.Softmax.html">Softmax</a> function. We can define a wrapper class that automatically performs these steps.</p>
<p>Additionally, we can include options to scale pixel data from the range <code>[0,255]</code> to <code>[0,1]</code> and set the model to expect input tensors in channels-last format. These settings can be helpful when deploying to platforms where tensor operations are less convenient.</p>
<section id="define-model-export-wrapper" class="level4">
<h4 class="anchored" data-anchor-id="define-model-export-wrapper">Define model export wrapper</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> InferenceWrapper(nn.Module):</span>
<span id="cb8-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, model, normalize_mean, normalize_std, scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>):</span>
<span id="cb8-3">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb8-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model</span>
<span id="cb8-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.register_buffer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalize_mean"</span>, normalize_mean)</span>
<span id="cb8-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.register_buffer(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalize_std"</span>, normalize_std)</span>
<span id="cb8-7">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.scale_inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scale_inp</span>
<span id="cb8-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.channels_last <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> channels_last</span>
<span id="cb8-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.softmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn.Softmax(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-10"></span>
<span id="cb8-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> preprocess_input(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb8-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.scale_inp:</span>
<span id="cb8-13">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span></span>
<span id="cb8-14"></span>
<span id="cb8-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.channels_last:</span>
<span id="cb8-16">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb8-17"></span>
<span id="cb8-18">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.normalize_mean) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.normalize_std</span>
<span id="cb8-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span>
<span id="cb8-20"></span>
<span id="cb8-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb8-22">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.preprocess_input(x)</span>
<span id="cb8-23">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.model(x)</span>
<span id="cb8-24">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.softmax(x)</span>
<span id="cb8-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span></code></pre></div>
</section>
<section id="wrap-model-with-preprocessing-and-post-processing-steps" class="level4">
<h4 class="anchored" data-anchor-id="wrap-model-with-preprocessing-and-post-processing-steps">Wrap model with preprocessing and post-processing steps</h4>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Default Settings</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Inverse</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the normalization mean and standard deviation</span></span>
<span id="cb9-2">mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-3">std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the model to evaluation mode</span></span>
<span id="cb9-6">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wrap the model with preprocessing and post-processing steps</span></span>
<span id="cb9-9">wrapped_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> InferenceWrapper(model, </span>
<span id="cb9-10">                                 mean_tensor, </span>
<span id="cb9-11">                                 std_tensor, </span>
<span id="cb9-12">                                 scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale input values from the rang [0,255] to [0,1]</span></span>
<span id="cb9-13">                                 channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Have the model expect input in channels-last format</span></span>
<span id="cb9-14">                                )</span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the normalization mean and standard deviation</span></span>
<span id="cb10-2">mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-3">std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-4"></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the model to evaluation mode</span></span>
<span id="cb10-6">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wrap the model with preprocessing and post-processing steps</span></span>
<span id="cb10-9">wrapped_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> InferenceWrapper(model, </span>
<span id="cb10-10">                                 mean_tensor, </span>
<span id="cb10-11">                                 std_tensor, </span>
<span id="cb10-12">                                 scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale input values from the rang [0,255] to [0,1]</span></span>
<span id="cb10-13">                                 channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Have the model expect input in channels-last format</span></span>
<span id="cb10-14">                                )</span></code></pre></div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled" title="Settings for Unity's Barracuda Inference Library:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Settings for Unity’s Barracuda Inference Library:
</div>
</div>
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb11-2">channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span></code></pre></div>
</div>
</div>
</section>
</section>
<section id="prepare-the-input-tensor" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor">Prepare the Input Tensor</h3>
<p>We need a sample input tensor for the export process.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Default</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Channels-Last</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="export-the-model-to-onnx" class="level3">
<h3 class="anchored" data-anchor-id="export-the-model-to-onnx">Export the Model to ONNX</h3>
<p>We can export the model using the <a href="https://pytorch.org/docs/stable/onnx.html#torch.onnx.export"><code>torch.onnx.export()</code></a> function. This function performs a single pass through the model and records all operations to generate a <a href="https://pytorch.org/docs/stable/jit.html">TorchScript graph</a>. It then exports this graph to ONNX by decomposing each graph node (which contains a PyTorch operator) into a series of ONNX operators.</p>
<p>If we want the ONNX model to support different input sizes, we must set the width and height input axes as dynamic.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Default</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Channels-Last</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set a filename for the ONNX model</span></span>
<span id="cb14-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_labels_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-classes'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.onnx"</span></span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export the PyTorch model to ONNX format</span></span>
<span id="cb14-5">torch.onnx.export(wrapped_model.cpu(),</span>
<span id="cb14-6">                  input_tensor.cpu(),</span>
<span id="cb14-7">                  onnx_file_path,</span>
<span id="cb14-8">                  export_params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb14-9">                  do_constant_folding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb14-10">                  input_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>],</span>
<span id="cb14-11">                  output_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output'</span>],</span>
<span id="cb14-12">                  dynamic_axes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'width'</span>}}</span>
<span id="cb14-13">                 )</span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set a filename for the ONNX model</span></span>
<span id="cb15-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>class_labels_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-classes'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.onnx"</span></span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export the PyTorch model to ONNX format</span></span>
<span id="cb15-5">torch.onnx.export(wrapped_model.cpu(),</span>
<span id="cb15-6">                  input_tensor.cpu(),</span>
<span id="cb15-7">                  onnx_file_path,</span>
<span id="cb15-8">                  export_params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb15-9">                  do_constant_folding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb15-10">                  input_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>],</span>
<span id="cb15-11">                  output_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output'</span>],</span>
<span id="cb15-12">                  dynamic_axes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'width'</span>}}</span>
<span id="cb15-13">                 )</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="simplify-the-onnx-model" class="level3">
<h3 class="anchored" data-anchor-id="simplify-the-onnx-model">Simplify the ONNX Model</h3>
<p>The ONNX models generated by PyTorch are not always the most concise. We can use the <a href="https://pypi.org/project/onnx-simplifier/"><code>onnx-simplifier</code></a> package to tidy up the exported model.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the ONNX model from the onnx_file_name</span></span>
<span id="cb16-2">onnx_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx.load(onnx_file_path)</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simplify the model</span></span>
<span id="cb16-5">model_simp, check <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simplify(onnx_model)</span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the simplified model to the onnx_file_name</span></span>
<span id="cb16-8">onnx.save(model_simp, onnx_file_path)</span></code></pre></div>
</section>
</section>
<section id="performing-inference-with-onnx-runtime" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference-with-onnx-runtime">Performing Inference with ONNX Runtime</h2>
<p>Now that we have our ONNX model, it’s time to test it with ONNX Runtime.</p>
<section id="create-an-inference-session" class="level3">
<h3 class="anchored" data-anchor-id="create-an-inference-session">Create an Inference Session</h3>
<p>We interact with models in ONNX Runtime through an <a href="https://onnxruntime.ai/docs/api/python/api_summary.html#load-and-run-a-model"><code>InferenceSession</code></a> object. Here, we can specify which Execution Providers to use for inference and other configuration information. <a href="https://onnxruntime.ai/docs/execution-providers/">Execution Providers</a> are the interfaces for hardware-specific inference engines like <a href="https://onnxruntime.ai/docs/execution-providers/TensorRT-ExecutionProvider.html">TensorRT</a> for NVIDIA and <a href="https://onnxruntime.ai/docs/execution-providers/OpenVINO-ExecutionProvider.html">OpenVINO</a> for Intel. By default, the <code>InferenceSession</code> uses the generic <code>CPUExecutionProvider</code>.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model and create an InferenceSession</span></span>
<span id="cb17-2">session <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.InferenceSession(onnx_file_path, providers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CPUExecutionProvider'</span>])</span></code></pre></div>
<p>With our inference session initialized, we can select an image to test our ONNX model.</p>
</section>
<section id="select-a-test-image" class="level3">
<h3 class="anchored" data-anchor-id="select-a-test-image">Select a Test Image</h3>
<p>Let’s use the same test image and input size from the <a href="../#testing-the-model-on-new-data">previous tutorial</a> to compare the results with the PyTorch model.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">test_img_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pexels-elina-volkova-16191659.jpg"</span></span>
<span id="cb18-2">test_img_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/cj-mills/pexel-hand-gesture-test-images/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb18-3"></span>
<span id="cb18-4">download_file(test_img_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb18-5"></span>
<span id="cb18-6">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_img_name)</span>
<span id="cb18-7">display(test_img)</span>
<span id="cb18-8"></span>
<span id="cb18-9">target_cls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mute"</span></span>
<span id="cb18-10"></span>
<span id="cb18-11">pd.Series({</span>
<span id="cb18-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test Image Size:"</span>: test_img.size, </span>
<span id="cb18-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Target Class:"</span>: target_cls</span>
<span id="cb18-14">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/onnx-export/images/output_32_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_828bff">
<thead>
</thead>
<tbody>
<tr>
<th id="T_828bf_level0_row0" class="row_heading level0 row0">
Test Image Size:
</th>
<td id="T_828bf_row0_col0" class="data row0 col0">
(637, 960)
</td>
</tr>
<tr>
<th id="T_828bf_level0_row1" class="row_heading level0 row1">
Target Class:
</th>
<td id="T_828bf_row1_col0" class="data row1 col0">
mute
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="prepare-the-test-image" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-test-image">Prepare the Test Image</h3>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set test image size</span></span>
<span id="cb19-2">test_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize image without cropping to multiple of the max stride</span></span>
<span id="cb19-5">input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(test_img.copy(), target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_sz)</span>
<span id="cb19-6"></span>
<span id="cb19-7">display(input_img)</span>
<span id="cb19-8"></span>
<span id="cb19-9">pd.Series({</span>
<span id="cb19-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Image Size:"</span>: input_img.size</span>
<span id="cb19-11">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/onnx-export/images/output_34_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_3ba23">
<thead>
</thead>
<tbody>
<tr>
<th id="T_3ba23_level0_row0" class="row_heading level0 row0">
Input Image Size:
</th>
<td id="T_3ba23_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="prepare-the-input-tensor-1" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor-1">Prepare the Input Tensor</h3>
<p>When we convert the PIL input image to a NumPy array, we need to reorder the array values to channels-first format, scale the values from <code>[0,255]</code> to <code>[0,1]</code>, and add a batch dimension. When we enable the <code>scale_inp</code> and <code>channels_last</code> options, we only need to add a batch dimension.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Default</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">Scaled &amp; Channels-Last</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the existing input image to NumPy format</span></span>
<span id="cb20-2">input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span></code></pre></div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the existing input image to NumPy format</span></span>
<span id="cb21-2">input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="compute-the-predictions" class="level3">
<h3 class="anchored" data-anchor-id="compute-the-predictions">Compute the Predictions</h3>
<p>Now, we can finally perform inference with our ONNX model.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb22-2">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the highest confidence score</span></span>
<span id="cb22-5">confidence_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class index with the highest confidence score and convert it to the class name</span></span>
<span id="cb22-8">pred_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_names[outputs.argmax()]</span>
<span id="cb22-9"></span>
<span id="cb22-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb22-11">display(test_img)</span>
<span id="cb22-12"></span>
<span id="cb22-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the prediction data in a Pandas Series for easy formatting</span></span>
<span id="cb22-14">pd.Series({</span>
<span id="cb22-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Size:"</span>: input_img.size,</span>
<span id="cb22-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Target Class:"</span>: target_cls,</span>
<span id="cb22-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class:"</span>: pred_class,</span>
<span id="cb22-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Score:"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>confidence_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span></span>
<span id="cb22-19">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/onnx-export/images/output_38_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_6524e">
<thead>
</thead>
<tbody>
<tr>
<th id="T_6524e_level0_row0" class="row_heading level0 row0">
Input Size:
</th>
<td id="T_6524e_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
<tr>
<th id="T_6524e_level0_row1" class="row_heading level0 row1">
Target Class:
</th>
<td id="T_6524e_row1_col0" class="data row1 col0">
mute
</td>
</tr>
<tr>
<th id="T_6524e_level0_row2" class="row_heading level0 row2">
Predicted Class:
</th>
<td id="T_6524e_row2_col0" class="data row2 col0">
mute
</td>
</tr>
<tr>
<th id="T_6524e_level0_row3" class="row_heading level0 row3">
Confidence Score:
</th>
<td id="T_6524e_row3_col0" class="data row3 col0">
99.99%
</td>
</tr>
</tbody>

</table>
</div>
<p>The model predictions should be virtually identical to the PyTorch model, but the confidence scores can sometimes vary slightly.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>Don’t forget to download the ONNX model from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</li>
</ol>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial! We previously fine-tuned a model from the timm library with fastai for hand gesture classification and now exported the underlying PyTorch model to ONNX. With this, we can streamline our deployment process and leverage platform-specific hardware optimizations through ONNX Runtime.</p>
<p>As you move forward, consider exploring more about ONNX and its ecosystem. Check out the available <a href="https://onnxruntime.ai/docs/execution-providers/">Execution Providers</a> that provide flexible interfaces to different hardware acceleration libraries.</p>
<p>If you found this guide helpful, consider sharing it with others.</p>


</section>

 ]]></description>
  <category>fastai</category>
  <category>onnx</category>
  <category>image-classification</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/onnx-export/index.html</guid>
  <pubDate>Sat, 07 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../series/tutorials/fastai-train-image-classifier-series.html"><strong>Fine-Tuning Image Classifiers with Fastai and the timm library for Beginners</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading and Exploring the Dataset</li>
<li>Selecting a Model</li>
<li>Preparing the Data</li>
<li>Fine-tuning the Model</li>
<li>Making Predictions with the Model</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome to this hands-on guide to fine-tuning image classifiers with <a href="https://docs.fast.ai/">fastai</a> and the <a href="https://github.com/huggingface/pytorch-image-models">timm library</a>! Fine-tuning refers to taking a pre-trained model and adjusting its parameters using a new dataset to enhance its performance on a specific task. We can leverage pre-trained models to achieve high performance even when working with limited data and computational resources. The timm library further aids our goal with its wide range of pre-trained models, catering to diverse needs and use cases.</p>
<p>In this tutorial, we develop a hand gesture recognizer. Hand gesture recognition has many real-world applications, ranging from human-computer interaction and sign-language translation to creating immersive gaming experiences. By the end of this tutorial, you will have a practical hand gesture recognizer and a solid foundation to apply to other image classification tasks.</p>
<p>You can try a live demo that uses a model trained with this tutorial’s code and runs locally in your browser at the link below:</p>
<ul>
<li><a href="https://cj-mills.github.io/pytorch-timm-gesture-recognition-tutorial-code/">In-Browser Hand Gesture Recognition Demo</a></li>
</ul>
<p>Check out the following video for a quick preview:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./video/fastai-timm-gesture-recognition-tutorial-demo.mp4" class="img-fluid" controls=""><a href="./video/fastai-timm-gesture-recognition-tutorial-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>This guide is structured so that you don’t need a deep understanding of deep learning to complete it. If you follow the instructions, you can make it through! Yet, if you are eager to delve deeper into machine learning and deep learning, I recommend fast.ai’s <a href="https://course.fast.ai/">Practical Deep Learning for Coders</a> course. The course employs a hands-on approach that starts you off training models from the get-go and gradually digs deeper into the foundational concepts.</p>
<p>Let’s dive in and start training our hand gesture classifier!</p>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>The tutorial code is available as a <a href="https://jupyter.org/">Jupyter Notebook</a>, which you can run locally or in a cloud-based environment like <a href="https://colab.research.google.com/">Google Colab</a>. If you’re new to these platforms or need some guidance setting up, I’ve created dedicated tutorials to help you:</p>
<ul>
<li><p><a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/"><strong>Getting Started with Google Colab</strong></a><strong>:</strong> This tutorial introduces you to Google Colab, a free, cloud-based Jupyter Notebook service. You’ll learn to write, run, and share Python code directly in your browser.</p></li>
<li><p><a href="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/"><strong>Setting Up a Local Python Environment with Mamba for Machine Learning Projects on Windows</strong></a><strong>:</strong> This tutorial guides you through installing the Mamba package manager on Windows, setting up a local Python environment, and installing PyTorch and Jupyter for machine learning projects.</p></li>
</ul>
<p>No matter your choice of environment, you’ll be well-prepared to follow along with the rest of this tutorial. You can download the notebook from the tutorial’s GitHub repository or open the notebook directly in Google Colab using the links below.</p>
<table class="table">
<thead>
<tr class="header">
<th>Platform</th>
<th>Jupyter Notebook</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Google Colab</td>
<td><a href="https://colab.research.google.com/github/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-training-colab.ipynb">Open In Colab</a></td>
</tr>
<tr class="even">
<td>Linux</td>
<td><a href="https://github.com/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-training.ipynb">GitHub Repository</a></td>
</tr>
<tr class="odd">
<td>Windows</td>
<td><a href="https://github.com/cj-mills/fastai-timm-gesture-recognition-tutorial-code/blob/main/notebooks/fastai-timm-image-classifier-training-windows.ipynb">GitHub Repository</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>Before diving into the code, we’ll create a Python environment and install the necessary libraries. Creating a dedicated environment will ensure our project has all its dependencies in one place and does not interfere with other Python projects you may have.</p>
<p>Please note that this section is for readers setting up a local Python environment on their machines. If you’re following this tutorial on a cloud-based platform like Google Colab, the platform already provides an isolated environment with many Python libraries pre-installed. In that case, you may skip this section and directly proceed to the code sections. However, you may still need to install certain libraries specific to this tutorial using similar <code>pip install</code> commands within your notebook. The dedicated Colab Notebook contains the instructions for running it in Google Colab.</p>
<section id="creating-a-python-environment" class="level3">
<h3 class="anchored" data-anchor-id="creating-a-python-environment">Creating a Python Environment</h3>
<p>First, we’ll create a Python environment using <a href="https://docs.conda.io/en/latest/">Conda</a>. Conda is a package manager that can create isolated Python environments. These environments are like sandboxed spaces where you can install Python libraries without affecting the rest of your system.</p>
<p>To create a new Python environment, open a terminal with Conda/Mamba installed and run the following commands:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Conda</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Mamba</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new Python 3.10 environment</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> fastai-env python=3.10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Activate the environment</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate fastai-env</span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new Python 3.10 environment</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> fastai-env python=3.10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Activate the environment</span></span>
<span id="cb2-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> activate fastai-env</span></code></pre></div>
</div>
</div>
</div>
<p>The first command creates a new Python environment named <code>fastai-env</code> using Python 3.10. The <code>-y</code> flag confirms that we want to proceed with the installation. After building the environment, the second command activates it, setting it as the active Python environment.</p>
</section>
<section id="installing-fastai" class="level3">
<h3 class="anchored" data-anchor-id="installing-fastai">Installing Fastai</h3>
<p>fastai is a deep learning library that helps simplify training neural networks by providing high-level components for standard deep learning tasks. It builds upon <a href="https://pytorch.org/">PyTorch</a>, a popular open-source machine learning framework.</p>
<p>To install the fastai library, we’ll use the following command:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install fastai==2.7.13</span></code></pre></div>
</section>
<section id="installing-additional-libraries" class="level3">
<h3 class="anchored" data-anchor-id="installing-additional-libraries">Installing Additional Libraries</h3>
<p>We also need to install some additional libraries for our project. If you’re new to Python or haven’t used some of these packages before, don’t worry.</p>
<p>Here’s a brief overview:</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>jupyter</code></td>
<td>An open-source web application that allows you to create and share documents that contain live code, equations, visualizations, and narrative text. (<a href="https://jupyter.org/">link</a>)</td>
</tr>
<tr class="even">
<td><code>timm</code></td>
<td>The timm library provides state-of-the-art (SOTA) computer vision models, layers, utilities, optimizers, schedulers, data loaders, augmentations, and training/evaluation scripts. (<a href="https://github.com/huggingface/pytorch-image-models">link</a>)</td>
</tr>
<tr class="odd">
<td><code>torchtnt</code></td>
<td>A library for PyTorch training tools and utilities. (<a href="https://pytorch.org/tnt/stable/">link</a>)</td>
</tr>
</tbody>
</table>
<p>Run the following commands to install these additional libraries:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install additional dependencies</span></span>
<span id="cb4-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install jupyter timm torchtnt</span></code></pre></div>
</section>
<section id="installing-utility-packages" class="level3">
<h3 class="anchored" data-anchor-id="installing-utility-packages">Installing Utility Packages</h3>
<p>We’ll also install some additional packages I made to help us handle images, interact with PyTorch, and work with Pandas DataFrames. These utility packages provide shortcuts for routine tasks and keep our code clean and readable.</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>cjm_pandas_utils</code></td>
<td>Some utility functions for working with Pandas. (<a href="https://cj-mills.github.io/cjm-pandas-utils/">link</a>)</td>
</tr>
<tr class="even">
<td><code>cjm_pil_utils</code></td>
<td>Some PIL utility functions I frequently use. (<a href="https://cj-mills.github.io/cjm-pil-utils/">link</a>)</td>
</tr>
<tr class="odd">
<td><code>cjm_psl_utils</code></td>
<td>Some utility functions using the Python Standard Library. (<a href="https://cj-mills.github.io/cjm-psl-utils/">link</a>)</td>
</tr>
<tr class="even">
<td><code>cjm_pytorch_utils</code></td>
<td>Some utility functions for working with PyTorch. (<a href="https://cj-mills.github.io/cjm-pytorch-utils/">link</a>)</td>
</tr>
<tr class="odd">
<td><code>cjm_torchvision_tfms</code></td>
<td>Some custom Torchvision tranforms. (<a href="https://cj-mills.github.io/cjm-torchvision-tfms/">link</a>)</td>
</tr>
</tbody>
</table>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install utility packages</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install cjm_pandas_utils cjm_pil_utils cjm_pytorch_utils cjm_torchvision_tfms</span></code></pre></div>
<p>Now, our environment is all set up and ready to go! Remember, these libraries are just tools. If you don’t fully understand them yet, don’t worry. As we go through the tutorial, we’ll learn more about these tools and see them in action.</p>
</section>
<section id="launching-jupyter-notebook" class="level3">
<h3 class="anchored" data-anchor-id="launching-jupyter-notebook">Launching Jupyter Notebook</h3>
<p>Now that our environment is ready, it’s time to launch Jupyter Notebook. Jupyter Notebooks provide an interactive coding environment where we’ll work for the rest of this tutorial. To launch Jupyter Notebook, navigate to the location where you have stored the tutorial notebook (if you downloaded it) from a terminal with the <code>fastai-env</code> environment active, and type the following command:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> notebook</span></code></pre></div>
<p>This command will open a new tab in your default web browser, showing the Jupyter file browser. From the Jupyter file browser, you can open the tutorial notebook or create a new one to start the next section. Remember: If you close your terminal, the Jupyter Notebook server will stop. So, keep your terminal running while you’re working on the tutorial.</p>
</section>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>With our environment set up, it’s time to start the coding part of this tutorial. First, we will import the necessary Python packages into our Jupyter Notebook. Here’s a brief overview of how we’ll use these packages:</p>
<ul>
<li><strong>Python Standard Library dependencies</strong>: These are built-in modules that come with Python. We’ll use them for various tasks like handling file paths (<a href="https://docs.python.org/3/library/pathlib.html#pathlib.Path"><code>pathlib.Path</code></a>), manipulating JSON files (<a href="https://docs.python.org/3/library/json.html"><code>json</code></a>), random number generation (<a href="https://docs.python.org/3/library/random.html"><code>random</code></a>), mathematical operations (<a href="https://docs.python.org/3/library/math.html"><code>math</code></a>), copying Python objects (<a href="https://docs.python.org/3/library/copy.html"><code>copy</code></a>), and working with dates and times (<a href="https://docs.python.org/3/library/datetime.html"><code>datetime</code></a>).</li>
<li><strong>Utility functions</strong>: These are helper functions from the packages we installed earlier. They provide shortcuts for routine tasks and keep our code clean and readable.</li>
<li><strong>matplotlib</strong>: We use the matplotlib package to explore the dataset samples and class distribution.</li>
<li><strong>NumPy</strong>: We’ll use it to store PIL Images as arrays of pixel values.</li>
<li><strong>pandas</strong>: We use Pandas <code>DataFrame</code> and <code>Series</code> objects to format data as tables.</li>
<li><strong>PIL (Pillow)</strong>: We’ll use it for opening and working with image files.</li>
<li><strong>timm library</strong>: We’ll use the timm library to download and prepare a pre-trained model for fine-tuning.</li>
</ul>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> copy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> copy</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb7-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb7-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb7-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb7-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file, get_source_code</span>
<span id="cb7-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pandas_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> markdown_to_pandas</span>
<span id="cb7-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img, get_img_files</span>
<span id="cb7-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pytorch_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pil_to_tensor, tensor_to_pil, denorm_img_tensor</span>
<span id="cb7-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_torchvision_tfms.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ResizeMax, PadSquare, CustomTrivialAugmentWide</span>
<span id="cb7-15"></span>
<span id="cb7-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import matplotlib for creating plots</span></span>
<span id="cb7-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy </span></span>
<span id="cb7-20"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-21"></span>
<span id="cb7-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import pandas module for data manipulation</span></span>
<span id="cb7-23"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb7-24"></span>
<span id="cb7-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set options for Pandas DataFrame display</span></span>
<span id="cb7-26">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_colwidth'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do not truncate the contents of cells in the DataFrame</span></span>
<span id="cb7-27">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_rows'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display all rows in the DataFrame</span></span>
<span id="cb7-28">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display all columns in the DataFrame</span></span>
<span id="cb7-29"></span>
<span id="cb7-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb7-31"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb7-32"></span>
<span id="cb7-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import timm library</span></span>
<span id="cb7-34"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timm</span>
<span id="cb7-35"></span>
<span id="cb7-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb7-37"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb7-38"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision</span>
<span id="cb7-39">torchvision.disable_beta_transforms_warning()</span>
<span id="cb7-40"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms.v2  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="cb7-41"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.transforms.v2 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> functional <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> TF</span>
<span id="cb7-42"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchtnt.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get_module_summary</span>
<span id="cb7-43"></span>
<span id="cb7-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import fastai computer vision functionality </span></span>
<span id="cb7-45"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.vision.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<p>Having successfully imported the dependencies, we are ready to move to the next step.</p>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>In this section, we set up some basics for our project. First, we set a seed for generating random numbers using the <a href="https://docs.fast.ai/torch_core.html#set_seed"><code>set_seed</code></a> function included with the fastai library.</p>
<section id="setting-a-random-number-seed" class="level3">
<h3 class="anchored" data-anchor-id="setting-a-random-number-seed">Setting a Random Number Seed</h3>
<p>A fixed seed value is helpful when training deep-learning models for reproducibility, debugging, and comparison.</p>
<p>Having reproducible results allows others to confirm your findings. Using a fixed seed can make it easier to find bugs as it ensures the same inputs produce the same outputs. Likewise, using fixed seed values lets you compare performance between models and training parameters.</p>
<p>That said, it’s often a good idea to test different seed values to see how your model’s performance varies between them. Also, don’t use a fixed seed value when you deploy the final model.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the seed for generating random numbers in PyTorch, NumPy, and Python's random module.</span></span>
<span id="cb8-2">seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span></span>
<span id="cb8-3">set_seed(seed)</span></code></pre></div>
</section>
<section id="setting-the-device-and-data-type" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-device-and-data-type">Setting the Device and Data Type</h3>
<p>Next, we determine the device to run our computations on and the data type of our tensors using fastai’s <a href="https://docs.fast.ai/torch_core.html#default_device"><code>default_device</code></a> function.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> default_device()</span>
<span id="cb9-2">dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.float32</span>
<span id="cb9-3">device, dtype</span></code></pre></div>
<pre class="text"><code>(device(type='cuda', index=0), torch.float32)</code></pre>
</section>
<section id="setting-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-directory-paths">Setting the Directory Paths</h3>
<p>We then need to set up a directory for our project to store our results and other related files. The following code creates the folder in the current directory (<code>./</code>). Update the path if that is not suitable for you.</p>
<p>We also need a place to store our datasets and a location to download the zip file containing the dataset. Readers following the tutorial on their local machine should select locations with read and write access to store archive files and datasets. For a cloud service like Google Colab, you can set it to the current directory.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb11-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"fastai-timm-image-classifier"</span></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb11-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb11-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store datasets</span></span>
<span id="cb11-11">dataset_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/980_1TB_2/Datasets/"</span>)</span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dataset directory if it does not exist</span></span>
<span id="cb11-13">dataset_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-14"></span>
<span id="cb11-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store archive files</span></span>
<span id="cb11-16">archive_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../Archive'</span></span>
<span id="cb11-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the archive directory if it does not exist</span></span>
<span id="cb11-18">archive_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-19"></span>
<span id="cb11-20">pd.Series({</span>
<span id="cb11-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir, </span>
<span id="cb11-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Directory:"</span>: dataset_dir, </span>
<span id="cb11-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Directory:"</span>: archive_dir</span>
<span id="cb11-24">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_c93ec">
<thead>
</thead>
<tbody>
<tr>
<th id="T_c93ec_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_c93ec_row0_col0" class="data row0 col0">
fastai-timm-image-classifier
</td>
</tr>
<tr>
<th id="T_c93ec_level0_row1" class="row_heading level0 row1">
Dataset Directory:
</th>
<td id="T_c93ec_row1_col0" class="data row1 col0">
/mnt/980_1TB_2/Datasets
</td>
</tr>
<tr>
<th id="T_c93ec_level0_row2" class="row_heading level0 row2">
Archive Directory:
</th>
<td id="T_c93ec_row2_col0" class="data row2 col0">
/mnt/980_1TB_2/Datasets/../Archive
</td>
</tr>
</tbody>

</table>
</div>
<p>Double-check the project and dataset directories exist in the specified paths and that you can add files to them before continuing.</p>
<p>At this point, our environment is set up and ready to go. We’ve set our random seed, determined our computation device, and set up directories for our project and dataset. In the next section, we will download and explore the dataset.</p>
</section>
</section>
<section id="loading-and-exploring-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="loading-and-exploring-the-dataset">Loading and Exploring the Dataset</h2>
<p>Now that we set up our project, we can start working with our dataset. The dataset we’ll use is a downscaled subset of <a href="https://github.com/hukenovs/hagrid">HaGRID</a> (HAnd Gesture Recognition Image Dataset) that I modified for image classification tasks. The dataset contains images for <code>18</code> distinct hand gestures and an additional <code>no_gesture</code> class for idle hands. The dataset is approximately <code>3.8 GB</code>, but you will need about <code>7.6 GB</code> to store the archive file and extracted dataset.</p>
<ul>
<li><strong>HuggingFace Hub Dataset Repository:</strong> <a href="https://huggingface.co/datasets/cj-mills/hagrid-classification-512p-no-gesture-150k-zip">cj-mills/hagrid-classification-512p-no-gesture-150k-zip</a></li>
</ul>
<p>The following steps demonstrate how to download the dataset from the HuggingFace Hub, inspect the dataset, and visualize some sample images.</p>
<section id="setting-the-dataset-path" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-dataset-path">Setting the Dataset Path</h3>
<p>We first need to construct the name for the chosen Hugging Face Hub dataset and define where to download and extract the dataset.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the dataset</span></span>
<span id="cb12-2">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-classification-512p-no-gesture-150k-zip'</span></span>
<span id="cb12-3"></span>
<span id="cb12-4">zip_file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_name[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb12-5"></span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset name by combining the username and dataset name</span></span>
<span id="cb12-7">hf_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'cj-mills/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the zip file that contains the dataset</span></span>
<span id="cb12-10">archive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip'</span>)</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the directory where the dataset will be extracted</span></span>
<span id="cb12-13">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zip_file_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb12-14"></span>
<span id="cb12-15">pd.Series({</span>
<span id="cb12-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HuggingFace Dataset:"</span>: hf_dataset, </span>
<span id="cb12-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Path:"</span>: archive_path, </span>
<span id="cb12-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Path:"</span>: dataset_path</span>
<span id="cb12-19">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_2e08f">
<thead>
</thead>
<tbody>
<tr>
<th id="T_2e08f_level0_row0" class="row_heading level0 row0">
HuggingFace Dataset:
</th>
<td id="T_2e08f_row0_col0" class="data row0 col0">
cj-mills/hagrid-classification-512p-no-gesture-150k-zip
</td>
</tr>
<tr>
<th id="T_2e08f_level0_row1" class="row_heading level0 row1">
Archive Path:
</th>
<td id="T_2e08f_row1_col0" class="data row1 col0">
/mnt/980_1TB_2/Datasets/../Archive/hagrid-classification-512p-no-gesture-150k-zip.zip
</td>
</tr>
<tr>
<th id="T_2e08f_level0_row2" class="row_heading level0 row2">
Dataset Path:
</th>
<td id="T_2e08f_row2_col0" class="data row2 col0">
/mnt/980_1TB_2/Datasets/hagrid-classification-512p-no-gesture-150k
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="downloading-the-dataset" class="level3">
<h3 class="anchored" data-anchor-id="downloading-the-dataset">Downloading the Dataset</h3>
<p>We can now download the dataset archive file and extract the dataset using the <a href="https://docs.fast.ai/data.external.html#untar_data"><code>untar_data</code></a> function included with the fastai library. We can delete the archive afterward to save space.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset URL</span></span>
<span id="cb13-2">dataset_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hf_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>zip_file_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip"</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set whether to delete the archive file after extracting the dataset</span></span>
<span id="cb13-5">delete_archive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the dataset if not present</span></span>
<span id="cb13-8">untar_data(dataset_url, archive<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>archive_dir.absolute(), data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_dir.absolute())</span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete the archive if specified</span></span>
<span id="cb13-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> archive_path.exists() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> delete_archive: archive_path.unlink()</span></code></pre></div>
</section>
<section id="inspecting-the-class-distribution" class="level3">
<h3 class="anchored" data-anchor-id="inspecting-the-class-distribution">Inspecting the Class Distribution</h3>
<p>Next, we get the names of all the classes in our dataset and inspect the distribution of images among these classes. A balanced dataset (where each class has approximately the same number of instances) is ideal for training a machine-learning model.</p>
<section id="get-dataset-information" class="level4">
<h4 class="anchored" data-anchor-id="get-dataset-information">Get Dataset Information</h4>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the file paths for each image in the dataset</span></span>
<span id="cb14-2">img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_image_files(dataset_path)</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the number of samples for each image class</span></span>
<span id="cb14-5">class_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Counter(path.parent.name <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> img_paths)</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class names</span></span>
<span id="cb14-8">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(class_counts.keys())</span>
<span id="cb14-9"></span>
<span id="cb14-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of samples for each image class</span></span>
<span id="cb14-11">class_counts_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame.from_dict(class_counts, orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Count'</span>])</span>
<span id="cb14-12">class_counts_df</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
Count
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
call
</th>
<td>
6939
</td>
</tr>
<tr>
<th>
dislike
</th>
<td>
7028
</td>
</tr>
<tr>
<th>
fist
</th>
<td>
6882
</td>
</tr>
<tr>
<th>
four
</th>
<td>
7183
</td>
</tr>
<tr>
<th>
like
</th>
<td>
6823
</td>
</tr>
<tr>
<th>
mute
</th>
<td>
7139
</td>
</tr>
<tr>
<th>
no_gesture
</th>
<td>
27823
</td>
</tr>
<tr>
<th>
ok
</th>
<td>
6924
</td>
</tr>
<tr>
<th>
one
</th>
<td>
7062
</td>
</tr>
<tr>
<th>
palm
</th>
<td>
7050
</td>
</tr>
<tr>
<th>
peace
</th>
<td>
6965
</td>
</tr>
<tr>
<th>
peace_inverted
</th>
<td>
6876
</td>
</tr>
<tr>
<th>
rock
</th>
<td>
6883
</td>
</tr>
<tr>
<th>
stop
</th>
<td>
6893
</td>
</tr>
<tr>
<th>
stop_inverted
</th>
<td>
7142
</td>
</tr>
<tr>
<th>
three
</th>
<td>
6940
</td>
</tr>
<tr>
<th>
three2
</th>
<td>
6870
</td>
</tr>
<tr>
<th>
two_up
</th>
<td>
7346
</td>
</tr>
<tr>
<th>
two_up_inverted
</th>
<td>
6967
</td>
</tr>
</tbody>

</table>
</div>
<hr>
</section>
<section id="visualize-the-class-distribution" class="level4">
<h4 class="anchored" data-anchor-id="visualize-the-class-distribution">Visualize the class distribution</h4>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot the distribution</span></span>
<span id="cb15-2">class_counts_df.plot(kind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bar'</span>)</span>
<span id="cb15-3">plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Class distribution'</span>)</span>
<span id="cb15-4">plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Count'</span>)</span>
<span id="cb15-5">plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Classes'</span>)</span>
<span id="cb15-6">plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(class_counts_df.index)), class_names)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the x-axis tick labels</span></span>
<span id="cb15-7">plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate x-axis labels</span></span>
<span id="cb15-8">plt.gca().legend().set_visible(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb15-9">plt.show()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_20_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Each class, excluding the <code>no_gesture</code> class, has roughly the same number of samples. The <code>no_gesture</code> folder contains approximately four times as many images because of the immense variety of non-matching hand positions.</p>
</section>
</section>
<section id="visualizing-sample-images" class="level3">
<h3 class="anchored" data-anchor-id="visualizing-sample-images">Visualizing Sample Images</h3>
<p>Lastly, we will visualize a sample image from each class in our dataset. Visualizing the samples helps us get a feel for the kind of images we’re working with and whether they’re suitable for the task at hand.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get paths for the first sample in the dataset for each class</span></span>
<span id="cb16-2">sample_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>((dataset_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>class_name).iterdir()) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> class_name <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> class_names]</span>
<span id="cb16-3">sample_paths.sort()</span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the number of rows and columns</span></span>
<span id="cb16-6">grid_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.floor(math.sqrt(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_paths)))</span>
<span id="cb16-7">n_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> grid_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_paths) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-8">n_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_size</span>
<span id="cb16-9"></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list to store the first image found for each class</span></span>
<span id="cb16-11">images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(path) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_paths]</span>
<span id="cb16-12">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [path.parent.name <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sample_paths]</span>
<span id="cb16-13"></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a figure for the grid</span></span>
<span id="cb16-15">fig, axs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(n_rows, n_cols, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb16-16"></span>
<span id="cb16-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, ax <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(axs.flatten()):</span>
<span id="cb16-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If we have an image for this subplot</span></span>
<span id="cb16-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(images) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> images[i]:</span>
<span id="cb16-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the image to the subplot</span></span>
<span id="cb16-21">        ax.imshow(np.array(images[i]))</span>
<span id="cb16-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the title to the corresponding class name</span></span>
<span id="cb16-23">        ax.set_title(labels[i])</span>
<span id="cb16-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the axis</span></span>
<span id="cb16-25">        ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb16-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb16-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no image, hide the subplot</span></span>
<span id="cb16-28">        ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb16-29"></span>
<span id="cb16-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the grid</span></span>
<span id="cb16-31">plt.tight_layout()</span>
<span id="cb16-32">plt.show()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_22_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We have loaded the dataset, inspected its class distribution, and visualized some sample images. In the next section, we will select and load our model.</p>
</section>
</section>
<section id="selecting-a-model" class="level2">
<h2 class="anchored" data-anchor-id="selecting-a-model">Selecting a Model</h2>
<p>Choosing a suitable model for your task is crucial for the success of your machine learning project. The model you select will depend on several factors, including the size and nature of your dataset, the problem you’re trying to solve, and the computational resources you have at your disposal.</p>
<section id="exploring-available-models" class="level3">
<h3 class="anchored" data-anchor-id="exploring-available-models">Exploring Available Models</h3>
<p>You can explore the pretrained models available in the timm library using the <code>timm.list_models()</code> method. The library has hundreds of models, so we’ll narrow our search to the <a href="https://arxiv.org/abs/1512.03385">ResNet18</a> family of models. ResNet 18 models are popular for image classification tasks due to their balance of accuracy and speed.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">pd.DataFrame(timm.list_models(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet18*'</span>, pretrained<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
resnet18.a1_in1k
</td>
</tr>
<tr>
<th>
1
</th>
<td>
resnet18.a2_in1k
</td>
</tr>
<tr>
<th>
2
</th>
<td>
resnet18.a3_in1k
</td>
</tr>
<tr>
<th>
3
</th>
<td>
resnet18.fb_ssl_yfcc100m_ft_in1k
</td>
</tr>
<tr>
<th>
4
</th>
<td>
resnet18.fb_swsl_ig1b_ft_in1k
</td>
</tr>
<tr>
<th>
5
</th>
<td>
resnet18.gluon_in1k
</td>
</tr>
<tr>
<th>
6
</th>
<td>
resnet18.tv_in1k
</td>
</tr>
<tr>
<th>
7
</th>
<td>
resnet18d.ra2_in1k
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="choosing-the-resnet18-d-model" class="level3">
<h3 class="anchored" data-anchor-id="choosing-the-resnet18-d-model">Choosing the ResNet18-D Model</h3>
<p>For this tutorial, I went with the pretrained <a href="https://github.com/huggingface/pytorch-image-models/blob/4b8cfa6c0a355a9b3cb2a77298b240213fb3b921/timm/models/resnet.py#L869">ResNet 18-D</a> model. This model’s balance of accuracy and speed makes it suitable for real-time applications, such as hand gesture recognition. While this model is a good all-rounder, others may work better for specific applications. For example, some models are designed to run on mobile devices and may sacrifice some accuracy for improved performance. Whatever your requirements are, the timm library likely has a suitable model for your needs. Feel free to try different models and see how they compare.</p>
</section>
<section id="inspecting-the-resnet18-d-model-configuration" class="level3">
<h3 class="anchored" data-anchor-id="inspecting-the-resnet18-d-model-configuration">Inspecting the ResNet18-D Model Configuration</h3>
<p>Next, we will inspect the configuration of our chosen model. The model config gives us information about the pretraining process for the model.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the resnet module</span></span>
<span id="cb18-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> timm.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resnet</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the ResNet model variant to use</span></span>
<span id="cb18-5">resnet_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet18d'</span></span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the default configuration of the chosen model</span></span>
<span id="cb18-8">model_cfg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet.default_cfgs[resnet_model].default.to_dict()</span>
<span id="cb18-9"></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the default configuration values</span></span>
<span id="cb18-11">pd.DataFrame.from_dict(model_cfg, orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
url
</th>
<td>
https://github.com/rwightman/pytorch-image-models/releases/download/v0.1-weights/resnet18d_ra2-48a79e06.pth
</td>
</tr>
<tr>
<th>
hf_hub_id
</th>
<td>
timm/
</td>
</tr>
<tr>
<th>
custom_load
</th>
<td>
False
</td>
</tr>
<tr>
<th>
input_size
</th>
<td>
(3, 224, 224)
</td>
</tr>
<tr>
<th>
test_input_size
</th>
<td>
(3, 288, 288)
</td>
</tr>
<tr>
<th>
fixed_input_size
</th>
<td>
False
</td>
</tr>
<tr>
<th>
interpolation
</th>
<td>
bicubic
</td>
</tr>
<tr>
<th>
crop_pct
</th>
<td>
0.875
</td>
</tr>
<tr>
<th>
test_crop_pct
</th>
<td>
0.95
</td>
</tr>
<tr>
<th>
crop_mode
</th>
<td>
center
</td>
</tr>
<tr>
<th>
mean
</th>
<td>
(0.485, 0.456, 0.406)
</td>
</tr>
<tr>
<th>
std
</th>
<td>
(0.229, 0.224, 0.225)
</td>
</tr>
<tr>
<th>
num_classes
</th>
<td>
1000
</td>
</tr>
<tr>
<th>
pool_size
</th>
<td>
(7, 7)
</td>
</tr>
<tr>
<th>
first_conv
</th>
<td>
conv1.0
</td>
</tr>
<tr>
<th>
classifier
</th>
<td>
fc
</td>
</tr>
<tr>
<th>
origin_url
</th>
<td>
https://github.com/huggingface/pytorch-image-models
</td>
</tr>
</tbody>

</table>
</div>
<hr>
</section>
<section id="retrieving-normalization-statistics" class="level3">
<h3 class="anchored" data-anchor-id="retrieving-normalization-statistics">Retrieving Normalization Statistics</h3>
<p>Before we can use the ResNet18-D model, we need to normalize our dataset. Normalization is a process that changes the range of pixel intensity values to make the neural network converge faster during training. It is performed by subtracting the mean from the pixel values and dividing by the standard deviation of the dataset. The mean and standard deviation values specific to the dataset used in the pretraining process of our model are called normalization statistics. To do this, we will retrieve the normalization statistics (mean and std) specific to our pretrained model.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve normalization statistics (mean and std) specific to the pretrained model</span></span>
<span id="cb19-2">mean, std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_cfg[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>], model_cfg[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'std'</span>]</span>
<span id="cb19-3">norm_stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (mean, std)</span>
<span id="cb19-4"></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the mean and standard deviation</span></span>
<span id="cb19-6">pd.DataFrame(norm_stats)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
<th>
1
</th>
<th>
2
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
0.485
</td>
<td>
0.456
</td>
<td>
0.406
</td>
</tr>
<tr>
<th>
1
</th>
<td>
0.229
</td>
<td>
0.224
</td>
<td>
0.225
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="loading-the-resnet18-d-model" class="level3">
<h3 class="anchored" data-anchor-id="loading-the-resnet18-d-model">Loading the ResNet18-D Model</h3>
<p>We can now load our model. We’ll set the number of output classes equal to the number of image classes in our dataset. We’ll also specify the device and data type for the model.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a pretrained ResNet model with the number of output classes equal to the number of class names</span></span>
<span id="cb20-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'timm.create_model' function automatically downloads and initializes the pretrained weights</span></span>
<span id="cb20-3">resnet18 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timm.create_model(resnet_model, pretrained<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(class_names))</span>
<span id="cb20-4"></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the device and data type for the model</span></span>
<span id="cb20-6">resnet18 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet18.to(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dtype)</span>
<span id="cb20-7"></span>
<span id="cb20-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add attributes to store the device and model name for later reference</span></span>
<span id="cb20-9">resnet18.device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> device</span>
<span id="cb20-10">resnet18.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet_model</span></code></pre></div>
</section>
<section id="selecting-the-model" class="level3">
<h3 class="anchored" data-anchor-id="selecting-the-model">Selecting the Model</h3>
<p>With our model loaded, we can now select it for training.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet18</span></code></pre></div>
</section>
<section id="summarizing-the-model" class="level3">
<h3 class="anchored" data-anchor-id="summarizing-the-model">Summarizing the Model</h3>
<p>Finally, let’s generate a summary of our model. The summary gives us an overview of its structure and performance characteristics.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the input to the model</span></span>
<span id="cb22-2">test_inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>).to(device)</span>
<span id="cb22-3"></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a summary of the model as a Pandas DataFrame</span></span>
<span id="cb22-5">summary_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> markdown_to_pandas(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>get_module_summary(model, [test_inp])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the summary to only contain Conv2d layers and the model</span></span>
<span id="cb22-8">summary_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary_df[(summary_df.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (summary_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Conv2d'</span>)]</span>
<span id="cb22-9"></span>
<span id="cb22-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the column "Contains Uninitialized Parameters?"</span></span>
<span id="cb22-11">summary_df.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Contains Uninitialized Parameters?'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
Type
</th>
<th>
# Parameters
</th>
<th>
# Trainable Parameters
</th>
<th>
Size (bytes)
</th>
<th>
Forward FLOPs
</th>
<th>
Backward FLOPs
</th>
<th>
In size
</th>
<th>
Out size
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
ResNet
</td>
<td>
11.2 M
</td>
<td>
11.2 M
</td>
<td>
44.9 M
</td>
<td>
2.7 G
</td>
<td>
5.3 G
</td>
<td>
[1, 3, 256, 256]
</td>
<td>
[1, 19]
</td>
</tr>
<tr>
<th>
2
</th>
<td>
Conv2d
</td>
<td>
864
</td>
<td>
864
</td>
<td>
3.5 K
</td>
<td>
14.2 M
</td>
<td>
14.2 M
</td>
<td>
[1, 3, 256, 256]
</td>
<td>
[1, 32, 128, 128]
</td>
</tr>
<tr>
<th>
5
</th>
<td>
Conv2d
</td>
<td>
9.2 K
</td>
<td>
9.2 K
</td>
<td>
36.9 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 32, 128, 128]
</td>
<td>
[1, 32, 128, 128]
</td>
</tr>
<tr>
<th>
8
</th>
<td>
Conv2d
</td>
<td>
18.4 K
</td>
<td>
18.4 K
</td>
<td>
73.7 K
</td>
<td>
301 M
</td>
<td>
603 M
</td>
<td>
[1, 32, 128, 128]
</td>
<td>
[1, 64, 128, 128]
</td>
</tr>
<tr>
<th>
14
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
19
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
23
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
28
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
33
</th>
<td>
Conv2d
</td>
<td>
73.7 K
</td>
<td>
73.7 K
</td>
<td>
294 K
</td>
<td>
75.5 M
</td>
<td>
150 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
38
</th>
<td>
Conv2d
</td>
<td>
147 K
</td>
<td>
147 K
</td>
<td>
589 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
43
</th>
<td>
Conv2d
</td>
<td>
8.2 K
</td>
<td>
8.2 K
</td>
<td>
32.8 K
</td>
<td>
8.4 M
</td>
<td>
16.8 M
</td>
<td>
[1, 64, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
46
</th>
<td>
Conv2d
</td>
<td>
147 K
</td>
<td>
147 K
</td>
<td>
589 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
51
</th>
<td>
Conv2d
</td>
<td>
147 K
</td>
<td>
147 K
</td>
<td>
589 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
56
</th>
<td>
Conv2d
</td>
<td>
294 K
</td>
<td>
294 K
</td>
<td>
1.2 M
</td>
<td>
75.5 M
</td>
<td>
150 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
61
</th>
<td>
Conv2d
</td>
<td>
589 K
</td>
<td>
589 K
</td>
<td>
2.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
66
</th>
<td>
Conv2d
</td>
<td>
32.8 K
</td>
<td>
32.8 K
</td>
<td>
131 K
</td>
<td>
8.4 M
</td>
<td>
16.8 M
</td>
<td>
[1, 128, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
69
</th>
<td>
Conv2d
</td>
<td>
589 K
</td>
<td>
589 K
</td>
<td>
2.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
74
</th>
<td>
Conv2d
</td>
<td>
589 K
</td>
<td>
589 K
</td>
<td>
2.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
79
</th>
<td>
Conv2d
</td>
<td>
1.2 M
</td>
<td>
1.2 M
</td>
<td>
4.7 M
</td>
<td>
75.5 M
</td>
<td>
150 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
84
</th>
<td>
Conv2d
</td>
<td>
2.4 M
</td>
<td>
2.4 M
</td>
<td>
9.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 512, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
89
</th>
<td>
Conv2d
</td>
<td>
131 K
</td>
<td>
131 K
</td>
<td>
524 K
</td>
<td>
8.4 M
</td>
<td>
16.8 M
</td>
<td>
[1, 256, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
92
</th>
<td>
Conv2d
</td>
<td>
2.4 M
</td>
<td>
2.4 M
</td>
<td>
9.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 512, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
97
</th>
<td>
Conv2d
</td>
<td>
2.4 M
</td>
<td>
2.4 M
</td>
<td>
9.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 512, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>We can see from the summary that the ResNet18-D model is about <code>45 MB</code> in size and needs to perform about <code>2.7 billion</code> floating-point operations to process a single <code>256x256</code> input image. For context, the larger mid-size ResNet50-D model is about <code>95 MB</code> and performs about <code>5.7 billion</code> floating-point ops for the same image. On the other end, the tiniest variant of the mobile-optimized MobileNetV3 model is <code>2.4 MB</code> and only takes about <code>30 million</code> floating-point operations.</p>
<p>That is valuable information when considering how we will deploy the fine-tuned model. For example, the in-browser demo I mentioned will first download the model to your local machine. The larger the model, the longer it will take for the demo to start. Likewise, the number of floating-point operations will influence what hardware can run the model smoothly. For real-time applications, even milliseconds can matter for inference speed. Inference involves making predictions with a trained model on new, unseen data.</p>
<p>The model architecture also influences inference speed beyond the raw number of floating-point operations. The MobileNetv3 architecture is tuned to mobile phone CPUs, while the ResNet architectures can better leverage larger GPUs.</p>
<p>That completes the model selection and setup. In the next section, we will prepare our dataset for training.</p>
</section>
</section>
<section id="preparing-the-data" class="level2">
<h2 class="anchored" data-anchor-id="preparing-the-data">Preparing the Data</h2>
<p>Next, we will prepare our data for the model training process. The data preparation involves several steps, such as applying data augmentation techniques, resizing and padding the images, and initializing DataLoaders to feed data to the model.</p>
<section id="selecting-a-sample-image" class="level3">
<h3 class="anchored" data-anchor-id="selecting-a-sample-image">Selecting a Sample Image</h3>
<p>Let’s begin by selecting a random image from the dataset to visualize the data preparation steps.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select a random item from the dataset</span></span>
<span id="cb23-2">item_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(img_paths)</span>
<span id="cb23-3"></span>
<span id="cb23-4">label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item_path.parent.name</span>
<span id="cb23-5">sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(item_path)</span>
<span id="cb23-6">    </span>
<span id="cb23-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Image Label: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb23-8">    </span>
<span id="cb23-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb23-10">sample_img</span></code></pre></div>
<pre class="text"><code>Image Label: stop</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_38_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="data-augmentation" class="level3">
<h3 class="anchored" data-anchor-id="data-augmentation">Data Augmentation</h3>
<p>Now, we define what data augmentations to apply to images during training. Data augmentation is a technique that effectively expands the size and diversity of a dataset by creating variations of existing samples. It helps the model learn general features instead of memorizing specific examples.</p>
<p>We will use <a href="https://arxiv.org/abs/2103.10158">trivial augmentation</a>, which applies a single, random transform to each image. This simple method can be highly effective for data augmentation.</p>
<p>PyTorch provides a ready-made transform that implements this augmentation technique. Some default parameters are slightly extreme for this dataset, so we will tweak them using a customized version of the <a href="https://pytorch.org/vision/main/generated/torchvision.transforms.TrivialAugmentWide.html"><code>TrivialAugmentWide</code></a> class from the TorchVision transforms module.</p>
<p>With the modified version, we can pass a dictionary of operations to augment the images, allowing us to customize their parameters.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the number of potential values for each augmentation</span></span>
<span id="cb25-2">num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">31</span></span>
<span id="cb25-3"></span>
<span id="cb25-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the types of potential augmentations and their possible values</span></span>
<span id="cb25-5">custom_augmentation_space <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb25-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identity operation doesn't change the image</span></span>
<span id="cb25-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Identity"</span>: (torch.tensor(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>),</span>
<span id="cb25-8">            </span>
<span id="cb25-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distort the image along the x or y axis, respectively.</span></span>
<span id="cb25-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ShearX"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ShearY"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-12"></span>
<span id="cb25-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move the image along the x or y axis, respectively.</span></span>
<span id="cb25-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TranslateX"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">32.0</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TranslateY"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">32.0</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-16"></span>
<span id="cb25-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Rotate operation: rotates the image.</span></span>
<span id="cb25-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rotate"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">45.0</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-19"></span>
<span id="cb25-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust brightness, color, contrast,and sharpness respectively.</span></span>
<span id="cb25-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Brightness"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Color"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Contrast"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sharpness"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),</span>
<span id="cb25-25"></span>
<span id="cb25-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reduce the number of bits used to express the color in each channel of the image.</span></span>
<span id="cb25-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Posterize"</span>: (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> (torch.arange(num_bins) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ((num_bins <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>),</span>
<span id="cb25-28"></span>
<span id="cb25-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Invert all pixel values above a threshold.</span></span>
<span id="cb25-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Solarize"</span>: (torch.linspace(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, num_bins), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>),</span>
<span id="cb25-31"></span>
<span id="cb25-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximize the image contrast by setting the darkest color to black and the lightest to white.</span></span>
<span id="cb25-33">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AutoContrast"</span>: (torch.tensor(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>),</span>
<span id="cb25-34"></span>
<span id="cb25-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Equalize the image histogram to improve its contrast.</span></span>
<span id="cb25-36">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Equalize"</span>: (torch.tensor(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>), <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>),</span>
<span id="cb25-37">}</span>
<span id="cb25-38"></span>
<span id="cb25-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a CustomTrivialAugmentWide the specified augmentation space</span></span>
<span id="cb25-40">trivial_aug <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CustomTrivialAugmentWide(fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">117</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">104</span>), op_meta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>custom_augmentation_space)</span></code></pre></div>
<p>You can test the custom augmentation method by applying it to the sample image and displaying the result. Remember, the augmentation should be different each time we use it.</p>
<section id="test-the-transform" class="level4">
<h4 class="anchored" data-anchor-id="test-the-transform">Test the transform</h4>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the TrivialAugmentWide to the tensor</span></span>
<span id="cb26-2">trivial_aug(sample_img)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_42_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="image-resizing-and-padding" class="level3">
<h3 class="anchored" data-anchor-id="image-resizing-and-padding">Image Resizing and Padding</h3>
<p>Next, we will use a couple of image transforms to resize and pad images, making them a uniform size. Making all the input images the same size allows us to feed samples to the model in batches to leverage our GPU more efficiently.</p>
<p>The <a href="https://cj-mills.github.io/cjm-torchvision-tfms/core.html#resizemax">first</a> resizes images based on their largest dimension rather than their smallest. The <a href="https://cj-mills.github.io/cjm-torchvision-tfms/core.html#padsquare">second</a> applies square padding and allows the padding to be applied equally on both sides or randomly split between the two sides.</p>
<p>For training, we’ll resize and pad the images to <code>288x288</code>. That should be large enough for the model to get adequate detail while keeping training time low.</p>
<section id="set-training-image-size" class="level4">
<h4 class="anchored" data-anchor-id="set-training-image-size">Set training image size</h4>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">train_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span></span></code></pre></div>
</section>
<section id="test-the-transform-1" class="level4">
<h4 class="anchored" data-anchor-id="test-the-transform-1">Test the transform</h4>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crop the source image</span></span>
<span id="cb28-2">w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_img.size</span>
<span id="cb28-3">cropped_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_img.crop([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, w, h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb28-4"></span>
<span id="cb28-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compose transforms to resize and pad input images</span></span>
<span id="cb28-6">resize_pad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.Compose([</span>
<span id="cb28-7">    ResizeMax(max_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_sz),                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a `ResizeMax` object</span></span>
<span id="cb28-8">    PadSquare(shift<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>),                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a `PadSquare` object</span></span>
<span id="cb28-9">    transforms.Resize([train_sz] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, antialias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the image is square</span></span>
<span id="cb28-10">])</span>
<span id="cb28-11"></span>
<span id="cb28-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize and pad the tensor</span></span>
<span id="cb28-13">resized_padded_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_pad(cropped_img)</span>
<span id="cb28-14"></span>
<span id="cb28-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the updated image</span></span>
<span id="cb28-16">display(resized_padded_img)</span>
<span id="cb28-17"></span>
<span id="cb28-18">pd.Series({</span>
<span id="cb28-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source Image:"</span>: sample_img.size,</span>
<span id="cb28-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cropped Image:"</span>: cropped_img.size,</span>
<span id="cb28-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resized Padded Image:"</span>: resized_padded_img.size,</span>
<span id="cb28-22">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_47_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_90121">
<thead>
</thead>
<tbody>
<tr>
<th id="T_90121_level0_row0" class="row_heading level0 row0">
Source Image:
</th>
<td id="T_90121_row0_col0" class="data row0 col0">
(512, 512)
</td>
</tr>
<tr>
<th id="T_90121_level0_row1" class="row_heading level0 row1">
Cropped Image:
</th>
<td id="T_90121_row1_col0" class="data row1 col0">
(512, 256)
</td>
</tr>
<tr>
<th id="T_90121_level0_row2" class="row_heading level0 row2">
Resized Padded Image:
</th>
<td id="T_90121_row2_col0" class="data row2 col0">
(288, 288)
</td>
</tr>
</tbody>

</table>
</div>
</section>
</section>
<section id="create-a-fastai-transform-wrapper" class="level3">
<h3 class="anchored" data-anchor-id="create-a-fastai-transform-wrapper">Create a Fastai Transform Wrapper</h3>
<p>The fastai library uses a custom <a href="https://fastcore.fast.ai/transform.html"><code>Transform</code></a> class for working with its DataLoaders. We can still use our TorchVision transforms by creating a simple wrapper class.</p>
<p>Later, we will use fastai’s <a href="https://docs.fast.ai/learner.html#learner.export"><code>Learner.export</code></a> method to export our training pipeline to a file. The export method uses Python’s <a href="https://docs.python.org/3/library/pickle.html">pickle</a> object serialization module, so we must save this wrapper class to disk for future use.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>writefile fastai_transforms.py</span>
<span id="cb29-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision</span>
<span id="cb29-3">torchvision.disable_beta_transforms_warning()</span>
<span id="cb29-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms.v2  <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> transforms</span>
<span id="cb29-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastcore.transform <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Transform</span>
<span id="cb29-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.vision.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PILImage</span>
<span id="cb29-7"></span>
<span id="cb29-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> TorchvisionComposeWrapper(Transform):</span>
<span id="cb29-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb29-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Wrap Torchvision transforms for use within Fastai's pipeline.</span></span>
<span id="cb29-11"></span>
<span id="cb29-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb29-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - transforms_list (list): List of Torchvision transforms.</span></span>
<span id="cb29-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb29-15">    </span>
<span id="cb29-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, transforms_list):</span>
<span id="cb29-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Initialize with a list of torchvision transforms."""</span></span>
<span id="cb29-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transforms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.Compose(transforms_list)</span>
<span id="cb29-19"></span>
<span id="cb29-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> encodes(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x: PILImage) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> PILImage:</span>
<span id="cb29-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Apply the Torchvision transformations to the PILImage."""</span></span>
<span id="cb29-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> PILImage(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.transforms(x))</span></code></pre></div>
<pre class="text"><code>Overwriting fastai_transforms.py</code></pre>
</section>
<section id="item-and-batch-transforms" class="level3">
<h3 class="anchored" data-anchor-id="item-and-batch-transforms">Item and Batch Transforms</h3>
<p>Now, we can import our wrapper class and define what transforms to apply to individual images and batches of tensors.</p>
<p>We will apply the data augmentations, resizing, and padding to individual images and normalize input in batches.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai_transforms <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> TorchvisionComposeWrapper</span>
<span id="cb31-2"></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the transformations to apply to individual images</span></span>
<span id="cb31-4">img_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [trivial_aug, resize_pad]</span>
<span id="cb31-5">item_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [TorchvisionComposeWrapper(img_tfms)]</span>
<span id="cb31-6"></span>
<span id="cb31-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert normalization stats to tensors</span></span>
<span id="cb31-8">mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).to(device)</span>
<span id="cb31-9">std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).to(device)</span>
<span id="cb31-10"></span>
<span id="cb31-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the transforms to apply to batches of tensors</span></span>
<span id="cb31-12">batch_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Normalize(mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mean_tensor, std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>std_tensor)]</span></code></pre></div>
</section>
<section id="training-batch-size" class="level3">
<h3 class="anchored" data-anchor-id="training-batch-size">Training Batch Size</h3>
<p>Next, we set the batch size for training. This number indicates how many sample images get fed to the model at once. The larger the batch size, the more GPU memory we need. The current batch size should be fine for most modern GPUs. If you still get an out-of-memory error, try lowering the batch size to 8, then restart the Jupyter Notebook.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span></code></pre></div>
</section>
<section id="initialize-dataloaders" class="level3">
<h3 class="anchored" data-anchor-id="initialize-dataloaders">Initialize DataLoaders</h3>
<p>fastai makes it easy to initialize the DataLoaders for an image dataset from a single <a href="https://docs.fast.ai/vision.data.html#imagedataloaders.from_folder">function call</a>.</p>
<p>fastai will automatically split the dataset samples into training and validation sets based on the percentage we specify. The model will use the training set to update its parameters, and we will use the validation set to evaluate model performance on data it has not seen before.</p>
<p>Validation sets are needed when training models because we want to verify the model can generalize well to new data before we deploy it. Since we want to see how the model performs on regular images instead of augmented ones, we will remove the trivial augmentation transform from the validation DataLoader object.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataLoaders.from_folder(</span>
<span id="cb33-2">    path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_path,    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the root folder containing the images.</span></span>
<span id="cb33-3">    valid_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The percentage of the images to use for validation</span></span>
<span id="cb33-4">    bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs,                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The number of samples to process in a single pass through the model</span></span>
<span id="cb33-5">    item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>item_tfms,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A list of transformations to apply to each individual image.</span></span>
<span id="cb33-6">    batch_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_tfms <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A list of transformations to apply to each batch of tensors</span></span>
<span id="cb33-7">)</span>
<span id="cb33-8"></span>
<span id="cb33-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the trivial augmentation transform</span></span>
<span id="cb33-10">dls.valid.after_item <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Pipeline([TorchvisionComposeWrapper(img_tfms[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]), ToTensor])</span>
<span id="cb33-11"></span>
<span id="cb33-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of batches in the training and validation DataLoaders</span></span>
<span id="cb33-13">pd.Series({</span>
<span id="cb33-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of batches in train DataLoader:'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dls.train),</span>
<span id="cb33-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of batches in validation DataLoader:'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dls.valid)}</span>
<span id="cb33-16">).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_c6731">
<thead>
</thead>
<tbody>
<tr>
<th id="T_c6731_level0_row0" class="row_heading level0 row0">
Number of batches in train DataLoader:
</th>
<td id="T_c6731_row0_col0" class="data row0 col0">
4323
</td>
</tr>
<tr>
<th id="T_c6731_level0_row1" class="row_heading level0 row1">
Number of batches in validation DataLoader:
</th>
<td id="T_c6731_row1_col0" class="data row1 col0">
481
</td>
</tr>
</tbody>

</table>
</div>
<p>Before we move on, let’s verify the DataLoaders are applying the transforms as intended.</p>
</section>
<section id="inspect-samples" class="level3">
<h3 class="anchored" data-anchor-id="inspect-samples">Inspect Samples</h3>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">dls.train.show_batch()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_57_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">dls.valid.show_batch()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_58_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>From the above samples, we can see the training DataLoader is indeed applying the random augmentations and resizing/padding the images to squares. Meanwhile, the validation DataLoader only resizes and pads the samples.</p>
<p>That completes the data preparation. Now, we can finally train our hand gesture recognizer.</p>
</section>
</section>
<section id="fine-tuning-the-model" class="level2">
<h2 class="anchored" data-anchor-id="fine-tuning-the-model">Fine-tuning the Model</h2>
<p>In this section, we will use fastai to fine-tune our model.</p>
<section id="set-the-model-checkpoint-path" class="level3">
<h3 class="anchored" data-anchor-id="set-the-model-checkpoint-path">Set the Model Checkpoint Path</h3>
<p>Before we proceed with training, we will generate a timestamp for the training session and create a directory to store a checkpoint for the fine-tuned model. That enables us to load the model later to resume training, export the model to a different format, or perform inference directly.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate timestamp for the training session (Year-Month-Day_Hour_Minute_Second)</span></span>
<span id="cb36-2">timestamp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now().strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y-%m-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_%H-%M-%S"</span>)</span>
<span id="cb36-3"></span>
<span id="cb36-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a directory to store the checkpoints if it does not already exist</span></span>
<span id="cb36-5">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>timestamp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-6"></span>
<span id="cb36-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the checkpoint directory if it does not already exist</span></span>
<span id="cb36-8">checkpoint_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb36-9"></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The model checkpoint path</span></span>
<span id="cb36-11">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.pth"</span></span>
<span id="cb36-12"></span>
<span id="cb36-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(checkpoint_path)</span></code></pre></div>
<pre class="text"><code>fastai-timm-image-classifier/2023-10-06_11-17-36/resnet18d.pth</code></pre>
<p>We will also save a copy of the normalization stats and the class labels for the current dataset in the training folder for future use.</p>
</section>
<section id="save-the-normalization-stats" class="level3">
<h3 class="anchored" data-anchor-id="save-the-normalization-stats">Save the Normalization Stats</h3>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert tuples to dictionaries for easier JSON representation</span></span>
<span id="cb38-2">norm_stats_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>: norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"std_dev"</span>: norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]}</span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export to JSON</span></span>
<span id="cb38-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/norm_stats.json"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb38-6">    json.dump(norm_stats_dict, f)</span>
<span id="cb38-7"></span>
<span id="cb38-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the name of the file that the normalization stats were written to</span></span>
<span id="cb38-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/norm_stats.json"</span>)</span></code></pre></div>
<pre class="text"><code>fastai-timm-image-classifier/2023-10-06_11-17-36/norm_stats.json</code></pre>
</section>
<section id="saving-the-class-labels" class="level3">
<h3 class="anchored" data-anchor-id="saving-the-class-labels">Saving the Class Labels</h3>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save class labels</span></span>
<span id="cb40-2">class_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classes"</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(dls.vocab)}</span>
<span id="cb40-3"></span>
<span id="cb40-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set file path</span></span>
<span id="cb40-5">class_labels_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-classes.json"</span></span>
<span id="cb40-6"></span>
<span id="cb40-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save class labels in JSON format</span></span>
<span id="cb40-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> write_file:</span>
<span id="cb40-9">    json.dump(class_labels, write_file)</span>
<span id="cb40-10">    </span>
<span id="cb40-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(class_labels_path)</span></code></pre></div>
<pre class="text"><code>fastai-timm-image-classifier/2023-10-06_11-17-36/hagrid-classification-512p-no-gesture-150k-zip-classes.json</code></pre>
</section>
<section id="initialize-the-fastai-learner" class="level3">
<h3 class="anchored" data-anchor-id="initialize-the-fastai-learner">Initialize the Fastai Learner</h3>
<p>fastai uses a <a href="https://docs.fast.ai/learner.html#learner"><code>Learner</code></a> object to facilitate the training process. A Learner object groups the model, DataLoaders, and a loss function to handle training.</p>
<p>Loss refers to a number representing how far model predictions are from the actual values. The loss value influences how the model parameters change to learn the desired task. The goal of training is to minimize this value.</p>
<p>The Learner object also allows us to specify what performance metrics we want to help us gauge model performance during training.</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">learn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Learner(dls, model, metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[error_rate, accuracy], model_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>checkpoint_dir.absolute())</span></code></pre></div>
</section>
<section id="find-the-learning-rate" class="level3">
<h3 class="anchored" data-anchor-id="find-the-learning-rate">Find the Learning Rate</h3>
<p>We use a learning rate value to limit how much the model parameters change based on the loss value after each batch. Using a learning rate that is either too big or too small will prevent the model from reaching its ideal performance potential.</p>
<p>Finding a suitable learning rate value can require experimentation based on the model and dataset. Fortunately, fastai provides a method to automate finding a reasonable value. It increases the learning rate in a mock training session and tracks how the different values influence the loss. It then suggests a learning rate based on its findings.</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">suggested_lrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.lr_find()</span>
<span id="cb43-2">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> suggested_lrs.valley<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb43-3"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Learning Rate: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>lr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span></code></pre></div>
<pre class="text"><code>'Learning Rate: 0.0006872603116789833'</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_70_3.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="train-the-model" class="level3">
<h3 class="anchored" data-anchor-id="train-the-model">Train the Model</h3>
<p>The training process revolves around the concept of an epoch. Each epoch represents one complete pass through the entire training and validation sets. A Learner object handles iterating through the training and validation sets and feeding batches to the model.</p>
<p>For each batch of data, it performs a forward pass (calculating the predictions of the model), computes the loss, and then, if in training mode, performs a backward pass to adjust the model parameters.</p>
<p>We also have the option to use mixed precision training. Mixed-precision training involves performing some operations in 16-bit precision to speed up training and reduce memory requirements. Modern GPUs tend to have specialized hardware to accelerate these lower-precision operations, and this feature allows us to utilize that.</p>
<p>Training time will depend on the available hardware. Feel free to take a break if the progress bar indicates it will take a while.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<p>Training usually takes around 1 hour and 20 minutes on the free GPU tier of Google Colab.</p>
</div>
</div>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">learn.fine_tune(epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, base_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, cbs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[MixedPrecision()])</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
epoch
</th>
<th>
train_loss
</th>
<th>
valid_loss
</th>
<th>
error_rate
</th>
<th>
accuracy
</th>
<th>
time
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0
</td>
<td>
0.187279
</td>
<td>
0.066428
</td>
<td>
0.020100
</td>
<td>
0.979900
</td>
<td>
02:10
</td>
</tr>
</tbody>

</table>
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
epoch
</th>
<th>
train_loss
</th>
<th>
valid_loss
</th>
<th>
error_rate
</th>
<th>
accuracy
</th>
<th>
time
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0
</td>
<td>
0.094745
</td>
<td>
0.035263
</td>
<td>
0.009822
</td>
<td>
0.990178
</td>
<td>
02:14
</td>
</tr>
<tr>
<td>
1
</td>
<td>
0.023652
</td>
<td>
0.020634
</td>
<td>
0.006180
</td>
<td>
0.993820
</td>
<td>
02:13
</td>
</tr>
<tr>
<td>
2
</td>
<td>
0.016321
</td>
<td>
0.014328
</td>
<td>
0.004488
</td>
<td>
0.995512
</td>
<td>
02:14
</td>
</tr>
</tbody>

</table>
</div>
<p>At last, we have our hand gesture recognizer. The readout for the final epoch indicates the model achieved over <code>99.5%</code> accuracy, meaning it missed less than <code>100</code> of the <code>15,373</code> samples in the validation set.</p>
<p>As mentioned above, we can export our Learner object to a file for future use. We can also save the model checkpoint separately if we want to use the model without needing fastai.</p>
</section>
<section id="save-the-learner" class="level3">
<h3 class="anchored" data-anchor-id="save-the-learner">Save the Learner</h3>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">learn.export(checkpoint_dir.absolute()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.pkl"</span>)</span></code></pre></div>
</section>
<section id="save-the-model-checkpoint" class="level3">
<h3 class="anchored" data-anchor-id="save-the-model-checkpoint">Save the Model Checkpoint</h3>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">torch.save(learn.model.state_dict(), checkpoint_path)</span></code></pre></div>
</section>
</section>
<section id="making-predictions-with-the-model" class="level2">
<h2 class="anchored" data-anchor-id="making-predictions-with-the-model">Making Predictions with the Model</h2>
<p>In this final part of the tutorial, you will learn how to make predictions with the fine-tuned model on individual images, allowing us to see the model in action and assess its performance. Understanding how to apply trained models is crucial for implementing them in real-world applications.</p>
<p>We will use the same size as the input images used during training but allow non-square input.</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the minimum input dimension for inference </span></span>
<span id="cb48-2">infer_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_sz</span></code></pre></div>
<p>Next, we will randomly select an image from the validation set and resize it to the inference size. The <a href="https://cj-mills.github.io/cjm-pil-utils/core.html#resize_img">resize_img</a> function will scale the image so the smallest dimension is the specified inference size while maintaining the original aspect ratio.</p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Choose a random item from the dataset</span></span>
<span id="cb49-2">item_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(dls.valid_ds.items)</span>
<span id="cb49-3"></span>
<span id="cb49-4">label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> item_path.parent.name</span>
<span id="cb49-5"></span>
<span id="cb49-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the image and resize it</span></span>
<span id="cb49-7">sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(item_path)</span>
<span id="cb49-8">inp_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(sample_img.copy(), infer_sz)</span></code></pre></div>
<p>We then convert the image to a normalized tensor using the <a href="https://cj-mills.github.io/cjm-pytorch-utils/core.html#pil_to_tensor">pil_to_tensor</a> function and move it to the device where our model resides (CPU or GPU).</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a normalized tensor and move it to the device</span></span>
<span id="cb50-2">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pil_to_tensor(inp_img, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats).to(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device)</span></code></pre></div>
<p>With our image prepared, we can now use our model to make a prediction. The following code block runs our model in a no-gradient context using <code>torch.no_grad()</code>. That informs PyTorch that we do not need to keep track of gradients in this operation, saving memory.</p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb51-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb51-3">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model(img_tensor)</span></code></pre></div>
<p>After obtaining the raw prediction, we apply the <a href="https://pytorch.org/docs/stable/generated/torch.nn.Softmax.html">Softmax</a> function to convert these values into probabilities that sum up to 1.</p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale the model predictions to add up to 1</span></span>
<span id="cb52-2">pred_scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.softmax(pred, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<p>Then, we retrieve the highest confidence score and its corresponding class index. We retrieve the label mapped to the class index using the <code>dls.vocab</code> lookup table.</p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the highest confidence score</span></span>
<span id="cb53-2">confidence_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_scores.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb53-3"></span>
<span id="cb53-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class index with the highest confidence score and convert it to the class name</span></span>
<span id="cb53-5">pred_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dls.vocab[torch.argmax(pred_scores)]</span></code></pre></div>
<p>Finally, we display the sample image for visual verification and print the prediction data, including the target class, the predicted class, and the confidence score of the prediction.</p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb54-2">display(sample_img)</span>
<span id="cb54-3"></span>
<span id="cb54-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the prediction data as a Pandas DataFrame for easy formatting</span></span>
<span id="cb54-5">pd.Series({</span>
<span id="cb54-6">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Target Class:"</span>: label,</span>
<span id="cb54-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class:"</span>: pred_class,</span>
<span id="cb54-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Score:"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>confidence_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span></span>
<span id="cb54-9">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_78_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_8448f">
<thead>
</thead>
<tbody>
<tr>
<th id="T_8448f_level0_row0" class="row_heading level0 row0">
Target Class:
</th>
<td id="T_8448f_row0_col0" class="data row0 col0">
two_up
</td>
</tr>
<tr>
<th id="T_8448f_level0_row1" class="row_heading level0 row1">
Predicted Class:
</th>
<td id="T_8448f_row1_col0" class="data row1 col0">
two_up
</td>
</tr>
<tr>
<th id="T_8448f_level0_row2" class="row_heading level0 row2">
Confidence Score:
</th>
<td id="T_8448f_row2_col0" class="data row2 col0">
100.00%
</td>
</tr>
</tbody>

</table>
</div>
<section id="testing-the-model-on-new-data" class="level3">
<h3 class="anchored" data-anchor-id="testing-the-model-on-new-data">Testing the Model on New Data</h3>
<p>Next, we can try a potentially more challenging image from the free stock photo site <a href="https://www.pexels.com/photo/man-doing-rock-and-roll-sign-2769554/">Pexels</a>.</p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1">test_img_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pexels-elina-volkova-16191659.jpg"</span></span>
<span id="cb55-2">test_img_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/cj-mills/pexel-hand-gesture-test-images/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb55-3"></span>
<span id="cb55-4">download_file(test_img_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb55-5"></span>
<span id="cb55-6">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_img_name)</span>
<span id="cb55-7">test_img</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_80_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can see a <code>mute</code> hand gesture in the photo. However, the image might be tricky, as multi-colored powder covers the individual.</p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1">target_cls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mute"</span></span>
<span id="cb56-2"></span>
<span id="cb56-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the minimum input dimension for inference </span></span>
<span id="cb56-4">infer_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_sz</span>
<span id="cb56-5"></span>
<span id="cb56-6">inp_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(test_img.copy(), infer_sz)</span>
<span id="cb56-7"></span>
<span id="cb56-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a normalized tensor and move it to the device</span></span>
<span id="cb56-9">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pil_to_tensor(inp_img, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats).to(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device)</span>
<span id="cb56-10"></span>
<span id="cb56-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb56-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb56-13">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model(img_tensor)</span>
<span id="cb56-14">        </span>
<span id="cb56-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale the model predictions to add up to 1</span></span>
<span id="cb56-16">pred_scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.softmax(pred, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb56-17"></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the highest confidence score</span></span>
<span id="cb56-19">confidence_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pred_scores.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb56-20"></span>
<span id="cb56-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class index with the highest confidence score and convert it to the class name</span></span>
<span id="cb56-22">pred_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dls.vocab[torch.argmax(pred_scores)]</span>
<span id="cb56-23"></span>
<span id="cb56-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb56-25">display(test_img)</span>
<span id="cb56-26"></span>
<span id="cb56-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the prediction data as a Pandas DataFrame for easy formatting</span></span>
<span id="cb56-28">pd.Series({</span>
<span id="cb56-29">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Size:"</span>: inp_img.size,</span>
<span id="cb56-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Target Class:"</span>: target_cls,</span>
<span id="cb56-31">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class:"</span>: pred_class,</span>
<span id="cb56-32">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Score:"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>confidence_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span></span>
<span id="cb56-33">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/images/output_81_0.png" class="img-fluid figure-img"></p>
</figure>
</div>

<table id="T_510a1">
<thead>
</thead>
<tbody>
<tr>
<th id="T_510a1_level0_row0" class="row_heading level0 row0">
Input Size:
</th>
<td id="T_510a1_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
<tr>
<th id="T_510a1_level0_row1" class="row_heading level0 row1">
Target Class:
</th>
<td id="T_510a1_row1_col0" class="data row1 col0">
mute
</td>
</tr>
<tr>
<th id="T_510a1_level0_row2" class="row_heading level0 row2">
Predicted Class:
</th>
<td id="T_510a1_row2_col0" class="data row2 col0">
mute
</td>
</tr>
<tr>
<th id="T_510a1_level0_row3" class="row_heading level0 row3">
Confidence Score:
</th>
<td id="T_510a1_row3_col0" class="data row3 col0">
99.99%
</td>
</tr>
</tbody>

</table>
<p>It appears the colorful powder was not an issue, as the model confidently predicted <code>mute</code> as the most likely gesture.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>Don’t forget to download the model checkpoint and class labels from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</li>
<li>Once you finish training and download the files, turn off hardware acceleration for the Colab Notebook to save GPU time. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#using-hardware-acceleration">tutorial link</a>)</li>
</ol>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on completing this tutorial on fine-tuning image classifiers with fastai and the timm library! You’ve taken significant strides in your machine learning journey by creating a practical hand gesture recognizer.</p>
<p>Throughout this tutorial, we’ve covered many topics, including setting up your Python environment, importing necessary dependencies, project initialization, dataset loading and exploration, model selection, data preparation, and model fine-tuning. Finally, we made predictions with our fine-tuned model on individual images.</p>
<p>This hands-on tutorial underscored the practical applications of fine-tuning image classification models, especially when working with limited data and computational resources. The hand gesture recognizer you’ve built has many real-world applications, and you now have a solid foundation to tackle other image classification tasks.</p>
<p>If you’re intrigued by the underlying concepts leveraged in this tutorial and wish to deepen your understanding, I recommend fast.ai’s <a href="https://course.fast.ai/">Practical Deep Learning for Coders</a> course. By the end, you’ll thoroughly understand the model and training code and have the know-how to implement them from scratch.</p>
<p>If you found this guide helpful, consider sharing it with others and exploring some of my other tutorials linked below.</p>
</section>
<section id="recommended-tutorials" class="level2">
<h2 class="anchored" data-anchor-id="recommended-tutorials">Recommended Tutorials</h2>
<ul>
<li><a href="./onnx-export/"><strong>Exporting timm Image Classifiers from Fastai to ONNX</strong></a><strong>:</strong> Learn how to export timm image classification models from fastai to ONNX and perform inference using ONNX Runtime.</li>
<li><a href="../pytorch-train-object-detector-yolox-tutorial/"><strong>Training YOLOX Models for Real-Time Object Detection in Pytorch</strong></a>: Learn how to train YOLOX models for real-time object detection in PyTorch by creating a hand gesture detection model.</li>
</ul>


</section>

 ]]></description>
  <category>fastai</category>
  <category>image-classification</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/fastai-train-image-classifier-timm-tutorial/index.html</guid>
  <pubDate>Fri, 06 Oct 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Exporting YOLOX Models from PyTorch to TensorFlow.js</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/tfjs-export/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/pytorch-train-object-detector-yolox-series.html"><strong>Training YOLOX Models for Real-Time Object Detection in PyTorch</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading the Checkpoint Data</li>
<li>Converting the Model to TensorFlow</li>
<li>Exporting the Model to TensorFlow.js</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on training YOLOX models for real-time applications! <a href="../">Previously</a>, we demonstrated how to fine-tune a YOLOX model in PyTorch by creating a hand gesture detector. This tutorial builds on that by showing how to export the model to <a href="https://www.tensorflow.org/js">TensorFlow.js</a>.</p>
<p>TensorFlow.js is an open-source hardware-accelerated JavaScript library for training and deploying machine learning models in web browsers. Converting our YOLOX model to TensorFlow.js allows us to run and integrate it directly into web applications without server-side processing.</p>
<p>Check out a live demo using the YOLOX model in a Unity WebGL application at the link below:</p>
<ul>
<li><a href="https://cj-mills.github.io/unity-tfjs-inference-yolox-demo/">Unity TensorFlow.js Inference YOLOX Demo</a></li>
</ul>
<p>We’ll first use a tool called <a href="https://github.com/AlexanderLutsenko/nobuco">nobuco</a> to translate the PyTorch model to a <a href="https://www.tensorflow.org/guide/keras">TensorFlow Keras</a> model. We can then use the official TensorFlow.js conversion tool to export the Keras model to a TensorFlow.js Graph model.</p>
<p>By the end of this tutorial, you will have a TensorFlow.js version of our YOLOX model that you can deploy to web applications and have it run locally in web browsers.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../">Training YOLOX Models for Real-Time Object Detection in Pytorch</a></li>
</ul>
</div>
</div>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/pytorch-yolox-object-detector-nobuco-tfjs-export.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/pytorch-yolox-object-detector-nobuco-tfjs-export-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>We’ll need to add a couple of new packages to our <a href="../#setting-up-your-python-environment">Python environment</a>.</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>nobuco</code></td>
<td>A tool that helps you translate pytorch models into TensorFlow graphs. (<a href="https://github.com/AlexanderLutsenko/nobuco">link</a>)</td>
</tr>
<tr class="even">
<td><code>tensorflowjs</code></td>
<td>A pip package that contains libraries and tools for TensorFlow.js (<a href="https://pypi.org/project/tensorflowjs/">link</a>)</td>
</tr>
</tbody>
</table>
<p>Run the following command to install these additional libraries:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install additional packages</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install nobuco tensorflowjs</span></code></pre></div>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>With our environment updated, we can dive into the code. First, we will import the necessary Python dependencies into our Jupyter Notebook.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import YOLOX package</span></span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_yolox_pytorch.model <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> build_model</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_yolox_pytorch.inference <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> YOLOXInferenceWrapper</span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb2-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb2-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Nobuco dependencies</span></span>
<span id="cb2-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nobuco <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pytorch_to_keras, ChannelOrder</span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import TensorFlow.js dependencies</span></span>
<span id="cb2-19"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tensorflowjs <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> converters, quantization</span></code></pre></div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>In this section, we’ll set the folder locations for our project and training session with the PyTorch checkpoint.</p>
<section id="set-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="set-the-directory-paths">Set the Directory Paths</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb3-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pytorch-yolox-object-detector"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb3-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb3-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb3-11">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2023-08-17_16-14-43"</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13">pd.Series({</span>
<span id="cb3-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir,</span>
<span id="cb3-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb3-16">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_3c82a">
<thead>
</thead>
<tbody>
<tr>
<th id="T_3c82a_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_3c82a_row0_col0" class="data row0 col0">
pytorch-yolox-object-detector
</td>
</tr>
<tr>
<th id="T_3c82a_level0_row1" class="row_heading level0 row1">
Checkpoint Directory:
</th>
<td id="T_3c82a_row1_col0" class="data row1 col0">
pytorch-yolox-object-detector/2023-08-17_16-14-43
</td>
</tr>
</tbody>

</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="I made some model checkpoints available on Hugging Face Hub in the repository linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
I made some model checkpoints available on Hugging Face Hub in the repository linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://huggingface.co/cj-mills/yolox-hagrid-pytorch/tree/main">cj-mills/yolox-hagrid-pytorch</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the colormap and normalization stats used during training and initialize a YOLOX model with the saved checkpoint.</p>
<section id="load-the-colormap" class="level3">
<h3 class="anchored" data-anchor-id="load-the-colormap">Load the Colormap</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The colormap path</span></span>
<span id="cb4-2">colormap_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*colormap.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON colormap data</span></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(colormap_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb4-6">        colormap_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb4-7"></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the JSON data to a dictionary        </span></span>
<span id="cb4-9">colormap_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]: item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormap_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]}</span>
<span id="cb4-10"></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the class names from the colormap</span></span>
<span id="cb4-12">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(colormap_dict.keys())</span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of the colormap in integer format</span></span>
<span id="cb4-15">int_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> color) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormap_dict.values()]</span></code></pre></div>
</section>
<section id="load-the-normalization-statistics" class="level3">
<h3 class="anchored" data-anchor-id="load-the-normalization-statistics">Load the Normalization Statistics</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The normalization stats path</span></span>
<span id="cb5-2">norm_stats_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'norm_stats.json'</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the normalization stats from the JSON file</span></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(norm_stats_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb5-6">    norm_stats_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the dictionary to a tuple</span></span>
<span id="cb5-9">norm_stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (norm_stats_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mean"</span>], norm_stats_dict[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"std_dev"</span>])</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the mean and standard deviation</span></span>
<span id="cb5-12">pd.DataFrame(norm_stats)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
<th>
1
</th>
<th>
2
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
0.5
</td>
<td>
0.5
</td>
<td>
0.5
</td>
</tr>
<tr>
<th>
1
</th>
<td>
1.0
</td>
<td>
1.0
</td>
<td>
1.0
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="load-the-model-checkpoint" class="level3">
<h3 class="anchored" data-anchor-id="load-the-model-checkpoint">Load the Model Checkpoint</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The model checkpoint path</span></span>
<span id="cb6-2">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.pth'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model checkpoint onto the CPU</span></span>
<span id="cb6-5">model_checkpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(checkpoint_path, map_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>)</span></code></pre></div>
</section>
<section id="load-the-trained-yolox-model" class="level3">
<h3 class="anchored" data-anchor-id="load-the-trained-yolox-model">Load the Trained YOLOX Model</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select the YOLOX model configuration</span></span>
<span id="cb7-2">model_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_path.stem</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a YOLOX model with the number of output classes equal to the number of class names</span></span>
<span id="cb7-5">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> build_model(model_type, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(class_names))</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the model with the checkpoint parameters and buffers</span></span>
<span id="cb7-8">model.load_state_dict(model_checkpoint)</span></code></pre></div>
<pre class="text"><code>&lt;All keys matched successfully&gt;</code></pre>
</section>
</section>
<section id="converting-the-model-to-tensorflow" class="level2">
<h2 class="anchored" data-anchor-id="converting-the-model-to-tensorflow">Converting the Model to TensorFlow</h2>
<p>Before exporting the model, we’ll wrap it with the preprocessing steps as we did <a href="../#preparing-the-model-for-inference">previously</a>. These steps will be included in the TensorFlow.js model, reducing the code we need to write when deploying the model.</p>
<section id="prepare-the-model-for-inference" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-model-for-inference">Prepare the Model for Inference</h3>
<p>The <a href="https://cj-mills.github.io/cjm-yolox-pytorch/inference.html#yoloxinferencewrapper"><code>YOLOXInferenceWrapper</code></a> class has some optional settings we did not explore in the previous tutorial. The <code>scale_inp</code> parameter will scale pixel data from the range <code>[0,255]</code> to <code>[0,1]</code>, and <code>channels_last</code> sets the model to expect input tensors in channels-last format.</p>
<p>Image data in JavaScript tends to be in the range <code>[0,255]</code>, so we’ll want to enable the <code>scale_inp</code> setting. The nobuco conversion tool automatically sets the model to the channels-last format for TensorFlow.</p>
<p>Additionally, we can turn off the post-processing steps to compute the predicted bounding box information and probability scores. We’ll need to do this when converting the model to TensorFlow using the nobuco tool as it throws an error with them enabled.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the normalization stats to tensors</span></span>
<span id="cb9-2">mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-3">std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor(norm_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the model to evaluation mode</span></span>
<span id="cb9-6">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wrap the model with preprocessing and post-processing steps</span></span>
<span id="cb9-9">wrapped_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXInferenceWrapper(model, </span>
<span id="cb9-10">                                      mean_tensor, </span>
<span id="cb9-11">                                      std_tensor, </span>
<span id="cb9-12">                                      scale_inp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale input values from the rang [0,255] to [0,1]</span></span>
<span id="cb9-13">                                      channels_last<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Have the model expect input in channels-last format</span></span>
<span id="cb9-14">                                      run_box_and_prob_calculation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable or disable post-processing steps</span></span>
<span id="cb9-15">                                     )</span></code></pre></div>
</section>
<section id="prepare-the-input-tensor" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor">Prepare the Input Tensor</h3>
<p>We need a sample input tensor for the conversion process.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span>)</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The exported TensorFlow.js model will lock to this input resolution, so pick dimensions suitable for your intended use case.</p>
</div>
</div>
</section>
<section id="convert-the-pytorch-model-to-keras" class="level3">
<h3 class="anchored" data-anchor-id="convert-the-pytorch-model-to-keras">Convert the PyTorch Model to Keras</h3>
<p>We use the <code>pytorch_to_keras</code> function included with nobuco to convert the YOLOX model from PyTorch to a <a href="https://www.tensorflow.org/guide/keras">Keras</a> model. While we can stick with the default channel order for the model input, we need to maintain the output channel order from the original PyTorch model.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">keras_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pytorch_to_keras(</span>
<span id="cb11-2">    wrapped_model, </span>
<span id="cb11-3">    args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[input_tensor],</span>
<span id="cb11-4">    outputs_channel_order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ChannelOrder.PYTORCH, </span>
<span id="cb11-5">)</span></code></pre></div>
</section>
<section id="save-the-keras-model-in-savedmodel-format" class="level3">
<h3 class="anchored" data-anchor-id="save-the-keras-model-in-savedmodel-format">Save the Keras Model in SavedModel format</h3>
<p>Next, we save the Keras model in TensorFlow’s SavedModel format, the recommended format for exporting to TensorFlow.js.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the folder path for the SavedModel files</span></span>
<span id="cb12-2">savedmodel_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>colormap_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-colormap'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_type<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-tf"</span>)</span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the TensorFlow model to disk</span></span>
<span id="cb12-4">keras_model.save(savedmodel_dir, save_format<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tf"</span>)</span></code></pre></div>
</section>
</section>
<section id="exporting-the-model-to-tensorflow.js" class="level2">
<h2 class="anchored" data-anchor-id="exporting-the-model-to-tensorflow.js">Exporting the Model to TensorFlow.js</h2>
<p>With our TensorFlow model saved to disk, we can use the TensorFlow.js conversion tool to export it to a TensorFlow.js Graph model.</p>
<p>Since the model will run locally in the browser, it must first download to the user’s device. The larger the model, the longer users must wait for it to download.</p>
<p>Fortunately, the TensorFlow.js conversion tool lets us quantize the model weights (i.e., convert them from 32-bit floating-point precision to 8-bit integers), significantly reducing their file size.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the path for TensorFlow.js model files</span></span>
<span id="cb13-2">tfjs_model_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>savedmodel_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">js-uint8"</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the TensorFlow SavedModel to a TensorFlow.js Graph model</span></span>
<span id="cb13-5">converters.convert_tf_saved_model(saved_model_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(savedmodel_dir), </span>
<span id="cb13-6">                                  output_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tfjs_model_dir, </span>
<span id="cb13-7">                                  quantization_dtype_map<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{quantization.QUANTIZATION_DTYPE_UINT8:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>}</span>
<span id="cb13-8">                                 )</span></code></pre></div>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>Don’t forget to download the archive file containing the TensorFlow.js model files from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</li>
</ol>
</div>
</div>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial! We previously trained a YOLOX model in PyTorch for hand gesture detection, and now we’ve exported that model to TensorFlow.js. With it, we can deploy our model to the web and run it locally in users’ browsers.</p>
<p>If you found this guide helpful, consider sharing it with others.</p>


</section>

 ]]></description>
  <category>pytorch</category>
  <category>tensorflow</category>
  <category>tensorflow-js</category>
  <category>yolox</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/tfjs-export/index.html</guid>
  <pubDate>Thu, 28 Sep 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Exporting Mask R-CNN Models from PyTorch to ONNX</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/onnx-export/index.html</link>
  <description><![CDATA[ 



<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/pytorch-train-mask-rcnn-series.html"><strong>Training Mask R-CNN Models with PyTorch</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading the Checkpoint Data</li>
<li>Exporting the Model to ONNX</li>
<li>Performing Inference with ONNX Runtime</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on training Mask R-CNN models with PyTorch! Previously, we demonstrated how to fine-tune a Mask R-CNN model by training it on a small image dataset of Student ID cards.. This tutorial builds on that by showing how to export the model to <a href="https://onnx.ai/">ONNX</a> and perform inference using <a href="https://onnxruntime.ai/docs/">ONNX Runtime</a>.</p>
<p>ONNX (Open Neural Network Exchange) is an open format to represent machine learning models and make them portable across various platforms. ONNX Runtime is a cross-platform inference accelerator that provides interfaces to hardware-specific libraries. By exporting our model to ONNX, we can deploy it to multiple devices and leverage hardware acceleration for faster inference. The Mask R-CNN model is computationally intensive, so any improvements to inference speed are welcome.</p>
<p>Additionally, we’ll implement the functionality to annotate images with segmentation masks and bounding boxes without relying on PyTorch as a dependency. By the end of this tutorial, you will have an ONNX version of our Mask R-CNN model that you can deploy to servers and edge devices using ONNX Runtime.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../">Training Mask R-CNN Models with PyTorch</a></li>
</ul>
</div>
</div>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-mask-rcnn-tutorial-code/blob/main/notebooks/pytorch-mask-r-cnn-onnx-export.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/pytorch-mask-rcnn-tutorial-code/blob/main/notebooks/pytorch-mask-r-cnn-onnx-export-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>We’ll need to add a few new libraries to our <a href="../#setting-up-your-python-environment">Python environment</a> for working with ONNX models.</p>
<table class="table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>onnx</code></td>
<td>This package provides a Python API for working with ONNX models. (<a href="https://pypi.org/project/onnx/">link</a>)</td>
</tr>
<tr class="even">
<td><code>onnxruntime</code></td>
<td>ONNX Runtime is a runtime accelerator for machine learning models. (<a href="https://onnxruntime.ai/">link</a>)</td>
</tr>
<tr class="odd">
<td><code>onnx-simplifier</code></td>
<td>This package helps simplify ONNX models. (<a href="https://pypi.org/project/onnx-simplifier/">link</a>)</td>
</tr>
</tbody>
</table>
<p>Run the following command to install these additional libraries:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install ONNX packages</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install onnx onnxruntime onnx-simplifier</span></code></pre></div>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>With our environment updated, we can dive into the code. First, we will import the necessary Python dependencies into our Jupyter Notebook.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy</span></span>
<span id="cb2-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb2-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb2-17"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, ImageDraw, ImageFont</span>
<span id="cb2-18"></span>
<span id="cb2-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb2-20"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb2-21"></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Mask R-CNN</span></span>
<span id="cb2-23"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.models.detection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> maskrcnn_resnet50_fpn_v2, MaskRCNN</span>
<span id="cb2-24"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.models.detection <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MaskRCNN_ResNet50_FPN_V2_Weights</span>
<span id="cb2-25"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.models.detection.faster_rcnn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> FastRCNNPredictor</span>
<span id="cb2-26"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision.models.detection.mask_rcnn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MaskRCNNPredictor</span>
<span id="cb2-27"></span>
<span id="cb2-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ONNX dependencies</span></span>
<span id="cb2-29"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnx <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the onnx module</span></span>
<span id="cb2-30"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxsim <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> simplify <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the method to simplify ONNX models</span></span>
<span id="cb2-31"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnxruntime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ort <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the ONNX Runtime</span></span></code></pre></div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>In this section, we’ll set the folder locations for our project and training session with the PyTorch checkpoint. Let’s also ensure we have a font file for annotating images.</p>
<section id="set-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="set-the-directory-paths">Set the Directory Paths</h3>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb3-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pytorch-mask-r-cnn-instance-segmentation"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb3-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb3-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb3-11">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2023-09-19_15-17-57"</span>)</span>
<span id="cb3-12"></span>
<span id="cb3-13">pd.Series({</span>
<span id="cb3-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir,</span>
<span id="cb3-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb3-16">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_3c82a">
<thead>
</thead>
<tbody>
<tr>
<th id="T_3c82a_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_3c82a_row0_col0" class="data row0 col0">
pytorch-mask-r-cnn-instance-segmentation
</td>
</tr>
<tr>
<th id="T_3c82a_level0_row1" class="row_heading level0 row1">
Checkpoint Directory:
</th>
<td id="T_3c82a_row1_col0" class="data row1 col0">
pytorch-mask-r-cnn-instance-segmentation/2023-09-19_15-17-57
</td>
</tr>
</tbody>

</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="I made a model checkpoint available on Hugging Face Hub in the repository linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
I made a model checkpoint available on Hugging Face Hub in the repository linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://huggingface.co/cj-mills/mask-rcnn-student-id-pytorch/tree/main">cj-mills/mask-rcnn-student-id-pytorch</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. Keep in mind the model checkpoint has a large file size. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser. Keep in mind the model checkpoint has a large file size.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
<section id="download-a-font-file" class="level3">
<h3 class="anchored" data-anchor-id="download-a-font-file">Download a Font File</h3>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the font file</span></span>
<span id="cb4-2">font_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KFOlCnqEu92Fr1MmEU9vAw.ttf'</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the font file</span></span>
<span id="cb4-5">download_file(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://fonts.gstatic.com/s/roboto/v30/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>font_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span></code></pre></div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the colormap used during training and initialize a Mask R-CNN model with the saved checkpoint.</p>
<section id="load-the-colormap" class="level3">
<h3 class="anchored" data-anchor-id="load-the-colormap">Load the Colormap</h3>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The colormap path</span></span>
<span id="cb5-2">colormap_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*colormap.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON colormap data</span></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(colormap_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb5-6">        colormap_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the JSON data to a dictionary        </span></span>
<span id="cb5-9">colormap_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]: item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormap_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]}</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the class names from the colormap</span></span>
<span id="cb5-12">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(colormap_dict.keys())</span>
<span id="cb5-13"></span>
<span id="cb5-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of the colormap in integer format</span></span>
<span id="cb5-15">int_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> color) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormap_dict.values()]</span></code></pre></div>
</section>
<section id="load-the-model-checkpoint" class="level3">
<h3 class="anchored" data-anchor-id="load-the-model-checkpoint">Load the Model Checkpoint</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The model checkpoint path</span></span>
<span id="cb6-2">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.pth'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model checkpoint onto the CPU</span></span>
<span id="cb6-5">model_checkpoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.load(checkpoint_path, map_location<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>)</span></code></pre></div>
</section>
<section id="load-the-trained-mask-r-cnn-model" class="level3">
<h3 class="anchored" data-anchor-id="load-the-trained-mask-r-cnn-model">Load the Trained Mask R-CNN Model</h3>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a Mask R-CNN model</span></span>
<span id="cb7-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> maskrcnn_resnet50_fpn_v2(weights<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'DEFAULT'</span>)</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the number of input features for the classifier</span></span>
<span id="cb7-5">in_features_box <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.roi_heads.box_predictor.cls_score.in_features</span>
<span id="cb7-6">in_features_mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.roi_heads.mask_predictor.conv5_mask.in_channels</span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Replace the box predictor</span></span>
<span id="cb7-9">model.roi_heads.box_predictor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> FastRCNNPredictor(in_features_box, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(class_names))</span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Replace the mask predictor</span></span>
<span id="cb7-12">model.roi_heads.mask_predictor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MaskRCNNPredictor(in_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>in_features_mask, dim_reduced<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(class_names))</span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the model with the checkpoint parameters and buffers</span></span>
<span id="cb7-15">model.load_state_dict(model_checkpoint)</span></code></pre></div>
<pre class="text"><code>&lt;All keys matched successfully&gt;</code></pre>
</section>
</section>
<section id="exporting-the-model-to-onnx" class="level2">
<h2 class="anchored" data-anchor-id="exporting-the-model-to-onnx">Exporting the Model to ONNX</h2>
<p>Before exporting the model, let’s ensure the model is in evaluation mode.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1">model.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<section id="prepare-the-input-tensor" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor">Prepare the Input Tensor</h3>
<p>We need a sample input tensor for the export process.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span></code></pre></div>
</section>
<section id="export-the-model-to-onnx" class="level3">
<h3 class="anchored" data-anchor-id="export-the-model-to-onnx">Export the Model to ONNX</h3>
<p>We can export the model using PyTorch’s <a href="https://pytorch.org/docs/stable/onnx.html#torch.onnx.export"><code>torch.onnx.export()</code></a> function. This function performs a single pass through the model and records all operations to generate a <a href="https://pytorch.org/docs/stable/jit.html">TorchScript graph</a>. It then exports this graph to ONNX by decomposing each graph node (which contains a PyTorch operator) into a series of ONNX operators.</p>
<p>If we want the ONNX model to support different input sizes, we must set the width and height input axes as dynamic.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set a filename for the ONNX model</span></span>
<span id="cb11-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>colormap_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-colormap'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>checkpoint_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.onnx"</span></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export the PyTorch model to ONNX format</span></span>
<span id="cb11-5">torch.onnx.export(model.cpu(),</span>
<span id="cb11-6">                  input_tensor.cpu(),</span>
<span id="cb11-7">                  onnx_file_path,</span>
<span id="cb11-8">                  export_params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb11-9">                  do_constant_folding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb11-10">                  input_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>],</span>
<span id="cb11-11">                  output_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'boxes'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'labels'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scores'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'masks'</span>],</span>
<span id="cb11-12">                  dynamic_axes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'width'</span>}}</span>
<span id="cb11-13">                 )</span></code></pre></div>
<pre class="text"><code>============= Diagnostic Run torch.onnx.export version 2.0.1+cu118 =============
verbose: False, log level: Level.ERROR
======================= 0 NONE 0 NOTE 0 WARNING 0 ERROR ========================</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The export function may return some <code>UserWarning</code> messages when we export the model. We can ignore these warnings as the exported model functions as expected.</p>
</div>
</div>
</section>
<section id="simplify-the-onnx-model" class="level3">
<h3 class="anchored" data-anchor-id="simplify-the-onnx-model">Simplify the ONNX model</h3>
<p>The ONNX models generated by PyTorch are not always the most concise. We can use the <a href="https://pypi.org/project/onnx-simplifier/"><code>onnx-simplifier</code></a> package to tidy up the exported model.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the ONNX model from the onnx_file_name</span></span>
<span id="cb13-2">onnx_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx.load(onnx_file_path)</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Simplify the model</span></span>
<span id="cb13-5">model_simp, check <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simplify(onnx_model)</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the simplified model to the onnx_file_name</span></span>
<span id="cb13-8">onnx.save(model_simp, onnx_file_path)</span></code></pre></div>
</section>
</section>
<section id="performing-inference-with-onnx-runtime" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference-with-onnx-runtime">Performing Inference with ONNX Runtime</h2>
<p>Now that we have our ONNX model, it’s time to test it with ONNX Runtime.</p>
<section id="create-an-inference-session" class="level3">
<h3 class="anchored" data-anchor-id="create-an-inference-session">Create an Inference Session</h3>
<p>We interact with models in ONNX Runtime through an <a href="https://onnxruntime.ai/docs/api/python/api_summary.html#load-and-run-a-model"><code>InferenceSession</code></a> object. Here we can specify which Execution Providers to use for inference and other configuration information. <a href="https://onnxruntime.ai/docs/execution-providers/">Execution Providers</a> are the interfaces for hardware-specific inference engines like <a href="https://onnxruntime.ai/docs/execution-providers/TensorRT-ExecutionProvider.html">TensorRT</a> for NVIDIA and <a href="https://onnxruntime.ai/docs/execution-providers/OpenVINO-ExecutionProvider.html">OpenVINO</a> for Intel. By default, the <code>InferenceSession</code> uses the generic <code>CPUExecutionProvider</code>.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model and create an InferenceSession</span></span>
<span id="cb14-2">session <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.InferenceSession(onnx_file_path, providers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CPUExecutionProvider'</span>])</span></code></pre></div>
</section>
<section id="define-utility-functions" class="level3">
<h3 class="anchored" data-anchor-id="define-utility-functions">Define Utility Functions</h3>
<p>In the previous tutorial, we used PyTorch to annotate images with segmentation masks and bounding boxes. Now, we will implement that functionality using <a href="https://numpy.org/">NumPy</a> and <a href="https://pillow.readthedocs.io/en/stable/">PIL</a>.</p>
<section id="define-a-function-to-annotate-an-image-with-segmentation-masks" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-annotate-an-image-with-segmentation-masks">Define a function to annotate an image with segmentation masks¶</h4>
<p>We can convert the grayscale segmentation masks produced by the model to color and paste them onto the input image. We can also adjust the transparency of the segmentation masks using an alpha parameter, as we did with PyTorch.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_masks_pil(image, masks, labels, colors, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>):</span>
<span id="cb15-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Annotates an image with segmentation masks, labels, and optional alpha blending.</span></span>
<span id="cb15-4"></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function draws segmentation masks on the provided image using the given mask arrays, </span></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors, labels, and alpha values for transparency.</span></span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb15-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    image (PIL.Image): The input image on which annotations will be drawn.</span></span>
<span id="cb15-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    masks (numpy.ndarray): A 3D numpy array of shape (n_masks, height, width) representing segmentation masks.</span></span>
<span id="cb15-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    labels (list of str): A list of labels corresponding to each segmentation mask.</span></span>
<span id="cb15-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors (list of tuples): A list of RGB tuples for each segmentation mask and its corresponding label.</span></span>
<span id="cb15-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    alpha (float, optional): The alpha value for mask transparency. Defaults to 0.3.</span></span>
<span id="cb15-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    threshold (float, optional): The threshold value to convert mask to binary. Defaults to 0.5.</span></span>
<span id="cb15-15"></span>
<span id="cb15-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb15-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    annotated_image (PIL.Image): The image annotated with segmentation masks and labels.</span></span>
<span id="cb15-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb15-19">    </span>
<span id="cb15-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a copy of the image</span></span>
<span id="cb15-21">    annotated_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.copy()</span>
<span id="cb15-22">    annotated_image.convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGBA'</span>)</span>
<span id="cb15-23"></span>
<span id="cb15-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an ImageDraw object for drawing on the image</span></span>
<span id="cb15-25">    draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(annotated_image)</span>
<span id="cb15-26"></span>
<span id="cb15-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through the bounding boxes and labels in the 'annotation' DataFrame</span></span>
<span id="cb15-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(labels)):</span>
<span id="cb15-29">        </span>
<span id="cb15-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the segmentation mask</span></span>
<span id="cb15-31">        mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> masks[i][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, :, :]</span>
<span id="cb15-32">        mask_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>colors[i], alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>]</span>
<span id="cb15-33"></span>
<span id="cb15-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an empty 3D array with shape (height, width, 3)</span></span>
<span id="cb15-35">        rgb_mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((mask.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], mask.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.uint8)</span>
<span id="cb15-36">        </span>
<span id="cb15-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use broadcasting to populate it with the mask color where the mask is 1</span></span>
<span id="cb15-38">        rgb_mask[mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_color</span>
<span id="cb15-39">        </span>
<span id="cb15-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the numpy array to a PIL Image</span></span>
<span id="cb15-41">        mask_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(rgb_mask)</span>
<span id="cb15-42">        </span>
<span id="cb15-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw segmentation mask on sample image</span></span>
<span id="cb15-44">        annotated_image.paste(mask_img, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask_img)</span>
<span id="cb15-45">        </span>
<span id="cb15-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> annotated_image</span></code></pre></div>
</section>
<section id="define-a-function-to-annotate-an-image-with-bounding-boxes" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-annotate-an-image-with-bounding-boxes">Define a function to annotate an image with bounding boxes</h4>
<p>Now, we only need to annotate images with bounding boxes and labels. PIL includes functionality to draw boxes and write text on images. The following function also scales the font size based on the image resolution to keep the relative size consistent across images.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> draw_bboxes_pil(image, boxes, labels, colors, font, width:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, font_size:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb16-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Annotates an image with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function draws bounding boxes on the provided image using the given box coordinates, </span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors, and labels. If probabilities are provided, they will be added to the labels.</span></span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    image (PIL.Image): The input image on which annotations will be drawn.</span></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    boxes (list of tuples): A list of bounding box coordinates where each tuple is (x, y, w, h).</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    labels (list of str): A list of labels corresponding to each bounding box.</span></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors (list of str): A list of colors for each bounding box and its corresponding label.</span></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    font (str): Path to the font file to be used for displaying the labels.</span></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    width (int, optional): Width of the bounding box lines. Defaults to 2.</span></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    font_size (int, optional): Size of the font for the labels. Defaults to 25.</span></span>
<span id="cb16-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    probs (list of float, optional): A list of probability scores corresponding to each label. Defaults to None.</span></span>
<span id="cb16-17"></span>
<span id="cb16-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb16-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    annotated_image (PIL.Image): The image annotated with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb16-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb16-21">    </span>
<span id="cb16-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a reference diagonal</span></span>
<span id="cb16-23">    REFERENCE_DIAGONAL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb16-24">    </span>
<span id="cb16-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale the font size using the hypotenuse of the image</span></span>
<span id="cb16-26">    font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.hypot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>image.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> REFERENCE_DIAGONAL))</span>
<span id="cb16-27">    </span>
<span id="cb16-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add probability scores to labels</span></span>
<span id="cb16-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> probs <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb16-30">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> label, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(labels, probs)]</span>
<span id="cb16-31">    </span>
<span id="cb16-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a copy of the image</span></span>
<span id="cb16-33">    annotated_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.copy()</span>
<span id="cb16-34"></span>
<span id="cb16-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an ImageDraw object for drawing on the image</span></span>
<span id="cb16-36">    draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(annotated_image)</span>
<span id="cb16-37"></span>
<span id="cb16-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through the bounding boxes and labels in the 'annotation' DataFrame</span></span>
<span id="cb16-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(labels)):</span>
<span id="cb16-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the bounding box coordinates</span></span>
<span id="cb16-41">        x, y, x2, y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boxes[i]</span>
<span id="cb16-42"></span>
<span id="cb16-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a tuple of coordinates for the bounding box</span></span>
<span id="cb16-44">        shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x, y, x2, y2)</span>
<span id="cb16-45"></span>
<span id="cb16-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the bounding box on the image</span></span>
<span id="cb16-47">        draw.rectangle(shape, outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb16-48">        </span>
<span id="cb16-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the font file</span></span>
<span id="cb16-50">        fnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageFont.truetype(font, font_size)</span>
<span id="cb16-51">        </span>
<span id="cb16-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label box on the image</span></span>
<span id="cb16-53">        label_w, label_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw.textbbox(xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels[i], font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb16-54">        draw.rectangle((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>label_w, y), outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb16-55"></span>
<span id="cb16-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label on the image</span></span>
<span id="cb16-57">        draw.multiline_text((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h), labels[i], font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> np.mean(colors[i]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">127.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)</span>
<span id="cb16-58">        </span>
<span id="cb16-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> annotated_image</span></code></pre></div>
<p>With our utility functions taken care of, we can select an image to test our ONNX model.</p>
</section>
</section>
<section id="select-a-test-image" class="level3">
<h3 class="anchored" data-anchor-id="select-a-test-image">Select a Test Image</h3>
<p>We can download an image from the dataset repository to verify the exported model performs as expected.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">test_img_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10147.jpg"</span></span>
<span id="cb17-2">test_img_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://raw.githubusercontent.com/cj-mills/pytorch-for-information-extraction/master/code/datasets/detection/student-id/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb17-3"></span>
<span id="cb17-4">download_file(test_img_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb17-5"></span>
<span id="cb17-6">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_img_name)</span>
<span id="cb17-7">display(test_img)</span>
<span id="cb17-8"></span>
<span id="cb17-9">pd.Series({</span>
<span id="cb17-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test Image Size:"</span>: test_img.size, </span>
<span id="cb17-11">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/onnx-export/images/output_33_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_59825">
<thead>
</thead>
<tbody>
<tr>
<th id="T_59825_level0_row0" class="row_heading level0 row0">
Test Image Size:
</th>
<td id="T_59825_row0_col0" class="data row0 col0">
(640, 480)
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="prepare-the-test-image" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-test-image">Prepare the Test Image</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set test image size</span></span>
<span id="cb18-2">test_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Resize the test image</span></span>
<span id="cb18-5">input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(test_img, target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_sz, divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb18-6"></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the scale between the source image and the resized image</span></span>
<span id="cb18-8">min_img_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(test_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(input_img.size)</span>
<span id="cb18-9"></span>
<span id="cb18-10">display(input_img)</span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the prediction data as a Pandas DataFrame for easy formatting</span></span>
<span id="cb18-13">pd.Series({</span>
<span id="cb18-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source Image Size:"</span>: test_img.size,</span>
<span id="cb18-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims:"</span>: input_img.size,</span>
<span id="cb18-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Min Image Scale:"</span>: min_img_scale,</span>
<span id="cb18-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Image Size:"</span>: input_img.size</span>
<span id="cb18-18">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/onnx-export/images/output_35_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_7303c">
<thead>
</thead>
<tbody>
<tr>
<th id="T_7303c_level0_row0" class="row_heading level0 row0">
Source Image Size:
</th>
<td id="T_7303c_row0_col0" class="data row0 col0">
(640, 480)
</td>
</tr>
<tr>
<th id="T_7303c_level0_row1" class="row_heading level0 row1">
Input Dims:
</th>
<td id="T_7303c_row1_col0" class="data row1 col0">
(682, 512)
</td>
</tr>
<tr>
<th id="T_7303c_level0_row2" class="row_heading level0 row2">
Min Image Scale:
</th>
<td id="T_7303c_row2_col0" class="data row2 col0">
0.937500
</td>
</tr>
<tr>
<th id="T_7303c_level0_row3" class="row_heading level0 row3">
Input Image Size:
</th>
<td id="T_7303c_row3_col0" class="data row3 col0">
(682, 512)
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="prepare-the-input-tensor-1" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor-1">Prepare the Input Tensor</h3>
<p>When we convert the PIL input image to a NumPy array, we need to reorder the array values to channels-first format, scale the values from <code>[0,255]</code> to <code>[0,1]</code>, and add a batch dimension.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input image to NumPy format</span></span>
<span id="cb19-2">input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span></code></pre></div>
</section>
<section id="compute-the-predictions" class="level3">
<h3 class="anchored" data-anchor-id="compute-the-predictions">Compute the Predictions</h3>
<p>Now we can finally perform inference with our ONNX model.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb20-2">model_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the confidence threshold</span></span>
<span id="cb20-5">threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span></span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the output based on the confidence threshold</span></span>
<span id="cb20-8">scores_mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> threshold</span>
<span id="cb20-9"></span>
<span id="cb20-10">bbox_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (model_output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][scores_mask])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>min_img_scale</span>
<span id="cb20-11">label_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [class_names[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(idx)] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> model_output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][scores_mask]]</span>
<span id="cb20-12">probs_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb20-13"></span>
<span id="cb20-14">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [int_colors[class_names.index(i)] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> label_list]</span>
<span id="cb20-15"></span>
<span id="cb20-16">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_masks_pil(input_img, model_output[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], label_list, colors, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb20-17">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotated_img.resize(test_img.size)</span>
<span id="cb20-18"></span>
<span id="cb20-19">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_bboxes_pil(</span>
<span id="cb20-20">    image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>annotated_img, </span>
<span id="cb20-21">    boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bbox_list, </span>
<span id="cb20-22">    labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_list,</span>
<span id="cb20-23">    probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>probs_list,</span>
<span id="cb20-24">    colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors, </span>
<span id="cb20-25">    font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>font_file,</span>
<span id="cb20-26">)</span>
<span id="cb20-27"></span>
<span id="cb20-28">display(annotated_img)</span>
<span id="cb20-29"></span>
<span id="cb20-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the prediction data as a Pandas Series for easy formatting</span></span>
<span id="cb20-31">pd.Series({</span>
<span id="cb20-32">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted BBoxes:"</span>: [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bbox<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> label, bbox <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(label_list, bbox_list.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))],</span>
<span id="cb20-33">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Scores:"</span>: [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> label, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(label_list, probs_list)]</span>
<span id="cb20-34">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/onnx-export/images/output_39_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">

<table id="T_c5d40">
<thead>
</thead>
<tbody>
<tr>
<th id="T_c5d40_level0_row0" class="row_heading level0 row0">
Predicted BBoxes:
</th>
<td id="T_c5d40_row0_col0" class="data row0 col0">
[‘student_id:[103.951 11.201 435.75 375.222]’, ‘student_id:[292.186 14.961 635.188 241.416]’, ‘student_id:[134.958 242.402 466.062 465.765]’]
</td>
</tr>
<tr>
<th id="T_c5d40_level0_row1" class="row_heading level0 row1">
Confidence Scores:
</th>
<td id="T_c5d40_row1_col0" class="data row1 col0">
[‘student_id: 99.98%’, ‘student_id: 99.97%’, ‘student_id: 99.96%’]
</td>
</tr>
</tbody>

</table>
</div>
<p>The model predictions should be virtually identical to the PyTorch model, but the probability scores can sometimes vary slightly.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<ol type="1">
<li>Don’t forget to download the ONNX model from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</li>
</ol>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial! We previously trained a Mask R-CNN model in PyTorch, and now we’ve exported that model to ONNX. With this, we can streamline our deployment process and leverage platform-specific hardware optimizations through ONNX Runtime.</p>
<p>As you move forward, consider exploring more about ONNX and its ecosystem. Check out the available <a href="https://onnxruntime.ai/docs/execution-providers/">Execution Providers</a> that provide flexible interfaces to different hardware acceleration libraries.</p>
<p>If you found this guide helpful, consider sharing it with others.</p>


</section>

 ]]></description>
  <category>pytorch</category>
  <category>onnx</category>
  <category>mask-rcnn</category>
  <category>object-detection</category>
  <category>instance-segmentation</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/pytorch-train-mask-rcnn-tutorial/onnx-export/index.html</guid>
  <pubDate>Thu, 21 Sep 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
</channel>
</rss>
