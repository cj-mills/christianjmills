<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Christian Mills</title>
<link>https://christianjmills.com/blog.html</link>
<atom:link href="https://christianjmills.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is Christian Mills&#39; personal website.</description>
<image>
<url>https://christianjmills.com/images/logo.png</url>
<title>Christian Mills</title>
<link>https://christianjmills.com/blog.html</link>
<height>144</height>
<width>144</width>
</image>
<generator>quarto-1.6.33</generator>
<lastBuildDate>Sun, 09 Feb 2025 08:00:00 GMT</lastBuildDate>
<item>
  <title>Notes on The Superstruct Manifesto</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/the-superstruct-manifesto-book-notes/</link>
  <description><![CDATA[ 




<ul>
<li><strong>Epigraph</strong></li>
<li><strong>Introduction</strong><br>
</li>
<li><strong>Chapter 1: We Will Not Inflict Daily Standups on Our Devs</strong><br>
</li>
<li><strong>Chapter 2: We Will Not Test Devs with Computer Science Riddles</strong><br>
</li>
<li><strong>Chapter 3: We Will Not Recruit 10x Developers</strong><br>
</li>
<li><strong>Chapter 4: We Will Not Let Devs Start without an Estimate</strong><br>
</li>
<li><strong>Chapter 5: We Will Not Sprint</strong><br>
</li>
<li><strong>Chapter 6: We Will Not Allow Our Devs to Multitask</strong><br>
</li>
<li><strong>Chapter 7: We Will Not Accept the First Solution a Dev Thinks Up</strong><br>
</li>
<li><strong>Chapter 8: We Will Not Allow Our Devs to Talk in Private</strong><br>
</li>
<li><strong>Chapter 9: We Will Not Allow Our Devs to Wander Off</strong><br>
</li>
<li><strong>Chapter 10: We Will Not Let Our Devs Boss Us Around</strong></li>
<li><strong>Conclusion</strong><br>
</li>
<li><strong>Key Takeaways</strong></li>
</ul>
<div class="callout callout-style-default callout-note callout-titled" title="Book LInks:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://superstructmanifesto.com/">Book Website</a></li>
</ul>
</div>
</div>
<section id="epigraph" class="level2">
<h2 class="anchored" data-anchor-id="epigraph"><strong>Epigraph</strong></h2>
<blockquote class="blockquote">
<p><em>“It’s not because things are difficult that we dare not venture. It’s because we dare not venture that they are difficult.”</em> <strong>– Seneca</strong></p>
</blockquote>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction"><strong>Introduction</strong></h2>
<section id="foundational-points" class="level3">
<h3 class="anchored" data-anchor-id="foundational-points"><strong>Foundational Points</strong></h3>
<ol type="1">
<li><p><strong>Context</strong></p>
<ul>
<li>Many founders fail for <strong>avoidable reasons</strong>.</li>
<li>There are <strong>plenty of unpredictable problems</strong> that can derail a startup; this guide focuses on <strong>preventing the preventable</strong>.</li>
</ul></li>
<li><p><strong>Purpose of the Book</strong></p>
<ul>
<li><strong>Survival guide</strong> for founders.</li>
<li>The goal is to <strong>avoid the worst and most common mistakes</strong> when hiring and working with software engineers.</li>
</ul></li>
<li><p><strong>Scope</strong></p>
<ul>
<li><strong>Not a cookbook</strong> with detailed recipes or step-by-step instructions.</li>
<li>Instead: an overview of <strong>common pitfalls</strong> and how to dodge them.</li>
</ul></li>
<li><p><strong>Audience</strong></p>
<ul>
<li>Written primarily for <strong>smaller startups</strong> or founders who <strong>cannot afford</strong> the same missteps as large, well-funded companies.</li>
<li><strong>Quote</strong>: “If you are a big company or a unicorn startup that can afford to keep doing what you’re doing…this book is not for you.”</li>
</ul></li>
<li><p><strong>Analogy</strong>: Poisonous Plants and Pufferfish</p>
<ul>
<li>In nature, many plants and mushrooms are deadly if not handled correctly.</li>
<li>Certain techniques might work at <strong>large or specialized organizations</strong> (e.g., pufferfish at fancy restaurants), but <strong>founders shouldn’t blindly copy</strong> those approaches for their own startups.</li>
</ul></li>
<li><p><strong>Key Struggle</strong></p>
<ul>
<li><p>Founders <strong>struggle to hire and retain senior engineers</strong>.</p></li>
<li><p>Many assume that getting senior engineers on board will solve all problems, but:</p>
<ul>
<li><strong>Engineers can behave like seniors or juniors</strong> regardless of technical skill level.
<ul>
<li><strong>Environment</strong> created by the founder is what <strong>encourages or discourages</strong> the behaviors needed for success.</li>
</ul></li>
</ul></li>
</ul></li>
<li><p><strong>Misconception about Experience</strong></p>
<ul>
<li>Years of experience with a particular language or big-tech name brand does <strong>not</strong> guarantee the engineer can <strong>solve the problems</strong> your business actually faces.</li>
<li>Emphasis should be on <strong>cultivating behaviors</strong> and <strong>structures</strong> that support the company’s goals.</li>
</ul></li>
<li><p><strong>Ownership and Structure</strong></p>
<ul>
<li>If you <strong>want engineers to behave like seniors</strong>, you must <strong>provide and enforce</strong> the appropriate structure.</li>
<li>Some engineers may <strong>push back</strong> against imposed structure (they want “ice cream for dinner”), but <strong>unfocused freedom</strong> can lead to <strong>low-value output</strong> and <strong>too many distractions</strong>.</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-1-we-will-not-inflict-daily-standups-on-our-devs" class="level2">
<h2 class="anchored" data-anchor-id="chapter-1-we-will-not-inflict-daily-standups-on-our-devs"><strong>Chapter 1: We Will Not Inflict Daily Standups on Our Devs</strong></h2>
<section id="overview" class="level3">
<h3 class="anchored" data-anchor-id="overview"><strong>Overview</strong></h3>
<ol type="1">
<li><strong>Position Statement</strong>:
<ul>
<li>Daily stand-ups are <strong>ubiquitous</strong> yet considered <strong>“stupid”</strong> by the author.</li>
<li>They are seen as <strong>expensive and disruptive</strong> activities.</li>
</ul></li>
<li><strong>Immediate Consequence</strong>:
<ul>
<li>Daily stand-ups <strong>guarantee devs never have a full day</strong> of uninterrupted work.</li>
</ul></li>
</ol>
</section>
<section id="why-daily-stand-ups-are-expensive" class="level3">
<h3 class="anchored" data-anchor-id="why-daily-stand-ups-are-expensive"><strong>Why Daily Stand-Ups Are Expensive</strong></h3>
<ol type="1">
<li><strong>Time Not Spent Building</strong>
<ul>
<li>Engineers are hired to <strong>build</strong> product features, fix bugs, and deliver value.</li>
<li>Any time spent in <strong>stand-up meetings</strong> is <strong>time not spent building</strong>.</li>
</ul></li>
<li><strong>Cumulative Time Loss</strong>
<ul>
<li><strong>Quote</strong>: “If you have four devs standing around for 15 minutes every day, you are losing more than 20 hours of building time every month…”</li>
<li>That is <strong>at least 20 hours</strong> per month that <strong>could have</strong> produced a new feature or improvement.</li>
</ul></li>
<li><strong>Worse Than It Looks</strong>
<ul>
<li>Stand-ups are <strong>supposed</strong> to be 15 minutes, but the <strong>context switching</strong> before and after causes bigger disruptions.</li>
<li>Devs <strong>can’t dive into</strong> complex coding if they know they’ll be interrupted in a few minutes.</li>
</ul></li>
<li><strong>Context Switching Costs</strong>
<ul>
<li>Author’s analogy: “Software development is like <strong>working at the bottom of the ocean</strong>. Going up (interruptions) is time-consuming.”</li>
<li>Even if you reduce stand-up to 1 minute, there is <strong>at least a 30-minute disruption</strong> on either side.</li>
</ul></li>
<li><strong>Total Hourly Loss</strong>
<ul>
<li>For a 15-minute stand-up, the <strong>absolute minimum</strong> disruption is <strong>over an hour per dev</strong> (including the time lost to context switching and reorienting).</li>
<li><strong>Quote</strong>: “If you stick to 15 minutes per meeting, you’re losing more than 100 hours a month of productive time with a team of four.”</li>
</ul></li>
</ol>
</section>
<section id="perceived-benefits-vs.-actual-value" class="level3">
<h3 class="anchored" data-anchor-id="perceived-benefits-vs.-actual-value"><strong>Perceived Benefits vs.&nbsp;Actual Value</strong></h3>
<ol type="1">
<li><p><strong>Potential Advantages</strong></p>
<ul>
<li>Stand-ups supposedly:
<ul>
<li>Increase <strong>productivity</strong> and <strong>transparency</strong>.</li>
<li>Highlight <strong>blockers</strong>.</li>
<li>Improve <strong>alignment</strong> and <strong>accountability</strong>.</li>
</ul></li>
</ul></li>
<li><p><strong>Questionable Accountability</strong></p>
<ul>
<li><strong>Reality</strong>: Devs can “sound busy” by <strong>exaggerating simple tasks</strong>.</li>
<li>Many stand-up attendees <strong>tune out</strong> anyway.</li>
</ul></li>
<li><p><strong>Transparency and Alignment</strong></p>
<ul>
<li>The <strong>ideal scenario</strong>: Devs <strong>learn</strong> from each other’s updates, or catch potential <strong>time-wasters</strong> (e.g., a dev warns against a faulty OCR library).</li>
<li>This can happen, but the author compares it to <strong>slot machines</strong>—the “jackpot” scenario is <strong>rare</strong>.</li>
</ul></li>
<li><p><strong>Alternatives</strong></p>
<ul>
<li><p>You can achieve all the accountability and transparency stand-ups promise without daily interrupts:</p>
<ul>
<li><strong>Asynchronous communication</strong> to share status updates and blockers.</li>
</ul></li>
</ul></li>
</ol>
<ul>
<li>Devs can <strong>raise alerts</strong> and help each other <em>when needed</em> rather than on a forced daily schedule.</li>
</ul>
</section>
<section id="key-takeaway" class="level3">
<h3 class="anchored" data-anchor-id="key-takeaway"><strong>Key Takeaway</strong></h3>
<ul>
<li><strong>Quote</strong>: “Nothing stands in the way of devs alerting their teammates to blockers.”</li>
<li>Daily stand-ups are <strong>inefficient</strong> and can be <strong>replaced</strong> by <strong>less disruptive</strong> methods.</li>
</ul>
</section>
</section>
<section id="chapter-2-we-will-not-test-devs-with-computer-science-riddles" class="level2">
<h2 class="anchored" data-anchor-id="chapter-2-we-will-not-test-devs-with-computer-science-riddles"><strong>Chapter 2: We Will Not Test Devs with Computer Science Riddles</strong></h2>
<section id="context" class="level3">
<h3 class="anchored" data-anchor-id="context"><strong>Context</strong></h3>
<ol type="1">
<li><strong>Author’s Warning</strong>
<ul>
<li>Avoid <strong>“Cracking the Coding Interview”</strong> style questions for <strong>startup hires</strong>.</li>
<li><em>Might</em> work for <strong>Google, Amazon, Facebook</strong>, but not necessarily for <strong>most</strong> startups.</li>
</ul></li>
<li><strong>Real-World Example</strong>
<ul>
<li><strong>Max Howell tweet</strong>: Rejected by Google for failing to invert a binary tree on a whiteboard, despite writing <strong>Homebrew</strong>, used by 90% of Google’s own engineers.</li>
</ul></li>
</ol>
</section>
<section id="core-argument" class="level3">
<h3 class="anchored" data-anchor-id="core-argument"><strong>Core Argument</strong></h3>
<ol type="1">
<li><strong>Mismatch in Skills Needed</strong>
<ul>
<li>If your <strong>business</strong> is not about <strong>computer science riddles</strong>, then these puzzle-based tests are <strong>irrelevant</strong>.</li>
<li>They <strong>screen out</strong> potentially great candidates who <strong>already built</strong> valuable software.</li>
</ul></li>
<li><strong>What Startups Actually Need</strong>
<ul>
<li>Typically, success = <strong>building features</strong> that <strong>make customers happy</strong>.</li>
<li>Deep algorithmic knowledge <strong>may help</strong> in niche cases, but the <em>main driver</em> is <strong>customer-oriented value</strong> creation.</li>
</ul></li>
</ol>
</section>
<section id="misguided-mimicry-and-profiling-analogy" class="level3">
<h3 class="anchored" data-anchor-id="misguided-mimicry-and-profiling-analogy"><strong>Misguided Mimicry and Profiling Analogy</strong></h3>
<ol type="1">
<li><strong>Caution Against Copying Big Tech</strong>
<ul>
<li>A process that works for <strong>Google or Facebook</strong> (with <strong>infinite candidates</strong> and <strong>massive budgets</strong>) may <strong>harm</strong> a smaller startup’s hiring pipeline.</li>
</ul></li>
<li><strong>Classification/Screening Problem</strong>
<ul>
<li>Interviewing is like <strong>detection or screening</strong>. The <strong>farther</strong> you get from <strong>testing what you actually care about</strong>, the <strong>worse</strong> it is.</li>
</ul></li>
<li><strong>Airport Security Analogy</strong>
<ul>
<li><strong>Quote</strong>: “In the wake of 9-11, some people argued…we should focus attention on group A [Muslims] to detect terrorism.”</li>
<li>This approach introduces <em>huge complexities</em> and <strong>may weaken</strong> the system overall.</li>
<li>Similarly, focusing on whether candidates can do <strong>binary tree inversion</strong> vs.&nbsp;seeing if they can build product features is <strong>misaligned</strong>.</li>
</ul></li>
<li><strong>Core Principle</strong>
<ul>
<li><em>“If you want to predict accurately whether a candidate will create value for your customers, you need to test for that.”</em></li>
<li>Don’t rely on <strong>off-the-shelf</strong> coding riddles; <strong>creatively test</strong> for <strong>actual tasks</strong> that relate to <strong>your</strong> product or stack.</li>
</ul></li>
</ol>
</section>
<section id="practical-advice" class="level3">
<h3 class="anchored" data-anchor-id="practical-advice"><strong>Practical Advice</strong></h3>
<ol type="1">
<li><strong>Contractor Analogy</strong>
<ul>
<li>You don’t ask a home contractor to solve logic puzzles. You <strong>check their prior work</strong> and <strong>see if it’s relevant</strong>.</li>
</ul></li>
<li><strong>Testing Real Skills</strong>
<ul>
<li>See if a candidate can <strong>knock out real features</strong> from your <strong>actual roadmap</strong> or from <strong>similar</strong> past experience.</li>
</ul></li>
<li><strong>Focus on Fit</strong>
<ul>
<li>People with heavy algorithmic training might <strong>not</strong> be the best fit for a small startup that prioritizes <strong>direct customer impact</strong>.</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-3-we-will-not-recruit-10x-developers" class="level2">
<h2 class="anchored" data-anchor-id="chapter-3-we-will-not-recruit-10x-developers"><strong>Chapter 3: We Will Not Recruit 10x Developers</strong></h2>
<section id="x-developer-myth" class="level3">
<h3 class="anchored" data-anchor-id="x-developer-myth"><strong>10x Developer Myth</strong></h3>
<ol type="1">
<li><strong>Conventional Wisdom</strong>
<ul>
<li>Many claim you should <strong>only hire “10x developers.”</strong></li>
<li>Author says: This is <strong>setting yourself up for failure</strong>.</li>
</ul></li>
<li><strong>Advice to Founders</strong>
<ul>
<li>If an investor or executive <strong>demands</strong> you hire 10x devs, the author advises <strong>ignoring</strong> their further input on engineering.</li>
</ul></li>
</ol>
</section>
<section id="historical-origins" class="level3">
<h3 class="anchored" data-anchor-id="historical-origins"><strong>Historical Origins</strong></h3>
<ol type="1">
<li><strong>1960s Study</strong>
<ul>
<li>The <strong>“10x” concept</strong> comes from research showing a few programmers were <strong>10 times faster</strong> at certain tasks than others in the group.</li>
<li>That study was done <strong>decades ago</strong> on a <strong>12-programmer sample</strong>, using a <strong>massive, antiquated</strong> mainframe.</li>
<li>Question: <em>How smart is it to rely on five-decade-old data?</em></li>
</ul></li>
<li><strong>Misinterpretation</strong>
<ul>
<li>The 10x was between the <strong>slowest</strong> and the <strong>fastest</strong> in that specific test, <strong>not</strong> the fastest vs.&nbsp;the <em>average</em> developer.</li>
<li>The study’s environment is <strong>vastly different</strong> from modern-day development.</li>
</ul></li>
</ol>
</section>
<section id="practical-reality" class="level3">
<h3 class="anchored" data-anchor-id="practical-reality"><strong>Practical Reality</strong></h3>
<ol type="1">
<li><strong>Salary and Performance</strong>
<ul>
<li>If a 10x dev truly existed, any <strong>rational manager</strong> would pay them far more to <strong>keep them</strong>.</li>
<li>This <strong>breaks</strong> the assumption that 10x devs are paid the same as everyone else and remain unnoticed.</li>
</ul></li>
<li><strong>Situational Expertise</strong>
<ul>
<li>The difference is often <strong>task-based</strong>. A dev with specialized experience can do a particular problem super fast, but might <strong>not</strong> excel at others.</li>
<li>Over a year, it’s <strong>unlikely</strong> to see a dev produce <strong>10x</strong> the output across <strong>all</strong> tasks.</li>
</ul></li>
<li><strong>Author’s Own Example</strong>
<ul>
<li>The author references building a <strong>video editing app</strong> in 10 hours. A PM estimated a team would need 200 hours.</li>
<li>This looks like the author is a <strong>20x dev</strong>, but the scenario is <strong>cherry-picked</strong>: it’s an app that fits the author’s personal expertise.</li>
</ul></li>
</ol>
</section>
<section id="commandos-infantry-and-police-model" class="level3">
<h3 class="anchored" data-anchor-id="commandos-infantry-and-police-model"><strong>Commandos, Infantry, and Police Model</strong></h3>
<ol type="1">
<li><strong>Commandos</strong>
<ul>
<li>Highly creative problem-solvers who <strong>establish a beachhead</strong> quickly.</li>
<li>Great for <strong>truly novel</strong> or <strong>R&amp;D</strong> tasks.</li>
<li><strong>Downside</strong>: They get bored with routine tasks and may create drama by rewriting or overengineering.</li>
</ul></li>
<li><strong>Infantry</strong>
<ul>
<li>Solid, team-oriented devs who <strong>execute proven designs</strong> reliably.</li>
<li>They focus on <strong>predictable delivery</strong> and are typically <strong>what most businesses need</strong>.</li>
</ul></li>
<li><strong>Police</strong>
<ul>
<li>Specialists at <strong>maintenance</strong> tasks, security patches, bug fixes, and other routine work.</li>
<li>Commandos are <strong>ill-suited</strong> for these tasks; they’ll cause friction if forced into them.</li>
</ul></li>
<li><strong>Hiring and Team Composition</strong>
<ul>
<li>The author advises: Don’t fill your company with <strong>too many</strong> “commandos.”</li>
<li>Typically, <strong>one</strong> commando (or similarly skilled lead/consultant) is enough to handle novel problems or architecture decisions.</li>
<li>The <strong>vast majority</strong> of dev work is <strong>parallelizable, routine, and incremental</strong>—infantry and police excel here.</li>
</ul></li>
</ol>
</section>
<section id="conclusion-on-10x-devs" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-on-10x-devs"><strong>Conclusion on 10x Devs</strong></h3>
<ul>
<li><strong>Focus</strong> on building a <strong>balanced team</strong> that can consistently deliver.</li>
<li><strong>Quote</strong>: “Optimize for predictability, not the extremes.”</li>
</ul>
</section>
</section>
<section id="chapter-4-we-will-not-let-devs-start-without-an-estimate" class="level2">
<h2 class="anchored" data-anchor-id="chapter-4-we-will-not-let-devs-start-without-an-estimate"><strong>Chapter 4: We Will Not Let Devs Start without an Estimate</strong></h2>
<section id="importance-of-estimates" class="level3">
<h3 class="anchored" data-anchor-id="importance-of-estimates"><strong>Importance of Estimates</strong></h3>
<ol type="1">
<li><strong>Controversy</strong>
<ul>
<li>Software estimates are <strong>notoriously</strong> inaccurate.</li>
<li>Some companies abandon them entirely.</li>
<li>Author insists they are <strong>still valuable</strong>.</li>
</ul></li>
<li><strong>Primary Reason</strong>
<ul>
<li><p>Ownership and alignment:</p>
<ul>
<li>For planning and coordinating with <strong>other initiatives</strong>.</li>
</ul></li>
<li><p><strong>More importantly</strong>, they get devs to <strong>think through</strong> the full project.</p></li>
</ul></li>
</ol>
</section>
<section id="estimates-as-a-management-tool" class="level3">
<h3 class="anchored" data-anchor-id="estimates-as-a-management-tool"><strong>Estimates as a Management Tool</strong></h3>
<ol type="1">
<li><strong>Immediate Improvement</strong>
<ul>
<li>Simply <strong>requiring</strong> a dev to produce an estimate <strong>improves</strong> project quality.</li>
<li>Even if you <strong>never look</strong> at the estimate, it forces the dev to <strong>consider the scope</strong> before diving in.</li>
</ul></li>
<li><strong>Analogy</strong>
<ul>
<li>“Starting projects without an estimate is like <strong>shopping without a budget</strong>.”</li>
<li>Surprises of an <strong>extra order of magnitude</strong> in time or cost become visible <strong>before</strong> it’s too late.</li>
</ul></li>
<li><strong>Scope Clarification</strong>
<ul>
<li><p>Often, a big discrepancy between the dev’s estimate and your expectation reveals:</p>
<ul>
<li>The dev may be <strong>unsure</strong> of the requirements.
<ul>
<li>The dev might <strong>over-engineer</strong> a piece that’s not crucial.</li>
</ul></li>
<li>Or you missed some <strong>hidden complexity</strong>.</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="constraints-and-realities" class="level3">
<h3 class="anchored" data-anchor-id="constraints-and-realities"><strong>Constraints and Realities</strong></h3>
<ol type="1">
<li><strong>Aligning Incentives</strong>
<ul>
<li>Devs on salary or hourly rate have <strong>no direct financial pressure</strong> to ship quickly.</li>
<li>Overengineering and <strong>scope creep</strong> can thrive if you <strong>don’t</strong> push for estimates.</li>
</ul></li>
<li><strong>Estimate Checkpoints</strong>
<ul>
<li>Use the dev’s estimate to <strong>check progress</strong> at 25%, 50%, 75%, 90%.</li>
<li>If a dev is consistently behind schedule or <strong>fails</strong> to see red flags, it’s time to <strong>intervene</strong>.</li>
</ul></li>
<li><strong>Handling Uncertainty</strong>
<ul>
<li><strong>Quote</strong>: “Measurements are observations that reduce uncertainty.”</li>
<li>Estimates don’t have to be <strong>perfect</strong>, just <strong>close enough</strong> (within ~15%) so that you can manage effectively.</li>
</ul></li>
<li><strong>Accountability vs.&nbsp;Punishment</strong>
<ul>
<li><strong>Don’t</strong> punish devs for every single missed target.</li>
<li>Instead, watch for <strong>consistency, communication, and conscientiousness</strong>.</li>
<li>If a dev is <strong>always</strong> missing by 25% or more, they need <strong>coaching</strong> or there’s a deeper problem.</li>
</ul></li>
<li><strong>Never Dictate an Estimate</strong>
<ul>
<li>If you <strong>demand</strong> a specific timeline, devs feel no ownership.</li>
<li>If you disagree with the estimate, <strong>reduce scope</strong> or find a different dev.</li>
</ul></li>
</ol>
</section>
<section id="conclusion-on-estimates" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-on-estimates"><strong>Conclusion on Estimates</strong></h3>
<ul>
<li>Estimates ensure <strong>devs truly understand</strong> the task and have <strong>skin in the game</strong>.</li>
<li>They also help you <strong>plan checkpoints</strong> and <strong>hold devs accountable</strong>.</li>
</ul>
</section>
</section>
<section id="chapter-5-we-will-not-sprint" class="level2">
<h2 class="anchored" data-anchor-id="chapter-5-we-will-not-sprint"><strong>Chapter 5: We Will Not Sprint</strong></h2>
<section id="two-week-sprints-critique" class="level3">
<h3 class="anchored" data-anchor-id="two-week-sprints-critique"><strong>Two-Week Sprints Critique</strong></h3>
<ol type="1">
<li><strong>Common Practice</strong>
<ul>
<li>Sprints are <strong>everywhere</strong> in modern engineering.</li>
<li>The author calls them <strong>“a bad idea.”</strong></li>
</ul></li>
<li><strong>Caveat</strong>
<ul>
<li>If the choice is between a <strong>yearly release cycle</strong> or two-week sprints, then sprints are obviously <strong>better</strong>.</li>
<li>But that <strong>false dichotomy</strong> doesn’t represent reality.</li>
</ul></li>
</ol>
</section>
<section id="sprints-in-theory-vs.-practice" class="level3">
<h3 class="anchored" data-anchor-id="sprints-in-theory-vs.-practice"><strong>Sprints in Theory vs.&nbsp;Practice</strong></h3>
<ol type="1">
<li><strong>Definition</strong>
<ul>
<li>Typically a <strong>two-week block</strong> of time with assigned features/fixes.</li>
<li>At the end, results are <strong>reviewed</strong>.</li>
</ul></li>
<li><strong>Alleged Benefits</strong>
<ul>
<li>Forces tasks to be <strong>broken down</strong> into smaller deliverables.</li>
<li>Adds <strong>urgency</strong> and mitigates scope creep.</li>
<li>Improves <strong>transparency</strong> for stakeholders.</li>
<li>Encourages <strong>retrospective learning</strong>.</li>
</ul></li>
<li><strong>Arbitrary Time Block</strong>
<ul>
<li>The author calls the two-week schedule <strong>“unnecessary”</strong> in today’s environment.</li>
<li><strong>Quote</strong>: “Sticking to an arbitrary two-week schedule causes more harm than good.”</li>
</ul></li>
</ol>
</section>
<section id="backpack-analogy" class="level3">
<h3 class="anchored" data-anchor-id="backpack-analogy"><strong>Backpack Analogy</strong></h3>
<ol type="1">
<li><strong>Fixed Capacity</strong>
<ul>
<li>A sprint is like a <strong>backpack</strong> with limited space.</li>
<li>You try to fill it with an <strong>optimal mix</strong> of tasks.</li>
<li>You might end up with <strong>unused</strong> capacity or <strong>overstuffing</strong>.</li>
</ul></li>
<li><strong>Guessing Game</strong>
<ul>
<li>If you <strong>underplan</strong>, devs finish early and either become idle or break the sprint “rules.”</li>
<li>If you <strong>overplan</strong>, they inevitably <strong>miss</strong> the sprint deadlines.</li>
</ul></li>
<li><strong>No Actual Benefit</strong>
<ul>
<li>Stakeholders only care about <strong>their feature</strong> timeline, not an entire sprint’s success or failure.</li>
</ul></li>
<li><strong>Better Alternatives</strong>
<ul>
<li>You can still:
<ul>
<li>Break work into <strong>small, shippable pieces</strong>.</li>
<li>Defer <strong>non-priority</strong> tasks.</li>
<li>Meet regularly for <strong>feedback</strong>.</li>
</ul></li>
<li><strong>None</strong> of these require forcing everything into a <strong>two-week cycle</strong>.</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-6-we-will-not-allow-our-devs-to-multitask" class="level2">
<h2 class="anchored" data-anchor-id="chapter-6-we-will-not-allow-our-devs-to-multitask"><strong>Chapter 6: We Will Not Allow Our Devs to Multitask</strong></h2>
<section id="value-of-finished-projects" class="level3">
<h3 class="anchored" data-anchor-id="value-of-finished-projects"><strong>Value of Finished Projects</strong></h3>
<ol type="1">
<li><strong>Zero Value Until Shipped</strong>
<ul>
<li>If you have <strong>10 partial projects</strong>, the total value is still <strong>zero</strong>.</li>
<li>One <strong>completed</strong> project is better than many half-finished ones.</li>
</ul></li>
<li><strong>Parallel vs.&nbsp;Serial Execution</strong>
<ul>
<li>Example: 5 projects, each takes 2 days of dev work.
<ul>
<li>Doing them <strong>in parallel</strong> finishes <strong>all on Day 10</strong> → no benefits before Day 10.</li>
<li>Doing them <strong>serially</strong> yields <strong>the first finished</strong> by Day 2, second by Day 4, etc., which can <strong>start delivering value</strong> earlier.</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="opportunity-costs-and-profit-example" class="level3">
<h3 class="anchored" data-anchor-id="opportunity-costs-and-profit-example"><strong>Opportunity Costs and Profit Example</strong></h3>
<ol type="1">
<li><strong>Simple Model</strong>
<ul>
<li>1 dev = $1/day cost.</li>
<li>5 projects = each yields $1/day once finished, each requires 1 day of dev time.</li>
<li>Parallel approach = 0 revenue until end of Day 5 → net <strong>-5</strong> cost.</li>
<li>Serial approach = incremental revenue from Day 2 onward → net <strong>+5</strong> by Day 5.</li>
</ul></li>
<li><strong>Immediate Feedback Loop</strong>
<ul>
<li>Early completion of a project leads to <strong>user feedback</strong>, <strong>analytics</strong>, or <strong>direct revenue</strong> sooner.</li>
</ul></li>
</ol>
</section>
<section id="avoiding-the-busy-trap" class="level3">
<h3 class="anchored" data-anchor-id="avoiding-the-busy-trap"><strong>Avoiding the Busy Trap</strong></h3>
<ol type="1">
<li><strong>Dev Utilization</strong>
<ul>
<li>Leaders often want devs “always busy,” but being busy with <strong>multiple tasks</strong> can delay actual <strong>shipping</strong>.</li>
<li>Dev waiting for code review should <strong>focus on pushing the review along</strong>, not start a new project and lose track of the old one.</li>
</ul></li>
<li><strong>Ownership Through Deployment</strong>
<ul>
<li>Devs shouldn’t say “not my problem” once they write the code.</li>
<li>True value is realized only when code is <strong>live in production</strong>.</li>
</ul></li>
<li><strong>Context Switching Costs</strong>
<ul>
<li>If a dev juggles multiple in-progress items, <strong>re-familiarizing</strong> themselves with older tasks after code review or QA feedback doubles the time.</li>
</ul></li>
</ol>
</section>
<section id="engineer-motivation" class="level3">
<h3 class="anchored" data-anchor-id="engineer-motivation"><strong>Engineer Motivation</strong></h3>
<ol type="1">
<li><strong>Blocking Issues</strong>
<ul>
<li>Devs often claim they’re done if they’re waiting on someone else.</li>
<li>The author argues devs should remain <strong>invested</strong>: bug the reviewer, fix QA issues quickly, etc.</li>
</ul></li>
<li><strong>Analogy</strong>
<ul>
<li>Meeting a valuable contact for dinner: If you <em>really</em> care, you’ll find a way despite obstacles.</li>
</ul></li>
<li><strong>Conclusion</strong>
<ul>
<li>Don’t reward devs for simply <strong>starting</strong> multiple things. Reward them for <strong>seeing things through</strong> to production.</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-7-we-will-not-accept-the-first-solution-a-dev-thinks-up" class="level2">
<h2 class="anchored" data-anchor-id="chapter-7-we-will-not-accept-the-first-solution-a-dev-thinks-up"><strong>Chapter 7: We Will Not Accept the First Solution a Dev Thinks Up</strong></h2>
<blockquote class="blockquote">
<p>“Go with your gut. Trust your instincts. Follow your intuition. They all have something in common. They’re terrible strategies when you’re making a decision.”</p>
</blockquote>
<section id="why-instincts-can-be-misleading" class="level3">
<h3 class="anchored" data-anchor-id="why-instincts-can-be-misleading"><strong>Why Instincts Can Be Misleading</strong></h3>
<ol type="1">
<li><strong>Common Advice</strong>
<ul>
<li><em>“Go with your gut”</em> is <strong>bad strategy</strong> for engineering decisions.</li>
<li>Engineers’ <strong>instincts</strong> can be hijacked by <strong>hidden biases</strong>, personal preferences, or novelty-seeking.</li>
</ul></li>
<li><strong>Typical Scenario</strong>
<ul>
<li>You need a <strong>simple</strong> documentation site.</li>
<li>Engineer pushes for a fancy <strong>framework</strong> they’ve been reading about, leading to wasted time <strong>over-engineering</strong>.</li>
</ul></li>
</ol>
</section>
<section id="misaligned-priorities" class="level3">
<h3 class="anchored" data-anchor-id="misaligned-priorities"><strong>Misaligned Priorities</strong></h3>
<ol type="1">
<li><strong>Founders vs.&nbsp;Engineers</strong>
<ul>
<li>Founders want <strong>features</strong> that <strong>deliver value</strong> quickly and reliably.</li>
<li>Engineers want <strong>puzzles</strong> and <strong>fun new</strong> tech to explore.</li>
</ul></li>
<li><strong>When Quick-and-Dirty Is Best</strong>
<ul>
<li>Sometimes, a single <strong>HTML file</strong> is enough if the site is only for a short-term purpose.</li>
<li>Overuse of React, Gatsby, or Next.js is <strong>time-consuming</strong> and might be <strong>overkill</strong>.</li>
</ul></li>
<li><strong>Do Not Over-Correct</strong>
<ul>
<li>Some devs always want the <strong>slickest</strong> approach. Others default to the <strong>fastest hack</strong>.</li>
<li>Problems emerge when they <strong>cling</strong> to a single approach <strong>emotionally</strong>.</li>
</ul></li>
</ol>
</section>
<section id="how-to-prevent-disaster" class="level3">
<h3 class="anchored" data-anchor-id="how-to-prevent-disaster"><strong>How to Prevent Disaster</strong></h3>
<ol type="1">
<li><p><strong>Founders Are the “What,” Engineers Are the “How.”</strong></p>
<ul>
<li>If you <strong>dictate</strong> the technical approach, devs lose ownership and blame you if it fails.</li>
</ul></li>
<li><p><strong>Require Multiple Approaches</strong></p>
<ul>
<li><p><strong>Quote</strong>: “Don’t accept the first solution they come up with.”</p></li>
<li><p>Ensure they provide at least three alternatives:</p>
<ul>
<li>One focusing on <strong>speed</strong>,</li>
<li>One focusing on <strong>low cost</strong>,</li>
<li>One focusing on <strong>robustness</strong> or <strong>full features</strong>.</li>
</ul></li>
</ul></li>
<li><p><strong>Avoid Attachment</strong></p>
<ul>
<li>When a dev presents only <strong>one</strong> solution, they <strong>take it personally</strong> if you reject it.</li>
<li>With <strong>three solutions</strong>, they can shift to alternative ideas without <strong>ego battles</strong>.</li>
</ul></li>
<li><p><strong>Long-Term Benefit</strong></p>
<ul>
<li><strong>Better</strong> to take time up front, handle <strong>uncomfortable</strong> brainstorming, and find the approach that fits the <strong>business constraints</strong> (time, money, scope).</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-8-we-will-not-allow-our-devs-to-talk-in-private" class="level2">
<h2 class="anchored" data-anchor-id="chapter-8-we-will-not-allow-our-devs-to-talk-in-private"><strong>Chapter 8: We Will Not Allow Our Devs to Talk in Private</strong></h2>
<section id="knowledge-retention" class="level3">
<h3 class="anchored" data-anchor-id="knowledge-retention"><strong>Knowledge Retention</strong></h3>
<ol type="1">
<li><strong>Risk of “In-the-Head” Data</strong>
<ul>
<li>If crucial info is <strong>only</strong> in a key employee’s mind, it leaves with them if they quit.</li>
<li>A business reliant on a <strong>single</strong> person’s knowledge is <strong>fragile</strong>.</li>
</ul></li>
<li><strong>Goal</strong>
<ul>
<li>A valuable company can <strong>thrive</strong> independently of specific employees.</li>
<li>If the entire dev team vanished, could new devs <strong>continue</strong> from existing docs, repos, and infrastructure?</li>
</ul></li>
<li><strong>RAM vs.&nbsp;Hard Drive</strong> Analogy
<ul>
<li>Many companies store data <strong>in engineers’ “RAM”</strong> (their heads) instead of <strong>persisting</strong> it in a shared place.</li>
</ul></li>
</ol>
</section>
<section id="capturing-conversations" class="level3">
<h3 class="anchored" data-anchor-id="capturing-conversations"><strong>Capturing Conversations</strong></h3>
<ol type="1">
<li><strong>Recording and Searchability</strong>
<ul>
<li>Imagine if <strong>all</strong> team discussions and decisions were <strong>searchable</strong> for future devs.</li>
<li>Onboarding becomes easier; leaving employees don’t take knowledge with them.</li>
</ul></li>
<li><strong>Default to Text-Based Communication</strong>
<ul>
<li>Instead of voice or video calls, use <strong>chat or written</strong> channels so everything is <strong>automatically documented</strong>.</li>
</ul></li>
<li><strong>Resistance</strong>
<ul>
<li>Some people find typing more <strong>tedious</strong> or <strong>less fun</strong>.</li>
<li>The author argues that’s a <strong>worthwhile trade</strong> for clarity, documentation, and consistency.</li>
</ul></li>
<li><strong>Benefits of Writing</strong>
<ul>
<li>Forces <strong>more precise thought</strong> and fosters a <strong>lasting record</strong>.</li>
<li>The company <strong>should own</strong> the knowledge, not let it vanish when employees depart.</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-9-we-will-not-allow-our-devs-to-wander-off" class="level2">
<h2 class="anchored" data-anchor-id="chapter-9-we-will-not-allow-our-devs-to-wander-off"><strong>Chapter 9: We Will Not Allow Our Devs to Wander Off</strong></h2>
<section id="maintaining-motivation" class="level3">
<h3 class="anchored" data-anchor-id="maintaining-motivation"><strong>Maintaining Motivation</strong></h3>
<ol type="1">
<li><strong>Engineers Are Not Static</strong>
<ul>
<li>Even great devs can <strong>lose motivation</strong> or <strong>engagement</strong> over time if <strong>no leadership</strong> is in place.</li>
</ul></li>
<li><strong>Signs of Wandering</strong>
<ul>
<li>Productivity slows; simple tasks take forever; more <strong>careless</strong> mistakes appear.</li>
<li>Dev might physically leave for another company or just <strong>mentally “check out.”</strong></li>
</ul></li>
<li><strong>One-on-One Meetings</strong>
<ul>
<li>Frequent <strong>personal check-ins</strong> keep devs <strong>centered</strong> on business priorities.</li>
<li>Founder/manager must <strong>directly address</strong> the reasons devs stray.</li>
</ul></li>
</ol>
</section>
<section id="core-factors" class="level3">
<h3 class="anchored" data-anchor-id="core-factors"><strong>Core Factors</strong></h3>
<ol type="1">
<li><strong>Dev Must Want to Help You</strong>
<ul>
<li>If dev feels you don’t <strong>care about them</strong>, they won’t <strong>commit</strong> 100%.</li>
<li>Basic <strong>trust and empathy</strong> go a long way.</li>
</ul></li>
<li><strong>Dev Must Know How to Help You</strong>
<ul>
<li>Many devs have a <strong>distorted</strong> view of the <strong>company’s priorities</strong>.</li>
<li>If you don’t clarify your <strong>top goals</strong>, devs can’t effectively align.</li>
</ul></li>
<li><strong>Dev Must Avoid Blockers</strong>
<ul>
<li>Dev complaints are <strong>signals</strong> of something that’s impeding them.</li>
<li>Could be <strong>process issues</strong>, missing docs, or dev’s own skill gaps.</li>
<li>Investigate systematically, rather than ignoring or always assuming dev error.</li>
</ul></li>
<li><strong>Meaningful Work</strong>
<ul>
<li>If devs <strong>never</strong> see the <strong>impact</strong> of their output, they lose motivation.</li>
<li>Founders know how features matter to customers, but devs may <strong>not</strong> see that connection.</li>
</ul></li>
</ol>
</section>
</section>
<section id="chapter-10-we-will-not-let-our-devs-boss-us-around" class="level2">
<h2 class="anchored" data-anchor-id="chapter-10-we-will-not-let-our-devs-boss-us-around"><strong>Chapter 10: We Will Not Let Our Devs Boss Us Around</strong></h2>
<section id="founder-fears" class="level3">
<h3 class="anchored" data-anchor-id="founder-fears"><strong>Founder Fears</strong></h3>
<ol type="1">
<li><strong>Devs Are Seen as Powerful</strong>
<ul>
<li>They are expensive, hard to replace, and control the code.</li>
<li>Some founders worry about <strong>displeasing</strong> a lead dev who might quit, leaving the startup in trouble.</li>
</ul></li>
<li><strong>Rewrite Demands</strong>
<ul>
<li>The lead dev claims the <strong>legacy code</strong> is unacceptable, demands rewriting everything in a new framework, halting progress.</li>
<li>Founder feels they must <strong>oblige</strong> to avoid dev’s departure.</li>
</ul></li>
<li><strong>Author’s Position</strong>
<ul>
<li>This dynamic is <strong>dangerous</strong>. Founders must not feel <strong>helpless</strong>.</li>
<li>Devs <strong>must</strong> be held accountable and always keep <strong>business objectives</strong> in mind.</li>
</ul></li>
</ol>
</section>
<section id="business-realities-vs.-dev-preferences" class="level3">
<h3 class="anchored" data-anchor-id="business-realities-vs.-dev-preferences"><strong>Business Realities vs.&nbsp;Dev Preferences</strong></h3>
<ol type="1">
<li><strong>Customer Value Over Code Elegance</strong>
<ul>
<li>Customers do not care if your <strong>framework</strong> is old or if the code is “legacy.”</li>
<li>They care about solutions that <strong>save them time</strong> or <strong>money</strong>.</li>
</ul></li>
<li><strong>Tech Debt</strong>
<ul>
<li>Tech debt <strong>is real</strong>, but a <strong>complete rewrite</strong> is an <strong>extreme</strong> measure.</li>
<li>Founders should ask devs <strong>why</strong> a rewrite is the only solution, how it affects <strong>velocity</strong>, and if it truly <strong>reduces</strong> user-facing bugs.</li>
</ul></li>
<li><strong>Replaceability</strong>
<ul>
<li><strong>Quote</strong>: “Remember, your devs are not irreplaceable.”</li>
<li>A dev who <strong>bullies</strong> you into rewrites or halting your roadmap is a liability.</li>
</ul></li>
<li><strong>Challenge Their Assumptions</strong>
<ul>
<li>Make devs <strong>prove</strong> that a major refactor or rewrite is truly best for the <strong>business</strong> rather than an <strong>engineering</strong> preference.</li>
</ul></li>
</ol>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion"><strong>Conclusion</strong></h2>
<section id="overall-summary" class="level3">
<h3 class="anchored" data-anchor-id="overall-summary"><strong>Overall Summary</strong></h3>
<ol type="1">
<li><strong>Lessons from Others’ Mistakes</strong>
<ul>
<li>The author has worked as a <strong>consultant, CTO, and engineer</strong> with various founders.</li>
<li>Common theme: Many mistakes could have been prevented by <strong>sound leadership</strong> and <strong>recognizing engineering pitfalls</strong> early.</li>
</ul></li>
<li><strong>Key Points</strong>
<ul>
<li><strong>Stand-ups</strong> can be a costly <strong>time sink</strong>.</li>
<li><strong>Coding riddles</strong> don’t reflect real job skills in many startup environments.</li>
<li><strong>10x developer</strong> is a <strong>myth</strong> (or at least an overhyped concept).</li>
<li><strong>Software estimates</strong> are crucial for <strong>ownership</strong>, not just planning.</li>
<li><strong>Sprints</strong> are an <strong>arbitrary</strong> constraint, not a guaranteed productivity boost.</li>
<li>Devs should <strong>finish</strong> projects, not endlessly multitask.</li>
<li>Always <strong>explore multiple solutions</strong>; do not get attached to one approach.</li>
<li>Use <strong>text-based communication</strong> for knowledge persistence.</li>
<li>Keep devs <strong>motivated</strong> and <strong>aligned</strong> with company goals.</li>
<li>Don’t let devs <strong>bully</strong> you with demands that might not serve the <strong>business</strong>.</li>
</ul></li>
</ol>
</section>
<section id="adapting-advice" class="level3">
<h3 class="anchored" data-anchor-id="adapting-advice"><strong>Adapting Advice</strong></h3>
<ol type="1">
<li><p><strong>Don’t Mimic Big Tech Blindly</strong></p>
<ul>
<li>The book cautions about <strong>copying</strong> well-known tech companies’ methods without considering <strong>context</strong>.</li>
</ul></li>
<li><p><strong>Evidence-Based Practices</strong></p>
<ul>
<li>If your <strong>own experience</strong> shows sprints (or stand-ups) work well, keep doing them.</li>
<li>The focus should be on <strong>delivering value</strong>, not <strong>feeling</strong> like a “real tech company.”</li>
</ul></li>
<li><p><strong>Iterative Success</strong></p>
<ul>
<li><p>Building a successful startup is an iterative process:</p>
<ol type="1">
<li>Make decisions</li>
<li>Reflect</li>
<li>Adjust</li>
</ol></li>
</ul></li>
<li><p><strong>Courage and Honesty</strong></p>
<ul>
<li>Retain what’s <strong>effective</strong> and drop what’s <strong>not</strong>, even if it’s an industry trend.</li>
</ul></li>
</ol>
</section>
</section>
<section id="key-takeaways" class="level2">
<h2 class="anchored" data-anchor-id="key-takeaways"><strong>Key Takeaways</strong></h2>
<ul>
<li><strong>Daily stand-ups</strong>: Disruptive, often low-ROI, large <strong>context-switching</strong> cost.</li>
<li><strong>CS riddle interviews</strong>: Irrelevant to actual <strong>customer-facing</strong> work for most startups.</li>
<li><strong>10x dev</strong>: Usually a <strong>myth</strong>; hire <strong>predictable, team-oriented</strong> engineers.</li>
<li><strong>Estimates</strong>: Drive <strong>accountability</strong> and help detect scope issues <strong>early</strong>.</li>
<li><strong>Avoid sprints</strong> if they’re more about <strong>ritual</strong> than delivering real value.</li>
<li><strong>Multitasking</strong>: Finishing tasks one at a time often yields <strong>faster</strong> overall results.</li>
<li><strong>Multiple approaches</strong>: Encourage devs to brainstorm at least <strong>three</strong> solutions before deciding.</li>
<li><strong>Document everything</strong>: Default to <strong>text-based</strong> communication for knowledge retention.</li>
<li><strong>One-on-ones</strong>: Consistent check-ins keep devs aligned, motivated, and <strong>unblocked</strong>.</li>
<li><strong>Do not fear your devs</strong>: They work <strong>for</strong> you and <strong>your customers’</strong> benefit.</li>
</ul>
<blockquote class="blockquote">
<p><strong>Above all</strong>: Engineering strategies should serve the <strong>business’s</strong> success and <strong>customer needs</strong>.</p>
</blockquote>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>professional-growth</category>
  <category>book</category>
  <category>notes</category>
  <guid>https://christianjmills.com/posts/the-superstruct-manifesto-book-notes/</guid>
  <pubDate>Sun, 09 Feb 2025 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Notes on The Great Mental Models - Volume 2: Physics, Chemistry, and Biology</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/the-great-mental-models-book-series-notes/volume-2/</link>
  <description><![CDATA[ 




<ul>
<li>Introduction</li>
<li>Physics</li>
<li>Chemistry<br>
</li>
<li>Biology</li>
<li>Afterthoughts</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled" title="Book LInks:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://fs.blog/tgmm/">Series Homepage</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<section id="overview" class="level3">
<h3 class="anchored" data-anchor-id="overview">Overview</h3>
<section id="purpose-and-scope" class="level4">
<h4 class="anchored" data-anchor-id="purpose-and-scope">Purpose and Scope</h4>
<ul>
<li><strong>Core Premise</strong>: The world is complex and mysterious, but humans have worked some of its fundamental principles.</li>
<li><strong>Main Goal</strong>: Present a “latticework of mental models” for approaching:
<ul>
<li>New ideas</li>
<li>Situations</li>
<li>Problems</li>
<li>Challenges</li>
</ul></li>
</ul>
</section>
<section id="series-structure" class="level4">
<h4 class="anchored" data-anchor-id="series-structure">Series Structure</h4>
<ul>
<li><strong>Volume 1</strong>:
<ul>
<li>Covered nine general thinking concepts</li>
<li>Focus on broad applicability</li>
<li>Aimed at building foundation of timeless knowledge</li>
<li><strong>Notes:</strong> <a href="../volume-1">Notes on The Great Mental Models - Volume 1: General Thinking Concepts</a></li>
</ul></li>
<li><strong>Volume 2</strong>:
<ul>
<li>Focuses on fundamental ideas from:
<ul>
<li>Physics</li>
<li>Chemistry</li>
<li>Biology</li>
</ul></li>
<li><strong>Application Areas</strong>:
<ul>
<li>Careers</li>
<li>Relationships</li>
<li>Personal development</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="key-concepts-and-examples" class="level3">
<h3 class="anchored" data-anchor-id="key-concepts-and-examples">Key Concepts and Examples</h3>
<section id="working-with-nature-the-fram-case-study" class="level4">
<h4 class="anchored" data-anchor-id="working-with-nature-the-fram-case-study">Working with Nature: The Fram Case Study</h4>
<blockquote class="blockquote">
<p>In Storm in a Teacup, the Physics of Everyday Life, Helen Czerski tells the story of the Fram, a boat designed to work with nature instead of against it.</p>
</blockquote>
<section id="historical-context" class="level5">
<h5 class="anchored" data-anchor-id="historical-context">Historical Context</h5>
<ul>
<li><strong>Time Period</strong>: Late 1800s</li>
<li><strong>Challenge</strong>: Reaching the North Pole</li>
<li><strong>Problem</strong>: Ships getting stuck and destroyed by Arctic ice pressure</li>
</ul>
</section>
<section id="the-frams-innovation" class="level5">
<h5 class="anchored" data-anchor-id="the-frams-innovation">The Fram’s Innovation</h5>
<ul>
<li><strong>Designer</strong>: Fridtjof Nansen (Norwegian scientist)</li>
<li><strong>Key Design Features</strong>:
<ul>
<li>Smooth curvy hull</li>
<li>Almost no keel</li>
<li>Removable engines and rudder</li>
<li>Design principle: Work with ice pressure rather than against it</li>
</ul></li>
</ul>
</section>
<section id="results" class="level5">
<h5 class="anchored" data-anchor-id="results">Results</h5>
<ul>
<li><strong>Achievements</strong>:
<ul>
<li>Floated across Arctic Ocean for three years</li>
<li>Got closer to North Pole than any previous ship</li>
<li>Proved Arctic was an ocean</li>
<li>Collected valuable scientific data</li>
</ul></li>
</ul>
</section>
</section>
<section id="core-series-philosophy" class="level4">
<h4 class="anchored" data-anchor-id="core-series-philosophy">Core Series Philosophy</h4>
<section id="purpose-of-mental-models" class="level5">
<h5 class="anchored" data-anchor-id="purpose-of-mental-models">Purpose of Mental Models</h5>
<ul>
<li><strong>Definition</strong>: “A mental model is simply a representation of how something works”</li>
<li><strong>Functions</strong>:
<ul>
<li>Knowledge retention</li>
<li>World understanding simplification</li>
<li>Pattern recognition</li>
<li>Efficient navigation of daily life</li>
</ul></li>
</ul>
</section>
<section id="application-principles" class="level5">
<h5 class="anchored" data-anchor-id="application-principles">Application Principles</h5>
<ol type="1">
<li><strong>Cross-disciplinary Synthesis</strong>:
<ul>
<li>Apply knowledge across different areas</li>
<li>Use principles outside their original context</li>
</ul></li>
<li><strong>Model Selection</strong>:
<ul>
<li>Not all models apply to all situations</li>
<li>Requires education about appropriate application</li>
<li>Learning through practice and reflection</li>
</ul></li>
</ol>
</section>
</section>
</section>
<section id="volume-2-specific-content" class="level3">
<h3 class="anchored" data-anchor-id="volume-2-specific-content">Volume 2-Specific Content</h3>
<section id="focus-areas" class="level4">
<h4 class="anchored" data-anchor-id="focus-areas">Focus Areas</h4>
<ul>
<li>Core mental models from:
<ul>
<li>Physics</li>
<li>Chemistry</li>
<li>Biology</li>
</ul></li>
</ul>
</section>
<section id="content-structure" class="level4">
<h4 class="anchored" data-anchor-id="content-structure">Content Structure</h4>
<ul>
<li><strong>Chapter Organization</strong>:
<ul>
<li>Scientific explanation of concepts</li>
<li>Real-world examples</li>
<li>Historical applications</li>
<li>Practical applications</li>
</ul></li>
</ul>
</section>
<section id="application-types" class="level4">
<h4 class="anchored" data-anchor-id="application-types">Application Types</h4>
<section id="metaphorical-applications" class="level5">
<h5 class="anchored" data-anchor-id="metaphorical-applications">Metaphorical Applications</h5>
<ul>
<li>Primarily in physics section</li>
<li>Help uncover underlying forces in life situations</li>
<li>Useful for complex problem analysis</li>
</ul>
</section>
<section id="literal-applications" class="level5">
<h5 class="anchored" data-anchor-id="literal-applications">Literal Applications</h5>
<ul>
<li>Primarily from biology</li>
<li>Direct mapping to life experiences</li>
<li>Practical problem-solving applications</li>
</ul>
</section>
</section>
<section id="usage-guidelines" class="level4">
<h4 class="anchored" data-anchor-id="usage-guidelines">Usage Guidelines</h4>
<section id="implementation-strategy" class="level5">
<h5 class="anchored" data-anchor-id="implementation-strategy">Implementation Strategy</h5>
<ol type="1">
<li><strong>Practice</strong>:
<ul>
<li>Select one new model daily</li>
<li>Apply to current situations</li>
<li>Test for improved understanding and decision-making</li>
</ul></li>
<li><strong>Reflection</strong>:
<ul>
<li>Evaluate successes and failures</li>
<li>Learn from application attempts</li>
<li>Build understanding of tool applicability</li>
</ul></li>
</ol>
</section>
<section id="key-reminders" class="level5">
<h5 class="anchored" data-anchor-id="key-reminders">Key Reminders</h5>
<ul>
<li>Models are value-neutral tools</li>
<li>Not all tools work for all problems</li>
<li>Success requires:
<ul>
<li>Curiosity</li>
<li>Openness to learning</li>
<li>Regular practice</li>
<li>Consistent reflection</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="educational-approach" class="level3">
<h3 class="anchored" data-anchor-id="educational-approach">Educational Approach</h3>
<section id="learning-methodology" class="level4">
<h4 class="anchored" data-anchor-id="learning-methodology">Learning Methodology</h4>
<ul>
<li><strong>No Prerequisites</strong>: Advanced degrees not required</li>
<li><strong>Focus on</strong>:
<ul>
<li>Foundational concepts</li>
<li>Broad applicability</li>
<li>Practical implementation</li>
</ul></li>
</ul>
</section>
<section id="pattern-recognition" class="level4">
<h4 class="anchored" data-anchor-id="pattern-recognition">Pattern Recognition</h4>
<ul>
<li>Systems organize themselves in limited ways</li>
<li>Cross-disciplinary applications:
<ul>
<li>Biological growth principles apply to economic growth</li>
<li>Chemical reaction principles apply to creation processes</li>
<li>Individual lessons apply to teams and organizations</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="physics" class="level2">
<h2 class="anchored" data-anchor-id="physics">Physics</h2>
<blockquote class="blockquote">
<p>Nothing in life is to be feared, it is only to be understood. Now is the time to understand more so that we may fear less. - Marie Curie</p>
</blockquote>
<section id="relativity" class="level3">
<h3 class="anchored" data-anchor-id="relativity">Relativity</h3>
<section id="introduction-to-relativity" class="level4">
<h4 class="anchored" data-anchor-id="introduction-to-relativity">Introduction to Relativity</h4>
<section id="core-concept" class="level5">
<h5 class="anchored" data-anchor-id="core-concept">Core Concept</h5>
<ul>
<li><p><strong>Relativity</strong> is founded on empathy in a rigorous scientific sense</p></li>
<li><p>Key principle: Understanding how things appear to someone moving differently than you</p></li>
<li><p>Quote from Steven Strogatz:</p>
<blockquote class="blockquote">
<p>“The theory of relativity is founded on empathy, not empathy in the ordinary emotional sense, empathy in a rigorous scientific sense.”</p>
</blockquote></li>
</ul>
</section>
<section id="fundamental-principles" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-principles">Fundamental Principles</h5>
<ul>
<li>Different perspectives can provide valid views of the same situation</li>
<li>Not all perspectives are equally valid</li>
<li>No single perspective usually provides a complete view</li>
<li>Understanding multiple perspectives reveals blind spots and creates empathy</li>
</ul>
</section>
</section>
<section id="historical-thought-experiments" class="level4">
<h4 class="anchored" data-anchor-id="historical-thought-experiments">Historical Thought Experiments</h4>
<section id="the-role-of-thought-experiments" class="level5">
<h5 class="anchored" data-anchor-id="the-role-of-thought-experiments">The Role of Thought Experiments</h5>
<ul>
<li>Valuable mental models for scientific understanding</li>
<li>Allow exploration of impossible scenarios</li>
<li>Help evaluate potential consequences</li>
<li>Enable re-examination of history</li>
<li>Function as rigorous applications of scientific method</li>
</ul>
</section>
<section id="galileos-ship-experiment-1630s" class="level5">
<h5 class="anchored" data-anchor-id="galileos-ship-experiment-1630s">Galileo’s Ship Experiment (1630s)</h5>
<ul>
<li><strong>Key Discovery</strong>: Observers moving at constant speed/direction obtain same results for mechanical experiments</li>
<li><strong>Experimental Setup</strong>:
<ul>
<li>Scientist below ship deck</li>
<li>No portholes (no external reference)</li>
<li>Ship moving at constant velocity</li>
</ul></li>
<li><strong>Observations</strong>:
<ol type="1">
<li>Scientist’s Perspective:
<ul>
<li>Only sees vertical ball movement</li>
<li>Cannot perceive horizontal movement</li>
</ul></li>
<li>Outside Observer’s Perspective:
<ul>
<li>Sees complete movement (vertical + horizontal)</li>
<li>Observes ball’s path affected by ship’s motion</li>
</ul></li>
</ol></li>
<li><strong>Implications</strong>:
<ul>
<li>Demonstrated Earth’s motion (supporting Copernicus)</li>
<li>Shows how perspective influences perceived reality</li>
<li>Earth moves at 67,000 mph though we don’t feel it</li>
</ul></li>
</ul>
</section>
<section id="einsteins-train-experiment-early-1900s" class="level5">
<h5 class="anchored" data-anchor-id="einsteins-train-experiment-early-1900s">Einstein’s Train Experiment (Early 1900s)</h5>
<ul>
<li><p><strong>Context</strong>: Developed for special relativity theory</p></li>
<li><p><strong>Key Formula</strong>: E = mc²</p></li>
<li><p><strong>Core Principles</strong>:</p>
<ul>
<li>Light speed is fixed in any frame of reference</li>
<li>No absolute frame of reference exists</li>
<li>Revived Galileo’s ideas after 1700s rejection</li>
</ul></li>
<li><p>Experiment Details</p>
<ol type="1">
<li><strong>Setup</strong>:
<ul>
<li>Observer watching train</li>
<li>Lightning strikes both ends simultaneously</li>
<li>Train’s midpoint passes observer</li>
</ul></li>
<li><strong>Ground Observer’s Perspective</strong>:
<ul>
<li>Sees lightning strikes as simultaneous</li>
<li>Equal distance from both strikes</li>
</ul></li>
<li><strong>Train Passenger’s Perspective</strong>:
<ul>
<li>Sees front strike before rear strike</li>
<li>Light from rear strike travels further</li>
</ul></li>
<li><strong>Key Insight</strong>: Both perspectives are valid despite contradiction</li>
</ol></li>
</ul>
</section>
</section>
<section id="psychological-aspects-of-perspective" class="level4">
<h4 class="anchored" data-anchor-id="psychological-aspects-of-perspective">Psychological Aspects of Perspective</h4>
<section id="development-of-perspective-taking" class="level5">
<h5 class="anchored" data-anchor-id="development-of-perspective-taking">Development of Perspective-Taking</h5>
<ul>
<li>Not an innate ability</li>
<li>Develops throughout childhood</li>
<li>Two main types:
<ol type="1">
<li><strong>Physical Perspectives</strong>:
<ul>
<li>Understanding different physical viewpoints</li>
<li>Example: Different window views</li>
</ul></li>
<li><strong>Conceptual Perspectives</strong>:
<ul>
<li>Understanding different beliefs/feelings</li>
<li>Impact on interpretation of events</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="limitations-and-challenges" class="level5">
<h5 class="anchored" data-anchor-id="limitations-and-challenges">Limitations and Challenges</h5>
<ol type="1">
<li><strong>Physical Limitations</strong>:
<ul>
<li>Vision quality</li>
<li>Lighting conditions</li>
<li>Observation duration</li>
</ul></li>
<li><strong>Psychological Factors</strong>:
<ul>
<li>Emotional state</li>
<li>Time constraints</li>
<li>Personal circumstances</li>
</ul></li>
<li><strong>Bias Influences</strong>:
<ul>
<li>Ethnic prejudices</li>
<li>Authority relationships</li>
<li>Personal incentives</li>
</ul></li>
</ol>
</section>
</section>
<section id="case-studies" class="level4">
<h4 class="anchored" data-anchor-id="case-studies">Case Studies</h4>
<section id="rashomon-effect" class="level5">
<h5 class="anchored" data-anchor-id="rashomon-effect">Rashomon Effect</h5>
<ul>
<li>Based on Japanese film “Rashomon”</li>
<li><strong>Plot</strong>: Murder in forest with multiple accounts</li>
<li><strong>Witnesses</strong>:
<ul>
<li>Bandit</li>
<li>Samurai (through medium)</li>
<li>Samurai’s wife</li>
<li>Woodcutter</li>
</ul></li>
<li><strong>Key Points</strong>:
<ul>
<li>Each account differs</li>
<li>Influenced by self-interest</li>
<li>No definitive truth revealed</li>
<li>Reflects real-life complexity</li>
</ul></li>
</ul>
</section>
<section id="the-ocean-shores-case-july-4-2000" class="level5">
<h5 class="anchored" data-anchor-id="the-ocean-shores-case-july-4-2000">The Ocean Shores Case (July 4, 2000)</h5>
<ul>
<li><strong>Incident</strong>: Death of Chris Kinison</li>
<li><strong>Defendant</strong>: Minh Duc Hong</li>
<li><strong>Key Elements</strong>:
<ol type="1">
<li>Dozen eyewitnesses</li>
<li>Conflicting testimonies</li>
<li>Physical impossibilities in accounts</li>
<li>Racial bias factors</li>
<li>Result: Hung jury (11-1 for acquittal)</li>
</ol></li>
<li><strong>Aftermath</strong>:
<ul>
<li>Local division on verdict</li>
<li>Police education program implemented</li>
<li>Continuing community disagreement</li>
</ul></li>
</ul>
</section>
</section>
<section id="memory-and-perception" class="level4">
<h4 class="anchored" data-anchor-id="memory-and-perception">Memory and Perception</h4>
<section id="memory-characteristics" class="level5">
<h5 class="anchored" data-anchor-id="memory-characteristics">Memory Characteristics</h5>
<ul>
<li>Not like video recordings</li>
<li>Highly subjective and malleable</li>
<li>Common distortions:
<ol type="1">
<li>Misattribution</li>
<li>Suggestibility</li>
<li>Hindsight bias</li>
<li>Unconscious adjustment</li>
</ol></li>
</ul>
</section>
<section id="improving-perspective" class="level5">
<h5 class="anchored" data-anchor-id="improving-perspective">Improving Perspective</h5>
<ol type="1">
<li><strong>Active Methods</strong>:
<ul>
<li>Notice environmental details</li>
<li>Consider multiple viewpoints</li>
<li>Use thought experiments</li>
</ul></li>
<li><strong>Travel Benefits</strong>:
<ul>
<li>Exposes different customs</li>
<li>Challenges assumptions</li>
<li>Broadens worldview</li>
</ul></li>
</ol>
</section>
</section>
<section id="historical-example-rifaa-at-tahtawis-paris-experience" class="level4">
<h4 class="anchored" data-anchor-id="historical-example-rifaa-at-tahtawis-paris-experience">Historical Example: Rifa’a at-Tahtawi’s Paris Experience</h4>
<section id="background" class="level5">
<h5 class="anchored" data-anchor-id="background">Background</h5>
<ul>
<li>Egyptian imam in 1820s Paris</li>
<li>Wrote “An Imam in Paris”</li>
<li>Five-year stay</li>
</ul>
</section>
<section id="impact" class="level5">
<h5 class="anchored" data-anchor-id="impact">Impact</h5>
<ol type="1">
<li><strong>Personal Growth</strong>:
<ul>
<li>Changed perception of own culture</li>
<li>Gained new teaching approaches</li>
</ul></li>
<li><strong>Cultural Exchange</strong>:
<ul>
<li>Documented French society</li>
<li>Brought knowledge to Egypt</li>
</ul></li>
<li><strong>Legacy</strong>:
<ul>
<li>Influenced Egyptian development</li>
<li>Demonstrated value of perspective-taking</li>
</ul></li>
</ol>
</section>
</section>
<section id="practical-applications" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications">Practical Applications</h4>
<section id="problem-solving-approaches" class="level5">
<h5 class="anchored" data-anchor-id="problem-solving-approaches">Problem-Solving Approaches</h5>
<ol type="1">
<li><strong>Change Vantage Point</strong>:
<ul>
<li>Zoom in for details</li>
<li>Zoom out for context</li>
</ul></li>
<li><strong>Timeline Extension</strong>:
<ul>
<li>Consider short-term impact</li>
<li>Evaluate long-term consequences</li>
</ul></li>
<li><strong>External Perspectives</strong>:
<ul>
<li>Seek peer review</li>
<li>Utilize editors</li>
<li>Get outside opinions</li>
</ul></li>
</ol>
</section>
</section>
<section id="conclusion" class="level4">
<h4 class="anchored" data-anchor-id="conclusion">Conclusion</h4>
<section id="key-takeaways" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways">Key Takeaways</h5>
<ol type="1">
<li><strong>Relativity vs.&nbsp;Relativism</strong>:
<ul>
<li>Perceptions are relative</li>
<li>Not all perspectives equally valid</li>
</ul></li>
<li><strong>Understanding Requirements</strong>:
<ul>
<li>Examine assumptions</li>
<li>Seek diverse viewpoints</li>
<li>Expand reference frames</li>
</ul></li>
<li><strong>Practical Steps</strong>:
<ul>
<li>Ask others for their views</li>
<li>Consider blind spots</li>
<li>Update beliefs based on new information</li>
</ul></li>
</ol>
</section>
<section id="final-quote-descartes" class="level5">
<h5 class="anchored" data-anchor-id="final-quote-descartes">Final Quote (Descartes):</h5>
<blockquote class="blockquote">
<p>“It is good to know something of the customs of various peoples, so as to judge our own more soundly, and so as not to think that everything that is contrary to our ways is ridiculous and against reason, as those who have seen nothing have a habit of doing.”</p>
</blockquote>
</section>
</section>
</section>
<section id="reciprocity" class="level3">
<h3 class="anchored" data-anchor-id="reciprocity">Reciprocity</h3>
<section id="basic-principles" class="level4">
<h4 class="anchored" data-anchor-id="basic-principles">Basic Principles</h4>
<section id="core-definition" class="level5">
<h5 class="anchored" data-anchor-id="core-definition">Core Definition</h5>
<ul>
<li><strong>Reciprocity</strong>: The principle that every action has a corresponding reaction</li>
<li>Based on Newton’s Third Law in physics: “For every action there is an equal and opposite reaction”</li>
<li>Fundamental implications:
<ul>
<li>Actions and reactions occur in pairs</li>
<li>When we act on things, they act on us</li>
<li>The harder we push, the harder the pushback</li>
</ul></li>
</ul>
</section>
<section id="key-applications" class="level5">
<h5 class="anchored" data-anchor-id="key-applications">Key Applications</h5>
<ul>
<li><strong>Win-win relationships</strong> are optimal</li>
<li><strong>Positive initiative</strong> helps put people on your side</li>
<li>Use of <strong>minimal necessary force</strong> is recommended</li>
<li>Shapes corporate policies (e.g., gift acceptance)</li>
<li>Reframes the golden rule: “Do unto others knowing that something will be done unto you”</li>
</ul>
</section>
</section>
<section id="scientific-foundation" class="level4">
<h4 class="anchored" data-anchor-id="scientific-foundation">Scientific Foundation</h4>
<section id="physics-basis" class="level5">
<h5 class="anchored" data-anchor-id="physics-basis">Physics Basis</h5>
<ul>
<li><strong>Newton’s Third Law</strong>: States that for every force exerted by object A on object B, there is an equal but opposite force exerted by object B on object A</li>
<li>Key characteristics:
<ul>
<li>Forces always occur in pairs</li>
<li>Each force pair is of the same type</li>
<li>Impossible for one object to exert force without experiencing reciprocal force</li>
</ul></li>
</ul>
</section>
<section id="practical-examples" class="level5">
<h5 class="anchored" data-anchor-id="practical-examples">Practical Examples</h5>
<ol type="1">
<li><strong>Physical Examples</strong>:
<ul>
<li>Landing after jumping (ground reaction force)</li>
<li>Standing (gravitational force exchange)</li>
<li>Jet propulsion
<ul>
<li>Based on forcing fluid in one direction</li>
<li>Creates opposite force for movement</li>
<li>Must overcome drag and weight</li>
</ul></li>
</ul></li>
<li><strong>Biological Examples</strong>:
<ul>
<li>Octopi and squid movement through water</li>
<li>American football tackles
<ul>
<li>Force applied equals force received</li>
<li>Encourages strategic application of minimal force</li>
<li>Mutual impact creates incentive for controlled force</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="cultural-and-historical-context" class="level4">
<h4 class="anchored" data-anchor-id="cultural-and-historical-context">Cultural and Historical Context</h4>
<section id="linguistic-evidence" class="level5">
<h5 class="anchored" data-anchor-id="linguistic-evidence">Linguistic Evidence</h5>
<ul>
<li>Common expressions indicating reciprocity:
<ul>
<li><strong>Quid pro quo</strong> (Latin: “something for something”)</li>
<li>“Give and take”</li>
<li>“Tit for tat”</li>
<li>“If you scratch my back, I’ll scratch yours”</li>
<li><strong>Do ut des</strong> (Latin: “I give so that you may give”)</li>
</ul></li>
</ul>
</section>
<section id="historical-example-the-eternal-treaty-1250-bce" class="level5">
<h5 class="anchored" data-anchor-id="historical-example-the-eternal-treaty-1250-bce">Historical Example: The Eternal Treaty (1250 BCE)</h5>
<ul>
<li>World’s first known peace treaty</li>
<li>Between Egyptian and Hittite kingdoms</li>
<li>Key aspects:
<ul>
<li>Based on mutual self-interest</li>
<li>Established military alliance</li>
<li>Allowed both parties to focus on other priorities</li>
<li>Demonstrated effectiveness of positive reciprocity</li>
</ul></li>
</ul>
</section>
</section>
<section id="behavioral-aspects" class="level4">
<h4 class="anchored" data-anchor-id="behavioral-aspects">Behavioral Aspects</h4>
<section id="types-of-reciprocity" class="level5">
<h5 class="anchored" data-anchor-id="types-of-reciprocity">Types of Reciprocity</h5>
<ol type="1">
<li><strong>Direct Reciprocity</strong>:
<ul>
<li>I help you, you help me</li>
</ul></li>
<li><strong>Indirect Reciprocity</strong>:
<ul>
<li>Pay-it-forward model</li>
<li>Reputation building</li>
<li>Help others to build positive reputation for future benefit</li>
</ul></li>
</ol>
</section>
<section id="loss-aversion" class="level5">
<h5 class="anchored" data-anchor-id="loss-aversion">Loss Aversion</h5>
<ul>
<li><p><strong>Definition</strong>: Losses have greater psychological impact than equivalent gains</p></li>
<li><p>Key points from Daniel Kahneman:</p>
<blockquote class="blockquote">
<p>“When directly compared or weighted against each other, losses loom larger than gains”</p>
</blockquote>
<ul>
<li>Loss aversion coefficient: 1 to 2.5</li>
<li>People willing to risk $100 for every $250 of potential gains</li>
<li>Evolutionary basis for threat prioritization</li>
</ul></li>
</ul>
</section>
<section id="schadenfreude" class="level5">
<h5 class="anchored" data-anchor-id="schadenfreude">Schadenfreude</h5>
<ul>
<li><strong>Definition</strong>: Satisfaction or delight at another’s misfortune</li>
<li>Three core elements:
<ol type="1">
<li><strong>Aggression</strong>: Satisfaction from out-group misfortune</li>
<li><strong>Rivalry</strong>: Enhanced sense of superiority</li>
<li><strong>Justice</strong>: Satisfaction when perceived wrongdoers face consequences</li>
</ol></li>
<li>Research indicates stronger feelings when misfortune is perceived as deserved</li>
</ul>
</section>
</section>
<section id="case-study-norman-bethune" class="level4">
<h4 class="anchored" data-anchor-id="case-study-norman-bethune">Case Study: Norman Bethune</h4>
<section id="background-and-achievements" class="level5">
<h5 class="anchored" data-anchor-id="background-and-achievements">Background and Achievements</h5>
<ul>
<li>Canadian surgeon</li>
<li>Key contributions:
<ul>
<li>Developed first mobile blood transfusion unit</li>
<li>Provided free medical services</li>
<li>Established free clinics</li>
<li>Created public health education programs</li>
<li>Trained doctors and nurses in China</li>
<li>Modernized Chinese healthcare during wartime</li>
</ul></li>
</ul>
</section>
<section id="legacy-analysis" class="level5">
<h5 class="anchored" data-anchor-id="legacy-analysis">Legacy Analysis</h5>
<ul>
<li>Positive impacts:
<ul>
<li>Saved countless lives</li>
<li>Inspired medical approaches in WWII</li>
<li>Continues to be honored in China</li>
<li>Mandatory learning in Chinese primary schools</li>
</ul></li>
<li>Challenges faced:
<ul>
<li>Died at age 49 from infection</li>
<li>Political views affected historical recognition</li>
<li>Temporary exclusion from Canadian history</li>
</ul></li>
</ul>
</section>
</section>
<section id="practical-applications-1" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications-1">Practical Applications</h4>
<section id="tit-for-tat-strategy" class="level5">
<h5 class="anchored" data-anchor-id="tit-for-tat-strategy">Tit for Tat Strategy</h5>
<ul>
<li><strong>Definition</strong>: Strategy for iterated games based on cooperation or defection</li>
<li>Key principles:
<ul>
<li>Start with cooperation</li>
<li>Mirror opponent’s previous action</li>
<li>Most effective when including forgiveness</li>
<li>Better results in repeated interactions</li>
</ul></li>
</ul>
</section>
<section id="benefits-of-positive-reciprocity" class="level5">
<h5 class="anchored" data-anchor-id="benefits-of-positive-reciprocity">Benefits of Positive Reciprocity</h5>
<ol type="1">
<li><strong>Personal Benefits</strong>:
<ul>
<li>Improved mental health</li>
<li>Better physical health</li>
<li>Higher life satisfaction</li>
<li>Enhanced self-esteem</li>
<li>Reduced depression</li>
<li>Greater happiness</li>
</ul></li>
<li><strong>Social Benefits</strong>:
<ul>
<li>Builds trust</li>
<li>Creates sustainable relationships</li>
<li>Enhances cooperation</li>
<li>Promotes social stability</li>
</ul></li>
</ol>
</section>
<section id="best-practices" class="level5">
<h5 class="anchored" data-anchor-id="best-practices">Best Practices</h5>
<ul>
<li>Go positive and go first</li>
<li>Focus on long-term outcomes</li>
<li>Forgive mistakes</li>
<li>Build win-win relationships</li>
<li>Give without immediate expectation</li>
<li>Be consistent in positive actions</li>
<li>Remember actions have consequences</li>
</ul>
</section>
</section>
<section id="conclusion-1" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-1">Conclusion</h4>
<ul>
<li>Reciprocity shapes all aspects of human interaction</li>
<li>Success comes from deserving it through actions</li>
<li>Small positive changes can transform relationships</li>
<li>Taking initiative in positive actions is more effective than waiting</li>
<li>Actions are part of an interconnected web of effects</li>
</ul>
</section>
</section>
<section id="thermodynamics" class="level3">
<h3 class="anchored" data-anchor-id="thermodynamics">Thermodynamics</h3>
<section id="core-laws-of-thermodynamics" class="level4">
<h4 class="anchored" data-anchor-id="core-laws-of-thermodynamics">Core Laws of Thermodynamics</h4>
<section id="first-law-of-thermodynamics" class="level5">
<h5 class="anchored" data-anchor-id="first-law-of-thermodynamics">First Law of Thermodynamics</h5>
<ul>
<li><strong>Definition</strong>: Energy cannot be created or destroyed; it can only be transferred or changed from one form to another</li>
<li><strong>Key Components</strong>:
<ul>
<li>Known as the law of conservation of energy</li>
<li>Two forms of energy exchange:
<ol type="1">
<li><strong>Heat</strong>: Energy exchange through thermal interaction</li>
<li><strong>Work</strong>: Energy exchange by any process other than heat</li>
</ol></li>
<li>Important note: While work can be completely converted into heat, heat cannot be completely converted into work</li>
</ul></li>
</ul>
</section>
<section id="second-law-of-thermodynamics" class="level5">
<h5 class="anchored" data-anchor-id="second-law-of-thermodynamics">Second Law of Thermodynamics</h5>
<ul>
<li><strong>Definition</strong>: Entropy of an isolated system always increases</li>
<li><strong>Key Concepts</strong>:
<ul>
<li><strong>Entropy</strong>: Measure of disorder; energy unable to be used to do work</li>
<li><strong>Isolated Systems</strong>:
<ul>
<li>Progress toward maximum entropy</li>
<li>Reach thermal equilibrium (no net heat flow between objects)</li>
</ul></li>
<li>The entropy of the universe only increases with time</li>
<li><strong>Practical Implications</strong>:
<ul>
<li>Energy must be expended to create order</li>
<li>Without energy deployment, all things move away from order</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="third-law-of-thermodynamics" class="level5">
<h5 class="anchored" data-anchor-id="third-law-of-thermodynamics">Third Law of Thermodynamics</h5>
<ul>
<li><strong>Definition</strong>: As temperature approaches absolute zero, the entropy of a given system approaches a constant value</li>
</ul>
</section>
<section id="fourth-law-zeroth-law-of-thermodynamics" class="level5">
<h5 class="anchored" data-anchor-id="fourth-law-zeroth-law-of-thermodynamics">Fourth Law (Zeroth Law) of Thermodynamics</h5>
<ul>
<li><strong>Background</strong>: Formulated after first three laws but fundamental to them</li>
<li><strong>Definition</strong>: If two objects are in thermal equilibrium with a third object, they are also in thermal equilibrium with each other</li>
</ul>
</section>
</section>
<section id="physical-applications-and-understanding" class="level4">
<h4 class="anchored" data-anchor-id="physical-applications-and-understanding">Physical Applications and Understanding</h4>
<section id="temperature-and-energy" class="level5">
<h5 class="anchored" data-anchor-id="temperature-and-energy">Temperature and Energy</h5>
<ul>
<li><strong>Temperature Definition</strong>: Average kinetic energy of moving molecules in a gas</li>
<li><strong>Significance</strong>:
<ul>
<li>Affects every chemical process</li>
<li>Influences all physical properties associated with life</li>
<li>Acts as crucial link between energy and time</li>
<li>Determines:
<ul>
<li>Cost of doing business</li>
<li>Speed of task accomplishment</li>
<li>Range of adaptive options available</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="equilibrium-principles" class="level5">
<h5 class="anchored" data-anchor-id="equilibrium-principles">Equilibrium Principles</h5>
<ul>
<li><strong>Basic Concept</strong>: Two systems of different temperatures, when exposed, eventually reach the same temperature</li>
<li><strong>Key Points</strong>:
<ul>
<li>To maintain temperature difference:
<ul>
<li>Requires insulating barrier</li>
<li>Needs constant energy input</li>
</ul></li>
<li>Insulators can slow but not completely stop temperature change</li>
<li>Physical world ultimately moves toward equilibrium</li>
</ul></li>
</ul>
</section>
</section>
<section id="social-applications-of-thermodynamic-principles" class="level4">
<h4 class="anchored" data-anchor-id="social-applications-of-thermodynamic-principles">Social Applications of Thermodynamic Principles</h4>
<section id="cultural-exchange-and-borders" class="level5">
<h5 class="anchored" data-anchor-id="cultural-exchange-and-borders">Cultural Exchange and Borders</h5>
<ul>
<li><p><strong>Historical Examples</strong></p>
<ol type="1">
<li><strong>Hadrian’s Wall</strong>
<ul>
<li><strong>Purpose</strong>:
<ul>
<li><p>Control movement rather than stop it completely</p></li>
<li><p>Part of broader diplomatic strategy</p></li>
<li><p><strong>Key Features</strong>:</p>
<ul>
<li>Not designed to withstand large-scale attacks</li>
<li>Included diplomatic presence</li>
<li>Allowed for:
<ul>
<li>Trade continuation</li>
<li>Information sharing</li>
<li>Maintenance of personal relationships</li>
</ul></li>
</ul></li>
</ul></li>
<li><strong>Roman Strategy</strong>:
<ul>
<li>Focused on controlling interaction rather than preventing it
<ul>
<li>Recognized cost-benefit ratio of improved insulation</li>
<li>Accepted cultural influence while maintaining desired societal function</li>
</ul></li>
</ul></li>
</ul></li>
<li><strong>Great Wall of China</strong>
<ul>
<li><p><strong>Historical Context</strong>:</p>
<ul>
<li><p>2,000+ years of wall construction</p></li>
<li><p>Multiple walls built by different dynasties</p></li>
<li><p><strong>Challenges</strong>:</p>
<ul>
<li>High expense</li>
<li>Maintenance costs</li>
<li>Staffing requirements</li>
<li>Supply line maintenance</li>
<li>Labor issues</li>
</ul></li>
</ul></li>
<li><p><strong>Effectiveness Issues</strong>:</p>
<ul>
<li><p>Porous nature</p>
<ul>
<li><p>Detours possible around strong points</p></li>
<li><p>Guards often accepted bribes</p></li>
<li><p>Cultural mixing still occurred:</p>
<ul>
<li>Ethnic Chinese adopted barbarian practices</li>
<li>Barbarians adopted Chinese customs</li>
</ul>
<blockquote class="blockquote">
<p>“There was not the case that border walls absolutely and immovably separated a culture of rice, silk, and poetry on the one side from a culture of horse milk, pelts, and war on the other.” - Julia Lovell</p>
</blockquote></li>
</ul></li>
</ul></li>
</ul></li>
<li><strong>Berlin Wall</strong>
<ul>
<li><strong>Unique Characteristics</strong>:
<ul>
<li><p>Focused on preventing ideological mixing</p></li>
<li><p>Attempted to stop all transfer between sides</p></li>
<li><p><strong>Historical Context</strong>:</p>
<ul>
<li>Built in 1961 after 2.5 million fled East Germany</li>
<li>Represented 15% population reduction</li>
<li>Most emigrants were young and well-qualified</li>
</ul></li>
<li><p><strong>Design Features</strong>:</p>
<ul>
<li>Multiple layers of complexity</li>
<li>Sealed underground passages</li>
<li>Modified infrastructure to prevent crossing</li>
</ul></li>
</ul></li>
<li><strong>Ultimate Failure</strong>:
<ul>
<li>Never completely effective
<ul>
<li>Undermined communist values</li>
<li>Dismantled in November 1989</li>
</ul></li>
</ul></li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="cultural-equilibrium-principles" class="level5">
<h5 class="anchored" data-anchor-id="cultural-equilibrium-principles">Cultural Equilibrium Principles</h5>
<ul>
<li><p>Modes of Cultural Transfer</p>
<ol type="1">
<li><strong>Radiation</strong>: Ideas spread through media (radio, TV)</li>
<li><strong>Convection</strong>: Exchange programs (teacher-student)</li>
<li><strong>Conduction</strong>: Direct transfer through:
<ul>
<li>Brands</li>
<li>Foreign aid</li>
<li>Cultural mixing</li>
</ul></li>
</ol></li>
<li><p>Barriers to Cultural Exchange</p>
<ul>
<li><strong>Physical Walls</strong>:
<ul>
<li>Serve both physical and psychological purposes</li>
<li>Demarcate contrasts:
<ul>
<li>Us/them</li>
<li>Land ownership</li>
<li>Value systems</li>
<li>Resource allocation</li>
</ul></li>
</ul></li>
<li><strong>Effectiveness Issues</strong>:
<ul>
<li>Difficulty maintaining cultural contrast</li>
<li>Natural tendency toward sharing:
<ul>
<li>Ideas</li>
<li>Customs</li>
<li>Language</li>
</ul></li>
<li>Border regions become areas of exchange and evolution</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="entropy-in-social-systems" class="level4">
<h4 class="anchored" data-anchor-id="entropy-in-social-systems">Entropy in Social Systems</h4>
<section id="order-vs.-disorder" class="level5">
<h5 class="anchored" data-anchor-id="order-vs.-disorder">Order vs.&nbsp;Disorder</h5>
<ul>
<li><strong>Natural State</strong>: Disorder flares up continuously</li>
<li><strong>Social Structures</strong>: Created to combat disorder
<ul>
<li>Laws</li>
<li>Religions</li>
<li>Social norms</li>
<li>Customs</li>
<li>Stories and narratives</li>
</ul></li>
</ul>
</section>
<section id="stories-as-entropy-fighting-tools" class="level5">
<h5 class="anchored" data-anchor-id="stories-as-entropy-fighting-tools">Stories as Entropy-Fighting Tools</h5>
<ul>
<li><p>Fairy Tales</p>
<ul>
<li><strong>Function</strong>:
<ul>
<li>Provide explanations for unexplainable occurrences</li>
<li>Establish common understanding</li>
<li>Combat disorder through systematic order</li>
</ul></li>
<li><strong>Universal Patterns</strong>:
<ul>
<li>Similar stories across cultures</li>
<li>Common structures despite surface differences</li>
</ul></li>
<li><strong>Story Structure</strong> (According to John York):
<ol type="1">
<li>Home is threatened</li>
<li>Protagonist has flaw/problem</li>
<li>Journey for cure/solution</li>
<li>Finding the cure/key</li>
<li>Facing consequences</li>
<li>Confronting metaphorical death</li>
<li>Rebirth with solution</li>
<li>Home saved</li>
</ol></li>
</ul></li>
<li><p>Cross-Cultural Significance</p>
<ul>
<li><strong>Example</strong>: Cinderella Stories
<ul>
<li>Chinese: Ye Shen</li>
<li>French: Cendrillon</li>
<li>Native American (Zuni): Turkey Girl</li>
</ul></li>
<li><strong>Common Elements</strong>:
<ul>
<li>Similar narrative structures</li>
<li>Universal themes</li>
<li>Shared social functions</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="practical-applications-of-thermodynamic-principles" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications-of-thermodynamic-principles">Practical Applications of Thermodynamic Principles</h4>
<section id="individual-level" class="level5">
<h5 class="anchored" data-anchor-id="individual-level">Individual Level</h5>
<ul>
<li><strong>Personal Space Management</strong>:
<ul>
<li>Rooms naturally tend toward disorder</li>
<li>Require energy input for maintenance</li>
</ul></li>
<li><strong>Relationship Dynamics</strong>:
<ul>
<li>Influence from surrounding people</li>
<li>Importance of choosing social connections</li>
</ul></li>
</ul>
</section>
<section id="societal-level" class="level5">
<h5 class="anchored" data-anchor-id="societal-level">Societal Level</h5>
<ul>
<li><strong>Cultural Preservation</strong>:
<ul>
<li>Requires constant energy input</li>
<li>Balance between isolation and exchange</li>
</ul></li>
<li><strong>Social Evolution</strong>:
<ul>
<li>Inevitable movement toward equilibrium</li>
<li>Need for managed cultural exchange</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-universal-implications" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-universal-implications">Conclusion: Universal Implications</h4>
<section id="core-principles" class="level5">
<h5 class="anchored" data-anchor-id="core-principles">Core Principles</h5>
<ul>
<li>Energy conservation and transformation</li>
<li>Inevitable increase in entropy</li>
<li>Necessity of energy for order maintenance</li>
<li>Balance between order and disorder driving progress</li>
</ul>
</section>
<section id="broader-understanding" class="level5">
<h5 class="anchored" data-anchor-id="broader-understanding">Broader Understanding</h5>
<ul>
<li><strong>Interconnectedness</strong> of all systems</li>
<li><strong>Temporary Nature</strong> of order</li>
<li><strong>Continuous Effort</strong> required for maintenance</li>
<li><strong>Universal Application</strong> of thermodynamic principles</li>
</ul>
</section>
</section>
</section>
<section id="inertia" class="level3">
<h3 class="anchored" data-anchor-id="inertia">Inertia</h3>
<section id="fundamental-concepts-of-inertia" class="level4">
<h4 class="anchored" data-anchor-id="fundamental-concepts-of-inertia">Fundamental Concepts of Inertia</h4>
<section id="definition-and-basic-principles" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-basic-principles">Definition and Basic Principles</h5>
<ul>
<li><strong>Inertia</strong>: The resistance a physical object has to a change in its state of motion</li>
<li><strong>Key Quote</strong>: “Nothing happens until something moves.” - Albert Einstein</li>
<li><strong>Core Principle</strong>: Things at rest don’t start moving on their own, and objects in motion tend to stay in motion</li>
</ul>
</section>
<section id="newtons-first-law-of-motion" class="level5">
<h5 class="anchored" data-anchor-id="newtons-first-law-of-motion">Newton’s First Law of Motion</h5>
<ul>
<li><strong>Definition</strong>: “An object at rest stays at rest, and an object in motion stays in motion with the same speed and in the same direction unless acted upon by an unbalanced force”</li>
<li><strong>Key Components</strong>:
<ul>
<li>Objects maintain their state without external forces</li>
<li>Friction is an example of a force that can change an object’s state</li>
<li>Systems naturally resist change</li>
</ul></li>
</ul>
</section>
<section id="galileos-experimental-discovery" class="level5">
<h5 class="anchored" data-anchor-id="galileos-experimental-discovery">Galileo’s Experimental Discovery</h5>
<ul>
<li><strong>Experiment Setup</strong>:
<ul>
<li>Two inclined planes positioned against each other (similar to a skateboard half-pipe)</li>
<li>Ball rolled down one plane</li>
</ul></li>
<li><strong>Observations</strong>:
<ul>
<li>Smoother surfaces resulted in the ball reaching closer to its initial height</li>
<li>Differences in initial and final height attributed to friction</li>
</ul></li>
<li><strong>Significance</strong>: Demonstrated principles of inertia through observable experimentation</li>
</ul>
</section>
<section id="descartes-contribution" class="level5">
<h5 class="anchored" data-anchor-id="descartes-contribution">Descartes’ Contribution</h5>
<ul>
<li><strong>Source</strong>: “Principles of Philosophy”</li>
<li><strong>Key Statement</strong>: “The first law of nature is that each thing, as far as is in its power, always remains in the same state”</li>
<li><strong>Implication</strong>: Once moved, an object continues to move unless acted upon</li>
</ul>
</section>
</section>
<section id="applications-of-inertia-to-human-behavior" class="level4">
<h4 class="anchored" data-anchor-id="applications-of-inertia-to-human-behavior">Applications of Inertia to Human Behavior</h4>
<section id="thinking-patterns-and-habits" class="level5">
<h5 class="anchored" data-anchor-id="thinking-patterns-and-habits">Thinking Patterns and Habits</h5>
<ul>
<li><strong>Key Aspects</strong>:
<ul>
<li>Natural inclination to reject new ideas</li>
<li>Resistance to change requires minimal effort</li>
<li>Change requires force and effort</li>
</ul></li>
<li><strong>Multitasking Impact</strong>:
<ul>
<li>Brain studies show multitasking is a myth</li>
<li>Shifting focus between tasks:
<ul>
<li>Requires more energy</li>
<li>Takes more time than sequential task completion</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="societal-inertia" class="level5">
<h5 class="anchored" data-anchor-id="societal-inertia">Societal Inertia</h5>
<ul>
<li><strong>Examples</strong>:
<ul>
<li>Continued reliance on cars for short commutes</li>
<li>Resistance to implementing public transportation infrastructure</li>
<li>Persistence in maintaining current job situations despite dissatisfaction</li>
<li>Religious beliefs often maintained from childhood</li>
</ul></li>
</ul>
</section>
<section id="product-and-consumer-behavior" class="level5">
<h5 class="anchored" data-anchor-id="product-and-consumer-behavior">Product and Consumer Behavior</h5>
<ul>
<li><strong>Consumer Patterns</strong>:
<ul>
<li>Based primarily on habit rather than conscious thought</li>
<li>Long-term preferences become ingrained</li>
<li>Resistance to change even when better alternatives exist</li>
</ul></li>
<li><strong>Mass and Duration Relationship</strong>:
<ul>
<li>Longer habits have greater “mass”</li>
<li>More effort required to change long-standing habits</li>
<li>Similar principles apply to societies and products</li>
</ul></li>
</ul>
</section>
</section>
<section id="case-studies-in-social-inertia" class="level4">
<h4 class="anchored" data-anchor-id="case-studies-in-social-inertia">Case Studies in Social Inertia</h4>
<section id="lead-usage-through-history" class="level5">
<h5 class="anchored" data-anchor-id="lead-usage-through-history">Lead Usage Through History</h5>
<ul>
<li><strong>Timeline</strong>: 2,000+ years of known toxicity</li>
<li><strong>Historical Warning</strong>: Marcus Vitruvius Pollio warned against lead pipes for water</li>
<li><strong>Applications Despite Warnings</strong>:
<ul>
<li>Makeup</li>
<li>Gasoline</li>
<li>Paint</li>
<li>Manufacturing processes</li>
<li>Wine dilution</li>
<li>Plumbing</li>
<li>Face creams</li>
</ul></li>
<li><strong>Modern Evidence</strong>:
<ul>
<li>1910: Alice Hamilton’s industrial illness survey</li>
<li>1920s: Evidence against leaded fuel</li>
<li>1980s: Finally banned in USA</li>
</ul></li>
<li><strong>Current Status</strong>: Still used in some applications despite known dangers</li>
</ul>
</section>
<section id="absinthe-history" class="level5">
<h5 class="anchored" data-anchor-id="absinthe-history">Absinthe History</h5>
<ul>
<li><strong>Timeline</strong>: Rise and fall within 50 years (1860s-1914)</li>
<li><strong>Composition</strong>:
<ul>
<li>Wormwood</li>
<li>Aniseed</li>
<li>Fennel</li>
<li>Wild marjoram</li>
</ul></li>
<li><strong>Cultural Impact</strong>:
<ul>
<li>Popular aperitif</li>
<li>L’Heure Verte (Green Hour): 5-6 p.m.</li>
</ul></li>
<li><strong>Ban Factors</strong>:
<ul>
<li>1905: Jean Lanfray murder case</li>
<li>1908: Banned in Switzerland</li>
<li>1914: Banned in France</li>
</ul></li>
<li><strong>Modern Understanding</strong>: Later tests showed no exceptional danger compared to other alcohol</li>
</ul>
</section>
<section id="comparison-of-lead-vs.-absinthe" class="level5">
<h5 class="anchored" data-anchor-id="comparison-of-lead-vs.-absinthe">Comparison of Lead vs.&nbsp;Absinthe</h5>
<ul>
<li><strong>Mass Differences</strong>:
<ul>
<li>Lead: Multiple industrial applications</li>
<li>Absinthe: Single recreational purpose</li>
</ul></li>
<li><strong>Integration Level</strong>:
<ul>
<li>Lead: Deeply integrated into manufacturing</li>
<li>Absinthe: Standalone product</li>
</ul></li>
<li><strong>Economic Impact</strong>:
<ul>
<li>Lead: High containment and replacement costs</li>
<li>Absinthe: Limited economic impact</li>
</ul></li>
</ul>
</section>
</section>
<section id="escape-velocity-and-change" class="level4">
<h4 class="anchored" data-anchor-id="escape-velocity-and-change">Escape Velocity and Change</h4>
<section id="physical-concept" class="level5">
<h5 class="anchored" data-anchor-id="physical-concept">Physical Concept</h5>
<ul>
<li><strong>Definition</strong>: Speed needed to break free from planetary gravitational influence</li>
<li><strong>Earth Statistics</strong>: 7 miles per second at surface</li>
<li><strong>Process</strong>:
<ul>
<li>Requires extremely high initial speed</li>
<li>Can slow as distance increases</li>
<li>Converts fuel and kinetic energy to gravitational potential energy</li>
</ul></li>
</ul>
</section>
<section id="application-to-change" class="level5">
<h5 class="anchored" data-anchor-id="application-to-change">Application to Change</h5>
<ul>
<li><strong>Parallel to Activation Energy</strong>:
<ul>
<li>Measures effort needed to overcome resistance</li>
<li>Determines force required for new path establishment</li>
<li>Similar to breaking free from established patterns</li>
</ul></li>
</ul>
</section>
</section>
<section id="the-inertia-of-belief" class="level4">
<h4 class="anchored" data-anchor-id="the-inertia-of-belief">The Inertia of Belief</h4>
<section id="characteristics" class="level5">
<h5 class="anchored" data-anchor-id="characteristics">Characteristics</h5>
<ul>
<li><strong>Quote</strong>: “For the need to think can never be stilled by allegedly definite insights of wise men” - Hannah Arendt</li>
<li><strong>Evolutionary Aspect</strong>:
<ul>
<li>Belief systems have evolutionary inertia</li>
<li>Serves as survival mechanism</li>
<li>Explains resistance to change</li>
</ul></li>
</ul>
</section>
<section id="impact-on-innovation" class="level5">
<h5 class="anchored" data-anchor-id="impact-on-innovation">Impact on Innovation</h5>
<ul>
<li><strong>Historical Pattern</strong>:
<ul>
<li>Initial dismissal of new technologies
<ul>
<li>Radio</li>
<li>Telephone</li>
<li>Cars</li>
<li>Airplanes</li>
<li>Laptop computers</li>
</ul></li>
</ul></li>
<li><strong>Dual Nature</strong>:
<ul>
<li><strong>Negative</strong>: Can blind us to opportunities</li>
<li><strong>Positive</strong>: Helps maintain consistency and perseverance</li>
</ul></li>
</ul>
</section>
</section>
<section id="case-study-lisa-meitner" class="level4">
<h4 class="anchored" data-anchor-id="case-study-lisa-meitner">Case Study: Lisa Meitner</h4>
<section id="background-and-early-career" class="level5">
<h5 class="anchored" data-anchor-id="background-and-early-career">Background and Early Career</h5>
<ul>
<li><strong>Born</strong>: 1878 in Austria</li>
<li><strong>Education</strong>:
<ul>
<li>First woman admitted to University of Vienna’s physics lectures</li>
<li>Second woman to receive Ph.D.&nbsp;in physics there</li>
</ul></li>
<li><strong>Early Career</strong>:
<ul>
<li>1907: Invited to Berlin by Max Planck</li>
<li>Initially worked as unpaid research assistant</li>
<li>Collaborated with Otto Hahn</li>
<li>Discovered protactinium (atomic number 91)</li>
</ul></li>
</ul>
</section>
<section id="career-achievements" class="level5">
<h5 class="anchored" data-anchor-id="career-achievements">Career Achievements</h5>
<ul>
<li><strong>Key Accomplishments</strong>:
<ul>
<li>First to observe multiple transitions without radiation emission</li>
<li>Identified non-cosmic positrons with Kurt Philipp</li>
<li>Created physics section at Kaiser Wilhelm Institute</li>
<li>1919: First female professor in Prussia</li>
</ul></li>
<li><strong>Major Discovery</strong>:
<ul>
<li>Explained nuclear fission while in exile</li>
<li>Work led to understanding of nuclear reactions</li>
<li>Nominated 29 times for Nobel Prize (never awarded)</li>
</ul></li>
</ul>
</section>
<section id="legacy-and-impact" class="level5">
<h5 class="anchored" data-anchor-id="legacy-and-impact">Legacy and Impact</h5>
<ul>
<li><strong>Scientific Contributions</strong>:
<ul>
<li>Fundamental work in nuclear physics</li>
<li>Experimental physics breakthroughs</li>
<li>Department leadership</li>
</ul></li>
<li><strong>Personal Impact</strong>:
<ul>
<li>Supported women in sciences</li>
<li>Continued research until age 81</li>
<li>Made lasting friendships globally</li>
</ul></li>
<li><strong>Quote to Female Scientists</strong>: “Remember that science can bring both joy and satisfaction to your life”</li>
</ul>
</section>
</section>
<section id="practical-applications-and-conclusions" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications-and-conclusions">Practical Applications and Conclusions</h4>
<section id="understanding-change" class="level5">
<h5 class="anchored" data-anchor-id="understanding-change">Understanding Change</h5>
<ul>
<li><strong>Key Principles</strong>:
<ul>
<li>Resistance is natural</li>
<li>Sustained force needed for momentum</li>
<li>Small steps more effective than large changes</li>
</ul></li>
<li><strong>Examples</strong>:
<ul>
<li>Start with one push-up instead of fifty</li>
<li>Begin flossing with one tooth</li>
</ul></li>
</ul>
</section>
<section id="business-applications" class="level5">
<h5 class="anchored" data-anchor-id="business-applications">Business Applications</h5>
<ul>
<li><strong>Corporate Dynamics</strong>:
<ul>
<li>Large companies struggle with success inertia</li>
<li>Startups benefit from lack of inertia</li>
<li>Flywheel concept: Success breeds success</li>
</ul></li>
<li><strong>Strategy Implications</strong>:
<ul>
<li>Choose direction carefully</li>
<li>Build momentum gradually</li>
<li>Use inertia to advantage</li>
<li>Small wins compound over time</li>
</ul></li>
</ul>
</section>
<section id="final-insights" class="level5">
<h5 class="anchored" data-anchor-id="final-insights">Final Insights</h5>
<ul>
<li><strong>Universal Principles</strong>:
<ul>
<li>Resistance to change is natural</li>
<li>Momentum builds with consistent effort</li>
<li>Direction matters more than initial force</li>
</ul></li>
<li><strong>Success Factors</strong>:
<ul>
<li>Sustained force in right direction</li>
<li>Understanding of natural resistance</li>
<li>Patience with change process</li>
<li>Recognition of compounding effects</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="friction-and-viscosity" class="level3">
<h3 class="anchored" data-anchor-id="friction-and-viscosity">Friction and Viscosity</h3>
<section id="core-concepts-and-definitions" class="level4">
<h4 class="anchored" data-anchor-id="core-concepts-and-definitions">Core Concepts and Definitions</h4>
<section id="fundamental-forces" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-forces">Fundamental Forces</h5>
<ul>
<li><p>Friction</p>
<ul>
<li><strong>Definition</strong>: Force that opposes movement of objects in contact with each other</li>
<li><strong>Key Characteristics</strong>:
<ul>
<li>Must be overcome to achieve movement</li>
<li>Produces heat and sound when objects move</li>
<li>No truly frictionless surfaces exist</li>
<li>All objects experience friction</li>
</ul></li>
</ul></li>
<li><p>Types of Friction</p>
<ol type="1">
<li><strong>Kinetic Friction</strong>:
<ul>
<li>Occurs between objects sliding past each other</li>
<li>Explains why objects in motion eventually stop</li>
<li>Example: Book sliding on table comes to halt</li>
</ul></li>
<li><strong>Static Friction</strong>:
<ul>
<li>Occurs when object is stationary</li>
<li>Prevents initial movement</li>
<li>Requires more force to overcome than kinetic friction</li>
</ul></li>
</ol></li>
<li><p>Viscosity</p>
<ul>
<li><strong>Definition</strong>: Measure of resistance between fluid layers sliding over each other</li>
<li><strong>Key Characteristics</strong>:
<ul>
<li>Higher viscosity = more resistance to movement</li>
<li>More relevant at smaller scales</li>
<li>Less significant for larger objects</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="scale-and-impact" class="level5">
<h5 class="anchored" data-anchor-id="scale-and-impact">Scale and Impact</h5>
<ul>
<li><p>Size-Dependent Effects</p>
<ol type="1">
<li><strong>Small Scale</strong>:
<ul>
<li>Viscosity dominates movement</li>
<li>Example: Plankton struggles against water resistance</li>
<li>Minimal coasting after stopping movement</li>
</ul></li>
<li><strong>Large Scale</strong>:
<ul>
<li>Viscosity less relevant</li>
<li>Example: Whales easily push through water</li>
<li>Can utilize inertia for continued motion</li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="historical-case-study-surface-tension-research" class="level4">
<h4 class="anchored" data-anchor-id="historical-case-study-surface-tension-research">Historical Case Study: Surface Tension Research</h4>
<section id="agnes-pockels-contribution" class="level5">
<h5 class="anchored" data-anchor-id="agnes-pockels-contribution">Agnes Pockels’ Contribution</h5>
<ul>
<li><p>Background Context</p>
<ul>
<li>Late 19th century Germany</li>
<li>Women banned from universities</li>
<li>Worked from home while caring for parents</li>
</ul></li>
<li><p>Achievements</p>
<ul>
<li>Developed <strong>Pockels trough</strong> for measuring surface tension</li>
<li>Published multiple papers without formal education</li>
<li>Established foundational research in surface tension</li>
<li>Work later used by Nobel Prize winners</li>
</ul></li>
<li><p>Historical Significance</p>
<ul>
<li>Succeeded despite high environmental resistance</li>
<li>Demonstrated persistence against societal barriers</li>
<li>Created basis for future surface tension research</li>
</ul></li>
</ul>
</section>
</section>
<section id="information-flow-case-study-chernobyl-disaster" class="level4">
<h4 class="anchored" data-anchor-id="information-flow-case-study-chernobyl-disaster">Information Flow Case Study: Chernobyl Disaster</h4>
<section id="soviet-information-environment" class="level5">
<h5 class="anchored" data-anchor-id="soviet-information-environment">Soviet Information Environment</h5>
<ul>
<li><p>Characteristics</p>
<ul>
<li><strong>High viscosity</strong> for true information</li>
<li><strong>Low viscosity</strong> for false information</li>
<li>Complicated bureaucracy</li>
<li>Censorship and information control</li>
<li>Criminalization of sharing certain information</li>
<li>Domestic surveillance</li>
</ul></li>
<li><p>Pre-Accident Factors</p>
<ul>
<li>Previous nuclear accidents suppressed</li>
<li>Illegal to report on past incidents</li>
<li>No learning from past experiences</li>
<li>Safety standards below Western levels</li>
</ul></li>
</ul>
</section>
<section id="disaster-response" class="level5">
<h5 class="anchored" data-anchor-id="disaster-response">Disaster Response</h5>
<ul>
<li><p>Immediate Actions</p>
<ul>
<li>Information blackout</li>
<li>Cut intercity telephone networks</li>
<li>Prohibited workers from sharing news</li>
<li>Continued public events (May Day parade in Kiev)</li>
<li>Delayed evacuation of affected areas</li>
</ul></li>
<li><p>Consequences</p>
<ol type="1">
<li><strong>Health Impact</strong>:
<ul>
<li>Unnecessary radiation exposure</li>
<li>Preventable poisoning cases</li>
<li>Hospital unprepared for radioactive cases</li>
</ul></li>
<li><strong>Political Impact</strong>:
<ul>
<li>Ukrainian push for independence</li>
<li>Public betrayal and outrage</li>
<li>Undermined Soviet control</li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="organizational-innovation-toyota-case-study" class="level4">
<h4 class="anchored" data-anchor-id="organizational-innovation-toyota-case-study">Organizational Innovation: Toyota Case Study</h4>
<section id="mass-production-vs.-lean-manufacturing" class="level5">
<h5 class="anchored" data-anchor-id="mass-production-vs.-lean-manufacturing">Mass Production vs.&nbsp;Lean Manufacturing</h5>
<ul>
<li><p>Traditional Mass Production (Ford/GM)</p>
<ul>
<li>Workers as interchangeable parts</li>
<li>Large inventory on floor</li>
<li>Problems fixed at end of line</li>
<li>Limited worker empowerment</li>
<li>Specialists handled improvements</li>
</ul></li>
<li><p>Toyota’s Lean System</p>
<ul>
<li>Developed by Taiichi Ohno</li>
<li>Focus on frontline worker environment</li>
<li>Immediate problem-solving</li>
<li>Worker empowerment</li>
<li>Continuous improvement culture</li>
</ul></li>
</ul>
</section>
<section id="toyotas-innovation-environment" class="level5">
<h5 class="anchored" data-anchor-id="toyotas-innovation-environment">Toyota’s Innovation Environment</h5>
<ul>
<li><p>Key Changes</p>
<ol type="1">
<li><strong>Worker Empowerment</strong>:
<ul>
<li>Authority to stop production line</li>
<li>Installation of andon cord system</li>
<li>Responsibility for quality checks</li>
<li>Ability to make minor repairs</li>
</ul></li>
<li><strong>Process Improvements</strong>:
<ul>
<li>Dedicated time for sharing ideas</li>
<li>Team-based problem-solving</li>
<li>Focus on preventing recurring issues</li>
<li>Comprehensive process knowledge</li>
</ul></li>
</ol></li>
<li><p>Results</p>
<ul>
<li>Improved car quality</li>
<li>Enhanced production efficiency</li>
<li>Better worker morale</li>
<li>Reduced end-of-line rework</li>
<li>More effective problem-solving</li>
</ul></li>
</ul>
</section>
</section>
<section id="applications-and-implications" class="level4">
<h4 class="anchored" data-anchor-id="applications-and-implications">Applications and Implications</h4>
<section id="environmental-considerations" class="level5">
<h5 class="anchored" data-anchor-id="environmental-considerations">Environmental Considerations</h5>
<ul>
<li><p>Key Principles</p>
<ol type="1">
<li><strong>Context Matters</strong>:
<ul>
<li>Easy tasks in one environment may be harder in another</li>
<li>Forces vary by operational scale</li>
<li>Solutions must match environmental conditions</li>
</ul></li>
<li><strong>Resistance Management</strong>:
<ul>
<li>Reducing resistance often better than increasing force</li>
<li>Environment shapes behavior and outcomes</li>
<li>Support needed at all organizational levels</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="practical-applications-2" class="level5">
<h5 class="anchored" data-anchor-id="practical-applications-2">Practical Applications</h5>
<ul>
<li><p>Organizational Implementation</p>
<ul>
<li>Design environments to support innovation</li>
<li>Empower those closest to problems</li>
<li>Recognize different forces at different levels</li>
<li>Balance vision with practical execution</li>
<li>Create supportive culture for risk-taking</li>
</ul></li>
<li><p>Strategic Considerations</p>
<ul>
<li>Can use resistance as strategic tool</li>
<li>Consider regulation and bureaucracy as resistance mechanisms</li>
<li>Balance efficiency with necessary friction</li>
<li>Account for scale in planning</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-2" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-2">Conclusion</h4>
<section id="universal-impact" class="level5">
<h5 class="anchored" data-anchor-id="universal-impact">Universal Impact</h5>
<ul>
<li><p>Physical World</p>
<ul>
<li>Friction enables walking, driving, tool use</li>
<li>Viscosity affects fluid movement, lubrication</li>
<li>Both forces necessary but can impede progress</li>
</ul></li>
<li><p>Metaphorical Applications</p>
<ul>
<li>Human relationships affected by interpersonal friction</li>
<li>Organizational success depends on managing resistance</li>
<li>Information flow shaped by environmental viscosity</li>
<li>Innovation requires appropriate environmental conditions</li>
</ul></li>
</ul>
</section>
<section id="key-takeaways-1" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways-1">Key Takeaways</h5>
<ol type="1">
<li><strong>Balance</strong>:
<ul>
<li>Some resistance necessary for function</li>
<li>Excess resistance impedes progress</li>
<li>Different environments require different approaches</li>
</ul></li>
<li><strong>Strategic Approach</strong>:
<ul>
<li>Reduce resistance rather than increase force</li>
<li>Consider scale in planning</li>
<li>Design appropriate environments for desired outcomes</li>
<li>Account for both visible and hidden resistance</li>
</ul></li>
</ol>
</section>
</section>
</section>
<section id="velocity" class="level3">
<h3 class="anchored" data-anchor-id="velocity">Velocity</h3>
<section id="core-concept-speed-vs.-velocity" class="level4">
<h4 class="anchored" data-anchor-id="core-concept-speed-vs.-velocity">Core Concept: Speed vs.&nbsp;Velocity</h4>
<section id="fundamental-definitions" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-definitions">Fundamental Definitions</h5>
<ul>
<li><p><strong>Speed</strong>: Distance traveled over time</p></li>
<li><p><strong>Velocity</strong>: Displacement over time</p>
<ul>
<li><p>Key distinction: Velocity includes both speed and direction</p></li>
<li><blockquote class="blockquote">
<p>“Velocity has both speed and direction. Velocity moves you toward a goal. Speed does not.”</p>
</blockquote></li>
</ul></li>
</ul>
</section>
<section id="progress-vs.-activity" class="level5">
<h5 class="anchored" data-anchor-id="progress-vs.-activity">Progress vs.&nbsp;Activity</h5>
<ul>
<li><strong>Key Principle</strong>: Displacement in a direction matters more than movement alone
<ul>
<li>Example: Running in a circle = high speed but no progress toward destination</li>
</ul></li>
<li><strong>Progress Measurement</strong>:
<ul>
<li>Based on displacement from starting point</li>
<li>Not determined by current speed</li>
<li>Requires both speed and directional awareness</li>
</ul></li>
</ul>
</section>
<section id="constant-velocity" class="level5">
<h5 class="anchored" data-anchor-id="constant-velocity">Constant Velocity</h5>
<ul>
<li><strong>Definition</strong>: Movement at consistent speed in straight line without direction change</li>
<li><strong>Effectiveness</strong>: Usually most efficient way to reach goal</li>
<li><strong>Warning</strong>: Too many directional changes can result in circular movement</li>
</ul>
</section>
</section>
<section id="physics-concepts" class="level4">
<h4 class="anchored" data-anchor-id="physics-concepts">Physics Concepts</h4>
<section id="kinetic-and-potential-energy" class="level5">
<h5 class="anchored" data-anchor-id="kinetic-and-potential-energy">Kinetic and Potential Energy</h5>
<ul>
<li><strong>Kinetic Energy</strong>:
<ul>
<li>Energy from motion</li>
<li>Function of velocity</li>
<li>Relative to other objects’ movement</li>
<li>Example: Ball thrown in air has kinetic energy during flight</li>
</ul></li>
<li><strong>Potential Energy</strong>:
<ul>
<li>Stored energy from position</li>
<li>Independent of other objects’ movement</li>
<li>Types:
<ul>
<li>Gravitational (from height)</li>
<li>Elastic (from stretching)</li>
</ul></li>
<li>Example: Ball at peak height has maximum potential energy</li>
</ul></li>
</ul>
</section>
</section>
<section id="historical-example-napoleons-military-strategy" class="level4">
<h4 class="anchored" data-anchor-id="historical-example-napoleons-military-strategy">Historical Example: Napoleon’s Military Strategy</h4>
<section id="velocity-as-military-principle" class="level5">
<h5 class="anchored" data-anchor-id="velocity-as-military-principle">Velocity as Military Principle</h5>
<ul>
<li><strong>Core Strategy</strong>: Emphasis on speed toward specific goals</li>
<li><strong>Napoleon’s Formula</strong>: Army strength = mass × velocity</li>
<li><strong>Implementation</strong>:
<ul>
<li>Unprecedented troop movement speed</li>
<li>Direction-focused rapid deployment</li>
<li>Speed as part of larger strategic framework</li>
</ul></li>
</ul>
</section>
<section id="italian-campaign-success" class="level5">
<h5 class="anchored" data-anchor-id="italian-campaign-success">Italian Campaign Success</h5>
<ul>
<li><p><strong>Context</strong>:</p>
<ul>
<li>Napoleon’s first independent command</li>
<li>Age: 26</li>
<li>Army: Neither strongest nor best trained</li>
</ul></li>
<li><p><strong>Tactical Advantages</strong>:</p>
<ul>
<li>Superior movement as primary tactic</li>
<li>Maintained constant momentum</li>
<li>Prevented enemy regrouping</li>
<li>Eliminated time for obstacle creation</li>
</ul></li>
<li><p><strong>Notable Achievements</strong>:</p>
<blockquote class="blockquote">
<p>“One division covering nearly 50 miles in 36 hours” “Four days saw his troops fight three battles and cover 56 miles”</p>
</blockquote></li>
</ul>
</section>
<section id="success-factors" class="level5">
<h5 class="anchored" data-anchor-id="success-factors">Success Factors</h5>
<ol type="1">
<li><strong>Preparation</strong>:
<ul>
<li>Extensive study of Italian geography and history</li>
<li>Territory expertise enabling flexibility</li>
<li>Path selection for constant velocity</li>
</ul></li>
<li><strong>Troop Management</strong>:
<ul>
<li>Clear, simple instructions</li>
<li>Personal involvement with troops</li>
<li>Built strong loyalty</li>
<li>Created shared velocity goals</li>
</ul></li>
<li><strong>Resource Management</strong>:
<ul>
<li>Reduced camp followers</li>
<li>Eliminated tents for faster movement</li>
<li>Minimized baggage</li>
<li>Adapted to supply limitations</li>
</ul></li>
</ol>
</section>
<section id="russian-campaign-failure-1812" class="level5">
<h5 class="anchored" data-anchor-id="russian-campaign-failure-1812">Russian Campaign Failure (1812)</h5>
<ul>
<li><strong>Context</strong>:
<ul>
<li>Distance: 1,550 miles (Paris to Moscow)</li>
<li>Largest army assembled at time</li>
</ul></li>
<li><strong>Critical Issues</strong>:
<ul>
<li>Size compromised velocity</li>
<li>Insufficient planning for distance/terrain</li>
<li>Resource depletion</li>
<li>Unable to adapt to conditions</li>
</ul></li>
<li><strong>Casualties</strong> (per von Clausewitz):
<ul>
<li>Lost half army before Smolensk</li>
<li>Arrived Moscow with 90,000 vs.&nbsp;initial 400,000</li>
<li>Causes: Disease, starvation, thirst</li>
</ul></li>
</ul>
</section>
</section>
<section id="modern-applications" class="level4">
<h4 class="anchored" data-anchor-id="modern-applications">Modern Applications</h4>
<section id="personal-goal-achievement" class="level5">
<h5 class="anchored" data-anchor-id="personal-goal-achievement">Personal Goal Achievement</h5>
<ul>
<li><strong>Key Considerations</strong>:
<ul>
<li>Speed not sole factor</li>
<li>Multiple success components</li>
<li>Balance between progress and preservation</li>
</ul></li>
</ul>
</section>
<section id="example-debt-free-goal" class="level5">
<h5 class="anchored" data-anchor-id="example-debt-free-goal">Example: Debt-Free Goal</h5>
<ul>
<li><strong>Target</strong>: Debt-free by age 40</li>
<li><strong>Important Balancing Factors</strong>:
<ul>
<li>Maintaining relationships</li>
<li>Legal compliance</li>
<li>Health preservation</li>
<li>Quality of life post-achievement</li>
</ul></li>
</ul>
</section>
</section>
<section id="case-study-mae-wests-career" class="level4">
<h4 class="anchored" data-anchor-id="case-study-mae-wests-career">Case Study: Mae West’s Career</h4>
<section id="strategic-career-development" class="level5">
<h5 class="anchored" data-anchor-id="strategic-career-development">Strategic Career Development</h5>
<ul>
<li><strong>Core Strategy</strong>: Control over productions</li>
<li><strong>Implementation</strong>:
<ul>
<li>Transition from performer to creator/producer</li>
<li>Selective script choices</li>
<li>Role customization</li>
<li>Focus on writing</li>
</ul></li>
</ul>
</section>
<section id="work-habits" class="level5">
<h5 class="anchored" data-anchor-id="work-habits">Work Habits</h5>
<ul>
<li><strong>Priority Focus</strong>:
<ul>
<li>Limited social engagements</li>
<li>Minimal public appearances</li>
<li>Concentrated on writing/working</li>
<li>Career-focused decisions</li>
</ul></li>
</ul>
</section>
<section id="achievements" class="level5">
<h5 class="anchored" data-anchor-id="achievements">Achievements</h5>
<ul>
<li><strong>1935 Accomplishments</strong>:
<ul>
<li>Highest-earning female globally</li>
<li>Second highest earnings in US (after William Randolph Hearst)</li>
</ul></li>
<li><strong>Creative Control</strong>:
<ul>
<li>Wrote/modified most material</li>
<li>Created signature one-liners</li>
<li>Maintained independence from studio system</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-velocity-principles" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-velocity-principles">Conclusion: Velocity Principles</h4>
<section id="key-takeaways-2" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways-2">Key Takeaways</h5>
<ol type="1">
<li><p><strong>Direction Priority</strong>:</p>
<blockquote class="blockquote">
<p>“Better to go in the right direction slowly than in the wrong direction with speed”</p>
</blockquote></li>
<li><p><strong>Progress Elements</strong>:</p>
<ul>
<li>Force application</li>
<li>Friction reduction</li>
<li>Goal-aligned effort</li>
<li>Non-essential elimination</li>
</ul></li>
<li><p><strong>Balance Requirements</strong>:</p>
<ul>
<li>Direction vs.&nbsp;Speed</li>
<li>Mass vs.&nbsp;Momentum</li>
<li>Progress vs.&nbsp;Resources</li>
</ul></li>
</ol>
</section>
<section id="final-metaphor" class="level5">
<h5 class="anchored" data-anchor-id="final-metaphor">Final Metaphor</h5>
<blockquote class="blockquote">
<p>“A car moving at high speed in circles goes nowhere While a slow and steady walk in a straight line can cross continents”</p>
</blockquote>
</section>
</section>
</section>
<section id="leverage" class="level3">
<h3 class="anchored" data-anchor-id="leverage">Leverage</h3>
<section id="introduction-and-core-concepts" class="level4">
<h4 class="anchored" data-anchor-id="introduction-and-core-concepts">Introduction and Core Concepts</h4>
<section id="definition-and-origins" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-origins">Definition and Origins</h5>
<ul>
<li><strong>Etymology</strong>:
<ul>
<li>Traced to Proto-Indo-European “legua” (light, agile, easy)</li>
<li>Evolved through Latin “levare” (not heavy)</li>
<li>Entered English in 14th century from Old French “levier” (raising something)</li>
</ul></li>
<li><strong>Core Definition</strong>: Making something light by raising it in a specific manner using a lever</li>
<li><strong>Key Principle</strong>: Achieving results significantly greater than the force applied</li>
</ul>
</section>
<section id="physical-levers" class="level5">
<h5 class="anchored" data-anchor-id="physical-levers">Physical Levers</h5>
<ul>
<li><strong>Three Main Types</strong>:
<ol type="1">
<li>Force, fulcrum, weight (e.g., crowbar)</li>
<li>Fulcrum, weight, force (e.g., wheelbarrow)</li>
<li>Fulcrum, force, weight (e.g., baseball bat)
<ul>
<li>Unique characteristic: Requires more energy input but achieves greater distance</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="historical-development" class="level5">
<h5 class="anchored" data-anchor-id="historical-development">Historical Development</h5>
<ul>
<li><p><strong>Ancient Origins</strong>:</p>
<ul>
<li><p>Peripatetic school (Aristotle’s followers) documented early understanding</p></li>
<li><p>From “Mechanica”:</p>
<blockquote class="blockquote">
<p>“For since under the impulse of the same weight the greater radius from the center moves the more rapidly… the ratio of the weight moved to the weight moving it is the inverse ratio of the distances from the center.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Archimedes’ Contribution</strong>:</p>
<ul>
<li>Established leverage concept 2,000+ years ago</li>
<li>Famous statement: Given sufficient lever length and distance, could lift the earth</li>
</ul></li>
<li><p><strong>Historical Applications</strong>:</p>
<ul>
<li>Ancient Egyptians: Used levers to lift stones up to 100 tons for pyramids and obelisks</li>
<li>Common tools incorporating leverage:
<ul>
<li>Scissors</li>
<li>Pliers</li>
<li>Door handles</li>
<li>Wheelbarrows</li>
<li>Fishing rods</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="modern-understanding-of-leverage" class="level4">
<h4 class="anchored" data-anchor-id="modern-understanding-of-leverage">Modern Understanding of Leverage</h4>
<section id="key-principles" class="level5">
<h5 class="anchored" data-anchor-id="key-principles">Key Principles</h5>
<ol type="1">
<li><strong>Amplification of Effort</strong>:
<ul>
<li>Small input can yield outsize outputs</li>
<li>Force multiplier effect</li>
<li>Enables few to influence many</li>
</ul></li>
<li><strong>Technology and Productivity</strong>:
<ul>
<li>Technology leverages individual performance variations</li>
<li>Increases gap between most and least productive people</li>
<li>Example: AI enabling employees to amplify organizational impact</li>
</ul></li>
<li><strong>Value Perception</strong>:
<ul>
<li>Based on shared perceptions</li>
<li>Requires common understanding of value</li>
<li>Social/relational construct</li>
</ul></li>
</ol>
</section>
<section id="applications-in-human-interactions" class="level5">
<h5 class="anchored" data-anchor-id="applications-in-human-interactions">Applications in Human Interactions</h5>
<ul>
<li><p>Negotiation Principles</p>
<ol type="1">
<li><strong>Perception-Based</strong>:
<ul>
<li>Value must be mutually recognized</li>
<li>Dependent on social context</li>
</ul></li>
<li><strong>Dynamic Nature</strong>:
<ul>
<li>Power changes based on circumstances</li>
<li>Not binary (have/don’t have)</li>
<li>Can be used for varying returns (X vs.&nbsp;X,Y,Z)</li>
</ul></li>
</ol></li>
<li><p>Effective Use</p>
<ol type="1">
<li><strong>Key Questions</strong>:
<ul>
<li>How to recognize leverage</li>
<li>When/where to apply it</li>
<li>How to maintain it</li>
</ul></li>
<li><strong>Application Guidelines</strong>:
<ul>
<li>Lever should do most work, not force</li>
<li>Requires conscious thought</li>
<li>Balance between too much/too little pressure</li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="historical-case-study-eleanor-of-aquitaine" class="level4">
<h4 class="anchored" data-anchor-id="historical-case-study-eleanor-of-aquitaine">Historical Case Study: Eleanor of Aquitaine</h4>
<section id="background-and-context" class="level5">
<h5 class="anchored" data-anchor-id="background-and-context">Background and Context</h5>
<ul>
<li><strong>Time Period</strong>: 12th century</li>
<li><strong>Positions</strong>: Queen of France, then England</li>
<li><strong>Significance</strong>: Achieved remarkable power through leverage without military force</li>
</ul>
</section>
<section id="source-of-leverage-aquitaine" class="level5">
<h5 class="anchored" data-anchor-id="source-of-leverage-aquitaine">Source of Leverage: Aquitaine</h5>
<ul>
<li><strong>Characteristics</strong>:
<ul>
<li>Large, prosperous territory</li>
<li>Multiple ports</li>
<li>Rich farmland</li>
<li>Manufacturing center (helmets)</li>
<li>Thriving towns and commerce</li>
</ul></li>
</ul>
</section>
<section id="strategic-use-of-leverage" class="level5">
<h5 class="anchored" data-anchor-id="strategic-use-of-leverage">Strategic Use of Leverage</h5>
<ol type="1">
<li><strong>Marriage Strategies</strong>:
<ul>
<li>First marriage: Louis (King of France)</li>
<li>Second marriage: Henry (future King of England)</li>
<li>Maintained ownership of Aquitaine through both marriages</li>
</ul></li>
<li><strong>Territory Management</strong>:
<ul>
<li>Active presence in region</li>
<li>Developed relationships with nobles, church, people</li>
<li>Supported building projects</li>
<li>Settled local disputes</li>
<li>Mitigated harsh rules of husband/son</li>
</ul></li>
<li><strong>Legacy Protection</strong>:
<ul>
<li>Named son Richard as Duke</li>
<li>Maintained separate identity from English/French crowns</li>
<li>Worked to preserve family lineage</li>
</ul></li>
</ol>
</section>
<section id="key-lessons-from-eleanors-example" class="level5">
<h5 class="anchored" data-anchor-id="key-lessons-from-eleanors-example">Key Lessons from Eleanor’s Example</h5>
<ol type="1">
<li><strong>Value Recognition</strong>:
<ul>
<li>Understood Aquitaine’s worth to monarchs</li>
<li>Clear about leverage potential</li>
</ul></li>
<li><strong>Maintenance of Value</strong>:
<ul>
<li>Invested in infrastructure</li>
<li>Reduced conflicts</li>
<li>Maintained regional prosperity</li>
</ul></li>
<li><strong>Understanding Limitations</strong>:
<ul>
<li>Recognized when leverage could/couldn’t be used</li>
<li>Preserved resources during imprisonment</li>
</ul></li>
</ol>
</section>
</section>
<section id="the-dark-side-of-leverage-coal-company-towns" class="level4">
<h4 class="anchored" data-anchor-id="the-dark-side-of-leverage-coal-company-towns">The Dark Side of Leverage: Coal Company Towns</h4>
<section id="case-study-west-virginia-coal-operations" class="level5">
<h5 class="anchored" data-anchor-id="case-study-west-virginia-coal-operations">Case Study: West Virginia Coal Operations</h5>
<ul>
<li><strong>Time Period</strong>: 20th century</li>
<li><strong>Context</strong>: Development of coal transportation technology</li>
</ul>
</section>
<section id="system-of-control" class="level5">
<h5 class="anchored" data-anchor-id="system-of-control">System of Control</h5>
<ol type="1">
<li><strong>Economic Control</strong>:
<ul>
<li>Company ownership of land</li>
<li>Payment in coal scrip</li>
<li>Company store monopoly</li>
<li>Price manipulation</li>
</ul></li>
<li><strong>Social Control</strong>:
<ul>
<li>No property ownership for workers</li>
<li>Controlled information/media</li>
<li>Mail monitoring</li>
<li>No local political representation</li>
</ul></li>
<li><strong>Political Influence</strong>:
<ul>
<li>Control over elections</li>
<li>Influence over court appointments</li>
<li>Law manipulation</li>
<li>Dual party control</li>
</ul></li>
</ol>
</section>
<section id="resistance-and-counter-leverage" class="level5">
<h5 class="anchored" data-anchor-id="resistance-and-counter-leverage">Resistance and Counter-Leverage</h5>
<ol type="1">
<li><strong>Collective Action</strong>:
<ul>
<li>Strike organization</li>
<li>Union formation</li>
<li>Pooled leverage</li>
</ul></li>
<li><strong>Individual Strategies</strong>:
<ul>
<li>Geographic mobility</li>
<li>Supplemental income sources:
<ul>
<li>Farming</li>
<li>Gardening</li>
<li>Homemade alcohol sales</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="modern-applications-and-implications" class="level4">
<h4 class="anchored" data-anchor-id="modern-applications-and-implications">Modern Applications and Implications</h4>
<section id="personal-development" class="level5">
<h5 class="anchored" data-anchor-id="personal-development">Personal Development</h5>
<ul>
<li><strong>Focus Areas</strong>:
<ul>
<li>Key habits</li>
<li>Critical skills</li>
<li>Important relationships</li>
</ul></li>
<li><strong>Strategy</strong>: Concentrate on critical few vs.&nbsp;trivial many</li>
</ul>
</section>
<section id="technology-leverage" class="level5">
<h5 class="anchored" data-anchor-id="technology-leverage">Technology Leverage</h5>
<ul>
<li><strong>Modern Examples</strong>:
<ul>
<li>AI utilization</li>
<li>Digital tools</li>
<li>Automation</li>
</ul></li>
<li><strong>Impact</strong>: Enables unprecedented competition capabilities</li>
</ul>
</section>
<section id="risk-considerations" class="level5">
<h5 class="anchored" data-anchor-id="risk-considerations">Risk Considerations</h5>
<ol type="1">
<li><strong>Financial Risks</strong>:
<ul>
<li>Over-leveraging dangers</li>
<li>Interest rate sensitivity</li>
<li>Asset value fluctuations</li>
</ul></li>
<li><strong>Social Risks</strong>:
<ul>
<li>Exploitation concerns</li>
<li>Loyalty impacts</li>
<li>Work quality effects</li>
</ul></li>
</ol>
</section>
<section id="best-practices-1" class="level5">
<h5 class="anchored" data-anchor-id="best-practices-1">Best Practices</h5>
<ol type="1">
<li><strong>Strategic Application</strong>:
<ul>
<li>Understand systems</li>
<li>Consider secondary effects</li>
<li>Apply judiciously</li>
</ul></li>
<li><strong>Ethical Considerations</strong>:
<ul>
<li>Avoid exploitation</li>
<li>Balance interests</li>
<li>Maintain sustainability</li>
</ul></li>
</ol>
</section>
</section>
<section id="conclusion-3" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-3">Conclusion</h4>
<ul>
<li>Leverage as force multiplier</li>
<li>Universal principle across domains</li>
<li>Requires wisdom in application</li>
<li>Balance between opportunity and risk</li>
<li>Tool requiring skill and judgment</li>
</ul>
</section>
</section>
</section>
<section id="chemistry" class="level2">
<h2 class="anchored" data-anchor-id="chemistry">Chemistry</h2>
<blockquote class="blockquote">
<p>Science and everyday life cannot and should not be separated. - Rosalind Franklin</p>
</blockquote>
<section id="activation-energy" class="level3">
<h3 class="anchored" data-anchor-id="activation-energy">Activation Energy</h3>
<section id="introduction-to-activation-energy" class="level4">
<h4 class="anchored" data-anchor-id="introduction-to-activation-energy">Introduction to Activation Energy</h4>
<section id="core-concept-1" class="level5">
<h5 class="anchored" data-anchor-id="core-concept-1">Core Concept</h5>
<ul>
<li><strong>Activation Energy</strong>: The minimal amount of energy required to:
<ul>
<li>Initiate a reaction or change</li>
<li>Break apart current state</li>
<li>Transform into something new</li>
<li>Power a reaction through to completion</li>
</ul></li>
</ul>
</section>
<section id="key-principles-1" class="level5">
<h5 class="anchored" data-anchor-id="key-principles-1">Key Principles</h5>
<ul>
<li>Required for all changes, from:
<ul>
<li>Daily activities (getting up)</li>
<li>Major events (revolutions)</li>
</ul></li>
<li>Must be sufficient to:
<ul>
<li>Break existing bonds</li>
<li>Form new connections</li>
<li>Make reverting impossible</li>
</ul></li>
<li>Success indicators:
<ul>
<li>Enough new connections form</li>
<li>Original state cannot be restored</li>
</ul></li>
</ul>
</section>
</section>
<section id="scientific-foundation-1" class="level4">
<h4 class="anchored" data-anchor-id="scientific-foundation-1">Scientific Foundation</h4>
<section id="chemical-basis" class="level5">
<h5 class="anchored" data-anchor-id="chemical-basis">Chemical Basis</h5>
<ul>
<li><strong>Definition</strong>: Minimum energy required to initiate a chemical reaction</li>
<li><strong>Process</strong>:
<ul>
<li>Molecules must collide to react</li>
<li>Temperature increases speed molecular movement</li>
<li>Higher temperatures lead to:
<ul>
<li>Increased molecular velocity</li>
<li>More frequent collisions</li>
<li>Greater chances of reaction</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="the-arrhenius-equation" class="level5">
<h5 class="anchored" data-anchor-id="the-arrhenius-equation">The Arrhenius Equation</h5>
<ul>
<li><p><strong>Origin</strong>: Developed by Svante Arrhenius (1859-1927)</p></li>
<li><p><strong>Purpose</strong>: Calculates relationship between:</p>
<ul>
<li>Temperature</li>
<li>Reaction rates</li>
</ul></li>
<li><p><strong>Key Findings</strong>:</p>
<blockquote class="blockquote">
<p>“Higher temperatures lead to faster reaction rates because the molecules of the reactants involved have more energy.”</p>
</blockquote></li>
<li><p><strong>Historical Context</strong>:</p>
<ul>
<li>First formal codification of intuitive knowledge</li>
<li>People understood temperature-reaction relationship for millennia</li>
<li>Example: Food preservation in cool vs.&nbsp;warm environments</li>
</ul></li>
</ul>
</section>
<section id="practical-applications-3" class="level5">
<h5 class="anchored" data-anchor-id="practical-applications-3">Practical Applications</h5>
<ol type="1">
<li><strong>Match Example</strong>:
<ul>
<li>Gentle rubbing: Insufficient activation energy</li>
<li>Forceful striking: Crosses threshold, initiates reaction</li>
</ul></li>
<li><strong>Daily Life Examples</strong>:
<ul>
<li>Cooking eggs (reforming bonds)</li>
<li>Boiling water (molecular transformation)</li>
<li>Starting fires (sustained reaction)</li>
</ul></li>
</ol>
</section>
</section>
<section id="sustaining-change" class="level4">
<h4 class="anchored" data-anchor-id="sustaining-change">Sustaining Change</h4>
<section id="fire-building-analogy" class="level5">
<h5 class="anchored" data-anchor-id="fire-building-analogy">Fire-Building Analogy</h5>
<ul>
<li><strong>Requirements</strong>:
<ul>
<li>Multiple sheets of paper</li>
<li>Kindling for sustained burning</li>
<li>Proper log arrangement</li>
<li>Multiple ignition points</li>
<li>Monitoring and adjustment</li>
</ul></li>
<li><strong>Lesson</strong>: Change requires:
<ul>
<li>Planning for initial spark</li>
<li>Sustained energy input</li>
<li>Monitoring progress</li>
<li>Adjusting approach</li>
</ul></li>
</ul>
</section>
<section id="breaking-and-forming-bonds" class="level5">
<h5 class="anchored" data-anchor-id="breaking-and-forming-bonds">Breaking and Forming Bonds</h5>
<ul>
<li><strong>Critical Aspects</strong>:
<ol type="1">
<li>New bonds must form</li>
<li>Reaction must complete</li>
<li>Reversion prevention</li>
</ol></li>
<li><strong>Energy Requirements</strong>:
<ul>
<li>Larger changes need more energy</li>
<li>Build-up period counts as activation energy</li>
<li>Often requires more energy than anticipated</li>
</ul></li>
</ul>
</section>
</section>
<section id="case-studies-1" class="level4">
<h4 class="anchored" data-anchor-id="case-studies-1">Case Studies</h4>
<section id="personal-change-addiction-recovery" class="level5">
<h5 class="anchored" data-anchor-id="personal-change-addiction-recovery">Personal Change: Addiction Recovery</h5>
<ul>
<li><strong>Components</strong>:
<ol type="1">
<li>Initial decision</li>
<li>Crisis experiences</li>
<li>Breaking current bonds</li>
<li>Building new structures</li>
<li>Trigger management</li>
</ol></li>
<li><strong>Key Insights</strong>:
<ul>
<li>Previous experiences contribute to activation energy</li>
<li>Structure replacement is crucial</li>
<li>Environment evaluation needed</li>
<li>Trigger resistance requires energy</li>
</ul></li>
</ul>
</section>
<section id="political-change-burkina-faso-revolution" class="level5">
<h5 class="anchored" data-anchor-id="political-change-burkina-faso-revolution">Political Change: Burkina Faso Revolution</h5>
<ul>
<li><p>Thomas Sankara’s Leadership (1983-1987)</p>
<ul>
<li><strong>Background</strong>:
<ul>
<li>Former French colony (Upper Volta)</li>
<li>Independence in 1960</li>
<li>Multiple coups (1960-1982)</li>
</ul></li>
</ul></li>
<li><p>Revolutionary Actions</p>
<ol type="1">
<li><strong>Social Reforms</strong>:
<ul>
<li>Women’s rights advancement</li>
<li>Health clinic construction</li>
<li>Education expansion</li>
<li>Literacy campaign</li>
<li>Mass vaccinations</li>
</ul></li>
<li><strong>Economic Initiatives</strong>:
<ul>
<li>Land redistribution</li>
<li>Agricultural improvement</li>
<li>Self-reliance focus</li>
<li>Foreign aid rejection</li>
</ul></li>
</ol></li>
<li><p>Challenges and Outcomes</p>
<ul>
<li><strong>Implementation Issues</strong>:
<ul>
<li>Opposition repression</li>
<li>Limited compromise</li>
<li>Insufficient public buy-in</li>
</ul></li>
<li><strong>Legacy</strong>:
<ul>
<li>Assassination in 1987</li>
<li>Continued influence in West Africa</li>
<li>Popular cultural impact</li>
<li>Inspirational symbol</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="economic-development-asian-economic-success" class="level5">
<h5 class="anchored" data-anchor-id="economic-development-asian-economic-success">Economic Development: Asian Economic Success</h5>
<ul>
<li><p>Successful Models (Japan, South Korea, Taiwan)</p>
<ol type="1">
<li><strong>Critical Interventions</strong>:
<ul>
<li>Agricultural output maximization</li>
<li>Manufacturing investment direction</li>
<li>Supportive financial policies</li>
</ul></li>
<li><strong>Implementation Strategy</strong>:
<ul>
<li>Land reform programs</li>
<li>Equal land distribution</li>
<li>Government support systems</li>
<li>Export-focused manufacturing</li>
<li>Long-term financial planning</li>
</ul></li>
</ol></li>
<li><p>Contrasting Cases (Indonesia, Philippines, Thailand)</p>
<ul>
<li><strong>Key Differences</strong>:
<ul>
<li>Limited land reform</li>
<li>Domestic market focus</li>
<li>Short-term financial gains</li>
<li>Less sustainable growth</li>
<li>Greater vulnerability to crises</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-4" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-4">Conclusion</h4>
<section id="key-takeaways-3" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways-3">Key Takeaways</h5>
<ol type="1">
<li><strong>Universal Application</strong>:
<ul>
<li>Applies beyond chemistry</li>
<li>Relevant to all change systems</li>
</ul></li>
<li><strong>Essential Components</strong>:
<ul>
<li>Initial energy investment</li>
<li>Sustained effort</li>
<li>Momentum building</li>
</ul></li>
<li><strong>Success Factors</strong>:
<ul>
<li>Adequate initial investment</li>
<li>Long-term planning</li>
<li>Structure replacement</li>
<li>Sustainable new bonds</li>
</ul></li>
</ol>
</section>
<section id="final-insight" class="level5">
<h5 class="anchored" data-anchor-id="final-insight">Final Insight</h5>
<blockquote class="blockquote">
<p>“Activation energy is not just a chemical concept. It’s a principle that applies to any system where change is possible but not automatic.”</p>
</blockquote>
</section>
</section>
</section>
<section id="catalysts" class="level3">
<h3 class="anchored" data-anchor-id="catalysts">Catalysts</h3>
<section id="basic-concepts" class="level4">
<h4 class="anchored" data-anchor-id="basic-concepts">Basic Concepts</h4>
<ul>
<li><strong>Catalysis</strong> fundamentally changes how chemical reactions occur
<ul>
<li>Analogous to civil engineering and the Alps (tunnels vs.&nbsp;mountain passes)</li>
</ul>
<blockquote class="blockquote">
<p>“Catalysis is to chemical reactions what civil engineering is to the Alps” - Lars Öhrström</p>
</blockquote></li>
</ul>
</section>
<section id="core-properties-of-catalysts" class="level4">
<h4 class="anchored" data-anchor-id="core-properties-of-catalysts">Core Properties of Catalysts</h4>
<ul>
<li><strong>Primary Functions</strong>:
<ul>
<li>Accelerate change</li>
<li>Cannot make impossible reactions possible</li>
<li>Significantly reduce time required for change</li>
</ul></li>
<li><strong>Key Characteristics</strong>:
<ul>
<li>Not consumed in reactions</li>
<li>Reusable</li>
<li>Reaction-specific
<ul>
<li>No universal catalyst exists</li>
<li>Different reactions require different catalysts</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="mechanism-of-action" class="level4">
<h4 class="anchored" data-anchor-id="mechanism-of-action">Mechanism of Action</h4>
<ul>
<li>Creates alternative pathways for reactions</li>
<li>Lowers activation energy</li>
<li>Benefits:
<ul>
<li>Faster reactions</li>
<li>Safer processes</li>
<li>More economical in industrial contexts</li>
</ul></li>
</ul>
</section>
<section id="practical-applications-4" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications-4">Practical Applications</h4>
<ul>
<li><strong>Everyday Products</strong> using catalysts:
<ul>
<li>Bread</li>
<li>Paper</li>
<li>Yogurt</li>
<li>Detergent</li>
</ul></li>
<li><strong>Biological Context</strong>:
<ul>
<li>Present in human body</li>
<li>Facilitate various processes:
<ul>
<li>Movement</li>
<li>Digestion</li>
</ul></li>
</ul></li>
<li><strong>Environmental Application</strong>:
<ul>
<li>Catalytic converters in vehicles
<ul>
<li>Convert toxic exhaust fumes</li>
<li>Reduce harmful emissions</li>
<li>Minimize respiratory health impacts</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="historical-development-1" class="level4">
<h4 class="anchored" data-anchor-id="historical-development-1">Historical Development</h4>
<section id="early-history" class="level5">
<h5 class="anchored" data-anchor-id="early-history">Early History</h5>
<ul>
<li><strong>Initial Uses</strong>:
<ul>
<li>Yeast in alcohol production</li>
<li>Soap manufacturing (fats with alkali)</li>
</ul></li>
</ul>
</section>
<section id="scientific-advancement" class="level5">
<h5 class="anchored" data-anchor-id="scientific-advancement">Scientific Advancement</h5>
<ul>
<li><strong>Elizabeth Fulhame</strong> (18th century):
<ul>
<li>Key discoveries:
<ul>
<li>Water’s role in oxidation reactions</li>
<li>Water regeneration in processes</li>
</ul></li>
<li>Historical significance:
<ul>
<li>One of first women in field</li>
<li>Initially faced peer rejection</li>
<li>Later vindicated</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="modern-development" class="level5">
<h5 class="anchored" data-anchor-id="modern-development">Modern Development</h5>
<ul>
<li><strong>Key Figures</strong>:
<ul>
<li>Jons Jacob Berzelius: Coined term “catalysis”</li>
<li>Wilhelm Ostwald: Defined catalysts as reaction accelerators</li>
</ul></li>
<li><strong>Industrial Revolution Impact</strong>:
<ul>
<li>Increased patent filings</li>
<li>Financial incentives drove research</li>
<li>Rapid technological advancement</li>
</ul></li>
</ul>
</section>
</section>
<section id="social-catalysts" class="level4">
<h4 class="anchored" data-anchor-id="social-catalysts">Social Catalysts</h4>
<section id="the-printing-press" class="level5">
<h5 class="anchored" data-anchor-id="the-printing-press">The Printing Press</h5>
<ul>
<li><strong>Historical Impact</strong>:
<ul>
<li>Acted as catalyst for knowledge dissemination</li>
<li>Lowered “activation energy” for learning</li>
</ul></li>
<li><strong>Pre-Printing Press Challenges</strong>:
<ul>
<li>Limited book access</li>
<li>Manual copying errors</li>
<li>High costs</li>
<li>Time-intensive scholar travel</li>
</ul></li>
</ul>
</section>
<section id="the-black-death" class="level5">
<h5 class="anchored" data-anchor-id="the-black-death">The Black Death</h5>
<ul>
<li><strong>Timeline</strong>: Peaked in 14th century</li>
<li><strong>Spread Mechanism</strong>:
<ul>
<li>Rats carried infected fleas</li>
<li>Trade routes facilitated spread</li>
</ul></li>
<li><strong>Societal Changes</strong>:
<ol type="1">
<li><strong>Economic Impact</strong>:
<ul>
<li>Labor shortage increased wages</li>
<li>Reduced land prices</li>
<li>Improved social mobility</li>
<li>New industries emerged</li>
</ul></li>
<li><strong>Religious Impact</strong>:
<ul>
<li>Weakened church authority</li>
<li>Led to Renaissance</li>
<li>Cultural advancement</li>
</ul></li>
<li><strong>Social Changes</strong>:
<ul>
<li>Women entered workforce</li>
<li>Later marriage ages</li>
<li>More equal society structure</li>
</ul></li>
<li><strong>Medical Advancement</strong>:
<ul>
<li>Moved away from humoral theory</li>
<li>Observation-based research</li>
</ul></li>
</ol></li>
</ul>
<blockquote class="blockquote">
<p>Quote from Peter Frankopan (The Silk Roads): “despite the horror it caused, the plague turned out to be the catalyst for social and economic change that was so profound that, far from marking the death of Europe, it served as its making.”</p>
</blockquote>
</section>
</section>
<section id="modern-applications-1" class="level4">
<h4 class="anchored" data-anchor-id="modern-applications-1">Modern Applications</h4>
<section id="personal-catalysts" class="level5">
<h5 class="anchored" data-anchor-id="personal-catalysts">Personal Catalysts</h5>
<ul>
<li>Life events triggering change:
<ul>
<li>Health concerns</li>
<li>Career setbacks</li>
<li>Significant birthdays</li>
<li>Personal challenges</li>
</ul></li>
</ul>
</section>
<section id="autocatalysis" class="level5">
<h5 class="anchored" data-anchor-id="autocatalysis">Autocatalysis</h5>
<ul>
<li><strong>Definition</strong>: Self-sustaining reactions where outputs become catalysts</li>
<li><strong>Characteristics</strong>:
<ul>
<li>Self-reinforcing</li>
<li>Time-limited but powerful</li>
<li>Can be positive or negative</li>
</ul></li>
<li><strong>Examples</strong>:
<ul>
<li>Chemical dependencies (negative)</li>
<li>Good sleep habits (positive)</li>
</ul></li>
</ul>
</section>
<section id="cultural-evolution" class="level5">
<h5 class="anchored" data-anchor-id="cultural-evolution">Cultural Evolution</h5>
<ul>
<li><strong>Case Study</strong>: Louis XV’s Impact on Home Design
<ul>
<li>Transformed Versailles:
<ul>
<li>Added private spaces</li>
<li>Introduced comfortable furniture</li>
<li>Installed indoor plumbing</li>
</ul></li>
<li>Broader Impact:
<ul>
<li>Made comfort socially acceptable</li>
<li>Created market accessibility</li>
<li>Influenced modern home design</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-5" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-5">Conclusion</h4>
<ul>
<li>Catalysts as universal change agents:
<ul>
<li>Chemical processes</li>
<li>Social change</li>
<li>Personal development</li>
</ul></li>
<li>Role in acceleration:
<ul>
<li>Reduce time for change</li>
<li>Enable previously unlikely changes</li>
</ul></li>
<li>Broader applications:
<ul>
<li>Business innovation</li>
<li>Personal growth</li>
<li>Social transformation</li>
</ul></li>
</ul>
</section>
</section>
<section id="alloying" class="level3">
<h3 class="anchored" data-anchor-id="alloying">Alloying</h3>
<section id="core-concept-and-definition" class="level4">
<h4 class="anchored" data-anchor-id="core-concept-and-definition">Core Concept and Definition</h4>
<section id="basic-definition" class="level5">
<h5 class="anchored" data-anchor-id="basic-definition">Basic Definition</h5>
<ul>
<li><strong>Alloying</strong>: The process of combining components in specific combinations to produce a substance with enhanced capabilities</li>
<li><strong>Alloy</strong>: A mixture (solution or compound) of:
<ul>
<li>Two or more metals, or</li>
<li>A metal and a non-metal</li>
</ul></li>
</ul>
</section>
<section id="key-characteristics" class="level5">
<h5 class="anchored" data-anchor-id="key-characteristics">Key Characteristics</h5>
<ul>
<li>Produces substances with unique properties including:
<ul>
<li>Greater strength</li>
<li>Anti-corrosion properties</li>
<li>Extended service life</li>
<li>Enhanced general performance</li>
</ul></li>
<li>Results can exceed individual component capabilities</li>
<li>Not all combinations produce better results</li>
<li>Successful alloys can make “1 plus 1 equal 10”</li>
</ul>
</section>
</section>
<section id="historical-significance" class="level4">
<h4 class="anchored" data-anchor-id="historical-significance">Historical Significance</h4>
<section id="bronze-age-developments" class="level5">
<h5 class="anchored" data-anchor-id="bronze-age-developments">Bronze Age Developments</h5>
<ol type="1">
<li><strong>Sumerian Innovation</strong>
<ul>
<li>Created bronze using:
<ul>
<li>90% copper</li>
<li>10% tin</li>
</ul></li>
<li>Benefits:
<ul>
<li>Harder than pure components</li>
<li>More chemically resistant</li>
<li>Led to military advantage</li>
</ul></li>
</ul></li>
<li><strong>Asian Developments</strong>
<ul>
<li>Unique copper mine qualities led to superior:
<ul>
<li>Musical instruments</li>
<li>Mirrors</li>
<li>Tools</li>
<li>Weapons</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="steel-development" class="level5">
<h5 class="anchored" data-anchor-id="steel-development">Steel Development</h5>
<ol type="1">
<li><strong>Basic Composition</strong>
<ul>
<li>Combination of iron and carbon</li>
<li>Properties:
<ul>
<li>Harder than pure iron</li>
<li>Most widely produced metal today</li>
</ul></li>
</ul></li>
<li><strong>Early Challenges</strong>
<ul>
<li>First 4,000 years:
<ul>
<li>Limited understanding of processes</li>
<li>Difficulty in optimization</li>
<li>Varied iron ore compositions</li>
<li>Contaminants (phosphorus and silicon)</li>
<li>Success with one source didn’t guarantee success with another</li>
</ul></li>
</ul></li>
<li><strong>Modern Improvements</strong>
<ul>
<li>Additional elements provide various properties:
<ul>
<li>Magnesium</li>
<li>Nickel</li>
<li>Chromium</li>
</ul></li>
<li>Results in:
<ul>
<li>Stainless properties</li>
<li>Wear resistance</li>
<li>Corrosion resistance</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="applications-beyond-metallurgy" class="level4">
<h4 class="anchored" data-anchor-id="applications-beyond-metallurgy">Applications Beyond Metallurgy</h4>
<section id="medical-applications" class="level5">
<h5 class="anchored" data-anchor-id="medical-applications">Medical Applications</h5>
<ol type="1">
<li><strong>Drug Combinations</strong>
<ul>
<li>Chemotherapy examples:
<ul>
<li>Combining toxic drugs with side-effect reducers</li>
<li>Multiple drugs targeting different pathways</li>
</ul></li>
<li>Benefits:
<ul>
<li>Reduced fatal side effects</li>
<li>Higher tumor destruction rates</li>
<li>Prevented resistance development</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="team-building-and-skills" class="level5">
<h5 class="anchored" data-anchor-id="team-building-and-skills">Team Building and Skills</h5>
<ol type="1">
<li><strong>Individual Development</strong>
<ul>
<li>Combining complementary skills:
<ul>
<li>Work ethic</li>
<li>Reliability</li>
<li>Willingness to learn</li>
</ul></li>
</ul></li>
<li><strong>Team Composition</strong>
<ul>
<li>Need for diverse capabilities:
<ul>
<li>Idea generation</li>
<li>Evaluation skills</li>
<li>Implementation abilities</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="historical-case-study-the-war-of-1812" class="level4">
<h4 class="anchored" data-anchor-id="historical-case-study-the-war-of-1812">Historical Case Study: The War of 1812</h4>
<section id="the-tecumseh-and-brock-alliance" class="level5">
<h5 class="anchored" data-anchor-id="the-tecumseh-and-brock-alliance">The Tecumseh and Brock Alliance</h5>
<ol type="1">
<li><strong>Key Figures</strong>
<ul>
<li><strong>Tecumseh</strong>:
<ul>
<li>Shawnee chief</li>
<li>Leader of Native American confederacy</li>
<li>Goal: Establish native state</li>
</ul></li>
<li><strong>Major General Isaac Brock</strong>:
<ul>
<li>British Army officer</li>
<li>Defender of British interests in Canada</li>
</ul></li>
</ul></li>
<li><strong>Collaborative Success</strong>
<ul>
<li>Combined strengths:
<ul>
<li>Tecumseh: Warriors and territory knowledge</li>
<li>Brock: British military resources</li>
</ul></li>
<li>Result: Bloodless capture of Fort Detroit through:
<ul>
<li>Psychological warfare</li>
<li>Strategic deception</li>
<li>Coordinated efforts</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="historical-impact" class="level5">
<h5 class="anchored" data-anchor-id="historical-impact">Historical Impact</h5>
<ul>
<li>British retained Canadian territory</li>
<li>Native American interests excluded from final treaty</li>
<li>Both leaders died within a year</li>
</ul>
</section>
</section>
<section id="knowledge-as-an-alloy" class="level4">
<h4 class="anchored" data-anchor-id="knowledge-as-an-alloy">Knowledge as an Alloy</h4>
<section id="components-of-knowledge" class="level5">
<h5 class="anchored" data-anchor-id="components-of-knowledge">Components of Knowledge</h5>
<ol type="1">
<li><strong>Aristotle’s Five Components</strong>
<ul>
<li><strong>Episteme</strong>: Scientific knowledge</li>
<li><strong>Techni</strong>: Art/craft knowledge</li>
<li><strong>Phronesis</strong>: Practical knowledge</li>
<li><strong>Nous</strong>: Intuitive apprehension</li>
<li><strong>Sophia</strong>: Wisdom</li>
</ul></li>
<li><strong>Modern Understanding</strong>
<ul>
<li>Theory and experience combination</li>
<li>Multiple sources integration</li>
<li>Practical application in daily life</li>
</ul></li>
</ol>
</section>
<section id="leonardo-da-vinci-case-study" class="level5">
<h5 class="anchored" data-anchor-id="leonardo-da-vinci-case-study">Leonardo da Vinci Case Study</h5>
<ol type="1">
<li><p><strong>Key Characteristics</strong></p>
<ul>
<li>Self-taught</li>
<li>Intense curiosity</li>
<li>Detailed observation skills</li>
<li>Willingness to challenge accepted wisdom</li>
<li>Interdisciplinary approach</li>
</ul></li>
<li><p><strong>Methods</strong></p>
<blockquote class="blockquote">
<p>“Get the Master of Arithmetic to show you how to square a triangle… Ask Benedetto Portinari by what means they walk on the ice in Flanders…”</p>
</blockquote>
<ul>
<li>Combined multiple disciplines</li>
<li>Learned from others’ expertise</li>
<li>Balanced experience with theory</li>
<li>Developed empirical approach</li>
</ul></li>
<li><p><strong>Historical Context</strong></p>
<ul>
<li>15th century Florence</li>
<li>Environment of interdisciplinary thinking</li>
<li>Examples of collaboration:
<ul>
<li>Silk makers with gold beaters</li>
<li>Architects with artists</li>
<li>Merchants becoming financiers</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="knowledge-development" class="level5">
<h5 class="anchored" data-anchor-id="knowledge-development">Knowledge Development</h5>
<ul>
<li>Importance of environment</li>
<li>Role of communication</li>
<li>Value of imagination</li>
<li>Balance of:
<ul>
<li>Experience</li>
<li>Theory</li>
<li>Curiosity</li>
<li>Imagination</li>
<li>Knowledge sharing</li>
</ul></li>
</ul>
</section>
</section>
<section id="practical-applications-5" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications-5">Practical Applications</h4>
<section id="anti-friction-development" class="level5">
<h5 class="anchored" data-anchor-id="anti-friction-development">Anti-Friction Development</h5>
<ul>
<li>Leonardo’s formula:
<ul>
<li>3 parts copper</li>
<li>7 parts tin</li>
</ul></li>
<li>Predated official credit:
<ul>
<li>Usually attributed to Isaac Babbitt (1839)</li>
<li>Leonardo was approximately 300 years ahead</li>
</ul></li>
</ul>
</section>
<section id="modern-applications-2" class="level5">
<h5 class="anchored" data-anchor-id="modern-applications-2">Modern Applications</h5>
<ol type="1">
<li><strong>Physical Properties</strong>
<ul>
<li>Combining:
<ul>
<li>Aluminum lightness with steel strength</li>
<li>Chromium corrosion resistance with iron affordability</li>
</ul></li>
</ul></li>
<li><strong>Team Dynamics</strong>
<ul>
<li>Mixing:
<ul>
<li>Different skills</li>
<li>Various perspectives</li>
<li>Diverse personalities</li>
</ul></li>
<li>Results in:
<ul>
<li>Enhanced creativity</li>
<li>Improved adaptability</li>
<li>Greater resilience</li>
</ul></li>
</ul></li>
<li><strong>Individual Development</strong>
<ul>
<li>Valuable combinations:
<ul>
<li>Engineering skills</li>
<li>Clear communication</li>
<li>Empathy</li>
<li>Humility</li>
<li>Resilience</li>
<li>Drive</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="success-factors-1" class="level4">
<h4 class="anchored" data-anchor-id="success-factors-1">Success Factors</h4>
<ul>
<li>Precise proportions</li>
<li>Correct element selection</li>
<li>Balance in combination</li>
<li>Finding optimal ratios</li>
<li>Avoiding:
<ul>
<li>Insufficient quantities</li>
<li>Excess amounts</li>
<li>Brittleness</li>
<li>Instability</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="biology" class="level2">
<h2 class="anchored" data-anchor-id="biology">Biology</h2>
<blockquote class="blockquote">
<p>A totally blind process can by definition lead to anything. It can even lead to vision itself. - Jacques Monod</p>
</blockquote>
<section id="evolution-part-one-natural-selection-and-extinction" class="level3">
<h3 class="anchored" data-anchor-id="evolution-part-one-natural-selection-and-extinction">Evolution Part One: Natural Selection and Extinction</h3>
<section id="core-concepts-and-overview" class="level4">
<h4 class="anchored" data-anchor-id="core-concepts-and-overview">Core Concepts and Overview</h4>
<section id="introduction-1" class="level5">
<h5 class="anchored" data-anchor-id="introduction-1">Introduction</h5>
<ul>
<li><strong>Evolution</strong> serves as a powerful mental model for understanding:
<ul>
<li>Success and failure</li>
<li>Relationship between environment and individual</li>
<li>Necessity of planning for constant change</li>
</ul></li>
</ul>
</section>
<section id="structure-of-content" class="level5">
<h5 class="anchored" data-anchor-id="structure-of-content">Structure of Content</h5>
<ul>
<li>Divided into two main chapters:
<ol type="1">
<li><strong>Evolution Part 1</strong>: Natural selection and extinction</li>
<li><strong>Evolution Part 2</strong>: Adaptation methods for inevitable changes</li>
</ol></li>
</ul>
</section>
</section>
<section id="natural-selection" class="level4">
<h4 class="anchored" data-anchor-id="natural-selection">Natural Selection</h4>
<section id="definition-and-core-elements" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-core-elements">Definition and Core Elements</h5>
<blockquote class="blockquote">
<p>“Natural selection is an incredibly simple process requiring just three simple elements” - Rafe Sagarin</p>
</blockquote>
<ul>
<li>Three key requirements:
<ol type="1">
<li>Variation between individuals</li>
<li>Environmental conditions favoring certain variants</li>
<li>Means to reproduce favored variants</li>
</ol></li>
</ul>
</section>
<section id="mechanism-of-selection" class="level5">
<h5 class="anchored" data-anchor-id="mechanism-of-selection">Mechanism of Selection</h5>
<ul>
<li>Described by by Geerat J. Vermeij as <strong>non-random elimination</strong></li>
<li>Process characteristics:
<ul>
<li>Focuses on immediate advantages, not future benefits</li>
<li>Requires traits to be repeatable</li>
<li>Multiple successful traits can coexist</li>
<li>Traits must be transferable to next generation</li>
</ul></li>
</ul>
</section>
<section id="examples-and-illustrations" class="level5">
<h5 class="anchored" data-anchor-id="examples-and-illustrations">Examples and Illustrations</h5>
<ul>
<li><strong>Zebra Example</strong>:
<ul>
<li>Faster zebras survive lion attacks</li>
<li>Surviving zebras reproduce</li>
<li>Population gradually becomes faster</li>
</ul></li>
<li>Multiple success paths:
<ul>
<li>Better speed</li>
<li>Stronger kick</li>
<li>Enhanced eyesight</li>
</ul></li>
</ul>
</section>
</section>
<section id="extinction" class="level4">
<h4 class="anchored" data-anchor-id="extinction">Extinction</h4>
<section id="definition-and-characteristics" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-characteristics">Definition and Characteristics</h5>
<ul>
<li><strong>Biological extinction</strong>: Occurs when last member of species dies
<ul>
<li>Example: Martha, last passenger pigeon (died 1914)</li>
</ul></li>
<li><strong>Functional extinction</strong>: Can occur earlier due to:
<ul>
<li>Population density below survival threshold (<strong>Alley effects</strong>)</li>
<li>Only captive specimens remaining</li>
</ul></li>
</ul>
</section>
<section id="causes-of-extinction" class="level5">
<h5 class="anchored" data-anchor-id="causes-of-extinction">Causes of Extinction</h5>
<ol type="1">
<li><strong>Competition</strong>:
<ul>
<li>Better-adapted rival species</li>
<li>Resource competition</li>
<li>Introduced alien species</li>
</ul></li>
<li><strong>Environmental Changes</strong>:
<ul>
<li>Climate change</li>
<li>Deforestation</li>
<li>Volcanic eruptions</li>
<li>Other significant disruptions</li>
</ul></li>
</ol>
</section>
<section id="extinction-dynamics" class="level5">
<h5 class="anchored" data-anchor-id="extinction-dynamics">Extinction Dynamics</h5>
<ul>
<li><strong>Complex Interdependencies</strong>:
<ul>
<li>Ecosystems contain non-linear relationships</li>
<li>Chain reactions possible</li>
<li>Examples:
<ul>
<li>Predator extinction affecting prey populations</li>
<li>Prey extinction affecting predator survival</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="species-classification-challenges" class="level5">
<h5 class="anchored" data-anchor-id="species-classification-challenges">Species Classification Challenges</h5>
<ul>
<li>Difficulty in defining distinct species</li>
<li>Estimated 10 million distinct species</li>
<li>Less than 20% catalogued</li>
<li>Many extinct before discovery</li>
</ul>
</section>
</section>
<section id="language-evolution-case-study" class="level4">
<h4 class="anchored" data-anchor-id="language-evolution-case-study">Language Evolution Case Study</h4>
<section id="french-language-evolution" class="level5">
<h5 class="anchored" data-anchor-id="french-language-evolution">French Language Evolution</h5>
<ul>
<li><p>Success Factors</p>
<ol type="1">
<li><p><strong>Adaptability</strong>:</p>
<ul>
<li>Incorporated words from multiple languages:
<ul>
<li>Norse</li>
<li>Gaulish</li>
<li>Frankish</li>
<li>Arabic</li>
<li>Spanish</li>
<li>Italian</li>
</ul></li>
</ul></li>
<li><p><strong>Key Historical Events</strong>:</p>
<blockquote class="blockquote">
<p>“Three main events pushed the language from one phase to the next” - Nadeau and Barlow</p>
</blockquote>
<ul>
<li>Fall of Roman Empire</li>
<li>Conquest of England</li>
<li>Rise of Paris as power center</li>
</ul></li>
<li><p><strong>Standardization</strong>:</p>
<ul>
<li>12th century: Writers eliminated dialectical variations</li>
<li>Established grammar and spelling rules</li>
<li>Adopted Roman characters over Gothic</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="latin-language-case-study" class="level5">
<h5 class="anchored" data-anchor-id="latin-language-case-study">Latin Language Case Study</h5>
<ul>
<li><p>Decline Factors</p>
<ol type="1">
<li><strong>Complexity</strong>:
<ul>
<li>More difficult to learn than derivative languages</li>
<li>Multiple word modifications based on context</li>
</ul></li>
<li><strong>Lack of Central Authority</strong>:
<ul>
<li>No standardization</li>
<li>Evolution into Vulgar Latin</li>
<li>Divergence into different languages</li>
</ul></li>
</ol></li>
<li><p>Current Status</p>
<ul>
<li><strong>Official language</strong>: Vatican City</li>
<li><strong>Usage</strong>:
<ul>
<li>Catholic Church documentation</li>
<li>Academic ceremonies</li>
<li>Technical terminology</li>
<li>Scholarly research</li>
</ul></li>
</ul></li>
<li><p>Legacy</p>
<ul>
<li>Influenced modern languages:
<ul>
<li>Italian</li>
<li>French</li>
<li>Portuguese</li>
<li>Romanian</li>
<li>Spanish</li>
</ul></li>
<li>60% of English words derived from Latin/Greek</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusions-and-applications" class="level4">
<h4 class="anchored" data-anchor-id="conclusions-and-applications">Conclusions and Applications</h4>
<section id="universal-principles" class="level5">
<h5 class="anchored" data-anchor-id="universal-principles">Universal Principles</h5>
<ol type="1">
<li><strong>Adaptation Necessity</strong>:
<ul>
<li>Constant evolution required</li>
<li>No permanent victories</li>
<li>Continuous adaptation needed</li>
</ul></li>
<li><strong>Business Applications</strong>:
<ul>
<li>Companies must navigate changing demands</li>
<li>Stagnation leads to extinction</li>
<li>Innovation crucial for survival</li>
</ul></li>
<li><strong>Personal Implications</strong>:
<ul>
<li>Skills require constant updating</li>
<li>Knowledge must evolve</li>
<li>Adaptation key to long-term success</li>
</ul></li>
</ol>
</section>
</section>
</section>
<section id="evolution-part-two-adaptation-rate-and-the-red-queen-effect" class="level3">
<h3 class="anchored" data-anchor-id="evolution-part-two-adaptation-rate-and-the-red-queen-effect">Evolution Part Two: Adaptation Rate and the Red Queen Effect</h3>
<section id="core-concepts-of-adaptation" class="level4">
<h4 class="anchored" data-anchor-id="core-concepts-of-adaptation">Core Concepts of Adaptation</h4>
<section id="fundamental-principles-1" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-principles-1">Fundamental Principles</h5>
<ul>
<li><strong>Adaptation Definition</strong>:
<ul>
<li>Functions as both noun (useful trait) and verb (process of change)</li>
<li>Starts as genetic variations occurring at right time/place</li>
<li>Only needs to be “good enough,” not optimal</li>
<li>Must be viable at all stages of process</li>
</ul></li>
<li><strong>Key Characteristics</strong>:
<ul>
<li>Based on context and specific environment</li>
<li>Success measured relative to competition</li>
<li>Organisms do only as well as necessary, rather than optimize</li>
<li>Balance between reaction and prediction</li>
<li>Provides ability to respond to wide range of challenges</li>
<li>Not limited to anticipated challenges</li>
</ul></li>
</ul>
</section>
<section id="the-peppered-moth-example" class="level5">
<h5 class="anchored" data-anchor-id="the-peppered-moth-example">The Peppered Moth Example</h5>
<ul>
<li><strong>Historical Context</strong>: Classic example of adaptive change to environmental pressure</li>
<li><strong>Original State</strong>:
<ul>
<li>Moths predominantly light-colored</li>
<li>Dark variants existed but were disadvantaged</li>
<li>Light coloring provided better camouflage in natural environment</li>
</ul></li>
<li><strong>Industrial Revolution Impact</strong>:
<ul>
<li>Environmental change: Soot covered surfaces</li>
<li>Role reversal: Dark variants gained advantage</li>
<li>Light moths became easier targets for predators</li>
<li>Dark moths better camouflaged, produced more offspring</li>
</ul></li>
<li><strong>Modern Development</strong>:
<ul>
<li>Pollution control efforts reducing soot</li>
<li>Light-colored moths making comeback</li>
<li>Demonstrates ongoing nature of adaptation</li>
</ul></li>
</ul>
</section>
</section>
<section id="the-red-queen-effect" class="level4">
<h4 class="anchored" data-anchor-id="the-red-queen-effect">The Red Queen Effect</h4>
<section id="core-concept-2" class="level5">
<h5 class="anchored" data-anchor-id="core-concept-2">Core Concept</h5>
<blockquote class="blockquote">
<p>“Now here, you see, it takes all the running you can do to keep in the same place.”</p>
<ul>
<li>The Red Queen (Lewis Carroll)</li>
</ul>
</blockquote>
<ul>
<li><strong>Origin</strong>:
<ul>
<li>Named by Lee Van Valen in 1973</li>
<li>Based on Lewis Carroll’s Red Queen character</li>
<li>Observed no species protected from extinction</li>
<li>Evolution as continuous process</li>
</ul></li>
</ul>
</section>
<section id="key-principles-2" class="level5">
<h5 class="anchored" data-anchor-id="key-principles-2">Key Principles</h5>
<ul>
<li><strong>Constant Adaptation</strong>:
<ul>
<li>All species must continually respond to environmental pressures</li>
<li>Cannot stop adapting as others continue to evolve</li>
<li>Staying same often means falling behind</li>
<li>Survival requires ongoing adaptation</li>
</ul></li>
<li><strong>Predator-Prey Dynamic</strong>:
<ul>
<li>No conscious choice in biological adaptation</li>
<li>Example: Faster prey selects for faster predators</li>
<li>Constant pressure on both species</li>
<li>Creates ongoing evolutionary arms race</li>
</ul></li>
</ul>
</section>
<section id="applications" class="level5">
<h5 class="anchored" data-anchor-id="applications">Applications</h5>
<ol type="1">
<li><strong>Business Context</strong>:
<ul>
<li>Argument against complacency</li>
<li>Competitors constantly working to improve</li>
<li>Customer needs constantly changing</li>
<li>No plateau of “good enough”</li>
</ul></li>
<li><strong>Human Conflict</strong>:
<ul>
<li>Similar to arms race dynamics</li>
<li>Resource costs can become immense</li>
<li>May reach point where adaptation costs outweigh benefits</li>
<li>Sometimes better to change environment than continue race</li>
</ul></li>
</ol>
</section>
</section>
<section id="vestigial-structures" class="level4">
<h4 class="anchored" data-anchor-id="vestigial-structures">Vestigial Structures</h4>
<section id="definition-and-characteristics-1" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-characteristics-1">Definition and Characteristics</h5>
<ul>
<li><strong>Key Points</strong>:
<ul>
<li>Traits present but no longer functional</li>
<li>May appear in embryonic stage or permanently</li>
<li>Previously served important survival purpose</li>
<li>Show traces of natural selection’s path</li>
</ul></li>
</ul>
</section>
<section id="examples" class="level5">
<h5 class="anchored" data-anchor-id="examples">Examples</h5>
<ul>
<li><strong>Various Species</strong>:
<ul>
<li>Flightless birds: Small, useless wings</li>
<li>Humans: Goosebump reaction to stress/fear</li>
<li>Snakes/whales: Remnants of pelvis</li>
<li>Pigs: Useless raised toes</li>
<li>Moles: Covered, de-evolved eyes</li>
<li>Malaria parasite: Vestigial chloroplast</li>
</ul></li>
</ul>
</section>
<section id="persistence-factors" class="level5">
<h5 class="anchored" data-anchor-id="persistence-factors">Persistence Factors</h5>
<ul>
<li><strong>Reasons for Retention</strong>:
<ul>
<li>No negative impact on survival</li>
<li>Insufficient selective pressure for removal</li>
<li>Complete removal might require unfeasible structural changes</li>
<li>May have undiscovered purposes</li>
<li>Helpful for studying evolution and common ancestry</li>
</ul></li>
</ul>
</section>
</section>
<section id="exaptation" class="level4">
<h4 class="anchored" data-anchor-id="exaptation">Exaptation</h4>
<section id="concept-definition" class="level5">
<h5 class="anchored" data-anchor-id="concept-definition">Concept Definition</h5>
<ul>
<li><strong>Origin</strong>: Term proposed by Stephen Jay Gould and Elizabeth Verba (1982)</li>
<li><strong>Key Principle</strong>: Trait’s current use may not explain historical origin</li>
<li><strong>Core Idea</strong>: Features can be repurposed for new functions</li>
</ul>
</section>
<section id="examples-in-nature" class="level5">
<h5 class="anchored" data-anchor-id="examples-in-nature">Examples in Nature</h5>
<ol type="1">
<li><strong>Feathers</strong>:
<ul>
<li>Original purpose: Insulation/mate attraction</li>
<li>Current use: Flight</li>
<li>Shows how structures can be repurposed</li>
</ul></li>
<li><strong>Panda’s Radial Sesamoid</strong>:
<ul>
<li>Common bone in mammals/reptiles</li>
<li>Uniquely used by pandas for bamboo manipulation</li>
<li>Available for potential adaptation in other species</li>
</ul></li>
</ol>
</section>
<section id="technological-examples" class="level5">
<h5 class="anchored" data-anchor-id="technological-examples">Technological Examples</h5>
<ol type="1">
<li><strong>Self-Playing Piano Technology</strong>:
<ul>
<li>Origin: Banu Musa brothers (Baghdad, ~800 CE)</li>
<li>Evolution: Music boxes → mechanical toys → player pianos</li>
<li>Modern application: Frequency-hopping technology</li>
<li>Current use: Cellular phones, Bluetooth, Wi-Fi</li>
</ul></li>
<li><strong>Commercial Products</strong>:
<ul>
<li><strong>Bubble Wrap</strong>:
<ul>
<li>Original intent: Wallpaper (1957)</li>
<li>Failed attempts: Greenhouse insulation</li>
<li>Successful use: Computer packaging</li>
</ul></li>
<li><strong>Play-Doh</strong>:
<ul>
<li>Original use: Wallpaper cleaner (20 years)</li>
<li>Context change: Decline of coal heating</li>
<li>New application: Children’s toy</li>
<li>Success factor: Product placement on Captain Kangaroo</li>
</ul></li>
<li><strong>Botox</strong>:
<ul>
<li>Origin: Botulism toxin</li>
<li>Initial medical use: Eye disorders (1970s)</li>
<li>Evolution: Treatment for facial/limb spasms</li>
<li>Current application: Cosmetic treatments</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="adaptation-strategies-and-implications" class="level4">
<h4 class="anchored" data-anchor-id="adaptation-strategies-and-implications">Adaptation Strategies and Implications</h4>
<section id="human-context" class="level5">
<h5 class="anchored" data-anchor-id="human-context">Human Context</h5>
<ul>
<li><strong>Complex Challenges</strong>:
<ul>
<li>Multiple simultaneous pressures</li>
<li>Need for balanced response</li>
<li>Risk of burnout from trying to adapt in too many ways</li>
<li>Focus on effective rather than rapid adaptation</li>
</ul></li>
</ul>
</section>
<section id="success-metrics" class="level5">
<h5 class="anchored" data-anchor-id="success-metrics">Success Metrics</h5>
<ul>
<li><strong>Key Considerations</strong>:
<ul>
<li>Must provide benefit</li>
<li>Should improve function</li>
<li>Cannot compromise physical health/sanity</li>
<li>Different definitions of success for different individuals/contexts</li>
</ul></li>
</ul>
</section>
<section id="innovation-principles" class="level5">
<h5 class="anchored" data-anchor-id="innovation-principles">Innovation Principles</h5>
<ol type="1">
<li><strong>Flexibility</strong>:
<ul>
<li>Cannot predict future pressures</li>
<li>Need diverse toolset</li>
<li>Ability to combine tools in various ways</li>
<li>Importance of quick response capability</li>
</ul></li>
<li><strong>Functional Fixedness</strong>:
<ul>
<li>Avoid limiting objects to intended use</li>
<li>Consider potential alternative applications</li>
<li>Measure creativity through ability to envision multiple uses</li>
<li>Both conscious and unconscious adaptation processes</li>
</ul></li>
</ol>
</section>
</section>
<section id="conclusion-6" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-6">Conclusion</h4>
<section id="key-takeaways-4" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways-4">Key Takeaways</h5>
<ul>
<li><strong>Continuous Process</strong>:
<ul>
<li>No permanent lead exists</li>
<li>Must maintain constant adaptation</li>
<li>Complacency leads to decline</li>
<li>Speed of adaptation crucial but not sufficient</li>
</ul></li>
</ul>
</section>
<section id="practical-applications-6" class="level5">
<h5 class="anchored" data-anchor-id="practical-applications-6">Practical Applications</h5>
<ul>
<li><strong>Business Context</strong>:
<ul>
<li>Continuous innovation necessary</li>
<li>Avoid attachment to past success</li>
<li>Focus on future requirements</li>
<li>Maintain flexibility for change</li>
</ul></li>
</ul>
</section>
<section id="final-principles" class="level5">
<h5 class="anchored" data-anchor-id="final-principles">Final Principles</h5>
<ul>
<li><strong>Success Factors</strong>:
<ul>
<li>Flexibility to change</li>
<li>Willingness to let go of past methods</li>
<li>Focus on future requirements</li>
<li>Continuous adaptation capability</li>
</ul></li>
</ul>
</section>
</section>
<section id="supporting-idea-competition" class="level4">
<h4 class="anchored" data-anchor-id="supporting-idea-competition">Supporting Idea: Competition</h4>
<section id="core-concept-and-definition-1" class="level5">
<h5 class="anchored" data-anchor-id="core-concept-and-definition-1">Core Concept and Definition</h5>
<ul>
<li><strong>Competition</strong> is defined as a fundamental driving force in the biological world</li>
<li>Key characteristics:
<ul>
<li>All living organisms compete to survive and reproduce</li>
<li>Involves struggle for finite resources including:
<ul>
<li>Food</li>
<li>Status</li>
<li>Territory</li>
<li>Mates</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="resource-dynamics" class="level5">
<h5 class="anchored" data-anchor-id="resource-dynamics">Resource Dynamics</h5>
<ul>
<li><p>Resource Availability Impact</p>
<ul>
<li><p><strong>Zero-sum nature</strong>:</p>
<blockquote class="blockquote">
<p>The more one individual receives, the less there is for others.</p>
</blockquote></li>
<li><p><strong>Resource scarcity correlation</strong>:</p>
<ul>
<li>Resource availability dictates competition type and intensity</li>
<li>Scarcer resources lead to more aggressive competition</li>
<li>More abundant resources may reduce competition intensity
<ul>
<li>However, abundance typically leads to population growth until competition resumes</li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Competition Consequences</p>
<ul>
<li><strong>Survival implications</strong>:
<ul>
<li>Competition inherently harmful to losing organisms</li>
<li>Species extinction occurs when unable to secure necessary resources</li>
<li>As noted in source: “If a species cannot attain the resources it needs, it will go extinct”</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="types-of-competition" class="level5">
<h5 class="anchored" data-anchor-id="types-of-competition">Types of Competition</h5>
<ul>
<li><p>Classification by Participants</p>
<ol type="1">
<li><p><strong>Intraspecific Competition</strong></p>
<ul>
<li><p>Occurs within same species</p></li>
<li><p>Members compete for identical resources</p></li>
<li><p>Example provided:</p>
<blockquote class="blockquote">
<p>Male zebras engage in vicious fights over females</p>
</blockquote></li>
<li><p>Consequences can be severe:</p>
<ul>
<li>Death of losing individuals possible</li>
<li>Males may kill rivals’ offspring</li>
</ul></li>
</ul></li>
<li><p><strong>Interspecific Competition</strong></p>
<ul>
<li><p>Occurs between different species</p></li>
<li><p>Triggered by:</p>
<ul>
<li>Shared habitat</li>
<li>Common resource needs</li>
</ul></li>
<li><p>Example provided:</p>
<blockquote class="blockquote">
<p>Trees in a forest compete to grow the tallest and get the most sunlight</p>
</blockquote></li>
</ul></li>
</ol></li>
<li><p>Classification by Interaction Method</p>
<ol type="1">
<li><strong>Direct Competition</strong>
<ul>
<li>Involves active confrontation between organisms</li>
<li>Requires physical interaction for resources</li>
</ul></li>
<li><strong>Indirect Competition</strong>
<ul>
<li>No direct confrontation occurs</li>
<li>Resource competition without physical interaction</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="ecological-significance" class="level5">
<h5 class="anchored" data-anchor-id="ecological-significance">Ecological Significance</h5>
<ul>
<li><p><strong>Ecosystem interconnection</strong>:</p>
<ul>
<li>Species actions impact entire ecosystem</li>
<li>Distinction between competition types not always clear</li>
<li>All species engage in both competition types simultaneously</li>
</ul></li>
<li><p><strong>Evolutionary importance</strong>:</p>
<blockquote class="blockquote">
<p>As Darwin recognized, all life is a struggle for survival</p>
</blockquote>
<ul>
<li>Drives natural world diversity</li>
<li>Successful species defined by ability to:
<ul>
<li>Fight for resources</li>
<li>Survive</li>
<li>Reproduce</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="competition-in-human-systems" class="level5">
<h5 class="anchored" data-anchor-id="competition-in-human-systems">Competition in Human Systems</h5>
<ul>
<li><p>Business Applications</p>
<ul>
<li>Competition serves as driving force in human systems</li>
<li><strong>Business context</strong>:
<ul>
<li>Companies compete for market share</li>
<li>Benefits to consumers:
<ul>
<li>Lower prices</li>
<li>Higher quality</li>
</ul></li>
<li><strong>Monopoly prevention</strong>:
<ul>
<li>Monopolies discouraged due to:
<ul>
<li>Potential for abuse</li>
<li>Creation of stagnation</li>
<li>Elimination of consumer choice</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Positive Aspects</p>
<ul>
<li>Forces improvements</li>
<li>Benefits consumers through:
<ul>
<li>Price competition</li>
<li>Quality improvements</li>
<li>Innovation pressure</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="ecosystem" class="level3">
<h3 class="anchored" data-anchor-id="ecosystem">Ecosystem</h3>
<section id="core-concepts-and-definitions-1" class="level4">
<h4 class="anchored" data-anchor-id="core-concepts-and-definitions-1">Core Concepts and Definitions</h4>
<section id="what-is-an-ecosystem" class="level5">
<h5 class="anchored" data-anchor-id="what-is-an-ecosystem">What is an Ecosystem?</h5>
<ul>
<li><strong>Definition</strong>: A community of interacting species and their non-living environment</li>
<li><strong>Key Characteristics</strong>:
<ul>
<li>All components influence system characteristics</li>
<li>Components include:
<ul>
<li>Physical factors (soil, sun, water)</li>
<li>Biological interactions (cooperation, competition)</li>
</ul></li>
<li>No size restrictions:
<ul>
<li>Can range from puddles to oceans</li>
<li>Very few ecosystems are completely closed</li>
</ul></li>
<li>Matter and energy move across ecosystems through:
<ul>
<li>Animal migration</li>
<li>Pollen dispersal</li>
<li>Water transport</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="fundamental-principles-2" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-principles-2">Fundamental Principles</h5>
<ul>
<li><p>Interconnectedness</p>
<ul>
<li><strong>Everything is connected</strong> within the system</li>
<li>Different parts don’t exist in isolation</li>
<li>Interactions are multidirectional and complex</li>
<li>Changes in any component can affect:
<ul>
<li>Individual species fitness</li>
<li>Overall system health</li>
</ul></li>
</ul></li>
<li><p>System Dynamics</p>
<ul>
<li><strong>Sensitivity to Initial Conditions</strong>:
<ul>
<li>Small initial differences can lead to large outcome variations</li>
</ul></li>
<li><strong>Feedback Loops</strong>:
<ul>
<li>System actions affect its own behavior</li>
</ul></li>
<li><strong>Constant Change</strong>:
<ul>
<li>Internal dynamics continuously evolve</li>
<li>Systems adjust to and recover from disturbances</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="key-concepts-in-ecosystem-function" class="level4">
<h4 class="anchored" data-anchor-id="key-concepts-in-ecosystem-function">Key Concepts in Ecosystem Function</h4>
<section id="system-strength-measures" class="level5">
<h5 class="anchored" data-anchor-id="system-strength-measures">System Strength Measures</h5>
<ol type="1">
<li><p>Resistance</p>
<ul>
<li><p><strong>Definition</strong>: Tendency to maintain equilibrium state</p></li>
<li><p>Requires significant disturbance to affect system</p></li>
<li><p>Contrasts with sensitivity</p></li>
</ul></li>
<li><p>Sensitivity</p>
<ul>
<li><p>Systems where weak disturbances have profound effects</p></li>
<li><p>Can still be strong if highly resilient</p></li>
</ul></li>
<li><p>Resilience</p>
<ul>
<li><p>Speed of recovery after disturbance</p></li>
<li><p><strong>Important Note</strong>: Sensitive systems with high resilience can be as strong as highly resistant systems</p></li>
</ul></li>
</ol>
</section>
<section id="keystone-species" class="level5">
<h5 class="anchored" data-anchor-id="keystone-species">Keystone Species</h5>
<ul>
<li><p>Definition and Importance</p>
<ul>
<li><p><strong>Keystone Species</strong>: Organisms crucial for ecosystem survival</p></li>
<li><p>Named by Robert T. Paine</p></li>
<li><p>Analogy: Similar to keystone in arch construction</p>
<blockquote class="blockquote">
<p>“Without the keystone, the arch would collapse. It is a small component, but everything else depends on it.”</p>
</blockquote></li>
</ul></li>
<li><p>Characteristics</p>
<ul>
<li>Often difficult to identify</li>
<li>May be present in low numbers</li>
<li>Impact only visible when numbers drop</li>
<li>Common types:
<ul>
<li>Predators: Control prey population</li>
<li>Herbivores: Maintain plant levels</li>
</ul></li>
</ul></li>
<li><p>Example: Sea Otter Ecosystem</p>
<ul>
<li><strong>Habitat</strong>: Kelp forests</li>
<li><strong>Role</strong>:
<ul>
<li>Eats sea urchins</li>
<li>Controls urchin population</li>
<li>Protects kelp forests</li>
</ul></li>
<li><strong>Impact</strong>:
<ul>
<li>Maintains ecosystem balance</li>
<li>Supports carbon dioxide removal</li>
<li>Affects global climate change</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="the-law-of-the-minimum" class="level5">
<h5 class="anchored" data-anchor-id="the-law-of-the-minimum">The Law of the Minimum</h5>
<ul>
<li><p>Core Concept</p>
<ul>
<li><strong>Definition</strong>: Yield limited by scarcest essential nutrient</li>
<li>Originally formulated by Carl Sprengel (1820s)</li>
<li>Popularized by Justus von Liebig</li>
</ul></li>
<li><p>Key Points</p>
<ul>
<li>Abundance of other nutrients doesn’t compensate for deficiency</li>
<li>Analogous to:
<ul>
<li>Bucket with hole (can’t fill beyond leak point)</li>
<li>Manufacturing bottlenecks</li>
<li>Mathematical multiplication by zero</li>
</ul></li>
</ul></li>
<li><p>Applications Beyond Agriculture</p>
<ul>
<li>Personal productivity (sleep vs.&nbsp;time)</li>
<li>Manufacturing processes</li>
<li>Resource management</li>
</ul></li>
</ul>
</section>
</section>
<section id="practical-applications-and-case-studies" class="level4">
<h4 class="anchored" data-anchor-id="practical-applications-and-case-studies">Practical Applications and Case Studies</h4>
<section id="case-study-china-spain-silver-trade-16th-century" class="level5">
<h5 class="anchored" data-anchor-id="case-study-china-spain-silver-trade-16th-century">Case Study: China-Spain Silver Trade (16th Century)</h5>
<ul>
<li><p>Initial Closed System</p>
<ul>
<li>Chinese government banned foreign trade</li>
<li>Results:
<ul>
<li>Trade continued illegally</li>
<li>Smugglers and pirates dominated</li>
<li>Criminal networks threatened government power</li>
</ul></li>
</ul></li>
<li><p>System Evolution</p>
<ul>
<li><strong>Catalysts for Change</strong>:
<ul>
<li>Currency needs (depleted silver mines)</li>
<li>Economic pressures</li>
<li>European trade opportunities</li>
</ul></li>
</ul></li>
<li><p>Adaptation Examples</p>
<ul>
<li>Development of silk production</li>
<li>Creation of European-style goods</li>
<li>Establishment of Manila trading community</li>
</ul></li>
</ul>
</section>
<section id="modern-application-nfl-team-management" class="level5">
<h5 class="anchored" data-anchor-id="modern-application-nfl-team-management">Modern Application: NFL Team Management</h5>
<ul>
<li><p>Bill Walsh’s Ecosystem Approach (San Francisco 49ers)</p>
<ul>
<li><strong>Timeline</strong>: 1979-1989</li>
<li><strong>Achievement</strong>: Transformed worst team to dynasty</li>
<li><strong>Key Principles</strong>:
<ul>
<li>Unified organizational direction</li>
<li>Every role essential</li>
<li>Culture of mutual expectations</li>
<li>Flexibility in responding to change</li>
</ul></li>
</ul></li>
<li><p>Implementation Strategies</p>
<ol type="1">
<li>Life Skills Programs:
<ul>
<li>Continuing education</li>
<li>Personal/family counseling</li>
<li>Drug counseling</li>
<li>Financial advisory services</li>
</ul></li>
<li>Talent Management:
<ul>
<li>Individual approach to motivation</li>
<li>Focus on potential contributions</li>
<li>Open-minded recruitment</li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="best-practices-and-guidelines" class="level4">
<h4 class="anchored" data-anchor-id="best-practices-and-guidelines">Best Practices and Guidelines</h4>
<section id="managing-ecosystems" class="level5">
<h5 class="anchored" data-anchor-id="managing-ecosystems">Managing Ecosystems</h5>
<ul>
<li><p>Intervention Considerations</p>
<ul>
<li><strong>Natural Management</strong>: Systems often self-regulate effectively</li>
<li><strong>Intervention Bias</strong>: Tendency to act unnecessarily</li>
<li><strong>Example</strong>: Forest Fire Management
<ul>
<li>Natural fires serve ecological purposes:
<ul>
<li>Release nutrients</li>
<li>Clear undergrowth</li>
<li>Remove invasive species</li>
</ul></li>
<li>Suppression can lead to larger, uncontrollable fires</li>
</ul></li>
</ul></li>
<li><p>External Factors</p>
<ul>
<li>System stability depends on environmental conditions</li>
<li>Critical factors include:
<ul>
<li>Temperature ranges</li>
<li>Resource availability</li>
<li>Environmental stability</li>
<li>Economic conditions (for business ecosystems)</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="business-applications-1" class="level5">
<h5 class="anchored" data-anchor-id="business-applications-1">Business Applications</h5>
<ul>
<li><p>Organizational Ecosystem Components</p>
<ul>
<li>Employees across departments</li>
<li>Customers</li>
<li>Competitors</li>
<li>Regulatory bodies</li>
<li>Global trends</li>
</ul></li>
<li><p>Success Factors</p>
<ul>
<li>Recognition of interconnectedness</li>
<li>Understanding of feedback loops</li>
<li>Attention to external conditions</li>
<li>Cultural resilience</li>
<li>Adaptability to change</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-7" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-7">Conclusion</h4>
<section id="key-takeaways-5" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways-5">Key Takeaways</h5>
<ol type="1">
<li><p><strong>Holistic Perspective</strong>:</p>
<ul>
<li>Everything is connected</li>
<li>Individual actions affect entire system</li>
</ul></li>
<li><p><strong>System Characteristics</strong>:</p>
<ul>
<li>Complex interactions</li>
<li>Emergent behaviors</li>
<li>Unpredictable outcomes</li>
</ul></li>
<li><p><strong>Management Approach</strong>:</p>
<ul>
<li>Careful intervention</li>
<li>Understanding of ripple effects</li>
<li>Focus on system health</li>
</ul>
<blockquote class="blockquote">
<p>“First do no harm”</p>
</blockquote></li>
</ol>
</section>
<section id="universal-applications" class="level5">
<h5 class="anchored" data-anchor-id="universal-applications">Universal Applications</h5>
<ul>
<li>Biological systems</li>
<li>Business organizations</li>
<li>Economic structures</li>
<li>Social systems</li>
</ul>
</section>
</section>
</section>
<section id="niches" class="level3">
<h3 class="anchored" data-anchor-id="niches">Niches</h3>
<section id="core-concepts-and-definitions-2" class="level4">
<h4 class="anchored" data-anchor-id="core-concepts-and-definitions-2">Core Concepts and Definitions</h4>
<section id="fundamental-principles-3" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-principles-3">Fundamental Principles</h5>
<ul>
<li><strong>Ecological Niche</strong>: The role a species plays in its ecosystem
<ul>
<li>Includes everything affecting ability to reproduce and survive</li>
<li>Encompasses:
<ul>
<li>Required resources (water, sunlight)</li>
<li>Environmental tolerances (temperature)</li>
<li>Space requirements</li>
<li><strong>Abiotic factors</strong>: Non-living aspects of ecosystem</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="specialist-vs.-generalist-organisms" class="level5">
<h5 class="anchored" data-anchor-id="specialist-vs.-generalist-organisms">Specialist vs.&nbsp;Generalist Organisms</h5>
<ul>
<li><p>Generalist Organisms</p>
<ul>
<li><strong>Definition</strong>: Species with broad niches</li>
<li><strong>Characteristics</strong>:
<ul>
<li>Survive in various environments</li>
<li>Eat different foods</li>
<li>Tolerate diverse conditions</li>
<li>Handle environmental changes well</li>
<li>Maintain large populations</li>
</ul></li>
<li><strong>Examples</strong>:
<ul>
<li>Cockroaches</li>
<li>Rats</li>
<li>Raccoons</li>
<li>Humans</li>
</ul></li>
</ul></li>
<li><p>Specialist Organisms</p>
<ul>
<li><strong>Definition</strong>: Species with distinct, narrow roles</li>
<li><strong>Characteristics</strong>:
<ul>
<li>Survive in specific locations</li>
<li>Require particular foods</li>
<li>More prone to extinction</li>
<li>Harder to maintain large populations</li>
<li>Excel in stable environments</li>
</ul></li>
<li><strong>Examples</strong>:
<ul>
<li>Koalas (eucalyptus diet)</li>
<li>Giant pandas (bamboo diet)</li>
<li>Tiger salamanders (fishless pond breeding)</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="competitive-exclusion-principle" class="level4">
<h4 class="anchored" data-anchor-id="competitive-exclusion-principle">Competitive Exclusion Principle</h4>
<section id="core-concept-3" class="level5">
<h5 class="anchored" data-anchor-id="core-concept-3">Core Concept</h5>
<ul>
<li><strong>Definition</strong>: Perfect competition between two species requiring identical resources in same niche is impossible</li>
<li><strong>First identified</strong>: By Georgy Frantsevich Gause (1934)
<ul>
<li>Demonstrated with bacteria experiment in petri dish</li>
</ul></li>
</ul>
</section>
<section id="key-mechanisms" class="level5">
<h5 class="anchored" data-anchor-id="key-mechanisms">Key Mechanisms</h5>
<ol type="1">
<li><strong>Resource Partitioning</strong>:
<ul>
<li>Species find own niches through specialization</li>
<li>Require different resources to coexist</li>
</ul></li>
<li><strong>Competitive Advantage</strong>:
<ul>
<li>Species with slight advantages eventually dominate</li>
<li>Example: Carnivores competing for same prey
<ul>
<li>Superior speed or camouflage leads to dominance</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="real-world-example-uk-squirrels" class="level5">
<h5 class="anchored" data-anchor-id="real-world-example-uk-squirrels">Real-World Example: UK Squirrels</h5>
<ul>
<li><strong>Historical Context</strong>:
<ul>
<li>Red squirrels: Original UK species (10,000 years)</li>
<li>Grey squirrels: Introduced 1870s</li>
</ul></li>
<li><strong>Current Status</strong>:
<ul>
<li>Red squirrels: ~140,000</li>
<li>Grey squirrels: ~2.5 million</li>
</ul></li>
<li><strong>Competitive Advantages of Grey Squirrels</strong>:
<ul>
<li>Stronger digestive systems</li>
<li>Consume available resources first</li>
<li>Carry virus deadly to red squirrels</li>
<li>Better adapted to environment</li>
</ul></li>
</ul>
</section>
</section>
<section id="convergent-evolution" class="level4">
<h4 class="anchored" data-anchor-id="convergent-evolution">Convergent Evolution</h4>
<section id="definition-and-concept" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-concept">Definition and Concept</h5>
<ul>
<li><strong>Definition</strong>: Unrelated species evolving similar traits</li>
<li><strong>Key Characteristics</strong>:
<ul>
<li>Traits not present in common ancestor</li>
<li>Similar solutions to similar problems</li>
<li>Occurs in niches with same qualities/constraints</li>
</ul></li>
</ul>
</section>
<section id="examples-of-convergence" class="level5">
<h5 class="anchored" data-anchor-id="examples-of-convergence">Examples of Convergence</h5>
<ol type="1">
<li><p><strong>Flight Evolution</strong>:</p>
<ul>
<li>Evolved independently in:
<ul>
<li>Birds</li>
<li>Bats</li>
<li>Dinosaurs</li>
<li>Insects</li>
</ul></li>
<li>Similar wing structures from different origins</li>
</ul></li>
<li><p><strong>Eye Development</strong>:</p>
<ul>
<li><p>Similar structures across species:</p>
<ul>
<li>Squid and spider eyes</li>
<li>Human and octopus eyes</li>
</ul>
<blockquote class="blockquote">
<p>Common ancestor 550 million years ago only had basic eye spot</p>
</blockquote></li>
</ul></li>
<li><p><strong>Echolocation</strong>:</p>
<ul>
<li>Evolved in multiple species:
<ul>
<li>Cetaceans</li>
<li>Bats</li>
<li>Shrews</li>
<li>Tenrecs</li>
<li>Some birds</li>
<li>Possibly hedgehogs</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="business-applications-2" class="level4">
<h4 class="anchored" data-anchor-id="business-applications-2">Business Applications</h4>
<section id="innovation-and-market-niches" class="level5">
<h5 class="anchored" data-anchor-id="innovation-and-market-niches">Innovation and Market Niches</h5>
<ul>
<li><p>Generalist Innovation</p>
<ul>
<li><strong>Characteristics</strong>:
<ul>
<li>Useful for everyone</li>
<li>Creates new territory</li>
<li>Requires quick territory defense</li>
</ul></li>
<li><strong>Examples</strong>:
<ul>
<li>Lightbulb</li>
<li>Telephone</li>
</ul></li>
</ul></li>
<li><p>Specialist Innovation</p>
<ul>
<li><strong>Characteristics</strong>:
<ul>
<li>Caters to smaller niche</li>
<li>Hard to dislodge once established</li>
<li>Limited growth potential</li>
<li>Stable in consistent environments</li>
</ul></li>
<li><strong>Example</strong>: Zildjian Symbols
<ul>
<li>Established 1623</li>
<li>Dominates professional drummer market</li>
<li>No significant competition due to small market size</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="case-study-fax-machine-evolution" class="level5">
<h5 class="anchored" data-anchor-id="case-study-fax-machine-evolution">Case Study: Fax Machine Evolution</h5>
<ul>
<li><p>Historical Development</p>
<ul>
<li><strong>Origin</strong>: 1840s</li>
<li><strong>Early Challenges</strong>:
<ul>
<li>Limited market demand</li>
<li>High costs</li>
<li>Infrastructure requirements</li>
<li>Competition from telegraph</li>
</ul></li>
</ul></li>
<li><p>Successful Niche Strategy</p>
<ol type="1">
<li><strong>Initial Markets</strong>:
<ul>
<li>Newspapers (photo transmission)</li>
<li>Military (precise message copying)</li>
</ul></li>
<li><strong>Market Evolution</strong>:
<ul>
<li>Started in protected niches</li>
<li>Gradually expanded capabilities</li>
<li>Eventually became generalist technology (1980s-90s)</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="case-study-coca-cola-as-generalist" class="level5">
<h5 class="anchored" data-anchor-id="case-study-coca-cola-as-generalist">Case Study: Coca-Cola as Generalist</h5>
<ul>
<li><p>Marketing Evolution</p>
<ol type="1">
<li><strong>Early Strategy</strong> (Late 19th - Early 20th Century):
<ul>
<li>Shifted from medicinal tonic to beverage</li>
<li>Associated with refinement and upper class</li>
<li>Made luxury accessible at 5 cents</li>
</ul></li>
<li><strong>Key Marketing Investments</strong>:
<ul>
<li>1909: $750,000 ($18 million today)</li>
<li>Created lifestyle association</li>
<li>Used celebrity endorsements</li>
<li>Established universal appeal</li>
</ul></li>
<li><strong>Adaptation Strategies</strong>:
<ul>
<li>Depression era: “pause that refreshes”</li>
<li>WWII: International expansion</li>
<li>vs.&nbsp;Pepsi: marketed to all demographics</li>
<li>1963: Largest US ad budget ($53 million)</li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="practical-implications" class="level4">
<h4 class="anchored" data-anchor-id="practical-implications">Practical Implications</h4>
<section id="environmental-influence" class="level5">
<h5 class="anchored" data-anchor-id="environmental-influence">Environmental Influence</h5>
<ul>
<li>Success depends on environment fit</li>
<li>Performance linked to operating conditions</li>
<li>Hiring considerations must account for environment</li>
</ul>
</section>
<section id="strategic-choices" class="level5">
<h5 class="anchored" data-anchor-id="strategic-choices">Strategic Choices</h5>
<ol type="1">
<li><strong>For Organizations</strong>:
<ul>
<li>Choose between specialist or generalist approach</li>
<li>Consider market stability</li>
<li>Evaluate competition levels</li>
<li>Assess adaptation capabilities</li>
</ul></li>
<li><strong>For Individuals</strong>:
<ul>
<li>Understand personal strengths</li>
<li>Consider environmental fit</li>
<li>Evaluate market conditions</li>
<li>Plan for adaptation needs</li>
</ul></li>
</ol>
</section>
<section id="risk-management" class="level5">
<h5 class="anchored" data-anchor-id="risk-management">Risk Management</h5>
<ul>
<li><strong>Specialists</strong>:
<ul>
<li>Lower daily competition</li>
<li>Higher vulnerability to change</li>
<li>Need stable environment</li>
</ul></li>
<li><strong>Generalists</strong>:
<ul>
<li>Higher daily competition</li>
<li>Better adaptation ability</li>
<li>More sustainable in changing environments</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="self-preservation" class="level3">
<h3 class="anchored" data-anchor-id="self-preservation">Self-Preservation</h3>
<section id="core-concepts-and-fundamentals" class="level4">
<h4 class="anchored" data-anchor-id="core-concepts-and-fundamentals">Core Concepts and Fundamentals</h4>
<section id="basic-definition-and-nature" class="level5">
<h5 class="anchored" data-anchor-id="basic-definition-and-nature">Basic Definition and Nature</h5>
<ul>
<li><strong>Self-preservation</strong> is defined as the first law of nature</li>
<li>Key characteristics:
<ul>
<li>Innate behavior in all organisms</li>
<li>Fundamental and useful for protection from harm</li>
<li>Governs much of biological behavior</li>
<li>Serves as reliable human biological motivator</li>
</ul></li>
</ul>
</section>
<section id="survival-instincts" class="level5">
<h5 class="anchored" data-anchor-id="survival-instincts">Survival Instincts</h5>
<ul>
<li><strong>Universal drive</strong>: All humans want to live the best life possible</li>
<li><strong>Individual variation</strong>:
<ul>
<li>No universal definition of a “great life”</li>
<li>Different responses to preservation drives</li>
<li>Can either:
<ul>
<li>Lead to new opportunities through rejection of status quo</li>
<li>Hold back potential through excessive caution</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="biological-mechanisms" class="level4">
<h4 class="anchored" data-anchor-id="biological-mechanisms">Biological Mechanisms</h4>
<section id="reflexes-and-automatic-responses" class="level5">
<h5 class="anchored" data-anchor-id="reflexes-and-automatic-responses">Reflexes and Automatic Responses</h5>
<ol type="1">
<li><strong>Definition</strong>: Involuntary automatic actions in response to stimuli</li>
<li><strong>Examples</strong>:
<ul>
<li>Hot stove response
<ul>
<li>Removes hand before brain processes heat</li>
<li>Protects from serious burns</li>
</ul></li>
<li>Blinking
<ul>
<li>Automatic eyelid closure</li>
<li>Protects against dust and insects</li>
</ul></li>
</ul></li>
<li><strong>Evolutionary significance</strong>:
<ul>
<li>Better reflexes increase survival chances</li>
<li>Natural selection favors these systems</li>
</ul></li>
</ol>
</section>
<section id="fight-flight-or-freeze-response" class="level5">
<h5 class="anchored" data-anchor-id="fight-flight-or-freeze-response">Fight, Flight, or Freeze Response</h5>
<ol type="1">
<li><strong>Complex mechanism</strong> involving:
<ul>
<li>Sympathetic nervous system mobilization</li>
<li>Physical changes:
<ul>
<li>Increased blood sugar levels</li>
<li>Blood vessel constriction</li>
<li>Elevated heart rate</li>
<li>Blood redistribution to essential organs</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="group-survival-and-sacrifice" class="level4">
<h4 class="anchored" data-anchor-id="group-survival-and-sacrifice">Group Survival and Sacrifice</h4>
<section id="kin-selection" class="level5">
<h5 class="anchored" data-anchor-id="kin-selection">Kin Selection</h5>
<ol type="1">
<li><strong>Definition</strong>: Form of natural selection focused on populations rather than individuals</li>
<li><strong>Key aspects</strong>:
<ul>
<li>Can require individual sacrifice</li>
<li>Selects for beneficial population behaviors</li>
<li>Promotes selfless individual actions</li>
</ul></li>
</ol>
</section>
<section id="animal-examples-of-sacrifice" class="level5">
<h5 class="anchored" data-anchor-id="animal-examples-of-sacrifice">Animal Examples of Sacrifice</h5>
<ol type="1">
<li><strong>Parental Sacrifice</strong>:
<ul>
<li>Black lace-weaver spider: Allows offspring to eat it</li>
<li>Polar bears and penguins: Go months without eating</li>
<li>Orcas and dolphins: Stay awake for a month after birth</li>
</ul></li>
<li><strong>Group Protection</strong>:
<ul>
<li>African elephants, zebras, sea lions: Collective offspring protection</li>
<li>Marmots: Delay reproduction to help with group childcare</li>
</ul></li>
<li><strong>Insect Societies</strong>:
<ul>
<li>Honeybees:
<ul>
<li>Workers neglect reproduction</li>
<li>Older workers eliminated when no longer useful</li>
<li>Drones die during mating</li>
</ul></li>
<li>Colobopsis explodens ants:
<ul>
<li>Self-destruct when threatened</li>
<li>Release poisonous substance</li>
</ul></li>
<li>Similar behavior in bees and termites</li>
</ul></li>
</ol>
</section>
</section>
<section id="human-self-preservation" class="level4">
<h4 class="anchored" data-anchor-id="human-self-preservation">Human Self-Preservation</h4>
<section id="complex-nature" class="level5">
<h5 class="anchored" data-anchor-id="complex-nature">Complex Nature</h5>
<ol type="1">
<li><strong>Beyond Physical Survival</strong>:
<ul>
<li>Includes psychological well-being</li>
<li>Encompasses social status</li>
<li>Protects sense of identity</li>
</ul></li>
<li><strong>Overriding Biological Instincts</strong>:
<ul>
<li>Innocuous examples (e.g., roller coasters)</li>
<li>Response to demanding circumstances</li>
<li>Can lead to chronic stress</li>
</ul></li>
</ol>
</section>
<section id="case-study-gioconda-belli-and-the-sandinista-revolution" class="level5">
<h5 class="anchored" data-anchor-id="case-study-gioconda-belli-and-the-sandinista-revolution">Case Study: Gioconda Belli and the Sandinista Revolution</h5>
<ol type="1">
<li><p><strong>Background</strong>:</p>
<ul>
<li>1970s Nicaragua</li>
<li>Upper-middle-class background</li>
<li>Married with two daughters</li>
<li>Opposed Somoza dictatorship</li>
</ul></li>
<li><p><strong>Revolutionary Activities</strong>:</p>
<ul>
<li>Smuggled weapons and documents</li>
<li>Wrote press releases</li>
<li>Conducted international advocacy</li>
<li>Faced exile and separation from family</li>
</ul></li>
<li><p><strong>Motivations</strong>:</p>
<blockquote class="blockquote">
<p>“If I gave in to fear, I would end up killing my soul to save my body.”</p>
</blockquote>
<ul>
<li>Seeking meaningful existence</li>
<li>Creating better future for children</li>
<li>Supporting group survival</li>
<li>Building collective identity</li>
</ul></li>
</ol>
</section>
</section>
<section id="territorial-behavior" class="level4">
<h4 class="anchored" data-anchor-id="territorial-behavior">Territorial Behavior</h4>
<section id="definition-and-purpose" class="level5">
<h5 class="anchored" data-anchor-id="definition-and-purpose">Definition and Purpose</h5>
<ul>
<li><strong>Territory</strong>: Geographical region containing:
<ul>
<li>Survival resources</li>
<li>Mating opportunities</li>
<li>Actively defended areas</li>
</ul></li>
</ul>
</section>
<section id="defense-mechanisms" class="level5">
<h5 class="anchored" data-anchor-id="defense-mechanisms">Defense Mechanisms</h5>
<ol type="1">
<li><strong>Marking Methods</strong>:
<ul>
<li>Scent marking</li>
<li>Chemical releases</li>
<li>Visual markings</li>
<li>Guard patrols</li>
<li>Threatening calls (especially birds)</li>
</ul></li>
<li><strong>Resource Correlation</strong>:
<ul>
<li>More aggressive when resources scarce</li>
<li>Relaxed when resources abundant</li>
<li>Requires significant energy investment</li>
</ul></li>
</ol>
</section>
</section>
<section id="historical-preservation-examples" class="level4">
<h4 class="anchored" data-anchor-id="historical-preservation-examples">Historical Preservation Examples</h4>
<section id="knowledge-preservation" class="level5">
<h5 class="anchored" data-anchor-id="knowledge-preservation">Knowledge Preservation</h5>
<ol type="1">
<li><strong>Nineveh Library</strong>:
<ul>
<li>Discovered 1849 by Austen Henry Layard</li>
<li>Destroyed 612 BCE</li>
<li>Contents preserved by fire:
<ul>
<li>Dictionaries and grammars</li>
<li>Scientific treatises</li>
<li>Religious and historical texts</li>
<li>Legal documents</li>
</ul></li>
<li>Historical significance:
<ul>
<li>Earlier flood story predating Bible</li>
<li>Law Code of Hammurabi</li>
<li>Cultural continuity evidence</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="physical-preservation-derinkuyu-underground-city" class="level5">
<h5 class="anchored" data-anchor-id="physical-preservation-derinkuyu-underground-city">Physical Preservation: Derinkuyu Underground City</h5>
<ol type="1">
<li><strong>Discovery and Structure</strong>:
<ul>
<li>Found 1963 in Turkey</li>
<li>Specs:
<ul>
<li>18 levels deep</li>
<li>200-280 feet underground</li>
<li>Capacity: 20,000-30,000 people</li>
<li>52+ ventilation shafts</li>
</ul></li>
</ul></li>
<li><strong>Facilities</strong>:
<ul>
<li>Schools</li>
<li>Worship areas</li>
<li>Living quarters</li>
<li>Food storage</li>
<li>Manufacturing areas</li>
<li>Community spaces</li>
<li>Animal stables</li>
</ul></li>
<li><strong>Historical Usage</strong>:
<ul>
<li>Multiple civilizations:
<ul>
<li>Phrygians (possibly)</li>
<li>Persians</li>
<li>Hittites</li>
<li>Romans</li>
<li>Early Christians</li>
<li>Turks</li>
</ul></li>
<li>Defensive features:
<ul>
<li>Narrow tunnels</li>
<li>1,100-pound stone barriers</li>
<li>Connected to other cities</li>
<li>Strategic design for defense</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="modern-applications-3" class="level4">
<h4 class="anchored" data-anchor-id="modern-applications-3">Modern Applications</h4>
<section id="organizational-behavior" class="level5">
<h5 class="anchored" data-anchor-id="organizational-behavior">Organizational Behavior</h5>
<ol type="1">
<li><strong>Common Preservation Responses</strong>:
<ul>
<li>Information hoarding</li>
<li>Work hoarding</li>
<li>Resistance to delegation</li>
<li>Trust breakdown</li>
</ul></li>
<li><strong>Long-term Impacts</strong>:
<ul>
<li>Decreased efficiency</li>
<li>Reduced collaboration</li>
<li>Organizational instability</li>
<li>Counter-productive outcomes</li>
</ul></li>
</ol>
</section>
</section>
<section id="conclusion-8" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-8">Conclusion</h4>
<section id="balance-in-self-preservation" class="level5">
<h5 class="anchored" data-anchor-id="balance-in-self-preservation">Balance in Self-Preservation</h5>
<ol type="1">
<li><strong>Key Principles</strong>:
<ul>
<li>Essential but potentially limiting</li>
<li>Requires balance between protection and growth</li>
<li>Must consider long-term versus short-term effects</li>
</ul></li>
<li><strong>Strategic Approach</strong>:
<ul>
<li>Listen to cautionary instincts</li>
<li>Remain open to opportunities</li>
<li>Consider both individual and group survival</li>
<li>Plan beyond immediate preservation needs</li>
</ul></li>
</ol>
</section>
<section id="final-insight-1" class="level5">
<h5 class="anchored" data-anchor-id="final-insight-1">Final Insight</h5>
<blockquote class="blockquote">
<p>“Often the greatest risk is to not take risk at all.”</p>
</blockquote>
</section>
</section>
</section>
<section id="replication" class="level3">
<h3 class="anchored" data-anchor-id="replication">Replication</h3>
<section id="introduction-the-nature-of-replication" class="level4">
<h4 class="anchored" data-anchor-id="introduction-the-nature-of-replication">Introduction: The Nature of Replication</h4>
<section id="core-concept-4" class="level5">
<h5 class="anchored" data-anchor-id="core-concept-4">Core Concept</h5>
<ul>
<li><p><strong>Replication</strong> involves making copies while maintaining essential characteristics</p></li>
<li><p>Quote from Jiddu Krishnamurti:</p>
<blockquote class="blockquote">
<p>“There must be a certain amount of imitation, copying in outward technique, but when there is inward psychological imitation, surely we cease to be creative.”</p>
</blockquote></li>
</ul>
</section>
<section id="basic-requirements-for-replication" class="level5">
<h5 class="anchored" data-anchor-id="basic-requirements-for-replication">Basic Requirements for Replication</h5>
<p>Three fundamental elements needed:</p>
<ol type="1">
<li><strong>Code</strong>: Represents what needs to be replicated</li>
<li><strong>Copying Mechanism</strong>: Means of replicating the code</li>
<li><strong>Processing Environment</strong>: Place to construct the replication</li>
</ol>
</section>
</section>
<section id="biological-replication" class="level4">
<h4 class="anchored" data-anchor-id="biological-replication">Biological Replication</h4>
<section id="cellular-replication-mitosis" class="level5">
<h5 class="anchored" data-anchor-id="cellular-replication-mitosis">Cellular Replication (Mitosis)</h5>
<ul>
<li><strong>Definition</strong>: Process of non-sexual cell replication producing identical daughter cells</li>
<li><strong>Key Applications</strong>:
<ul>
<li>Skin cell regeneration</li>
<li>Hair growth</li>
<li>Nail production</li>
</ul></li>
<li><strong>Characteristics</strong>:
<ul>
<li>Continuous process throughout life</li>
<li>Produces genetically identical copies</li>
<li>Built into cellular structure</li>
</ul></li>
</ul>
</section>
<section id="sexual-reproduction-meiosis" class="level5">
<h5 class="anchored" data-anchor-id="sexual-reproduction-meiosis">Sexual Reproduction (Meiosis)</h5>
<ul>
<li><strong>Process Overview</strong>:
<ul>
<li>Combines half of female chromosomes with half of male chromosomes</li>
<li>Creates genetically unique offspring</li>
</ul></li>
<li><strong>Advantages</strong>:
<ul>
<li>Introduces genetic variation</li>
<li>Prevents accumulation of harmful traits</li>
<li>Enables adaptation to environmental changes</li>
</ul></li>
<li><strong>Prevalence</strong>: Common across mammals, fish, and plants</li>
</ul>
</section>
<section id="genetic-variation-importance" class="level5">
<h5 class="anchored" data-anchor-id="genetic-variation-importance">Genetic Variation Importance</h5>
<ul>
<li><strong>Benefits</strong>:
<ul>
<li>Improves fitness</li>
<li>Increases survival chances</li>
<li>Prevents bad mutation accumulation</li>
</ul></li>
<li><strong>Costs</strong>:
<ul>
<li>Requires finding compatible partners</li>
<li>Necessitates dealing with diversity</li>
</ul></li>
</ul>
</section>
</section>
<section id="historical-case-study-the-habsburg-dynasty" class="level4">
<h4 class="anchored" data-anchor-id="historical-case-study-the-habsburg-dynasty">Historical Case Study: The Habsburg Dynasty</h4>
<section id="overview-1" class="level5">
<h5 class="anchored" data-anchor-id="overview-1">Overview</h5>
<ul>
<li><strong>Time Period</strong>: 11th to 18th century</li>
<li><strong>Geographic Scope</strong>: Ruled significant portions of Europe
<ul>
<li>Countries included: Germany, England, Hungary, Ireland, Portugal, Spain</li>
</ul></li>
</ul>
</section>
<section id="marriage-practices" class="level5">
<h5 class="anchored" data-anchor-id="marriage-practices">Marriage Practices</h5>
<ul>
<li><strong>Strategy</strong>: Married close blood relatives
<ul>
<li>First cousins</li>
<li>Nieces and nephews</li>
</ul></li>
<li><strong>Motto</strong>: “Let others wage war, you happy Austria, marry”</li>
<li><strong>Purpose</strong>: Maintain control over empire</li>
</ul>
</section>
<section id="consequences-of-inbreeding" class="level5">
<h5 class="anchored" data-anchor-id="consequences-of-inbreeding">Consequences of Inbreeding</h5>
<ol type="1">
<li><strong>Physical Characteristics</strong>:
<ul>
<li>Distinctive jawline</li>
<li>Enlarged chin</li>
<li>Underbite</li>
<li>Thick lips</li>
</ul></li>
<li><strong>Health Issues</strong>:
<ul>
<li>High infant mortality
<ul>
<li>Between 1527-1661: 34 children born</li>
<li>Half died in first decade</li>
<li>Ten died before first birthday</li>
</ul></li>
<li>Speech difficulties</li>
<li>Mobility problems</li>
<li>Intellectual disabilities</li>
</ul></li>
<li><strong>Dynasty’s End</strong>: Charles II
<ul>
<li><strong>Conditions</strong>:
<ul>
<li>Couldn’t speak until age 4</li>
<li>Unable to walk until age 8</li>
<li>Frequent drooling</li>
<li>Low intellectual capacity</li>
<li>Infertility</li>
<li>Died in late thirties</li>
</ul></li>
<li>Represented culmination of genetic problems after 16 generations of intermarriage</li>
</ul></li>
</ol>
</section>
</section>
<section id="military-strategy-and-replication" class="level4">
<h4 class="anchored" data-anchor-id="military-strategy-and-replication">Military Strategy and Replication</h4>
<section id="napoleons-impact" class="level5">
<h5 class="anchored" data-anchor-id="napoleons-impact">Napoleon’s Impact</h5>
<ul>
<li>Demonstrated new military tactics</li>
<li>Exposed weaknesses in traditional German army approach</li>
<li>Strategy: Insert army between opposing forces and strike before coordination</li>
</ul>
</section>
<section id="german-military-evolution-auftragstaktik" class="level5">
<h5 class="anchored" data-anchor-id="german-military-evolution-auftragstaktik">German Military Evolution: Auftragstaktik</h5>
<ul>
<li><strong>Definition</strong>: Commander’s intent concept</li>
<li><strong>Purpose</strong>: Empower subordinate commanders with necessary information</li>
</ul>
</section>
<section id="four-elements-of-commanders-intent" class="level5">
<h5 class="anchored" data-anchor-id="four-elements-of-commanders-intent">Four Elements of Commander’s Intent</h5>
<ol type="1">
<li><strong>Formulation</strong></li>
<li><strong>Communication</strong></li>
<li><strong>Interpretation</strong></li>
<li><strong>Implementation</strong></li>
</ol>
</section>
<section id="implementation-criteria" class="level5">
<h5 class="anchored" data-anchor-id="implementation-criteria">Implementation Criteria</h5>
<ol type="1">
<li><strong>Explain Rationale</strong>:
<ul>
<li>Include what and why</li>
<li>Share decision-making process</li>
</ul></li>
<li><strong>Establish Operational Limits</strong>:
<ul>
<li>Define boundaries</li>
<li>Identify prohibited actions</li>
</ul></li>
<li><strong>Maintain Feedback Loop</strong>:
<ul>
<li>Continuous communication between levels</li>
</ul></li>
<li><strong>Account for Individual Differences</strong>:
<ul>
<li>Consider psychological makeup of subordinates</li>
</ul></li>
</ol>
</section>
</section>
<section id="cultural-replication-the-case-of-tea" class="level4">
<h4 class="anchored" data-anchor-id="cultural-replication-the-case-of-tea">Cultural Replication: The Case of Tea</h4>
<section id="origins" class="level5">
<h5 class="anchored" data-anchor-id="origins">Origins</h5>
<ul>
<li><strong>Location</strong>: Southwestern China, parts of India and Myanmar</li>
<li><strong>Timeline</strong>: Cultivation began at least 3,000 years ago</li>
<li><strong>Early Description</strong>: “A drink that lightens the body and changes the bones” (circa 400 CE)</li>
</ul>
</section>
<section id="global-spread-pattern" class="level5">
<h5 class="anchored" data-anchor-id="global-spread-pattern">Global Spread Pattern</h5>
<ol type="1">
<li><strong>Initial Exposure</strong>: Through explorers, voyagers, or invaders</li>
<li><strong>Trade Development</strong>: Countries begin importing tea</li>
<li><strong>Local Cultivation</strong>: Countries attempt own production where climate permits</li>
</ol>
</section>
<section id="regional-adaptations" class="level5">
<h5 class="anchored" data-anchor-id="regional-adaptations">Regional Adaptations</h5>
<ul>
<li><p>Japan</p>
<ul>
<li><strong>Introduction</strong>: By Buddhist monks</li>
<li><strong>Cultural Integration</strong>:
<ul>
<li>Developed tea ceremony (Chan-o-yu)</li>
<li>Connected to Zen teachings</li>
<li>Integrated with philosophy and religion</li>
</ul></li>
</ul></li>
<li><p>Russia</p>
<ul>
<li><strong>Trade Route</strong>: 4,000-mile path from China to Moscow</li>
<li><strong>Cultural Impact</strong>:
<ul>
<li>Became national temperate drink</li>
<li>Promoted as alternative to vodka</li>
<li>Development of samovar tradition</li>
</ul></li>
<li><strong>Local Production</strong>: Established first tea garden in 1893 near Batumi</li>
</ul></li>
<li><p>Persia (Iran)</p>
<ul>
<li><strong>Introduction</strong>: Via Central Asian traders</li>
<li><strong>Cultural Integration</strong>:
<ul>
<li>Aligned with Islamic prohibition of alcohol</li>
<li>Development of tea taverns</li>
<li>Association with chess and social gathering</li>
</ul></li>
<li><strong>Local Production</strong>: Began early 20th century with smuggled Assam seedlings</li>
</ul></li>
</ul>
</section>
<section id="success-factors-2" class="level5">
<h5 class="anchored" data-anchor-id="success-factors-2">Success Factors</h5>
<ol type="1">
<li><strong>Inherent Flexibility</strong>:
<ul>
<li>Multiple preparation methods</li>
<li>Various consumption styles</li>
<li>Adaptable to local preferences</li>
</ul></li>
<li><strong>Core Structure</strong>:
<ul>
<li>Consistent source (tea plant)</li>
<li>Basic preparation principle</li>
<li>Recognizable product</li>
</ul></li>
</ol>
</section>
</section>
<section id="conclusion-the-power-and-limits-of-replication" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-the-power-and-limits-of-replication">Conclusion: The Power and Limits of Replication</h4>
<section id="key-principles-3" class="level5">
<h5 class="anchored" data-anchor-id="key-principles-3">Key Principles</h5>
<ol type="1">
<li><strong>Information Transfer</strong>:
<ul>
<li>Core function of replication</li>
<li>Importance of faithful copying</li>
<li>Role of variation</li>
</ul></li>
<li><strong>Adaptation Requirements</strong>:
<ul>
<li>Balance between structure and flexibility</li>
<li>Need for environmental responsiveness</li>
<li>Importance of innovation</li>
</ul></li>
<li><strong>Risks and Benefits</strong>:
<ul>
<li>Potential for exponential growth</li>
<li>Danger of unchecked replication</li>
<li>Need for controlled adaptation</li>
</ul></li>
</ol>
</section>
<section id="applications-1" class="level5">
<h5 class="anchored" data-anchor-id="applications-1">Applications</h5>
<ul>
<li><strong>Biological</strong>: Evolution and adaptation</li>
<li><strong>Cultural</strong>: Spread of ideas and practices</li>
<li><strong>Strategic</strong>: Military and organizational planning</li>
<li><strong>Social</strong>: Cultural transmission and modification</li>
</ul>
</section>
<section id="final-considerations" class="level5">
<h5 class="anchored" data-anchor-id="final-considerations">Final Considerations</h5>
<ul>
<li>Balance between preservation and adaptation</li>
<li>Importance of managed variation</li>
<li>Need for selective replication</li>
<li>Role of environmental factors</li>
</ul>
</section>
</section>
</section>
<section id="cooperation" class="level3">
<h3 class="anchored" data-anchor-id="cooperation">Cooperation</h3>
<section id="core-concept-cooperation" class="level4">
<h4 class="anchored" data-anchor-id="core-concept-cooperation">Core Concept: Cooperation</h4>
<section id="foundation-and-definition" class="level5">
<h5 class="anchored" data-anchor-id="foundation-and-definition">Foundation and Definition</h5>
<ul>
<li><p><strong>African Proverb</strong> introduces the concept:</p>
<blockquote class="blockquote">
<p>“If you want to go quickly, go alone. If you want to go far, go together.”</p>
</blockquote></li>
<li><p><strong>Biological Cooperation (Symbiosis)</strong>:</p>
<ul>
<li>Occurs when organisms cannot perform important functions alone</li>
<li>Involves using another organism’s physical body</li>
<li>Must benefit both participants</li>
<li>Enhances competitive advantages</li>
<li>Extends adaptive capacity to:
<ul>
<li>Exploit new resources</li>
<li>Adapt to environmental changes</li>
<li>Access new environments</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="key-characteristics-1" class="level5">
<h5 class="anchored" data-anchor-id="key-characteristics-1">Key Characteristics</h5>
<ul>
<li><strong>Win-Win Arrangement</strong>:
<ul>
<li>Mutual need fulfillment</li>
<li>Not always required for survival</li>
<li>Improves quality of life</li>
</ul></li>
<li><strong>Example</strong>: Shark and cleaner fish relationship
<ul>
<li>Fish clean shark’s teeth</li>
<li>Shark gets healthier teeth and longer life</li>
<li>Fish gets food and protection</li>
</ul></li>
<li><strong>Emergent Properties</strong>:
<ul>
<li>Creates capabilities greater than individual components</li>
<li>Produces unexpected combinations of traits</li>
<li>Enables new possibilities</li>
</ul></li>
</ul>
</section>
</section>
<section id="biological-examples" class="level4">
<h4 class="anchored" data-anchor-id="biological-examples">Biological Examples</h4>
<section id="mitochondrial-origin" class="level5">
<h5 class="anchored" data-anchor-id="mitochondrial-origin">Mitochondrial Origin</h5>
<ul>
<li><strong>Current Role</strong>: Energy-producing organelles in cells</li>
<li><strong>Historical Development</strong>:
<ul>
<li>Age: Over one billion years old</li>
<li>Two competing theories:
<ol type="1">
<li><strong>First Theory</strong>:
<ul>
<li>Mitochondria were free prokaryotic cells</li>
<li>Acquired by anaerobic eukaryotic cell</li>
<li>Purpose: Convert toxic oxygen radicals to water</li>
</ul></li>
<li><strong>Second Theory</strong>:
<ul>
<li>Both mitochondria and host were prokaryotes</li>
<li>Cooperation created eukaryotic cells</li>
</ul></li>
</ol></li>
</ul></li>
<li><strong>Outcome</strong>:
<ul>
<li>Produces ATP (energy currency of cells)</li>
<li>Essential for complex chemical reactions</li>
<li>Enabled evolution of complex organisms</li>
</ul></li>
</ul>
</section>
<section id="cow-bacteria-symbiosis" class="level5">
<h5 class="anchored" data-anchor-id="cow-bacteria-symbiosis">Cow-Bacteria Symbiosis</h5>
<ul>
<li><strong>Relationship Components</strong>:
<ul>
<li>Bacteria digest cellulose in hay/grass</li>
<li>Cow provides nutrient-rich environment</li>
<li>Enables cows to eat tough plant foods</li>
</ul></li>
<li><strong>Contrast with Humans</strong>:
<ul>
<li>Humans lack cellulose-digesting bacteria</li>
<li>Cannot digest cellulose effectively</li>
</ul></li>
</ul>
</section>
<section id="hawaiian-squid-and-vibrio-fischeri" class="level5">
<h5 class="anchored" data-anchor-id="hawaiian-squid-and-vibrio-fischeri">Hawaiian Squid and Vibrio fischeri</h5>
<ul>
<li><strong>Symbiotic Relationship</strong>:
<ul>
<li>Bacteria live in squid’s light-producing organ</li>
<li>Bacteria emit light</li>
<li>Squid provides protection</li>
<li>Light helps squid camouflage from predators</li>
</ul></li>
</ul>
</section>
</section>
<section id="technological-cooperation-railroad-and-telegraph" class="level4">
<h4 class="anchored" data-anchor-id="technological-cooperation-railroad-and-telegraph">Technological Cooperation: Railroad and Telegraph</h4>
<section id="historical-development-2" class="level5">
<h5 class="anchored" data-anchor-id="historical-development-2">Historical Development</h5>
<ul>
<li><p><strong>Initial Status</strong>: Separate inventions</p></li>
<li><p><strong>Synergistic Growth</strong>:</p>
<blockquote class="blockquote">
<p>“The railroad and the telegraph marched across the continent in unison.” - Alfred D. Chandler, Jr.</p>
</blockquote></li>
</ul>
</section>
<section id="mutual-benefits" class="level5">
<h5 class="anchored" data-anchor-id="mutual-benefits">Mutual Benefits</h5>
<ul>
<li><strong>Telegraph’s Contribution</strong>:
<ul>
<li>Communicated train progress</li>
<li>Enabled schedule adjustments</li>
<li>Improved efficiency for perishable goods</li>
</ul></li>
<li><strong>Railroad’s Contribution</strong>:
<ul>
<li>Provided infrastructure for telegraph lines</li>
<li>Offered station space for offices</li>
<li>Created physical network backbone</li>
</ul></li>
</ul>
</section>
<section id="impact-1" class="level5">
<h5 class="anchored" data-anchor-id="impact-1">Impact</h5>
<ul>
<li><strong>Business Integration</strong>:
<ul>
<li>Became mutually dependent</li>
<li>Enhanced speed and volume of:
<ul>
<li>Goods movement</li>
<li>Passenger transport</li>
<li>Message transmission</li>
</ul></li>
</ul></li>
<li><strong>Resource Optimization</strong>:
<ul>
<li>Prevented duplicate infrastructure</li>
<li>Allowed focus on core competencies</li>
</ul></li>
</ul>
</section>
</section>
<section id="orchestra-as-model-of-cooperation" class="level4">
<h4 class="anchored" data-anchor-id="orchestra-as-model-of-cooperation">Orchestra as Model of Cooperation</h4>
<section id="basic-principles-1" class="level5">
<h5 class="anchored" data-anchor-id="basic-principles-1">Basic Principles</h5>
<ul>
<li><p><strong>Trust Requirements</strong>:</p>
<ul>
<li>Essential for performance</li>
<li>Musicians must rely on each other</li>
<li>Cannot always hear all instruments</li>
</ul></li>
<li><p><strong>Collaborative Nature</strong>:</p>
<blockquote class="blockquote">
<p>“When it’s functioning correctly, it’s a symbiosis between me and the 80 musicians on stage.” - Alexander Shelley</p>
</blockquote></li>
</ul>
</section>
<section id="montreal-womens-symphony-orchestra-case-study" class="level5">
<h5 class="anchored" data-anchor-id="montreal-womens-symphony-orchestra-case-study">Montreal Women’s Symphony Orchestra Case Study</h5>
<ul>
<li><strong>Historical Context</strong>:
<ul>
<li>Founded: 1940</li>
<li>First complete all-women’s orchestra in North America</li>
<li>Unique features:
<ul>
<li>Conducted by woman</li>
<li>Managed by women</li>
<li>All-female membership</li>
</ul></li>
</ul></li>
<li><strong>Membership Diversity</strong>:
<ul>
<li>Professional musicians</li>
<li>Amateurs</li>
<li>Various social classes</li>
<li>Multiple ethnicities and religions</li>
<li>Including Violet Grant (first black Canadian symphony member)</li>
</ul></li>
<li><strong>Achievements</strong>:
<ul>
<li>First Canadian orchestra to play at Carnegie Hall</li>
<li>International tours</li>
<li>Television and radio performances</li>
</ul></li>
<li><strong>Challenges</strong>:
<ul>
<li>Limited funding</li>
<li>Eventually closed due to funding denial</li>
<li>Worked around job and family commitments</li>
</ul></li>
</ul>
</section>
</section>
<section id="human-cooperation-through-shared-beliefs" class="level4">
<h4 class="anchored" data-anchor-id="human-cooperation-through-shared-beliefs">Human Cooperation Through Shared Beliefs</h4>
<section id="hararis-analysis" class="level5">
<h5 class="anchored" data-anchor-id="hararis-analysis">Harari’s Analysis</h5>
<ul>
<li><strong>Unique Human Capability</strong>:
<ul>
<li>Can imagine non-physical concepts</li>
<li>Create and believe in shared myths</li>
<li>Enable large-scale cooperation</li>
</ul></li>
<li><strong>Examples of Shared Beliefs</strong>:
<ul>
<li>Currency</li>
<li>Laws</li>
<li>Corporations</li>
<li>Nations</li>
</ul></li>
</ul>
</section>
<section id="impact-and-implications" class="level5">
<h5 class="anchored" data-anchor-id="impact-and-implications">Impact and Implications</h5>
<ul>
<li><strong>Social Infrastructure</strong>:
<ul>
<li>Enables property ownership</li>
<li>Supports job systems</li>
<li>Creates social frameworks</li>
</ul></li>
<li><strong>Historical Significance</strong>:
<ul>
<li>Allowed transition from small groups to large societies</li>
<li>Enabled future planning</li>
<li>Created historical awareness</li>
</ul></li>
</ul>
</section>
<section id="critiques" class="level5">
<h5 class="anchored" data-anchor-id="critiques">Critiques</h5>
<ul>
<li><strong>Potential Negatives</strong>:
<ul>
<li>Often leads to oppression</li>
<li>Can enable exploitation</li>
<li>Creates social inequalities</li>
</ul></li>
<li><strong>Systemic Issues</strong>:
<ul>
<li>Beliefs become seen as natural laws</li>
<li>Hard to change established systems</li>
<li>Creates social inertia</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-the-power-of-cooperation" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-the-power-of-cooperation">Conclusion: The Power of Cooperation</h4>
<section id="key-insights" class="level5">
<h5 class="anchored" data-anchor-id="key-insights">Key Insights</h5>
<ul>
<li><strong>Evolutionary Perspective</strong>:
<ul>
<li>Seems to defy natural selection</li>
<li>Actually enhances survival through reciprocity</li>
<li>Creates shared interests and benefits</li>
</ul></li>
<li><strong>Requirements for Success</strong>:
<ul>
<li>Specific conditions</li>
<li>Repeated interactions</li>
<li>Shared benefits</li>
<li>Anti-cheating mechanisms</li>
</ul></li>
</ul>
</section>
<section id="civilization-impact" class="level5">
<h5 class="anchored" data-anchor-id="civilization-impact">Civilization Impact</h5>
<ul>
<li><strong>Foundation Role</strong>:
<ul>
<li>Enables flexible coordination</li>
<li>Allows knowledge sharing</li>
<li>Creates institutional frameworks</li>
</ul></li>
<li><strong>Ongoing Challenges</strong>:
<ul>
<li>Requires constant maintenance</li>
<li>Must guard against selfishness</li>
<li>Needs supporting norms and rules</li>
</ul></li>
</ul>
</section>
</section>
<section id="supporting-idea-dunbars-number" class="level4">
<h4 class="anchored" data-anchor-id="supporting-idea-dunbars-number">Supporting Idea: Dunbar’s Number</h4>
<section id="core-theory" class="level5">
<h5 class="anchored" data-anchor-id="core-theory">Core Theory</h5>
<ul>
<li><strong>Robin Dunbar</strong>, an evolutionary anthropologist, established that humans have a cognitive limit for stable social relationships</li>
<li><strong>Key Limit</strong>: Approximately 150 people</li>
<li><strong>Biological Basis</strong>: Limited by neocortex size</li>
<li><strong>Core Finding</strong>: Direct correlation between:
<ul>
<li>Number of neocortical neurons</li>
<li>Number of social relationships that can be monitored</li>
</ul></li>
</ul>
</section>
<section id="historical-evidence" class="level5">
<h5 class="anchored" data-anchor-id="historical-evidence">Historical Evidence</h5>
<ul>
<li>Multiple examples of ~150-person communities found in:
<ul>
<li>Hunter-gatherer societies</li>
<li>Military units</li>
<li>Successful businesses</li>
<li>Communities in the Doomsday Book</li>
<li>Neolithic villages</li>
<li>Christmas card networks</li>
</ul></li>
</ul>
</section>
<section id="evolutionary-significance" class="level5">
<h5 class="anchored" data-anchor-id="evolutionary-significance">Evolutionary Significance</h5>
<ul>
<li><p><strong>Brain Evolution Theory</strong>:</p>
<ul>
<li>Larger social groups drove brain evolution</li>
<li>Social relationships were primary driver of neocortical capacity</li>
<li>Not reverse causation (bigger brains leading to social relationships)</li>
</ul></li>
<li><p><strong>Scientific Consensus</strong>:</p>
<blockquote class="blockquote">
<p>Other scientists have corroborated this idea that our larger brains are primarily a social versus an ecological adaptation.</p>
</blockquote></li>
</ul>
</section>
</section>
<section id="dunbars-social-group-scale" class="level4">
<h4 class="anchored" data-anchor-id="dunbars-social-group-scale">Dunbar’s Social Group Scale</h4>
<section id="hierarchical-structure" class="level5">
<h5 class="anchored" data-anchor-id="hierarchical-structure">Hierarchical Structure</h5>
<ul>
<li>Groups are nested (each larger group includes smaller ones)</li>
<li>Numbers represent maximum maintenance capacity at each level</li>
</ul>
</section>
<section id="group-sizes-and-characteristics" class="level5">
<h5 class="anchored" data-anchor-id="group-sizes-and-characteristics">Group Sizes and Characteristics</h5>
<ul>
<li><p>5 People - Inner Core</p>
<ul>
<li><strong>Composition</strong>: Partners, family, best friends</li>
<li><strong>Relationship Type</strong>: Daily support network</li>
<li><strong>Interaction Level</strong>: Highest intensity of support and contact</li>
</ul></li>
<li><p>15 People - Close Friends</p>
<ul>
<li><strong>Characteristics</strong>:
<ul>
<li>Deeply integrated into daily life</li>
<li>Excellent understanding of their behavior</li>
</ul></li>
<li><strong>Interaction Pattern</strong>: May not require constant contact</li>
</ul></li>
<li><p>50 People - Basic Friends</p>
<ul>
<li><strong>Relationship Type</strong>: Basic friends and acquaintances</li>
<li><strong>Interaction Pattern</strong>:
<ul>
<li>Occasional gatherings</li>
<li>Often in group settings</li>
</ul></li>
<li><strong>Knowledge Level</strong>: Basic awareness of life events</li>
</ul></li>
<li><p>150 People - Community Level</p>
<ul>
<li><p><strong>Defining Characteristics</strong>:</p>
<blockquote class="blockquote">
<p>This is the size at which you feel you are part of a community</p>
</blockquote></li>
<li><p><strong>Relationship Quality</strong>:</p>
<ul>
<li>Based on trust and obligation</li>
<li>Includes personal history</li>
<li>Beyond just names and faces</li>
</ul></li>
</ul></li>
<li><p>500 People - Extended Network</p>
<ul>
<li><strong>Composition</strong>: Friends of friends</li>
<li><strong>Knowledge Level</strong>: Basic information</li>
<li><strong>Effort Level</strong>: No sustained effort to maintain relationships</li>
</ul></li>
<li><p>1500 People - Recognition Limit</p>
<ul>
<li><strong>Definition</strong>: Maximum number of faces you can name</li>
<li><strong>Type</strong>: Upper limit of social recognition</li>
</ul></li>
</ul>
</section>
</section>
<section id="practical-implications-1" class="level4">
<h4 class="anchored" data-anchor-id="practical-implications-1">Practical Implications</h4>
<section id="cognitive-limitations" class="level5">
<h5 class="anchored" data-anchor-id="cognitive-limitations">Cognitive Limitations</h5>
<ul>
<li>Brain has finite capacity for social information processing</li>
<li>Larger groups require more cognitive resources</li>
<li>Eventually reach processing limit</li>
</ul>
</section>
<section id="cost-benefit-analysis" class="level5">
<h5 class="anchored" data-anchor-id="cost-benefit-analysis">Cost-Benefit Analysis</h5>
<ul>
<li><strong>Key Threshold</strong>: ~150 people</li>
<li><strong>Limitations Beyond Threshold</strong>:
<ul>
<li>Difficulty tracking individuals</li>
<li>Challenge understanding inter-relationships</li>
<li>May exceed cognitive capabilities</li>
</ul></li>
</ul>
</section>
<section id="practical-considerations" class="level5">
<h5 class="anchored" data-anchor-id="practical-considerations">Practical Considerations</h5>
<ul>
<li><strong>Time Investment</strong>:
<ul>
<li>All relationships require time maintenance</li>
<li>Finite time available for social maintenance</li>
</ul></li>
<li><strong>Efficiency</strong>: Must work within biological constraints</li>
<li><strong>Success Strategy</strong>: Understanding and respecting these limits</li>
</ul>
</section>
</section>
</section>
<section id="hierarchical-organization" class="level3">
<h3 class="anchored" data-anchor-id="hierarchical-organization">Hierarchical Organization</h3>
<section id="introduction-to-hierarchy" class="level4">
<h4 class="anchored" data-anchor-id="introduction-to-hierarchy">Introduction to Hierarchy</h4>
<section id="fundamental-nature" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-nature">Fundamental Nature</h5>
<ul>
<li>Hierarchy permeates civilized society, though handled politely</li>
<li>Functions as a core organizing principle across natural and human systems</li>
<li><strong>Hierarchical organization</strong>: A form of social structuring with linear dominance ranking between individuals in close proximity</li>
</ul>
</section>
<section id="natural-occurrence" class="level5">
<h5 class="anchored" data-anchor-id="natural-occurrence">Natural Occurrence</h5>
<ul>
<li>Found extensively across animal world, particularly in:
<ul>
<li>Social mammals (e.g., baboons, wolves)</li>
<li>Other species (chickens, bears, elephant seals)</li>
</ul></li>
<li>Characteristics:
<ul>
<li>Generally stable over time</li>
<li>Lower groups accept their position</li>
<li>Results in reduced fighting and increased order</li>
</ul></li>
</ul>
</section>
</section>
<section id="leadership-and-responsibilities" class="level4">
<h4 class="anchored" data-anchor-id="leadership-and-responsibilities">Leadership and Responsibilities</h4>
<section id="hierarchical-contract" class="level5">
<h5 class="anchored" data-anchor-id="hierarchical-contract">Hierarchical Contract</h5>
<p>Leaders have three primary responsibilities:</p>
<ol type="1">
<li><strong>Daily Direction</strong>: Food procurement</li>
<li><strong>Protection</strong>: From predators and dangers</li>
<li><strong>Order Maintenance</strong>:
<ul>
<li>Orienting members to roles</li>
<li>Conflict resolution</li>
<li>Social norm enforcement</li>
</ul></li>
</ol>
</section>
<section id="scientific-research-on-hierarchies" class="level5">
<h5 class="anchored" data-anchor-id="scientific-research-on-hierarchies">Scientific Research on Hierarchies</h5>
<ul>
<li><strong>Researcher</strong>: Thorleif Schjelderup-Ebbe</li>
<li><strong>Study Focus</strong>: Hen dominance hierarchies</li>
<li><strong>Key Findings</strong>:
<ul>
<li>Peace exists only in established flocks</li>
<li>Hens remember pecking order</li>
<li>Individual hens could recognize up to 27 others from different flocks</li>
</ul></li>
</ul>
</section>
<section id="chimpanzee-leadership" class="level5">
<h5 class="anchored" data-anchor-id="chimpanzee-leadership">Chimpanzee Leadership</h5>
<ul>
<li>Alpha male success based on:
<ul>
<li>Coalition leadership rather than physical strength</li>
<li>Day-to-day coalition activities:
<ul>
<li>Spending time together</li>
<li>Food sharing</li>
<li>Mutual assistance</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="challenges-and-drawbacks" class="level4">
<h4 class="anchored" data-anchor-id="challenges-and-drawbacks">Challenges and Drawbacks</h4>
<section id="status-based-limitations" class="level5">
<h5 class="anchored" data-anchor-id="status-based-limitations">Status-Based Limitations</h5>
<ul>
<li>Lower-ranking members’ contributions often overlooked</li>
<li>Example: Efficient strategies by low-ranking chimpanzees may be ignored</li>
<li>Functions as information filter, potentially missing opportunities</li>
</ul>
</section>
<section id="human-context-1" class="level5">
<h5 class="anchored" data-anchor-id="human-context-1">Human Context</h5>
<ul>
<li>Organizations often emphasize individual status</li>
<li>Impacts:
<ul>
<li>Reduced creativity</li>
<li>Increased stress at bottom levels</li>
<li>Higher mortality rates for lower ranks</li>
<li>Pressure on top positions</li>
</ul></li>
<li>Benefits must outweigh costs for persistence</li>
</ul>
</section>
</section>
<section id="historical-perspective-the-french-revolution-case-study" class="level4">
<h4 class="anchored" data-anchor-id="historical-perspective-the-french-revolution-case-study">Historical Perspective: The French Revolution Case Study</h4>
<section id="pre-revolution-structure" class="level5">
<h5 class="anchored" data-anchor-id="pre-revolution-structure">Pre-Revolution Structure</h5>
<p>Three main estates:</p>
<ol type="1">
<li><strong>First Estate</strong> (Catholic Clergy):
<ul>
<li>Tax exempt</li>
<li>Collected tithes</li>
<li>Owned land</li>
<li>Hierarchical internal structure</li>
</ul></li>
<li><strong>Second Estate</strong> (Aristocrats):
<ul>
<li>Inherited titles</li>
<li>Tax exempt</li>
<li>Collection rights</li>
</ul></li>
<li><strong>Third Estate</strong> (96-98% of population):
<ul>
<li>Bourgeoisie (highest level)</li>
<li>Sans-culottes and city workers</li>
<li>Peasants (lowest level)
<ul>
<li>Heavy taxation</li>
<li>Limited rights</li>
<li>Land rent increased 142% (1720-1789)</li>
<li>Agricultural product prices rose only 60%</li>
<li>75% owned less than 5 hectares</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="revolutionary-period-1789-1815" class="level5">
<h5 class="anchored" data-anchor-id="revolutionary-period-1789-1815">Revolutionary Period (1789-1815)</h5>
<p>Five major phases:</p>
<ol type="1">
<li>Constitutional Monarchy (1789-1792)</li>
<li>Terror Period:
<ul>
<li>Led by Robespierre</li>
<li>17,000 executions</li>
<li>35,000 imprisonments</li>
</ul></li>
<li>Directory Government (5 years)</li>
<li>Napoleonic Era:
<ul>
<li>Seized power 1799</li>
<li>Declared emperor 1804</li>
<li>Maintained absolute power</li>
</ul></li>
<li>Post-Napoleon Period (1815)</li>
</ol>
</section>
<section id="key-lessons" class="level5">
<h5 class="anchored" data-anchor-id="key-lessons">Key Lessons</h5>
<ol type="1">
<li><strong>Hierarchy Persistence</strong>:
<ul>
<li>Cannot eliminate hierarchy</li>
<li>New forms replace old ones</li>
</ul></li>
<li><strong>Leadership Challenges</strong>:
<ul>
<li>Best performers aren’t always best leaders</li>
<li>Competition skills differ from leadership skills</li>
</ul></li>
<li><strong>Adaptation Strategies</strong>:
<ul>
<li>Example: Talleyrand’s survival through multiple regimes</li>
<li>Maintained position through changing hierarchies</li>
</ul></li>
</ol>
</section>
</section>
<section id="fashion-and-status-symbols" class="level4">
<h4 class="anchored" data-anchor-id="fashion-and-status-symbols">Fashion and Status Symbols</h4>
<section id="social-hierarchy-expression" class="level5">
<h5 class="anchored" data-anchor-id="social-hierarchy-expression">Social Hierarchy Expression</h5>
<ul>
<li>Fashion as social competition indicator</li>
<li>Status communication through clothing</li>
<li>Historical regulation through sumptuary laws</li>
<li>Examples of status markers:
<ul>
<li>Black teeth (Elizabethan era)</li>
<li>Long nails (inability to work)</li>
<li>Luxury materials (silk, gold, silver)</li>
</ul></li>
</ul>
</section>
<section id="modern-status-indicators" class="level5">
<h5 class="anchored" data-anchor-id="modern-status-indicators">Modern Status Indicators</h5>
<ul>
<li>Traditional luxury goods</li>
<li>Inverse status symbols:
<ul>
<li>Academic in stained clothing</li>
<li>CEO in worn jeans</li>
<li>Billionaire in track suit</li>
</ul></li>
<li>Status security demonstrated through casual dress</li>
</ul>
</section>
</section>
<section id="survival-situations-and-hierarchy" class="level4">
<h4 class="anchored" data-anchor-id="survival-situations-and-hierarchy">Survival Situations and Hierarchy</h4>
<section id="case-study-2010-copiapó-mining-accident" class="level5">
<h5 class="anchored" data-anchor-id="case-study-2010-copiapó-mining-accident">Case Study: 2010 Copiapó Mining Accident</h5>
<ul>
<li>33 miners trapped 700 feet underground</li>
<li>Limited provisions (10 miners, 2 days)</li>
<li>Leadership dynamics:
<ol type="1">
<li><strong>Formal Leadership</strong>: Luis Urzúa (shift foreman)</li>
<li><strong>Emergent Leaders</strong>: Mario Sepúlveda and Mario Gomez</li>
<li><strong>Spiritual Leadership</strong>: Emerged days 2-5</li>
</ol></li>
</ul>
</section>
<section id="leadership-evolution" class="level5">
<h5 class="anchored" data-anchor-id="leadership-evolution">Leadership Evolution</h5>
<ul>
<li>Initial 24 hours: Limited accountability</li>
<li>Days 2-5: Democratic process emergence</li>
<li>Day 5 onwards: Consolidated leadership</li>
<li>Day 18: Hierarchy shift after outside contact</li>
<li>Day 70: Final rescue</li>
</ul>
</section>
</section>
<section id="conclusions" class="level4">
<h4 class="anchored" data-anchor-id="conclusions">Conclusions</h4>
<section id="key-principles-4" class="level5">
<h5 class="anchored" data-anchor-id="key-principles-4">Key Principles</h5>
<ul>
<li>Hierarchy as invisible scaffolding</li>
<li>Balance between structure and flexibility</li>
<li>Importance of functional over rigid hierarchy</li>
</ul>
</section>
<section id="organizational-implications" class="level5">
<h5 class="anchored" data-anchor-id="organizational-implications">Organizational Implications</h5>
<ul>
<li>Too much hierarchy leads to unrest</li>
<li>Too little creates chaos</li>
<li>Success requires balance between individual status and organizational goals</li>
</ul>
</section>
<section id="final-observation" class="level5">
<h5 class="anchored" data-anchor-id="final-observation">Final Observation</h5>
<blockquote class="blockquote">
<p>“Hierarchy is the organizing principle that allows scale from the microscopic to the magnificent.”</p>
</blockquote>
</section>
</section>
</section>
<section id="incentives" class="level3">
<h3 class="anchored" data-anchor-id="incentives">Incentives</h3>
<section id="core-principles-of-incentives" class="level4">
<h4 class="anchored" data-anchor-id="core-principles-of-incentives">Core Principles of Incentives</h4>
<section id="fundamental-nature-1" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-nature-1">Fundamental Nature</h5>
<ul>
<li><strong>Basic Definition</strong>: Incentives shape behavior by directing movement toward rewards and away from punishment</li>
<li><strong>Biological Foundation</strong>:
<ul>
<li>Intrinsic part of biological makeup</li>
<li>Influences not always rational</li>
<li>Evaluation through biased lens composed of:
<ul>
<li>Self-esteem</li>
<li>Personal narrative</li>
<li>Physiological state</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="behavior-modification-mechanisms" class="level5">
<h5 class="anchored" data-anchor-id="behavior-modification-mechanisms">Behavior Modification Mechanisms</h5>
<ul>
<li><p><strong>Reward Patterns</strong>:</p>
<ul>
<li><p>Multiple studies (rats and humans) show:</p>
<ul>
<li><p>Inconsistent but regular rewards create stronger behavioral changes than constant rewards</p></li>
<li><p>Example: Rat lever experiment</p>
<blockquote class="blockquote">
<p>A rat learns that a certain lever will sometimes produce food… The rat will continue to press that lever for far longer after food is no longer given than a lever that always gave food then one day just stopped.</p>
</blockquote></li>
</ul></li>
</ul></li>
<li><p><strong>Behavioral Response Factors</strong>:</p>
<ul>
<li>Actual reward/punishment</li>
<li>Perceptions of reward/punishment</li>
<li>Anticipation of outcomes</li>
<li>Memory of past experiences</li>
</ul></li>
</ul>
</section>
<section id="storage-and-flexibility" class="level5">
<h5 class="anchored" data-anchor-id="storage-and-flexibility">Storage and Flexibility</h5>
<ul>
<li><p><strong>Economic Innovation</strong>:</p>
<ul>
<li><p>Money as storage mechanism</p>
<blockquote class="blockquote">
<p>Perhaps the greatest economic innovation in human society was the invention of money, an exchangeable commodity that in effect stores the power to purchase and sell goods.</p>
</blockquote></li>
<li><p>Benefits:</p>
<ul>
<li>Flexible purchasing power</li>
<li>Protection against risky incentives</li>
<li>Choice in timing of spending</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="long-term-vs.-short-term-incentives" class="level4">
<h4 class="anchored" data-anchor-id="long-term-vs.-short-term-incentives">Long-Term vs.&nbsp;Short-Term Incentives</h4>
<section id="challenge-of-time-horizons" class="level5">
<h5 class="anchored" data-anchor-id="challenge-of-time-horizons">Challenge of Time Horizons</h5>
<ul>
<li><p><strong>Immediate vs.&nbsp;Delayed Gratification</strong>:</p>
<ul>
<li><p>Humans generally prioritize immediate rewards</p></li>
<li><p>Difficulty in valuing deferred benefits</p></li>
<li><p>Quote from Niall Ferguson’s “Civilization”:</p>
<blockquote class="blockquote">
<p>We love our grandchildren, but our great-great-grandchildren are harder to relate to.</p>
</blockquote></li>
</ul></li>
</ul>
</section>
<section id="political-impact" class="level5">
<h5 class="anchored" data-anchor-id="political-impact">Political Impact</h5>
<ul>
<li><strong>Democratic Systems</strong>:
<ul>
<li>Aristotle’s observation: Democracies governed by self-interest</li>
<li>Voter preferences:
<ul>
<li>Focus on immediate benefits</li>
<li>Less interest in long-term policies</li>
</ul></li>
<li>Political constraints:
<ul>
<li>Short election cycles</li>
<li>Frequent polling</li>
<li>Media pressure</li>
<li>Social media feedback</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="corporate-implications" class="level5">
<h5 class="anchored" data-anchor-id="corporate-implications">Corporate Implications</h5>
<ul>
<li><strong>Business Challenges</strong>:
<ul>
<li>Quarterly report pressure</li>
<li>CEO tenure and bonus structure</li>
<li>Market trend responses</li>
<li>Budget management issues:
<ul>
<li>Use-it-or-lose-it budgets lead to:
<ul>
<li>8.7% spent in final week</li>
<li>2-6x higher rate of low-quality projects</li>
<li>Variable pay tied to budget spending</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="case-study-thalidomide-tragedy" class="level4">
<h4 class="anchored" data-anchor-id="case-study-thalidomide-tragedy">Case Study: Thalidomide Tragedy</h4>
<section id="historical-context-1" class="level5">
<h5 class="anchored" data-anchor-id="historical-context-1">Historical Context</h5>
<ul>
<li><strong>Development</strong>: 1950s by West German manufacturer</li>
<li><strong>Initial Testing</strong>:
<ul>
<li>No lethal dose found in rats</li>
<li>Concluded “completely non-toxic”</li>
<li>No proper clinical trials</li>
<li>General population used as test subjects</li>
</ul></li>
</ul>
</section>
<section id="marketing-and-distribution" class="level5">
<h5 class="anchored" data-anchor-id="marketing-and-distribution">Marketing and Distribution</h5>
<ul>
<li><strong>Global Reach</strong>:
<ul>
<li>Marketed worldwide</li>
<li>Available without prescription in most countries</li>
<li>Marketed as safe as aspirin</li>
<li>Multiple brand names</li>
</ul></li>
</ul>
</section>
<section id="negative-outcomes" class="level5">
<h5 class="anchored" data-anchor-id="negative-outcomes">Negative Outcomes</h5>
<ul>
<li><strong>Health Impacts</strong>:
<ul>
<li>Permanent nerve damage</li>
<li>Severe birth defects</li>
<li>Infant mortality</li>
<li>Debilitating abnormalities</li>
</ul></li>
</ul>
</section>
<section id="corporate-response" class="level5">
<h5 class="anchored" data-anchor-id="corporate-response">Corporate Response</h5>
<ul>
<li><strong>Company Actions</strong>:
<ul>
<li>Doubled down on marketing</li>
<li>Attacked credibility of critical physicians</li>
<li>Never admitted wrongdoing</li>
<li>Out-of-court settlements</li>
<li>No criminal responsibility taken</li>
</ul></li>
</ul>
</section>
<section id="incentive-analysis" class="level5">
<h5 class="anchored" data-anchor-id="incentive-analysis">Incentive Analysis</h5>
<ul>
<li><strong>Financial Motivations</strong>:
<ul>
<li>Profit sharing for discovery team</li>
<li>High global sales</li>
<li>Partnership incentives</li>
<li>Cost savings from avoiding proper testing</li>
<li>Shareholder priorities over victim compensation</li>
</ul></li>
</ul>
</section>
</section>
<section id="understanding-incentive-power" class="level4">
<h4 class="anchored" data-anchor-id="understanding-incentive-power">Understanding Incentive Power</h4>
<section id="psychological-factors" class="level5">
<h5 class="anchored" data-anchor-id="psychological-factors">Psychological Factors</h5>
<ul>
<li><strong>Cognitive Dissonance</strong>:
<ul>
<li>Definition: Tension between conflicting ideas/beliefs</li>
<li>Self-justification process:
<ol type="1">
<li>Personal identity (“I am good”)</li>
<li>Action taken</li>
<li>Rationalization of action</li>
</ol></li>
</ul></li>
</ul>
</section>
<section id="professional-impact" class="level5">
<h5 class="anchored" data-anchor-id="professional-impact">Professional Impact</h5>
<ul>
<li><p>Quote from Tavris and Aronson:</p>
<blockquote class="blockquote">
<p>The greater danger to the public comes from the self-justifications of well-intentioned scientists and physicians who, because of their need to reduce dissonance, truly believe themselves to be above the influence of their corporate investors.</p>
</blockquote></li>
</ul>
</section>
</section>
<section id="role-of-uncertainty" class="level4">
<h4 class="anchored" data-anchor-id="role-of-uncertainty">Role of Uncertainty</h4>
<section id="motivational-aspects" class="level5">
<h5 class="anchored" data-anchor-id="motivational-aspects">Motivational Aspects</h5>
<ul>
<li><strong>Value of Uncertainty</strong>:
<ul>
<li>Can be more compelling than certainty</li>
<li>Examples:
<ul>
<li>Board games with friends</li>
<li>Gambling behavior</li>
</ul></li>
<li>Limits based on stakes involved</li>
</ul></li>
</ul>
</section>
<section id="decision-factors" class="level5">
<h5 class="anchored" data-anchor-id="decision-factors">Decision Factors</h5>
<ul>
<li><strong>Process vs.&nbsp;Outcome</strong>:
<ul>
<li>Fun/enjoyment vs.&nbsp;guaranteed results</li>
<li>Value threshold determines preference</li>
<li>Higher stakes favor certainty</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-9" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-9">Conclusion</h4>
<section id="key-takeaways-6" class="level5">
<h5 class="anchored" data-anchor-id="key-takeaways-6">Key Takeaways</h5>
<ul>
<li><p><strong>Incentive Power</strong>:</p>
<ul>
<li>Hidden drivers of behavior</li>
<li>Shape choices and actions</li>
<li>Can be subtle or obvious</li>
</ul></li>
<li><p><strong>Alignment Importance</strong>:</p>
<ul>
<li>Must match goals for success</li>
<li>Short-term vs.&nbsp;long-term balance</li>
<li>Design crucial for intended outcomes</li>
</ul></li>
<li><p><strong>Final Insight</strong>:</p>
<blockquote class="blockquote">
<p>By shaping the incentives, we shape the outcomes By aligning the incentives, we unlock the power of human potential</p>
</blockquote></li>
</ul>
</section>
</section>
</section>
<section id="tendency-to-minimize-energy-output" class="level3">
<h3 class="anchored" data-anchor-id="tendency-to-minimize-energy-output">Tendency to Minimize Energy Output</h3>
<section id="core-principles-1" class="level4">
<h4 class="anchored" data-anchor-id="core-principles-1">Core Principles</h4>
<section id="fundamental-concepts" class="level5">
<h5 class="anchored" data-anchor-id="fundamental-concepts">Fundamental Concepts</h5>
<ul>
<li><strong>Least Effort Principle</strong>: Established by Pierre-Louis Maupertuis</li>
<li><strong>Universal Application</strong>: All living beings require energy for daily functions</li>
<li><strong>Conservation Purpose</strong>: Species develop mechanisms to increase energy efficiency</li>
<li><strong>Survival Benefit</strong>: Extra energy preserved for times of increased need</li>
</ul>
</section>
<section id="natural-examples" class="level5">
<h5 class="anchored" data-anchor-id="natural-examples">Natural Examples</h5>
<ul>
<li><p>Cold-Blooded Species</p>
<ul>
<li><strong>Energy Conservation</strong>: No biological requirement to maintain stable body temperature</li>
<li><strong>Turtle Adaptations</strong>:
<ul>
<li>Can survive winters at bottom of cold water bodies without movement</li>
<li>Body parts maintain integrity in extreme temperatures</li>
<li>Advanced mechanisms for:
<ul>
<li>Directing blood flow to essential organs</li>
<li>Energy storage in nutrient-deficient environments</li>
</ul></li>
</ul></li>
</ul></li>
<li><p>Shark Efficiency</p>
<ul>
<li><strong>Structural Adaptation</strong>: Skin composed of backward-structured scales</li>
<li><strong>Benefits</strong>:
<ul>
<li>Reduces water resistance</li>
<li>Combined with wavy motion for efficient swimming</li>
<li>Enables high speeds with minimal energy expenditure</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="human-behavior-patterns" class="level4">
<h4 class="anchored" data-anchor-id="human-behavior-patterns">Human Behavior Patterns</h4>
<section id="physical-movement-patterns" class="level5">
<h5 class="anchored" data-anchor-id="physical-movement-patterns">Physical Movement Patterns</h5>
<ul>
<li><p>Desire Paths</p>
<ul>
<li><strong>Definition</strong>: Paths created by people seeking efficient routes</li>
<li><strong>Characteristics</strong>:
<ul>
<li>Cut through forests, fields, snow, and debris</li>
<li>Connect two points via shortest/easiest route</li>
</ul></li>
<li><strong>Impact</strong>:
<ul>
<li>Can damage sensitive vegetation</li>
<li>Sometimes cause environmental fractures</li>
<li>Used by planners to design better traffic flows</li>
<li>Indicate natural human movement preferences</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="cognitive-patterns" class="level5">
<h5 class="anchored" data-anchor-id="cognitive-patterns">Cognitive Patterns</h5>
<ul>
<li><p>The Lazy Brain</p>
<ul>
<li><strong>Basic Principle</strong>: Humans, like other species, are intense energy minimizers</li>
<li><strong>Heuristics</strong>:
<ul>
<li><strong>Definition</strong>: Efficiency mechanisms in thinking</li>
<li><strong>Purpose</strong>: Shortcuts developed from experience</li>
<li><strong>Application</strong>: Used for decision-making</li>
<li><strong>Example</strong>: In chess, considering 2-3 likely moves instead of millions</li>
</ul></li>
</ul></li>
<li><p>Decision-Making Process</p>
<ul>
<li><strong>Cognitive Load</strong>:
<ul>
<li>Decisions require brain power</li>
<li>Analyzing all possibilities uses significant energy</li>
<li>Cannot optimize every decision due to energy constraints</li>
</ul></li>
</ul></li>
<li><p>Satisficing</p>
<ul>
<li><strong>Definition</strong>: Searching for first option meeting minimum acceptable conditions</li>
<li><strong>Characteristics</strong>:
<ul>
<li>Saves time and energy</li>
<li>Usually produces “good enough” results</li>
<li>May not yield optimal outcomes</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="heuristic-development" class="level5">
<h5 class="anchored" data-anchor-id="heuristic-development">Heuristic Development</h5>
<ul>
<li><p>Experience-Based Heuristics</p>
<ul>
<li><strong>Most Reliable When</strong>:
<ul>
<li>Environment is stable</li>
<li>Frequent exposure occurs</li>
<li>Large sample size exists</li>
<li>Immediate unambiguous feedback available</li>
</ul></li>
<li><strong>Example</strong>: Firefighters (Gary Klein’s studies)
<ul>
<li>Develop accurate quick decisions</li>
<li>Based on consistent fire behavior</li>
<li>Improved accuracy with experience</li>
</ul></li>
</ul></li>
<li><p>Built-in Heuristics</p>
<ul>
<li><strong>Key Types</strong> (Kahneman &amp; Tversky):
<ul>
<li>Anchoring</li>
<li>Availability</li>
<li>Representativeness</li>
</ul></li>
<li><strong>Characteristics</strong>:
<ul>
<li>Innate to human brain</li>
<li>Often ineffective and biased</li>
<li>Used despite known limitations</li>
</ul></li>
</ul></li>
<li><p>Affect Heuristic</p>
<ul>
<li><strong>Definition</strong>: Mental shortcut using emotions for judgments</li>
<li><strong>Process</strong>:
<ul>
<li>Substitutes easy question (“How do I feel?”)</li>
<li>For harder question (“What do I think?”)</li>
</ul></li>
<li><strong>Usage</strong>:
<ul>
<li>Necessary for processing daily interactions</li>
<li>Requires less energy than informed analysis</li>
<li>Useful for minor decisions (e.g., choosing laundry detergent)</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="environmental-design-applications" class="level4">
<h4 class="anchored" data-anchor-id="environmental-design-applications">Environmental Design Applications</h4>
<section id="office-spaces" class="level5">
<h5 class="anchored" data-anchor-id="office-spaces">Office Spaces</h5>
<ul>
<li><p>Historical Development</p>
<ol type="1">
<li><strong>Frank Lloyd Wright’s Design (1930s)</strong>:
<ul>
<li>Johnson Wax Headquarters</li>
<li>Features:
<ul>
<li>High ceilings</li>
<li>Natural light</li>
<li>Tree-like supporting columns</li>
<li>Spread-out desk arrangement</li>
<li>Private offices on mezzanine</li>
<li>Unofficial divisions via columns and cabinets</li>
</ul></li>
</ul></li>
<li><strong>1950s Office Landscape</strong>:
<ul>
<li>German design innovation</li>
<li>Used partitions for information flow</li>
<li>Focused on minimizing collaboration energy</li>
<li>Allowed for flexible arrangement</li>
</ul></li>
<li><strong>Action Office System (1960s)</strong>:
<ul>
<li>Designer: Robert Propst</li>
<li>Features:
<ul>
<li>Flexible furniture</li>
<li>Movable dividing walls</li>
<li>Adaptable to employee needs</li>
</ul></li>
<li>Limited adoption due to cost</li>
<li>Led to cubicle farms</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="modern-office-considerations" class="level5">
<h5 class="anchored" data-anchor-id="modern-office-considerations">Modern Office Considerations</h5>
<ul>
<li><p>Open Plan Issues</p>
<ul>
<li><strong>Problems</strong>:
<ul>
<li>Increased focus effort required</li>
<li>Constant distractions</li>
<li>Reduced face-to-face interaction (up to 70% decrease)</li>
<li>Increased digital communication</li>
<li>Limited privacy</li>
<li>Superficial social interactions</li>
</ul></li>
</ul></li>
<li><p>Effective Design Principles</p>
<ul>
<li><strong>Key Requirements</strong>:
<ul>
<li>Balance between focus and movement</li>
<li>Honor energy minimization tendency</li>
<li>Provide private spaces</li>
<li>Enable natural collaboration</li>
<li>Reduce unnecessary energy expenditure</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-10" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-10">Conclusion</h4>
<ul>
<li><strong>Universal Principle</strong>: Path of least resistance guides world actions</li>
<li><strong>Dual Nature</strong>:
<ul>
<li>Helps preserve energy for times of need</li>
<li>Can hinder learning and development</li>
</ul></li>
<li><strong>Application</strong>:
<ul>
<li>Awareness of natural tendency</li>
<li>Strategic correction when value exists</li>
<li>Balance between efficiency and effectiveness</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="afterthoughts" class="level2">
<h2 class="anchored" data-anchor-id="afterthoughts">Afterthoughts</h2>
<section id="key-themes" class="level3">
<h3 class="anchored" data-anchor-id="key-themes">Key Themes</h3>
<section id="purpose-of-mental-models-1" class="level4">
<h4 class="anchored" data-anchor-id="purpose-of-mental-models-1">Purpose of Mental Models</h4>
<ul>
<li><strong>Core Function</strong>: Models provide tools for better understanding the world</li>
<li><strong>Practical Applications</strong>:
<ul>
<li>Aid in making better decisions</li>
<li>Help free up time</li>
<li>Contribute to living a more meaningful life</li>
</ul></li>
</ul>
</section>
<section id="structure-and-presentation" class="level4">
<h4 class="anchored" data-anchor-id="structure-and-presentation">Structure and Presentation</h4>
<ul>
<li><p><strong>Intentional Design</strong>:</p>
<blockquote class="blockquote">
<p>The ideas in this volume are deliberately presented without connection, leaving you, the reader, to connect them to build your own latticework of mental models.</p>
</blockquote></li>
<li><p><strong>Learning Approach</strong>:</p>
<ul>
<li>Models are presented as disconnected pieces</li>
<li>Readers must actively connect concepts</li>
<li>Building connections is essential for:
<ul>
<li>Assimilating information</li>
<li>Making knowledge usable</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="implementation-process" class="level4">
<h4 class="anchored" data-anchor-id="implementation-process">Implementation Process</h4>
<section id="learning-and-development" class="level5">
<h5 class="anchored" data-anchor-id="learning-and-development">Learning and Development</h5>
<ol type="1">
<li><strong>Initial Development</strong>:
<ul>
<li>Learn about fundamentals</li>
<li>Apply models to real-life situations</li>
<li>Learn from results</li>
</ul></li>
<li><strong>Ongoing Maintenance</strong>:
<ul>
<li>Keep using the latticework</li>
<li>Refine and update continuously</li>
<li>Remain open to new information</li>
<li>Be selective about information intake</li>
</ul></li>
</ol>
</section>
<section id="reflection-and-documentation" class="level5">
<h5 class="anchored" data-anchor-id="reflection-and-documentation">Reflection and Documentation</h5>
<ol type="1">
<li><p><strong>Journaling Recommendation</strong>:</p>
<blockquote class="blockquote">
<p>While most people assume that experience is the key to learning, the key is actually reflection.</p>
</blockquote>
<ul>
<li>Benefits:
<ul>
<li>Prompts reflection</li>
<li>Chronicles model usage</li>
<li>Records results</li>
<li>Builds reliable repertoire</li>
</ul></li>
</ul></li>
<li><p><strong>Personal Learning Method</strong>:</p>
<ul>
<li>Find effective reflection methods</li>
<li>Develop feedback mechanisms</li>
<li>Establish learning processes that work individually</li>
</ul></li>
</ol>
</section>
</section>
<section id="practical-application-tips" class="level4">
<h4 class="anchored" data-anchor-id="practical-application-tips">Practical Application Tips</h4>
<section id="immediate-implementation" class="level5">
<h5 class="anchored" data-anchor-id="immediate-implementation">Immediate Implementation</h5>
<ul>
<li><p><strong>Active Engagement</strong>:</p>
<ul>
<li><p>Reread chapters</p></li>
<li><p>Make margin notes</p></li>
<li><p>Document relevant connections</p></li>
<li><p>Take immediate action</p>
<blockquote class="blockquote">
<p>Before life gets in the way, take a step in the direction you were inspired to go.</p>
</blockquote></li>
</ul></li>
</ul>
</section>
<section id="recommended-actions" class="level5">
<h5 class="anchored" data-anchor-id="recommended-actions">Recommended Actions</h5>
<ol type="1">
<li>Pick one model to use immediately</li>
<li>Test it in practice</li>
<li>Make models part of everyday life</li>
<li>Avoid leaving concepts unused</li>
</ol>
</section>
</section>
</section>
<section id="expected-outcomes" class="level3">
<h3 class="anchored" data-anchor-id="expected-outcomes">Expected Outcomes</h3>
<section id="long-term-benefits" class="level4">
<h4 class="anchored" data-anchor-id="long-term-benefits">Long-term Benefits</h4>
<ol type="1">
<li><p><strong>Integration</strong>:</p>
<blockquote class="blockquote">
<p>These ideas will become such an integral part of the fabric of your thinking that it will be impossible to view any situation without the valuable lenses they provide.</p>
</blockquote></li>
<li><p><strong>Perspective Change</strong>:</p>
<ul>
<li>Impossible to view situations without these lenses</li>
<li>Creates powerful momentum in thinking</li>
<li>Provides valuable analytical frameworks</li>
</ul></li>
</ol>
</section>
<section id="implementation-success-indicators" class="level4">
<h4 class="anchored" data-anchor-id="implementation-success-indicators">Implementation Success Indicators</h4>
<ul>
<li>Models become natural thinking tools</li>
<li>Regular usage in everyday situations</li>
<li>Improved decision-making capacity</li>
<li>Enhanced understanding of various situations</li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>
</section>

 ]]></description>
  <category>book</category>
  <category>notes</category>
  <guid>https://christianjmills.com/posts/the-great-mental-models-book-series-notes/volume-2/</guid>
  <pubDate>Fri, 22 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 15: CUTLASS</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-015/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Notation Clarifications<br>
</li>
<li>Tensors in Cutlass<br>
</li>
<li>Layout and Coordinate Systems<br>
</li>
<li>Sub-Tiles and Memory Organization<br>
</li>
<li>Tiling<br>
</li>
<li>CuTe Framework<br>
</li>
<li>Practical Implementation and Usage</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=G6q719ck7ww">Lecture 15: CUTLASS</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<section id="talk-overview" class="level3">
<h3 class="anchored" data-anchor-id="talk-overview">Talk Overview</h3>
<ul>
<li><strong>Speaker:</strong> Eric Auld</li>
<li><strong>Topic:</strong> <strong>Cutlass</strong> - NVIDIA’s CUDA Templates for Linear Algebra Subroutines
<ul>
<li>Focuses on the <strong>conceptual understanding</strong> of Cutlass rather than the API specifics.</li>
<li>Aims to help attendees <strong>loosen the lid</strong> and get started with learning Cutlass.</li>
</ul></li>
</ul>
</section>
<section id="what-is-cutlass" class="level3">
<h3 class="anchored" data-anchor-id="what-is-cutlass">What is Cutlass</h3>
<ul>
<li><strong>Cutlass</strong> is a CUDA Templates for Linear Algebra Subroutines library developed by NVIDIA.
<ul>
<li><strong>GitHub Repository:</strong> <a href="https://github.com/NVIDIA/cutlass">NVIDIA/cutlass</a></li>
<li><strong>Authors:</strong> <a href="https://github.com/NVIDIA/cutlass/blob/main/CITATION.cff">https://github.com/NVIDIA/cutlass/blob/main/CITATION.cff</a></li>
</ul></li>
<li>It provides low-level control over GPU computations, particularly for <strong>tensor core operations</strong>.</li>
<li>Used for writing high-performance kernels for <strong>machine learning</strong> and <strong>linear algebra</strong> applications.</li>
</ul>
</section>
<section id="why-learn-cutlass" class="level3">
<h3 class="anchored" data-anchor-id="why-learn-cutlass">Why Learn Cutlass</h3>
<ul>
<li><p>Cutlass allows developers to <strong>spec out new machine learning models</strong> and test their performance.</p></li>
<li><p>It provides tools to make models <strong>performant</strong> by leveraging GPU capabilities directly.</p></li>
<li><p>Useful for exploring <strong>performance-oriented machine learning models</strong> that incorporate extensive linear algebra.</p></li>
<li><p>Understanding Cutlass is essential for working on performance-critical components like Flash Attention.</p>
<ul>
<li><strong>GitHub Repository:</strong> <a href="https://github.com/Dao-AILab/flash-attention">Dao-AILab/flash-attention</a>
<ul>
<li><strong>cutlass code:</strong> <a href="https://github.com/Dao-AILab/flash-attention/tree/main/csrc">flash-attention/csrc</a></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="recognizing-cutlass-code" class="level3">
<h3 class="anchored" data-anchor-id="recognizing-cutlass-code">Recognizing Cutlass Code</h3>
<section id="indexing-conventions" class="level4">
<h4 class="anchored" data-anchor-id="indexing-conventions">Indexing Conventions</h4>
<ul>
<li>Cutlass uses <strong>round parentheses</strong> <code>()</code> for indexing tensors, unlike the typical square brackets <code>[]</code>.</li>
<li>Uses <strong>underscores <code>_</code></strong> in indexing:
<ul>
<li>The underscore acts like the <strong>colon <code>:</code></strong> in Python for slicing.</li>
<li>Example: <code>some_tensor(_, 2)</code> selects all elements in the first dimension and the third element in the second dimension.</li>
</ul></li>
</ul>
</section>
<section id="common-functions" class="level4">
<h4 class="anchored" data-anchor-id="common-functions">Common Functions</h4>
<ul>
<li><strong>Greatest Hits Functions</strong> frequently seen in Cutlass code:
<ul>
<li><code>local_tile</code></li>
<li><code>local_partition</code></li>
<li><code>partition_D</code></li>
<li><code>partition_S</code></li>
</ul></li>
<li><strong>Underscore 3 <code>_3</code></strong>:
<ul>
<li>Represents a <strong>static integer 3</strong>.</li>
<li>The value is embodied in the type rather than the variable’s value.</li>
<li>Used for compile-time constants.</li>
</ul></li>
</ul>
</section>
</section>
<section id="library-purpose-and-context" class="level3">
<h3 class="anchored" data-anchor-id="library-purpose-and-context">Library Purpose and Context</h3>
<section id="comparison-with-other-nvidia-libraries" class="level4">
<h4 class="anchored" data-anchor-id="comparison-with-other-nvidia-libraries">Comparison with Other NVIDIA Libraries</h4>
<ul>
<li><strong>User-Friendly Libraries</strong> (Called from host):
<ul>
<li><a href="https://developer.nvidia.com/cublas">cuBLAS</a></li>
<li><a href="https://developer.nvidia.com/cudnn">cuDNN</a></li>
<li>Features:
<ul>
<li>No kernel code writing required</li>
<li>Automatic Tensor core inference</li>
<li>Some kernel fusion capabilities</li>
<li>Host-to-device communication overhead</li>
</ul></li>
</ul></li>
<li><strong>Device-Level Libraries</strong>:
<ul>
<li>Cutlass</li>
<li><a href="https://nvidia.github.io/cccl/thrust/">Thrust</a></li>
<li><a href="https://docs.nvidia.com/cuda/cub/index.html">CUB</a></li>
<li>Features:
<ul>
<li>Low-level control</li>
<li>Direct tensor core operation exposure</li>
<li>Greater flexibility for new implementations</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="when-to-use-cutlass" class="level4">
<h4 class="anchored" data-anchor-id="when-to-use-cutlass">When to Use Cutlass</h4>
<ul>
<li><strong>Primary Use Cases</strong>:
<ul>
<li>For new ML models requiring performance optimization</li>
<li>When exploring performance-oriented machine learning models with extensive linear algebra</li>
<li>When requiring lower-level control than what CUDA BLAS (cuBLAS) provides</li>
<li>For implementing and testing new model architectures</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="notation-clarifications" class="level2">
<h2 class="anchored" data-anchor-id="notation-clarifications">Notation Clarifications</h2>
<section id="interval-notation" class="level3">
<h3 class="anchored" data-anchor-id="interval-notation">Interval Notation</h3>
<ul>
<li>Uses the following notation for intervals:
<ul>
<li><code>[i..j)</code> represents the <strong>half-open interval</strong> from <code>i</code> to <code>j</code>, including <code>i</code> but excluding <code>j</code>.</li>
<li>Example: <code>[0..n)</code> includes integers from <code>0</code> up to but not including <code>n</code>.</li>
</ul></li>
</ul>
</section>
<section id="definition-of-modes" class="level3">
<h3 class="anchored" data-anchor-id="definition-of-modes">Definition of Modes</h3>
<ul>
<li><strong>Mode</strong>:
<ul>
<li>An element of a <strong>nested tuple</strong>.</li>
<li>In a nested tuple of integers, each element (which could be a tuple itself) is called a mode.</li>
<li>Important in the context of <strong>nested layouts</strong> in Cutlass.</li>
</ul></li>
</ul>
</section>
<section id="cutlass-3.0-cute" class="level3">
<h3 class="anchored" data-anchor-id="cutlass-3.0-cute">Cutlass 3.0 (CuTe)</h3>
<ul>
<li><strong>CuTe</strong> refers to <strong>Cutlass 3.0</strong>, which introduced new tensor notation.</li>
<li>Emphasizes <strong>nested structures</strong> and layouts for tensors.</li>
</ul>
</section>
</section>
<section id="tensors-in-cutlass" class="level2">
<h2 class="anchored" data-anchor-id="tensors-in-cutlass">Tensors in Cutlass</h2>
<section id="engine-pointer" class="level3">
<h3 class="anchored" data-anchor-id="engine-pointer">Engine (Pointer)</h3>
<ul>
<li>The <strong>engine</strong> of a tensor represents the <strong>underlying memory pointer</strong>.</li>
<li>It could be a pointer to <strong>global memory</strong>, <strong>shared memory</strong>, or other memory types.</li>
</ul>
</section>
<section id="layout-shape-and-stride" class="level3">
<h3 class="anchored" data-anchor-id="layout-shape-and-stride">Layout (Shape and Stride)</h3>
<ul>
<li>A tensor’s <strong>layout</strong> consists of:
<ul>
<li><strong>Shape</strong>: Specifies the allowable input coordinates.
<ul>
<li>Represented as <strong>nested integer tuples</strong>.</li>
<li>Defines the <strong>dimensions</strong> of the tensor.</li>
</ul></li>
<li><strong>Stride</strong>: Defines how to map coordinates to <strong>linear memory offsets</strong>.
<ul>
<li>Also represented as nested integer tuples.</li>
<li>Used in calculating the memory address for a given tensor coordinate.</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="layout-and-coordinate-systems" class="level2">
<h2 class="anchored" data-anchor-id="layout-and-coordinate-systems">Layout and Coordinate Systems</h2>
<section id="mapping-coordinates-to-linear-offsets" class="level3">
<h3 class="anchored" data-anchor-id="mapping-coordinates-to-linear-offsets">Mapping Coordinates to Linear Offsets</h3>
<ul>
<li>In <strong>C-style indexing</strong>, linear offsets are calculated using strides:
<ul>
<li>For a coordinate <code>(i, j)</code>, the offset is <code>i + j * M</code>.</li>
<li>For <code>(i, j, k)</code>, the offset is <code>i + j * M + k * M * N</code>.</li>
</ul></li>
<li>This can be represented as a <strong>dot product</strong>:
<ul>
<li>Offset = <code>(i, j, k) • (1, M, M*N)</code>.</li>
</ul></li>
<li>The <strong>stride vector</strong> <code>(1, M, M*N)</code> is used to map multi-dimensional indices to linear memory.</li>
</ul>
</section>
<section id="shape-and-stride-concepts" class="level3">
<h3 class="anchored" data-anchor-id="shape-and-stride-concepts">Shape and Stride Concepts</h3>
<section id="shape-definition" class="level4">
<h4 class="anchored" data-anchor-id="shape-definition">Shape Definition</h4>
<ul>
<li>Specifies allowable input coordinates</li>
<li>Uses upper bounds notation</li>
<li>Example: Shape <code>(M, N, K)</code> means:
<ul>
<li>i coordinates: [0, M)</li>
<li>j coordinates: [0, N)</li>
<li>k coordinates: [0, K)</li>
</ul></li>
</ul>
</section>
<section id="layout-notation" class="level4">
<h4 class="anchored" data-anchor-id="layout-notation">Layout Notation</h4>
<ul>
<li>Format: <code>shape:stride</code></li>
<li>Example: <code>(M,N,K):(1,M,MN)</code>
<ul>
<li>Shape component: <code>(M,N,K)</code></li>
<li>Stride component: <code>(1,M,MN)</code></li>
</ul></li>
</ul>
</section>
</section>
<section id="layout-concatenation" class="level3">
<h3 class="anchored" data-anchor-id="layout-concatenation">Layout Concatenation</h3>
<section id="basic-concatenation" class="level4">
<h4 class="anchored" data-anchor-id="basic-concatenation">Basic Concatenation</h4>
<ul>
<li>Can combine one-dimensional layouts</li>
<li>Example: <code>(3:1,2:3) = (3,2):(1,3)</code></li>
<li>Benefits:
<ul>
<li>More convenient representation</li>
<li>Keeps corresponding shape and stride values closer together</li>
</ul></li>
</ul>
</section>
</section>
<section id="nested-layouts" class="level3">
<h3 class="anchored" data-anchor-id="nested-layouts">Nested Layouts</h3>
<section id="structure" class="level4">
<h4 class="anchored" data-anchor-id="structure">Structure</h4>
<ul>
<li><strong>Flat Layout</strong>:
<ul>
<li>All dimensions are at the same level.</li>
<li>Coordinates are simple tuples.</li>
<li>Example: Shape <code>(3, 4, 2)</code>, Stride <code>(1, 3, 40)</code>.
<ul>
<li>Accepts coordinates like <code>(1,2,1)</code></li>
</ul></li>
</ul></li>
<li><strong>Nested Layout</strong>:
<ul>
<li>Dimensions are grouped into nested tuples.</li>
<li>Coordinates are nested tuples.</li>
<li>Example:
<ul>
<li>Shape <code>((3,4),2)</code>.</li>
<li>Stride <code>(1,3),40)</code>.</li>
</ul></li>
<li>The first mode is <code>(3,4)</code>, and the second mode is <code>2</code>.</li>
<li>Accepts coordinates like <code>((1,2),1)</code></li>
</ul></li>
</ul>
</section>
<section id="congruence-concept" class="level4">
<h4 class="anchored" data-anchor-id="congruence-concept">Congruence Concept</h4>
<ul>
<li><strong>Congruent</strong>: Having the same nesting structure</li>
<li>Requirements:
<ul>
<li>Shape and stride must be congruent</li>
<li>Coordinates must match the nesting structure</li>
</ul></li>
<li>Example:
<ul>
<li>Nested layout accepts coordinate like <code>(1,2),1</code></li>
<li>Flat layout accepts coordinate like <code>1,2,1</code></li>
</ul></li>
</ul>
</section>
</section>
<section id="layout-visualization" class="level3">
<h3 class="anchored" data-anchor-id="layout-visualization">Layout Visualization</h3>
<section id="purpose" class="level4">
<h4 class="anchored" data-anchor-id="purpose">Purpose</h4>
<ul>
<li>Drawing layouts helps in <strong>visualizing</strong> and <strong>reasoning</strong> about tensor layouts.</li>
<li>Not meant to provide rigorous definitions but to aid understanding.</li>
</ul>
</section>
<section id="drawing-conventions" class="level4">
<h4 class="anchored" data-anchor-id="drawing-conventions">Drawing Conventions</h4>
<ul>
<li>Positive i direction: downward</li>
<li>Positive j direction: rightward</li>
<li>Starting point: always zero</li>
<li>Compositional approach:
<ol type="1">
<li>Draw elements in first direction</li>
<li>Replicate pattern for second direction</li>
<li>Continue for additional dimensions</li>
</ol></li>
</ul>
</section>
<section id="example-simple-2d-layout" class="level4">
<h4 class="anchored" data-anchor-id="example-simple-2d-layout">Example: Simple 2D Layout</h4>
<ul>
<li><p><strong>Layout</strong>:</p>
<ul>
<li><code>shape = (3, 4)</code></li>
<li><code>stride = (1, 3)</code></li>
</ul></li>
<li><p><strong>Visualization</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-015/images/layout-visualization-example-2d.png" class="img-fluid quarto-figure quarto-figure-center figure-img" style="width:50.0%"></p>
</figure>
</div>
<ul>
<li>Along the <code>i</code> (row) direction:
<ul>
<li>Elements at offsets <code>0</code>, <code>1</code>, <code>2</code></li>
</ul></li>
<li>Along the <code>j</code> (column) direction:
<ul>
<li>Each step increases the offset by <code>3</code> (due to stride <code>3</code>).</li>
</ul></li>
<li>The overall offsets for each element can be calculated and plotted.</li>
</ul></li>
</ul>
</section>
<section id="example-3d-layout" class="level4">
<h4 class="anchored" data-anchor-id="example-3d-layout">Example: 3D Layout</h4>
<ul>
<li><p><strong>Layout</strong>:</p>
<ul>
<li><code>shape = (2, 2, 4)</code></li>
<li><code>stride = (1, 2, 4)</code></li>
</ul></li>
<li><p><strong>Visualization</strong>:<img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-015/images/layout-visualization-example-3d-2.png" class="img-fluid quarto-figure quarto-figure-center"></p>
<ul>
<li>Three dimensions: <code>i</code>, <code>j</code>, <code>k</code>.</li>
<li>Elements are offset according to strides in each dimension.</li>
<li>Helps in understanding complex memory layouts.</li>
</ul></li>
</ul>
</section>
</section>
<section id="special-stride-types" class="level3">
<h3 class="anchored" data-anchor-id="special-stride-types">Special Stride Types</h3>
<section id="layout-left" class="level4">
<h4 class="anchored" data-anchor-id="layout-left">Layout Left</h4>
<ul>
<li>Generalized <strong>column-major</strong> ordering</li>
<li>Stride calculation: Running prefix product from left</li>
<li>Example for shape <code>(A,B,C,D)</code>:
<ul>
<li>Resulting stride: <code>(1,A,AB,ABC)</code></li>
</ul></li>
</ul>
</section>
<section id="layout-right" class="level4">
<h4 class="anchored" data-anchor-id="layout-right">Layout Right</h4>
<ul>
<li>Generalized <strong>row-major</strong> ordering</li>
<li>Stride calculation: Running prefix product from right</li>
<li>Example for shape <code>(A,B,C,D)</code>:
<ul>
<li>Resulting stride: <code>(BCD,CD,D,1)</code></li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="sub-tiles-and-memory-organization" class="level2">
<h2 class="anchored" data-anchor-id="sub-tiles-and-memory-organization">Sub-Tiles and Memory Organization</h2>
<section id="sub-tile-concepts" class="level3">
<h3 class="anchored" data-anchor-id="sub-tile-concepts">Sub-Tile Concepts</h3>
<section id="basic-properties-of-sub-tiles" class="level4">
<h4 class="anchored" data-anchor-id="basic-properties-of-sub-tiles">Basic Properties of Sub-Tiles</h4>
<ul>
<li><strong>Shape</strong>: Different (smaller) than parent tensor</li>
<li><strong>Stride</strong>: Identical to parent tensor</li>
<li><strong>Base Pointer</strong>: Offset from parent tensor’s base</li>
</ul>
</section>
<section id="sub-tile-example" class="level4">
<h4 class="anchored" data-anchor-id="sub-tile-example">Sub-Tile Example</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-015/images/sub-tile-example.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<ul>
<li><strong>Parent Tensor</strong>: <code>T</code> with shape <code>(M, N)</code> and layout <code>layout_left</code> (1,M) stride.</li>
<li><strong>Sub-Tile</strong>: <code>t</code> with shape <code>(3, 5)</code> at position (5,6).</li>
<li>Maintains parent stride (1,M)</li>
<li>Base pointer offset calculation: <code>5*1 + 6*M</code></li>
</ul>
</section>
<section id="understanding-nestedness" class="level4">
<h4 class="anchored" data-anchor-id="understanding-nestedness">Understanding Nestedness</h4>
<ul>
<li><strong>Question</strong>: <em>“Are you going to explain on an example what nestedness means?”</em></li>
<li><strong>Answer</strong>:
<ul>
<li>Eric elaborated:
<ul>
<li><strong>Nested Tuples</strong>: Tuples where elements can themselves be tuples, forming a hierarchical or tree-like structure.</li>
<li><strong>Example</strong>:
<ul>
<li>A nested layout: <code>((3, 4), 2):((1,3),12)</code>
<ul>
<li>Coordinates accepted: <code>((i, j), k)</code></li>
</ul></li>
<li>Flat layout: <code>(3,4,2):(1,3,12)</code></li>
</ul></li>
<li><strong>Usage in Cutlass</strong>:
<ul>
<li>Nested modes allow for logical subdivisions of tensors, which can represent different aspects like thread arrangements and value assignments.</li>
<li>Helps in assigning threads to multi-dimensional data efficiently.</li>
</ul></li>
</ul></li>
<li><strong>Clarification</strong>:
<ul>
<li>The nesting structure must be consistent across shape, stride, and the coordinates used.</li>
<li>Nestedness facilitates operations where dimensions need to be grouped logically.</li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="qa" class="level3">
<h3 class="anchored" data-anchor-id="qa">Q&amp;A</h3>
<section id="specifying-sub-tiles-in-tensors" class="level4">
<h4 class="anchored" data-anchor-id="specifying-sub-tiles-in-tensors">Specifying Sub-Tiles in Tensors</h4>
<ul>
<li><strong>Question</strong>: <em>“How do you tile a tensor in this example? How do you specify that capital <code>T</code> is broken down into lowercase <code>t</code>s?”</em></li>
<li><strong>Answer</strong>:
<ul>
<li>Eric explained that tiling can be achieved using specific methods in Cutlass:
<ul>
<li><strong>Methods for Tiling</strong>:
<ul>
<li><strong><code>with_shape</code></strong>: Adjusts the shape of a tensor while keeping the same stride, effectively creating a sub-tile.</li>
<li><strong><code>local_tile</code></strong>: Partitions a tensor into tiles for local computation.</li>
<li><strong><code>local_partition</code></strong>: Divides a tensor among threads or warps.</li>
<li><strong>Composition</strong>:
<ul>
<li>Using the <strong>compose</strong> function to combine layouts, treating them as functions.</li>
<li>Allows creating sub-tiles by composing the parent tensor’s layout with the desired sub-tile layout.</li>
</ul></li>
</ul></li>
</ul></li>
<li><strong>Key Point</strong>:
<ul>
<li>Sub-tiles share the same stride as the parent tensor but have different shapes and base pointers.</li>
<li>The base pointer of a sub-tile is offset based on its position within the parent tensor.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="composition-at-compile-time-vs.-runtime" class="level4">
<h4 class="anchored" data-anchor-id="composition-at-compile-time-vs.-runtime">Composition at Compile Time vs.&nbsp;Runtime</h4>
<ul>
<li><strong>Question</strong>: <em>“Is adding composition of layouts adding some hardware overhead, or is it all at runtime or compile time?”</em></li>
<li><strong>Answer</strong>:
<ul>
<li>Eric explained that it could be either, depending on the situation:
<ul>
<li><strong>Compile-Time Composition</strong>:
<ul>
<li>If layouts are entirely static and composed of static integers (e.g., <code>_3</code> representing a static <code>3</code>), composition can occur at compile time.</li>
<li>Benefits include potential performance optimizations and early error detection.</li>
</ul></li>
<li><strong>Runtime Composition</strong>:
<ul>
<li>If layouts involve dynamic components (e.g., dimensions not known until runtime), composition must occur at runtime.</li>
<li>Examples include large memory allocations where sizes aren’t predetermined.</li>
</ul></li>
</ul></li>
<li><strong>Implications</strong>:
<ul>
<li>Compile-time composition can reduce overhead, but flexibility may require runtime handling.</li>
<li>Developers can balance between performance and flexibility based on their needs.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="support-for-negative-strides-in-cutlass" class="level4">
<h4 class="anchored" data-anchor-id="support-for-negative-strides-in-cutlass">Support for Negative Strides in Cutlass</h4>
<ul>
<li><strong>Question</strong>: <em>“Is it allowed in Cutlass to use negative strides?”</em></li>
<li><strong>Answer</strong>:
<ul>
<li>Eric confirmed that negative strides are allowed and elaborated:
<ul>
<li><strong>Usage</strong>:
<ul>
<li>Negative strides enable traversal of tensors in reverse order along a dimension.</li>
<li>Useful for operations like flipping tensors or accessing data in a non-standard sequence.</li>
</ul></li>
<li><strong>Considerations</strong>:
<ul>
<li>While powerful, using negative strides can be complex and requires careful handling to avoid errors.</li>
</ul></li>
<li><strong>Example</strong>:
<ul>
<li>A tensor with a negative stride in one dimension will decrement the memory offset when indexing along that dimension.</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="non-contiguous-layouts" class="level3">
<h3 class="anchored" data-anchor-id="non-contiguous-layouts">Non-Contiguous Layouts</h3>
<ul>
<li><strong>Definition</strong>:
<ul>
<li>Layouts where elements are not stored in contiguous memory locations.</li>
</ul></li>
<li><strong>Example</strong>:
<ul>
<li><strong>Stride with Gaps</strong>:
<ul>
<li><code>shape = (3)</code></li>
<li><code>stride = (2)</code></li>
<li>Offsets: <code>0</code>, <code>2</code>, <code>4</code> (skipping memory locations).</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="multiple-sub-tiles" class="level3">
<h3 class="anchored" data-anchor-id="multiple-sub-tiles">Multiple Sub-Tiles</h3>
<section id="common-properties" class="level4">
<h4 class="anchored" data-anchor-id="common-properties">Common Properties</h4>
<ul>
<li>All sub-tiles of same size have:
<ul>
<li>Identical shape</li>
<li>Identical stride</li>
<li>Different base pointers</li>
</ul></li>
</ul>
</section>
<section id="distinguishing-features" class="level4">
<h4 class="anchored" data-anchor-id="distinguishing-features">Distinguishing Features</h4>
<ul>
<li>Only differ in base pointer offset</li>
<li>Each maintains parent tensor’s memory layout pattern</li>
<li>Base pointer calculation uses parent tensor’s layout</li>
</ul>
</section>
</section>
<section id="memory-management" class="level3">
<h3 class="anchored" data-anchor-id="memory-management">Memory Management</h3>
<section id="tensor-components-review" class="level4">
<h4 class="anchored" data-anchor-id="tensor-components-review">Tensor Components Review</h4>
<ol type="1">
<li><strong>Engine</strong> (pointer/memory):
<ul>
<li>Base pointer location</li>
<li>Memory type (shared, global, etc.)</li>
</ul></li>
<li><strong>Layout</strong>:
<ul>
<li>Shape (dimensions)</li>
<li>Stride (memory pattern)</li>
</ul></li>
</ol>
</section>
<section id="bounds-checking" class="level4">
<h4 class="anchored" data-anchor-id="bounds-checking">Bounds Checking</h4>
<ul>
<li>Cutlass performs bounds checking</li>
<li>Many checks possible at compile time due to static integers</li>
<li>Type system encodes layout information</li>
</ul>
</section>
</section>
</section>
<section id="tiling" class="level2">
<h2 class="anchored" data-anchor-id="tiling">Tiling</h2>
<section id="tiling-operations" class="level3">
<h3 class="anchored" data-anchor-id="tiling-operations">Tiling Operations</h3>
<section id="basic-tiling-structure" class="level4">
<h4 class="anchored" data-anchor-id="basic-tiling-structure">Basic Tiling Structure</h4>
<ul>
<li>Division of larger tensor into smaller parts</li>
<li>Two components:
<ol type="1">
<li><strong>Outer Part</strong>: Which tile we’re examining</li>
<li><strong>Inner Part</strong>: Which element within the tile</li>
</ol></li>
</ul>
</section>
<section id="mathematical-representation" class="level4">
<h4 class="anchored" data-anchor-id="mathematical-representation">Mathematical Representation</h4>
<p>For tensor size <code>A×B×C</code> tiled by <code>a×b×c</code>: - Outer dimensions: <code>(A/a) × (B/b) × (C/c)</code> - Inner dimensions: <code>a × b × c</code></p>
</section>
</section>
<section id="partial-tiling" class="level3">
<h3 class="anchored" data-anchor-id="partial-tiling">Partial Tiling</h3>
<section id="mode-specific-tiling" class="level4">
<h4 class="anchored" data-anchor-id="mode-specific-tiling">Mode-Specific Tiling</h4>
<ul>
<li>Can tile specific dimensions while leaving others untouched</li>
<li>Example tiling modes A and C:
<ul>
<li>Outer part: <code>(A/a) × B × (C/c)</code></li>
<li>Inner part: <code>a × 1 × c</code></li>
</ul></li>
</ul>
</section>
</section>
<section id="compute-resource-tiling" class="level3">
<h3 class="anchored" data-anchor-id="compute-resource-tiling">Compute Resource Tiling</h3>
<section id="purpose-1" class="level4">
<h4 class="anchored" data-anchor-id="purpose-1">Purpose</h4>
<ul>
<li>Maps both data and compute resources</li>
<li>Common in accelerator operations</li>
<li>Example: Tensor core operations requiring specific thread counts</li>
</ul>
</section>
<section id="components-to-tile" class="level4">
<h4 class="anchored" data-anchor-id="components-to-tile">Components to Tile</h4>
<ol type="1">
<li><strong>Compute Resources</strong>:
<ul>
<li>Thread arrangements</li>
<li>Warp-level operations</li>
</ul></li>
<li><strong>Data Structures</strong>:
<ul>
<li>Memory layouts</li>
<li>Access patterns</li>
</ul></li>
</ol>
</section>
</section>
<section id="layout-division-and-composition" class="level3">
<h3 class="anchored" data-anchor-id="layout-division-and-composition">Layout Division and Composition</h3>
<section id="shape-division-concepts" class="level4">
<h4 class="anchored" data-anchor-id="shape-division-concepts">Shape Division Concepts</h4>
<ul>
<li><p><strong>Notation:</strong></p>
<ul>
<li><p>Uses circle-slash symbol (⊘) to represent division-like operation</p></li>
<li><p>Format: <code>BigShape ⊘ SmallShape</code></p></li>
</ul></li>
<li><p><strong>Convention Rules:</strong></p>
<ol type="1">
<li><p><strong>First Mode</strong> (Inner):</p>
<ul>
<li>Represents elements within a tile</li>
<li>Answers “which element in the tile?”</li>
</ul>
<ol start="2" type="1">
<li><strong>Second Mode</strong> (Outer):
<ul>
<li>Represents tile identification</li>
<li>Answers “which tile?”</li>
</ul></li>
</ol></li>
<li><p><strong>Leftover Modes</strong>:</p>
<ul>
<li>Placed in outer part</li>
<li>Represents untiled dimensions</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="layout-division-implementation" class="level4">
<h4 class="anchored" data-anchor-id="layout-division-implementation">Layout Division Implementation</h4>
<ul>
<li><p><strong>Example with Layout Left:</strong></p>
<ul>
<li>Original Shape: <code>(ABC)</code></li>
<li>Original Stride: <code>(1, A, AB)</code></li>
<li>Dividing Shape: <code>(a, b, c)</code></li>
</ul></li>
<li><p><strong>Results in Two Parts:</strong></p>
<ol type="1">
<li><strong>Inner Part</strong> (Subtile):
<ul>
<li>Shape: <code>a, b, c</code></li>
<li>Stride: Same as original <code>(1, A, AB)</code></li>
</ul></li>
<li><strong>Outer Part</strong> (Tile Selection):
<ul>
<li>Shape: <code>A/a, B/b, C/c</code></li>
<li>Stride: Original stride × small shape size</li>
<li>Calculation: <code>(1×a, A×b, AB×c)</code></li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="example-of-tiling" class="level3">
<h3 class="anchored" data-anchor-id="example-of-tiling">Example of Tiling</h3>
<ul>
<li><strong>Original Shape</strong>: <code>(M, N)</code></li>
<li><strong>Tile Shape</strong>: <code>(m, n)</code></li>
<li><strong>Outer Shape</strong>: <code>(M/m, N/n)</code></li>
<li><strong>Inner Shape</strong>: <code>(m, n)</code></li>
<li><strong>Inner Stride</strong>: Same as original stride.</li>
<li><strong>Outer Stride</strong>:
<ul>
<li>Calculated as:
<ul>
<li><code>(1 * m, M * n)</code></li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="cute-framework" class="level2">
<h2 class="anchored" data-anchor-id="cute-framework">CuTe Framework</h2>
<section id="overview-and-context" class="level3">
<h3 class="anchored" data-anchor-id="overview-and-context">Overview and Context</h3>
<section id="timeline-and-integration" class="level4">
<h4 class="anchored" data-anchor-id="timeline-and-integration">Timeline and Integration</h4>
<ul>
<li>Introduced with Cutlass 3.0</li>
<li>Released: Late 2022</li>
<li>Integrated with Hopper architecture features</li>
</ul>
</section>
<section id="framework-components" class="level4">
<h4 class="anchored" data-anchor-id="framework-components">Framework Components</h4>
<ul>
<li>Layout algebra</li>
<li>Tensor operations</li>
<li>Shape manipulation</li>
<li>Memory management</li>
</ul>
</section>
</section>
<section id="layout-algebra-concepts" class="level3">
<h3 class="anchored" data-anchor-id="layout-algebra-concepts">Layout Algebra Concepts</h3>
<section id="core-operations" class="level4">
<h4 class="anchored" data-anchor-id="core-operations">Core Operations</h4>
<ol type="1">
<li><strong>Composition</strong>:
<ul>
<li>Combines two layouts</li>
<li>Used for creating subtiles</li>
</ul></li>
<li><strong>Product Types</strong>:
<ul>
<li>Different flavors of layout multiplication</li>
<li>Includes “ranked product”</li>
</ul></li>
<li><strong>Division Operations</strong>:
<ul>
<li>Various forms of layout division</li>
<li>Used in tiling operations</li>
</ul></li>
</ol>
</section>
</section>
<section id="implementation-details" class="level3">
<h3 class="anchored" data-anchor-id="implementation-details">Implementation Details</h3>
<section id="memory-types" class="level4">
<h4 class="anchored" data-anchor-id="memory-types">Memory Types</h4>
<ul>
<li><strong>SMEM Pointer</strong>: Shared memory reference</li>
<li><strong>GMEM Pointer</strong>: Global memory reference</li>
</ul>
</section>
<section id="static-vs-dynamic-elements" class="level4">
<h4 class="anchored" data-anchor-id="static-vs-dynamic-elements">Static vs Dynamic Elements</h4>
<ul>
<li><strong>Static Elements</strong>:
<ul>
<li>Known at compile time</li>
<li>Uses underscore notation (e.g., <code>_3</code>)</li>
<li>Enables compile-time optimizations</li>
</ul></li>
<li><strong>Dynamic Elements</strong>:
<ul>
<li>Determined at runtime</li>
<li>Example: Input tensor dimensions</li>
</ul></li>
</ul>
</section>
</section>
<section id="library-architecture" class="level3">
<h3 class="anchored" data-anchor-id="library-architecture">Library Architecture</h3>
<section id="directory-structure" class="level4">
<h4 class="anchored" data-anchor-id="directory-structure">Directory Structure</h4>
<ol type="1">
<li><p><strong>Include Directory</strong>:</p>
<ul>
<li>Core library components</li>
<li>Header-only implementation</li>
</ul></li>
<li><p><strong>Arch and Atom Directories:</strong></p>
<ul>
<li><strong><code>arch</code></strong> Directory:
<ul>
<li>Contains architecture-specific implementations.</li>
<li>Includes tensor core operations using <strong>inline assembly</strong>.</li>
</ul></li>
<li><strong><code>atom</code></strong> Directory:
<ul>
<li>Contains abstractions over the architecture-specific implementations.</li>
<li>Provides templated structures for different operations.</li>
</ul></li>
</ul></li>
<li><p><strong>Architecture-Specific Code</strong>:</p>
<ul>
<li>Organized by compute capability</li>
<li>Examples:
<ul>
<li>SM80 (Ampere)</li>
<li>SM90 (Hopper)</li>
</ul></li>
</ul></li>
<li><p><strong>Operations Categories</strong>:</p>
<ul>
<li><p>Copy operations</p></li>
<li><p>Matrix Multiply Accumulate (MMA)</p></li>
<li><p>Additional linear algebra operations</p></li>
<li><p><strong>Inline Assembly</strong>:</p>
<ul>
<li><p>Low-level code directly interacts with GPU tensor cores.</p></li>
<li><p>Example operation: <a href="https://github.com/NVIDIA/cutlass/blob/8aa95dbb888be6d81c6fbf7169718c5244b53227/include/cute/arch/mma_sm80.hpp#L257"><code>SM80_16x8x4_F32TF32TF32F32_TN</code></a> for matrix multiplication.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// MMA 16x8x4 TN</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> SM80_16x8x4_F32TF32TF32F32_TN</span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-4">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">using</span> DRegisters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-5">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">using</span> ARegisters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-6">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">using</span> BRegisters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-7">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">using</span> CRegisters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb1-8"></span>
<span id="cb1-9">  CUTE_HOST_DEVICE <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span></span>
<span id="cb1-10">  fma<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span>         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> d0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span>         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> d1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span>         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> d2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span>         <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-11">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-12">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint32_t</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb1-13">      <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> c0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> c1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> c2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span>   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> c3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-14">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-15"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#if defined(CUTE_ARCH_MMA_SM80_ENABLED)</span></span>
<span id="cb1-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">asm</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">volatile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb1-17">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mma.sync.aligned.m16n8k4.row.col.f32.tf32.tf32.f32 "</span></span>
<span id="cb1-18">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{%0,  %1,  %2,  %3},"</span></span>
<span id="cb1-19">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{%4,  %5},"</span></span>
<span id="cb1-20">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{%6},"</span></span>
<span id="cb1-21">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{%7,  %8,  %9,  %10};</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb1-22">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-23">      <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb1-24">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>b0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb1-25">         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span>  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>c3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb1-26"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb1-27">    CUTE_INVALID_CONTROL_PATH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Attempting to use SM80_16x8x4_F32TF32TF32F32_TN without CUTE_ARCH_MMA_SM80_ENABLED"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-28"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb1-29">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div></li>
</ul></li>
<li><p><strong>Template Specializations</strong>:</p>
<ul>
<li>Operations are templated based on data types and compute capabilities.</li>
<li>Allows for <strong>compile-time dispatch</strong> to appropriate implementations.</li>
</ul></li>
</ul></li>
</ol>
</section>
</section>
<section id="qa-1" class="level3">
<h3 class="anchored" data-anchor-id="qa-1">Q&amp;A</h3>
<section id="availability-across-different-gpus" class="level4">
<h4 class="anchored" data-anchor-id="availability-across-different-gpus">Availability Across Different GPUs</h4>
<ul>
<li><strong>Question</strong>: <em>“Is this only available for Hopper, or can it also be used for other GPUs? The architectures look as if older GPUs would also be supported.”</em></li>
<li><strong>Answer</strong>:
<ul>
<li>Eric confirmed that Cutlass supports multiple GPU architectures:
<ul>
<li><strong>Supported Architectures</strong>:
<ul>
<li>While Cutlass provides extensive support for newer architectures like Hopper (SM90), it also supports older GPUs such as Ampere (SM80) and Volta (SM70).</li>
</ul></li>
<li><strong>Extent of Support</strong>:
<ul>
<li>Newer architectures have more features and optimizations available.</li>
<li>Some functionalities may have limited support or performance on older GPUs.</li>
</ul></li>
<li><strong>Implications for Developers</strong>:
<ul>
<li>Developers can use Cutlass across different GPU generations but should be aware of the available features and potential limitations on older hardware.</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="operations-beyond-matrix-multiplication" class="level4">
<h4 class="anchored" data-anchor-id="operations-beyond-matrix-multiplication">Operations Beyond Matrix Multiplication</h4>
<ul>
<li><strong>Question</strong>: <em>“Is Cutlass mostly about copy and matrix multiplications, or are there other linear algebra operations, like inversion of a matrix?”</em></li>
<li><strong>Answer</strong>:
<ul>
<li>Eric explained that while Cutlass focuses on fundamental operations, it is not limited to matrix multiplication:
<ul>
<li><strong>Available Operations</strong>:
<ul>
<li>Cutlass supports a variety of tensor operations, including convolutions and reductions.</li>
<li>It provides the building blocks for more complex algorithms.</li>
</ul></li>
<li><strong>Advanced Linear Algebra</strong>:
<ul>
<li>For higher-level operations like matrix inversion or solving linear systems, libraries like <strong>cuBLAS</strong> or <strong><a href="https://docs.nvidia.com/cuda/cusolver/index.html">cuSOLVER</a></strong> might be more appropriate.</li>
</ul></li>
<li><strong>Use Cases</strong>:
<ul>
<li>Cutlass is ideal for developers needing low-level control to implement custom algorithms or optimize specific operations not covered by higher-level libraries.</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="practical-implementation-and-usage" class="level2">
<h2 class="anchored" data-anchor-id="practical-implementation-and-usage">Practical Implementation and Usage</h2>
<section id="matrix-multiplication-implementation" class="level3">
<h3 class="anchored" data-anchor-id="matrix-multiplication-implementation">Matrix Multiplication Implementation</h3>
<section id="sgemm-single-precision-general-matrix-multiply" class="level4">
<h4 class="anchored" data-anchor-id="sgemm-single-precision-general-matrix-multiply">SGEMM (Single Precision General Matrix Multiply)</h4>
<ul>
<li>Source Code: <a href="https://github.com/NVIDIA/cutlass/blob/8aa95dbb888be6d81c6fbf7169718c5244b53227/examples/cute/tutorial/sgemm_1.cu#L458">examples/cute/tutorial/sgemm_1.cu</a></li>
<li><strong>Name Convention Origin</strong>:
<ul>
<li>S: Single precision</li>
<li>GE: General (dense matrices, no special structure)</li>
<li>MM: Matrix Multiplication</li>
</ul></li>
</ul>
</section>
<section id="function-parameters" class="level4">
<h4 class="anchored" data-anchor-id="function-parameters">Function Parameters</h4>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1">gemm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>transA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> transB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-2">     alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-3">     d_A<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span>get<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> ldA<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-4">     d_B<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span>get<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> ldB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-5">     beta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb2-6">     d_C<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span>get<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> ldC<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Common parameters</span></span>
<span id="cb3-2">trans_a  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Matrix A transpose flag</span></span>
<span id="cb3-3">trans_b  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Matrix B transpose flag</span></span>
<span id="cb3-4">lda      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Leading dimension of matrix A</span></span>
<span id="cb3-5">alpha    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scalar multiplier</span></span>
<span id="cb3-6">beta     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scalar multiplier for accumulation</span></span></code></pre></div>
<ul>
<li><strong>General Operation Form:</strong> <code>D = alpha * (A * B) + beta * C</code></li>
</ul>
</section>
</section>
<section id="memory-management-features" class="level3">
<h3 class="anchored" data-anchor-id="memory-management-features">Memory Management Features</h3>
<section id="memory-types-and-tags" class="level4">
<h4 class="anchored" data-anchor-id="memory-types-and-tags">Memory Types and Tags</h4>
<ul>
<li><strong>Shared Memory</strong>:
<ul>
<li>Tag: <code>smem_ptr</code></li>
<li>Used for thread block local storage</li>
</ul></li>
<li><strong>Global Memory</strong>:
<ul>
<li>Tag: <code>gmem_ptr</code></li>
<li>Used for device-wide storage</li>
</ul></li>
</ul>
</section>
</section>
<section id="example-code-structure" class="level3">
<h3 class="anchored" data-anchor-id="example-code-structure">Example Code Structure</h3>
<section id="basic-include-pattern" class="level4">
<h4 class="anchored" data-anchor-id="basic-include-pattern">Basic Include Pattern</h4>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;cute/tensor.hpp&gt;</span></span></code></pre></div>
</section>
<section id="tensor-creation" class="level4">
<h4 class="anchored" data-anchor-id="tensor-creation">Tensor Creation</h4>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Creating tensors</span></span>
<span id="cb5-2">make_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-3">make_layout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-4">make_coord<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span></code></pre></div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-015/</guid>
  <pubDate>Sun, 17 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 14: Practitioners Guide to Triton</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-014/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Overview of the Talk</li>
<li>Why and When to Use Triton<br>
</li>
<li>How to Write Triton Kernels<br>
</li>
<li>Practical Examples<br>
</li>
<li>Benchmarking<br>
</li>
<li>Auto-Tuning<br>
</li>
<li>Conclusion and Resources</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=DdTsX6DQk24">Lecture 14: Practitioners Guide to Triton</a></li>
<li><strong>Code:</strong> <a href="https://github.com/gpu-mode/lectures/tree/main/lecture_014">gpu-mode/lectures/lecture_014</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<ul>
<li><strong>Speaker</strong>: <a href="https://www.umerha.com/">Umer Adil</a>
<ul>
<li>Former <strong>management consultant</strong> until October 2023.</li>
<li>Transitioned to <strong>technical AI work</strong> focusing on <strong>open-source contributions</strong>.
<ul>
<li>Contributed to projects like <strong><a href="https://www.langchain.com/">LangChain</a></strong> and <strong><a href="https://github.com/gpt-engineer-org/gpt-engineer">GPT Engineer</a></strong>.</li>
<li>Became a <strong>maintainer</strong> for GPT Engineer.</li>
<li>Currently contributing to <strong>Hugging Face’s <a href="https://github.com/huggingface/diffusers">diffusers</a></strong>.
<ul>
<li>Implemented features like <strong>ControlNetXS</strong>, <strong>LoRAs</strong>, etc.</li>
</ul></li>
</ul></li>
<li>Contact:
<ul>
<li><strong>GitHub</strong>: <a href="https://github.com/UmerHA/">UmerHA</a></li>
<li><strong>Twitter</strong>: <a href="https://x.com/UmerHAdil"><span class="citation" data-cites="UmerHAdil">@UmerHAdil</span></a></li>
</ul></li>
<li><strong>Support Umer</strong>:
<ul>
<li>Independent open-source contributor.</li>
<li><strong>Ko-fi</strong>: <a href="https://ko-fi.com/umerha">https://ko-fi.com/umerha</a></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="overview-of-the-talk" class="level2">
<h2 class="anchored" data-anchor-id="overview-of-the-talk">Overview of the Talk</h2>
<ul>
<li><strong>Title</strong>: A Practitioner’s Guide to Triton</li>
<li><strong>Agenda</strong>:
<ul>
<li><strong>Why and When to Use Triton</strong></li>
<li><strong>How to Write Triton Kernels</strong>
<ul>
<li><strong>Programming Model</strong></li>
</ul></li>
<li><strong>Practical Examples</strong>:
<ul>
<li>Copying a Tensor</li>
<li>Grayscaling an Image</li>
<li>Fast Matrix-Matrix Multiplication Kernel</li>
</ul></li>
<li><strong>Benchmarking and Auto-Tuning</strong>
<ul>
<li>Performance Measurement</li>
<li>Kernel Optimization</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="why-and-when-to-use-triton" class="level2">
<h2 class="anchored" data-anchor-id="why-and-when-to-use-triton">Why and When to Use Triton</h2>
<section id="what-is-triton" class="level3">
<h3 class="anchored" data-anchor-id="what-is-triton">What is Triton?</h3>
<ul>
<li><strong>Triton</strong> is a language for programming <strong>GPUs</strong>.
<ul>
<li>More convenient than <strong>CUDA</strong>.</li>
<li>Allows writing <strong>Python-like code</strong> that compiles to <strong>PTX</strong> (Parallel Thread Execution).
<ul>
<li>PTX is the same intermediate representation used by CUDA.</li>
</ul></li>
</ul></li>
<li><strong>Triton Compiler</strong>:
<ul>
<li><strong>Optimizes code</strong> by rearranging it for better performance without changing its meaning.</li>
<li>Targets the <strong>same hardware</strong> as CUDA.</li>
</ul></li>
</ul>
</section>
<section id="comparing-triton-to-cuda" class="level3">
<h3 class="anchored" data-anchor-id="comparing-triton-to-cuda">Comparing Triton to CUDA</h3>
<ul>
<li><strong>CUDA</strong>:
<ul>
<li>Like a <strong>high-end camera</strong>.
<ul>
<li>Offers <strong>thousands of knobs</strong> for fine-grained control.</li>
<li>Achieves the <strong>absolute best performance</strong>.</li>
<li><strong>Harder</strong> to write and debug.</li>
</ul></li>
</ul></li>
<li><strong>Triton</strong>:
<ul>
<li>Like a <strong>high-end smartphone camera</strong>.
<ul>
<li><strong>Easier</strong> to use with fewer controls.</li>
<li>Provides <strong>very good performance</strong> with less effort.</li>
<li><strong>Easier</strong> to write and debug.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="torch.compile-vs.-triton" class="level3">
<h3 class="anchored" data-anchor-id="torch.compile-vs.-triton"><code>torch.compile()</code> vs.&nbsp;Triton</h3>
<ul>
<li><strong><code>torch.compile()</code></strong>:
<ul>
<li>Optimizes your <strong>PyTorch code</strong> but not the underlying <strong>kernels</strong>.</li>
<li>Changes your code to make the best use of existing GPU kernels.</li>
<li>Sometimes writes simple new kernels using <strong>Triton</strong>.</li>
</ul></li>
<li><strong>Triton</strong>:
<ul>
<li>Allows writing <strong>custom kernels</strong> for performance-critical parts.</li>
<li>Offers more control over kernel behavior.</li>
</ul></li>
</ul>
</section>
<section id="when-to-use-triton" class="level3">
<h3 class="anchored" data-anchor-id="when-to-use-triton">When to Use Triton</h3>
<ul>
<li><strong>Optimization Steps</strong>:
<ol type="1">
<li><strong>Use <code>torch.compile()</code></strong>:
<ul>
<li>Start by using <code>torch.compile()</code> to optimize your code.</li>
</ul></li>
<li><strong>Adapt Your Code</strong>:
<ul>
<li>Rewrite code to be more suitable for <code>torch.compile()</code>.
<ul>
<li>E.g., eliminate <strong>graph breaks</strong> to enable <strong>CUDA graphs</strong>.</li>
</ul></li>
</ul></li>
<li><strong>Profile and Identify Bottlenecks</strong>:
<ul>
<li>Find slow parts of your code using profiling tools.</li>
<li>Write <strong>custom Triton kernels</strong> for these parts.</li>
</ul></li>
<li><strong>Consider CUDA</strong>:
<ul>
<li>If still not fast enough, write custom <strong>CUDA kernels</strong>.</li>
</ul></li>
</ol></li>
<li><strong>Note</strong>: For maximum performance from the start, you may choose <strong>CUDA</strong> directly.</li>
</ul>
</section>
<section id="rough-edges-in-triton" class="level3">
<h3 class="anchored" data-anchor-id="rough-edges-in-triton">Rough Edges in Triton</h3>
<ul>
<li><strong>New-ish Project</strong>:
<ul>
<li>Contains <strong>rough edges</strong>; code may not behave as expected.</li>
<li>Expected to become more polished over time.</li>
</ul></li>
<li><strong>Recommendation</strong>:
<ul>
<li><strong>Debugging</strong> is important; use “simulator mode” when possible.</li>
<li>Be aware of limitations on older GPUs or with certain operations.</li>
</ul></li>
</ul>
</section>
</section>
<section id="how-to-write-triton-kernels" class="level2">
<h2 class="anchored" data-anchor-id="how-to-write-triton-kernels">How to Write Triton Kernels</h2>
<section id="debugging-triton-kernels" class="level3">
<h3 class="anchored" data-anchor-id="debugging-triton-kernels">Debugging Triton Kernels</h3>
<ul>
<li><p><strong>Simulator Mode</strong>:</p>
<ul>
<li>Set environment variable <code>TRITON_INTERPRET='1'</code>.
<ul>
<li>Enables debugging by running kernels on the <strong>CPU</strong>.</li>
</ul></li>
</ul></li>
<li><p><strong>Advantages</strong>:</p>
<ul>
<li><strong>Debug</strong> and <strong>print</strong> variables like in CPU programs.</li>
<li>Easier to <strong>set breakpoints</strong> and inspect program flow.</li>
</ul></li>
<li><p><strong>Utility Functions</strong>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb1-2"></span>
<span id="cb1-3">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TRITON_INTERPRET'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># needs to be set *before* triton is imported</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton</span>
<span id="cb1-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton.language <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl</span>
<span id="cb1-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.core.debugger <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> set_trace</span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> test_pid_conds(conds, pid_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Test if conditions on program IDs (PIDs) are fulfilled.</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb1-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        conds (str): String containing conditions to check. Multiple conditions are separated by commas.</span></span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                     Each condition consists of an operator and a number.</span></span>
<span id="cb1-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pid_0 (list): First program ID value in a single-element list. Default: [0]</span></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pid_1 (list): Second program ID value in a single-element list. Default: [0]</span></span>
<span id="cb1-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pid_2 (list): Third program ID value in a single-element list. Default: [0]</span></span>
<span id="cb1-19"></span>
<span id="cb1-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Examples:</span></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        '=0'     -&gt; Checks if pid_0 equals 0</span></span>
<span id="cb1-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        ',&gt;1'    -&gt; Checks if pid_1 is greater than 1</span></span>
<span id="cb1-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        '&gt;1,=0'  -&gt; Checks if pid_0 &gt; 1 AND pid_1 = 0</span></span>
<span id="cb1-24"></span>
<span id="cb1-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb1-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bool: True if all conditions are met, False otherwise</span></span>
<span id="cb1-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract PID values from lists</span></span>
<span id="cb1-29">    pids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pid_0[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_1[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_2[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb1-30"></span>
<span id="cb1-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove spaces and split conditions by comma</span></span>
<span id="cb1-32">    conds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> conds.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>).split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">','</span>)</span>
<span id="cb1-33"></span>
<span id="cb1-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check each condition against corresponding PID</span></span>
<span id="cb1-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (cond, pid) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(conds, pids)):</span>
<span id="cb1-36">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cond <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>: <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Skip empty conditions</span></span>
<span id="cb1-37"></span>
<span id="cb1-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split condition into operator and threshold value</span></span>
<span id="cb1-39">        op, threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cond[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(cond[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:])</span>
<span id="cb1-40"></span>
<span id="cb1-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate operator</span></span>
<span id="cb1-42">        valid_ops <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&gt;='</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;='</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'!='</span>]</span>
<span id="cb1-43">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> op <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> valid_ops:</span>
<span id="cb1-44">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ValueError</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rules may only use these ops: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>valid_ops<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">. Invalid rule: '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cond<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'."</span>)</span>
<span id="cb1-45"></span>
<span id="cb1-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert '=' to '==' for Python evaluation</span></span>
<span id="cb1-47">        op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'=='</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> op <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> op</span>
<span id="cb1-48"></span>
<span id="cb1-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Evaluate condition</span></span>
<span id="cb1-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">eval</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>op<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>threshold<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>): </span>
<span id="cb1-51">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb1-52"></span>
<span id="cb1-53">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span></code></pre></div>
<ul>
<li><p><strong><code>check_tensors_gpu_ready</code></strong>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> check_tensors_gpu_ready(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tensors):</span>
<span id="cb2-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Verify that all input tensors are contiguous and on GPU.</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        *tensors: Variable number of PyTorch tensors to check</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Raises:</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        AssertionError: If any tensor is not contiguous or not on GPU</span></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb2-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tensors:</span>
<span id="cb2-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> t.is_contiguous(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A tensor is not contiguous"</span></span>
<span id="cb2-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Skip GPU check if in simulator mode</span></span>
<span id="cb2-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TRITON_INTERPRET'</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span>:</span>
<span id="cb2-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> t.is_cuda, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A tensor is not on cuda"</span></span></code></pre></div>
<ul>
<li>Ensure data is ready for GPU execution.
<ol type="1">
<li>Assert all tensors are contiguous in memory</li>
<li>Assert all tensors are on GPU, if not simulating</li>
</ol></li>
</ul></li>
<li><p><strong><code>print_if</code></strong>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> print_if(txt, conds, pid_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb3-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Print text if specified PID conditions are met.</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Useful for debugging specific threads in GPU kernels.</span></span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        txt (str): Text to print</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        conds (str): Conditions string (same format as test_pid_conds)</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pid_0, pid_1, pid_2 (list): Program ID values to check</span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb3-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> test_pid_conds(conds, pid_0, pid_1, pid_2):</span>
<span id="cb3-12">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(txt)</span></code></pre></div>
<ul>
<li>Output variable values for debugging, depending on conditions on PIDs</li>
</ul></li>
<li><p><strong><code>breakpoint_if</code></strong>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> breakpoint_if(conds, pid_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], pid_2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb4-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Set a breakpoint if specified PID conditions are met.</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Useful for debugging specific threads in GPU kernels.</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        conds (str): Conditions string (same format as test_pid_conds)</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pid_0, pid_1, pid_2 (list): Program ID values to check</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> test_pid_conds(conds, pid_0, pid_1, pid_2):</span>
<span id="cb4-11">        set_trace()</span></code></pre></div>
<ul>
<li>Pause execution at specific points, depending on conditions on PIDs</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="programming-model" class="level3">
<h3 class="anchored" data-anchor-id="programming-model">Programming Model</h3>
<section id="cuda-vs.-triton" class="level4">
<h4 class="anchored" data-anchor-id="cuda-vs.-triton">CUDA vs.&nbsp;Triton</h4>
<ul>
<li><strong>CUDA</strong>:
<ul>
<li><strong>Two-tiered Decomposition</strong>:
<ul>
<li><strong>Blocks</strong>: Groups of threads.</li>
<li><strong>Threads</strong>: Operate on <strong>scalar values</strong>.</li>
</ul></li>
<li>Threads within a block share the same <strong>Streaming Multiprocessor (SM)</strong> and <strong>shared memory</strong>.</li>
</ul></li>
<li><strong>Triton</strong>:
<ul>
<li><strong>One-tiered Decomposition</strong>:
<ul>
<li><strong>Programs</strong> (equivalent to blocks in CUDA).</li>
</ul></li>
<li>Operates on <strong>vectors</strong> instead of scalars.</li>
<li><strong>Vectorized Operations</strong>:
<ul>
<li>All operations (loading, computing, storing) are performed on vectors.</li>
</ul></li>
<li>No explicit management of threads or shared memory.</li>
</ul></li>
</ul>
</section>
<section id="example-adding-two-vectors" class="level4">
<h4 class="anchored" data-anchor-id="example-adding-two-vectors">Example: Adding Two Vectors</h4>
<ul>
<li><p><strong>Task</strong>:</p>
<ul>
<li>Add vectors <strong>X</strong> and <strong>Y</strong> of size <strong>8</strong> to produce <strong>Z</strong>.</li>
</ul></li>
<li><p><strong>CUDA Approach</strong>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_cuda_k(x, y, z, n, bs):</span>
<span id="cb5-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A simplified Python representation of a CUDA kernel that adds two vectors element by element.</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function demonstrates how parallel processing works in CUDA, where multiple blocks and</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    threads process different parts of the data simultaneously.</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x (array): First input vector to be added</span></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        y (array): Second input vector to be added</span></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        z (array): Output vector where results will be stored</span></span>
<span id="cb5-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n (int): Total size of the input vectors</span></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs (int): Block size - number of threads per block</span></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                 (determines how many elements each block processes)</span></span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Example:</span></span>
<span id="cb5-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        If n = 8 and bs = 4:</span></span>
<span id="cb5-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        - We'll have 2 blocks (block_id: 0,1)</span></span>
<span id="cb5-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        - Each block has 4 threads (thread_id: 0,1,2,3)</span></span>
<span id="cb5-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        - Each thread processes one element</span></span>
<span id="cb5-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        block 0 handles indices 0-3, block 1 handles indices 4-7</span></span>
<span id="cb5-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb5-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># In CUDA, these values would be automatically set based on the GPU's</span></span>
<span id="cb5-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># thread and block configuration. Here they're placeholders.</span></span>
<span id="cb5-24">    block_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ...  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block ID (e.g., 0 or 1 if we have 2 blocks)</span></span>
<span id="cb5-25">    thread_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ... <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Thread ID within the block (e.g., 0,1,2,3 if block size is 4)</span></span>
<span id="cb5-26"></span>
<span id="cb5-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate which element this specific thread should process</span></span>
<span id="cb5-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: If block_id=1, bs=4, thread_id=2:</span></span>
<span id="cb5-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># offs = 1 * 4 + 2 = 6 (this thread processes the 7th element)</span></span>
<span id="cb5-30">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> block_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> thread_id</span>
<span id="cb5-31"></span>
<span id="cb5-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Only process if we're within the vector bounds</span></span>
<span id="cb5-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This check is necessary because the number of threads might be more</span></span>
<span id="cb5-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># than the actual data we need to process</span></span>
<span id="cb5-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n:</span>
<span id="cb5-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Each thread reads its assigned values from the input vectors</span></span>
<span id="cb5-37">        x_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[offs]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get value from first input vector</span></span>
<span id="cb5-38">        y_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[offs]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get value from second input vector</span></span>
<span id="cb5-39"></span>
<span id="cb5-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform the addition operation</span></span>
<span id="cb5-41">        z_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y_value</span>
<span id="cb5-42"></span>
<span id="cb5-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the result in the output vector</span></span>
<span id="cb5-44">        z[offs] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z_value</span>
<span id="cb5-45"></span>
<span id="cb5-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note: In actual CUDA programming, all variables above are scalars</span></span>
<span id="cb5-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (single values, not arrays). Each thread works with just one element,</span></span>
<span id="cb5-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># but many threads run in parallel to process the entire array quickly.</span></span></code></pre></div>
<ul>
<li>Use <strong>2 blocks</strong> with <strong>4 threads</strong> each (block size of 4).</li>
<li>Each thread computes on a <strong>scalar value</strong>.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/2_cuda_variables.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div></li>
<li><p><strong>Triton Approach</strong>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> add_triton_k(x, y, z, n, bs):</span>
<span id="cb6-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A representation of a Triton kernel that adds two vectors element by element.</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Unlike CUDA, Triton operates on vectors (groups of elements) rather than individual scalars,</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    which can lead to more efficient code execution.</span></span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x (array): First input vector to be added</span></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        y (array): Second input vector to be added</span></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        z (array): Output vector where results will be stored</span></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n (int): Total size of the input vectors</span></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs (int): Block size - number of elements to process in each block</span></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                 (This determines the size of the vectors we operate on)</span></span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Key Differences from CUDA:</span></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Triton processes vectors (multiple elements at once) instead of single values</span></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Operations are vectorized, meaning they work on entire arrays simultaneously</span></span>
<span id="cb6-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - No explicit thread_id needed as Triton handles multiple elements per block</span></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb6-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the block ID for this kernel instance</span></span>
<span id="cb6-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tl.program_id(0) is Triton's way of identifying which block we're processing</span></span>
<span id="cb6-22">    block_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: 0 or 1 if processing in two blocks</span></span>
<span id="cb6-23"></span>
<span id="cb6-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a vector of offsets for this block</span></span>
<span id="cb6-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># tl.arange(0, bs) creates a vector like [0, 1, 2, ..., bs-1]</span></span>
<span id="cb6-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For example, if block_id=1 and bs=4:</span></span>
<span id="cb6-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># offs = 4 + [0,1,2,3] = [4,5,6,7]</span></span>
<span id="cb6-28">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> block_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bs)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Vector of indices to process</span></span>
<span id="cb6-29"></span>
<span id="cb6-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a mask for valid elements</span></span>
<span id="cb6-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This returns a vector of boolean values</span></span>
<span id="cb6-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: if n=6 and offs=[4,5,6,7], mask=[True,True,False,False]</span></span>
<span id="cb6-33">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Vector of bools showing which elements are valid</span></span>
<span id="cb6-34"></span>
<span id="cb6-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load multiple elements at once from input vectors</span></span>
<span id="cb6-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># x[offs] loads multiple values in parallel</span></span>
<span id="cb6-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: if offs=[4,5,6,7], this loads four elements at once</span></span>
<span id="cb6-38">    x_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x[offs]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load vector of values from first input</span></span>
<span id="cb6-39">    y_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y[offs]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load vector of values from second input</span></span>
<span id="cb6-40"></span>
<span id="cb6-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform vectorized addition</span></span>
<span id="cb6-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This adds entire vectors element-wise in one operation</span></span>
<span id="cb6-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example: [1,2,3,4] + [5,6,7,8] = [6,8,10,12]</span></span>
<span id="cb6-44">    z_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y_value  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add vectors element-wise</span></span>
<span id="cb6-45"></span>
<span id="cb6-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store results back to memory</span></span>
<span id="cb6-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Writes multiple elements at once</span></span>
<span id="cb6-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The mask ensures we only write valid results</span></span>
<span id="cb6-49">    z[offs] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> z_value  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store vector of results</span></span>
<span id="cb6-50"></span>
<span id="cb6-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note: All operations above work on vectors (multiple elements at once)</span></span>
<span id="cb6-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is more efficient than CUDA's scalar operations because:</span></span>
<span id="cb6-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Fewer memory transactions are needed</span></span>
<span id="cb6-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Vector operations can utilize SIMD instructions</span></span>
<span id="cb6-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Less overhead from individual thread management</span></span></code></pre></div>
<ul>
<li>Use <strong>2 programs</strong> (no threads).</li>
<li>Each program operates on a <strong>vector</strong> of size <strong>4</strong>.</li>
<li><strong>Offsets</strong> and <strong>masks</strong> are vectors.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/3_triton_variables.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div></li>
</ul>
</section>
<section id="jargon" class="level4">
<h4 class="anchored" data-anchor-id="jargon">Jargon</h4>
<ul>
<li><strong>Program</strong>:
<ul>
<li>A kernel instance processing a block of data.</li>
</ul></li>
<li><strong>PID (Program ID)</strong>:
<ul>
<li>Equivalent to <strong>Block ID</strong> in CUDA.</li>
</ul></li>
<li><strong>Vectorized Operations</strong>:
<ul>
<li>Simultaneous operations on multiple data points.</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="practical-examples" class="level2">
<h2 class="anchored" data-anchor-id="practical-examples">Practical Examples</h2>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton.language <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl</span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> cdiv(n, d):</span>
<span id="cb7-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Compute ceiling division between two numbers.</span></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n: Numerator</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        d: Denominator</span></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Ceiling division result</span></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb7-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> d</span></code></pre></div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>])</span>
<span id="cb8-2">y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb8-3"></span>
<span id="cb8-4">x, y, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>y</span></code></pre></div>
<pre class="text"><code>(tensor([1, 2, 3, 4, 5, 6]),
 tensor([0, 1, 0, 1, 0, 1]),
 tensor([1, 3, 3, 5, 5, 7]))</code></pre>
<section id="example-1-copying-a-tensor" class="level3">
<h3 class="anchored" data-anchor-id="example-1-copying-a-tensor">Example 1: Copying a Tensor</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> copy(x, bs, kernel_fn):</span>
<span id="cb10-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Launch a Triton kernel to copy data from one GPU tensor to another.</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb10-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x: Input tensor to copy from</span></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs: Block size - number of elements processed per GPU thread block</span></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        kernel_fn: Triton kernel function to execute</span></span>
<span id="cb10-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        z: New tensor containing copied data</span></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb10-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create output tensor with same properties as input</span></span>
<span id="cb10-14">    z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros_like(x)</span>
<span id="cb10-15">    </span>
<span id="cb10-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify tensors are GPU-ready</span></span>
<span id="cb10-17">    check_tensors_gpu_ready(x, z)</span>
<span id="cb10-18">    </span>
<span id="cb10-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate grid dimensions for GPU execution</span></span>
<span id="cb10-20">    n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.numel()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Total number of elements</span></span>
<span id="cb10-21">    n_blocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cdiv(n, bs)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of thread blocks needed</span></span>
<span id="cb10-22">    grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (n_blocks,)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1D grid configuration</span></span>
<span id="cb10-23">    </span>
<span id="cb10-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Launch kernel on GPU</span></span>
<span id="cb10-25">    kernel_fn[grid](x, z, n, bs)</span>
<span id="cb10-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> z</span></code></pre></div>
<section id="objective" class="level4">
<h4 class="anchored" data-anchor-id="objective">Objective</h4>
<ul>
<li>Copy tensor <strong>X</strong> of shape <strong>N</strong> to tensor <strong>Z</strong>.</li>
</ul>
</section>
<section id="steps" class="level4">
<h4 class="anchored" data-anchor-id="steps">Steps</h4>
<ol type="1">
<li><strong>Define Kernel</strong>:
<ul>
<li>Use <code>@triton.jit</code> decorator.</li>
<li>Function arguments are pointers to tensors and size parameters.</li>
</ul></li>
<li><strong>Calculate Offsets</strong>:
<ul>
<li>Compute offsets using <strong>PID</strong> and <strong>block size</strong>.</li>
<li><code>offsets = pid * block_size + tl.arange(0, block_size)</code></li>
</ul></li>
<li><strong>Create Mask</strong>:
<ul>
<li>Prevent out-of-bounds access.</li>
<li><code>mask = offsets &lt; N</code></li>
</ul></li>
<li><strong>Load and Store Data</strong>:
<ul>
<li>Load data from <strong>X</strong>: <code>x = tl.load(X + offsets, mask=mask)</code></li>
<li>Store data to <strong>Z</strong>: <code>tl.store(Z + offsets, x, mask=mask)</code></li>
</ul></li>
<li><strong>Launch Kernel</strong>:
<ul>
<li>Determine grid size: <code>grid = (num_blocks,)</code></li>
<li>Call kernel with <code>grid</code> and <code>block_size</code>.</li>
</ul></li>
</ol>
</section>
<section id="debugging" class="level4">
<h4 class="anchored" data-anchor-id="debugging">Debugging</h4>
<ul>
<li><p><strong>Intentional Bug</strong>: Incorrect offset calculation</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Basic kernel with incorrect offset calculation</span></span>
<span id="cb11-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This decorator converts the Python function into GPU code</span></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> copy_k(x_ptr, z_ptr, n, bs: tl.constexpr):</span>
<span id="cb11-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Initial version of copy kernel - demonstrates common mistake.</span></span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Important Notes:</span></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - The @triton.jit decorator transforms this Python function into GPU code</span></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Only a limited set of operations are allowed inside GPU kernels:</span></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        * Basic arithmetic and logic operations are allowed</span></span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        * Python print() and debugging tools like breakpoints are NOT allowed</span></span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        * Use specialized Triton functions for GPU operations</span></span>
<span id="cb11-13"></span>
<span id="cb11-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb11-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x_ptr: Pointer to input tensor data (Triton automatically converts tensor to pointer)</span></span>
<span id="cb11-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        z_ptr: Pointer to output tensor data</span></span>
<span id="cb11-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n: Total number of elements</span></span>
<span id="cb11-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs: Block size (marked as compile-time constant with tl.constexpr)</span></span>
<span id="cb11-19"></span>
<span id="cb11-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Note: This version has a bug - it processes the same elements in each block!</span></span>
<span id="cb11-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb11-22">    pid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current block ID</span></span>
<span id="cb11-23">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bs)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creates offsets [0, 1, ..., bs-1]</span></span>
<span id="cb11-24">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prevent out-of-bounds access</span></span>
<span id="cb11-25">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load input values</span></span>
<span id="cb11-26">    tl.store(z_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, x, mask)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store to output</span></span>
<span id="cb11-27"></span>
<span id="cb11-28">    print_if(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'pid = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | offs = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>offs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, mask = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mask<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, x = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> copy(x, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, kernel_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>copy_k)</span></code></pre></div>
<pre class="text"><code>pid = [0] | offs = [0 1], mask = [ True  True], x = [1 2]
pid = [1] | offs = [0 1], mask = [ True  True], x = [1 2]
pid = [2] | offs = [0 1], mask = [ True  True], x = [1 2]</code></pre>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">z</span></code></pre></div>
<pre class="text"><code>tensor([1, 2, 0, 0, 0, 0])</code></pre>
<ul>
<li>Incorrectly calculating offsets without considering <strong>PID</strong>.</li>
<li>Only the first block of data is copied.</li>
</ul></li>
<li><p><strong>Intentional Bug</strong>: Incorrect stride calculation</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Incorrect stride calculation</span></span>
<span id="cb16-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> copy_k(x_ptr, z_ptr, n, bs: tl.constexpr):</span>
<span id="cb16-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Second version - demonstrates another common mistake.</span></span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Key Concepts:</span></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - When we pass a torch tensor to the kernel, Triton automatically converts it</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      to a pointer to its first element (that's why we receive x_ptr, not x)</span></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - GPU kernels run in parallel across many blocks, so correct memory access</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      patterns are crucial</span></span>
<span id="cb16-12"></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Note: This version incorrectly uses 'n' instead of 'bs' for stride calculation,</span></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    causing blocks to process wrong sections of memory.</span></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb16-16">    pid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-17">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bs)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Wrong! Stride should use 'bs', not 'n'</span></span>
<span id="cb16-18">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n</span>
<span id="cb16-19">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask)</span>
<span id="cb16-20">    tl.store(z_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, x, mask)</span>
<span id="cb16-21"></span>
<span id="cb16-22">    print_if(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'pid = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | offs = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>offs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, mask = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mask<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, x = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> copy(x, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, kernel_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>copy_k)</span></code></pre></div>
<pre class="text"><code>pid = [0] | offs = [0 1], mask = [ True  True], x = [1 2]
pid = [1] | offs = [6 7], mask = [False False], x = [0 0]
pid = [2] | offs = [12 13], mask = [False False], x = [0 0]</code></pre></li>
<li><p><strong>Solution</strong>:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Correct implementation</span></span>
<span id="cb19-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb19-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> copy_k(x_ptr, z_ptr, n, bs: tl.constexpr):</span>
<span id="cb19-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Final correct version of the copy kernel.</span></span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    GPU Kernel Rules and Concepts:</span></span>
<span id="cb19-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    1. The @triton.jit decorator converts this Python function into GPU code</span></span>
<span id="cb19-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    2. Inside GPU kernels:</span></span>
<span id="cb19-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       - You can't use regular Python print() or debuggers</span></span>
<span id="cb19-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       - You must use special Triton functions (tl.*) for operations</span></span>
<span id="cb19-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       - Tensor inputs are automatically converted to memory pointers</span></span>
<span id="cb19-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    3. Each block processes a different chunk of data in parallel:</span></span>
<span id="cb19-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       - Block 0 processes elements [0:bs]</span></span>
<span id="cb19-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       - Block 1 processes elements [bs:2*bs]</span></span>
<span id="cb19-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">       - Block 2 processes elements [2*bs:3*bs]</span></span>
<span id="cb19-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb19-18">    pid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current block ID</span></span>
<span id="cb19-19">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bs)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correct offsets for this block</span></span>
<span id="cb19-20">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prevent out-of-bounds access</span></span>
<span id="cb19-21">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load input values</span></span>
<span id="cb19-22">    tl.store(z_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, x, mask)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store to output</span></span>
<span id="cb19-23"></span>
<span id="cb19-24">    print_if(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'pid = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | offs = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>offs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, mask = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mask<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, x = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>x<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> copy(x, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, kernel_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>copy_k)</span></code></pre></div>
<pre class="text"><code>pid = [0] | offs = [0 1], mask = [ True  True], x = [1 2]
pid = [1] | offs = [2 3], mask = [ True  True], x = [3 4]
pid = [2] | offs = [4 5], mask = [ True  True], x = [5 6]</code></pre>
<ul>
<li>Adjust offsets to include <code>pid * block_size</code>.</li>
</ul></li>
</ul>
</section>
<section id="key-takeaways" class="level4">
<h4 class="anchored" data-anchor-id="key-takeaways">Key Takeaways</h4>
<ul>
<li><strong>Offset Calculation</strong> is crucial.</li>
<li>Use <strong>masks</strong> to handle data boundaries.</li>
<li><strong>Debugging</strong> is facilitated by simulator mode.</li>
</ul>
</section>
</section>
<section id="example-2-grayscaling-an-image" class="level3">
<h3 class="anchored" data-anchor-id="example-2-grayscaling-an-image">Example 2: Grayscaling an Image</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Umer mentioned needing to restart the notebook kernel before running this example because:</p>
<blockquote class="blockquote">
<ol type="1">
<li><em>torchvision can’t be imported, probably due to a circular dependency. -&gt; I currently don’t know why, need to dig deeper.</em></li>
<li><em>the simulated triton kernel below fails, because a float can’t be mutliplied to a uint vector -&gt; Works on GPU w/o simulation, so seems to be a <code>TRITON_INTERPRET</code> bug.</em></li>
</ol>
</blockquote>
<p>However, the underlying issues seem to have been resolved in more recent updates.</p>
</div>
</div>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import required libraries</span></span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb22-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb22-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> urllib.request <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> urlretrieve  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For downloading files from URLs</span></span>
<span id="cb22-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb22-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb22-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensor</span>
<span id="cb22-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tv</span>
<span id="cb22-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms.functional <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tvf</span>
<span id="cb22-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb22-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># GPU acceleration library</span></span>
<span id="cb22-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton.language <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl</span></code></pre></div>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define image URL and download if not already present</span></span>
<span id="cb23-2">url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Cute_dog.jpg/1600px-Cute_dog.jpg?20140729055059'</span></span>
<span id="cb23-3">path_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'puppy.jpg'</span>)</span>
<span id="cb23-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> path_img.exists():</span>
<span id="cb23-5">    urlretrieve(url, path_img)</span></code></pre></div>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the image using torchvision</span></span>
<span id="cb24-2">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> io.read_image(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'puppy.jpg'</span>)</span>
<span id="cb24-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Image shape (channels, height, width): </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-4">img[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span></code></pre></div>
<pre class="text"><code>torch.Size([3, 1066, 1600])

tensor([[[117, 119, 117, 113],
         [119, 129, 129, 113],
         [130, 126, 122, 115]],

        [[ 83,  85,  85,  80],
         [ 85,  97,  97,  82],
         [ 98,  93,  89,  83]]], dtype=torch.uint8)</code></pre>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> show_img(x, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs):</span>
<span id="cb26-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Display an image using matplotlib</span></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb26-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb26-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x: Image tensor</span></span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        figsize: Figure size in inches (width, height)</span></span>
<span id="cb26-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        **kwargs: Additional arguments passed to plt.imshow()</span></span>
<span id="cb26-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb26-10">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>figsize)</span>
<span id="cb26-11">    plt.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb26-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert from CHW (channels, height, width) to HWC format if needed</span></span>
<span id="cb26-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(x.shape) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb26-14">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb26-15">    plt.imshow(x.cpu(), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>kwargs)</span></code></pre></div>
<section id="objective-1" class="level4">
<h4 class="anchored" data-anchor-id="objective-1">Objective</h4>
<ul>
<li>Convert a color image to grayscale using a Triton kernel.</li>
</ul>
</section>
<section id="steps-1" class="level4">
<h4 class="anchored" data-anchor-id="steps-1">Steps</h4>
<ol type="1">
<li><p><strong>Load Image Data</strong>:</p>
<ul>
<li>Use an image (e.g., a puppy image) as input.</li>
</ul></li>
<li><p><strong>Calculate 2D Offsets</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/4_offset_2d.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<ul>
<li>Compute row and column offsets.</li>
<li>Use broadcasting to create a grid of offsets.</li>
</ul></li>
<li><p><strong>Create Masks</strong>:</p>
<ul>
<li>Handle image boundaries to avoid out-of-bounds access.</li>
</ul></li>
<li><p><strong>Load Color Channels</strong>:</p>
<ul>
<li>Load <strong>R</strong>, <strong>G</strong>, and <strong>B</strong> values using offsets.</li>
</ul></li>
<li><p><strong>Compute Grayscale Values</strong>:</p>
<ul>
<li>Apply formula: <code>grayscale = 0.2989*R + 0.5870*G + 0.1140*B</code></li>
</ul></li>
<li><p><strong>Store Grayscale Data</strong>:</p>
<ul>
<li>Write the grayscale values back to the output tensor.</li>
</ul></li>
</ol>
</section>
<section id="implementation" class="level4">
<h4 class="anchored" data-anchor-id="implementation">Implementation</h4>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb27-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> rgb2grey_k(x_ptr, out_ptr, h, w, bs0: tl.constexpr, bs1: tl.constexpr):</span>
<span id="cb27-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb27-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    GPU kernel for converting RGB image to grayscale</span></span>
<span id="cb27-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb27-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb27-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x_ptr: Pointer to input RGB image data</span></span>
<span id="cb27-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        out_ptr: Pointer to output grayscale image data</span></span>
<span id="cb27-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        h: Image height</span></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        w: Image width</span></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs0: Block size for height dimension</span></span>
<span id="cb27-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs1: Block size for width dimension</span></span>
<span id="cb27-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb27-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get program IDs for parallel processing</span></span>
<span id="cb27-15">    pid_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block ID in height dimension</span></span>
<span id="cb27-16">    pid_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block ID in width dimension</span></span>
<span id="cb27-17">    </span>
<span id="cb27-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate offsets for this block</span></span>
<span id="cb27-19">    offs_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pid_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bs0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bs0)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Offsets in height dimension</span></span>
<span id="cb27-20">    offs_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pid_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> bs1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bs1)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Offsets in width dimension</span></span>
<span id="cb27-21">    </span>
<span id="cb27-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate 2D offset matrix</span></span>
<span id="cb27-23">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> offs_0[:,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs_1[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, :]</span>
<span id="cb27-24">    </span>
<span id="cb27-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create masks to handle image boundaries</span></span>
<span id="cb27-26">    mask_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> offs_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> h</span>
<span id="cb27-27">    mask_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> offs_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> w</span>
<span id="cb27-28">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_0[:,<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> mask_1[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,:]</span>
<span id="cb27-29">    </span>
<span id="cb27-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load RGB channels</span></span>
<span id="cb27-31">    r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span>
<span id="cb27-32">    g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span>
<span id="cb27-33">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span>
<span id="cb27-34">    </span>
<span id="cb27-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to grayscale using standard weights</span></span>
<span id="cb27-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># These weights represent human perception of color:</span></span>
<span id="cb27-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Red: 29.89%, Green: 58.70%, Blue: 11.40%</span></span>
<span id="cb27-38">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2989</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5870</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>g <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1140</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>b</span>
<span id="cb27-39">    </span>
<span id="cb27-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the result</span></span>
<span id="cb27-41">    tl.store(out_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, out, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span></code></pre></div>
</section>
<section id="notes" class="level4">
<h4 class="anchored" data-anchor-id="notes">Notes</h4>
<ul>
<li><strong>Vectorized Operations</strong> simplify processing of 2D data.</li>
<li><strong>Masks</strong> ensure safe memory access.</li>
<li><strong>GPU Compatibility</strong>:
<ul>
<li>Some operations may not work in simulator mode or on older GPUs.</li>
</ul></li>
</ul>
</section>
<section id="execution" class="level4">
<h4 class="anchored" data-anchor-id="execution">Execution</h4>
<ul>
<li><p><strong>Kernel Launch</strong>:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> rgb2grey(x, bs):</span>
<span id="cb28-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Convert RGB image to grayscale using GPU acceleration</span></span>
<span id="cb28-4"></span>
<span id="cb28-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb28-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x: Input RGB image tensor (channels, height, width)</span></span>
<span id="cb28-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs: Tuple of block sizes (height, width) for GPU processing</span></span>
<span id="cb28-8"></span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb28-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Grayscale image tensor (height, width)</span></span>
<span id="cb28-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-12">    c, h, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.shape</span>
<span id="cb28-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create output tensor</span></span>
<span id="cb28-14">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.empty((h,w), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x.dtype, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>x.device)</span>
<span id="cb28-15"></span>
<span id="cb28-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define processing grid based on block sizes</span></span>
<span id="cb28-17">    grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> meta: (cdiv(h, meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bs0'</span>]), cdiv(w, meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bs1'</span>]))</span>
<span id="cb28-18"></span>
<span id="cb28-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Launch GPU kernel</span></span>
<span id="cb28-20">    rgb2grey_k[grid](x, out, h, w, bs0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], bs1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb28-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> out.view(h,w)</span></code></pre></div>
<ul>
<li>Define grid dimensions based on image size.</li>
</ul></li>
<li><p><strong>Result</strong>:</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize image to a smaller size for faster processing</span></span>
<span id="cb29-2">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tvf.resize(img, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>, antialias<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb29-3">ch, h, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img.shape  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get channels, height, and width</span></span>
<span id="cb29-4">ch,h,w,h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>w</span></code></pre></div>
<pre class="text"><code>(3, 150, 225, 33750)</code></pre>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1">show_img(img)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/output_72_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert image to grayscale and display</span></span>
<span id="cb32-2">grey_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rgb2grey(img.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>), bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cpu'</span>)</span>
<span id="cb32-3">show_img(grey_img, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gray'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/output_80_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<ul>
<li>Successfully converted grayscale image.</li>
</ul></li>
</ul>
</section>
</section>
<section id="example-3-matrix-multiplication" class="level3">
<h3 class="anchored" data-anchor-id="example-3-matrix-multiplication">Example 3: Matrix Multiplication</h3>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Had to restart the notebook kernel to produce expected results for this example.</p>
</div>
</div>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb33-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb33-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton</span>
<span id="cb33-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton.language <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl</span></code></pre></div>
<section id="objective-2" class="level4">
<h4 class="anchored" data-anchor-id="objective-2">Objective</h4>
<ul>
<li>Implement an efficient matrix multiplication kernel.</li>
</ul>
</section>
<section id="decomposition-strategy" class="level4">
<h4 class="anchored" data-anchor-id="decomposition-strategy">Decomposition Strategy</h4>
<ul>
<li><p><strong>Matrices</strong>:</p>
<ul>
<li><strong>A</strong>: Size <strong>M x K</strong></li>
<li><strong>B</strong>: Size <strong>K x N</strong></li>
<li><strong>C</strong>: Result <strong>M x N</strong></li>
</ul></li>
<li><p><strong>Splitting</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/5_matmul_split.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<ul>
<li>Split <strong>C</strong> along <strong>M</strong> and <strong>N</strong> dimensions.</li>
<li>Map splits to programs (blocks).</li>
<li>Further split along <strong>K</strong> dimension (phases).</li>
</ul></li>
</ul>
</section>
<section id="naive-matrix-multiplication" class="level4">
<h4 class="anchored" data-anchor-id="naive-matrix-multiplication">Naive Matrix Multiplication</h4>
<ol type="1">
<li><strong>Define Kernel</strong>:
<ul>
<li>Use <code>@triton.jit</code> decorator.</li>
</ul></li>
<li><strong>Calculate Offsets</strong>:
<ul>
<li>Compute offsets for <strong>M</strong> and <strong>N</strong> axes.</li>
</ul></li>
<li><strong>Initialize Accumulator</strong>:
<ul>
<li>Set to zero before accumulation.</li>
</ul></li>
<li><strong>Loop Over K Dimension</strong>:
<ul>
<li>For each phase:
<ul>
<li>Load chunks of <strong>A</strong> and <strong>B</strong>.</li>
<li>Multiply and accumulate.</li>
</ul></li>
</ul></li>
<li><strong>Store Result</strong>:
<ul>
<li>Write the computed block to <strong>C</strong>.</li>
</ul></li>
</ol>
</section>
<section id="implementation-1" class="level4">
<h4 class="anchored" data-anchor-id="implementation-1">Implementation</h4>
<ul>
<li><p><strong>Helper Functions:</strong></p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Helper Functions for Computing Memory Offsets and Masks =====</span></span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb34-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_1d_offset(size, n_prev_chunks):</span>
<span id="cb34-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb34-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculate 1D memory offsets for a given chunk size and position.</span></span>
<span id="cb34-7"></span>
<span id="cb34-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb34-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        size: Size of the current chunk</span></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        n_prev_chunks: Number of previous chunks (used for position)</span></span>
<span id="cb34-11"></span>
<span id="cb34-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Array of offsets for the current chunk</span></span>
<span id="cb34-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb34-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> n_prev_chunks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, size)</span>
<span id="cb34-16"></span>
<span id="cb34-17"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb34-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_2d_offset(offs_0, offs_1, stride_0, stride_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb34-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb34-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculate 2D memory offsets for matrix operations.</span></span>
<span id="cb34-21"></span>
<span id="cb34-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb34-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        offs_0, offs_1: Offsets in first and second dimensions</span></span>
<span id="cb34-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        stride_0, stride_1: Stride values for memory layout</span></span>
<span id="cb34-25"></span>
<span id="cb34-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb34-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        2D array of memory offsets</span></span>
<span id="cb34-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb34-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> tl.expand_dims(offs_0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stride_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.expand_dims(offs_1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>stride_1</span>
<span id="cb34-30"></span>
<span id="cb34-31"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb34-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_1d_mask(offs, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>):</span>
<span id="cb34-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb34-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Create a mask for boundary checking in 1D.</span></span>
<span id="cb34-35"></span>
<span id="cb34-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb34-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        offs: Current offsets</span></span>
<span id="cb34-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max: Maximum valid offset</span></span>
<span id="cb34-39"></span>
<span id="cb34-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb34-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Boolean mask indicating valid positions</span></span>
<span id="cb34-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb34-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span></span>
<span id="cb34-44"></span>
<span id="cb34-45"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb34-46"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_2d_mask(offs_0, offs_1, max_0, max_1):</span>
<span id="cb34-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb34-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Create a mask for boundary checking in 2D.</span></span>
<span id="cb34-49"></span>
<span id="cb34-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb34-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        offs_0, offs_1: Current offsets in both dimensions</span></span>
<span id="cb34-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max_0, max_1: Maximum valid offsets</span></span>
<span id="cb34-53"></span>
<span id="cb34-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb34-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Boolean mask indicating valid positions in 2D</span></span>
<span id="cb34-56"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb34-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (tl.expand_dims(offs_0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_0) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (tl.expand_dims(offs_1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> max_1)</span></code></pre></div></li>
<li><p><strong>Matrix Multiplication Kernel:</strong></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb35-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> naive_matmul_k(</span>
<span id="cb35-3">    a_ptr, b_ptr, c_ptr,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pointers to input/output matrices</span></span>
<span id="cb35-4">    m, n, k,              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matrix dimensions: A(m×k), B(k×n), C(m×n)</span></span>
<span id="cb35-5">    stride_am, stride_ak, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Memory strides for matrix A</span></span>
<span id="cb35-6">    stride_bk, stride_bn, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Memory strides for matrix B</span></span>
<span id="cb35-7">    stride_cm, stride_cn, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Memory strides for output matrix C</span></span>
<span id="cb35-8">    bm: tl.constexpr,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block size for M dimension</span></span>
<span id="cb35-9">    bn: tl.constexpr,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block size for N dimension</span></span>
<span id="cb35-10">    bk: tl.constexpr      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block size for K dimension</span></span>
<span id="cb35-11">):</span>
<span id="cb35-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb35-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Compute matrix multiplication C = A × B using block-wise operations.</span></span>
<span id="cb35-14"></span>
<span id="cb35-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This kernel implements a basic matrix multiplication by:</span></span>
<span id="cb35-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    1. Breaking the computation into blocks</span></span>
<span id="cb35-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    2. Loading blocks into shared memory</span></span>
<span id="cb35-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    3. Computing partial results</span></span>
<span id="cb35-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    4. Storing the results back to global memory</span></span>
<span id="cb35-20"></span>
<span id="cb35-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb35-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        a_ptr, b_ptr: Input matrix pointers</span></span>
<span id="cb35-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        c_ptr: Output matrix pointer</span></span>
<span id="cb35-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        m, n, k: Matrix dimensions</span></span>
<span id="cb35-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        stride_*: Memory strides for each matrix</span></span>
<span id="cb35-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bm, bn, bk: Block sizes for tiled computation</span></span>
<span id="cb35-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb35-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get program ID for the current thread block</span></span>
<span id="cb35-29">    pid_m, pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb35-30"></span>
<span id="cb35-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate offsets for the current block</span></span>
<span id="cb35-32">    rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bm, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_m)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Offset in M dimension</span></span>
<span id="cb35-33">    rn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bn, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_n)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Offset in N dimension</span></span>
<span id="cb35-34">    rk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bk, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initial offset in K dimension</span></span>
<span id="cb35-35"></span>
<span id="cb35-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate memory offsets for input matrices</span></span>
<span id="cb35-37">    offs_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rm, rk, stride_am, stride_ak)</span>
<span id="cb35-38">    offs_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rk, rn, stride_bk, stride_bn)</span>
<span id="cb35-39"></span>
<span id="cb35-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize accumulator for partial results</span></span>
<span id="cb35-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Note: allow_tf32 must be set to False for older GPUs</span></span>
<span id="cb35-42">    acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.zeros((bm, bn), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tl.float32)</span>
<span id="cb35-43"></span>
<span id="cb35-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Main computation loop - iterate over K dimension</span></span>
<span id="cb35-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, k, bk):</span>
<span id="cb35-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load blocks from input matrices</span></span>
<span id="cb35-47">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(offs_a)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load block from matrix A</span></span>
<span id="cb35-48">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(offs_b)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load block from matrix B</span></span>
<span id="cb35-49"></span>
<span id="cb35-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute partial matrix multiplication for current block</span></span>
<span id="cb35-51">        acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tl.dot(a, b, allow_tf32<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb35-52"></span>
<span id="cb35-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update offsets for next iteration</span></span>
<span id="cb35-54">        offs_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> bk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride_ak</span>
<span id="cb35-55">        offs_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> bk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride_bk</span>
<span id="cb35-56"></span>
<span id="cb35-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate output memory location and mask for boundary conditions</span></span>
<span id="cb35-58">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rm, rn, stride_cm, stride_cn)</span>
<span id="cb35-59">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_mask(rm, rn, m, n)</span>
<span id="cb35-60"></span>
<span id="cb35-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the result</span></span>
<span id="cb35-62">    tl.store(c, acc, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span></code></pre></div>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> matmul(a, b, matmul_k_fn, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb36-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb36-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    High-level matrix multiplication function that handles kernel launch.</span></span>
<span id="cb36-4"></span>
<span id="cb36-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb36-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        a, b: Input matrices</span></span>
<span id="cb36-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        matmul_k_fn: Triton kernel function to use</span></span>
<span id="cb36-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bs: Block size for tiled computation</span></span>
<span id="cb36-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        group_sz: Group size for advanced implementations</span></span>
<span id="cb36-10"></span>
<span id="cb36-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Result of matrix multiplication</span></span>
<span id="cb36-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb36-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify matrix dimensions are compatible</span></span>
<span id="cb36-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> a.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> b.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matrix dims not compatible for matmul"</span></span>
<span id="cb36-16">    check_tensors_gpu_ready(a, b)</span>
<span id="cb36-17"></span>
<span id="cb36-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get matrix dimensions</span></span>
<span id="cb36-19">    (m, k), (_, n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a.shape, b.shape</span>
<span id="cb36-20"></span>
<span id="cb36-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize output matrix</span></span>
<span id="cb36-22">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.empty((m, n), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>a.device, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16)</span>
<span id="cb36-23"></span>
<span id="cb36-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate grid dimensions for kernel launch</span></span>
<span id="cb36-25">    grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> meta: (triton.cdiv(m, meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>]), triton.cdiv(n, meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>]))</span>
<span id="cb36-26"></span>
<span id="cb36-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Handle optional group size parameter</span></span>
<span id="cb36-28">    group_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {} <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> group_sz <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_sz"</span>: group_sz}</span>
<span id="cb36-29"></span>
<span id="cb36-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Launch kernel</span></span>
<span id="cb36-31">    matmul_k_fn[grid](</span>
<span id="cb36-32">        a, b, c,                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Input/output matrices</span></span>
<span id="cb36-33">        m, n, k,                     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matrix dimensions</span></span>
<span id="cb36-34">        a.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), a.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Strides for matrix A</span></span>
<span id="cb36-35">        b.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), b.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Strides for matrix B</span></span>
<span id="cb36-36">        c.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), c.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Strides for output matrix</span></span>
<span id="cb36-37">        bm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs, bn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs, bk<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs,         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block sizes</span></span>
<span id="cb36-38">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>group_sz</span>
<span id="cb36-39">    )</span>
<span id="cb36-40"></span>
<span id="cb36-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> c</span></code></pre></div></li>
<li><p><strong>Results:</strong></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a simplified interface using partial application</span></span>
<span id="cb37-2">naive_matmul <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partial(matmul, matmul_k_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>naive_matmul_k)</span></code></pre></div>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Small example</span></span>
<span id="cb38-2">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb38-3">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb38-4">naive_matmul(a, b)</span></code></pre></div>
<pre class="text"><code>tensor([[4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.]], device='cuda:0', dtype=torch.float16)</code></pre>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Larger example with verification</span></span>
<span id="cb40-2">torch.manual_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb40-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16)</span>
<span id="cb40-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16)</span>
<span id="cb40-5"></span>
<span id="cb40-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare Triton implementation with PyTorch</span></span>
<span id="cb40-7">triton_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> naive_matmul(a, b)</span>
<span id="cb40-8">torch_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.matmul(a, b)</span>
<span id="cb40-9"></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify results match within tolerance</span></span>
<span id="cb40-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> torch.allclose(triton_output, torch_output, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e-2</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb40-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✅ Triton and Torch match"</span>)</span>
<span id="cb40-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"❌ Triton and Torch differ"</span>)</span></code></pre></div>
<pre class="text"><code>✅ Triton and Torch match</code></pre></li>
</ul>
</section>
</section>
<section id="example-4-faster-matrix-multiplication" class="level3">
<h3 class="anchored" data-anchor-id="example-4-faster-matrix-multiplication">Example 4: Faster Matrix Multiplication</h3>
<section id="swizzling-for-cache-optimization" class="level4">
<h4 class="anchored" data-anchor-id="swizzling-for-cache-optimization">Swizzling for Cache Optimization</h4>
<ul>
<li><p><strong>Goal</strong>:</p>
<ul>
<li>Improve <strong>L2 cache</strong> utilization.</li>
</ul></li>
<li><p><strong>Swizzling</strong>:</p>
<ul>
<li>Reorder program execution to process blocks that share data closer in time.</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/6_matmul_order.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_item(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span>): </span>
<span id="cb42-2">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"I'm processing item </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">id</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-3"></span>
<span id="cb42-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Demonstrate normal sequential processing</span></span>
<span id="cb42-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sequential processing:"</span>)</span>
<span id="cb42-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>): </span>
<span id="cb42-7">    process_item(i)</span></code></pre></div>
<pre class="text"><code>I'm processing item 0
I'm processing item 1
I'm processing item 2
I'm processing item 3
I'm processing item 4</code></pre>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> change_id(old_id): </span>
<span id="cb44-2">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>old_id</span>
<span id="cb44-3"></span>
<span id="cb44-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Demonstrate reordered processing</span></span>
<span id="cb44-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Reordered processing:"</span>)</span>
<span id="cb44-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>): </span>
<span id="cb44-7">    process_item(change_id(i))</span></code></pre></div>
<pre class="text"><code>I'm processing item 5
I'm processing item 4
I'm processing item 3
I'm processing item 2
I'm processing item 1</code></pre></li>
<li><p><strong>Implementation</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/7_swizzling_exmple.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Memory Access Pattern Optimization via Swizzling =====</span></span>
<span id="cb46-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb46-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> swizzle_k(x_ptr, z_ptr, group_sz: tl.constexpr):</span>
<span id="cb46-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb46-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Demonstrates memory access pattern optimization using swizzling.</span></span>
<span id="cb46-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Swizzling reorders thread blocks to improve memory locality and cache utilization.</span></span>
<span id="cb46-7"></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb46-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        x_ptr: Input tensor pointer</span></span>
<span id="cb46-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        z_ptr: Output tensor pointer</span></span>
<span id="cb46-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        group_sz: Size of thread block groups for swizzling</span></span>
<span id="cb46-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb46-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current thread block coordinates and grid dimensions</span></span>
<span id="cb46-14">    pid_m, pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb46-15">    num_pid_m, num_pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.num_programs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), tl.num_programs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb46-16"></span>
<span id="cb46-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply 2D swizzling to reorder thread blocks</span></span>
<span id="cb46-18">    pid_m_, pid_n_ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.swizzle2d(pid_m, pid_n, num_pid_m, num_pid_n, group_sz)</span>
<span id="cb46-19"></span>
<span id="cb46-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate memory offsets for original ordering</span></span>
<span id="cb46-21">    offs_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_m)</span>
<span id="cb46-22">    offs_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_n)</span>
<span id="cb46-23">    offs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_offset(offs_m, offs_n, stride_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_pid_n)</span>
<span id="cb46-24">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_mask(offs_m, offs_n, max_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_pid_m, max_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_pid_n)</span>
<span id="cb46-25"></span>
<span id="cb46-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate memory offsets for swizzled ordering</span></span>
<span id="cb46-27">    offs_sw_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_m_)</span>
<span id="cb46-28">    offs_sw_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_n_)</span>
<span id="cb46-29">    offs_sw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_offset(offs_sw_m, offs_sw_n, stride_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_pid_n)</span>
<span id="cb46-30">    mask_sw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_mask(offs_sw_m, offs_sw_n, max_0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_pid_m, max_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>num_pid_n)</span>
<span id="cb46-31"></span>
<span id="cb46-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load from original pattern and store in swizzled pattern</span></span>
<span id="cb46-33">    x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(x_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span>
<span id="cb46-34">    tl.store(z_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offs_sw, x, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask_sw)</span></code></pre></div>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Demonstrate swizzling effect</span></span>
<span id="cb47-2">blocks_m, blocks_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb47-3">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(blocks_m<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>blocks_n, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>).view(blocks_m, blocks_n)</span>
<span id="cb47-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Original matrix:"</span>)</span>
<span id="cb47-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(x)</span></code></pre></div>
<pre class="text"><code>tensor([[ 0,  1,  2,  3],
        [ 4,  5,  6,  7],
        [ 8,  9, 10, 11],
        [12, 13, 14, 15],
        [16, 17, 18, 19]], device='cuda:0')</code></pre>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">z <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>torch.ones_like(x)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize output matrix with -1</span></span>
<span id="cb49-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Empty output matrix:"</span>)</span>
<span id="cb49-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(z)</span></code></pre></div>
<pre class="text"><code>tensor([[-1, -1, -1, -1],
        [-1, -1, -1, -1],
        [-1, -1, -1, -1],
        [-1, -1, -1, -1],
        [-1, -1, -1, -1]], device='cuda:0')</code></pre>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply swizzling</span></span>
<span id="cb51-2">swizzle_k[(blocks_m,blocks_n)](x, z, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb51-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Swizzled matrix:"</span>)</span>
<span id="cb51-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(z)</span></code></pre></div>
<pre class="text"><code>tensor([[ 0,  3,  6,  9],
        [ 1,  4,  7, 10],
        [ 2,  5,  8, 11],
        [12, 14, 16, 18],
        [13, 15, 17, 19]], device='cuda:0')</code></pre>
<ul>
<li>Use <a href="https://triton-lang.org/main/python-api/generated/triton.language.swizzle2d.html"><code>tl.swizzle2d(pid, num_pid_m, num_pid_n, group_size)</code></a></li>
</ul></li>
</ul>
</section>
<section id="adjusted-kernel" class="level4">
<h4 class="anchored" data-anchor-id="adjusted-kernel">Adjusted Kernel</h4>
<ul>
<li><p><strong>Modify PID</strong>:</p>
<ul>
<li>Apply swizzling to <strong>PID</strong> before computing offsets.</li>
</ul></li>
<li><p><strong>Benefits</strong>:</p>
<ul>
<li>Reduces the number of unique data loads.</li>
<li>Increases cache hits, improving performance.</li>
</ul></li>
<li><p><strong>Grouped Matrix Multiplication with Swizzling:</strong></p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb53-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> grouped_matmul_k(</span>
<span id="cb53-3">    a_ptr, b_ptr, c_ptr,</span>
<span id="cb53-4">    m, n, k,</span>
<span id="cb53-5">    stride_am, stride_ak, </span>
<span id="cb53-6">    stride_bk, stride_bn,</span>
<span id="cb53-7">    stride_cm, stride_cn,</span>
<span id="cb53-8">    bm: tl.constexpr, bn: tl.constexpr, bk: tl.constexpr, </span>
<span id="cb53-9">    group_sz: tl.constexpr</span>
<span id="cb53-10">):</span>
<span id="cb53-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb53-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Matrix multiplication kernel with memory access pattern optimization using swizzling.</span></span>
<span id="cb53-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This implementation groups thread blocks to improve cache utilization.</span></span>
<span id="cb53-14"></span>
<span id="cb53-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb53-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        a_ptr, b_ptr: Input matrix pointers</span></span>
<span id="cb53-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        c_ptr: Output matrix pointer</span></span>
<span id="cb53-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        m, n, k: Matrix dimensions</span></span>
<span id="cb53-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        stride_*: Memory strides for each matrix</span></span>
<span id="cb53-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bm, bn, bk: Block sizes for tiled computation</span></span>
<span id="cb53-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        group_sz: Size of thread block groups for swizzling</span></span>
<span id="cb53-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb53-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get thread block coordinates and grid dimensions</span></span>
<span id="cb53-24">    pid_m, pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb53-25">    num_pid_m, num_pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.num_programs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), tl.num_programs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb53-26"></span>
<span id="cb53-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply swizzling to optimize memory access pattern</span></span>
<span id="cb53-28">    pid_m, pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.swizzle2d(pid_m, pid_n, num_pid_m, num_pid_n, group_sz)</span>
<span id="cb53-29"></span>
<span id="cb53-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate block offsets</span></span>
<span id="cb53-31">    rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bm, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_m)</span>
<span id="cb53-32">    rn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bn, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_n)</span>
<span id="cb53-33">    rk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bk, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb53-34"></span>
<span id="cb53-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate memory offsets for input matrices</span></span>
<span id="cb53-36">    offs_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rm, rk, stride_am, stride_ak)</span>
<span id="cb53-37">    offs_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rk, rn, stride_bk, stride_bn)</span>
<span id="cb53-38"></span>
<span id="cb53-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize accumulator</span></span>
<span id="cb53-40">    acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.zeros((bm, bn), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tl.float32)</span>
<span id="cb53-41"></span>
<span id="cb53-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Main computation loop</span></span>
<span id="cb53-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, k, bk):</span>
<span id="cb53-44">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(offs_a)</span>
<span id="cb53-45">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(offs_b)</span>
<span id="cb53-46">        acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tl.dot(a, b, allow_tf32<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb53-47">        offs_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> bk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride_ak</span>
<span id="cb53-48">        offs_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> bk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride_bk</span>
<span id="cb53-49"></span>
<span id="cb53-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store results</span></span>
<span id="cb53-51">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rm, rn, stride_cm, stride_cn)</span>
<span id="cb53-52">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_mask(rm, rn, m, n)</span>
<span id="cb53-53">    tl.store(c, acc, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span></code></pre></div></li>
</ul>
</section>
<section id="validation" class="level4">
<h4 class="anchored" data-anchor-id="validation">Validation</h4>
<ul>
<li><p><strong>Testing</strong>:</p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create simplified interface for grouped matrix multiplication</span></span>
<span id="cb54-2">grouped_matmul <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partial(matmul, matmul_k_fn<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grouped_matmul_k)</span></code></pre></div>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Small example</span></span>
<span id="cb55-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Testing with small matrices:"</span>)</span>
<span id="cb55-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb55-4">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb55-5">grouped_matmul(a, b, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<pre class="text"><code>tensor([[4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.]], device='cuda:0', dtype=torch.float16)</code></pre>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Larger example with verification</span></span>
<span id="cb57-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Testing with larger matrices:"</span>)</span>
<span id="cb57-3">torch.manual_seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb57-4">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16)</span>
<span id="cb57-5">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16)</span>
<span id="cb57-6"></span>
<span id="cb57-7">triton_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped_matmul(a, b, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>)</span>
<span id="cb57-8">torch_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.matmul(a, b)</span>
<span id="cb57-9"></span>
<span id="cb57-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify results</span></span>
<span id="cb57-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> torch.allclose(triton_output, torch_output, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5e-2</span>, rtol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb57-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✅ Triton and Torch match"</span>)</span>
<span id="cb57-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb57-14">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"❌ Triton and Torch differ"</span>)</span></code></pre></div>
<pre class="text"><code>✅ Triton and Torch match</code></pre>
<ul>
<li>Compare output with PyTorch’s <code>torch.matmul</code>.</li>
<li>Use various matrix sizes for thorough testing.</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="benchmarking" class="level2">
<h2 class="anchored" data-anchor-id="benchmarking">Benchmarking</h2>
<section id="purpose" class="level3">
<h3 class="anchored" data-anchor-id="purpose">Purpose</h3>
<ul>
<li><strong>Measure and compare</strong> kernel performance.</li>
<li>Identify performance gains or bottlenecks.</li>
</ul>
</section>
<section id="tools-and-methods" class="level3">
<h3 class="anchored" data-anchor-id="tools-and-methods">Tools and Methods</h3>
<ul>
<li><strong>Triton’s Benchmarking Utilities</strong>:
<ul>
<li>Provides functions to benchmark kernels over input ranges.</li>
</ul></li>
<li><strong>Parameters</strong>:
<ul>
<li>Test different matrix sizes and block sizes.</li>
</ul></li>
</ul>
</section>
<section id="findings-rtx-4090" class="level3">
<h3 class="anchored" data-anchor-id="findings-rtx-4090">Findings (RTX 4090)</h3>
<section id="benchmark-1" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-1">Benchmark #1</h4>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb59-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Performance Benchmarking for Matrix Multiplication Implementations</span></span>
<span id="cb59-3"></span>
<span id="cb59-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Compares the performance of the three matrix multiplication implementations:</span></span>
<span id="cb59-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">1. Naive Triton implementation</span></span>
<span id="cb59-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">2. Grouped Triton implementation (with memory access optimization)</span></span>
<span id="cb59-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">3. PyTorch's native implementation</span></span>
<span id="cb59-8"></span>
<span id="cb59-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The benchmark measures performance in GB/s (gigabytes per second) across different matrix sizes.</span></span>
<span id="cb59-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb59-11"></span>
<span id="cb59-12"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.testing.perf_report</span>(</span>
<span id="cb59-13">    triton.testing.Benchmark(</span>
<span id="cb59-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X-axis configuration</span></span>
<span id="cb59-15">        x_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'square_matrix_size'</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># What varies along x-axis</span></span>
<span id="cb59-16">        x_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matrix sizes: 32, 64, 128, 256, 512, 1024, 2048</span></span>
<span id="cb59-17">        x_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use logarithmic scale for x-axis</span></span>
<span id="cb59-18">        </span>
<span id="cb59-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Different implementations to compare (creates different lines on plot)</span></span>
<span id="cb59-20">        line_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'provider'</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parameter that determines which implementation to use</span></span>
<span id="cb59-21">        line_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Possible implementation values</span></span>
<span id="cb59-22">        line_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Torch'</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Labels for each implementation</span></span>
<span id="cb59-23">        </span>
<span id="cb59-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot styling</span></span>
<span id="cb59-25">        styles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Colors and line styles</span></span>
<span id="cb59-26">        ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GB/s'</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Y-axis label showing throughput</span></span>
<span id="cb59-27">        plot_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matmul-performance'</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name for saving the plot</span></span>
<span id="cb59-28">        </span>
<span id="cb59-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Additional arguments (empty in this case)</span></span>
<span id="cb59-30">        args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{},</span>
<span id="cb59-31">    ))</span>
<span id="cb59-32"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> benchmark(square_matrix_size, provider):</span>
<span id="cb59-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb59-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Benchmark different matrix multiplication implementations.</span></span>
<span id="cb59-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb59-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb59-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        square_matrix_size: Size of the square matrices to multiply (N×N)</span></span>
<span id="cb59-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        provider: Which implementation to benchmark ('naive', 'grouped', or 'torch')</span></span>
<span id="cb59-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb59-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb59-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tuple: (median_performance, min_performance, max_performance) in GB/s</span></span>
<span id="cb59-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb59-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Performance calculation:</span></span>
<span id="cb59-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Matrix multiplication requires reading 2 matrices and writing 1 matrix</span></span>
<span id="cb59-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Each matrix has size N×N with 4 bytes per element (float32)</span></span>
<span id="cb59-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Total memory moved = 3 * N * N * 4 bytes</span></span>
<span id="cb59-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - GB/s = (12 * N * N) / (time_in_ms * 1e6)  # 12 = 3 matrices * 4 bytes</span></span>
<span id="cb59-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb59-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create random input matrices</span></span>
<span id="cb59-50">    sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> square_matrix_size</span>
<span id="cb59-51">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb59-52">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb59-53">    </span>
<span id="cb59-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define measurement percentiles</span></span>
<span id="cb59-55">    quantiles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># median, 20th percentile, 80th percentile</span></span>
<span id="cb59-56">    </span>
<span id="cb59-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Benchmark the requested implementation</span></span>
<span id="cb59-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>:</span>
<span id="cb59-59">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb59-60">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: naive_matmul(a, b), </span>
<span id="cb59-61">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb59-62">        )</span>
<span id="cb59-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>:</span>
<span id="cb59-64">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb59-65">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: grouped_matmul(a, b, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>), </span>
<span id="cb59-66">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb59-67">        )</span>
<span id="cb59-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>:</span>
<span id="cb59-69">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb59-70">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: torch.matmul(a,b), </span>
<span id="cb59-71">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb59-72">        )</span>
<span id="cb59-73">    </span>
<span id="cb59-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert milliseconds to GB/s</span></span>
<span id="cb59-75">    gbps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> ms: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-6</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Formula explained in docstring</span></span>
<span id="cb59-76">    </span>
<span id="cb59-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> gbps(ms), gbps(max_ms), gbps(min_ms)</span></code></pre></div>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the benchmark</span></span>
<span id="cb60-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Running performance benchmark..."</span>)</span>
<span id="cb60-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"This will test matrix sizes from 32×32 to 2048×2048"</span>)</span>
<span id="cb60-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"For each size, we'll compare naive Triton, grouped Triton, and PyTorch implementations"</span>)</span>
<span id="cb60-5">benchmark.run(print_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, show_plots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/output_139_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<pre class="text"><code>matmul-performance:
   square_matrix_size     Naive   Grouped     Torch
0                32.0  0.093750  0.093750  0.046875
1                64.0  0.187500  0.158940  0.083333
2               128.0  0.290909  0.284024  0.214286
3               256.0  0.333333  0.333333  0.300000
4               512.0  0.190855  0.193548  0.300000
5              1024.0  0.055379  0.055339  0.218182
6              2048.0  0.014159  0.014179  0.079470</code></pre>
</section>
<section id="benchmark-2" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-2">Benchmark #2</h4>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Impact of Batch Size =====</span></span>
<span id="cb62-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.testing.perf_report</span>(</span>
<span id="cb62-3">    triton.testing.Benchmark(</span>
<span id="cb62-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X-axis: varying batch sizes</span></span>
<span id="cb62-5">        x_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'batch_size'</span>],</span>
<span id="cb62-6">        x_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Testing batch sizes: 16, 32, 64</span></span>
<span id="cb62-7">        x_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb62-8">        </span>
<span id="cb62-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare different implementations</span></span>
<span id="cb62-10">        line_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'provider'</span>,</span>
<span id="cb62-11">        line_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>],</span>
<span id="cb62-12">        line_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Torch'</span>],</span>
<span id="cb62-13">        </span>
<span id="cb62-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot styling</span></span>
<span id="cb62-15">        styles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)],</span>
<span id="cb62-16">        ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GB/s'</span>,</span>
<span id="cb62-17">        plot_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matmul-performance'</span>,</span>
<span id="cb62-18">        args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{}</span>
<span id="cb62-19">    ))</span>
<span id="cb62-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> benchmark(batch_size, provider):</span>
<span id="cb62-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Benchmark matrix multiplication with varying batch sizes.</span></span>
<span id="cb62-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb62-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This benchmark keeps matrix size fixed (512×512) and varies the computation</span></span>
<span id="cb62-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    batch size to understand its impact on performance.</span></span>
<span id="cb62-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb62-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb62-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        batch_size: Size of computation batches (block size)</span></span>
<span id="cb62-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        provider: Which implementation to benchmark</span></span>
<span id="cb62-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb62-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb62-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tuple: (median_performance, min_performance, max_performance) in GB/s</span></span>
<span id="cb62-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb62-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fixed matrix size of 512×512</span></span>
<span id="cb62-35">    sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span></span>
<span id="cb62-36">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb62-37">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb62-38">    </span>
<span id="cb62-39">    quantiles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>]</span>
<span id="cb62-40">    </span>
<span id="cb62-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Benchmark each implementation with varying batch sizes</span></span>
<span id="cb62-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>:</span>
<span id="cb62-43">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb62-44">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: naive_matmul(a, b, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size),</span>
<span id="cb62-45">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb62-46">        )</span>
<span id="cb62-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>:</span>
<span id="cb62-48">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb62-49">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: grouped_matmul(a, b, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_size, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>),</span>
<span id="cb62-50">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb62-51">        )</span>
<span id="cb62-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>:</span>
<span id="cb62-53">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb62-54">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: torch.matmul(a,b),</span>
<span id="cb62-55">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb62-56">        )</span>
<span id="cb62-57">    </span>
<span id="cb62-58">    gbps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> ms: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-6</span></span>
<span id="cb62-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> gbps(ms), gbps(max_ms), gbps(min_ms)</span></code></pre></div>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the benchmark</span></span>
<span id="cb63-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Running batch size impact benchmark..."</span>)</span>
<span id="cb63-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Testing different batch sizes on 512×512 matrices"</span>)</span>
<span id="cb63-4">benchmark.run(print_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, show_plots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/output_143_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<pre class="text"><code>matmul-performance:
   batch_size     Naive   Grouped  Torch
0        16.0  0.171429  0.176471    0.3
1        32.0  0.375000  0.360902    0.3
2        64.0  0.352941  0.352941    0.3</code></pre>
</section>
<section id="benchmark-3" class="level4">
<h4 class="anchored" data-anchor-id="benchmark-3">Benchmark #3</h4>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Matrix Size Impact with Fixed Block Size =====</span></span>
<span id="cb65-2"></span>
<span id="cb65-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.testing.perf_report</span>(</span>
<span id="cb65-4">    triton.testing.Benchmark(</span>
<span id="cb65-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># X-axis: varying matrix sizes</span></span>
<span id="cb65-6">        x_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'square_matrix_size'</span>],</span>
<span id="cb65-7">        x_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matrix sizes from 32 to 2048</span></span>
<span id="cb65-8">        x_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb65-9">        </span>
<span id="cb65-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compare different implementations</span></span>
<span id="cb65-11">        line_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'provider'</span>,</span>
<span id="cb65-12">        line_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>],</span>
<span id="cb65-13">        line_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Torch'</span>],</span>
<span id="cb65-14">        </span>
<span id="cb65-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot styling</span></span>
<span id="cb65-16">        styles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)],</span>
<span id="cb65-17">        ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GB/s'</span>,</span>
<span id="cb65-18">        plot_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matmul-performance'</span>,</span>
<span id="cb65-19">        args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{}</span>
<span id="cb65-20">    ))</span>
<span id="cb65-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> benchmark(square_matrix_size, provider):</span>
<span id="cb65-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb65-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Benchmark matrix multiplication with varying matrix sizes but fixed block size.</span></span>
<span id="cb65-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb65-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This benchmark uses a fixed block size (64) while varying matrix dimensions</span></span>
<span id="cb65-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to understand how different implementations scale with problem size.</span></span>
<span id="cb65-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb65-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb65-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        square_matrix_size: Size of the square matrices to multiply (N×N)</span></span>
<span id="cb65-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        provider: Which implementation to benchmark</span></span>
<span id="cb65-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb65-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb65-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        tuple: (median_performance, min_performance, max_performance) in GB/s</span></span>
<span id="cb65-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb65-35">    sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> square_matrix_size</span>
<span id="cb65-36">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb65-37">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb65-38">    </span>
<span id="cb65-39">    quantiles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>]</span>
<span id="cb65-40">    </span>
<span id="cb65-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fixed block size of 64 for all implementations</span></span>
<span id="cb65-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>:</span>
<span id="cb65-43">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb65-44">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: naive_matmul(a, b, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>),</span>
<span id="cb65-45">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb65-46">        )</span>
<span id="cb65-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>:</span>
<span id="cb65-48">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb65-49">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: grouped_matmul(a, b, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>),</span>
<span id="cb65-50">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb65-51">        )</span>
<span id="cb65-52">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>:</span>
<span id="cb65-53">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb65-54">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: torch.matmul(a,b),</span>
<span id="cb65-55">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb65-56">        )</span>
<span id="cb65-57">    </span>
<span id="cb65-58">    gbps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> ms: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-6</span></span>
<span id="cb65-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> gbps(ms), gbps(max_ms), gbps(min_ms)</span></code></pre></div>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Running matrix size scaling benchmark..."</span>)</span>
<span id="cb66-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Testing different matrix sizes with fixed block size=64"</span>)</span>
<span id="cb66-3">benchmark.run(print_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, show_plots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/output_145_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<pre class="text"><code>matmul-performance:
   square_matrix_size     Naive   Grouped     Torch
0                32.0  0.066298  0.062500  0.050633
1                64.0  0.129730  0.146341  0.083333
2               128.0  0.214286  0.214286  0.214286
3               256.0  0.272727  0.272727  0.300000
4               512.0  0.352941  0.352941  0.300000
5              1024.0  0.210066  0.206897  0.218182
6              2048.0  0.058680  0.058252  0.077623</code></pre>
<ul>
<li><strong>Performance Trends</strong>:
<ul>
<li><strong>Small Matrices</strong>:
<ul>
<li>Triton kernels can outperform PyTorch.</li>
</ul></li>
<li><strong>Large Matrices</strong>:
<ul>
<li>PyTorch may be faster due to highly optimized kernels.</li>
</ul></li>
</ul></li>
<li><strong>Cache Effects</strong>:
<ul>
<li>Performance drops when exceeding <strong>L1</strong> or <strong>L2 cache</strong> capacity.</li>
</ul></li>
<li><strong>Block Size Impact</strong>:
<ul>
<li>Larger block sizes generally improve performance.</li>
<li>Excessively large block sizes may cause <strong>out-of-memory</strong> errors.</li>
</ul></li>
</ul>
</section>
</section>
<section id="profiling-tools" class="level3">
<h3 class="anchored" data-anchor-id="profiling-tools">Profiling Tools</h3>
<ul>
<li><strong>NVIDIA Nsight Compute (NCU)</strong>:
<ul>
<li>Provides detailed performance metrics.</li>
<li>Helps identify optimization opportunities.</li>
</ul></li>
</ul>
</section>
</section>
<section id="auto-tuning" class="level2">
<h2 class="anchored" data-anchor-id="auto-tuning">Auto-Tuning</h2>
<section id="concept" class="level3">
<h3 class="anchored" data-anchor-id="concept">Concept</h3>
<ul>
<li><strong>Auto-Tuning</strong>:
<ul>
<li>Automatically finds the best kernel configurations for performance.</li>
</ul></li>
<li><strong>Parameters Tuned</strong>:
<ul>
<li><strong>Block sizes</strong>, <strong>tile sizes</strong>, and other kernel parameters.</li>
</ul></li>
</ul>
</section>
<section id="implementation-in-triton" class="level3">
<h3 class="anchored" data-anchor-id="implementation-in-triton">Implementation in Triton</h3>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb68-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Matrix Multiplication with Autotuning</span></span>
<span id="cb68-3"></span>
<span id="cb68-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">This implementation adds automatic performance tuning by testing different configurations</span></span>
<span id="cb68-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">of block sizes, group sizes, and other parameters to find optimal settings for different</span></span>
<span id="cb68-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">matrix sizes.</span></span>
<span id="cb68-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb68-8"></span>
<span id="cb68-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Autotuned Matrix Multiplication Kernel =====</span></span>
<span id="cb68-10"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.autotune</span>(</span>
<span id="cb68-11">    configs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[</span>
<span id="cb68-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Different configurations to try, varying block sizes and execution parameters</span></span>
<span id="cb68-13">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-14">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Larger blocks, fewer stages</span></span>
<span id="cb68-15">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-16">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb68-17">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-18">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb68-19">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-20">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb68-21">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-22">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb68-23">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-24">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb68-25">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-26">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Smaller blocks, more stages</span></span>
<span id="cb68-27">        triton.Config({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bk'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_sz'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>}, </span>
<span id="cb68-28">                     num_stages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, num_warps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb68-29">    ],</span>
<span id="cb68-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Autotuning is based on input matrix dimensions</span></span>
<span id="cb68-31">    key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'m'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'k'</span>],</span>
<span id="cb68-32">)</span>
<span id="cb68-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb68-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> grouped_autotuned_matmul_k(</span>
<span id="cb68-35">    a_ptr, b_ptr, c_ptr,</span>
<span id="cb68-36">    m, n, k,</span>
<span id="cb68-37">    stride_am, stride_ak, </span>
<span id="cb68-38">    stride_bk, stride_bn,</span>
<span id="cb68-39">    stride_cm, stride_cn,</span>
<span id="cb68-40">    bm: tl.constexpr, bn: tl.constexpr, bk: tl.constexpr, </span>
<span id="cb68-41">    group_sz: tl.constexpr</span>
<span id="cb68-42">):</span>
<span id="cb68-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb68-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Autotuned matrix multiplication kernel that tries different configurations</span></span>
<span id="cb68-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to find the best performance for given matrix dimensions.</span></span>
<span id="cb68-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb68-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The configurations vary:</span></span>
<span id="cb68-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Block sizes (bm, bn, bk)</span></span>
<span id="cb68-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Number of pipeline stages</span></span>
<span id="cb68-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Number of warps</span></span>
<span id="cb68-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - Group size for memory access optimization</span></span>
<span id="cb68-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb68-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get thread block coordinates and grid dimensions</span></span>
<span id="cb68-54">    pid_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb68-55">    pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb68-56">    num_pid_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.num_programs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb68-57">    num_pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.num_programs(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb68-58">    </span>
<span id="cb68-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply swizzling for memory access optimization</span></span>
<span id="cb68-60">    pid_m, pid_n <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.swizzle2d(pid_m, pid_n, num_pid_m, num_pid_n, group_sz)</span>
<span id="cb68-61">    </span>
<span id="cb68-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate block offsets</span></span>
<span id="cb68-63">    rm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bm, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_m)</span>
<span id="cb68-64">    rn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bn, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pid_n)</span>
<span id="cb68-65">    rk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_1d_offset(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bk, n_prev_chunks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb68-66">    </span>
<span id="cb68-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate memory offsets</span></span>
<span id="cb68-68">    offs_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rm, rk, stride_am, stride_ak)</span>
<span id="cb68-69">    offs_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rk, rn, stride_bk, stride_bn)</span>
<span id="cb68-70">    </span>
<span id="cb68-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matrix multiplication computation</span></span>
<span id="cb68-72">    acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.zeros((bm, bn), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tl.float32)</span>
<span id="cb68-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, k, bk):</span>
<span id="cb68-74">        a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(offs_a)</span>
<span id="cb68-75">        b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(offs_b)</span>
<span id="cb68-76">        acc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tl.dot(a, b, allow_tf32<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb68-77">        offs_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> bk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride_ak</span>
<span id="cb68-78">        offs_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> bk <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride_bk</span>
<span id="cb68-79">    </span>
<span id="cb68-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store results</span></span>
<span id="cb68-81">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> c_ptr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> get_2d_offset(rm, rn, stride_cm, stride_cn)</span>
<span id="cb68-82">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_2d_mask(rm, rn, m, n)</span>
<span id="cb68-83">    tl.store(c, acc, mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask)</span></code></pre></div>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> grouped_autotuned_matmul(a, b):</span>
<span id="cb69-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb69-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    High-level wrapper for autotuned matrix multiplication.</span></span>
<span id="cb69-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb69-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function handles:</span></span>
<span id="cb69-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    1. Input validation</span></span>
<span id="cb69-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    2. Output initialization</span></span>
<span id="cb69-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    3. Grid computation</span></span>
<span id="cb69-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    4. Kernel launch with autotuned parameters</span></span>
<span id="cb69-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb69-11">    matmul_k_fn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped_autotuned_matmul_k</span>
<span id="cb69-12">    </span>
<span id="cb69-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Validate inputs</span></span>
<span id="cb69-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">assert</span> a.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> b.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"matrix dims not compatible for matmul"</span></span>
<span id="cb69-15">    check_tensors_gpu_ready(a, b)</span>
<span id="cb69-16">    </span>
<span id="cb69-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get matrix dimensions</span></span>
<span id="cb69-18">    (m, k), (_, n) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a.shape, b.shape</span>
<span id="cb69-19">    </span>
<span id="cb69-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize output matrix</span></span>
<span id="cb69-21">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.empty((m, n), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>a.device, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float16)</span>
<span id="cb69-22">    </span>
<span id="cb69-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute grid dimensions</span></span>
<span id="cb69-24">    grid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> meta: (triton.cdiv(m, meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bm'</span>]), triton.cdiv(n, meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bn'</span>]))</span>
<span id="cb69-25">    </span>
<span id="cb69-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Launch kernel with autotuned parameters</span></span>
<span id="cb69-27">    matmul_k_fn[grid](</span>
<span id="cb69-28">        a, b, c,</span>
<span id="cb69-29">        m, n, k,</span>
<span id="cb69-30">        a.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), a.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb69-31">        b.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), b.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb69-32">        c.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), c.stride(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb69-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Block sizes and group size are autotuned</span></span>
<span id="cb69-34">    )</span>
<span id="cb69-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> c</span></code></pre></div>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1">a,b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ones(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>), torch.ones(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb70-2">a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>b</span></code></pre></div>
<pre class="text"><code>tensor([[4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.]], device='cuda:0')</code></pre>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb72-1">grouped_autotuned_matmul(a,b)</span></code></pre></div>
<pre class="text"><code>tensor([[4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.],
        [4., 4., 4., 4., 4.]], device='cuda:0', dtype=torch.float16)</code></pre>
<ul>
<li><strong>Define Configurations</strong>:
<ul>
<li>List possible values for parameters.</li>
</ul></li>
<li><strong>Auto-Tuner Decorator</strong>:
<ul>
<li>Use <code>@triton.autotune(configs=..., key=['M', 'N', 'K'])</code>.</li>
</ul></li>
<li><strong>Execution</strong>:
<ul>
<li>Triton tests each configuration to find the optimal one.</li>
<li>The best configuration is cached for reuse.</li>
</ul></li>
</ul>
</section>
<section id="observations" class="level3">
<h3 class="anchored" data-anchor-id="observations">Observations</h3>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb74-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ===== Performance Benchmark with Autotuning =====</span></span>
<span id="cb74-2"></span>
<span id="cb74-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.testing.perf_report</span>(</span>
<span id="cb74-4">    triton.testing.Benchmark(</span>
<span id="cb74-5">        x_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'square_matrix_size'</span>],</span>
<span id="cb74-6">        x_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 32 to 2048</span></span>
<span id="cb74-7">        x_log<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb74-8">        line_arg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'provider'</span>,</span>
<span id="cb74-9">        line_vals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped-autotuned'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>],</span>
<span id="cb74-10">        line_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Naive'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Grouped'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Grouped &amp; Auto-Tuned'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Torch'</span>],</span>
<span id="cb74-11">        styles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>), (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)],</span>
<span id="cb74-12">        ylabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'GB/s'</span>,</span>
<span id="cb74-13">        plot_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'matmul-performance'</span>,</span>
<span id="cb74-14">        args<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{}</span>
<span id="cb74-15">    ))</span>
<span id="cb74-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> benchmark(square_matrix_size, provider):</span>
<span id="cb74-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb74-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Benchmark comparing all implementations including autotuned version.</span></span>
<span id="cb74-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb74-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Compares:</span></span>
<span id="cb74-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    1. Naive Triton implementation</span></span>
<span id="cb74-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    2. Grouped Triton implementation</span></span>
<span id="cb74-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    3. Grouped &amp; Autotuned Triton implementation</span></span>
<span id="cb74-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    4. PyTorch native implementation</span></span>
<span id="cb74-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb74-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create test matrices</span></span>
<span id="cb74-27">    sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> square_matrix_size</span>
<span id="cb74-28">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb74-29">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.rand((sz, sz), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb74-30">    </span>
<span id="cb74-31">    quantiles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>]</span>
<span id="cb74-32">    </span>
<span id="cb74-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Benchmark each implementation</span></span>
<span id="cb74-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'naive'</span>:</span>
<span id="cb74-35">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb74-36">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: naive_matmul(a, b, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>),</span>
<span id="cb74-37">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb74-38">        )</span>
<span id="cb74-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped'</span>:</span>
<span id="cb74-40">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb74-41">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: grouped_matmul(a, b, group_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span>),</span>
<span id="cb74-42">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb74-43">        )</span>
<span id="cb74-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grouped-autotuned'</span>:</span>
<span id="cb74-45">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb74-46">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: grouped_autotuned_matmul(a, b),</span>
<span id="cb74-47">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb74-48">        )</span>
<span id="cb74-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> provider <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torch'</span>:</span>
<span id="cb74-50">        ms, min_ms, max_ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> triton.testing.do_bench(</span>
<span id="cb74-51">            <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: torch.matmul(a,b),</span>
<span id="cb74-52">            quantiles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>quantiles</span>
<span id="cb74-53">        )</span>
<span id="cb74-54">    </span>
<span id="cb74-55">    gbps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> ms: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> ms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-6</span></span>
<span id="cb74-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> gbps(ms), gbps(max_ms), gbps(min_ms)</span></code></pre></div>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the benchmark</span></span>
<span id="cb75-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Running final performance comparison with autotuning..."</span>)</span>
<span id="cb75-3">benchmark.run(print_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, show_plots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-014/images/output_164_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<pre class="text"><code>matmul-performance:
   square_matrix_size     Naive   Grouped  Grouped &amp; Auto-Tuned     Torch
0                32.0  0.065934  0.062500              0.079470  0.051724
1                64.0  0.134078  0.149068              0.145455  0.083333
2               128.0  0.214286  0.214286              0.214286  0.215247
3               256.0  0.272727  0.272727              0.300000  0.300000
4               512.0  0.352941  0.352941              0.375000  0.300000
5              1024.0  0.210526  0.207343              0.243500  0.220753
6              2048.0  0.058492  0.057971              0.065362  0.078689</code></pre>
<ul>
<li><strong>Performance Improvements</strong>:
<ul>
<li>Auto-tuning can significantly enhance performance.</li>
</ul></li>
<li><strong>Unexpected Results</strong>:
<ul>
<li>In some cases, auto-tuned kernels may perform worse.</li>
<li>Requires analysis to adjust configurations.</li>
</ul></li>
</ul>
</section>
<section id="tips" class="level3">
<h3 class="anchored" data-anchor-id="tips">Tips</h3>
<ul>
<li><strong>Problem Size Specificity</strong>:
<ul>
<li>Optimal configurations may vary with input sizes.</li>
</ul></li>
<li><strong>Best Practices</strong>:
<ul>
<li>Refer to Triton documentation and community resources.</li>
<li>Experiment with different configurations.</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-and-resources" class="level2">
<h2 class="anchored" data-anchor-id="conclusion-and-resources">Conclusion and Resources</h2>
<section id="summary" class="level3">
<h3 class="anchored" data-anchor-id="summary">Summary</h3>
<ul>
<li><strong>Triton</strong> provides an accessible way to write efficient GPU kernels.</li>
<li>Offers a balance between <strong>ease of use</strong> and <strong>performance</strong>.</li>
<li><strong>Debugging</strong> and <strong>auto-tuning</strong> tools enhance development.</li>
<li><strong>Benchmarking</strong> is essential for performance validation.</li>
</ul>
</section>
<section id="further-learning" class="level3">
<h3 class="anchored" data-anchor-id="further-learning">Further Learning</h3>
<ul>
<li><strong>Resources</strong>:
<ul>
<li><strong><a href="https://triton-lang.org/main/index.html">Triton Documentation</a></strong>: Comprehensive guide and reference.</li>
<li><strong>Lectures and Talks</strong>:
<ul>
<li><a href="https://www.youtube.com/watch?v=LuhJEEJQgUM">Lecture 1: How to profile CUDA kernels in PyTorch</a>
<ul>
<li><a href="../lecture-001/">Notes</a></li>
</ul></li>
<li><a href="https://www.youtube.com/watch?v=09wntC6BT5o">Lecture 9: Reductions</a>
<ul>
<li><a href="../lecture-009/">Notes</a></li>
</ul></li>
</ul></li>
<li><strong>LightLLM Triton Kernels:</strong> <a href="https://github.com/ModelTC/lightllm/tree/main/lightllm/common/basemodel/triton_kernel">lightllm/common/basemodel/triton_kernel</a></li>
<li><strong>unsloth Triton Kernels:</strong> <a href="https://github.com/unslothai/unsloth/tree/main/unsloth/kernels">unsloth/kernels</a></li>
<li><strong>Triton Puzzles:</strong> <a href="https://github.com/srush/Triton-Puzzles">srush/Triton-Puzzles</a></li>
</ul></li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-014/</guid>
  <pubDate>Fri, 15 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Quantizing timm Image Classifiers with ONNX Runtime and TensorRT in Ubuntu</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/ort-tensorrt-ubuntu/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/pytorch-train-image-classifier-series.html"><strong>Fine-Tuning Image Classifiers with PyTorch and the timm library for Beginners</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Quantization Process</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading the Checkpoint Data</li>
<li>Loading the Dataset</li>
<li>Collecting Calibration Data</li>
<li>Performing Inference with TensorRT</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on image classification with the timm library. Previously, we <a href="../">fine-tuned a ResNet 18-D</a> model in PyTorch to classify hand signs and <a href="../onnx-export">exported it to ONNX</a>. This tutorial covers quantizing our ONNX model and performing int8 inference using ONNX Runtime and TensorRT.</p>
<p>Quantization aims to make inference more computationally and memory efficient using a lower precision data type (e.g., 8-bit integer (int8)) for the model weights and activations. Modern devices increasingly have specialized hardware for running models at these lower precisions for improved performance.</p>
<p>ONNX Runtime includes tools to assist with quantizing our model from its original float32 precision to int8. ONNX Runtime’s execution providers also make it easier to leverage the hardware-specific inference libraries used to run models on the specialized hardware. In this tutorial, we will use the TensorRT Execution Provider to perform int8-precision inference.</p>
<p>TensorRT is a high-performance inference library for NVIDIA hardware. For our purposes it allows us to run our image classification model at 16-bit and 8-bit precision, while leveraging the specialized tensor cores in modern NVIDIA devices.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../onnx-export">Exporting timm Image Classifiers from PyTorch to ONNX</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled" title="TensorRT Hardware Requirements:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
TensorRT Hardware Requirements:
</div>
</div>
<div class="callout-body-container callout-body">
<p>TensorRT requires NVIDIA hardware with CUDA <a href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#compute-capabilities">Compute Capability</a> 7.0 or higher (e.g., RTX 20-series or newer). Check the Compute Capability tables at the link below for your Nvidia hardware:</p>
<ul>
<li><a href="https://developer.nvidia.com/cuda-gpus#compute">GPU Computer Capability Tables</a></li>
</ul>
<p>You can follow along using the free GPU-tier of Google Colab if you do not have any supported hardware.</p>
</div>
</div>
</section>
<section id="quantization-process" class="level2">
<h2 class="anchored" data-anchor-id="quantization-process">Quantization Process</h2>
<p>Quantizing our model involves converting the original 32-bit floating point values to 8-bit integers. float32 precision allows for a significantly greater range of possible values versus int8. To find the best way to map the float32 values to int8, we must compute the range of float32 values in the model.</p>
<p>The float32 values for the model weights are static, while the activation values depend on the input fed to the model. We can calculate a suitable range of activation values by feeding sample inputs through the model and recording the activations. TensorRT can then use this information when quantizing the model. We will use a subset of images from the <a href="../#loading-and-exploring-the-dataset">original training dataset</a> to generate this calibration data.</p>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/timm-image-classifier-ort-tensorrt-int8-calibration-inference.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/timm-image-classifier-ort-tensorrt-int8-calibration-inference-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>First, we must add a few new libraries to our <a href="../onnx-export/#setting-up-your-python-environment">Python environment</a>.</p>
<section id="install-cuda-package" class="level3">
<h3 class="anchored" data-anchor-id="install-cuda-package">Install CUDA Package</h3>
<p>Both ONNX Runtime and TensorRT require CUDA for use with NVIDIA GPUs and support CUDA <code>12.x</code>.</p>
<p>We can view the available CUDA package versions using the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> search cuda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia/label/cuda-<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled" title="Available CUDA versions:">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Available CUDA versions:
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<pre class="text"><code>Loading channels: done
# Name                       Version           Build  Channel             
cuda                          12.0.0      h7428d3b_0  conda-forge         
cuda                          12.0.0      h7428d3b_1  conda-forge         
cuda                          12.0.0      ha770c72_0  conda-forge         
cuda                          12.0.0      ha804496_0  conda-forge         
cuda                          12.0.0      ha804496_1  conda-forge         
cuda                          12.1.1      h7428d3b_0  conda-forge         
cuda                          12.1.1      ha804496_0  conda-forge         
cuda                          12.2.2      h7428d3b_0  conda-forge         
cuda                          12.2.2      ha804496_0  conda-forge         
cuda                          12.3.2      h7428d3b_0  conda-forge         
cuda                          12.3.2      ha804496_0  conda-forge         
cuda                          12.4.0      h7428d3b_0  conda-forge         
cuda                          12.4.0      ha804496_0  conda-forge         
cuda                          12.4.1      h7428d3b_0  conda-forge         
cuda                          12.4.1      ha804496_0  conda-forge         
cuda                          12.5.0      h7428d3b_0  conda-forge         
cuda                          12.5.0      ha804496_0  conda-forge         
cuda                          12.5.1      h7428d3b_0  conda-forge         
cuda                          12.5.1      ha804496_0  conda-forge         
cuda                          12.6.0      h7428d3b_0  conda-forge         
cuda                          12.6.0      ha804496_0  conda-forge         
cuda                          12.6.1      h7428d3b_0  conda-forge         
cuda                          12.6.1      ha804496_0  conda-forge         
cuda                          12.6.2      h7428d3b_0  conda-forge         
cuda                          12.6.2      ha804496_0  conda-forge</code></pre>
</div>
</div>
</div>
<p>Run the following command to install CUDA in our Python environment with <a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#conda-installation">Conda/Mamba</a>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Conda</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Mamba</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install cuda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia/label/cuda-12.4.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install cuda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia/label/cuda-12.4.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="install-onnx-runtime-and-tensorrt" class="level3">
<h3 class="anchored" data-anchor-id="install-onnx-runtime-and-tensorrt">Install ONNX Runtime and TensorRT</h3>
<p>The only additional libraries we need are ONNX Runtime with GPU support and TensorRT, assuming the packages used in the previous two tutorials are already in the Python environment. At the time of writing, ONNX Runtime supports TensorRT <code>10.x</code>.</p>
<div class="callout callout-style-default callout-note callout-titled" title="Package Descriptions">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Package Descriptions
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>onnxruntime-gpu</code></td>
<td>ONNX Runtime is a runtime accelerator for machine learning models. (<a href="https://pypi.org/project/onnxruntime-gpu/">link</a>)</td>
</tr>
<tr class="even">
<td><code>tensorrt</code></td>
<td>A high performance deep learning inference library for Nvidia devices. (<a href="https://pypi.org/project/tensorrt/">link</a>)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>Run the following commands to install the libraries:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install TensorRT packages</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> tensorrt</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install ONNX Runtime for CUDA 12</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'onnxruntime-gpu==1.20.0'</span></span></code></pre></div>
<p>With our environment updated, we can dive into the code.</p>
</section>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>First, we will import the necessary Python dependencies into our Jupyter Notebook. The ONNX Runtime package does not know where to look for the cuDNN libraries included with the <code>cuda</code> package, so we load those first using the following approach adapted from the <a href="https://github.com/NVIDIA/TensorRT/blob/release/10.6/python/packaging/libs_wheel/tensorrt_libs/__init__.py">tensorrt package</a>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load cuDNN libraries</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ctypes</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb6-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nvidia <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cudnn</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> try_load(library):</span>
<span id="cb6-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb6-10">        ctypes.CDLL(library, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ctypes.RTLD_GLOBAL)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use RTLD_GLOBAL to make symbols available</span></span>
<span id="cb6-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">OSError</span>:</span>
<span id="cb6-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> try_load_libs_from_dir(path):</span>
<span id="cb6-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all .so files (Linux)</span></span>
<span id="cb6-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lib <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glob.iglob(os.path.join(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.so*"</span>)):</span>
<span id="cb6-17">        try_load(lib)</span>
<span id="cb6-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all .dll files (Windows)</span></span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lib <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glob.iglob(os.path.join(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.dll*"</span>)):</span>
<span id="cb6-20">        try_load(lib)</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the cudnn library path</span></span>
<span id="cb6-23">CUDNN_LIB_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(cudnn.__path__[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lib"</span>)</span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try loading all libraries in the cudnn lib directory</span></span>
<span id="cb6-26">try_load_libs_from_dir(CUDNN_LIB_DIR)</span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb7-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb7-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file, file_extract</span>
<span id="cb7-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img, get_img_files</span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy</span></span>
<span id="cb7-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-13"></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb7-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb7-16"></span>
<span id="cb7-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do not truncate the contents of cells and display all rows and columns</span></span>
<span id="cb7-18">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_colwidth'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_rows'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb7-19"></span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb7-21"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb7-22"></span>
<span id="cb7-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ONNX dependencies</span></span>
<span id="cb7-24"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnxruntime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ort <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the ONNX Runtime</span></span>
<span id="cb7-25"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxruntime.tools.symbolic_shape_infer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SymbolicShapeInference</span>
<span id="cb7-26"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxruntime.quantization <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CalibrationDataReader, CalibrationMethod, create_calibrator, write_calibration_table</span>
<span id="cb7-27"></span>
<span id="cb7-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import tensorrt_libs</span></span>
<span id="cb7-29"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorrt_libs</span></code></pre></div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Make sure to import the <code>tensorrt_libs</code> module that is part of the <code>tensorrt</code> pip package. Otherwise, you will need to update the <code>LD_LIBRARY_PATH</code> environment variable with the path to the TensorRT library files.</p>
</div>
</div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>Next, we will set the folder locations for our project, the calibration dataset, and the directory with the ONNX model and JSON class labels file.</p>
<section id="setting-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-directory-paths">Setting the Directory Paths</h3>
<p>Readers following the tutorial on their local machine should select locations with read and write access to store the archived and extracted dataset. For a cloud service like Google Colab, you can set it to the current directory.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb8-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pytorch-timm-image-classifier"</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb8-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb8-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store datasets</span></span>
<span id="cb8-11">dataset_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/Storage/Datasets/"</span>)</span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dataset directory if it does not exist</span></span>
<span id="cb8-13">dataset_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store archive files</span></span>
<span id="cb8-16">archive_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../Archive'</span></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the archive directory if it does not exist</span></span>
<span id="cb8-18">archive_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb8-21">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2024-02-02_15-41-23"</span>)</span>
<span id="cb8-22"></span>
<span id="cb8-23">pd.Series({</span>
<span id="cb8-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir, </span>
<span id="cb8-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Directory:"</span>: dataset_dir, </span>
<span id="cb8-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Directory:"</span>: archive_dir,</span>
<span id="cb8-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb8-28">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_98a20">
<thead>
</thead>
<tbody>
<tr>
<th id="T_98a20_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_98a20_row0_col0" class="data row0 col0">
pytorch-timm-image-classifier
</td>
</tr>
<tr>
<th id="T_98a20_level0_row1" class="row_heading level0 row1">
Dataset Directory:
</th>
<td id="T_98a20_row1_col0" class="data row1 col0">
/mnt/Storage/Datasets
</td>
</tr>
<tr>
<th id="T_98a20_level0_row2" class="row_heading level0 row2">
Archive Directory:
</th>
<td id="T_98a20_row2_col0" class="data row2 col0">
/mnt/Storage/Datasets/../Archive
</td>
</tr>
<tr>
<th id="T_98a20_level0_row3" class="row_heading level0 row3">
Checkpoint Directory:
</th>
<td id="T_98a20_row3_col0" class="data row3 col0">
pytorch-timm-image-classifier/2024-02-02_15-41-23
</td>
</tr>
</tbody>
</table>

</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the class labels, set the path for the ONNX model.</p>
<section id="load-the-class-labels" class="level3">
<h3 class="anchored" data-anchor-id="load-the-class-labels">Load the Class Labels</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The class labels path</span></span>
<span id="cb9-2">class_labels_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*classes.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON class labels data</span></span>
<span id="cb9-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb9-6">        class_labels_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the list of classes</span></span>
<span id="cb9-9">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_labels_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classes'</span>]</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the list of classes</span></span>
<span id="cb9-12">pd.DataFrame(class_names)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
call
</td>
</tr>
<tr>
<th>
1
</th>
<td>
dislike
</td>
</tr>
<tr>
<th>
2
</th>
<td>
fist
</td>
</tr>
<tr>
<th>
3
</th>
<td>
four
</td>
</tr>
<tr>
<th>
4
</th>
<td>
like
</td>
</tr>
<tr>
<th>
5
</th>
<td>
mute
</td>
</tr>
<tr>
<th>
6
</th>
<td>
no_gesture
</td>
</tr>
<tr>
<th>
7
</th>
<td>
ok
</td>
</tr>
<tr>
<th>
8
</th>
<td>
one
</td>
</tr>
<tr>
<th>
9
</th>
<td>
palm
</td>
</tr>
<tr>
<th>
10
</th>
<td>
peace
</td>
</tr>
<tr>
<th>
11
</th>
<td>
peace_inverted
</td>
</tr>
<tr>
<th>
12
</th>
<td>
rock
</td>
</tr>
<tr>
<th>
13
</th>
<td>
stop
</td>
</tr>
<tr>
<th>
14
</th>
<td>
stop_inverted
</td>
</tr>
<tr>
<th>
15
</th>
<td>
three
</td>
</tr>
<tr>
<th>
16
</th>
<td>
three2
</td>
</tr>
<tr>
<th>
17
</th>
<td>
two_up
</td>
</tr>
<tr>
<th>
18
</th>
<td>
two_up_inverted
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="set-model-checkpoint-information" class="level3">
<h3 class="anchored" data-anchor-id="set-model-checkpoint-information">Set Model Checkpoint Information</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The onnx model path</span></span>
<span id="cb10-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.onnx'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</section>
</section>
<section id="loading-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-dataset">Loading the Dataset</h2>
<p>Now that we set up the project, we can download our dataset and select a subset to use for calibration.</p>
<section id="setting-the-dataset-path" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-dataset-path">Setting the Dataset Path</h3>
<p>We first need to construct the name for the Hugging Face Hub dataset and define where to download and extract the dataset.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the dataset</span></span>
<span id="cb11-2">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-classification-512p-no-gesture-150k-zip'</span></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset name by combining the username and dataset name</span></span>
<span id="cb11-5">hf_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'cj-mills/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the zip file that contains the dataset</span></span>
<span id="cb11-8">archive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-zip"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip'</span>)</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the directory where the dataset will be extracted</span></span>
<span id="cb11-11">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-zip"</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb11-12"></span>
<span id="cb11-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Creating a Series with the dataset name and paths and converting it to a DataFrame for display</span></span>
<span id="cb11-14">pd.Series({</span>
<span id="cb11-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HuggingFace Dataset:"</span>: hf_dataset, </span>
<span id="cb11-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Path:"</span>: archive_path, </span>
<span id="cb11-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Path:"</span>: dataset_path</span>
<span id="cb11-18">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_04900">
<thead>
</thead>
<tbody>
<tr>
<th id="T_04900_level0_row0" class="row_heading level0 row0">
HuggingFace Dataset:
</th>
<td id="T_04900_row0_col0" class="data row0 col0">
cj-mills/hagrid-classification-512p-no-gesture-150k-zip
</td>
</tr>
<tr>
<th id="T_04900_level0_row1" class="row_heading level0 row1">
Archive Path:
</th>
<td id="T_04900_row1_col0" class="data row1 col0">
/mnt/Storage/Datasets/../Archive/hagrid-classification-512p-no-gesture-150k.zip
</td>
</tr>
<tr>
<th id="T_04900_level0_row2" class="row_heading level0 row2">
Dataset Path:
</th>
<td id="T_04900_row2_col0" class="data row2 col0">
/mnt/Storage/Datasets/hagrid-classification-512p-no-gesture-150k
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="downloading-the-dataset" class="level3">
<h3 class="anchored" data-anchor-id="downloading-the-dataset">Downloading the Dataset</h3>
<p>We can now download the dataset archive file and extract the dataset. We can delete the archive afterward to save space.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset URL</span></span>
<span id="cb12-2">dataset_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hf_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>removesuffix(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-zip'</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip"</span></span>
<span id="cb12-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"HuggingFace Dataset URL: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set whether to delete the archive file after extracting the dataset</span></span>
<span id="cb12-6">delete_archive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the dataset if not present</span></span>
<span id="cb12-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dataset_path.is_dir():</span>
<span id="cb12-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset folder already exists"</span>)</span>
<span id="cb12-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb12-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading dataset..."</span>)</span>
<span id="cb12-13">    download_file(dataset_url, archive_dir)    </span>
<span id="cb12-14">    </span>
<span id="cb12-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extracting dataset..."</span>)</span>
<span id="cb12-16">    file_extract(fname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>archive_path, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_dir)</span>
<span id="cb12-17">    </span>
<span id="cb12-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete the archive if specified</span></span>
<span id="cb12-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> delete_archive: archive_path.unlink()</span></code></pre></div>
</section>
<section id="get-image-file-paths" class="level3">
<h3 class="anchored" data-anchor-id="get-image-file-paths">Get Image File Paths</h3>
<p>Once downloaded, we can get the paths to the images in the dataset.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of all JPG image files in the dataset</span></span>
<span id="cb13-2">img_file_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(dataset_path.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./**/*.jpeg"</span>))</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of image files</span></span>
<span id="cb13-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of Images: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_file_paths)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the first five entries from the dictionary using a Pandas DataFrame</span></span>
<span id="cb13-8">pd.DataFrame(img_file_paths).head()</span></code></pre></div>
<pre class="text"><code>Number of Images: 153735</code></pre>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
/mnt/Storage/Datasets/hagrid-classification-512p-no-gesture-150k/call/3ffbf0a0-1837-42cd-8f13-33977a2b47aa.jpeg
</td>
</tr>
<tr>
<th>
1
</th>
<td>
/mnt/Storage/Datasets/hagrid-classification-512p-no-gesture-150k/call/7f4d415e-f570-42c3-aa5a-7c907d2d461e.jpeg
</td>
</tr>
<tr>
<th>
2
</th>
<td>
/mnt/Storage/Datasets/hagrid-classification-512p-no-gesture-150k/call/0003d6d1-3489-4f57-ab7a-44744dba93fd.jpeg
</td>
</tr>
<tr>
<th>
3
</th>
<td>
/mnt/Storage/Datasets/hagrid-classification-512p-no-gesture-150k/call/00084dfa-60a2-4c8e-9bd9-25658382b8b7.jpeg
</td>
</tr>
<tr>
<th>
4
</th>
<td>
/mnt/Storage/Datasets/hagrid-classification-512p-no-gesture-150k/call/0010543c-be59-49e7-8f6d-fbea8f5fdc6b.jpeg
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="select-sample-images" class="level3">
<h3 class="anchored" data-anchor-id="select-sample-images">Select Sample Images</h3>
<p>Using every image in the dataset for the calibration process would be unnecessary and time-consuming, so we’ll select a random subset.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1">random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set random seed for consistency </span></span>
<span id="cb15-2">sample_percentage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb15-3">random.shuffle(img_file_paths)</span>
<span id="cb15-4">sample_img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(img_file_paths, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_file_paths)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sample_percentage))</span></code></pre></div>
<div class="callout callout-style-default callout-tip callout-titled" title="Other Datasets:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Other Datasets:
</div>
</div>
<div class="callout-body-container callout-body">
<p>Try to have at least <code>200</code> samples for the calibration set if adapting this tutorial to another dataset.</p>
</div>
</div>
</section>
</section>
<section id="collecting-calibration-data" class="level2">
<h2 class="anchored" data-anchor-id="collecting-calibration-data">Collecting Calibration Data</h2>
<p>With the dataset samples selected, we can feed them through the model and collect the calibration data.</p>
<section id="implement-a-calibrationdatareader" class="level3">
<h3 class="anchored" data-anchor-id="implement-a-calibrationdatareader">Implement a CalibrationDataReader</h3>
<p>First, we will implement a <a href="https://github.com/microsoft/onnxruntime/blob/07788e082ef2c78c3f4e72f49e7e7c3db6f09cb0/onnxruntime/python/tools/quantization/calibrate.py#L30"><code>CalibrationDataReader</code></a> class to load and prepare samples to feed through the model.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CalibrationDataReaderCV(CalibrationDataReader):</span>
<span id="cb16-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A subclass of CalibrationDataReader specifically designed for handling</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    image data for calibration in computer vision tasks. This reader loads,</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    preprocesses, and provides images for model calibration.</span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb16-7">    </span>
<span id="cb16-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, img_file_paths, target_sz, input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>):</span>
<span id="cb16-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Initializes a new instance of the CalibrationDataReaderCV class.</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            img_file_paths (list): A list of image file paths.</span></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            target_sz (tuple): The target size (width, height) to resize images to.</span></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            input_name (str, optional): The name of the input node in the ONNX model. Default is 'input'.</span></span>
<span id="cb16-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb16-17">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the base class</span></span>
<span id="cb16-18">        </span>
<span id="cb16-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialization of instance variables</span></span>
<span id="cb16-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._img_file_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_file_paths</span>
<span id="cb16-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.input_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_name</span>
<span id="cb16-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.enum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">iter</span>(img_file_paths)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an iterator over the image paths</span></span>
<span id="cb16-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.target_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_sz</span>
<span id="cb16-24">        </span>
<span id="cb16-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_next(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb16-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Retrieves, processes, and returns the next image in the sequence as a NumPy array suitable for model input.</span></span>
<span id="cb16-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb16-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Returns:</span></span>
<span id="cb16-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            dict: A dictionary with a single key-value pair where the key is `input_name` and the value is the</span></span>
<span id="cb16-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  preprocessed image as a NumPy array, or None if there are no more images.</span></span>
<span id="cb16-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb16-33">        </span>
<span id="cb16-34">        img_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.enum, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the next image path</span></span>
<span id="cb16-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> img_path:</span>
<span id="cb16-36">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If there are no more paths, return None</span></span>
<span id="cb16-37"></span>
<span id="cb16-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the image from the filepath and convert to RGB</span></span>
<span id="cb16-39">        image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_path).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>)</span>
<span id="cb16-40"></span>
<span id="cb16-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize the image to the target size</span></span>
<span id="cb16-42">        input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(image, target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.target_sz, divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-43">        </span>
<span id="cb16-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a NumPy array, normalize, and add a batch dimension</span></span>
<span id="cb16-45">        input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb16-46"></span>
<span id="cb16-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the image in a dictionary under the specified input name</span></span>
<span id="cb16-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.input_name: input_tensor_np}</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled" title="Preprocessing Steps:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Preprocessing Steps:
</div>
</div>
<div class="callout-body-container callout-body">
<p>This <code>CalibrationDataReader</code> class does not normalize the input as our ONNX model performs that step internally. Be sure to include any required input normalization if adapting this tutorial to another model that does not include it internally.</p>
</div>
</div>
</section>
<section id="specify-a-cache-folder" class="level3">
<h3 class="anchored" data-anchor-id="specify-a-cache-folder">Specify a Cache Folder</h3>
<p>Next, we will create a folder to store the collected calibration data and any cache files generated by TensorRT.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">trt_cache_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_engine_cache'</span></span>
<span id="cb17-2">trt_cache_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb17-3">trt_cache_dir</span></code></pre></div>
<pre class="text"><code>PosixPath('pytorch-timm-image-classifier/2024-02-02_15-41-23/trt_engine_cache')</code></pre>
</section>
<section id="collect-calibration-data" class="level3">
<h3 class="anchored" data-anchor-id="collect-calibration-data">Collect Calibration Data</h3>
<p>Now, we can create a calibrator object and an instance of our custom <code>CalibrationDataReader</code> object to collect the activation values and compute the range of values. The calibrator object creates a temporary ONNX model for the calibration process that we can delete afterward.</p>
<p>After feeding the data samples through the model, we will save the generated calibration file for TensorRT to use later.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb19-2"></span>
<span id="cb19-3">target_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span></span>
<span id="cb19-4"></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save path for temporary ONNX model used during calibration process</span></span>
<span id="cb19-6">augmented_model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_file_path.parent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-augmented.onnx"</span></span>
<span id="cb19-7"></span>
<span id="cb19-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb19-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a calibrator object for the ONNX model.</span></span>
<span id="cb19-10">    calibrator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_calibrator(</span>
<span id="cb19-11">        model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>onnx_file_path, </span>
<span id="cb19-12">        op_types_to_calibrate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, </span>
<span id="cb19-13">        augmented_model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>augmented_model_path, </span>
<span id="cb19-14">        calibrate_method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CalibrationMethod.MinMax</span>
<span id="cb19-15">    )</span>
<span id="cb19-16"></span>
<span id="cb19-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the execution providers for the calibrator.</span></span>
<span id="cb19-18">    calibrator.set_execution_providers([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CUDAExecutionProvider"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CPUExecutionProvider"</span>])</span>
<span id="cb19-19"></span>
<span id="cb19-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the custom CalibrationDataReader object</span></span>
<span id="cb19-21">    calibration_data_reader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CalibrationDataReaderCV(img_file_paths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_img_paths, </span>
<span id="cb19-22">                                                      target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>target_sz, </span>
<span id="cb19-23">                                                      input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>calibrator.model.graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].name)</span>
<span id="cb19-24"></span>
<span id="cb19-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Collect calibration data using the specified data reader.</span></span>
<span id="cb19-26">    calibrator.collect_data(data_reader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>calibration_data_reader)</span>
<span id="cb19-27"></span>
<span id="cb19-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the computed calibration table to the specified directory.</span></span>
<span id="cb19-29">    write_calibration_table(calibrator.compute_data().data, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(trt_cache_dir))</span>
<span id="cb19-30">    </span>
<span id="cb19-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb19-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catch any exceptions that occur during the calibration process.</span></span>
<span id="cb19-33">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"An error occurred:"</span>, e)</span>
<span id="cb19-34"></span>
<span id="cb19-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">finally</span>:</span>
<span id="cb19-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove temporary ONNX file created during the calibration process</span></span>
<span id="cb19-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> augmented_model_path.exists():</span>
<span id="cb19-38">        augmented_model_path.unlink()</span></code></pre></div>
<pre class="text"><code>CPU times: user 51.7 s, sys: 679 ms, total: 52.3 s
Wall time: 54.1 s</code></pre>
</section>
<section id="inspect-tensorrt-cache-folder" class="level3">
<h3 class="anchored" data-anchor-id="inspect-tensorrt-cache-folder">Inspect TensorRT Cache Folder</h3>
<p>Looking in the cache folder, we should see three new files.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the content of the module folder as a Pandas DataFrame</span></span>
<span id="cb21-2">pd.DataFrame([path.name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> trt_cache_dir.iterdir()])</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
calibration.cache
</td>
</tr>
<tr>
<th>
1
</th>
<td>
calibration.flatbuffers
</td>
</tr>
<tr>
<th>
2
</th>
<td>
calibration.json
</td>
</tr>
</tbody>
</table>
</div>
<p>That takes care of the calibration process. In the next section, we will create an ONNX Runtime inference session and perform inference with TensorRT.</p>
</section>
</section>
<section id="performing-inference-with-tensorrt" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference-with-tensorrt">Performing Inference with TensorRT</h2>
<p>To have TensorRT quantize the model for int8 inference, we need to specify the path to the cache folder and the calibration table file name and enable int8 precision when initializing the inference session.</p>
<section id="create-an-inference-session" class="level3">
<h3 class="anchored" data-anchor-id="create-an-inference-session">Create an Inference Session</h3>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">ort.get_available_providers()</span></code></pre></div>
<pre class="text"><code>['TensorrtExecutionProvider', 'CUDAExecutionProvider', 'CPUExecutionProvider']</code></pre>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">providers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb24-2">    (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TensorrtExecutionProvider'</span>, {</span>
<span id="cb24-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'device_id'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The device ID</span></span>
<span id="cb24-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_max_workspace_size'</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4e9</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximum workspace size for TensorRT engine (1e9 ≈ 1GB)</span></span>
<span id="cb24-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_engine_cache_enable'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable TensorRT engine caching</span></span>
<span id="cb24-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_engine_cache_path'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(trt_cache_dir), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path for TensorRT engine, profile files, and int8 calibration table</span></span>
<span id="cb24-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_int8_enable'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable int8 mode in TensorRT</span></span>
<span id="cb24-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_int8_calibration_table_name'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'calibration.flatbuffers'</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># int8 calibration table file for non-QDQ models in int8 mode</span></span>
<span id="cb24-9">    })</span>
<span id="cb24-10">]</span>
<span id="cb24-11"></span>
<span id="cb24-12">sess_opt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.SessionOptions()</span>
<span id="cb24-13"></span>
<span id="cb24-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model and create an InferenceSession</span></span>
<span id="cb24-15">session <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.InferenceSession(onnx_file_path, sess_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sess_opt, providers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>providers)</span></code></pre></div>
</section>
<section id="select-a-test-image" class="level3">
<h3 class="anchored" data-anchor-id="select-a-test-image">Select a Test Image</h3>
<p>We can use the same test image and input size from the <a href="../onnx-export/#select-a-test-image">previous tutorial</a>.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">test_img_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'pexels-elina-volkova-16191659.jpg'</span></span>
<span id="cb25-2">test_img_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/cj-mills/pexel-hand-gesture-test-images/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb25-3"></span>
<span id="cb25-4">download_file(test_img_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb25-5"></span>
<span id="cb25-6">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_img_name)</span>
<span id="cb25-7">display(test_img)</span>
<span id="cb25-8"></span>
<span id="cb25-9">pd.Series({</span>
<span id="cb25-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test Image Size:"</span>: test_img.size, </span>
<span id="cb25-11">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/ort-tensorrt-ubuntu/images/output_41_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_cba4b">
<thead>
</thead>
<tbody>
<tr>
<th id="T_cba4b_level0_row0" class="row_heading level0 row0">
Test Image Size:
</th>
<td id="T_cba4b_row0_col0" class="data row0 col0">
(637, 960)
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="prepare-the-test-image" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-test-image">Prepare the Test Image</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the input image size</span></span>
<span id="cb26-2">test_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span></span>
<span id="cb26-3"></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize image without cropping</span></span>
<span id="cb26-5">input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(test_img, target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_sz)</span>
<span id="cb26-6"></span>
<span id="cb26-7">display(input_img)</span>
<span id="cb26-8"></span>
<span id="cb26-9">pd.Series({</span>
<span id="cb26-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Image Size:"</span>: input_img.size</span>
<span id="cb26-11">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/ort-tensorrt-ubuntu/images/output_43_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_796f0">
<thead>
</thead>
<tbody>
<tr>
<th id="T_796f0_level0_row0" class="row_heading level0 row0">
Input Image Size:
</th>
<td id="T_796f0_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="prepare-the-input-tensor" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor">Prepare the Input Tensor</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the existing input image to NumPy format</span></span>
<span id="cb27-2">input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span></code></pre></div>
</section>
<section id="build-tensorrt-engine" class="level3">
<h3 class="anchored" data-anchor-id="build-tensorrt-engine">Build TensorRT Engine</h3>
<p>TensorRT will build an optimized and quantized representation of our model called an engine when we first pass input to the inference session. It will save a copy of this engine object to the cache folder we specified earlier. The build process can take a bit, so caching the engine will save time for future use.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb28-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform a single inference run to build the TensorRT engine for the current input dimensions</span></span>
<span id="cb28-3">session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<pre class="text"><code>2024-11-11 18:00:16.983451530 [W:onnxruntime:Default, tensorrt_execution_provider.h:90 log] [2024-11-12 02:00:16 WARNING] Calibrator is not being used. Users must provide dynamic range for all tensors that are not Int32 or Bool.
2024-11-11 18:00:16.983548953 [W:onnxruntime:Default, tensorrt_execution_provider.h:90 log] [2024-11-12 02:00:16 WARNING] Missing scale and zero-point for tensor /model/fc/Gemm_output, expect fall back to non-int8 implementation for any layer consuming or producing given tensor
2024-11-11 18:00:16.983552890 [W:onnxruntime:Default, tensorrt_execution_provider.h:90 log] [2024-11-12 02:00:16 WARNING] Missing scale and zero-point for tensor ONNXTRT_Broadcast_output, expect fall back to non-int8 implementation for any layer consuming or producing given tensor
2024-11-11 18:00:16.983555175 [W:onnxruntime:Default, tensorrt_execution_provider.h:90 log] [2024-11-12 02:00:16 WARNING] Missing scale and zero-point for tensor /softmax/Softmax_output, expect fall back to non-int8 implementation for any layer consuming or producing given tensor</code></pre>
<pre><code>CPU times: user 13.8 s, sys: 1.85 s, total: 15.6 s
Wall time: 25.4 s</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>TensorRT needs to build separate engine files for different input dimensions.</p>
</div>
</div>
</section>
<section id="inspect-tensorrt-cache-folder-1" class="level3">
<h3 class="anchored" data-anchor-id="inspect-tensorrt-cache-folder-1">Inspect TensorRT Cache Folder</h3>
<p>If we look in the cache folder again, we can see a new <code>.engine</code> file and a new <code>.profile</code> file.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the content of the module folder as a Pandas DataFrame</span></span>
<span id="cb31-2">pd.DataFrame([path.name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> trt_cache_dir.iterdir()])</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
calibration.cache
</td>
</tr>
<tr>
<th>
1
</th>
<td>
calibration.flatbuffers
</td>
</tr>
<tr>
<th>
2
</th>
<td>
calibration.json
</td>
</tr>
<tr>
<th>
3
</th>
<td>
TensorrtExecutionProvider_TRTKernel_graph_main_graph_2087346457130887064_0_0_int8_sm89.engine
</td>
</tr>
<tr>
<th>
4
</th>
<td>
TensorrtExecutionProvider_TRTKernel_graph_main_graph_2087346457130887064_0_0_int8_sm89.profile
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="benchmark-quantized-model" class="level3">
<h3 class="anchored" data-anchor-id="benchmark-quantized-model">Benchmark Quantized Model</h3>
<p>With the TensorRT engine built, we can benchmark our quantized model to gauge the raw inference speeds.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>timeit</span>
<span id="cb32-2">session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})</span></code></pre></div>
<pre class="text"><code>361 μs ± 3.09 μs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)</code></pre>
<p>In my testing for this model, TensoRT int8 inference tends to be about 3x faster than the CUDA execution provider with the original float32 model.</p>
<p>Of course, it does not matter how much faster the quantized model is if there is a significant drop in accuracy, so let’s verify the prediction results.</p>
</section>
<section id="compute-the-predictions" class="level3">
<h3 class="anchored" data-anchor-id="compute-the-predictions">Compute the Predictions</h3>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb34-2">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb34-3"></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the highest confidence score</span></span>
<span id="cb34-5">confidence_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb34-6"></span>
<span id="cb34-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class index with the highest confidence score and convert it to the class name</span></span>
<span id="cb34-8">pred_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_names[outputs.argmax()]</span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb34-11">display(test_img)</span>
<span id="cb34-12"></span>
<span id="cb34-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the prediction data in a Pandas Series for easy formatting</span></span>
<span id="cb34-14">pd.Series({</span>
<span id="cb34-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Size:"</span>: input_img.size,</span>
<span id="cb34-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class:"</span>: pred_class,</span>
<span id="cb34-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Score:"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>confidence_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span></span>
<span id="cb34-18">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/ort-tensorrt-ubuntu/images/output_53_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_46d6d">
<thead>
</thead>
<tbody>
<tr>
<th id="T_46d6d_level0_row0" class="row_heading level0 row0">
Input Size:
</th>
<td id="T_46d6d_row0_col0" class="data row0 col0">
(288, 416)
</td>
</tr>
<tr>
<th id="T_46d6d_level0_row1" class="row_heading level0 row1">
Predicted Class:
</th>
<td id="T_46d6d_row1_col0" class="data row1 col0">
mute
</td>
</tr>
<tr>
<th id="T_46d6d_level0_row2" class="row_heading level0 row2">
Confidence Score:
</th>
<td id="T_46d6d_row2_col0" class="data row2 col0">
100.00%
</td>
</tr>
</tbody>
</table>
</div>
<hr>
<p>The probability scores will likely differ slightly from the full-precision ONNX model, but the predicted class should be the same.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<p>Don’t forget to download the content of the <code>trt_engine_cache</code> folder from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial. We previously trained an image classification model in PyTorch for hand gesture recognition, and now we’ve quantized that model for optimized inference on NVIDIA hardware. Our model is now smaller, faster, and better suited for real-time applications and edge devices like the Jetson Orin Nano.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="Questions:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Questions:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Feel free to post questions or problems related to this tutorial in the comments below. I try to make time to address them on Thursdays and Fridays.</li>
</ul>
</div>
</div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>onnx</category>
  <category>cuda</category>
  <category>tensorrt</category>
  <category>image classification</category>
  <category>tutorial</category>
  <guid>https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/ort-tensorrt-ubuntu/</guid>
  <pubDate>Mon, 11 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Quantizing YOLOX with ONNX Runtime and TensorRT in Ubuntu</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/ort-tensorrt-ubuntu/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/pytorch-train-object-detector-yolox-series.html"><strong>Training YOLOX Models for Real-Time Object Detection in PyTorch</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Quantization Process</li>
<li>Getting Started with the Code</li>
<li>Setting Up Your Python Environment</li>
<li>Importing the Required Dependencies</li>
<li>Setting Up the Project</li>
<li>Loading the Checkpoint Data</li>
<li>Loading the Dataset</li>
<li>Collecting Calibration Data</li>
<li>Performing Inference with TensorRT</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on real-time object detection with YOLOX. Previously, we <a href="../">fine-tuned a YOLOX</a> model in PyTorch to detect hand signs and <a href="../onnx-export">exported it to ONNX</a>. This tutorial covers quantizing our ONNX model and performing int8 inference using ONNX Runtime and TensorRT.</p>
<p>Quantization aims to make inference more computationally and memory efficient using a lower precision data type (e.g., 8-bit integer (int8)) for the model weights and activations. Modern devices increasingly have specialized hardware for running models at these lower precisions for improved performance.</p>
<p>ONNX Runtime includes tools to assist with quantizing our model from its original float32 precision to int8. ONNX Runtime’s execution providers also make it easier to leverage the hardware-specific inference libraries used to run models on the specialized hardware. In this tutorial, we will use the TensorRT Execution Provider to perform int8-precision inference.</p>
<p>TensorRT is a high-performance inference library for NVIDIA hardware. For our purposes it allows us to run our YOLOX model at 16-bit and 8-bit precision, while leveraging the specialized tensor cores in modern NVIDIA devices.</p>
<div class="callout callout-style-default callout-important callout-titled" title="This post assumes the reader has completed the previous tutorial linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post assumes the reader has completed the previous tutorial linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../onnx-export">Exporting YOLOX Models from PyTorch to ONNX</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-important callout-titled" title="TensorRT Hardware Requirements:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
TensorRT Hardware Requirements:
</div>
</div>
<div class="callout-body-container callout-body">
<p>TensorRT requires NVIDIA hardware with CUDA <a href="https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#compute-capabilities">Compute Capability</a> 7.0 or higher (e.g., RTX 20-series or newer). Check the Compute Capability tables at the link below for your Nvidia hardware:</p>
<ul>
<li><a href="https://developer.nvidia.com/cuda-gpus#compute">GPU Computer Capability Tables</a></li>
</ul>
<p>You can follow along using the free GPU-tier of Google Colab if you do not have any supported hardware.</p>
</div>
</div>
</section>
<section id="quantization-process" class="level2">
<h2 class="anchored" data-anchor-id="quantization-process">Quantization Process</h2>
<p>Quantizing our model involves converting the original 32-bit floating point values to 8-bit integers. float32 precision allows for a significantly greater range of possible values versus int8. To find the best way to map the float32 values to int8, we must compute the range of float32 values in the model.</p>
<p>The float32 values for the model weights are static, while the activation values depend on the input fed to the model. We can calculate a suitable range of activation values by feeding sample inputs through the model and recording the activations. TensorRT can then use this information when quantizing the model. We will use a subset of images from the <a href="../#loading-and-exploring-the-dataset">original training dataset</a> to generate this calibration data.</p>
</section>
<section id="getting-started-with-the-code" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h2>
<p>As with the previous tutorial, the code is available as a Jupyter Notebook.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Google Colab</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/yolox-object-detector-ort-tensorrt-int8-calibration-inference.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/yolox-object-detector-ort-tensorrt-int8-calibration-inference-colab.ipynb">Open In Colab</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setting-up-your-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-your-python-environment">Setting Up Your Python Environment</h2>
<p>First, we must add a few new libraries to our <a href="../onnx-export/#setting-up-your-python-environment">Python environment</a>.</p>
<section id="install-cuda-package" class="level3">
<h3 class="anchored" data-anchor-id="install-cuda-package">Install CUDA Package</h3>
<p>Both ONNX Runtime and TensorRT require CUDA for use with NVIDIA GPUs and support CUDA <code>12.x</code>.</p>
<p>We can view the available CUDA package versions using the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> search cuda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia/label/cuda-<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled" title="Available CUDA versions:">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-4-contents" aria-controls="callout-4" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Available CUDA versions:
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-4" class="callout-4-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<pre class="text"><code>Loading channels: done
# Name                       Version           Build  Channel             
cuda                          12.0.0      h7428d3b_0  conda-forge         
cuda                          12.0.0      h7428d3b_1  conda-forge         
cuda                          12.0.0      ha770c72_0  conda-forge         
cuda                          12.0.0      ha804496_0  conda-forge         
cuda                          12.0.0      ha804496_1  conda-forge         
cuda                          12.1.1      h7428d3b_0  conda-forge         
cuda                          12.1.1      ha804496_0  conda-forge         
cuda                          12.2.2      h7428d3b_0  conda-forge         
cuda                          12.2.2      ha804496_0  conda-forge         
cuda                          12.3.2      h7428d3b_0  conda-forge         
cuda                          12.3.2      ha804496_0  conda-forge         
cuda                          12.4.0      h7428d3b_0  conda-forge         
cuda                          12.4.0      ha804496_0  conda-forge         
cuda                          12.4.1      h7428d3b_0  conda-forge         
cuda                          12.4.1      ha804496_0  conda-forge         
cuda                          12.5.0      h7428d3b_0  conda-forge         
cuda                          12.5.0      ha804496_0  conda-forge         
cuda                          12.5.1      h7428d3b_0  conda-forge         
cuda                          12.5.1      ha804496_0  conda-forge         
cuda                          12.6.0      h7428d3b_0  conda-forge         
cuda                          12.6.0      ha804496_0  conda-forge         
cuda                          12.6.1      h7428d3b_0  conda-forge         
cuda                          12.6.1      ha804496_0  conda-forge         
cuda                          12.6.2      h7428d3b_0  conda-forge         
cuda                          12.6.2      ha804496_0  conda-forge</code></pre>
</div>
</div>
</div>
<p>Run the following command to install CUDA in our Python environment with <a href="https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#conda-installation">Conda/Mamba</a>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Conda</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Mamba</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> install cuda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia/label/cuda-12.4.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install cuda <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia/label/cuda-12.4.0 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="install-onnx-runtime-and-tensorrt" class="level3">
<h3 class="anchored" data-anchor-id="install-onnx-runtime-and-tensorrt">Install ONNX Runtime and TensorRT</h3>
<p>The only additional libraries we need are ONNX Runtime with GPU support and TensorRT, assuming the packages used in the previous two tutorials are already in the Python environment. At the time of writing, ONNX Runtime supports TensorRT <code>10.x</code>.</p>
<div class="callout callout-style-default callout-note callout-titled" title="Package Descriptions">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Package Descriptions
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<table class="caption-top table">
<thead>
<tr class="header">
<th>Package</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>onnxruntime-gpu</code></td>
<td>ONNX Runtime is a runtime accelerator for machine learning models. (<a href="https://pypi.org/project/onnxruntime-gpu/">link</a>)</td>
</tr>
<tr class="even">
<td><code>tensorrt</code></td>
<td>A high performance deep learning inference library for Nvidia devices. (<a href="https://pypi.org/project/tensorrt/">link</a>)</td>
</tr>
</tbody>
</table>
</div>
</div>
</div>
<p>Run the following commands to install the libraries:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install TensorRT packages</span></span>
<span id="cb5-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> tensorrt</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install ONNX Runtime for CUDA 12</span></span>
<span id="cb5-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-U</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'onnxruntime-gpu==1.20.0'</span></span></code></pre></div>
<p>With our environment updated, we can dive into the code.</p>
</section>
</section>
<section id="importing-the-required-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h2>
<p>First, we will import the necessary Python dependencies into our Jupyter Notebook. The ONNX Runtime package does not know where to look for the cuDNN libraries included with the <code>cuda</code> package, so we load those first using the following approach adapted from the <a href="https://github.com/NVIDIA/TensorRT/blob/release/10.6/python/packaging/libs_wheel/tensorrt_libs/__init__.py">tensorrt package</a>.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load cuDNN libraries</span></span>
<span id="cb6-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ctypes</span>
<span id="cb6-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb6-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb6-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb6-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> nvidia <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cudnn</span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> try_load(library):</span>
<span id="cb6-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb6-10">        ctypes.CDLL(library, mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ctypes.RTLD_GLOBAL)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use RTLD_GLOBAL to make symbols available</span></span>
<span id="cb6-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">OSError</span>:</span>
<span id="cb6-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> try_load_libs_from_dir(path):</span>
<span id="cb6-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all .so files (Linux)</span></span>
<span id="cb6-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lib <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glob.iglob(os.path.join(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.so*"</span>)):</span>
<span id="cb6-17">        try_load(lib)</span>
<span id="cb6-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all .dll files (Windows)</span></span>
<span id="cb6-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> lib <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> glob.iglob(os.path.join(path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.dll*"</span>)):</span>
<span id="cb6-20">        try_load(lib)</span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the cudnn library path</span></span>
<span id="cb6-23">CUDNN_LIB_DIR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(cudnn.__path__[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lib"</span>)</span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Try loading all libraries in the cudnn lib directory</span></span>
<span id="cb6-26">try_load_libs_from_dir(CUDNN_LIB_DIR)</span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb7-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb7-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file, file_extract</span>
<span id="cb7-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img, get_img_files</span>
<span id="cb7-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.annotation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> draw_bboxes</span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import numpy</span></span>
<span id="cb7-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-14"></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb7-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb7-17"></span>
<span id="cb7-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do not truncate the contents of cells and display all rows and columns</span></span>
<span id="cb7-19">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_colwidth'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_rows'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb7-20"></span>
<span id="cb7-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PIL for image manipulation</span></span>
<span id="cb7-22"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb7-23"></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import tensorrt_libs</span></span>
<span id="cb7-25"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tensorrt_libs</span>
<span id="cb7-26"></span>
<span id="cb7-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ONNX dependencies</span></span>
<span id="cb7-28"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnxruntime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ort <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the ONNX Runtime</span></span>
<span id="cb7-29"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxruntime.tools.symbolic_shape_infer <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SymbolicShapeInference</span>
<span id="cb7-30"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxruntime.quantization <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> CalibrationDataReader, CalibrationMethod, create_calibrator, write_calibration_table</span>
<span id="cb7-31"></span>
<span id="cb7-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import tqdm for progress bar</span></span>
<span id="cb7-33"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm.auto <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span></code></pre></div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Make sure to import the <code>tensorrt_libs</code> module that is part of the <code>tensorrt</code> pip package. Otherwise, you will need to update the <code>LD_LIBRARY_PATH</code> environment variable with the path to the TensorRT library files.</p>
</div>
</div>
</section>
<section id="setting-up-the-project" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h2>
<p>Next, we will set the folder locations for our project, the calibration dataset, and the directory with the ONNX model and JSON colormap file. We should also ensure we have a font file for annotating images.</p>
<section id="setting-the-directory-paths" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-directory-paths">Setting the Directory Paths</h3>
<p>Readers following the tutorial on their local machine should select locations with read and write access to store the archived and extracted dataset. For a cloud service like Google Colab, you can set it to the current directory.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb8-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pytorch-yolox-object-detector"</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb8-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb8-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store datasets</span></span>
<span id="cb8-11">dataset_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/Storage/Datasets/"</span>)</span>
<span id="cb8-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dataset directory if it does not exist</span></span>
<span id="cb8-13">dataset_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-14"></span>
<span id="cb8-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store archive files</span></span>
<span id="cb8-16">archive_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../Archive'</span></span>
<span id="cb8-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the archive directory if it does not exist</span></span>
<span id="cb8-18">archive_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb8-21">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2024-02-17_11-08-46"</span>)</span>
<span id="cb8-22"></span>
<span id="cb8-23">pd.Series({</span>
<span id="cb8-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir, </span>
<span id="cb8-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Directory:"</span>: dataset_dir, </span>
<span id="cb8-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Directory:"</span>: archive_dir,</span>
<span id="cb8-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb8-28">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_84566">
<thead>
</thead>
<tbody>
<tr>
<th id="T_84566_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_84566_row0_col0" class="data row0 col0">
pytorch-yolox-object-detector
</td>
</tr>
<tr>
<th id="T_84566_level0_row1" class="row_heading level0 row1">
Dataset Directory:
</th>
<td id="T_84566_row1_col0" class="data row1 col0">
/mnt/Storage/Datasets
</td>
</tr>
<tr>
<th id="T_84566_level0_row2" class="row_heading level0 row2">
Archive Directory:
</th>
<td id="T_84566_row2_col0" class="data row2 col0">
/mnt/Storage/Datasets/../Archive
</td>
</tr>
<tr>
<th id="T_84566_level0_row3" class="row_heading level0 row3">
Checkpoint Directory:
</th>
<td id="T_84566_row3_col0" class="data row3 col0">
pytorch-yolox-object-detector/2024-02-17_11-08-46
</td>
</tr>
</tbody>
</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="I made an ONNX model  available on Hugging Face Hub with a colormap file in the repository linked below:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
I made an ONNX model available on Hugging Face Hub with a colormap file in the repository linked below:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://huggingface.co/cj-mills/yolox-hagrid-onnx/tree/main">cj-mills/yolox-hagrid-onnx</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Those following along on Google Colab can drag the contents of their checkpoint folder into Colab's file browser. ">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Those following along on Google Colab can drag the contents of their checkpoint folder into Colab’s file browser.
</div>
</div>
<div class="callout-body-container callout-body">

</div>
</div>
</section>
<section id="download-a-font-file" class="level3">
<h3 class="anchored" data-anchor-id="download-a-font-file">Download a Font File</h3>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the font file</span></span>
<span id="cb9-2">font_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KFOlCnqEu92Fr1MmEU9vAw.ttf'</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the font file</span></span>
<span id="cb9-5">download_file(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://fonts.gstatic.com/s/roboto/v30/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>font_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span></code></pre></div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h2>
<p>Now, we can load the colormap, set the path for the ONNX model, and set the max stride value.</p>
<section id="load-the-colormap" class="level3">
<h3 class="anchored" data-anchor-id="load-the-colormap">Load the Colormap</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The colormap path</span></span>
<span id="cb10-2">colormap_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*colormap.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON colormap data</span></span>
<span id="cb10-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(colormap_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb10-6">        colormap_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the JSON data to a dictionary        </span></span>
<span id="cb10-9">colormap_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]: item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colormap_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]}</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the class names from the colormap</span></span>
<span id="cb10-12">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(colormap_dict.keys())</span>
<span id="cb10-13"></span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of the colormap in integer format</span></span>
<span id="cb10-15">int_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> color) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colormap_dict.values()]</span></code></pre></div>
</section>
<section id="set-model-checkpoint-information" class="level3">
<h3 class="anchored" data-anchor-id="set-model-checkpoint-information">Set Model Checkpoint Information</h3>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The onnx model path</span></span>
<span id="cb11-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.onnx'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set max stride value for processing output</span></span>
<span id="cb11-5">max_stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span></code></pre></div>
</section>
</section>
<section id="loading-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-dataset">Loading the Dataset</h2>
<p>Now that we set up the project, we can download our dataset and select a subset to use for calibration.</p>
<section id="setting-the-dataset-path" class="level3">
<h3 class="anchored" data-anchor-id="setting-the-dataset-path">Setting the Dataset Path</h3>
<p>We first need to construct the name for the Hugging Face Hub dataset and define where to download and extract the dataset.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the dataset</span></span>
<span id="cb12-2">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-sample-30k-384p'</span></span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset name by combining the username and dataset name</span></span>
<span id="cb12-5">hf_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'cj-mills/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the zip file that contains the dataset</span></span>
<span id="cb12-8">archive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip'</span>)</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the directory where the dataset will be extracted</span></span>
<span id="cb12-11">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb12-12"></span>
<span id="cb12-13">pd.Series({</span>
<span id="cb12-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HuggingFace Dataset:"</span>: hf_dataset, </span>
<span id="cb12-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Path:"</span>: archive_path, </span>
<span id="cb12-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Path:"</span>: dataset_path</span>
<span id="cb12-17">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_ac294">
<thead>
</thead>
<tbody>
<tr>
<th id="T_ac294_level0_row0" class="row_heading level0 row0">
HuggingFace Dataset:
</th>
<td id="T_ac294_row0_col0" class="data row0 col0">
cj-mills/hagrid-sample-30k-384p
</td>
</tr>
<tr>
<th id="T_ac294_level0_row1" class="row_heading level0 row1">
Archive Path:
</th>
<td id="T_ac294_row1_col0" class="data row1 col0">
/mnt/Storage/Datasets/../Archive/hagrid-sample-30k-384p.zip
</td>
</tr>
<tr>
<th id="T_ac294_level0_row2" class="row_heading level0 row2">
Dataset Path:
</th>
<td id="T_ac294_row2_col0" class="data row2 col0">
/mnt/Storage/Datasets/hagrid-sample-30k-384p
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="downloading-the-dataset" class="level3">
<h3 class="anchored" data-anchor-id="downloading-the-dataset">Downloading the Dataset</h3>
<p>We can now download the dataset archive file and extract the dataset. We can delete the archive afterward to save space.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset URL</span></span>
<span id="cb13-2">dataset_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hf_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip"</span></span>
<span id="cb13-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"HuggingFace Dataset URL: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-4"></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set whether to delete the archive file after extracting the dataset</span></span>
<span id="cb13-6">delete_archive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the dataset if not present</span></span>
<span id="cb13-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dataset_path.is_dir():</span>
<span id="cb13-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset folder already exists"</span>)</span>
<span id="cb13-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading dataset..."</span>)</span>
<span id="cb13-13">    download_file(dataset_url, archive_dir)    </span>
<span id="cb13-14">    </span>
<span id="cb13-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extracting dataset..."</span>)</span>
<span id="cb13-16">    file_extract(fname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>archive_path, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_dir)</span>
<span id="cb13-17">    </span>
<span id="cb13-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete the archive if specified</span></span>
<span id="cb13-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> delete_archive: archive_path.unlink()</span></code></pre></div>
</section>
<section id="get-image-file-paths" class="level3">
<h3 class="anchored" data-anchor-id="get-image-file-paths">Get Image File Paths</h3>
<p>Once downloaded, we can get the paths to the images in the dataset.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of all JPG image files in the dataset</span></span>
<span id="cb14-2">img_file_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(dataset_path.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./**/*.jpg"</span>))</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of image files</span></span>
<span id="cb14-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of Images: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_file_paths)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the first five entries from the dictionary using a Pandas DataFrame</span></span>
<span id="cb14-8">pd.DataFrame(img_file_paths).head()</span></code></pre></div>
<pre class="text"><code>Number of Images: 31833</code></pre>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/00005c9c-3548-4a8f-9d0b-2dd4aff37fc9.jpg
</td>
</tr>
<tr>
<th>
1
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/0020a3db-82d8-47aa-8642-2715d4744db5.jpg
</td>
</tr>
<tr>
<th>
2
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/004ac93f-0f7c-49a4-aadc-737e0ad4273c.jpg
</td>
</tr>
<tr>
<th>
3
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/006cac69-d3f0-47f9-aac9-38702d038ef1.jpg
</td>
</tr>
<tr>
<th>
4
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/00973fac-440e-4a56-b60c-2a06d5fb155d.jpg
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="select-sample-images" class="level3">
<h3 class="anchored" data-anchor-id="select-sample-images">Select Sample Images</h3>
<p>Using every image in the dataset for the calibration process would be unnecessary and time-consuming, so we’ll select a random subset.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set random seed for consistency </span></span>
<span id="cb16-2">sample_percentage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb16-3">sample_img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(img_file_paths, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_file_paths)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sample_percentage))</span></code></pre></div>
<div class="callout callout-style-default callout-tip callout-titled" title="Other Datasets:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Other Datasets:
</div>
</div>
<div class="callout-body-container callout-body">
<p>Try to have at least <code>200</code> samples for the calibration set if adapting this tutorial to another dataset.</p>
</div>
</div>
</section>
</section>
<section id="collecting-calibration-data" class="level2">
<h2 class="anchored" data-anchor-id="collecting-calibration-data">Collecting Calibration Data</h2>
<p>With the dataset samples selected, we can feed them through the model and collect the calibration data.</p>
<section id="implement-a-calibrationdatareader" class="level3">
<h3 class="anchored" data-anchor-id="implement-a-calibrationdatareader">Implement a CalibrationDataReader</h3>
<p>First, we will implement a <a href="https://github.com/microsoft/onnxruntime/blob/07788e082ef2c78c3f4e72f49e7e7c3db6f09cb0/onnxruntime/python/tools/quantization/calibrate.py#L30"><code>CalibrationDataReader</code></a> class to load and prepare samples to feed through the model.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> CalibrationDataReaderCV(CalibrationDataReader):</span>
<span id="cb17-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A subclass of CalibrationDataReader specifically designed for handling</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    image data for calibration in computer vision tasks. This reader loads,</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    preprocesses, and provides images for model calibration.</span></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb17-7">    </span>
<span id="cb17-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, img_file_paths, target_sz, max_stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>):</span>
<span id="cb17-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Initializes a new instance of the CalibrationDataReaderCV class.</span></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb17-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb17-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            img_file_paths (list): A list of image file paths.</span></span>
<span id="cb17-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            target_sz (tuple): The target size (width, height) to resize images to.</span></span>
<span id="cb17-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            max_stride (int, optional): Maximum stride for ensuring input dimension compatibility. Default is 32.</span></span>
<span id="cb17-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            input_name (str, optional): The name of the input node in the ONNX model. Default is 'input'.</span></span>
<span id="cb17-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb17-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the base class</span></span>
<span id="cb17-19">        </span>
<span id="cb17-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialization of instance variables</span></span>
<span id="cb17-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._img_file_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_file_paths</span>
<span id="cb17-22">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.input_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_name</span>
<span id="cb17-23">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_stride</span>
<span id="cb17-24">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.enum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">iter</span>(img_file_paths)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an iterator over the image paths</span></span>
<span id="cb17-25">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.target_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_sz</span>
<span id="cb17-26">        </span>
<span id="cb17-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_next(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb17-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Retrieves, processes, and returns the next image in the sequence as a NumPy array suitable for model input.</span></span>
<span id="cb17-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb17-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Returns:</span></span>
<span id="cb17-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            dict: A dictionary with a single key-value pair where the key is `input_name` and the value is the</span></span>
<span id="cb17-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                  preprocessed image as a NumPy array, or None if there are no more images.</span></span>
<span id="cb17-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb17-35">        </span>
<span id="cb17-36">        img_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.enum, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the next image path</span></span>
<span id="cb17-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> img_path:</span>
<span id="cb17-38">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If there are no more paths, return None</span></span>
<span id="cb17-39"></span>
<span id="cb17-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the image from the filepath and convert to RGB</span></span>
<span id="cb17-41">        image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_path).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>)</span>
<span id="cb17-42"></span>
<span id="cb17-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize the image to the target size</span></span>
<span id="cb17-44">        resized_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(image, target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.target_sz, divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb17-45">        </span>
<span id="cb17-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust dimensions to be multiples of max_stride</span></span>
<span id="cb17-47">        input_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_stride <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> resized_img.size]</span>
<span id="cb17-48">        </span>
<span id="cb17-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate offsets for cropping to maintain aspect ratio</span></span>
<span id="cb17-50">        offsets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (np.array(resized_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> np.array(input_dims)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb17-51">        </span>
<span id="cb17-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the scale between original and resized images for potential use</span></span>
<span id="cb17-53">        min_img_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(image.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(resized_img.size)</span>
<span id="cb17-54">        max_img_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(image.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(resized_img.size)</span>
<span id="cb17-55">        </span>
<span id="cb17-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crop the resized image based on calculated offsets to fit model input requirements</span></span>
<span id="cb17-57">        input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resized_img.crop(box<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>offsets, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(np.array(resized_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offsets)])</span>
<span id="cb17-58"></span>
<span id="cb17-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a NumPy array, normalize, and add a batch dimension</span></span>
<span id="cb17-60">        input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb17-61"></span>
<span id="cb17-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the image in a dictionary under the specified input name</span></span>
<span id="cb17-63">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.input_name: input_tensor_np}</span></code></pre></div>
<div class="callout callout-style-default callout-warning callout-titled" title="Preprocessing Steps:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Preprocessing Steps:
</div>
</div>
<div class="callout-body-container callout-body">
<p>This <code>CalibrationDataReader</code> class does not normalize the input as our ONNX model performs that step internally. Be sure to include any required input normalization if adapting this tutorial to another model that does not include it internally.</p>
</div>
</div>
</section>
<section id="specify-a-cache-folder" class="level3">
<h3 class="anchored" data-anchor-id="specify-a-cache-folder">Specify a Cache Folder</h3>
<p>Next, we will create a folder to store the collected calibration data and any cache files generated by TensorRT.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">trt_cache_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_engine_cache'</span></span>
<span id="cb18-2">trt_cache_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb18-3">trt_cache_dir</span></code></pre></div>
<pre class="text"><code>PosixPath('pytorch-yolox-object-detector/2024-02-17_11-08-46/trt_engine_cache')</code></pre>
</section>
<section id="collect-calibration-data" class="level3">
<h3 class="anchored" data-anchor-id="collect-calibration-data">Collect Calibration Data</h3>
<p>Now, we can create a calibrator object and an instance of our custom <code>CalibrationDataReader</code> object to collect the activation values and compute the range of values. The calibrator object creates a temporary ONNX model for the calibration process that we can delete afterward.</p>
<p>After feeding the data samples through the model, we will save the generated calibration file for TensorRT to use later.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb20-2"></span>
<span id="cb20-3">target_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">384</span></span>
<span id="cb20-4"></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save path for temporary ONNX model used during calibration process</span></span>
<span id="cb20-6">augmented_model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_file_path.parent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-augmented.onnx"</span></span>
<span id="cb20-7"></span>
<span id="cb20-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb20-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a calibrator object for the ONNX model.</span></span>
<span id="cb20-10">    calibrator <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> create_calibrator(</span>
<span id="cb20-11">        model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>onnx_file_path, </span>
<span id="cb20-12">        op_types_to_calibrate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, </span>
<span id="cb20-13">        augmented_model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>augmented_model_path, </span>
<span id="cb20-14">        calibrate_method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>CalibrationMethod.MinMax</span>
<span id="cb20-15">    )</span>
<span id="cb20-16"></span>
<span id="cb20-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the execution providers for the calibrator.</span></span>
<span id="cb20-18">    calibrator.set_execution_providers([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CUDAExecutionProvider"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CPUExecutionProvider"</span>])</span>
<span id="cb20-19"></span>
<span id="cb20-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the custom CalibrationDataReader object</span></span>
<span id="cb20-21">    calibration_data_reader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CalibrationDataReaderCV(img_file_paths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_img_paths, </span>
<span id="cb20-22">                                                      target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>target_sz, </span>
<span id="cb20-23">                                                      max_stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_stride, </span>
<span id="cb20-24">                                                      input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>calibrator.model.graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].name)</span>
<span id="cb20-25"></span>
<span id="cb20-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Collect calibration data using the specified data reader.</span></span>
<span id="cb20-27">    calibrator.collect_data(data_reader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>calibration_data_reader)</span>
<span id="cb20-28"></span>
<span id="cb20-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the computed calibration table to the specified directory.</span></span>
<span id="cb20-30">    write_calibration_table(calibrator.compute_data().data, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(trt_cache_dir))</span>
<span id="cb20-31">    </span>
<span id="cb20-32"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb20-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Catch any exceptions that occur during the calibration process.</span></span>
<span id="cb20-34">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"An error occurred:"</span>, e)</span>
<span id="cb20-35"></span>
<span id="cb20-36"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">finally</span>:</span>
<span id="cb20-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove temporary ONNX file created during the calibration process</span></span>
<span id="cb20-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> augmented_model_path.exists():</span>
<span id="cb20-39">        augmented_model_path.unlink()</span></code></pre></div>
<pre class="text"><code>CPU times: user 1min 25s, sys: 794 ms, total: 1min 26s
Wall time: 1min 25s</code></pre>
</section>
<section id="inspect-tensorrt-cache-folder" class="level3">
<h3 class="anchored" data-anchor-id="inspect-tensorrt-cache-folder">Inspect TensorRT Cache Folder</h3>
<p>Looking in the cache folder, we should see three new files.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the content of the module folder as a Pandas DataFrame</span></span>
<span id="cb22-2">pd.DataFrame([path.name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> trt_cache_dir.iterdir()])</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
calibration.cache
</td>
</tr>
<tr>
<th>
1
</th>
<td>
calibration.flatbuffers
</td>
</tr>
<tr>
<th>
2
</th>
<td>
calibration.json
</td>
</tr>
</tbody>
</table>
</div>
<p>That takes care of the calibration process. In the next section, we will create an ONNX Runtime inference session and perform inference with TensorRT.</p>
</section>
</section>
<section id="performing-inference-with-tensorrt" class="level2">
<h2 class="anchored" data-anchor-id="performing-inference-with-tensorrt">Performing Inference with TensorRT</h2>
<p>To have TensorRT quantize the model for int8 inference, we need to specify the path to the cache folder and the calibration table file name and enable int8 precision when initializing the inference session.</p>
<section id="create-an-inference-session" class="level3">
<h3 class="anchored" data-anchor-id="create-an-inference-session">Create an Inference Session</h3>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">ort.get_available_providers()</span></code></pre></div>
<pre class="text"><code>['TensorrtExecutionProvider', 'CUDAExecutionProvider', 'CPUExecutionProvider']</code></pre>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">providers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb25-2">    (<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TensorrtExecutionProvider'</span>, {</span>
<span id="cb25-3">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'device_id'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The device ID</span></span>
<span id="cb25-4">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_max_workspace_size'</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">4e9</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximum workspace size for TensorRT engine (1e9 ≈ 1GB)</span></span>
<span id="cb25-5">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_engine_cache_enable'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable TensorRT engine caching</span></span>
<span id="cb25-6">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_engine_cache_path'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(trt_cache_dir), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path for TensorRT engine, profile files, and int8 calibration table</span></span>
<span id="cb25-7">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_int8_enable'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Enable int8 mode in TensorRT</span></span>
<span id="cb25-8">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'trt_int8_calibration_table_name'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'calibration.flatbuffers'</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># int8 calibration table file for non-QDQ models in int8 mode</span></span>
<span id="cb25-9">    })</span>
<span id="cb25-10">]</span>
<span id="cb25-11"></span>
<span id="cb25-12">sess_opt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.SessionOptions()</span>
<span id="cb25-13"></span>
<span id="cb25-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model and create an InferenceSession</span></span>
<span id="cb25-15">session <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.InferenceSession(onnx_file_path, sess_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sess_opt, providers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>providers)</span></code></pre></div>
</section>
<section id="define-utility-functions" class="level3">
<h3 class="anchored" data-anchor-id="define-utility-functions">Define Utility Functions</h3>
<p>Next, we will redefine the same utility functions from the <a href="../onnx-export/#define-utility-functions">previous tutorial</a>.</p>
<section id="define-a-function-to-generate-the-output-grids" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-generate-the-output-grids">Define a function to generate the output grids</h4>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_output_grids_np(height, width, strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>]):</span>
<span id="cb26-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate a numpy array containing grid coordinates and strides for a given height and width.</span></span>
<span id="cb26-4"></span>
<span id="cb26-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb26-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        height (int): The height of the image.</span></span>
<span id="cb26-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        width (int): The width of the image.</span></span>
<span id="cb26-8"></span>
<span id="cb26-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb26-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        np.ndarray: A numpy array containing grid coordinates and strides.</span></span>
<span id="cb26-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb26-12"></span>
<span id="cb26-13">    all_coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb26-14"></span>
<span id="cb26-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stride <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strides:</span>
<span id="cb26-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the grid height and width</span></span>
<span id="cb26-17">        grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb26-18">        grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb26-19"></span>
<span id="cb26-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate grid coordinates</span></span>
<span id="cb26-21">        g1, g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(np.arange(grid_height), np.arange(grid_width), indexing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij'</span>)</span>
<span id="cb26-22"></span>
<span id="cb26-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an array of strides</span></span>
<span id="cb26-24">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((grid_height, grid_width), stride)</span>
<span id="cb26-25"></span>
<span id="cb26-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stack the coordinates along with the stride</span></span>
<span id="cb26-27">        coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.stack((g0.flatten(), g1.flatten(), s.flatten()), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb26-28"></span>
<span id="cb26-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append to the list</span></span>
<span id="cb26-30">        all_coordinates.append(coordinates)</span>
<span id="cb26-31"></span>
<span id="cb26-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate all arrays in the list along the first dimension</span></span>
<span id="cb26-33">    output_grids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(all_coordinates, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb26-34"></span>
<span id="cb26-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> output_grids</span></code></pre></div>
</section>
<section id="define-a-function-to-calculate-bounding-boxes-and-probabilities" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-calculate-bounding-boxes-and-probabilities">Define a function to calculate bounding boxes and probabilities</h4>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_boxes_and_probs(model_output:np.ndarray, output_grids:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb27-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculate the bounding boxes and their probabilities.</span></span>
<span id="cb27-4"></span>
<span id="cb27-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb27-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    model_output (numpy.ndarray): The output of the model.</span></span>
<span id="cb27-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_grids (numpy.ndarray): The output grids.</span></span>
<span id="cb27-8"></span>
<span id="cb27-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    numpy.ndarray: The array containing the bounding box coordinates, class labels, and maximum probabilities.</span></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb27-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the bounding box coordinates</span></span>
<span id="cb27-13">    box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (model_output[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_grids[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb27-14">    box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb27-15"></span>
<span id="cb27-16">    x0, y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> np.split(box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb27-17">    w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> np.split(box_sizes, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb27-18"></span>
<span id="cb27-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the probabilities for each class</span></span>
<span id="cb27-20">    box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb27-21">    box_cls_scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:]</span>
<span id="cb27-22">    box_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(box_objectness, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_scores</span>
<span id="cb27-23"></span>
<span id="cb27-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the maximum probability and corresponding class for each proposal</span></span>
<span id="cb27-25">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb27-26">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb27-27"></span>
<span id="cb27-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.array([x0, y0, w, h, labels, max_probs]).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
</section>
<section id="define-a-function-to-calculate-the-intersection-over-union" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-calculate-the-intersection-over-union">Define a function to calculate the intersection-over-union</h4>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_iou(proposals:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb28-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculates the Intersection over Union (IoU) for all pairs of bounding boxes (x,y,w,h) in 'proposals'.</span></span>
<span id="cb28-4"></span>
<span id="cb28-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The IoU is a measure of overlap between two bounding boxes. It is calculated as the area of</span></span>
<span id="cb28-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    intersection divided by the area of union of the two boxes.</span></span>
<span id="cb28-7"></span>
<span id="cb28-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    proposals (2D np.array): A NumPy array of bounding boxes, where each box is an array [x, y, width, height].</span></span>
<span id="cb28-10"></span>
<span id="cb28-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb28-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (2D np.array): The IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb28-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb28-14"></span>
<span id="cb28-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate coordinates for the intersection rectangles</span></span>
<span id="cb28-16">    x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb28-17">    y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb28-18">    x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb28-19">    y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb28-20">    </span>
<span id="cb28-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate intersection areas</span></span>
<span id="cb28-22">    intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.maximum(y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb28-23"></span>
<span id="cb28-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate union areas</span></span>
<span id="cb28-25">    areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb28-26">    unions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> areas[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> intersections</span>
<span id="cb28-27"></span>
<span id="cb28-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate IoUs</span></span>
<span id="cb28-29">    iou <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> unions</span>
<span id="cb28-30"></span>
<span id="cb28-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the iou matrix</span></span>
<span id="cb28-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> iou</span></code></pre></div>
</section>
<section id="define-a-function-to-filter-bounding-box-proposals-using-non-maximum-suppression" class="level4">
<h4 class="anchored" data-anchor-id="define-a-function-to-filter-bounding-box-proposals-using-non-maximum-suppression">Define a function to filter bounding box proposals using Non-Maximum Suppression</h4>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> nms_sorted_boxes(iou:np.ndarray, iou_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb29-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb29-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Applies non-maximum suppression (NMS) to sorted bounding boxes.</span></span>
<span id="cb29-4"></span>
<span id="cb29-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It suppresses boxes that have high overlap (as defined by the IoU threshold) with a box that </span></span>
<span id="cb29-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    has a higher score.</span></span>
<span id="cb29-7"></span>
<span id="cb29-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb29-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (np.ndarray): An IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb29-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou_thresh (float): The IoU threshold for suppression. Boxes with IoU &gt; iou_thresh are suppressed.</span></span>
<span id="cb29-11"></span>
<span id="cb29-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb29-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    keep (np.ndarray): The indices of the boxes to keep after applying NMS.</span></span>
<span id="cb29-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb29-15"></span>
<span id="cb29-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a boolean mask to keep track of boxes</span></span>
<span id="cb29-17">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>)</span>
<span id="cb29-18"></span>
<span id="cb29-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression</span></span>
<span id="cb29-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb29-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> mask[i]:</span>
<span id="cb29-22">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress boxes with higher index and IoU &gt; threshold</span></span>
<span id="cb29-23">            mask[(iou[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iou_thresh) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> i)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb29-24"></span>
<span id="cb29-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the indices of the boxes to keep</span></span>
<span id="cb29-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[mask]</span></code></pre></div>
</section>
</section>
<section id="select-a-test-image" class="level3">
<h3 class="anchored" data-anchor-id="select-a-test-image">Select a Test Image</h3>
<p>We can use the same test image and input size from the <a href="../onnx-export/#select-a-test-image">previous tutorial</a>.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1">test_img_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pexels-2769554-man-doing-rock-and-roll-sign.jpg"</span></span>
<span id="cb30-2">test_img_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/cj-mills/pexel-hand-gesture-test-images/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb30-3"></span>
<span id="cb30-4">download_file(test_img_url, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb30-5"></span>
<span id="cb30-6">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_img_name)</span>
<span id="cb30-7">display(test_img)</span>
<span id="cb30-8"></span>
<span id="cb30-9">pd.Series({</span>
<span id="cb30-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Test Image Size:"</span>: test_img.size, </span>
<span id="cb30-11">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/ort-tensorrt-ubuntu/images/output_56_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_235a6">
<thead>
</thead>
<tbody>
<tr>
<th id="T_235a6_level0_row0" class="row_heading level0 row0">
Test Image Size:
</th>
<td id="T_235a6_row0_col0" class="data row0 col0">
(640, 960)
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="prepare-the-test-image" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-test-image">Prepare the Test Image</h3>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the input image size</span></span>
<span id="cb31-2">test_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">384</span></span>
<span id="cb31-3"></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize image without cropping to multiple of the max stride</span></span>
<span id="cb31-5">resized_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(test_img, target_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_sz, divisor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb31-6"></span>
<span id="cb31-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculating the input dimensions that multiples of the max stride</span></span>
<span id="cb31-8">input_dims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> max_stride <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> resized_img.size]</span>
<span id="cb31-9"></span>
<span id="cb31-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the offsets from the resized image dimensions to the input dimensions</span></span>
<span id="cb31-11">offsets <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (np.array(resized_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> input_dims)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb31-12"></span>
<span id="cb31-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the scale between the source image and the resized image</span></span>
<span id="cb31-14">min_img_scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(test_img.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(resized_img.size)</span>
<span id="cb31-15"></span>
<span id="cb31-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crop the resized image to the input dimensions</span></span>
<span id="cb31-17">input_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resized_img.crop(box<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>offsets, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>resized_img.size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>offsets])</span>
<span id="cb31-18"></span>
<span id="cb31-19">display(input_img)</span>
<span id="cb31-20"></span>
<span id="cb31-21">pd.Series({</span>
<span id="cb31-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Resized Image Size:"</span>: resized_img.size,</span>
<span id="cb31-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims:"</span>: input_dims,</span>
<span id="cb31-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Offsets:"</span>: offsets,</span>
<span id="cb31-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Min Image Scale:"</span>: min_img_scale,</span>
<span id="cb31-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Image Size:"</span>: input_img.size</span>
<span id="cb31-27">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/ort-tensorrt-ubuntu/images/output_58_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_46f67">
<thead>
</thead>
<tbody>
<tr>
<th id="T_46f67_level0_row0" class="row_heading level0 row0">
Resized Image Size:
</th>
<td id="T_46f67_row0_col0" class="data row0 col0">
(384, 576)
</td>
</tr>
<tr>
<th id="T_46f67_level0_row1" class="row_heading level0 row1">
Input Dims:
</th>
<td id="T_46f67_row1_col0" class="data row1 col0">
[384, 576]
</td>
</tr>
<tr>
<th id="T_46f67_level0_row2" class="row_heading level0 row2">
Offsets:
</th>
<td id="T_46f67_row2_col0" class="data row2 col0">
[0. 0.]
</td>
</tr>
<tr>
<th id="T_46f67_level0_row3" class="row_heading level0 row3">
Min Image Scale:
</th>
<td id="T_46f67_row3_col0" class="data row3 col0">
1.666667
</td>
</tr>
<tr>
<th id="T_46f67_level0_row4" class="row_heading level0 row4">
Input Image Size:
</th>
<td id="T_46f67_row4_col0" class="data row4 col0">
(384, 576)
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="prepare-the-input-tensor" class="level3">
<h3 class="anchored" data-anchor-id="prepare-the-input-tensor">Prepare the Input Tensor</h3>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the existing input image to NumPy format</span></span>
<span id="cb32-2">input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span></code></pre></div>
</section>
<section id="build-tensorrt-engine" class="level3">
<h3 class="anchored" data-anchor-id="build-tensorrt-engine">Build TensorRT Engine</h3>
<p>TensorRT will build an optimized and quantized representation of our model called an engine when we first pass input to the inference session. It will save a copy of this engine object to the cache folder we specified earlier. The build process can take a bit, so caching the engine will save time for future use.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>time</span>
<span id="cb33-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform a single inference run to build the TensorRT engine for the current input dimensions</span></span>
<span id="cb33-3">session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<pre><code>CPU times: user 38.6 s, sys: 4.63 s, total: 43.2 s
Wall time: 54.8 s</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>TensorRT needs to build separate engine files for different input dimensions.</p>
</div>
</div>
</section>
<section id="inspect-tensorrt-cache-folder-1" class="level3">
<h3 class="anchored" data-anchor-id="inspect-tensorrt-cache-folder-1">Inspect TensorRT Cache Folder</h3>
<p>If we look in the cache folder again, we can see a new <code>.engine</code> file and a new <code>.profile</code> file.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the content of the module folder as a Pandas DataFrame</span></span>
<span id="cb35-2">pd.DataFrame([path.name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> trt_cache_dir.iterdir()])</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
calibration.cache
</td>
</tr>
<tr>
<th>
1
</th>
<td>
calibration.flatbuffers
</td>
</tr>
<tr>
<th>
2
</th>
<td>
calibration.json
</td>
</tr>
<tr>
<th>
3
</th>
<td>
TensorrtExecutionProvider_TRTKernel_graph_main_graph_11895979595172249841_0_0_int8_sm89.engine
</td>
</tr>
<tr>
<th>
4
</th>
<td>
TensorrtExecutionProvider_TRTKernel_graph_main_graph_11895979595172249841_0_0_int8_sm89.profile
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="benchmark-quantized-model" class="level3">
<h3 class="anchored" data-anchor-id="benchmark-quantized-model">Benchmark Quantized Model</h3>
<p>With the TensorRT engine built, we can benchmark our quantized model to gauge the raw inference speeds.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>timeit</span>
<span id="cb36-2">session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})</span></code></pre></div>
<pre class="text"><code>837 μs ± 3.68 μs per loop (mean ± std. dev. of 7 runs, 1,000 loops each)</code></pre>
<p>In my testing for this model, TensoRT int8 inference tends to be about 2.8-3x faster than the CUDA execution provider with the original float32 model.</p>
<p>Of course, it does not matter how much faster the quantized model is if there is a significant drop in accuracy, so let’s verify the prediction results.</p>
</section>
<section id="compute-the-predictions" class="level3">
<h3 class="anchored" data-anchor-id="compute-the-predictions">Compute the Predictions</h3>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb38-2">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> session.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: input_tensor_np})[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the model output</span></span>
<span id="cb38-5">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_boxes_and_probs(outputs, generate_output_grids_np(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>input_tensor_np.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]))</span>
<span id="cb38-6"></span>
<span id="cb38-7">bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span></span>
<span id="cb38-8">iou_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span></span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the proposals based on the confidence threshold</span></span>
<span id="cb38-11">max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[:, : ,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb38-12">mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bbox_conf_thresh</span>
<span id="cb38-13">proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[mask]</span>
<span id="cb38-14"></span>
<span id="cb38-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the proposals by probability in descending order</span></span>
<span id="cb38-16">proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposals[..., <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].argsort()][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb38-17"></span>
<span id="cb38-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression to the proposals with the specified threshold</span></span>
<span id="cb38-19">proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nms_sorted_boxes(calc_iou(proposals[:, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), iou_thresh)</span>
<span id="cb38-20">proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposal_indices]</span>
<span id="cb38-21"></span>
<span id="cb38-22">bbox_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (proposals[:,:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>offsets, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>min_img_scale</span>
<span id="cb38-23">label_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [class_names[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(idx)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb38-24">probs_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb38-25"></span>
<span id="cb38-26">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_bboxes(</span>
<span id="cb38-27">    image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>test_img, </span>
<span id="cb38-28">    boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bbox_list, </span>
<span id="cb38-29">    labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_list,</span>
<span id="cb38-30">    probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>probs_list,</span>
<span id="cb38-31">    colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[int_colors[class_names.index(i)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> label_list], </span>
<span id="cb38-32">    font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>font_file,</span>
<span id="cb38-33">)</span>
<span id="cb38-34"></span>
<span id="cb38-35">display(annotated_img)</span>
<span id="cb38-36"></span>
<span id="cb38-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the prediction data as a Pandas Series for easy formatting</span></span>
<span id="cb38-38">pd.Series({</span>
<span id="cb38-39">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted BBoxes:"</span>: [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>bbox<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label, bbox <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(label_list, bbox_list.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">round</span>(decimals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))],</span>
<span id="cb38-40">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Confidence Scores:"</span>: [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(label_list, probs_list)]</span>
<span id="cb38-41">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/ort-tensorrt-ubuntu/images/output_66_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_a8de3">
<thead>
</thead>
<tbody>
<tr>
<th id="T_a8de3_level0_row0" class="row_heading level0 row0">
Predicted BBoxes:
</th>
<td id="T_a8de3_row0_col0" class="data row0 col0">
[‘rock:[343.12 243.332 111.867 108.642]’, ‘no_gesture:[192.42 516.589 103.624 81.037]’]
</td>
</tr>
<tr>
<th id="T_a8de3_level0_row1" class="row_heading level0 row1">
Confidence Scores:
</th>
<td id="T_a8de3_row1_col0" class="data row1 col0">
[‘rock: 89.29%’, ‘no_gesture: 88.88%’]
</td>
</tr>
</tbody>
</table>
</div>
<hr>
<p>The probability scores will likely differ slightly from the full-precision ONNX model, but the predicted object classes should be the same.</p>
<div class="callout callout-style-default callout-caution callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Google Colab Users
</div>
</div>
<div class="callout-body-container callout-body">
<p>Don’t forget to download the content of the <code>trt_engine_cache</code> folder from the Colab Environment’s file browser. (<a href="https://christianjmills.com/posts/google-colab-getting-started-tutorial/#working-with-data">tutorial link</a>)</p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on reaching the end of this tutorial. We previously trained a YOLOX model in PyTorch for hand gesture detection, and now we’ve quantized that model for optimized inference on NVIDIA hardware. Our model is now smaller, faster, and better suited for real-time applications and edge devices like the Jetson Orin Nano.</p>
</section>
<section id="recommended-tutorials" class="level2">
<h2 class="anchored" data-anchor-id="recommended-tutorials">Recommended Tutorials</h2>
<ul>
<li><a href="../byte-track/"><strong>Real-Time Object Tracking with YOLOX and ByteTrack</strong></a>: Learn how to track objects across video frames with YOLOX and ByteTrack.</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Questions:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Questions:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Feel free to post questions or problems related to this tutorial in the comments below. I try to make time to address them on Thursdays and Fridays.</li>
</ul>
</div>
</div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>pytorch</category>
  <category>onnx</category>
  <category>cuda</category>
  <category>tensorrt</category>
  <category>object-detection</category>
  <category>yolox</category>
  <category>tutorial</category>
  <guid>https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/ort-tensorrt-ubuntu/</guid>
  <pubDate>Mon, 11 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 13: Ring Attention</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-013/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction and Overview</li>
<li>Motivation: Long Context Transformers and Applications</li>
<li>Background: Multimodal Input and Transformers</li>
<li>Challenge: Memory Limitations</li>
<li>Vanilla Attention Recap</li>
<li>Compute Scaling with Context Length</li>
<li>Online Softmax and LogSumExp Trick</li>
<li>Ring Attention Details</li>
<li>Causal Masking and Stripe Attention</li>
<li>Flash Decoding</li>
<li>History and Resources</li>
<li>Q&amp;A</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=ws7angQYIxI">Lecture 13: Ring Attention</a></li>
<li><strong>Slides:</strong> <a href="https://docs.google.com/presentation/d/180lS8XbeR1_bTMaldg21LKYQkjXftHuh9VnZ3xk27qQ/edit#slide=id.p">Ring Attention - Sequence Parallel Attention Across Devices</a></li>
<li><strong>Code:</strong>
<ul>
<li><a href="https://github.com/gpu-mode/lectures/blob/main/lecture_013/howto_log_sum_exp.ipynb">lecture_013/howto_log_sum_exp.ipynb</a></li>
<li><a href="https://github.com/gpu-mode/ring-attention">gpu-mode/ring-attention</a></li>
</ul></li>
</ul>
</div>
</div>
<section id="introduction-and-overview" class="level2">
<h2 class="anchored" data-anchor-id="introduction-and-overview">Introduction and Overview</h2>
<ul>
<li><strong>Speaker</strong>: Andreas Kopf, co-founder of the CUDA/GPU Mode Discord server, AI engineer at <a href="https://aleph-alpha.com/">Aleph Alpha</a>.</li>
<li><strong>Lecture Date:</strong> April 6, 2024</li>
<li><strong>Topic</strong>: Ring Attention, a method for sequence parallel attention across multiple devices.</li>
<li><strong>Focus</strong>: High-level orchestration of multiple GPUs, rather than individual GPU utilization.</li>
</ul>
</section>
<section id="motivation-long-context-transformers-and-applications" class="level2">
<h2 class="anchored" data-anchor-id="motivation-long-context-transformers-and-applications">Motivation: Long Context Transformers and Applications</h2>
<ul>
<li><strong>Long Context LLMs</strong>: Models like Gemini (1 million token context, up to 10 million in research) enable processing of extremely long inputs.</li>
<li><strong>Comparison of Models</strong>:
<ul>
<li><strong><a href="https://deepmind.google/technologies/gemini/pro/">Gemini 1.5 Pro</a></strong>: ~1 million tokens (now 2 million tokens)</li>
<li><strong><a href="https://github.com/LargeWorldModel/LWM">Large World Model (LWM)</a></strong>: ~1 million tokens</li>
<li><strong><a href="https://huggingface.co/NousResearch/Yarn-Mistral-7b-128k">Yarn-Mistral</a></strong>: 128k tokens</li>
<li><strong><a href="https://platform.openai.com/docs/models/gpt-4-and-gpt-4-turbo">GPT-4 Turbo</a>/<a href="https://www.databricks.com/blog/introducing-dbrx-new-state-art-open-llm">DBRX</a></strong>: 128k tokens</li>
<li><strong><a href="https://huggingface.co/mosaicml/mpt-7b">MPT</a> (<a href="https://arxiv.org/abs/2108.12409">Alibi Linear Bias Attention</a>)</strong>: 65k tokens</li>
<li><strong><a href="https://huggingface.co/xai-org/grok-1">xAI GROK-1</a></strong>: 8k tokens</li>
</ul></li>
<li><strong>New Capabilities</strong>:
<ul>
<li>Processing books, long documents, web content, chat histories, complete code bases, high-resolution images, audio recordings, and videos.</li>
<li>Videos and text descriptions provide complementary information for world modeling.</li>
<li>Improved future prediction and world simulation.</li>
</ul></li>
<li><strong>Example (<a href="https://largeworldmodel.github.io/lwm/">LWM</a>)</strong>: Video Question Answering on a one-hour video with multiple embedded videos. LWM correctly answered a question about the number of lemons in a person’s car, referencing a specific frame.
<ul>
<li>This example demonstrates improved capabilities, though acknowledged to be somewhat cherry-picked.</li>
</ul></li>
<li><strong>Open Question (Unanswered)</strong>: How Claude, Gemini, and GPT-4 support long context lengths remains undisclosed.
<ul>
<li>Andreas suggests it may not be ring attention due to high inference costs, especially for extremely long sequences like 10 million tokens.</li>
</ul></li>
</ul>
</section>
<section id="background-multimodal-input-and-transformers" class="level2">
<h2 class="anchored" data-anchor-id="background-multimodal-input-and-transformers">Background: Multimodal Input and Transformers</h2>
<ul>
<li><strong>Transformer Architecture</strong>: Multi-headed attention and feedforward network in multiple layers.</li>
<li><strong>Multimodal Input Encoding</strong>:
<ul>
<li><strong>Vision Transformers</strong>: Direct linear projection of images into token dimensions.</li>
<li><strong>LLaVA</strong>: Vision encoder converts images into tokens, combined with language queries and autoregressive answer generation.</li>
<li><strong>LWM</strong>: VQGAN encodes 256x256 images into 144 tokens, allowing for video processing and next-text token prediction.</li>
</ul></li>
<li><strong>Multimodal Applications</strong>: Text, image, and video as individual or combined inputs and outputs, including text-to-image, text-to-video, image-to-text, video-to-text, and image-text combinations.
<ul>
<li><strong><a href="https://huggingface.co/papers/2207.12598">Classifier-Free Guidance</a></strong>: Used in LWM to steer autoregressive generation and produce images as output.</li>
</ul></li>
</ul>
</section>
<section id="challenge-memory-limitations" class="level2">
<h2 class="anchored" data-anchor-id="challenge-memory-limitations">Challenge: Memory Limitations</h2>
<ul>
<li><strong>Memory Requirements</strong>: A 100 million token sequence with a hidden size of 1024 requires over 1000 gigabytes of memory, even with a batch size of one. This highlights the need to store inputs, outputs, and gradients, even with online computation of the score matrix and softmax.</li>
<li><strong>High-End GPU Memory</strong>:
<ul>
<li><a href="https://www.nvidia.com/en-us/data-center/h200/">NVIDIA H200</a>: 141 GB</li>
<li><a href="https://www.amd.com/en/products/accelerators/instinct/mi300.html">AMD MI300X</a>: 192 GB</li>
<li><a href="https://www.nvidia.com/en-us/data-center/gb200-nvl2/">NVIDIA GB200</a>: 288 GB up to 960GB</li>
</ul></li>
<li><strong>Alternative Approaches</strong>:
<ul>
<li>Approximation: (e.g., Sparse, LoRA)</li>
<li>RAG/Vector-DBs (Approximate Nearest Neighbor Search, Locality Sensitive Hashing)</li>
<li>Brute-force compute (tiling, blockwise)</li>
</ul></li>
<li><strong>Ring Attention Approach</strong>: Brute-force computation of all attention scores, but with memory optimizations to avoid quadratic memory scaling.</li>
</ul>
</section>
<section id="vanilla-attention-recap" class="level2">
<h2 class="anchored" data-anchor-id="vanilla-attention-recap">Vanilla Attention Recap</h2>
<ul>
<li><p><strong>Process</strong>: Two matrix multiplications: (1) Query x Transposed Keys = Attention Scores; (2) Softmax(Attention Scores) x Values = Output.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/vanilla-attention-slide-8.png" class="img-fluid figure-img"></p>
<figcaption>Slide 8: Vanilla Attention</figcaption>
</figure>
</div></li>
<li><p><strong>Parallel Computation Potential</strong>: Each query’s output can be computed independently, though typically done in batches for efficiency. Individual query processing is a potential memory optimization, though quadratic attention scaling remains a problem.</p></li>
</ul>
</section>
<section id="compute-scaling-with-context-length" class="level2">
<h2 class="anchored" data-anchor-id="compute-scaling-with-context-length">Compute Scaling with Context Length</h2>
<ul>
<li><p><strong>Formula for FLOPs</strong> (from the <a href="https://arxiv.org/abs/2310.01889">Ring Attention paper</a> appendix): <img src="https://latex.codecogs.com/png.latex?%0A24%20%5Ccdot%20%5Ctext%7Bsequence%5C_length%7D%20%5Ccdot%20%5Ctext%7Bhidden%5C_size%7D%5E2%20+%204%20%5Ccdot%20%5Ctext%7Bsequence%5C_length%7D%5E2%20%5Ccdot%20%5Ctext%7Bhidden%5C_size%7D%0A"></p></li>
<li><p><strong>Surprising Result</strong>: Increasing context length has a less dramatic impact on compute than expected, especially for larger models.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/ring-attention-figure-5.png" class="img-fluid figure-img"></p>
<figcaption><a href="https://arxiv.org/abs/2310.01889">Ring Attention Paper</a>: Figure 5</figcaption>
</figure>
</div>
<ul>
<li><strong>Example:</strong> Training a 65B parameter model with 256k context length (64x increase) requires only 5.8x the compute compared to 4k context length.
<ul>
<li>This is partly due to requiring fewer batches.<br>
</li>
<li>However, quadratic scaling still dominates at extremely long context lengths (e.g., 100 million tokens).</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="online-softmax-and-logsumexp-trick" class="level2">
<h2 class="anchored" data-anchor-id="online-softmax-and-logsumexp-trick">Online Softmax and LogSumExp Trick</h2>
<ul>
<li><p><strong>Softmax Formula</strong>:<br>
<img src="https://latex.codecogs.com/png.latex?%0As(x_i)%20=%20%5Cfrac%7Be%5E%7Bx_i%7D%7D%7B%5Csum_%7Bj=1%7D%5En%20e%5E%7Bx_j%7D%7D%0A"></p></li>
<li><p><strong>Challenge</strong>: The denominator requires the sum of all exponentiated elements, hindering blockwise computation.</p></li>
<li><p><strong>Naive Softmax Implementation (Python)</strong>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> naive_softmax(x: torch.Tensor) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> torch.Tensor:</span>
<span id="cb1-4">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> x.exp() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> x.exp().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate normally distributed random numbers</span></span>
<span id="cb2-2">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.softmax(x, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># reference output</span></span>
<span id="cb2-3">b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> naive_softmax(x) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># our naive version</span></span>
<span id="cb2-4"></span>
<span id="cb2-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"a"</span>, a)</span>
<span id="cb2-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"b"</span>, b)</span>
<span id="cb2-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allclose"</span>, torch.allclose(a, b, atol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-6</span>))</span></code></pre></div>
<pre class="text"><code>a tensor([0.1022, 0.1295, 0.0292, 0.0882, 0.0455, 0.1041, 0.1491, 0.1286, 0.1785,
        0.0451])
b tensor([0.1022, 0.1295, 0.0292, 0.0882, 0.0455, 0.1041, 0.1491, 0.1286, 0.1785,
        0.0451])
allclose True</code></pre></li>
<li><p><strong>Instability of Naive Softmax</strong>: Scaling input by large values leads to NaN values.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">naive_softmax(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
<pre class="text"><code>tensor([0., 0., 0., 0., 0., nan, nan, 0., 0., 0.])</code></pre></li>
<li><p><strong>Blockwise Computation Goal</strong>: Compute softmax on chunks (blocks) of the input and combine the results to match the full softmax output.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb6-2"></span>
<span id="cb6-3">x1,x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.chunk(x, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-4">s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> naive_softmax(x1)</span>
<span id="cb6-5">s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> naive_softmax(x2)</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"We have:"</span>)</span>
<span id="cb6-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"s1 = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>s1<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"s2 = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>s2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-10"></span>
<span id="cb6-11">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> naive_softmax(x)</span>
<span id="cb6-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"We want:"</span>)</span>
<span id="cb6-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"target = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>target<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">We have:</span>
<span id="cb7-2">s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1187</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0524</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4145</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0082</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4062</span>])</span>
<span id="cb7-3">s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2311</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2720</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2980</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0114</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1874</span>])</span>
<span id="cb7-4">We want:</span>
<span id="cb7-5">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0879</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0388</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3070</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0061</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3008</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0600</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0706</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0773</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0030</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0486</span>])</span></code></pre></div></li>
<li><p><strong>Correction Factor</strong>: Multiplying intermediate softmax outputs by the full sum of exponentiated values (sum_exp) allows reconstruction of the target softmax.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">sum_exp_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x1.exp().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb8-2">sum_exp_x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x2.exp().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb8-3">s1_corrected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sum_exp_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (sum_exp_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sum_exp_x2)</span>
<span id="cb8-4">s2_corrected <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> s2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> sum_exp_x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (sum_exp_x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> sum_exp_x2)</span>
<span id="cb8-5"></span>
<span id="cb8-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"After correction with help of sum_exp values:"</span>)</span>
<span id="cb8-7">s_combined <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cat([s1_corrected, s2_corrected])</span>
<span id="cb8-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s_combined"</span>, s_combined)</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allclose(s_combined, target):"</span>, torch.allclose(s_combined, target))</span></code></pre></div>
<pre class="text"><code>After correction with help of sum_exp values:
s_combined tensor([0.0879, 0.0388, 0.3070, 0.0061, 0.3008, 0.0600, 0.0706, 0.0773, 0.0030, 0.0486])
allclose(s_combined, target): True</code></pre></li>
<li><p><strong>Stable Softmax Implementation (Python)</strong>:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> stable_softmax2(x):</span>
<span id="cb10-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""returns softmax result and log sum exp"""</span></span>
<span id="cb10-3">    m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb10-4">    a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m).exp()</span>
<span id="cb10-5">    b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> a.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>()</span>
<span id="cb10-6">    lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.log(b)</span>
<span id="cb10-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> b, lse</span></code></pre></div>
<ul>
<li><strong>Shift Invariance</strong>: Softmax is invariant to adding or subtracting a constant value.</li>
<li><strong>Stabilization Technique</strong>: Subtract the maximum input value from all inputs, ensuring all values are &lt;= 0 before exponentiation.</li>
<li><strong>Returning Log Sum Exp</strong>: Return the logarithm of the sum of exponentiated values, corrected for the subtracted maximum, for numerical stability.</li>
</ul>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb11-2"></span>
<span id="cb11-3">a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.softmax(x, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb11-4"></span>
<span id="cb11-5">x1, x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x.chunk(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb11-6"></span>
<span id="cb11-7">b1, lse1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stable_softmax2(x1)</span>
<span id="cb11-8">b2, lse2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stable_softmax2(x2)</span>
<span id="cb11-9"></span>
<span id="cb11-10">c1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> torch.exp(lse1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (torch.exp(lse1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.exp(lse2))</span>
<span id="cb11-11">c2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> torch.exp(lse2) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (torch.exp(lse1) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.exp(lse2))</span>
<span id="cb11-12"></span>
<span id="cb11-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span>
<span id="cb11-14"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(torch.cat([c1, c2]), torch.allclose(a, torch.cat([c1, c2])))</span></code></pre></div>
<pre class="text"><code>tensor([0.0282, 0.0414, 0.1438, 0.0472, 0.0405, 0.0106, 0.1492, 0.0036, 0.0155,
        0.0238, 0.1013, 0.0547, 0.0169, 0.0209, 0.0151, 0.0770, 0.0067, 0.0551,
        0.0449, 0.1035])
tensor([0.0282, 0.0414, 0.1438, 0.0472, 0.0405, 0.0106, 0.1492, 0.0036, 0.0155,
        0.0238, 0.1013, 0.0547, 0.0169, 0.0209, 0.0151, 0.0770, 0.0067, 0.0551,
        0.0449, 0.1035]) True</code></pre></li>
<li><p><strong>Combining Blocks in Log Space</strong>: Using the formula <code>1 / (1 + B/A)</code> (equivalent to <code>A / (A + B)</code>), blocks can be combined in log space, avoiding exponentiation and improving numerical stability.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">d1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.exp(lse2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> lse1))</span>
<span id="cb13-2">d2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> b2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.exp(lse1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> lse2))</span>
<span id="cb13-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(a)</span>
<span id="cb13-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(torch.cat([d1, d2]))</span>
<span id="cb13-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"allclose: "</span>, torch.allclose(a, torch.cat([d1, d2])))</span></code></pre></div>
<pre class="text"><code>tensor([0.0282, 0.0414, 0.1438, 0.0472, 0.0405, 0.0106, 0.1492, 0.0036, 0.0155,
        0.0238, 0.1013, 0.0547, 0.0169, 0.0209, 0.0151, 0.0770, 0.0067, 0.0551,
        0.0449, 0.1035])
tensor([0.0282, 0.0414, 0.1438, 0.0472, 0.0405, 0.0106, 0.1492, 0.0036, 0.0155,
        0.0238, 0.1013, 0.0547, 0.0169, 0.0209, 0.0151, 0.0770, 0.0067, 0.0551,
        0.0449, 0.1035])
allclose:  True</code></pre>
<ul>
<li><p>This formula is used directly in the <a href="https://github.com/zhuzilin/ring-flash-attention/blob/55ff66fd35f329dfcc24ce7a448bfdd532865966/ring_flash_attn/utils.py#L10-L24">ring attention code</a>.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> _update_out_and_lse(</span>
<span id="cb15-2">    out: torch.Tensor,</span>
<span id="cb15-3">    lse: torch.Tensor,</span>
<span id="cb15-4">    block_out: torch.Tensor,</span>
<span id="cb15-5">    block_lse: torch.Tensor,</span>
<span id="cb15-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Tuple[torch.Tensor, torch.Tensor]:</span>
<span id="cb15-7">    block_out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> block_out.to(torch.float32)</span>
<span id="cb15-8">    block_lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> block_lse.transpose(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).unsqueeze(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-9"></span>
<span id="cb15-10">    new_lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.log(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.exp(block_lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> lse))</span>
<span id="cb15-11">    out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_lse) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> torch.exp(block_lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_lse) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> block_out</span>
<span id="cb15-12"></span>
<span id="cb15-13">    lse <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> new_lse</span>
<span id="cb15-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> out, lse</span></code></pre></div></li>
</ul></li>
<li><p><strong>Application to Value Projections</strong>: The same log-sum-exp trick can be applied to value projections and accumulated value projections, enabling efficient blockwise computation in flash and ring attention.</p></li>
<li><p><strong>Visualization</strong>: Animation illustrates the blockwise computation process. (<a href="https://x.com/fvsmassa/status/1580229170629849089">Source</a>)</p>
<div class="quarto-video"><video id="video_shortcode_videojs_video1" class="video-js vjs-default-skin vjs-fluid" controls="" preload="auto" data-setup="{}" title=""><source src="./videos/memory-efficient-attention-computation-in-xformers.mp4"></video></div>
<ul>
<li>Queries are processed against blocks of keys, intermediate outputs are generated, and these outputs are combined using the log-sum-exp trick to produce the final output.</li>
</ul></li>
</ul>
</section>
<section id="ring-attention-details" class="level2">
<h2 class="anchored" data-anchor-id="ring-attention-details">Ring Attention Details</h2>
<ul>
<li><p><strong>Paper:</strong> <a href="https://arxiv.org/abs/2310.01889">Ring Attention with Blockwise Transformers for Near-Infinite Context</a></p></li>
<li><p><strong>Open-source implementation:</strong> <a href="https://github.com/zhuzilin/ring-flash-attention/tree/main">zhuzilin/ring-flash-attention</a></p></li>
<li><p><strong>Sequence Parallelism</strong>: Distributing the input sequence across multiple devices, with each device processing a portion of the sequence.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/sequence-parallelism-figure-1.png" class="img-fluid figure-img"></p>
<figcaption><a href="https://arxiv.org/abs/2105.13120">Sequence Parallelism Paper</a>: Figure 1</figcaption>
</figure>
</div>
<ul>
<li><strong>Paper:</strong> <a href="https://arxiv.org/abs/2105.13120">Sequence Parallelism: Long Sequence Training from System Perspective</a></li>
<li><strong>Other Parallelism Forms</strong>: Data parallelism, tensor parallelism, pipeline parallelism.</li>
</ul></li>
<li><p><strong>Ring Attention Concept</strong>: Blockwise computation across multiple devices, similar to flash attention but at a higher level.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/ring-attention-slide-21.png" class="img-fluid figure-img"></p>
<figcaption>Slide 21: Ring Attention</figcaption>
</figure>
</div></li>
<li><p><strong>Process</strong>:</p>
<ol type="1">
<li><strong>Data Distribution</strong>: Queries, keys, and values are split across N devices (forming a ring).</li>
<li><strong>Key-Value Exchange</strong>: Keys and values are circulated around the ring, with each device receiving blocks from its predecessor and sending blocks to its successor.</li>
<li><strong>Computation</strong>: Each device performs attention (e.g., flash attention) on its local queries and the received key-value blocks.</li>
<li><strong>Iteration</strong>: This process repeats N-1 times, ensuring each device sees all key-value blocks.</li>
<li><strong>Output Combination</strong>: Each device computes the output for its local queries, and these outputs are then combined (method not fully detailed in this section).</li>
</ol></li>
<li><p><strong>Benefit</strong>: Allows scaling memory by the number of GPUs, with communication overhead amortized for sufficiently long sequences.</p>
<ul>
<li>The paper suggests a sequence length of approximately 6000 for effective amortization, though this depends on transfer speed.</li>
</ul></li>
<li><p><strong>Pseudocode:</strong></p>
<p><strong>Required</strong>: Input sequence <img src="https://latex.codecogs.com/png.latex?x">. Number of hosts <img src="https://latex.codecogs.com/png.latex?N_h">.</p>
<ol type="1">
<li><strong>Initialize</strong></li>
<li>Split input sequence into <img src="https://latex.codecogs.com/png.latex?N_h"> blocks such that each host has one input block.</li>
<li>Compute query, key, and value for its input block on each host.</li>
<li><strong>For each transformer layer</strong> do:
<ol type="1">
<li><strong>For <img src="https://latex.codecogs.com/png.latex?%5Ctext%7Bcount%7D%20=%201"> to <img src="https://latex.codecogs.com/png.latex?N_h%20-%201"></strong> do:
<ol type="1">
<li><strong>For each host concurrently</strong>, do:
<ul>
<li>Compute memory efficient attention incrementally using local query, key, value blocks.</li>
<li>Send key and value blocks to next host and receive key and value blocks from previous host.</li>
</ul></li>
<li><strong>End for</strong></li>
</ol></li>
<li><strong>End for</strong></li>
<li><strong>For each host concurrently</strong>, do:
<ol type="1">
<li>Compute memory efficient feedforward using local attention output.</li>
</ol></li>
<li><strong>End for</strong></li>
</ol></li>
<li><strong>End for</strong></li>
</ol></li>
</ul>
</section>
<section id="causal-masking-and-stripe-attention" class="level2">
<h2 class="anchored" data-anchor-id="causal-masking-and-stripe-attention">Causal Masking and Stripe Attention</h2>
<ul>
<li><p><strong>Causal Masking</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/causal-masking-slide-23.png" class="img-fluid figure-img"></p>
<figcaption>Slide 23: Causal Masking</figcaption>
</figure>
</div>
<ul>
<li>Prevents tokens from attending to future tokens during autoregressive decoding.</li>
<li>Achieved by setting attention scores for future tokens to minus infinity before softmax.</li>
</ul></li>
<li><p><strong>Causal Masking in Ring Attention</strong>:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/ring-attention-problem-slide-24.png" class="img-fluid figure-img"></p>
<figcaption>Slide 24: Ring Attention Problem</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/ring-attention-problem-slide-25.png" class="img-fluid figure-img"></p>
<figcaption>Slide 25: Ring Attention Problem</figcaption>
</figure>
</div>
<ul>
<li>Naive implementation leads to idle nodes, as some devices finish computation early due to masking, while others are still working.<br>
</li>
<li>The slowest node determines the overall speed.</li>
</ul></li>
<li><p><strong>Stripe Attention Solution</strong>: Reorders queries, keys, and values to distribute work more evenly, minimizing idle time.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/striped-attention-slide-26.png" class="img-fluid figure-img"></p>
<figcaption>Slide-26: Striped Attention</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/striped-attention-slide-27.png" class="img-fluid figure-img"></p>
<figcaption>Slide-27: Striped Attention</figcaption>
</figure>
</div></li>
<li><p><strong>Permutation Pattern</strong>: Andreas describes a specific pattern that assigns specific token indices to each device.</p></li>
<li><p><strong>Post-Processing</strong>: Requires undoing the permutation to reconstruct the original output sequence.</p></li>
<li><p><strong>Benefits of Stripe Attention</strong>: Even distribution of work and data, allowing more efficient use of all devices. By dropping the first query and last key, standard causal masking and flash attention can be used within the stripe attention framework.</p></li>
</ul>
</section>
<section id="flash-decoding" class="level2">
<h2 class="anchored" data-anchor-id="flash-decoding">Flash Decoding</h2>
<ul>
<li><p><strong>Webpage:</strong> <a href="https://crfm.stanford.edu/2023/10/12/flashdecoding.html">Flash-Decoding for long-context inference</a></p></li>
<li><p><strong>Motivation</strong>: Flash attention and ring attention are not optimized for token-by-token inference in long contexts, as they are designed for larger query sets.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/flash-decoding-slide-28.gif" class="img-fluid figure-img"></p>
<figcaption><a href="https://crfm.stanford.edu/2023/10/12/flashdecoding.html">Stanford CRFM Blog: Multi-head attention for decoding</a></figcaption>
</figure>
</div></li>
<li><p><strong>Flash Decoding Approach</strong>: Sends queries to all devices, computes blockwise attention and value projections locally, and then uses a reduction step to combine the results.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-013/images/flash-decoding-slide-29.gif" class="img-fluid figure-img"></p>
<figcaption><a href="https://crfm.stanford.edu/2023/10/12/flashdecoding.html">Stanford CRFM Blog: Flash Decoding</a></figcaption>
</figure>
</div>
<ul>
<li>Developed by Tri Dao, Daniel Haziza, Francisco Massa, and Grigory Sizov.</li>
</ul></li>
<li><p><strong>Benefits</strong>: Leverages compute of all devices, potentially achieving up to N times speedup with N devices.</p></li>
<li><p><strong>Open Questions</strong>:</p>
<ul>
<li>Performance impact of the reduction step.</li>
<li>How keys and values are reorganized during token-by-token generation.</li>
</ul></li>
<li><p><strong>Implementation</strong>: Andreas hasn’t found a production-ready implementation (might be in <a href="https://github.com/facebookresearch/xformers">xformers</a>).</p></li>
</ul>
</section>
<section id="history-and-resources" class="level2">
<h2 class="anchored" data-anchor-id="history-and-resources">History and Resources</h2>
<ul>
<li><strong>Paper History</strong>:
<ul>
<li><strong>Flash Attention</strong>: Foundation for memory-efficient attention.
<ul>
<li>May 2022, Tri Dao et al: <a href="https://arxiv.org/abs/2205.14135">FlashAttention: Fast and Memory-Efficient Exact Attention with IO-Awareness</a></li>
</ul></li>
<li><strong>Blockwise Parallel Transformer</strong>: Early work leading to ring attention.
<ul>
<li>Aug 2023 Hao Liu et al: <a href="https://arxiv.org/abs/2305.19370">Blockwise Parallel Transformer for Large Context Models</a></li>
</ul></li>
<li><strong>Ring Attention with Blockwise Transformers</strong>: Refinement of the initial concept.
<ul>
<li>Nov 2023, Hao Liu et al: <a href="https://arxiv.org/abs/2310.01889">Ring Attention with Blockwise Transformers for Near-Infinite Context</a></li>
</ul></li>
<li><strong>Stripe Attention</strong>: Addressing causal masking challenges in ring attention.
<ul>
<li>Nov 2023, Brandon et al: <a href="https://arxiv.org/abs/2311.09431">Striped Attention: Faster Ring Attention for Causal Transformers</a></li>
</ul></li>
<li><strong>Large World Models on Medium Length Video Language</strong>: Combining ring attention and stripe attention for long context video processing.
<ul>
<li>Feb 2024, Hao Liu et al: <a href="https://arxiv.org/abs/2402.08268">World Models on Million-Length Video and Language With RingAttention</a></li>
</ul></li>
</ul></li>
<li><strong>Code Repositories</strong>:
<ul>
<li><strong><a href="https://github.com/zhuzilin">Zilin Zhu</a>’s Ring Flash Attention</strong>: <a href="https://github.com/zhuzilin/ring-flash-attention">zhuzilin/ring-flash-attention</a></li>
<li><strong>GPU Mode Implementation</strong>: <a href="https://github.com/gpu-mode/ring-attention">gpu-mode/ring-attention</a></li>
</ul></li>
<li><strong>Other Resources</strong>: <a href="https://github.com/gpu-mode/lectures/blob/main/lecture_013/howto_log_sum_exp.ipynb">Andreas’ “LogSumExp” IPython notebook</a></li>
</ul>
</section>
<section id="qa" class="level2">
<h2 class="anchored" data-anchor-id="qa">Q&amp;A</h2>
<ul>
<li><strong>Flash Decoding vs.&nbsp;Speculative Decoding</strong>:
<ul>
<li><strong>Flash Decoding</strong>: Optimizes inference for a single model.</li>
<li><strong>Speculative Decoding</strong>: Uses a smaller “drafting” model to propose outputs, verified by a larger model. Orthogonal techniques and can be used together.</li>
</ul></li>
<li><strong>Ring Attention on Consumer GPUs (PCIe)</strong>:
<ul>
<li>Feasible, even with consumer GPUs like the A5000 or RTX 3090, especially with NVLink.</li>
<li>Allows doubling memory for a single sequence across two GPUs.<br>
</li>
<li>However, consumer GPUs generally do not support peer-to-peer (P2P) communication over PCIe.</li>
</ul></li>
<li><strong>Shared Memory for Sequence Parallelism</strong>:
<ul>
<li>Not strictly required.</li>
<li>Sequence parallelism operates at a higher level than shared memory within individual GPUs.</li>
<li>Shared memory benefits flash attention within each device, but sequence parallelism handles distribution across devices.</li>
</ul></li>
<li><strong>Gemini’s Approach</strong>: Unknown. Andreas suggests it may not be ring attention due to scaling challenges.</li>
<li><strong>Ring Attention in Inference</strong>:
<ul>
<li>Primarily a training technique.</li>
<li>The LWM paper describes an optimized inference version, but details are unclear.<br>
</li>
<li>Flash decoding seems more suitable for token-by-token inference.</li>
</ul></li>
<li><strong>Batch Size One Inference (Memory Bound)</strong>:
<ul>
<li>Batch size one leads to matrix-vector multiplications, which are memory bandwidth bound.</li>
<li>Production deployments often use larger batch sizes to improve throughput and efficiency.</li>
<li>Batch size one is common in local or resource-constrained deployments, but it’s not optimal.</li>
<li>The “two stages” of inference (prompt processing and token-by-token generation) have different memory and compute characteristics.</li>
</ul></li>
<li><strong>Flash Decoding as MapReduce</strong>: Analogy holds, with queries duplicated (mapped) to all devices and results combined (reduced).</li>
<li><strong>Why LLMs Are Memory Bound in Inference</strong>: Token-by-token generation requires accessing previous token outputs (key-value cache), leading to memory bandwidth limitations.</li>
<li><strong>On-Premise vs.&nbsp;Cloud Deployments</strong>:
<ul>
<li>Cloud deployments often have larger batch sizes due to higher throughput requirements.</li>
<li>On-premise deployments may face batch size one scenarios more frequently, impacting cost-effectiveness of high-end GPUs.</li>
<li>The business case and specific requirements (privacy, cost, latency) determine the optimal deployment strategy.</li>
</ul></li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-013/</guid>
  <pubDate>Mon, 11 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Notes on Seeing What Others Don’t꞉ The Remarkable Ways We Gain Insights</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/seeing-what-others-dont/</link>
  <description><![CDATA[ 




<ul>
<li>Part I: Entering Through the Gates of Insight
<ul>
<li>Chapter 1: Hunting for Insights</li>
<li>Chapter 2: The Flash of Illumination</li>
<li>Chapter 3: Connections</li>
<li>Chapter 4: Coincidences and Curiosities</li>
<li>Chapter 5: Contradictions</li>
<li>Chapter 6: Creative Desperation</li>
<li>Chapter 7: Different Ways to Look at Insight</li>
<li>Chapter 8: The Logic of Discovery</li>
</ul></li>
<li>Part II: Shutting the Gates
<ul>
<li>Chapter 9: Stupidity</li>
<li>Chapter 10: The Study of Contrasting Twins</li>
<li>Chapter 11: Dumb by Design</li>
<li>Chapter 12: How Organizations Obstruct Insights</li>
<li>Chapter 13: How Not to Hunt for Insights</li>
</ul></li>
<li>Part III: Opening the Gates
<ul>
<li>Chapter 14: Helping Ourselves</li>
<li>Chapter 15: Helping Others</li>
<li>Chapter 16: Helping Our Organizations</li>
<li>Chapter 17: Tips for Becoming an Insight Hunter</li>
<li>Chapter 18: The Magic of Insights</li>
</ul></li>
</ul>
<div class="callout callout-style-default callout-note callout-titled" title="Book LInks:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://www.hachettebookgroup.com/titles/gary-klein/seeing-what-others-dont/9781610392754/">Publisher Page</a></li>
</ul>
</div>
</div>
<section id="part-i-entering-through-the-gates-of-insight" class="level2">
<h2 class="anchored" data-anchor-id="part-i-entering-through-the-gates-of-insight">Part I: Entering Through the Gates of Insight</h2>
<section id="chapter-1-hunting-for-insights" class="level3">
<h3 class="anchored" data-anchor-id="chapter-1-hunting-for-insights">Chapter 1: Hunting for Insights</h3>
<section id="introduction-the-genesis-of-an-investigation" class="level4">
<h4 class="anchored" data-anchor-id="introduction-the-genesis-of-an-investigation">Introduction: The Genesis of an Investigation</h4>
<ul>
<li>Klein began collecting clippings about unusual discoveries.</li>
<li>These clippings included newspaper and magazine articles, as well as notes from interviews and conversations.</li>
</ul>
</section>
<section id="the-stolen-bmw-an-illustrative-example" class="level4">
<h4 class="anchored" data-anchor-id="the-stolen-bmw-an-illustrative-example">The Stolen BMW: An Illustrative Example</h4>
<ul>
<li>Two police officers were stuck in traffic during a routine patrol.</li>
<li>The younger officer observed the driver of a new BMW ashing a cigarette onto the car’s upholstery.</li>
<li>This sparked an <strong>insight</strong>: Who would ash a cigarette in a brand new car?</li>
<li>The officers pursued the car and discovered it was stolen.</li>
</ul>
</section>
<section id="the-up-arrow-a-question-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-up-arrow-a-question-of-insights">The Up Arrow: A Question of Insights</h4>
<ul>
<li>Klein, a cognitive psychologist, gives presentations on decision-making.</li>
<li>In 2005, influenced by <strong>Positive Psychology</strong> (a movement started by Martin Seligman focusing on positive experiences), Klein began to incorporate the concept of insights into his presentations.</li>
<li>Seligman believed therapy focused too much on reducing misery and not enough on adding meaning and pleasure.</li>
<li>Klein felt similarly about decision research, emphasizing the need to improve insights alongside reducing errors.</li>
<li>A slide with two arrows illustrated this point:
<ul>
<li>Down arrow: Reducing errors.</li>
<li>Up arrow: Increasing insights.</li>
</ul></li>
<li><strong>Performance improvements = (Down arrow of errors) + (Up arrow of insights)</strong></li>
<li>Klein argues that eliminating errors alone does not lead to insights and may even hinder them.</li>
<li>Audiences resonated with this idea but wanted to know how to boost the up arrow (increase insights).</li>
<li>This question prompted Klein’s investigation into insights, starting in September 2009.</li>
<li>The investigation aimed to explore how insights are formed in natural settings, rather than artificial laboratory environments.</li>
<li>This led to two mysteries:
<ol type="1">
<li>What sparks an insight?</li>
<li>What prevents us from grasping an insight?</li>
</ol></li>
<li>A third, related challenge also emerged: How can we practically increase the flow of insights?</li>
</ul>
</section>
<section id="lighting-up-life-the-story-of-martin-chalfie" class="level4">
<h4 class="anchored" data-anchor-id="lighting-up-life-the-story-of-martin-chalfie">Lighting Up Life: The Story of Martin Chalfie</h4>
<ul>
<li>Martin Chalfie, a professor at Columbia University, won the 2008 Nobel Prize in Chemistry.</li>
<li>His path to the prize began with a lunchtime seminar in 1989.</li>
<li>Chalfie studied the nervous system of transparent worms. This transparency was an incidental feature, unimportant until his insight.</li>
<li>Prior to the seminar, Chalfie’s research required killing the worms to examine their tissues.</li>
<li>At the seminar, the speaker discussed the <strong>green fluorescent protein (GFP)</strong> found in jellyfish, which emits green light when exposed to ultraviolet light.</li>
<li>This triggered Chalfie’s <strong>eureka moment</strong>: He realized he could insert GFP into his transparent worms and use ultraviolet light to track the protein and the cells it was placed in.</li>
<li>GFP became a vital tool in molecular biology. It is now available in multiple colors and used in diverse applications, including:
<ul>
<li>Tracking viruses in mice.</li>
<li>Visualizing prostate cancer cells.</li>
<li>Illuminating nerve fibers during surgery.</li>
<li>Detecting pollution.</li>
<li>Targeted pesticide application in agriculture.</li>
<li>Creating bioluminescent trees (a theoretical application).</li>
<li>Creating the world’s first transgenic dog, Ruppie.</li>
</ul></li>
<li>Chalfie’s insight demonstrated key characteristics of insight formation:
<ul>
<li>Sudden and unexpected.</li>
<li>Emotionally charged (excitement).</li>
<li>A combination of existing ideas (transparent worms and GFP).</li>
<li>Transformative, shifting his research focus.</li>
<li>Unique to him due to his specific research subject.</li>
<li>Creative, resulting in something new.</li>
</ul></li>
<li><strong>Insight “Geiger counter” cues</strong>:
<ul>
<li>Sudden discovery.</li>
<li>Jolt of excitement.</li>
<li>Tightly fitting combination of ideas.</li>
<li>Confidence in the new direction.</li>
<li>Uniqueness of the insight despite shared information.</li>
</ul></li>
</ul>
</section>
<section id="unmasking-madoff-the-persistence-of-harry-markopolos" class="level4">
<h4 class="anchored" data-anchor-id="unmasking-madoff-the-persistence-of-harry-markopolos">Unmasking Madoff: The Persistence of Harry Markopolos</h4>
<ul>
<li><p>Harry Markopolos, a financial analyst and certified fraud examiner, exposed Bernie Madoff’s Ponzi scheme.</p></li>
<li><p>In 1999, Markopolos was challenged to replicate Madoff’s impressive investment returns.</p></li>
<li><p>Upon analyzing Madoff’s publicly available data, Markopolos quickly realized something was amiss. The numbers didn’t add up.</p></li>
<li><p>Madoff claimed to use a conservative <strong>split-strike conversion strategy</strong>, yet reported consistent profits, only losing money in three months over seven years.</p>
<blockquote class="blockquote">
<p>A split-strike conversion strategy involves buying a basket of stocks as well as option contracts on them. For each stock, the investor buys a put option to protect against the price falling too low and, at the same time, sells a call option to let someone else buy it if it rises above a given strike price. If the price rises, the investor makes a profit, but only up to the strike price. The gain is capped. If the price falls far enough that it hits the put level, the investor has limited the loss.</p>
</blockquote></li>
<li><p>Markopolos immediately concluded that Madoff’s results were fabricated.</p></li>
<li><p>Despite repeated warnings to the SEC from 2000 to 2008, Markopolos was dismissed as a crank. Reasons for this included:</p>
<ul>
<li>Madoff’s high reputation and connections.</li>
<li>Markopolos’s relative obscurity and perceived eccentricity.</li>
<li>Markopolos’s status as a competitor and his mention of a potential reward.</li>
</ul></li>
<li><p>Markopolos believed the SEC was ill-equipped to handle such complex fraud and more focused on protecting Wall Street.</p></li>
<li><p>Like Chalfie and the young cop, Markopolos’s insight was sudden.</p></li>
<li><p>His experience allowed him to recognize inconsistencies others missed.</p></li>
<li><p>The insight transformed his beliefs about Madoff, shifting from disbelief to suspicion.</p></li>
<li><p>Unlike Chalfie, who combined ideas, Markopolos identified inconsistencies in data.</p></li>
<li><p>Chalfie focused on building on ideas, while Markopolos and the cop focused on identifying unlikely or impossible beliefs.</p></li>
</ul>
</section>
<section id="stumbling-onto-a-plague-michael-gottlieb-and-the-aids-epidemic" class="level4">
<h4 class="anchored" data-anchor-id="stumbling-onto-a-plague-michael-gottlieb-and-the-aids-epidemic">Stumbling onto a Plague: Michael Gottlieb and the AIDS Epidemic</h4>
<ul>
<li>Dr.&nbsp;Michael Gottlieb published the first report on the AIDS epidemic.</li>
<li>In 1980, while at UCLA, he encountered a 31-year-old male patient with a severe throat yeast infection.</li>
<li>Blood tests revealed an abnormally low helper cell count and a high suppressor cell count, the opposite of the typical pattern.</li>
<li>The patient later developed pneumocystis pneumonia, a fungal infection typically affecting individuals with compromised immune systems, not healthy young adults.</li>
<li>Gottlieb noted the patient’s lifestyle (gay) and overheard him refer to himself as a “sick queen.”</li>
<li>Over the following months, Gottlieb encountered more patients with similar symptoms, all gay men.</li>
<li>By April 1981, Gottlieb had five cases, recognizing a pattern.</li>
<li>He published his findings in the Morbidity and Mortality Weekly Report, the first public announcement of the AIDS epidemic.</li>
<li>Gottlieb’s insight was the recognition of a frightening pattern, though he didn’t initially know the cause.</li>
<li>Unlike the sudden insights of the previous examples, Gottlieb’s developed gradually.</li>
<li>His insight focused on identifying a pattern, whereas Chalfie combined ideas, and Markopolos and the cop detected inconsistencies.</li>
</ul>
</section>
<section id="getting-my-car-fixed-an-everyday-insight" class="level4">
<h4 class="anchored" data-anchor-id="getting-my-car-fixed-an-everyday-insight">Getting My Car Fixed: An Everyday Insight</h4>
<ul>
<li>Klein experienced a minor insight regarding car repairs.</li>
<li>After rescheduling his car service, Klein devised a better solution involving dropping off his car key instead of the car itself.</li>
<li>This insight came after a period of incubation, without new information.</li>
<li>This example illustrates that insights can be commonplace and don’t always require great creativity.</li>
</ul>
</section>
<section id="conclusion-the-nature-of-insight" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-the-nature-of-insight">Conclusion: The Nature of Insight</h4>
<ul>
<li>Humans are naturally inclined to gain insights.</li>
<li>We seek patterns, connections, inconsistencies, and better ways of doing things.</li>
<li>Klein’s initial project aimed to find commonalities among insights and offer advice on increasing them.</li>
<li>However, the diverse nature of the collected stories led to the central mystery: What sparks an insight?</li>
</ul>
</section>
</section>
<section id="chapter-2-the-flash-of-illumination" class="level3">
<h3 class="anchored" data-anchor-id="chapter-2-the-flash-of-illumination">Chapter 2: The Flash of Illumination</h3>
<section id="graham-wallaces-model-of-insight" class="level4">
<h4 class="anchored" data-anchor-id="graham-wallaces-model-of-insight">Graham Wallace’s Model of Insight</h4>
<ul>
<li><strong>Graham Wallace</strong>, co-founder of the London School of Economics, published the first modern account of insight in his 1926 book, <em>The Art of Thought</em>.</li>
<li>Wallace’s model, still commonly used to explain insight, consists of four stages:
<ol type="1">
<li><p><strong>Preparation</strong>: Conscious, systematic, but often fruitless investigation of a problem.</p></li>
<li><p><strong>Incubation</strong>: Shifting to unconscious thought by ceasing conscious deliberation.</p>
<ul>
<li><p>Helmholtz (1891): “Happy ideas come unexpectedly without effort, like an inspiration… particularly readily during the slow ascent of wooded hills on a sunny day.”</p></li>
<li><p>Wallace advised mental relaxation and avoidance of mentally demanding activities during this stage.</p></li>
<li><p>John Drinkwater quote: “Haunting the lucidities of life that are my daily beauty move a theme beating along my undiscovered mind.”</p></li>
</ul></li>
<li><p><strong>Illumination</strong>: Sudden and certain emergence of the insight (“happy idea”) from unconscious associations.</p>
<ul>
<li><p>Fringe consciousness may provide an intimation of impending illumination.</p></li>
<li><p>Premature verbalization of the insight can disrupt its full formation.</p></li>
</ul></li>
<li><p><strong>Verification</strong>: Consciously testing the validity of the insight. May involve working out details, particularly in fields like mathematics.</p></li>
</ol></li>
</ul>
</section>
<section id="critique-of-wallaces-model" class="level4">
<h4 class="anchored" data-anchor-id="critique-of-wallaces-model">Critique of Wallace’s Model</h4>
<ul>
<li><strong>Preparation Stage Critique</strong>:
<ul>
<li>Klein argues that the preparation stage isn’t necessary, citing examples from Chapter 1 (police officer, Chalfie, Markopolos, Gottlieb, and Klein’s own car key insight) where insights arose unexpectedly without deliberate preparation.</li>
<li><strong>Distinction between Expertise and Preparation</strong>: While background knowledge and expertise play a role, they differ from deliberate preparation to solve a specific problem.
<ul>
<li><strong>Generally Prepared Mind (Expertise)</strong>: Possessing the necessary background knowledge to recognize the insight (Chalfie, Markopolos, Gottlieb).</li>
<li><strong>Specifically Prepared Mind (Deliberate Preparation)</strong>: Consciously preparing to solve a defined problem (Wallace’s view).</li>
</ul></li>
<li><strong>DNA Structure Discovery Example</strong>: While Watson and Crick’s work involved deliberate preparation, other researchers with similar preparation (Rosalind Franklin, Linus Pauling) did not achieve the same breakthrough.</li>
<li><strong>Conclusion</strong>: Deliberate preparation is neither necessary nor sufficient for many insights. Wallace’s focus on success stories skewed his model.</li>
</ul></li>
<li><strong>Incubation Stage Critique</strong>:
<ul>
<li>The incubation stage is also deemed unnecessary in many Chapter 1 examples. Only Gottlieb and Klein had significant time between initial observations and the insight.</li>
<li><strong>Incubation’s Appeal</strong>: While appealing to our “play ethic,” it’s questionable whether enforced relaxation would reliably boost insights.</li>
<li><strong>Conclusion</strong>: Incubation isn’t necessary and is often impossible given the circumstances of many insights.</li>
</ul></li>
<li><strong>Illumination Stage Critique</strong>:
<ul>
<li>All examples involved a flash of illumination, although Gottlieb’s was more gradual.</li>
<li><strong>Wallace’s Explanation</strong>: Klein finds Wallace’s explanation of unconscious associations unsatisfactory, describing it as “too magical.” This stage and its underlying mechanisms are the focus of Klein’s investigation.</li>
</ul></li>
<li><strong>Aha vs.&nbsp;Insight</strong>:
<ul>
<li>Klein proposes a distinction between the “aha” experience and the insight itself.</li>
<li><strong>Analogy</strong>: “Aha is to insight as orgasm is to conception.” The experience is distinct from the achievement, and the latter can occur without the former.</li>
</ul></li>
</ul>
</section>
<section id="redefining-insight" class="level4">
<h4 class="anchored" data-anchor-id="redefining-insight">Redefining Insight</h4>
<ul>
<li><strong>Impasse vs.&nbsp;Better Story</strong>: Traditional cognitive science views insight as overcoming an impasse, but the Chapter 1 examples don’t involve impasses. Klein seeks a better definition.</li>
<li><strong>Insight Definition</strong>: An <strong>unexpected shift to a better story</strong> about how things work.
<ul>
<li>These stories explain causes of past/present events (cop, Markopolos, Gottlieb) or ways to cause future outcomes (Chalfie, car keys example).</li>
<li>These shifts involve changes to core beliefs, not minor adjustments.</li>
<li><strong>Discontinuous Discoveries</strong>: Unexpected transitions from a mediocre story to a better one. Sometimes immediate (cop, Chalfie, car keys), sometimes gradual (Markopolos, Gottlieb).</li>
</ul></li>
</ul>
</section>
<section id="transformative-effects-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="transformative-effects-of-insights">Transformative Effects of Insights</h4>
<ul>
<li>Insights transform us in five ways:
<ul>
<li><strong>Understanding</strong>: Provide a new viewpoint, transforming our thinking.</li>
<li><strong>Actions</strong>: Change our abilities and notions of what’s possible (Chalfie, car keys).</li>
<li><strong>Perception</strong>: We look for different things, guided by the new story (Gottlieb).</li>
<li><strong>Feelings</strong>: Change what excites us or makes us nervous (police officers, Markopolos).</li>
<li><strong>Desires</strong>: Shift our goals and ambitions (Chalfie, Markopolos, Gottlieb).</li>
</ul></li>
<li>Quotes:
<ul>
<li>Klein’s Friend: “Insight is when it happens. Everything that happens afterward is different.”</li>
<li>Hilary Mantel (Wolf Hall): “Insight cannot be taken back. You cannot return to the moment you were in before.”</li>
</ul></li>
</ul>
</section>
<section id="unique-characteristics-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="unique-characteristics-of-insights">Unique Characteristics of Insights</h4>
<ul>
<li><strong>Non-conscious and Non-deliberate</strong>: Insights arise without warning, unlike routine problem-solving (Watson and Crick’s DNA discovery).</li>
<li><strong>Coherence and Unambiguity</strong>: Insights provide a single, clear answer, not a set of options (“Oh, yes, that’s it”).</li>
<li><strong>Confidence and Certainty</strong>: A sense of closure leads to confidence in the insight.</li>
<li><strong>Aesthetic Reaction</strong>: Insights can evoke a sense of beauty (Watson and Crick, Chalfie, Markopolos, Gottlieb, police officer).</li>
</ul>
</section>
<section id="a-naturalistic-investigation" class="level4">
<h4 class="anchored" data-anchor-id="a-naturalistic-investigation">A Naturalistic Investigation</h4>
<ul>
<li><strong>Naturalistic Approach</strong>: Klein adopts a naturalistic approach, studying insights in real-world settings rather than through laboratory puzzles.</li>
<li><strong>Previous Research on Firefighters</strong>: Klein’s previous work on firefighter decision-making (recognition-primed decision strategy) informed this investigation, particularly the concept of shifting stories based on new information.</li>
<li><strong>Stories and Anchors</strong>: Stories frame and organize details of a situation. <strong>Anchors</strong> are core beliefs that guide interpretation of details. Most stories have 3-4 anchors.
<ul>
<li>Cop: Expensive car, driver’s indifference.</li>
<li>Chalfie: Worm transparency, GFP glow, protein implantation.</li>
<li>Markopolos: Fraudulent funds, Madoff’s conservative method.</li>
<li>Gottlieb: Disease targeting gay men, immune system devastation, vulnerability to infections.</li>
</ul></li>
</ul>
</section>
<section id="research-methodology" class="level4">
<h4 class="anchored" data-anchor-id="research-methodology">Research Methodology</h4>
<ul>
<li><strong>Archaeological Trench Analogy</strong>: Klein’s research is like an archaeological trench, a focused exploration rather than a full excavation.</li>
<li><strong>Data Collection</strong>: 120 insight incidents compiled from media (books, articles), interviews, and personal discussions. Focus on successful insights.</li>
<li><strong>Control Sample</strong>: A smaller set of cases with built-in controls (comparing those who had the insight with those who didn’t) was added later to address the bias toward success stories.</li>
<li><strong>Data Analysis</strong>:
<ul>
<li>Summarization: Each incident summarized in a short account (3 pages or less).</li>
<li>Coding: 14 coding categories were used to analyze incidents (e.g., impasse, incubation, suddenness).</li>
<li>Inter-rater Reliability: Initial agreement of 78% improved to 98% after discussion and refinement.</li>
</ul></li>
<li><strong>Five Insight Strategies</strong>:
<ul>
<li>Connections, Coincidences, Curiosities, Contradictions, Creative Desperation.</li>
<li>Most incidents involved multiple strategies.</li>
<li>Klein questions which strategy is primary or whether a combined approach is more appropriate. These strategies are explored in the following chapters.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-3-connections" class="level3">
<h3 class="anchored" data-anchor-id="chapter-3-connections">Chapter 3: Connections</h3>
<section id="introduction-connecting-the-dots-and-solving-problems" class="level4">
<h4 class="anchored" data-anchor-id="introduction-connecting-the-dots-and-solving-problems">Introduction: Connecting the Dots and Solving Problems</h4>
<ul>
<li><strong>Martin Chalfie’s</strong> experience exemplifies the process of connecting disparate information to solve a problem.</li>
<li>New information combined with existing knowledge leads to discoveries.</li>
<li>This chapter explores this process through the examples of:
<ul>
<li>Admirals who identified Pearl Harbor’s vulnerability.</li>
<li>A child psychologist who made discoveries about infant empathy.</li>
<li>Charles Darwin’s formulation of the theory of evolution.</li>
</ul></li>
</ul>
</section>
<section id="the-battle-of-taranto-and-pearl-harbor" class="level4">
<h4 class="anchored" data-anchor-id="the-battle-of-taranto-and-pearl-harbor">The Battle of Taranto and Pearl Harbor</h4>
<ul>
<li><p><strong>The Battle of Taranto (November 11-12, 1940):</strong> Demonstrated the vulnerability of battleships to carrier-launched aircraft.</p>
<ul>
<li>Context: World War II, Britain fighting Germany, Italy, and Japan.</li>
<li>Italian fleet hindering British resupply efforts in Egypt.</li>
<li><strong>Operation Judgment:</strong> British plan to attack the Italian fleet sheltered in the Bay of Taranto.</li>
<li>Secrecy maintained through lack of written records.</li>
<li><strong>First all-carrier air attack in history:</strong> Launched from HMS Illustrious.</li>
<li>Attack launched on November 11th, 9 PM, reaching the target at 10:58 PM.</li>
<li>Within an hour, half the Italian fleet was disabled for six months.</li>
<li>Attack carried out with 24 British Swordfish biplane bombers.</li>
<li><strong>Overcoming the depth challenge:</strong>
<ul>
<li>Previous belief: Torpedo attacks required a minimum depth of 30 meters (98 feet).</li>
<li>Taranto Bay was only 12 meters (40 feet) deep.</li>
<li>British innovation: Used wire to adjust torpedo trajectory for a “belly flop” instead of a nosedive.</li>
<li>Added wooden fins to prevent deep dives.</li>
</ul></li>
</ul></li>
<li><p><strong>Admiral Isoroku Yamamoto’s Insight:</strong></p>
<ul>
<li><p>Recognized the implications of Taranto for Pearl Harbor.</p></li>
<li><p>Envisioned the American fleet at Pearl Harbor as similarly vulnerable.</p></li>
<li><p>Developed the idea in January 1941, refining it into the blueprint for the Pearl Harbor attack (December 7, 1941).</p></li>
<li><p><strong>Yamamoto’s opposition to war:</strong></p>
<ul>
<li><p>Foresaw Japan’s defeat in a war with the United States.</p></li>
<li><p>Expressed concerns in a leaked letter:</p>
<blockquote class="blockquote">
<p>Should hostilities once break out between Japan and the United States, it would not be enough that we take Guam and the Philippines, nor even Hawaii and San Francisco. To make victory certain, we would have to march into Washington and dictate the terms of peace in the White House. I wonder if our politicians, who speak so lightly of a Japanese-American war, have confidence as to the final outcome and are prepared to make the necessary sacrifices.</p>
</blockquote></li>
<li><p>Studied at Harvard, fluent in English.</p></li>
<li><p>Opposed Japanese invasions of Manchuria and China, the pact with Nazi Germany, and the war with the United States.</p></li>
<li><p>Appointed commander-in-chief to protect him from assassination attempts by Japanese militarists.</p></li>
</ul></li>
</ul></li>
<li><p><strong>Japanese Army Leaders’ Perspective:</strong></p>
<ul>
<li>Confident of Japanese victory.</li>
<li>Eager to eliminate the United States as an obstacle to their Southeast Asian domination plans.</li>
</ul></li>
<li><p><strong>Yamamoto’s Rationale for Pearl Harbor:</strong></p>
<ul>
<li>Acknowledged Japan’s inability to outlast the United States in a prolonged war.</li>
<li>Aimed for a decisive opening blow to cripple American naval power.</li>
</ul></li>
<li><p><strong>The Pearl Harbor Attack (December 7, 1941):</strong></p>
<ul>
<li>353 Japanese aircraft from six carriers.</li>
<li>All eight battleships at Pearl Harbor hit, four sunk, others damaged.</li>
<li>Other ships sunk or damaged: three cruisers, three destroyers.</li>
<li>188 U.S. aircraft destroyed.</li>
<li>2,402 American casualties.</li>
</ul></li>
<li><p><strong>Admiral Harold Stark’s Warning:</strong></p>
<ul>
<li><p>U.S. Chief of Naval Operations (CNO).</p></li>
<li><p>Recognized Taranto’s implications even before Yamamoto.</p></li>
<li><p>Memo (November 22, 1940):</p>
<blockquote class="blockquote">
<p>By far the most profitable object of a sudden attack in Hawaiian waters would be the fleet units based in that area.</p>
</blockquote></li>
<li><p>Suggested placing torpedo nets within the harbor.</p></li>
<li><p>Letter to Secretary of the Navy Frank Knox (January 24, 1941):</p>
<blockquote class="blockquote">
<p>If war eventuates with Japan, it is believed easily possible that hostilities would be initiated by a surprise attack upon the fleet or the naval base at Pearl Harbor.</p>
</blockquote></li>
</ul></li>
<li><p><strong>Failure to Heed Stark’s Warning:</strong></p>
<ul>
<li>Stark issued warnings and suggested torpedo nets.</li>
<li>Challenges to maintaining vigilance: Daily emergencies, distractions, interference with training.</li>
<li>Perceived implausibility of the threat: Belief that Pearl Harbor’s shallow depth prevented torpedo attacks.</li>
<li>Failure to communicate intelligence about Japanese shallow-water torpedoes.</li>
<li>Stark removed as CNO in March 1942 and reassigned to London.</li>
</ul></li>
<li><p><strong>Yamamoto and Stark’s Shared Insight:</strong></p>
<ul>
<li>Anticipated war between Japan and the United States.</li>
<li>Recognized U.S. naval superiority.</li>
<li>Understood Taranto as an analog for a potential attack on Pearl Harbor.</li>
</ul></li>
<li><p><strong>Connecting the Dots:</strong></p>
<ul>
<li>Yamamoto, Stark, and Chalfie demonstrate the process of receiving new information and grasping its implications.</li>
<li>Connecting new data to existing knowledge to gain insights and guide action.</li>
</ul></li>
</ul>
</section>
<section id="broccoli-and-goldfish-infant-empathy" class="level4">
<h4 class="anchored" data-anchor-id="broccoli-and-goldfish-infant-empathy">Broccoli and Goldfish: Infant Empathy</h4>
<ul>
<li><strong>Alison Gopnik’s Insight:</strong>
<ul>
<li>Developmental psychologist at UC Berkeley.</li>
<li>Focus: Infant cognition.</li>
<li>Belief: Babies possess greater cognitive abilities than commonly assumed.</li>
<li><strong>Theory of Mind:</strong> Understanding that others have their own minds and preferences.</li>
<li>View: Children learn through theory formation, similar to scientists.</li>
<li>Rejection of the idea of babies as “defective grown-ups.”</li>
<li>Observation: Babies are more attuned to unexpected events than adults.</li>
<li><em>The Philosophical Baby</em> (2009): Explores infant capabilities, including empathy.</li>
</ul></li>
<li><strong>Challenging Existing Beliefs about Empathy:</strong>
<ul>
<li>Previous belief: Children develop perspective-taking around age seven.</li>
<li>Gopnik’s hypothesis: De-centering (perspective-taking) occurs much earlier.</li>
</ul></li>
<li><strong>The Pineapple Incident:</strong>
<ul>
<li>Gopnik’s son’s reaction to pineapple in Kirsch inspired an experiment.</li>
<li>Son’s statement: “Mommy, pineapple is yummy for you, but it’s yucky for me.”</li>
</ul></li>
<li><strong>The Broccoli and Goldfish Paradigm:</strong>
<ul>
<li>Experiment with 14- and 18-month-old babies.</li>
<li>Presented with broccoli and goldfish crackers.</li>
<li>Researcher Betty Reticoli expressed preference (happy or disgusted face) for each food.</li>
<li>18-month-olds offered the food Reticoli preferred, even if it was broccoli.</li>
<li>14-month-olds offered goldfish regardless of Reticoli’s expressed preference.</li>
</ul></li>
<li><strong>Results and Implications:</strong>
<ul>
<li>18-month-olds demonstrated empathy, while 14-month-olds did not.</li>
<li>18-month-olds did not respond egocentrically or selfishly.</li>
<li>Opened new avenues for research on infant cognition.</li>
</ul></li>
<li><strong>Gopnik’s Connection Insight:</strong>
<ul>
<li>Similar to Yamamoto, Gopnik connected a new idea (her son’s statement) to her existing work.</li>
<li>Led to a new understanding and expanded research possibilities.</li>
</ul></li>
</ul>
</section>
<section id="the-mother-of-all-scientific-insights-darwins-theory-of-evolution" class="level4">
<h4 class="anchored" data-anchor-id="the-mother-of-all-scientific-insights-darwins-theory-of-evolution">The Mother of All Scientific Insights: Darwin’s Theory of Evolution</h4>
<ul>
<li><strong>Charles Darwin’s Journey:</strong>
<ul>
<li>Age 22: Embarked on the HMS Beagle voyage to chart the South American coast.</li>
<li>Background: Cambridge graduate, intended to become an Anglican parson.</li>
<li>Family background: Freethinkers, attended Unitarian chapel.</li>
<li>Interest in natural history.</li>
<li>Influenced by Anglican boarding school after mother’s death.</li>
<li>Indifferent to medical studies at the University of Edinburgh.</li>
<li>Switched to Cambridge, focusing on natural history.</li>
<li>Follower of botany professor John Henslow.</li>
<li>Joined HMS Beagle as an unpaid naturalist.</li>
<li>Five-year expedition (1831-1836).</li>
<li>Observations: Geography, animal species, various phenomena.</li>
<li>Key observations:
<ul>
<li>Seashells on a cliff in Cape Verde.</li>
<li>Fossil bones of extinct mammals in Patagonia.</li>
<li>Variations in mockingbirds across the Galapagos Islands.</li>
</ul></li>
</ul></li>
<li><strong>The Question of Variation:</strong>
<ul>
<li>Darwin pondered the driving force behind variations in species.</li>
<li>Awareness of deliberate cultivation of variations by farmers and breeders.</li>
</ul></li>
<li><strong>Influence of Malthus:</strong>
<ul>
<li>September 1838: Darwin read <em>An Essay on the Principle of Population</em> by Thomas Robert Malthus.</li>
<li>Malthus’s argument: Population growth leads to competition for resources.</li>
<li>Darwin’s connection: This competition could explain variations in species.</li>
</ul></li>
<li><strong>Natural Selection:</strong>
<ul>
<li>Advantageous variations are selected in the competition for resources.</li>
<li>Individuals with advantageous traits are more likely to survive, reproduce, and pass on their traits.</li>
<li>Unfavorable variations are eliminated.</li>
<li>Nature automatically selects advantageous traits, similar to farmers’ deliberate selection.</li>
</ul></li>
<li><strong>Theory of Natural Selection:</strong>
<ul>
<li>Based on <strong>blind variation</strong> and <strong>selective retention</strong>.</li>
<li><strong>Blind variation:</strong> Natural variability in physical features within a species.</li>
<li><strong>Selective retention:</strong> Variations increasing survival value are passed on to offspring.</li>
<li>1871: Darwin added sexual competition and selection to his theory.</li>
</ul></li>
<li><strong>Alfred Russel Wallace’s Independent Discovery:</strong>
<ul>
<li>British naturalist working in the Malay archipelago.</li>
<li>Developed the same theory of evolution after reading Malthus.</li>
</ul></li>
<li><strong>Darwin and Wallace’s Shared Insight:</strong>
<ul>
<li>Both wondered about species change, primed by Malthus’s ideas.</li>
<li>Connected the concept of competition for resources to evolution.</li>
<li>First-hand experience as naturalists, observing variations within and between species.</li>
<li>Recognized individual differences as the basis for blind variation and selective retention.</li>
</ul></li>
</ul>
</section>
<section id="the-connection-strategy-and-its-limitations" class="level4">
<h4 class="anchored" data-anchor-id="the-connection-strategy-and-its-limitations">The Connection Strategy and Its Limitations</h4>
<ul>
<li><strong>Connection Strategy:</strong> A dominant pattern in insights, involving connecting new information with existing knowledge.
<ul>
<li>Accounted for 98 out of 120 cases (82%).</li>
<li>Aligns with Graham Wallace’s concept of unconscious associations bursting into awareness.</li>
<li>Suggests insights can be increased by exposure to diverse ideas.</li>
</ul></li>
<li><strong>Reservations about the “Connecting the Dots” Metaphor:</strong>
<ul>
<li>Oversimplifies the process of making sense of information and gaining insights.</li>
<li>Ignores the role of “non-dots” (irrelevant information) and “anti-dots” (contradictory information).</li>
</ul></li>
<li><strong>Non-Dots and Anti-Dots in the Taranto-Pearl Harbor Connection:</strong>
<ul>
<li><strong>Non-dots:</strong> Irrelevant messages.</li>
<li><strong>Anti-dots:</strong> Differences between Taranto and Pearl Harbor that could have blocked the insight.
<ul>
<li><strong>Distance and logistics:</strong> Japanese fleet needed to travel 4,000 miles, requiring refueling and a larger convoy.</li>
<li><strong>Weather:</strong> Japanese fleet vulnerable to unpredictable weather during the long journey.</li>
<li><strong>Defenses:</strong> Pearl Harbor had stronger defenses than Taranto, including U.S. aircraft carriers.</li>
<li><strong>Time of attack:</strong> Japanese attack had to be during daytime, increasing the risk of detection.</li>
<li><strong>Reconnaissance:</strong> U.S. ceased reconnaissance missions, unknowingly benefiting the Japanese.</li>
<li><strong>Torpedo nets:</strong> U.S. chose not to deploy torpedo nets due to the perceived shallowness of Pearl Harbor.</li>
<li><strong>Shallow water:</strong> Japanese torpedoes were initially unsuitable for shallow water.</li>
</ul></li>
</ul></li>
<li><strong>Significance of Yamamoto and Stark’s Insight:</strong>
<ul>
<li>Recognized the fundamental lesson of Taranto: Naval fleets were vulnerable to air attacks.</li>
<li>Understood the vulnerability of concentrated naval forces.</li>
</ul></li>
<li><strong>Beyond Connecting the Dots:</strong>
<ul>
<li>The connection strategy involves changing the way we think.</li>
<li>Other insight strategies (contradictions, creative desperation) also play a role.</li>
</ul></li>
</ul>
</section>
<section id="multiple-insight-strategies-at-play" class="level4">
<h4 class="anchored" data-anchor-id="multiple-insight-strategies-at-play">Multiple Insight Strategies at Play</h4>
<ul>
<li><strong>Coding for Insight Strategies:</strong>
<ul>
<li>Each incident coded for five strategies: connections, coincidences, curiosities, contradictions, and creative desperation.</li>
<li>Most insights involve a blend of strategies.</li>
</ul></li>
<li><strong>Connection Strategy Statistics:</strong>
<ul>
<li>98 cases involved connections.</li>
<li>Only 45 cases relied solely on the connection strategy.</li>
<li>53 cases involved connections plus other strategies.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-the-investigative-process" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-the-investigative-process">Conclusion: The Investigative Process</h4>
<ul>
<li>Insights are not simply about connecting the dots.</li>
<li>Like a mystery story, the investigation continues beyond the first likely suspect.</li>
</ul>
</section>
</section>
<section id="chapter-4-coincidences-and-curiosities" class="level3">
<h3 class="anchored" data-anchor-id="chapter-4-coincidences-and-curiosities">Chapter 4: Coincidences and Curiosities</h3>
<section id="introduction-to-coincidences" class="level4">
<h4 class="anchored" data-anchor-id="introduction-to-coincidences">Introduction to Coincidences</h4>
<ul>
<li><p>When we observe a <strong>coincidence</strong>, we question whether it’s random chance or a deeper pattern.</p></li>
<li><p>A coincidence is the observation of seemingly related events without an obvious causal link.</p></li>
<li><p>Coincidences are often chance occurrences that can be ignored, but sometimes they signal a new pattern.</p></li>
<li><p><strong>Example: Michael Gottlieb and the emergence of AIDS</strong></p>
<ul>
<li>Gottlieb encountered multiple patients with compromised immune systems.</li>
<li>Instead of dismissing it as chance, he investigated further.</li>
<li>The coincidence of similar symptoms, combined with the patients all being gay, led to the identification of a new pattern: AIDS.</li>
</ul></li>
<li><p>People who notice coincidences, trends, and irregularities are valuable, even if often wrong.</p></li>
<li><p>Their observations should be considered, as they might lead to discoveries.</p></li>
<li><p>Klein initially wasn’t sure how to interpret coincidences in his research.</p></li>
<li><p>Coincidences disrupted initial stories but eventually led to better ones.</p></li>
<li><p>These incidents were classified as <strong>insights</strong> because they initiated a path towards a better understanding.</p></li>
</ul>
</section>
<section id="jocelyn-bell-burnell-and-the-discovery-of-pulsars" class="level4">
<h4 class="anchored" data-anchor-id="jocelyn-bell-burnell-and-the-discovery-of-pulsars">Jocelyn Bell Burnell and the Discovery of Pulsars</h4>
<ul>
<li><p><strong>Jocelyn Bell Burnell</strong>, an Irish astrophysicist, turned a coincidence into a major discovery.</p></li>
<li><p>Early exposure to astronomy through her father, the architect of Armagh Observatory.</p></li>
<li><p>Chose radio astronomy to avoid all-night data collection.</p></li>
<li><p>As a graduate student at Cambridge University, she built a radio telescope.</p></li>
<li><p>Data output was on pen recorders, creating squiggly lines on chart paper.</p></li>
<li><p>Her thesis project aimed to find <strong>quasars</strong>, distant objects emitting high energy.</p></li>
<li><p><strong>The Coincidence</strong>:</p>
<ul>
<li>Noticed a small, unusual squiggle (quarter-inch out of 400 feet of chart paper) on the data recorder.</li>
<li>Initially marked with a question mark, but her brain recognized a recurring pattern.</li>
<li>To analyze the signal, she had to run the paper at high speed for short periods.</li>
<li>After a month, she captured a detailed trace revealing regular pulses.</li>
</ul></li>
<li><p><strong>Investigating the Coincidence</strong>:</p>
<ul>
<li>Concerned about equipment malfunction, but technicians found no issues.</li>
<li>The signal pulsed regularly every 1.339 seconds.</li>
<li>Later, she found a similar signal in a different part of the sky, pulsing every 1.25 seconds. This confirmed the pattern was not an anomaly.</li>
<li>Discovered more examples, confirming her discovery of <strong>pulsars</strong>, rapidly spinning neutron stars, remnants of supernova explosions.</li>
</ul></li>
<li><p><strong>Nobel Prize Controversy</strong>:</p>
<ul>
<li>Her advisor, Antony Hewish, was listed as the first author on the publication and received the Nobel Prize in 1974.</li>
<li>Burnell’s contribution was acknowledged through other awards, but her omission from the Nobel Prize sparked criticism.</li>
<li>A prominent astrophysicist acknowledged her discovery as “the greatest astronomical discovery of the 20th century.”</li>
<li>Burnell remained diplomatic about the omission.</li>
</ul></li>
<li><p><strong>The Importance of Coincidence</strong>:</p>
<ul>
<li>Burnell’s insight stemmed from noticing and investigating a coincidence.</li>
<li>Like Gottlieb, she recognized the potential significance of the coincidence.</li>
</ul></li>
<li><p><strong>Coincidences as Guides</strong>:</p>
<ul>
<li>Coincidences can guide the search for evidence and change understanding, focus, and actions.</li>
<li>Burnell adjusted her schedule to capture the bursts in more detail.</li>
</ul></li>
</ul>
</section>
<section id="defending-the-defender-denver-broncos-vs.-green-bay-packers" class="level4">
<h4 class="anchored" data-anchor-id="defending-the-defender-denver-broncos-vs.-green-bay-packers">Defending the Defender: Denver Broncos vs.&nbsp;Green Bay Packers</h4>
<ul>
<li><p><strong>Super Bowl XXXII (1998)</strong>: Denver Broncos vs.&nbsp;Green Bay Packers.</p></li>
<li><p>Denver coaches noticed a coincidence in game films: Green Bay defensive back <strong>Leroy Butler</strong> consistently disrupted plays, seemingly appearing out of nowhere.</p></li>
<li><p><strong>The Coincidence</strong>: Butler’s frequent presence in crucial moments.</p></li>
<li><p><strong>Denver’s Strategy</strong>: Prioritized blocking Butler using various players (tackle, fullback, wide receiver).</p></li>
<li><p><strong>Outcome</strong>: Terrell Davis (Broncos running back) had a successful game, winning MVP. Butler still made tackles but was less disruptive.</p></li>
<li><p>The Broncos’ winning strategy was based on the coincidence of Butler’s disruptive presence.</p></li>
</ul>
</section>
<section id="coincidence-vs.-connection-insights" class="level4">
<h4 class="anchored" data-anchor-id="coincidence-vs.-connection-insights">Coincidence vs.&nbsp;Connection Insights</h4>
<ul>
<li><strong>Connection Insights</strong>: New information provides crucial details (e.g., Chalfie, Yamamoto, Gopnik examples). The specific details are essential for the insight.</li>
<li><strong>Coincidence Insights</strong>: Repetition is key. The specific details of individual instances are less important than the recurring pattern.</li>
<li><strong>Example</strong>: If Gottlieb’s first patient hadn’t shown up, the subsequent patients would still have revealed the AIDS pattern.</li>
</ul>
</section>
<section id="curiosities" class="level4">
<h4 class="anchored" data-anchor-id="curiosities">Curiosities</h4>
<ul>
<li><p><strong>Curiosities</strong> represent another insight strategy.</p></li>
<li><p>Insights sparked by single events or observations that provoke a “What’s going on here?” reaction.</p></li>
<li><p><strong>Example: Alexander Fleming and Penicillin</strong></p>
<ul>
<li>Fleming observed a halo of destruction around a mold contaminating a Staphylococcus bacteria culture.</li>
<li>The bacteria near the mold were destroyed, while others grew normally.</li>
<li>This unexpected observation (“That’s funny”) led to the discovery of penicillin, the first antibiotic.</li>
</ul></li>
<li><p><strong>Curiosity vs.&nbsp;Coincidence</strong>: Curiosities are triggered by single events, while coincidences involve repeated patterns.</p></li>
<li><p><strong>Example: Wilhelm Röntgen and X-rays</strong></p>
<ul>
<li>Noticed a barium platinocyanide screen glowing despite a cardboard covering blocking light from his cathode ray apparatus.</li>
<li>Investigated the unexpected glow and discovered X-rays, a new form of light.</li>
<li>Initially met with disbelief, but Röntgen eventually received the first Nobel Prize in Physics.</li>
</ul></li>
<li><p><strong>Example: Russell Ohl and Transistors</strong></p>
<ul>
<li>Observed a significant current jump when using a cracked piece of silicon exposed to light.</li>
<li>Investigated the anomaly and discovered the impact of impurities on silicon’s electrical conductivity.</li>
<li>This led to the development of transistors and diodes, and later, silicon solar cells.</li>
</ul></li>
</ul>
</section>
<section id="the-danger-of-coincidence" class="level4">
<h4 class="anchored" data-anchor-id="the-danger-of-coincidence">The Danger of Coincidence</h4>
<ul>
<li>Humans are naturally attuned to coincidences and associations, sometimes overly so.</li>
<li>We can perceive connections that don’t exist, leading to skepticism about coincidences.</li>
<li>Insight requires discerning potentially meaningful coincidences from spurious ones.</li>
<li>Successful individuals like Burnell, Gottlieb, and the Broncos coaches identified coincidences with significant implications.</li>
<li>Their expertise allowed them to recognize atypical events with potential consequences.</li>
<li>We are prone to noticing coincidences, even spurious ones.</li>
<li>It is important to test coincidences before accepting them. Collect evidence to verify that they aren’t spurious.</li>
<li>If the test fails, discard the coincidence.</li>
<li>This cautious approach is characteristic of individuals with a “down-arrow” attitude, who have low tolerance for mistakes.</li>
<li>However, over-reliance on testing can be problematic, as evidence can be flawed.</li>
</ul>
</section>
<section id="barry-marshall-and-the-helicobacter-pylori-discovery" class="level4">
<h4 class="anchored" data-anchor-id="barry-marshall-and-the-helicobacter-pylori-discovery">Barry Marshall and the <em>Helicobacter pylori</em> Discovery</h4>
<ul>
<li><p>Barry Marshall discovered that <em>H. pylori</em> causes ulcers and stomach cancer, challenging the prevailing belief that stress was the cause.</p></li>
<li><p>Faced resistance from the medical community, which favored surgical treatments and antacids.</p></li>
<li><p><strong>The Coincidence</strong>:</p>
<ul>
<li>Marshall collaborated with Robin Warren, who had observed a corkscrew-shaped bacterium in patients’ stomachs.</li>
<li>Marshall found a former patient of his on Warren’s list, linking chronic stomach pain with the bacterium.</li>
<li>Another patient’s stomach pain disappeared after antibiotic treatment for a bacterial infection.</li>
</ul></li>
<li><p><strong>Initial Setback and Accidental Discovery</strong>:</p>
<ul>
<li>Marshall’s initial study found no <em>H. pylori</em> in the first 30 patients due to a lab error (discarding cultures too early).</li>
<li>A lab disruption due to a superbug investigation led to a positive <em>H. pylori</em> culture, revealing the previous error.</li>
</ul></li>
<li><p><strong>Confirmation and Continued Resistance</strong>:</p>
<ul>
<li>Subsequent tests confirmed the presence of <em>H. pylori</em> in all patients with duodenal ulcers.</li>
<li>Despite evidence, the medical community continued to reject Marshall’s findings.</li>
</ul></li>
<li><p><strong>Self-Experiment and Eventual Acceptance</strong>:</p>
<ul>
<li>Marshall infected himself with <em>H. pylori</em>, developed gastritis, and then cured himself with antibiotics, proving his theory.</li>
<li>Media attention, especially through non-scientific publications, helped disseminate his findings.</li>
<li>The FDA and NIH eventually acknowledged his research, leading to widespread acceptance.</li>
</ul></li>
</ul>
</section>
<section id="walter-reed-and-the-yellow-fever-discovery" class="level4">
<h4 class="anchored" data-anchor-id="walter-reed-and-the-yellow-fever-discovery">Walter Reed and the Yellow Fever Discovery</h4>
<ul>
<li><p>Walter Reed investigated yellow fever in Cuba, challenging the prevailing belief that it spread through unsanitary conditions or air.</p></li>
<li><p><strong>Carlos Juan Finlay’s Mosquito Hypothesis (and its initial rejection)</strong>:</p>
<ul>
<li>Finlay observed a correlation between the presence of <em>Culex</em> mosquitoes and yellow fever outbreaks.</li>
<li>His hypothesis was ridiculed, and his experiments failed because he didn’t account for the incubation period.</li>
</ul></li>
<li><p><strong>Walter Reed’s Investigation</strong>:</p>
<ul>
<li>Reed learned about a jail cell case where only one prisoner contracted yellow fever despite shared living conditions, suggesting a vector like a mosquito.</li>
<li>Henry Rose Carter’s observation of an incubation period in yellow fever outbreaks further supported the mosquito hypothesis.</li>
<li>Carter’s research on houses with yellow fever victims showed that visitors became ill only after a certain period, indicating mosquito incubation.</li>
</ul></li>
<li><p><strong>Confirmation of the Mosquito Hypothesis</strong>:</p>
<ul>
<li>Reed’s assistants, Jesse Lazear and James Carroll, allowed infected mosquitoes to bite them after an incubation period, contracting yellow fever (Lazear fatally).</li>
<li>Controlled experiments confirmed that <em>Culex</em> mosquitoes transmitted the disease.</li>
</ul></li>
<li><p><strong>Overcoming Obstacles</strong>:</p>
<ul>
<li>Reed’s team had to overcome flawed data (Finlay’s study) and a prevailing belief.</li>
<li>The mosquito theory lacked plausibility compared to the miasma theory (disease caused by bad air).</li>
</ul></li>
</ul>
</section>
<section id="the-importance-of-challenging-evidence" class="level4">
<h4 class="anchored" data-anchor-id="the-importance-of-challenging-evidence">The Importance of Challenging Evidence</h4>
<ul>
<li>The ulcer and yellow fever examples show how flawed evidence can seemingly disprove a correct insight.</li>
<li>Evidence can be affected by unknown variables.</li>
<li>While evidence is important, it should not be blindly trusted.</li>
<li>Both Marshall and Reed had to challenge existing beliefs and evidence.</li>
<li>Coincidence insights often involve contradictions between existing beliefs and new evidence.</li>
</ul>
</section>
<section id="conclusion" class="level4">
<h4 class="anchored" data-anchor-id="conclusion">Conclusion</h4>
<ul>
<li>Coincidences, curiosities, and contradictions can all lead to valuable insights.</li>
<li>It’s crucial to be open to exploring these avenues, even when they challenge established knowledge.</li>
<li>Evidence is important, but it can be misleading; critical thinking and careful investigation are essential.</li>
</ul>
</section>
</section>
<section id="chapter-5-contradictions" class="level3">
<h3 class="anchored" data-anchor-id="chapter-5-contradictions">Chapter 5: Contradictions</h3>
<section id="introduction-to-contradictions" class="level4">
<h4 class="anchored" data-anchor-id="introduction-to-contradictions">Introduction to Contradictions</h4>
<ul>
<li><strong>Contradiction insights</strong> trigger the emotional reaction of disbelief (“no way”).</li>
<li>This involuntary response occurs when encountering illogical ideas.</li>
<li>Analogous to a “tilt” message in a pinball machine.</li>
<li>Mental tilt reflexes are the opposite of connections and coincidences.</li>
<li>Focus on inconsistencies rather than how ideas fit together.</li>
<li>Contradiction insights signal flaws in current understanding, leading to a better story.</li>
<li>Examples:
<ul>
<li>Young cop and speeding driver (quick new story).</li>
<li>Harry Markopolos and Madoff’s Ponzi scheme (longer process).</li>
</ul></li>
<li>Contradictions differ from <strong>curiosity insights</strong>:
<ul>
<li>Curiosities prompt wondering, while contradictions cause doubt (“That can’t be right”).</li>
</ul></li>
<li>Only one of nine curiosity insights also coded for contradiction.</li>
<li>Author initially resisted the concept of contradiction insights, expecting insights to arise from connections or coincidences.</li>
<li>Contradictions appeared in over a third of the sample (45/120 cases), often dominating the insight process.</li>
<li>The tilt reflex is a powerful trigger.</li>
</ul>
</section>
<section id="banking-on-contradictions" class="level4">
<h4 class="anchored" data-anchor-id="banking-on-contradictions">Banking on Contradictions</h4>
<ul>
<li>Investment managers profited from contradiction insights during the 2003-2007 housing bubble.</li>
<li>While others invested in subprime mortgages, some responded with disbelief at the dramatic price increases.</li>
<li>These investors concluded a housing bubble was about to burst.</li>
<li>Other individuals also identified the bubble:
<ul>
<li>Sheila Bair (FDIC head) warned about subprime mortgages in 2006.</li>
<li>Joshua Rosner (financial analyst) predicted lower home prices and foreclosures in 2001.</li>
<li>Dean Baker (research co-director) described the bubble’s disastrous collapse in 2002.</li>
</ul></li>
<li>Five cases illustrate different cues triggering the tilt reflex:</li>
</ul>
<section id="steve-eisman" class="level5">
<h5 class="anchored" data-anchor-id="steve-eisman">Steve Eisman</h5>
<ul>
<li>Insider (Wall Street analyst specializing in subprime mortgages).</li>
<li>Initially advocated for the subprime market but changed his mind due to shoddy loan practices in the late 1990s.</li>
<li>Vindicated by the late 1990s subprime collapse.</li>
<li>Expected lenders to become more cautious, but the opposite happened.</li>
<li>By 2005, subprime growth continued despite rising interest rates.</li>
<li>Discovered lenders had learned to sell risky loans to Wall Street banks, repackaged as bonds, masking the risk.</li>
<li>Eisman’s tilt reflex intensified.</li>
<li>Investigated ratings agencies, finding their models didn’t account for decreasing housing prices.</li>
<li>Started a hedge fund to short the subprime market.</li>
</ul>
</section>
<section id="john-paulson-and-paolo-pellegrini" class="level5">
<h5 class="anchored" data-anchor-id="john-paulson-and-paolo-pellegrini">John Paulson and Paolo Pellegrini</h5>
<ul>
<li>Outsiders (hedge fund managers).</li>
<li>Noticed unsustainable growth rates in the subprime market.</li>
<li>Recognized a bubble driven by increasing demand based on expected price increases.</li>
<li>Concluded the bubble would collapse even if prices leveled off.</li>
<li>Identified the contradiction between market belief in continued price increases and economic forces preventing this.</li>
</ul>
</section>
<section id="michael-burry" class="level5">
<h5 class="anchored" data-anchor-id="michael-burry">Michael Burry</h5>
<ul>
<li>Outsider (contrarian investor with Asperger’s).</li>
<li>Transitioned from medicine to finance.</li>
<li>Started a successful hedge fund.</li>
<li>Suspicions about the subprime market arose in 2003.</li>
<li>Found declining lending standards in 2004, contradicting the belief in ever-growing housing prices.</li>
<li>Noted analyst claims: “Home prices have never gone negative” and “Home prices won’t even go flat.”</li>
<li>Identified the contradiction between optimism and declining lending standards.</li>
<li>Predicted a market decline due to unsustainable subprime mortgages.</li>
<li>Estimated a two-year horizon (2007) for the bubble to burst due to increasing interest rates on variable-rate loans.</li>
</ul>
</section>
<section id="greg-lippmann" class="level5">
<h5 class="anchored" data-anchor-id="greg-lippmann">Greg Lippmann</h5>
<ul>
<li>Insider (trader at Deutsche Bank).</li>
<li>Instructed to bet against the housing market in 2005.</li>
<li>Discovered rising mortgage default rates (1% to almost 4%) despite rising housing prices.</li>
<li>Calculated that even slight increases in default rates would render mortgage bonds worthless.</li>
<li>Tilt reflex triggered by the contradiction.</li>
<li>Recognized the vulnerability of financial markets dependent on continually increasing housing prices.</li>
</ul>
</section>
<section id="gene-park" class="level5">
<h5 class="anchored" data-anchor-id="gene-park">Gene Park</h5>
<ul>
<li>Insider (worked for AIG).</li>
<li>Considered investing in New Century (mortgage lender) but found their success based on poor subprime loans.</li>
<li>Observed risky investments in mortgage insurance that didn’t account for a potential housing market crash.</li>
<li>Tilt reflex triggered by a jobless friend receiving offers for unaffordable houses.</li>
<li>Recognized an unsustainable bubble and AIG’s vulnerability.</li>
<li>Unable to profit from his insight or convince his bosses of the impending danger.</li>
</ul>
</section>
</section>
<section id="the-skeptical-mindset" class="level4">
<h4 class="anchored" data-anchor-id="the-skeptical-mindset">The Skeptical Mindset</h4>
<ul>
<li>The five investors and Harry Markopolos were skeptics.</li>
<li>While open-mindedness is valued for discoveries, a suspicious mind can also be beneficial.</li>
<li>Skepticism allows investigation of overlooked pathways.</li>
<li>Two-thirds of the contradiction insight cases involved individuals with suspicious mindsets.</li>
<li>They resisted popular enthusiasms.</li>
</ul>
<section id="meredith-whitney" class="level5">
<h5 class="anchored" data-anchor-id="meredith-whitney">Meredith Whitney</h5>
<ul>
<li>Wall Street analyst trained by Steve Eisman.</li>
<li>Warned about reduced credit standards in 2005, largely ignored.</li>
<li>Gained recognition for predicting Citigroup’s financial crisis in 2007.</li>
<li>Investigated Bear Stearns in early 2008 despite its seemingly strong asset sheet.</li>
<li>Initial optimism faded upon learning about delayed access to Federal Reserve loans for investment banks.</li>
<li>Suspected traders were lying about Bear Stearns’ stability.</li>
<li>Confirmed the possibility of Bear Stearns’ collapse through another source.</li>
<li>Adopted a deliberately skeptical mindset, interpreting data as evidence of Bear Stearns’ impending failure.</li>
<li>Identified factors contributing to the potential collapse: contracting businesses, loss of market share, high leverage.</li>
<li>Confidently predicted Bear Stearns’ collapse based on her gut feeling and skeptical analysis.</li>
<li>Compared this insight to her previous insights about subprime lending and Citigroup.</li>
<li>Whitney’s skeptical lens provided a different perspective, enabling her to gain insights missed by others.</li>
<li>Acted as a detective, challenging popular beliefs.</li>
<li>Similar to the five investors who foresaw the subprime bubble’s end.</li>
<li>A suspicious mind offers unique benefits, exposing alternative facts and trends.</li>
</ul>
</section>
</section>
<section id="the-broad-street-pump" class="level4">
<h4 class="anchored" data-anchor-id="the-broad-street-pump">The Broad Street Pump</h4>
<ul>
<li>John Snow’s cholera discovery illustrates the tilt reflex.</li>
<li>Cholera epidemics spread rapidly, causing dehydration and death.</li>
<li>Miasma theory (disease spread by bad air) prevailed at the time.</li>
<li>John Snow:
<ul>
<li>London physician known for anesthesia expertise.</li>
<li>Pioneered safe anesthesia dosage regulation.</li>
<li>Administered chloroform to Queen Victoria.</li>
<li>His prominence didn’t shield him from criticism for challenging miasma theory.</li>
</ul></li>
<li>Snow’s interest in cholera sparked by a contradiction:
<ul>
<li>Two individuals contracting cholera in the same lodging room, challenging miasma theory.</li>
<li>Tilt reflex activated.</li>
<li>Noted other contradictions:
<ul>
<li>Inconsistent pattern of disease transmission.</li>
<li>Lack of lung damage in cholera victims, suggesting ingestion as the cause.</li>
</ul></li>
</ul></li>
<li>Insight: Cholera caused by ingestion, not inhalation.</li>
<li>Gathered data suggesting contaminated water as the source.</li>
<li>Evidence:
<ul>
<li>Cholera outbreak in a slum linked to a contaminated well.</li>
<li>Natural experiment with two water companies: “down river” company (contaminated water) had higher cholera rates.</li>
</ul></li>
<li>Used contradictions and coincidences to support his theory.</li>
<li>1854 cholera outbreak:
<ul>
<li>Cholera cases clustered around the Broad Street pump.</li>
<li>Anomalies: brewery workers (drinking beer) didn’t contract cholera.</li>
<li>Supporting evidence: woman contracting cholera after drinking water from the Broad Street pump brought by her son.</li>
</ul></li>
<li>Broad Street pump handle removed, coinciding with the epidemic’s end (though it was already waning).</li>
<li>Snow’s theory faced ridicule, but gained acceptance after the Broad Street pump incident.</li>
</ul>
</section>
<section id="contradictions-and-insights" class="level4">
<h4 class="anchored" data-anchor-id="contradictions-and-insights">Contradictions and Insights</h4>
<ul>
<li>Contradictions fueled Snow’s and Walter Reed’s insights.</li>
<li>Humans are built to detect anomalies and inconsistencies.</li>
<li>Contradictions lead to insights (the better story) and can be considered insights themselves.</li>
<li>Noticing a contradiction shifts understanding.</li>
</ul>
</section>
<section id="thomas-kuhn-and-paradigm-shifts" class="level4">
<h4 class="anchored" data-anchor-id="thomas-kuhn-and-paradigm-shifts">Thomas Kuhn and Paradigm Shifts</h4>
<ul>
<li>Thomas Kuhn’s <em>The Structure of Scientific Revolutions</em>:
<ul>
<li>Anomalies lead to breakthroughs.</li>
<li><strong>Normal science</strong> adds detail to existing theories, suppressing contradictions.</li>
<li>Discrepancies accumulate, leading to crises and <strong>paradigm shifts</strong> (new ways of understanding).</li>
<li>Paradigm shifts involve <strong>paradigm destruction</strong>.</li>
<li>Paradigm shifts are insights, moving from a mediocre frame to a better one.</li>
</ul></li>
<li>Author’s critique: Kuhn overemphasizes paradigm shifts and destruction.</li>
<li>Kuhn highlights the role of anomalies and contradictions in generating new paradigms.</li>
</ul>
</section>
<section id="seeing-the-light" class="level4">
<h4 class="anchored" data-anchor-id="seeing-the-light">Seeing the Light</h4>
<ul>
<li>Einstein’s theory of special relativity illustrates contradictions leading to insights.</li>
<li>Einstein’s thought experiments about light revealed a paradox:
<ul>
<li>Light beam appearing frozen if traveling alongside it.</li>
<li>Maxwell’s equations predicting light’s constant speed.</li>
</ul></li>
<li>Resolved the paradox by changing the constant:
<ul>
<li>Newtonian physics: space and time are constant.</li>
<li>Einstein: speed of light is constant, space-time is variable.</li>
</ul></li>
<li>Implication: Time dilation, length contraction, and mass increase as speed approaches light speed.</li>
<li>Einstein, like Snow, Markopolos, and the financiers, used contradictions for discovery.</li>
</ul>
</section>
<section id="conclusion-1" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-1">Conclusion</h4>
<ul>
<li>The strategy of using contradictions differs from noticing coincidences, curiosities, and making connections.</li>
<li>Klein questioned the ability to formulate a single answer to the mystery of insight.</li>
<li>One more strategy remained: the scientific method.</li>
</ul>
</section>
</section>
<section id="chapter-6-creative-desperation" class="level3">
<h3 class="anchored" data-anchor-id="chapter-6-creative-desperation">Chapter 6: Creative Desperation</h3>
<section id="trapped-by-assumptions" class="level4">
<h4 class="anchored" data-anchor-id="trapped-by-assumptions">Trapped by Assumptions</h4>
<ul>
<li>Some insights are accidental, arising from unplanned circumstances or being in the right place at the right time.
<ul>
<li>Examples: The young cop (mentioned earlier in the book, context not provided in this excerpt), Martin Chalfie’s experience in a lunch seminar (context not provided in this excerpt).</li>
</ul></li>
<li>Other insights are deliberate, occurring when individuals are stuck and require a breakthrough.</li>
<li><strong>Creative desperation</strong>: Term coined by Dutch psychologist Adriaan de Groot to describe strategies chess grandmasters employ when facing difficult situations.
<ul>
<li>Occurs when plausible moves fail, leading to unorthodox, potentially risky plays.</li>
</ul></li>
<li>Scientific research on insights often involves puzzles designed to stump participants.
<ul>
<li>Some participants fail, while others struggle and then experience unexpected insights.</li>
</ul></li>
<li>Creative desperation is considered the epitome of insightful problem-solving by research psychologists.
<ul>
<li>It is the paradigm used in experiments because it involves finding a solution through a flash of illumination rather than steady analysis.</li>
</ul></li>
<li>Graham Wallace’s four-stage theory of insight aligns with the concept of creative desperation (details of the four-stage theory not provided in this excerpt).</li>
<li>Creative desperation differs from other insight strategies (connecting ideas, noticing coincidences, curiosities, or contradictions) because it requires escaping a seemingly inescapable trap.</li>
</ul>
</section>
<section id="fighting-fire-with-fire" class="level4">
<h4 class="anchored" data-anchor-id="fighting-fire-with-fire">Fighting Fire with Fire</h4>
<ul>
<li><p>Creative desperation can occur in life-or-death situations.</p></li>
<li><p><strong>Mann Gulch Fire (August 5, 1949):</strong> Example of creative desperation used by Wagner Dodge.</p>
<ul>
<li><p>Fifteen smokejumpers parachuted into western Montana to control a forest fire.</p></li>
<li><p>Twelve died after being trapped by a <strong>blow-up</strong>: a sudden, unexpected firestorm caused by the collision of fire and wind.</p>
<ul>
<li>A blow-up is to a typical forest fire what a hurricane is to an ocean storm.</li>
</ul></li>
<li><p>The smokejumpers planned to descend the north slope of Mann Gulch to the Missouri River and cross to the south slope to attack the fire from below, minimizing risk.</p></li>
<li><p><strong>R. Wagner Dodge</strong>: 33-year-old team leader, described as taciturn.</p>
<ul>
<li>Had nine seasons of experience with the Forest Service, four as a smokejumper foreman.</li>
<li>Reassigned from training his crew at the last minute.</li>
</ul></li>
<li><p>Dodge noticed smoke at the bottom of the north slope, indicating a <strong>spot fire</strong>: a new fire started by wind-carried sparks and embers from the main fire.</p>
<ul>
<li>Spot fires can quickly lead to a blow-up.</li>
</ul></li>
<li><p>Dodge ordered the team to retreat uphill, but the fire gained speed.</p></li>
<li><p><strong>Norman MacLean’s book <em>Young Men and Fire</em>:</strong> Contains a graph illustrating the smokejumpers’ plight.</p>
<ul>
<li>Graph depicts the race between the fire (dotted line) and the smokejumpers (solid line).</li>
<li>Horizontal axis: Time (30 minutes).</li>
<li>Vertical axis: Distance above and below point six (where Dodge first saw smoke).</li>
<li>Smokejumpers descended to point six, reversed course at 5:45 PM.</li>
<li>Dropped tools at 5:53 PM.</li>
<li>Fire reached point six at 5:49 PM (19 minutes after spotting).</li>
<li>Fire’s speed increased with the valley’s steepness, reaching 660 feet per minute.</li>
<li>Final slope: 76%.</li>
</ul></li>
<li><p>MacLean’s reflection on being caught in a forest fire:</p>
<blockquote class="blockquote">
<p>Burning to death on a mountainside is dying at least three times, not two times, as has been said before. First, considerably ahead of the fire, you reach the verge of death in your boots and your legs. Next, as you fail, you sink back in the region of strange gases and red and blue darts where there is no oxygen, and here you die in your lungs. Then you sink in prayer into the main fire that consumes. And if you are a Catholic, about all that remains of you is your cross.</p>
</blockquote></li>
<li><p>Author’s visit to Mann Gulch:</p>
<ul>
<li>Part of a team investigating the 1994 South Canyon fire in Colorado.</li>
<li>Attempted running up the 76% slope and found it exhausting.</li>
</ul></li>
<li><p>Slowest smokejumper caught at 5:56 PM (11 minutes after reversing course).</p></li>
<li><p><strong>Dodge’s escape:</strong> Lit an <strong>escape fire</strong> in front of him and took refuge in its ashes.</p>
<ul>
<li>Protected his mouth and nose with a wet handkerchief.</li>
<li>Others didn’t understand his actions.</li>
<li>Survivor’s quote: “We thought he must have gone nuts.”</li>
</ul></li>
<li><p><strong>Author’s hypothetical reconstruction of Dodge’s thinking:</strong></p>
<ul>
<li><strong>Four Anchors (beliefs):</strong>
<ul>
<li>Uphill slope favoring the fire.</li>
<li>Fire gaining speed behind him.</li>
<li>Need for an island of safety (ridge top or rocky patch).
<ul>
<li>Rocky area 200 yards uphill, unreachable in time.</li>
</ul></li>
<li>Dry grass (fuel) as the fire’s sustenance.</li>
</ul></li>
<li>Dodge focused on neutralizing the fuel by burning it with the escape fire.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="disarming-a-flawed-assumption" class="level4">
<h4 class="anchored" data-anchor-id="disarming-a-flawed-assumption">Disarming a Flawed Assumption</h4>
<ul>
<li>Dodge’s testimony didn’t explain his insight.</li>
<li><strong>Aron Ralston (May 2003):</strong> Analogous case of creative desperation.
<ul>
<li>Trapped by a boulder pinning his right arm in a Utah canyon.</li>
<li>Trapped for over five days, recounted in his book <em>Between a Rock and a Hard Place</em>.</li>
<li>Movie adaptation: <em>127 Hours</em>, starring James Franco.</li>
<li>Initial attempts to chip away the rock failed, dulling his knife.</li>
<li>Discovered trapped arm had died due to lack of circulation.</li>
<li>Attempted amputation but knife was too dull.</li>
<li>During an emotional outburst, he felt his arm bend unnaturally.
<ul>
<li>Realized he could break the bones rather than cut them.</li>
<li>Snapped the bones, cut through the tissue and nerve, and freed himself.</li>
</ul></li>
</ul></li>
<li>Both Dodge and Ralston shifted their focus:
<ul>
<li>Dodge: From the fire to the fuel.</li>
<li>Ralston: From freeing his arm to freeing himself from the dead arm.</li>
</ul></li>
<li>Both used the source of their entrapment (fire, boulder) as a tool for escape.</li>
</ul>
</section>
<section id="cheryls-kisses" class="level4">
<h4 class="anchored" data-anchor-id="cheryls-kisses">Cheryl’s Kisses</h4>
<ul>
<li><strong>Cheryl Kane:</strong> Financial manager at Klein’s research company.</li>
<li>Problem: Employees not filling out time cards.
<ul>
<li>Fear of government audit due to government funding.</li>
<li>Directives ineffective.</li>
</ul></li>
<li>Cheryl’s mother’s suggestion: Reward instead of harass.</li>
<li>Solution: Hershey’s Kisses as rewards for timely time card submission.
<ul>
<li>Resulted in increased compliance and proactive communication.</li>
</ul></li>
<li><strong>VIP Treatment:</strong> Visible, Immediate, and Personal incentive.</li>
<li>Cheryl’s initial trapping assumption: Necessity of cajoling and threats.</li>
</ul>
</section>
<section id="other-examples-of-creative-desperation" class="level4">
<h4 class="anchored" data-anchor-id="other-examples-of-creative-desperation">Other Examples of Creative Desperation</h4>
<ul>
<li><strong>David Charlton (Corning Incorporated):</strong>
<ul>
<li>Faced criticism from chemical engineers about a new reactor vessel design due to heat transfer concerns.</li>
<li>Noticed the thin walls and small internal volumes of the reactor.</li>
<li>Hypothesized that historical data on heat transfer in larger reactors wouldn’t apply.</li>
<li>Tests proved him correct.</li>
<li>Overturned the assumption that the new material was unsuitable.</li>
</ul></li>
<li><strong>Napoleon Bonaparte (1793, Siege of Toulon):</strong>
<ul>
<li>Faced a stronger Anglo-Spanish force occupying Toulon, a crucial French port and naval arsenal.</li>
<li>The French Republic needed to repel the invaders to maintain control of the seas and discourage further revolts.</li>
<li>Napoleon, an artillery captain, noticed two lightly guarded forts overlooking the harbor (l’Éguillette and Balaguier).</li>
<li>Realized he could use these forts and light artillery to disrupt the invaders’ resupply route.
<ul>
<li>Inspired by American tactics during the Revolutionary War (Dorchester Heights, Yorktown).</li>
</ul></li>
<li>Initial resistance from French commander Jean-François Carteaux, who was fixated on capturing Toulon by force.</li>
<li>Carteaux’s dismissal allowed Napoleon to implement his plan, leading to the British withdrawal.</li>
<li>Napoleon’s insight: Didn’t need to defeat the invaders, just force them to leave by cutting off supplies.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-2" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-2">Conclusion</h4>
<ul>
<li>Creative desperation involves actively searching for insights by re-examining assumptions.</li>
<li>29 out of Klein’s 120 cases (nearly a quarter) fit this category.</li>
<li>Klein questions how to reconcile these cases with other types of insights.</li>
</ul>
</section>
</section>
<section id="chapter-7-different-ways-to-look-at-insight" class="level3">
<h3 class="anchored" data-anchor-id="chapter-7-different-ways-to-look-at-insight">Chapter 7: Different Ways to Look at Insight</h3>
<section id="investigating-the-origin-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="investigating-the-origin-of-insights">Investigating the Origin of Insights</h4>
<ul>
<li>Klein explores five potential sources of insight: <strong>connection, coincidence, curiosity, contradictions, and creative desperation</strong>.</li>
<li>Connection is the most frequently observed theme, while creative desperation aligns with how scientists view insight.</li>
<li>Several investigation methods are used:
<ul>
<li>Analyzing coded data</li>
<li>Reviewing scientific literature on insight</li>
<li>Examining the stories themselves</li>
</ul></li>
</ul>
</section>
<section id="looking-at-the-data" class="level4">
<h4 class="anchored" data-anchor-id="looking-at-the-data">Looking at the Data</h4>
<ul>
<li>Klein and Andrea Gerosa coded data from collected cases.</li>
<li>All five insight explanations emerged in the data:
<ul>
<li>Connection: 82%</li>
<li>Contradictions: 38%</li>
<li>Coincidences: 10%</li>
<li>Curiosities: 7.5%</li>
<li>Impasses/Creative Desperation: 25%</li>
</ul></li>
<li>The percentages exceed 100% because some cases involved multiple themes.</li>
<li>The data challenged some existing beliefs about insight:
<ul>
<li><strong>Open-mindedness</strong>: Two-thirds of contradiction insights arose from suspicion, not open-mindedness.</li>
<li><strong>Preparation</strong>: While most (98/120) insights were deliberate, 18% were accidental, contradicting Graham Wallace’s emphasis on preparation.
<ul>
<li>Examples: Jocelyn Bell Burnell’s discovery of pulsars while looking for quasars, and Martin Chalfie learning about green fluorescent protein.</li>
</ul></li>
<li><strong>Incubation</strong>: Only 5/120 cases clearly involved incubation. In 39%, it was impossible (e.g., Wagner Dodge escaping a wildfire). Over half the remaining cases lacked sufficient detail to determine incubation’s role. Klein concludes incubation is not essential for insight.</li>
</ul></li>
<li><strong>Sudden vs.&nbsp;Gradual Insights</strong>:
<ul>
<li>56% of cases were sudden “aha” insights.</li>
<li>44% were gradual, challenging the view that suddenness defines insight.
<ul>
<li>Klein argues insight is not synonymous with “aha,” just as conception is not the same as orgasm.</li>
</ul></li>
<li><strong>Gradual Insight Examples</strong>:
<ul>
<li><strong>Coincidences</strong>: Michael Gottlieb’s identification of AIDS through a gradual accumulation of similar patient cases. Denver Broncos coaches realizing they needed to stop Green Bay Packers linebacker Leroy Butler after observing him disrupt play repeatedly. Jocelyn Bell Burnell’s recognition of pulsars after multiple encounters with the same signal.</li>
<li><strong>Incremental Progress</strong>: Revolutionary technologies like Gutenberg’s printing press and Ford’s mass production involved solving multiple problems gradually, not a single inspiration. Stephen Johnson’s concept of “slow hunches” is cited.</li>
<li><strong>Deliberate Searches</strong>: Meredith Whitney’s investigation of Bear Stearns’ financial troubles.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="the-lucky-punch-a-case-study-in-gradual-insight" class="level4">
<h4 class="anchored" data-anchor-id="the-lucky-punch-a-case-study-in-gradual-insight">The Lucky Punch: A Case Study in Gradual Insight</h4>
<ul>
<li>Klein analyzes Floyd Mayweather Jr.’s knockout punch against Ricky Hatton in a 2007 boxing match.</li>
<li>Initial impression: a lucky punch.</li>
<li>Slow-motion replay reveals Mayweather deliberately timed his punch, exploiting Hatton’s tendency to drop his right hand when throwing a left hook.</li>
<li>Mayweather likely studied Hatton’s fight tapes and then refined his timing in the ring.</li>
<li>Hatton threw his signature left hook 18 times, 10 of which were in Mayweather’s corner, where the knockout occurred. Mayweather only countered with his own left hook in that corner.</li>
<li>Mayweather tested Hatton’s tendencies throughout the fight, observing his reactions to jabs and hooks.</li>
<li>The knockout was the culmination of a gradual process of observation, analysis, and timing. Klein’s own understanding of the fight unfolded gradually, with no single “aha” moment.</li>
</ul>
</section>
<section id="looking-at-the-scientific-literature" class="level4">
<h4 class="anchored" data-anchor-id="looking-at-the-scientific-literature">Looking at the Scientific Literature</h4>
<ul>
<li>Klein intentionally delayed reviewing existing research to maintain fresh perspective.</li>
<li>After data collection and categorization, the literature review began.</li>
<li>“The Nature of Insight” (1995) is highlighted as a valuable resource, though it revealed disagreements among researchers.</li>
<li>Debates included the role of the “aha” experience, cognitive restructuring, and the usefulness of the insight concept itself.</li>
</ul>
</section>
<section id="insights-and-decision-biases" class="level4">
<h4 class="anchored" data-anchor-id="insights-and-decision-biases">Insights and Decision Biases</h4>
<ul>
<li>Klein explores the relationship between insights and <strong>decision biases</strong>, systematic deviations from rational judgment.</li>
<li>Example: Overestimating car crash deaths compared to stroke deaths due to media exposure.</li>
<li>Insights are viewed as a counterpoint to biases.</li>
<li><strong>Heuristics and Biases Movement</strong>: Founded by Danny Kahneman and Amos Tversky, focusing on cataloging and explaining decision biases.
<ul>
<li>Kahneman won a Nobel Prize for this work.</li>
</ul></li>
<li><strong>System 1 and System 2 Thinking</strong>:
<ul>
<li>System 1: Fast, intuitive thinking (source of biases).</li>
<li>System 2: Slower, critical, analytical thinking (monitors and corrects System 1).</li>
</ul></li>
<li>The heuristics and biases research emphasizes strengthening System 2 (downward arrow in performance diagram - reducing errors).</li>
<li>Klein argues for balancing this focus with an appreciation for insights (upward arrow - gaining new understanding).</li>
</ul>
</section>
<section id="looking-at-the-stories" class="level4">
<h4 class="anchored" data-anchor-id="looking-at-the-stories">Looking at the Stories</h4>
<ul>
<li>Klein draws parallels to previous research on firefighter decision-making, where analyzing stories revealed a recognitional model of decision-making, challenging the assumption of option comparison.</li>
<li>Klein has used story-based methods successfully in other research, leading to the development of naturalistic decision research.</li>
<li><strong>Naturalistic Methods</strong>: Involve searching for meaningful patterns in stories, without predetermined hypotheses or analysis methods.</li>
<li>This approach is suited to early stages of scientific exploration.</li>
<li>Klein aims to find answers within the 120 collected insight stories.</li>
</ul>
</section>
<section id="synthesizing-the-five-themes" class="level4">
<h4 class="anchored" data-anchor-id="synthesizing-the-five-themes">Synthesizing the Five Themes</h4>
<ul>
<li>The data coding revealed five insight themes: <strong>connections, coincidences, curiosities, contradictions, and creative desperation</strong>.</li>
<li>Klein seeks to understand how these themes relate and potentially combine.</li>
<li>Key examples for further exploration include:
<ul>
<li>Financial experts predicting the 2007-2008 financial crisis (contradiction).</li>
<li>John Snow’s discovery of cholera transmission.</li>
<li>Einstein’s development of special relativity.</li>
<li>Martin Chalfie’s work with green fluorescent protein.</li>
</ul></li>
<li>Klein’s working definition of insight is “an unexpected shift to a better frame.”</li>
<li>The concept of a <strong>frame</strong> with data-fitting <strong>slots</strong> is introduced as a potential avenue for understanding insight.</li>
<li>Klein acknowledges the vagueness of these ideas but hopes they will lead to a new model of insight.</li>
</ul>
</section>
</section>
<section id="chapter-8-the-logic-of-discovery" class="level3">
<h3 class="anchored" data-anchor-id="chapter-8-the-logic-of-discovery">Chapter 8: The Logic of Discovery</h3>
<section id="introduction" class="level4">
<h4 class="anchored" data-anchor-id="introduction">Introduction</h4>
<ul>
<li>Klein noticed opposing insight strategies while reviewing stories: <strong>creative desperation</strong> and <strong>contradiction</strong>.</li>
<li>Difficulty synthesizing these seemingly reverse activities.</li>
</ul>
</section>
<section id="creative-desperation" class="level4">
<h4 class="anchored" data-anchor-id="creative-desperation">Creative Desperation</h4>
<ul>
<li>Triggered by creative blocks, seeking to escape fixation.</li>
<li>Involves identifying and <strong>discarding a weak belief</strong> trapping the individual.</li>
<li>Examples:
<ul>
<li>Wagner Dodge: Setting backfire to eliminate fuel for the forest fire.</li>
<li>Aron Ralston: Using boulder leverage to break arm bones instead of cutting.</li>
<li>Cheryl Kane: Using kisses instead of threats for time card compliance.</li>
<li>Napoleon at Toulon: Threatening supply lines instead of direct assault.</li>
</ul></li>
</ul>
</section>
<section id="contradiction" class="level4">
<h4 class="anchored" data-anchor-id="contradiction">Contradiction</h4>
<ul>
<li>Focuses on <strong>embracing the weak belief</strong> or anomaly.</li>
<li>Using the contradiction to reconstruct the narrative.</li>
<li>Examples:
<ul>
<li>John Snow: Cholera spread by water, not air (miasma theory). Contrary evidence:
<ul>
<li>Uneven cholera incidence despite shared air.</li>
<li>Healthy lungs but damaged digestive tracts in autopsies.</li>
</ul></li>
<li>Albert Einstein: Special relativity. Contradiction:
<ul>
<li>Two light beams and the speed of light limit.</li>
<li>Resolution: Revising Newtonian concepts of constant space and time.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="the-contradiction-path-script" class="level4">
<h4 class="anchored" data-anchor-id="the-contradiction-path-script">The Contradiction Path Script</h4>
<ul>
<li>Encounter an anomaly.</li>
<li>Resist discarding the anomaly.</li>
<li>Accept the anomaly as valid.</li>
<li>Revise existing beliefs to accommodate the anomaly.</li>
<li>Discard previous anchoring beliefs if necessary.</li>
<li>Examples: Abandoning fixed space-time or miasma theory.</li>
<li>Achieve a new frame incorporating the anomaly.</li>
<li>Data: 45 contradiction insights triggered by anomalies/inconsistencies. In 42 cases, the individual explored the anomaly.</li>
</ul>
</section>
<section id="the-investors-and-the-financial-bubble" class="level4">
<h4 class="anchored" data-anchor-id="the-investors-and-the-financial-bubble">The Investors and the Financial Bubble</h4>
<ul>
<li>Investors (Eisman, Paulson, Burry, Lipman, Park) experienced contradiction:
<ul>
<li>Conflicting views on housing market future.</li>
<li>Their data contradicted prevailing optimism.</li>
</ul></li>
<li>Anchored on their anomalous data, despite clashing with Wall Street consensus.</li>
<li>Recognized the contradiction as an opportunity.</li>
</ul>
</section>
<section id="contradiction-vs.-creative-desperation" class="level4">
<h4 class="anchored" data-anchor-id="contradiction-vs.-creative-desperation">Contradiction vs.&nbsp;Creative Desperation</h4>
<ul>
<li>Both focus on outliers, weakly supported beliefs.</li>
<li><strong>Creative desperation</strong>: Attacking and discarding the weak anchor.</li>
<li><strong>Contradiction</strong>: Embracing and building upon the weak anchor.</li>
</ul>
</section>
<section id="two-distinct-insight-paths" class="level4">
<h4 class="anchored" data-anchor-id="two-distinct-insight-paths">Two Distinct Insight Paths</h4>
<ul>
<li><strong>Motivations</strong>: Escaping a bad situation (desperation) vs.&nbsp;rethinking conventional wisdom (contradiction).</li>
<li><strong>Triggers</strong>: Searching for a flawed assumption (desperation) vs.&nbsp;encountering an inconsistency (contradiction).</li>
<li><strong>Activities</strong>: Replacing the flawed assumption (desperation) vs.&nbsp;building on the weak assumption (contradiction).</li>
<li><strong>Similarities</strong>:
<ul>
<li>Disruptive to existing beliefs.</li>
<li>Modification of core beliefs (anchors).</li>
<li>Outcome: Changes in understanding, actions, perspectives, feelings, and desires.</li>
</ul></li>
</ul>
</section>
<section id="triple-path-model-of-insight" class="level4">
<h4 class="anchored" data-anchor-id="triple-path-model-of-insight">Triple-Path Model of Insight</h4>
<ul>
<li>Three paths: <strong>Contradiction</strong>, <strong>Connection</strong>, and <strong>Creative Desperation</strong>.</li>
</ul>
<section id="the-contradiction-path" class="level5">
<h5 class="anchored" data-anchor-id="the-contradiction-path">The Contradiction Path</h5>
<ul>
<li><strong>Trigger</strong>: Contradiction/Inconsistency.</li>
<li><strong>Activity</strong>: Rebuild story using the weak anchor.</li>
</ul>
</section>
<section id="the-connection-path" class="level5">
<h5 class="anchored" data-anchor-id="the-connection-path">The Connection Path</h5>
<ul>
<li><strong>Trigger</strong>: Coincidence, Curiosity, Spotting an implication.</li>
<li><strong>Activity</strong>: Add a new anchor.</li>
</ul>
</section>
<section id="the-creative-desperation-path" class="level5">
<h5 class="anchored" data-anchor-id="the-creative-desperation-path">The Creative Desperation Path</h5>
<ul>
<li><p><strong>Trigger</strong>: Impasse, need to escape.</p></li>
<li><p><strong>Activity</strong>: Discard a weak anchor.</p></li>
<li><p><strong>Outcome (for all paths)</strong>: Changes in understanding, actions, perspectives, feelings, and desires.</p></li>
</ul>
</section>
</section>
<section id="the-connection-path-1" class="level4">
<h4 class="anchored" data-anchor-id="the-connection-path-1">The Connection Path</h4>
<ul>
<li>Differs from desperation and contradiction paths.</li>
<li><strong>Activity</strong>: Adding a new anchor (not attacking or building on existing weak anchors).</li>
<li>New anchor often comes from new information.</li>
<li>Examples:
<ul>
<li>Martin Chalfie: Green fluorescent protein + translucent worms = new research direction.</li>
<li>Charles Darwin: Malthus’s competition theory = new anchor for evolution theory.</li>
<li>Admiral Stark &amp; Yamamoto: Battle of Taranto = new anchor for naval strategy (aircraft carrier attacks).</li>
<li>Alison Gopnik: Son’s “yucky-slash-yummy” comment = new anchor for infant intelligence research.</li>
</ul></li>
<li>Coincidences and curiosities as triggers.
<ul>
<li>Carlos Finlay: Yellow fever and Culex mosquito coincidence.</li>
</ul></li>
<li>Connection path combines connections, coincidences, and curiosities.</li>
<li>Builds a new story without discarding existing anchors.</li>
<li>Different motivation, trigger, and activity, but the outcome is still a shift in understanding.</li>
<li>This shift involves changing core components (anchors).</li>
</ul>
</section>
<section id="blending-paths" class="level4">
<h4 class="anchored" data-anchor-id="blending-paths">Blending Paths</h4>
<ul>
<li>Multiple paths are common in insights.</li>
<li>Example: Yellow fever discovery:
<ul>
<li>Carlos Finlay: Coincidence (mosquitoes and yellow fever).</li>
<li>Walter Reed: Contradiction (miasma theory vs.&nbsp;uneven infection rates).</li>
<li>Walter Reed’s team: Connection (mosquito incubation period).</li>
</ul></li>
<li>Connection path often involved in blends.</li>
</ul>
</section>
<section id="conclusion-3" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-3">Conclusion</h4>
<ul>
<li>Triple-path model: A plausible explanation for insights.</li>
<li>More comprehensive and useful than previous accounts.</li>
<li>Future work may uncover additional paths.</li>
<li>Earlier accounts are not wrong, but incomplete, focusing on single paths:
<ul>
<li>Wallace: Creative desperation.</li>
<li>Associations/combinations: Connection.</li>
<li>Problem reformulation/restructuring: Contradiction.</li>
</ul></li>
<li>Triple-path model clarifies why researchers seem to talk past each other (different paths).</li>
</ul>
</section>
</section>
</section>
<section id="part-ii-shutting-the-gates" class="level2">
<h2 class="anchored" data-anchor-id="part-ii-shutting-the-gates">Part II: Shutting the Gates</h2>
<section id="chapter-9-stupidity" class="level3">
<h3 class="anchored" data-anchor-id="chapter-9-stupidity">Chapter 9: Stupidity</h3>
<section id="introduction-fantasy-baseball-and-an-unexpected-insight" class="level4">
<h4 class="anchored" data-anchor-id="introduction-fantasy-baseball-and-an-unexpected-insight">Introduction: Fantasy Baseball and an Unexpected Insight</h4>
<ul>
<li>Klein recounts an incident during a fantasy baseball pennant race in September 2003.</li>
<li>Fantasy baseball context:
<ul>
<li>Managers select real baseball players for their virtual teams.</li>
<li>Teams score points based on players’ real-game performance (wins, strikeouts, etc.).</li>
<li>Season mirrors the regular baseball season (April to September).</li>
</ul></li>
<li>Klein’s daughter, Devorah, was playing in her first season.</li>
<li>She was concerned about exceeding the league’s 1,250-inning limit for pitchers.</li>
<li>With 1,249 innings pitched, she had one pitcher scheduled for the final day (Sunday).</li>
<li>Question: Would her team get credit for <em>all</em> his strikeouts or only those in the first inning before reaching the limit?</li>
<li>Devorah located the rules online.</li>
<li>The rules stated that <em>all</em> pitcher statistics counted on the day the limit was exceeded, but none thereafter.</li>
<li>Devorah had an <strong>insight</strong>:
<ul>
<li><strong>Understanding</strong>: She didn’t need to worry about exceeding the limit on Sunday.</li>
<li><strong>Action</strong>: She could add as many pitchers as possible who were playing on Sunday <em>before</em> midnight.</li>
</ul></li>
<li>Devorah dropped inactive pitchers and replaced them with free agents scheduled to pitch on Sunday.</li>
<li>Example: Dropping Roger Clemens for Matt Clement.</li>
<li>Devorah’s strategy worked; she gained enough points to finish fifth.</li>
<li>The tactic was novel in their league but known elsewhere.</li>
<li>Klein, despite having the same information, missed the insight.</li>
<li>This raises questions about what causes “stupidity” and blocks insights.</li>
</ul>
</section>
<section id="stupidity-in-action-everyday-examples" class="level4">
<h4 class="anchored" data-anchor-id="stupidity-in-action-everyday-examples">Stupidity in Action: Everyday Examples</h4>
<ul>
<li><strong>Example 1: Misplaced Car Keys</strong>
<ul>
<li>Author put car keys in briefcase before a flight.</li>
<li>Daughter’s ear infection led to a train journey home (New York to Toledo).</li>
<li>Mother-in-law picked them up in Toledo and drove them to the Dayton airport.</li>
<li>Author left briefcase in mother-in-law’s car, forgetting the keys were inside.</li>
<li>Author knew the location of the keys but failed to connect the information in time.</li>
<li>Result: Rented a car, extra expense, inconvenience.</li>
</ul></li>
<li><strong>Example 2: The Staircase Fall</strong>
<ul>
<li>A colleague left mail (including glossy materials) on the bottom stair.</li>
<li>After several hours upstairs, she descended in the dark.</li>
<li>She knew the stairs well but forgot about the mail.</li>
<li>Slipped on the glossy mail and suffered a compound leg fracture, requiring 16 weeks in bed.</li>
</ul></li>
<li><strong>Example 3: Missed Opportunity</strong>
<ul>
<li>Author wanted to show his wife a storage locker.</li>
<li>An errand took them past the facility.</li>
<li>Only later did he realize he should have brought the locker keys.</li>
</ul></li>
<li><strong>Analysis of Stupidity Examples</strong>:
<ul>
<li>These are failures to make obvious connections or spot contradictions.</li>
<li>They are not memory failures, as the information was accessible.</li>
<li>A more active process of “spotlighting” relevant information is missing.</li>
</ul></li>
</ul>
</section>
<section id="stupidity-vs.-insight-a-continuum" class="level4">
<h4 class="anchored" data-anchor-id="stupidity-vs.-insight-a-continuum">Stupidity vs.&nbsp;Insight: A Continuum</h4>
<ul>
<li>Stupidity seems the opposite of insight on the contradiction and connection pathways.</li>
<li>Insight: Spotting subtle inconsistencies and contradictions.</li>
<li>Stupidity: Missing obvious connections and contradictions.</li>
<li>Examples of stupidity highlight the everyday use of insight strategies.
<ul>
<li>We constantly make connections, seek implications, and identify inconsistencies.</li>
</ul></li>
<li>We don’t credit ourselves for noticing the obvious but criticize ourselves for missing them.</li>
<li><strong>Stupidity</strong>: Failing to make obvious connections, missing anomalies and inconsistencies, clinging to wrong assumptions.</li>
<li>Insight and stupidity can be viewed as opposite poles of a continuum, with normal alertness in between.</li>
</ul>
</section>
<section id="the-stupidity-file-false-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-stupidity-file-false-insights">The Stupidity File: False Insights</h4>
<ul>
<li>Klein collected over 20 examples of stupidity alongside the 120 insight cases.</li>
<li><strong>False insights</strong>: Mistakenly believing one has had an insight, with full confidence in the erroneous conclusion.</li>
<li><strong>False insights in financial bubbles</strong>:
<ul>
<li>Investors aren’t just driven by greed; they often have false insights about transformative changes.</li>
<li>Examples:
<ul>
<li>Japanese stock and real estate bubble (late 1980s): Japan’s supposed economic dominance.</li>
<li>U.S. dot-com bubble (late 1990s): The “new paradigm” of information technology.</li>
<li>U.S. housing bubble (early 2000s): Advanced risk management tools.</li>
</ul></li>
</ul></li>
<li>Klein acknowledges the need for further study of stupidity but chooses to focus on obstacles to insight.</li>
</ul>
</section>
<section id="obstacles-to-insight-the-huxley-question" class="level4">
<h4 class="anchored" data-anchor-id="obstacles-to-insight-the-huxley-question">Obstacles to Insight: The Huxley Question</h4>
<ul>
<li>T.H. Huxley’s reaction to Darwin’s theory: “How extremely stupid not to have thought of that.”</li>
<li>This isn’t about stupidity but about missing obvious insights.</li>
<li>The question: What blocks these insights?</li>
<li>Laboratory research using puzzles (water jars, nine dots, pendulum) allows for controlled comparisons of success and failure.</li>
<li>Klein’s diverse examples lacked this control.</li>
<li>Could a “natural experiment” be designed?</li>
</ul>
</section>
</section>
<section id="chapter-10-the-study-of-contrasting-twins" class="level3">
<h3 class="anchored" data-anchor-id="chapter-10-the-study-of-contrasting-twins">Chapter 10: The Study of Contrasting Twins</h3>
<section id="introduction-1" class="level4">
<h4 class="anchored" data-anchor-id="introduction-1">Introduction</h4>
<ul>
<li>Klein investigates why people fail to have insights even with all necessary information.</li>
<li>Analysis of 120 cases, including 30 “<strong>contrasting twins</strong>”: pairs of individuals with the same information where one gains insight and the other does not.</li>
<li>Selection criteria: the twin <em>without</em> insight must be a specific, identifiable person in the story (not an anonymous bystander).</li>
<li>Examples of contrasting twins:
<ul>
<li>Wagner Dodge (escape fire insight) vs.&nbsp;Robert Sally and Walter Rumsey.</li>
<li>Napoleon (Toulon strategy) vs.&nbsp;General Jean-Francois Carteaux.</li>
<li>John Snow (cholera/water) vs.&nbsp;Edwin Chadwick and William Farr (miasma theory).</li>
<li>David Charlton (heat transfer) vs.&nbsp;his materials engineering team.</li>
<li>Devorah (fantasy baseball) vs.&nbsp;Klein.</li>
</ul></li>
</ul>
</section>
<section id="four-reasons-for-missed-insights" class="level4">
<h4 class="anchored" data-anchor-id="four-reasons-for-missed-insights">Four Reasons for Missed Insights</h4>
<ul>
<li><strong>Flawed Beliefs</strong>: Fixation on erroneous ideas.</li>
<li><strong>Lack of Experience</strong>: Insufficient experience to recognize implications.</li>
<li><strong>Passive Stance</strong>: Lack of active scanning for opportunities and new developments.</li>
<li><strong>Concrete Reasoning Style</strong>: Difficulty tolerating contradictions and ambiguity, hindering playful exploration of ideas.</li>
</ul>
</section>
<section id="flawed-beliefs" class="level4">
<h4 class="anchored" data-anchor-id="flawed-beliefs">Flawed Beliefs</h4>
<ul>
<li>Most common reason (21/30 cases): failure twins fixated on incorrect ideas.</li>
<li>Example: Medical establishment’s acceptance of miasma theory for cholera, rejecting John Snow’s contaminated water theory.</li>
<li>Successful twins: “speculate and test.”</li>
<li>Failure twins: cling to flawed beliefs.</li>
</ul>
<section id="cuban-missile-crisis-example" class="level5">
<h5 class="anchored" data-anchor-id="cuban-missile-crisis-example">Cuban Missile Crisis Example</h5>
<ul>
<li><strong>John McCone (CIA head)</strong>: Insightful twin.
<ul>
<li>Warned of potential Soviet ballistic missiles in Cuba.</li>
<li>Suspicious of Soviet activity after Bay of Pigs incident.</li>
<li>U-2 photos showed Soviet SAMs (surface-to-air missiles).</li>
<li>McCone’s reasoning: SAMs suggest something valuable to hide (ballistic missiles).</li>
<li>Intensified surveillance, even during honeymoon.</li>
<li>Proven correct by history.</li>
</ul></li>
<li><strong>Sherman Kent (chief CIA analyst)</strong>: Failure twin.
<ul>
<li>Believed Soviet Union wouldn’t provoke nuclear conflict due to U.S. military superiority.</li>
<li>Disagreed with McCone.</li>
<li>Later justified himself by claiming Khrushchev was irrational.</li>
</ul></li>
<li>Author’s assessment: Kent was gripped by a flawed theory, while McCone was more skeptical and data-driven.</li>
</ul>
</section>
<section id="yom-kippur-war-example" class="level5">
<h5 class="anchored" data-anchor-id="yom-kippur-war-example">Yom Kippur War Example</h5>
<ul>
<li><strong>Major General Eli Zeira (Israeli Director of Military Intelligence)</strong>: Failure twin.
<ul>
<li>Fixated on the belief that Egypt wouldn’t attack without air superiority.</li>
<li>Dismissed evidence of Egyptian military buildup as a training exercise.</li>
<li>Ignored warnings from subordinates, reserve generals, King Hussein of Jordan, and an Israeli spy within Egyptian ranks.</li>
<li>Stilled warnings to Israeli leaders even two hours before the attack.</li>
</ul></li>
<li><strong>Junior Israeli intelligence analysts</strong>: Insightful twins.
<ul>
<li>Recognized the threat posed by the Egyptian buildup and lack of actual training activities.</li>
<li>Not fixated on predicting Sadat’s motivations; focused on objective data.</li>
</ul></li>
</ul>
</section>
<section id="flawed-data" class="level5">
<h5 class="anchored" data-anchor-id="flawed-data">Flawed Data</h5>
<ul>
<li>Clinging to flawed <em>data</em> can also hinder insight.</li>
<li>Example: David Charlton’s skepticism of data saved Corning’s composite project, while engineers trusting the flawed data raised a false alarm.</li>
<li>Other examples:
<ul>
<li>Walter Reed initially told to ignore the (correct) mosquito theory.</li>
<li>Barry Marshall’s initial data showed no link between gastritis and <em>Helicobacter pylori</em> due to premature sample discarding.</li>
</ul></li>
</ul>
</section>
<section id="the-importance-of-core-beliefs" class="level5">
<h5 class="anchored" data-anchor-id="the-importance-of-core-beliefs">The Importance of Core Beliefs</h5>
<ul>
<li>Core beliefs anchor understanding and are resistant to change.</li>
<li>Anomalies are explained away rather than used to revise beliefs.</li>
<li>Scientists explain away anomalies by:
<ul>
<li>Questioning data collection methods.</li>
<li>Deeming data irrelevant.</li>
<li>Identifying other possible causes.</li>
<li>Making cosmetic changes to their theory.</li>
</ul></li>
<li>Physicians also exhibit “<strong>knowledge shields</strong>” to protect initial (sometimes incorrect) diagnoses (Paul Feltovich).</li>
</ul>
</section>
</section>
<section id="lack-of-experience" class="level4">
<h4 class="anchored" data-anchor-id="lack-of-experience">Lack of Experience</h4>
<ul>
<li>Second reason for missed insights.</li>
<li>Examples:
<ul>
<li>Napoleon’s artillery experience allowed him to see opportunities others missed.</li>
<li>John Snow’s medical experience provided insight into cholera’s effects on the digestive system, contrasting with Chadwick and Farr’s lack of medical expertise.</li>
</ul></li>
<li>Experience: not just knowledge, but how it tunes attention and sensitizes to cues.</li>
<li><strong>Generally prepared mind</strong>: Individuals prepared by their interests and efforts to notice what others miss (e.g., Martin Chalfie and the green fluorescent protein).</li>
<li>John McCone’s prior concern about Soviet buildup in Cuba gave him a skeptical mindset.</li>
<li>Junior Israeli analysts’ “tilt reflexes” triggered by the Egyptian buildup.</li>
<li>Flawed beliefs can override experience (e.g., Sherman Kent and Eli Zeira had extensive experience but were hindered by flawed beliefs).</li>
</ul>
</section>
<section id="a-passive-stance" class="level4">
<h4 class="anchored" data-anchor-id="a-passive-stance">A Passive Stance</h4>
<ul>
<li>Third reason for missed insights.</li>
<li>Failure twins often passive, not actively seeking new information or questioning assumptions.</li>
<li>Active stance present in 21/30 insightful twins.</li>
<li>Example: Devorah’s active thinking about the fantasy baseball problem vs.&nbsp;Klein’s passive approach.</li>
</ul>
<section id="gingers-non-compete-agreement" class="level5">
<h5 class="anchored" data-anchor-id="gingers-non-compete-agreement">Ginger’s Non-Compete Agreement</h5>
<ul>
<li><strong>Ginger</strong>: Insightful twin.
<ul>
<li>Frustrated by a non-compete agreement preventing her from working with former clients, even though she didn’t know who they all were.</li>
<li>Realized the impossibility of complying without a client list, which her previous employer wouldn’t provide.</li>
<li>Used the agreement’s internal inconsistency to her advantage.</li>
<li>Obtained release from the non-compete clause by requesting the impossible client list.</li>
</ul></li>
<li><strong>Legal officer at Ginger’s new company</strong>: Failure twin.
<ul>
<li>Only interpreted the agreement, didn’t consider its practical implications.</li>
</ul></li>
</ul>
</section>
</section>
<section id="a-concrete-reasoning-style" class="level4">
<h4 class="anchored" data-anchor-id="a-concrete-reasoning-style">A Concrete Reasoning Style</h4>
<ul>
<li>Fourth reason for missed insights.</li>
<li><strong>Concrete thinkers</strong>: Focus on facts, dislike speculation and ambiguity.</li>
<li><strong>Playful thinkers</strong>: Enjoy exploring hypothetical scenarios and juggling ideas.</li>
<li>Example: Meredith Whitney’s speculation about Bear Stearns’ financial situation.</li>
<li>Playful/concrete reasoning style is a personality trait, while active/passive stance can vary situationally.</li>
<li>14/30 failure twins exhibited concrete thinking.</li>
<li>Examples: General Carteaux, Chadwick, and Farr.</li>
</ul>
</section>
<section id="the-limits-of-positive-behaviors" class="level4">
<h4 class="anchored" data-anchor-id="the-limits-of-positive-behaviors">The Limits of Positive Behaviors</h4>
<ul>
<li>Eliminating flawed beliefs, gaining experience, adopting an active stance, and engaging in playful reasoning do <em>not guarantee</em> insight.</li>
<li>Many instances of failure despite these positive behaviors.</li>
</ul>
</section>
<section id="intelligence-as-a-factor" class="level4">
<h4 class="anchored" data-anchor-id="intelligence-as-a-factor">Intelligence as a Factor</h4>
<ul>
<li>Not a significant factor in the contrasting twins study.</li>
<li>Most cases required a baseline level of intelligence for involvement.</li>
</ul>
</section>
<section id="the-double-helix-triumphs-and-failures" class="level4">
<h4 class="anchored" data-anchor-id="the-double-helix-triumphs-and-failures">The Double Helix: Triumphs and Failures</h4>
<ul>
<li>Most contrasting twins (24/30) differed on multiple factors.</li>
<li><strong>James Watson</strong> and <strong>Francis Crick</strong>: Discovery of DNA’s double helix structure.</li>
<li>Multiple contrasting twins within this story.</li>
<li>Watson and Crick’s advantages:
<ul>
<li>Shared belief that DNA carried genetic information.</li>
<li>Hunch about DNA’s repeating structure (Watson from a lecture).</li>
<li>Speculation that DNA was a double or triple helix, inspired by Linus Pauling’s work on protein structure.</li>
<li>Model-building approach.</li>
<li>Watson’s observation of identical shapes of adenine-thymine and guanine-cytosine pairs.</li>
</ul></li>
<li>Watson’s eight simultaneous insights:
<ul>
<li>DNA structure (helix).</li>
<li>Number of strands (two - double helix).</li>
<li>Information carrier (nucleic acids).</li>
<li>Attractive force (hydrogen bonds).</li>
<li>Arrangement (sugar-phosphate backbone outside, nucleic acids inside).</li>
<li>Base pairings.</li>
<li>Opposite chain directions (mirror images).</li>
<li>Replication mechanism (zipper-like).</li>
</ul></li>
</ul>
<section id="the-scientific-community-vs.-watson-and-crick" class="level5">
<h5 class="anchored" data-anchor-id="the-scientific-community-vs.-watson-and-crick">The Scientific Community vs.&nbsp;Watson and Crick</h5>
<ul>
<li><strong>Scientific Community</strong>:
<ul>
<li>Flawed belief: genetic information carried by proteins, not DNA.</li>
<li>Dismissed Oswald Avery’s 1944 study showing bacterial DNA carrying genes.</li>
<li>Inexperience: leading geneticists lacked biochemistry knowledge, organic chemists studying DNA weren’t interested in genetics.</li>
</ul></li>
<li><strong>Watson and Crick</strong>:
<ul>
<li>Not burdened by the flawed protein belief.</li>
<li>Right blend of experience: Crick (physics, X-ray diffraction, proteins, gene function), Watson (biology, phages, bacterial genetics).</li>
<li>Benefited from Alfred Hershey’s 1952 discovery that only phage DNA enters the host cell, contradicting the protein belief.</li>
</ul></li>
</ul>
</section>
<section id="chargaff-vs.-watson-and-crick" class="level5">
<h5 class="anchored" data-anchor-id="chargaff-vs.-watson-and-crick">Chargaff vs.&nbsp;Watson and Crick</h5>
<ul>
<li><strong>Erwin Chargaff</strong>:
<ul>
<li>Discovered equal proportions of adenine/thymine and guanine/cytosine in DNA.</li>
<li>Didn’t see the implications of his findings.</li>
<li>Passive attitude: content with his research, lacked Watson and Crick’s active inquiry.</li>
</ul></li>
<li><strong>Watson and Crick</strong>:
<ul>
<li>Crick immediately saw the implication of complementary pairing upon hearing Chargaff’s results.</li>
<li>Active mindset, especially Crick’s focus on DNA function and replication.</li>
</ul></li>
</ul>
</section>
<section id="franklin-vs.-watson-and-crick" class="level5">
<h5 class="anchored" data-anchor-id="franklin-vs.-watson-and-crick">Franklin vs.&nbsp;Watson and Crick</h5>
<ul>
<li><strong>Rosalind Franklin</strong>:
<ul>
<li>Flawed belief: DNA not a helix (due to flawed data from earlier research).</li>
<li>Fixated on disproving the helix idea.</li>
<li>Overlooked evidence of helical structure in her own Photo 51 for ten months, while Watson immediately recognized it.</li>
<li>Lacked model-building experience, hindering understanding of distances and angles.</li>
<li>Passive stance: disliked speculation, preferred data gathering.</li>
<li>Concrete reasoning style.</li>
</ul></li>
<li><strong>Watson and Crick</strong>:
<ul>
<li>Open to the helix idea.</li>
<li>Model-building approach.</li>
<li>Active and playful reasoning styles.</li>
</ul></li>
</ul>
</section>
<section id="watson-vs.-crick" class="level5">
<h5 class="anchored" data-anchor-id="watson-vs.-crick">Watson vs.&nbsp;Crick</h5>
<ul>
<li><strong>Watson</strong>:
<ul>
<li>Initially didn’t grasp the significance of Chargaff’s findings or Crick’s insight about complementary pairing.</li>
<li>Fixated on like-with-like pairing.</li>
<li>Passive thinking on this specific issue.</li>
<li>Focused on DNA structure rather than function.</li>
</ul></li>
<li><strong>Crick</strong>:
<ul>
<li>Immediately saw the implication of complementary pairing.</li>
<li>Active and functional perspective.</li>
</ul></li>
</ul>
</section>
<section id="luck-and-the-double-helix" class="level5">
<h5 class="anchored" data-anchor-id="luck-and-the-double-helix">Luck and the Double Helix</h5>
<ul>
<li>Luck played a role in the discovery:
<ul>
<li>DNA bases are flat, enabling Watson’s 2D modeling and discovery of complementary pairing.</li>
<li>Franklin’s reliance on flawed data about dry and wet DNA forms.</li>
<li>Watson and Crick’s serendipitous encounter with a colleague who corrected their understanding of hydrogen bonds, confirming complementary pairing.</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-4" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-4">Conclusion</h4>
<ul>
<li>Four factors hinder insights: flawed beliefs, limited experience, passive stance, concrete reasoning style.</li>
<li>Playful/concrete reasoning is a personality trait.</li>
<li>Additional barriers can be inadvertently created (e.g., computer systems).</li>
</ul>
</section>
</section>
<section id="chapter-11-dumb-by-design" class="level3">
<h3 class="anchored" data-anchor-id="chapter-11-dumb-by-design">Chapter 11: Dumb by Design</h3>
<p>This chapter explores how common design guidelines for computer-based decision support systems can hinder insight. Klein uses the example of Daniel Boone rescuing his daughter to illustrate this point.</p>
<section id="introduction-design-guidelines-for-computer-systems" class="level4">
<h4 class="anchored" data-anchor-id="introduction-design-guidelines-for-computer-systems">Introduction: Design Guidelines for Computer Systems</h4>
<ul>
<li>Information technology professionals have developed guidelines to make computers more helpful.</li>
<li>These guidelines apply to decision support and information management systems.</li>
<li>Four common guidelines are presented:
<ol type="1">
<li>The system should help people do their jobs better.</li>
<li>The system should clearly display critical cues.</li>
<li>The system should filter out irrelevant data.</li>
<li>The system should help people monitor progress toward their goals.</li>
</ol></li>
<li>The chapter questions the effect of these guidelines on insights.</li>
</ul>
</section>
<section id="the-daniel-boone-example-rescuing-jemima" class="level4">
<h4 class="anchored" data-anchor-id="the-daniel-boone-example-rescuing-jemima">The Daniel Boone Example: Rescuing Jemima</h4>
<ul>
<li>Daniel Boone, primarily a hunter, needed to rescue his daughter Jemima and her two friends after they were kidnapped by a raiding party.</li>
</ul>
</section>
<section id="the-kidnapping" class="level4">
<h4 class="anchored" data-anchor-id="the-kidnapping">The Kidnapping</h4>
<ul>
<li>Setting: Kentucky, 1776. Boonesboro, a settlement on the Kentucky River.</li>
<li>The raiding party: Two Cherokees and three Shawnees.</li>
<li>The victims: Jemima Boone (13), Betsy Calloway (16), and Fanny Calloway (14).</li>
<li>The event: The girls took a canoe out on the river. The raiding party seized the opportunity and abducted them.</li>
<li>The alarm: The girls’ screams alerted the settlers.</li>
</ul>
</section>
<section id="the-pursuit-and-boones-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-pursuit-and-boones-insights">The Pursuit and Boone’s Insights</h4>
<ul>
<li><strong>Insight Number One: Redirecting the Horsemen</strong>
<ul>
<li>Boone formed a rescue party.</li>
<li>Richard Calloway, the father of two of the girls, led a group of horsemen.</li>
<li>Boone initially searched upstream and downstream.</li>
<li>Boone realized searching was inefficient. He anticipated the Shawnees would head north to their villages in Ohio, likely crossing the Licking River at the Upper Blue Licks.</li>
<li>Boone redirected the horsemen to ambush the raiding party at the Upper Blue Licks.</li>
<li>This insight utilized the “creative desperation path” of the triple path model. It abandoned the assumption that searching was necessary and replaced it with the strategy of ambush.</li>
<li>Calloway’s story, actions, attention, feelings, and goal were all transformed by this insight.</li>
</ul></li>
<li><strong>Insight Number Two: Abandoning the Chase</strong>
<ul>
<li>The upstream search party located the kidnappers’ trail.</li>
<li>Boone joined the pursuit, aided by the girls leaving trail markers.</li>
<li>Boone realized they were falling behind.</li>
<li>He anticipated the raiding party’s continued northward movement toward the Upper Blue Licks.</li>
<li>He decided to abandon the chase and lead his party directly to the Upper Blue Licks.</li>
<li>This insight was another example of creative desperation. It involved discarding the assumption of catching the kidnappers through tracking and adopting the strategy of intersection.</li>
<li>This insight shifted Boone’s story, actions, attention, feelings, and goal.</li>
</ul></li>
<li><strong>Insight Number Three: Cooking the Meal</strong>
<ul>
<li>Boone’s party spotted signs of the kidnappers: muddied water, a dead snake, and a freshly butchered buffalo calf.</li>
<li>Boone anticipated the kidnappers would cook the buffalo at the next water source.</li>
<li>Upon reaching Bald Eagle Creek, Boone divided his party to search upstream and downstream.</li>
<li>The upstream group located the raiding party making camp and cooking.</li>
<li>This insight used the buffalo carcass as a cue to predict the kidnappers’ next actions. It led to a change in Boone’s understanding, actions, attention, emotions, and goal.</li>
</ul></li>
</ul>
</section>
<section id="the-rescue" class="level4">
<h4 class="anchored" data-anchor-id="the-rescue">The Rescue</h4>
<ul>
<li>Boone’s party surrounded the kidnappers’ camp and launched a surprise attack.</li>
<li>The girls were rescued, unharmed except for minor injuries.</li>
</ul>
</section>
<section id="applying-design-guidelines-to-boones-situation" class="level4">
<h4 class="anchored" data-anchor-id="applying-design-guidelines-to-boones-situation">Applying Design Guidelines to Boone’s Situation</h4>
<ul>
<li><p>Klein analyzes how the four design guidelines would have affected Boone’s ability to generate insights.</p></li>
<li><p><strong>Guideline 1: The system should help people do their jobs better.</strong></p>
<ul>
<li>This would have focused on Calloway’s job of catching the Indians and Boone’s job of tracking them.</li>
<li>The system would become useless when they shifted tactics.</li>
<li>It would have been detrimental, requesting irrelevant information.</li>
<li>Boone would have discarded the system.</li>
<li>This guideline assumes stable job roles, not applicable in situations requiring insights and changing tactics.</li>
</ul></li>
<li><p><strong>Guideline 2: The system should clearly display critical cues.</strong></p>
<ul>
<li>Predefined critical cues would likely miss those becoming relevant after an insight.</li>
<li>The cues for searching were irrelevant to the ambush.</li>
<li>Boone’s tracking cues became irrelevant after he abandoned the chase.</li>
<li>Database structures designed for initial tasks become obsolete after insights change the nature of the work.</li>
</ul></li>
<li><p><strong>Guideline 3: The system should filter out irrelevant data.</strong></p>
<ul>
<li>This is considered harmful.</li>
<li>The system would have filtered out navigational information needed for the ambush.</li>
<li>The buffalo carcass cue might have been downplayed.</li>
<li>Filtering data presupposes knowing what’s relevant, hindering the “happy accidents” that spark insights.</li>
<li>Examples of how filtering would have hampered historical insights:
<ul>
<li>Battle of Taranto: Air attacks from aircraft carriers wouldn’t have been considered relevant.</li>
<li>Discovery of Pulsars: Unusual squiggles would have been filtered out.</li>
<li>Battle of Toulon: Small forts like L’Aiguillette and Balaguerre would have been deemed irrelevant.</li>
</ul></li>
<li>Filtering leads to “filter bubbles,” limiting exposure to diverse perspectives.</li>
<li>Example of filter bubbles: Eli Pariser’s experience with Facebook filtering his conservative friends.</li>
<li>Search engines like Google personalize results, potentially creating echo chambers.</li>
</ul></li>
<li><p><strong>Guideline 4: The system should help people monitor progress toward their goals.</strong></p>
<ul>
<li>Progress monitoring becomes problematic when insights lead to restructured tasks or revised goals.</li>
<li>The system would have criticized the riders’ inefficient search, Boone’s abandonment of the trail, and his pause at Bald Eagle Creek.</li>
<li>This feature discourages insights that lead to changing goals.</li>
<li>Examples of how progress monitoring would have hindered historical insights:
<ul>
<li>Jocelyn Bell Burnell: Wasting time on squiggles instead of quasars.</li>
<li>Walter Reed: Chasing mosquitoes instead of improving sanitation.</li>
<li>Wagner Dodge: Stopping to light an escape fire.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="stronger-design-equals-weaker-insights" class="level4">
<h4 class="anchored" data-anchor-id="stronger-design-equals-weaker-insights">Stronger Design Equals Weaker Insights</h4>
<ul>
<li>The four design principles rely on order and structure, while insights are disorderly.</li>
<li>To foster insight, systems should:
<ul>
<li>Focus less on past practices.</li>
<li>Give decision-makers room to discover and modify tasks.</li>
<li>Facilitate easy shifts in goals and plans.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-5" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-5">Conclusion</h4>
<ul>
<li>Klein acknowledges the usefulness of the four guidelines but emphasizes their potential to stifle insight.</li>
<li>Organizations often claim to value innovation but their practices often hinder it.</li>
<li>Klein is pessimistic about designing systems that foster insight because the traditional guidelines are too compelling and organizations might resist more flexible approaches.</li>
</ul>
</section>
</section>
<section id="chapter-12-how-organizations-obstruct-insights" class="level3">
<h3 class="anchored" data-anchor-id="chapter-12-how-organizations-obstruct-insights">Chapter 12: How Organizations Obstruct Insights</h3>
<p>This chapter explores how organizations inadvertently suppress employee insights due to ingrained and invisible practices. It examines the motivations and methods behind this suppression.</p>
<section id="the-motivations" class="level4">
<h4 class="anchored" data-anchor-id="the-motivations">The Motivations</h4>
<p>Organizations stifle insights due to core values embedded in their operational structure:</p>
<ul>
<li><strong>Predictability</strong>: Organizations prioritize predictable workflows, resource allocation, and schedules.</li>
<li><strong>Aversion to Surprises</strong>: Surprises disrupt plans and smooth operations, which organizations strive to avoid.</li>
<li><strong>Craving for Perfection</strong>: Defined as the absence of errors, perfection is highly valued. Errors are seen as disruptive to plans and operations.</li>
<li><strong>Predictability Trap</strong>: The overemphasis on predictability hinders insights, which are inherently disruptive and unpredictable.</li>
<li><strong>Perfection Trap</strong>: The relentless pursuit of perfection, or the absence of errors, overshadows the potential benefits of insights that could lead to improvements beyond the initial objectives.</li>
</ul>
</section>
<section id="the-predictability-trap" class="level4">
<h4 class="anchored" data-anchor-id="the-predictability-trap">The Predictability Trap</h4>
<p>This section uses a project management scenario to illustrate the predictability trap.</p>
<ul>
<li><strong>Project Setup</strong>: A manager, despite valuing innovation and creativity, creates a detailed project plan with timelines, resources, and assigned responsibilities to ensure on-time and within-budget completion. This plan is necessary for approval and tracking.</li>
<li><strong>Resistance to Change</strong>: The manager receives suggestions from team members:
<ul>
<li><strong>Suggestion 1</strong>: Reassigning team members based on skill needs. The manager dismisses this due to potential disruptions and management overhead.</li>
<li><strong>Suggestion 2</strong>: Modifying the project plan to combine tasks and improve customer value. This is rejected by the director due to contractual obligations and potential payment delays.</li>
</ul></li>
<li><strong>Consequences</strong>: The manager, initially supportive of insights, becomes wary of them due to the negative reactions from superiors. Predictability becomes prioritized over potential gains from disruptive insights.</li>
<li><strong>Insight as Disruption</strong>: Insights, being unpredictable and disruptive, clash with the desire for smooth progress reviews and adherence to established goals and tasks. They introduce unforeseen risks and complications.</li>
<li><strong>Managerial Burden</strong>: Managers, already burdened with project oversight, lack the capacity to fully explore the implications of team members’ insights.</li>
<li><strong>Aversion to Creativity</strong>: A 2012 study by Mueller, Melwani, and Goncalo (using an implicit association test) found that people associate novel ideas with impracticality, unreliability, and errors. Novelty is linked to uncertainty, and the desire to reduce uncertainty leads to lower evaluations of creative ideas. This aversion to uncertainty explains managerial skepticism towards novel ideas.</li>
<li><strong>Historical Examples</strong>: The initial resistance to innovations like the telephone, Google search, VisiCalc, the Xerox 914 copier, and Xerox’s rejection of personal computers demonstrate a historical pattern of corporate suspicion towards disruptive technologies.</li>
<li><strong>Managerial Focus</strong>: Managers prioritize defining tasks, setting schedules, and establishing completion criteria, thereby minimizing reliance on unscheduled and unpredictable insights.</li>
</ul>
</section>
<section id="the-perfection-trap" class="level4">
<h4 class="anchored" data-anchor-id="the-perfection-trap">The Perfection Trap</h4>
<p>This section defines and explores the concept of the perfection trap.</p>
<ul>
<li><strong>Perfection as Absence of Errors</strong>: Organizations prioritize reducing errors due to their measurability and manageability. This pursuit of perfection aligns with the desire for predictability.</li>
<li><strong>Context-Dependent Value</strong>: While perfection is valuable in well-ordered situations with clear goals and stable conditions, it becomes detrimental in complex and chaotic environments with evolving standards.</li>
<li><strong>Example: Olympics Gymnastics Scoring</strong>: The focus on error detection in gymnastics judging, exemplified by the 2012 London Olympics, illustrates how performance evaluation can prioritize minimizing mistakes over artistry and other less quantifiable qualities.</li>
<li><strong>Reasons for Disliking Errors</strong>: Organizations dislike errors due to safety risks, coordination disruptions, waste, reduced project success rates, cultural erosion, lawsuits, and negative publicity.</li>
<li><strong>Managerial Focus on Error Correction</strong>: Managers dedicate significant time to identifying and rectifying errors, prioritizing error reduction over fostering insights. Spotting and correcting errors is perceived as easier than encouraging insights.</li>
<li><strong>Perfection vs.&nbsp;Improvement</strong>: While achieving perfection in executing the initial plan might lead to promotions, insights can offer improvements beyond the original design. However, the perceived risks of deviating from the plan often outweigh the potential benefits of exceeding initial objectives.</li>
<li><strong>Beyond Perfection</strong>: In complex situations with “wicked problems” lacking clear solutions, the concept of perfection becomes irrelevant. The goal shifts towards discovering better solutions through insights, rather than adhering to an initial, potentially flawed vision.</li>
<li><strong>Performance Equation</strong>: Performance improvement is achieved by reducing errors and uncertainty (down arrow) and increasing insights (up arrow). However, these two objectives often conflict, leading organizations to overemphasize error reduction and fall into the predictability and perfection traps.</li>
</ul>
</section>
<section id="the-methods" class="level4">
<h4 class="anchored" data-anchor-id="the-methods">The Methods</h4>
<p>This section describes how organizations obstruct insights through management controls and organizational structure.</p>
</section>
<section id="enforcing-the-down-arrow" class="level4">
<h4 class="anchored" data-anchor-id="enforcing-the-down-arrow">Enforcing the Down Arrow</h4>
<ul>
<li><strong>CIA Post-Iraq War</strong>: After the flawed intelligence leading to the 2003 Iraq invasion, the CIA intensified its focus on error reduction through stricter documentation, source verification, assumption identification, and uncertainty estimation. “Tradecraft” became synonymous with these precautions. An experienced analyst revealed that all his successes involved violating tradecraft. There is no parallel effort to encourage insights.</li>
<li><strong>BBC Post-Iraq War</strong>: Following criticism for broadcasting inaccurate information about Iraq, the BBC implemented stringent procedures, including extensive editorial guidelines and pre-broadcast reviews. This resulted in over-reliance on procedures and a lack of experienced judgment when needed. Two subsequent incidents highlight the flaws:
<ul>
<li><strong>Error of Omission</strong>: Failure to report child molestation allegations against Jimmy Savile due to procedural obstacles.</li>
<li><strong>Error of Commission</strong>: Falsely accusing a Thatcher government member of pedophilia due to inadequate fact-checking. Experienced staff were unavailable, and remaining staff prioritized procedural adherence over critical thinking.</li>
</ul></li>
<li><strong>Legal Profession</strong>: Lawyers focus on risk avoidance and identifying potential problems, prioritizing error avoidance over achieving client goals.</li>
</ul>
<section id="methods-for-reducing-errors-and-uncertainty" class="level5">
<h5 class="anchored" data-anchor-id="methods-for-reducing-errors-and-uncertainty">Methods for Reducing Errors and Uncertainty:</h5>
<ul>
<li>Tighter standards</li>
<li>Increased controls</li>
<li>Documenting all sources</li>
<li>Identifying assumptions</li>
<li>Estimating uncertainty values for assumptions</li>
<li>Increased reviews</li>
<li>More rigorous justification of conclusions</li>
<li>Reliance on checklists and procedures</li>
<li>Increased schedule precision</li>
</ul>
</section>
<section id="how-down-arrow-methods-interfere-with-insights" class="level5">
<h5 class="anchored" data-anchor-id="how-down-arrow-methods-interfere-with-insights">How Down-Arrow Methods Interfere with Insights:</h5>
<ul>
<li><p><strong>Distraction</strong>: Error-avoidance tasks consume time and mental energy, leaving less for thoughtful speculation and exploration of new ideas.</p></li>
<li><p><strong>Reluctance to Speculate</strong>: The pressure to avoid errors discourages unvalidated intuitions and insights.</p></li>
<li><p><strong>Negative View of Insights</strong>: Disruptive insights are perceived as threats to established schedules and decisions. Organizations prioritize closure and discourage revisiting settled matters.</p></li>
<li><p><strong>Repression of Anomalies</strong>: Anomalies, being disruptive, are often ignored or dismissed.</p></li>
<li><p><strong>Passivity</strong>: Checklists and procedures encourage mindless adherence to steps, discouraging active thinking and inquiry.</p></li>
<li><p><strong>Benefits and Drawbacks of Checklists</strong>: While checklists are crucial for safety and efficiency in fields like aviation, nuclear power, and healthcare, their reliance on mindlessness can stifle insight generation. Checklists are effective in well-ordered situations but can be detrimental in complex, ambiguous environments.</p></li>
<li><p><strong>Balancing Arrows</strong>: Management controls are necessary, but excessive controls hinder insights due to the costs associated with change. Performance relies on balancing error reduction and insight generation.</p></li>
</ul>
</section>
</section>
<section id="organizational-repression" class="level4">
<h4 class="anchored" data-anchor-id="organizational-repression">Organizational Repression</h4>
<ul>
<li><strong>Hierarchical Filtering</strong>: Organizational hierarchies filter insights as each level must approve for ideas to reach decision-makers. This can lead to suppression of insights from junior levels.</li>
<li><strong>CIA Coup Example</strong>: A junior analyst’s accurate prediction of a coup was suppressed by a supervisor who didn’t want to be wrong, leading to the White House being caught off guard.</li>
<li><strong>FBI Phoenix Memo</strong>: FBI Special Agent Kenneth Williams’s warning about suspicious flight lessons was ignored due to its unusual nature, highlighting the organizational tendency to dismiss anomalies.</li>
<li><strong>CIA Berlin Wall Example</strong>: A CIA analyst’s insight about the weakening impediments to German reunification was diluted through peer review, resulting in the agency being caught unaware of the impending fall of the Berlin Wall.</li>
<li><strong>Japanese Midway War Game</strong>: The Japanese Navy’s dismissal of a war game scenario mirroring the actual American ambush at Midway illustrates organizational repression of dissenting views and overconfidence.</li>
<li><strong>Self-Censorship</strong>: Insight suppression occurs at all levels, including self-censorship by junior analysts who fear negative consequences for expressing unpopular views.</li>
<li><strong>Snowden Research Project</strong>: A study using garden path scenarios revealed that individual team members often noticed weak signals indicating a different story than the apparent one, but these insights were rarely voiced or were ignored by team leaders.</li>
<li><strong>Intelligence Agency Presentation</strong>: Junior analysts confirmed insight suppression and self-censorship due to fear of jeopardizing their careers. Senior analysts expressed surprise, highlighting a disconnect between official policy and organizational reality.</li>
<li><strong>Black Swans</strong>: While organizations seek to predict “black swan” events, their inherent unpredictability makes this impossible. Organizations could benefit from heeding early warnings from internal alarmists, but their tendency to discount anomalies hinders this.</li>
<li><strong>Errors of Omission</strong>: The fear of making errors of commission (false claims) can lead to errors of omission (missing crucial warnings).</li>
<li><strong>Risk Aversion</strong>: Organizations stifle disruptive insights due to risk aversion, prioritizing the avoidance of errors over the potential gains from unexpected discoveries.</li>
<li><strong>Inherent Organizational Nature</strong>: The need for predictability and perfection is inherent in organizational structure, making it difficult to address even when recognized as a problem.</li>
<li><strong>Password Metaphor</strong>: A senior intelligence official compared excessive reviews to overly long passwords, where the marginal gain in security is outweighed by the increased workload.</li>
<li><strong>Scientific Community</strong>: Even scientists, who should prioritize insights, often fall into the trap of overemphasizing error avoidance. The pursuit of absolute truth can lead to vacuous statements, hindering scientific progress. A more effective strategy would be to make the most extreme defensible statements, pushing the boundaries of knowledge and accepting the risk of some errors.</li>
<li><strong>Thomas Kuhn</strong>: Kuhn’s concept of “normal science” describes how scientists often suppress novelties that challenge established paradigms, highlighting the prevalence of error aversion even in scientific research.</li>
<li><strong>Examples of Scientific Suppression</strong>: The resistance faced by Carlos Finlay (mosquitoes and yellow fever), John Snow (contaminated water and cholera), and Barry Marshall (H. pylori and ulcers) demonstrates the scientific community’s susceptibility to the down arrow.</li>
<li><strong>Puzzle-Solving Focus</strong>: Kuhn’s description of normal science as puzzle-solving parallels the focus of insight researchers on puzzle problems, which, as explored in the next chapter, has contributed to limiting the understanding of insights.</li>
</ul>
</section>
</section>
<section id="chapter-13-how-not-to-hunt-for-insights" class="level3">
<h3 class="anchored" data-anchor-id="chapter-13-how-not-to-hunt-for-insights">Chapter 13: How Not to Hunt for Insights</h3>
<section id="introduction-a-thought-experiment-on-ineffective-insight-research" class="level4">
<h4 class="anchored" data-anchor-id="introduction-a-thought-experiment-on-ineffective-insight-research">Introduction: A Thought Experiment on Ineffective Insight Research</h4>
<ul>
<li>Klein reflects on their research process for collecting 120 insight stories, which led to the development of the triple-path model.</li>
<li>A thought experiment is proposed: if the goal was to <em>fail</em> at understanding insights, what flawed methods would be employed?</li>
</ul>
</section>
<section id="counterproductive-strategies-for-insight-research" class="level4">
<h4 class="anchored" data-anchor-id="counterproductive-strategies-for-insight-research">Counterproductive Strategies for Insight Research</h4>
<ul>
<li><strong>Timing and Structure:</strong>
<ul>
<li><strong>Scheduled Sessions:</strong> Imposing specific start and end times for capturing insights, despite their spontaneous nature.</li>
<li><strong>Assigned Tasks:</strong> Assigning unrelated insight tasks instead of letting subjects explore their own interests.</li>
<li><strong>Meaningless Tasks:</strong> Using tasks that lack meaning or relevance to the subjects, hindering genuine engagement.</li>
<li><strong>Short Timeframes:</strong> Restricting available time to an hour, despite the fact that many insights develop over longer periods.</li>
</ul></li>
<li><strong>Pressure and Evaluation:</strong>
<ul>
<li><strong>Performance Appraisal:</strong> Making subjects aware of being timed and evaluated, creating pressure that inhibits insight (supported by Teresa Amabile’s research on creativity at Harvard Business School).</li>
</ul></li>
<li><strong>Verbalization Interference:</strong>
<ul>
<li><strong>Think-Aloud Reports:</strong> Requiring constant verbalization of thought processes, which can disrupt insight formation (as noted by Graham Wallace and other researchers).</li>
</ul></li>
<li><strong>Limiting Exploration:</strong>
<ul>
<li><strong>Impasse Focus:</strong> Exclusively using tasks that create impasses, neglecting other paths to insight such as connections, coincidences, curiosities, and contradictions.</li>
<li><strong>Ignoring Experience:</strong> Disregarding the role of experience, despite its prevalence in two-thirds of Klein’s research cases. Specifically, overlooking the use of experience for making connections and seeing contradictions.</li>
<li><strong>Novel Tasks:</strong> Studying how people handle entirely unfamiliar tasks, preventing the application of prior knowledge.</li>
</ul></li>
<li><strong>Diabolical Methods:</strong>
<ul>
<li>Intentionally designing experiments that actively hinder the use of experience, creating artificial roadblocks to insight.</li>
</ul></li>
</ul>
</section>
<section id="the-prevalence-of-flawed-insight-experiments" class="level4">
<h4 class="anchored" data-anchor-id="the-prevalence-of-flawed-insight-experiments">The Prevalence of Flawed Insight Experiments</h4>
<ul>
<li>Klein criticizes the common practice in insight research of using puzzles with college undergraduates under highly controlled conditions.</li>
<li>This approach is described as “diabolical” and is argued to limit the understanding of insights.</li>
</ul>
</section>
<section id="the-legacy-of-impasse-problems-from-chimpanzees-to-college-students" class="level4">
<h4 class="anchored" data-anchor-id="the-legacy-of-impasse-problems-from-chimpanzees-to-college-students">The Legacy of Impasse Problems: From Chimpanzees to College Students</h4>
<ul>
<li><strong>Wolfgang Kohler’s Chimpanzee Study (1917):</strong>
<ul>
<li>Kohler observed chimpanzee “Sultan” using insight to solve a problem involving retrieving a banana beyond reach by combining two sticks.</li>
<li>This study challenged the notion of trial-and-error learning and sparked interest in insight research.</li>
</ul></li>
<li><strong>The Shift to Human Subjects:</strong>
<ul>
<li>Researchers began using college undergraduates due to their availability and ease of management.</li>
</ul></li>
<li><strong>The Nine-Dot Puzzle:</strong>
<ul>
<li>This classic puzzle requires connecting nine dots with four straight lines without lifting the pencil.</li>
<li>The solution involves extending the lines beyond the perceived boundaries of the dots.</li>
</ul></li>
<li><strong>Assumptions and Impasses:</strong>
<ul>
<li>The nine-dot puzzle exemplifies how <strong>unnecessary assumptions</strong> create impasses.</li>
<li>Assumptions like staying within the boundaries of the dots or pivoting lines only on dots hinder the solution.</li>
<li>Trina Kershaw (University of Massachusetts, Dartmouth) and Stellan Ohlsson (University of Illinois at Chicago) identified these assumptions.</li>
</ul></li>
</ul>
</section>
<section id="the-creative-desperation-path-1" class="level4">
<h4 class="anchored" data-anchor-id="the-creative-desperation-path-1">The Creative Desperation Path</h4>
<ul>
<li>Impasse tasks, like the nine-dot puzzle, exemplify the <strong>creative desperation path</strong> of the triple-path model.</li>
<li>This path involves consciously challenging beliefs, assumptions, and anchors to overcome a blockage.</li>
<li>Fixation on traditional object uses or inappropriate goals can create impasses.</li>
</ul>
</section>
<section id="laboratory-experiments-and-the-creative-desperation-path" class="level4">
<h4 class="anchored" data-anchor-id="laboratory-experiments-and-the-creative-desperation-path">Laboratory Experiments and the Creative Desperation Path</h4>
<ul>
<li>Laboratory experiments on insight often rely on this path.</li>
<li>Subjects are presented with problems designed to create impasses through unnecessary assumptions.</li>
<li>Success hinges on identifying and discarding these assumptions.</li>
</ul>
</section>
<section id="the-checker-game-example" class="level4">
<h4 class="anchored" data-anchor-id="the-checker-game-example">The Checker Game Example</h4>
<ul>
<li>“Two men play five checker games, and each wins an even number of games with no ties. How is that possible?”</li>
<li>The impasse arises from the assumption that the men played against each other. The solution lies in realizing they could have played against different opponents.</li>
</ul>
</section>
<section id="more-impasse-examples" class="level4">
<h4 class="anchored" data-anchor-id="more-impasse-examples">More Impasse Examples</h4>
<ul>
<li><strong>Box-Candle Puzzle:</strong> Attaching three candles to a door using boxes, tacks, and matches. The solution is to use the boxes as candle stands.</li>
<li><strong>Pendulum Puzzle:</strong> Grabbing two strings beyond arm’s reach. The solution involves creating a pendulum with one string using a heavy object.</li>
</ul>
</section>
<section id="real-world-impasses" class="level4">
<h4 class="anchored" data-anchor-id="real-world-impasses">Real-World Impasses</h4>
<ul>
<li>Aron Ralston’s escape from being trapped under a boulder is cited as a real-world example of overcoming a fixation.</li>
</ul>
</section>
<section id="neuropsychological-research-on-impasses" class="level4">
<h4 class="anchored" data-anchor-id="neuropsychological-research-on-impasses">Neuropsychological Research on Impasses</h4>
<ul>
<li>Neuropsychologists use brain scans during impasse problem-solving to identify brain regions activated before the “aha” moment (e.g., 2010 article by Arna Dietrich and Riam Konso, American University of Beirut).</li>
</ul>
</section>
<section id="critique-of-domesticated-insight-tasks" class="level4">
<h4 class="anchored" data-anchor-id="critique-of-domesticated-insight-tasks">Critique of Domesticated Insight Tasks</h4>
<ul>
<li>Klein critiques the overuse of “domesticated” insight tasks like the nine-dot, box-candle, and pendulum puzzles.</li>
<li>These tasks are considered predictable and lack the exploratory aspect of real-world insight.</li>
<li>While acknowledging the ingenuity of researchers studying impasses, Klein questions the applicability of their findings outside the laboratory.</li>
</ul>
</section>
<section id="the-need-for-broader-research" class="level4">
<h4 class="anchored" data-anchor-id="the-need-for-broader-research">The Need for Broader Research</h4>
<ul>
<li>A call for researchers to explore impasses in natural settings and investigate the other paths of the triple-path model (connection and contradiction insights).</li>
</ul>
</section>
<section id="the-misrepresentation-of-experience" class="level4">
<h4 class="anchored" data-anchor-id="the-misrepresentation-of-experience">The Misrepresentation of Experience</h4>
<ul>
<li>Klein criticizes the use of the impasse paradigm to devalue experience.</li>
<li>The majority of Klein’s research highlighted the crucial role of experience in gaining insights.</li>
<li>Impasse puzzles exploit experience by eliciting routine assumptions that are incorrect in the specific context.</li>
</ul>
</section>
<section id="the-water-jar-puzzle-and-the-einstellung-effect" class="level4">
<h4 class="anchored" data-anchor-id="the-water-jar-puzzle-and-the-einstellung-effect">The Water Jar Puzzle and the Einstellung Effect</h4>
<ul>
<li>The water jar puzzle example illustrates how inducing automaticity through repetitive tasks can lead to an <strong>Einstellung effect</strong>.</li>
<li>Subjects trained on a specific solution method (B - A - 2C) overlook a more efficient solution (A + C) when it becomes available.</li>
<li>This is presented as a misleading demonstration of how experience hinders insight.</li>
</ul>
</section>
<section id="challenging-the-critique-of-experience" class="level4">
<h4 class="anchored" data-anchor-id="challenging-the-critique-of-experience">Challenging the Critique of Experience</h4>
<ul>
<li>Klein challenges the notion that experience hinders insight, arguing that the water jar study creates a false representation of experience by inducing mindless routine.</li>
<li>Real-world examples, such as Harry Markopolos uncovering Bernie Madoff’s fraud and Charles Darwin’s development of natural selection theory, demonstrate the importance of experience.</li>
<li>Admirals Stark and Yamamoto’s understanding of the Battle of Taranto’s significance is also cited.</li>
</ul>
</section>
<section id="automaticity-vs.-real-world-experience" class="level4">
<h4 class="anchored" data-anchor-id="automaticity-vs.-real-world-experience">Automaticity vs.&nbsp;Real-World Experience</h4>
<ul>
<li>Klein distinguishes between <strong>automaticity</strong>, induced in laboratory settings, and real-world experience.</li>
<li>Automaticity requires repetitive, identical conditions, unlike the varied nature of real-world experiences.</li>
</ul>
</section>
<section id="functional-fixedness" class="level4">
<h4 class="anchored" data-anchor-id="functional-fixedness">Functional Fixedness</h4>
<ul>
<li>The concept of <strong>functional fixedness</strong>, the tendency to rely on conventional object uses, is discussed.</li>
<li>While puzzles exploit this tendency, Klein argues it has limited relevance to real-world insights.</li>
</ul>
</section>
<section id="expertise-and-overconfidence" class="level4">
<h4 class="anchored" data-anchor-id="expertise-and-overconfidence">Expertise and Overconfidence</h4>
<ul>
<li>Klein acknowledges that experts can be trapped by their assumptions, as seen with Sherman Kent and Eliezer’s misjudgments.</li>
<li>However, this is attributed to overconfidence in flawed beliefs, not automaticity or functional fixedness.</li>
</ul>
</section>
<section id="stellan-ohlssons-concerns-and-the-limitations-of-the-impasse-paradigm" class="level4">
<h4 class="anchored" data-anchor-id="stellan-ohlssons-concerns-and-the-limitations-of-the-impasse-paradigm">Stellan Ohlsson’s Concerns and the Limitations of the Impasse Paradigm</h4>
<ul>
<li>Stellan Ohlsson, a prominent impasse paradigm researcher, has expressed concerns about the limitations of this approach.</li>
<li>He has suggested that there may be “nothing left to explain” within the impasse paradigm and acknowledged its inability to explain insights like Darwin’s.</li>
</ul>
</section>
<section id="kleins-departure-from-conventional-research" class="level4">
<h4 class="anchored" data-anchor-id="kleins-departure-from-conventional-research">Klein’s Departure from Conventional Research</h4>
<ul>
<li>Klein contrasts their naturalistic approach with the controlled experiments preferred by conventional researchers.</li>
<li>They argue that the focus on the “aha” experience for defining insights limits the scope of research.</li>
</ul>
</section>
<section id="the-purpose-of-science" class="level4">
<h4 class="anchored" data-anchor-id="the-purpose-of-science">The Purpose of Science</h4>
<ul>
<li>Klein emphasizes that the purpose of science is to learn about the world, not just to adhere to rigid methods.</li>
<li>They advocate for using methods that effectively capture the phenomenon under investigation, even if it means departing from conventional approaches.</li>
</ul>
</section>
<section id="conclusion-retiring-the-impasse-paradigm" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-retiring-the-impasse-paradigm">Conclusion: Retiring the Impasse Paradigm</h4>
<ul>
<li>Klein concludes that the impasse paradigm may have become “played out” and proposes moving beyond it.</li>
<li>While valuable insights have been gained, it’s time to explore new approaches that capture the full complexity of insights.</li>
</ul>
</section>
</section>
</section>
<section id="part-iii-opening-the-gates" class="level2">
<h2 class="anchored" data-anchor-id="part-iii-opening-the-gates">Part III: Opening the Gates</h2>
<section id="chapter-14-helping-ourselves" class="level3">
<h3 class="anchored" data-anchor-id="chapter-14-helping-ourselves">Chapter 14: Helping Ourselves</h3>
<section id="how-can-we-gain-more-insights" class="level4">
<h4 class="anchored" data-anchor-id="how-can-we-gain-more-insights">How Can We Gain More Insights?</h4>
<ul>
<li>Examining insight paths individually, as suggested by the <strong>triple-path model of insight</strong>, makes the challenge of gaining more insights more manageable.</li>
</ul>
</section>
<section id="the-triple-path-model-of-insight" class="level4">
<h4 class="anchored" data-anchor-id="the-triple-path-model-of-insight">The Triple-Path Model of Insight</h4>
<section id="the-tilt-reflex-contradiction-path" class="level5">
<h5 class="anchored" data-anchor-id="the-tilt-reflex-contradiction-path">The Tilt Reflex (Contradiction Path)</h5>
<ul>
<li><strong>Leveraging Contradictions:</strong> We can utilize contradictions, confusions, and conflicts as catalysts for insights. These disruptions, often sources of frustration, represent opportunities for discovery. Replacing consternation with curiosity is key.</li>
<li><strong>The Tilt Reflex:</strong> This reflex helps us recognize and process contradictions.</li>
<li><strong>Example 1: Ginger and the Non-Compete Agreement:</strong>
<ul>
<li>Ginger, bound by a non-compete agreement, felt frustrated by the contradiction between the legal obligation and her inability to fulfill it due to lacking her previous company’s client list.</li>
<li>Her tilt reflex helped her understand this contradiction, leading her to confront her former employer and gain release from the agreement.</li>
</ul></li>
<li><strong>Example 2: Dennis and the ABC Page Job:</strong>
<ul>
<li>Dennis experienced a disconnect between his childhood routines of assigning blame and the realities of starting a Hollywood writing career.</li>
<li>After complaining to his potential manager at ABC about their delayed hiring process, the manager’s blunt response triggered Dennis’s tilt reflex.</li>
<li>Dennis realized the irrelevance of blame games outside his family and the importance of deliverability and trustworthiness in a professional setting.
<ul>
<li>This epiphany marked a transition to adulthood and informed his understanding of effective management.</li>
<li>His insight was about abandoning unproductive behaviors and recognizing what truly matters to managers.</li>
<li>This realization also inspired his later work on “The Larry Sanders Show,” a comedic exploration of the blame syndrome.</li>
</ul></li>
</ul></li>
<li><strong>Example 3: The Fire Captain and the “Attitude Problem”:</strong>
<ul>
<li>A fire captain, initially believing a young firefighter had an attitude problem, used an OJT (on-the-job training) technique learned in a workshop.</li>
<li>The technique involved asking the firefighter to explain his rationale instead of immediately reprimanding him.</li>
<li>This led the captain to realize the firefighter’s actions were well-intentioned, leading to the self-insight: “<em>I was the attitude problem</em>.”</li>
<li>The captain’s tilt reflex was triggered by the unexpected explanation, revealing his own role in creating conflict through rigid adherence to procedures. He gained insight into his firefighter and himself by actively seeking another perspective and being open to contradictory views.</li>
</ul></li>
</ul>
</section>
<section id="swirl-connection-path" class="level5">
<h5 class="anchored" data-anchor-id="swirl-connection-path">Swirl (Connection Path)</h5>
<ul>
<li><p><strong>Accidental Linkages:</strong> The connection path relies on the collision of diverse ideas. Increased “swirl” and turbulence create more opportunities for serendipitous discoveries.</p></li>
<li><p><strong>Examples of Accidental Linkages Leading to Insight:</strong></p>
<ul>
<li>Martin Chalfie’s lunchtime seminar on jellyfish.</li>
<li>Michael Gottlieb’s referral of a patient with unusual symptoms.</li>
<li>Jocelyn Bell Burnell’s observation of squiggles in radio telescope data.</li>
<li>Barry Marshall’s study of a corkscrew-shaped bacterium.</li>
<li>The fire captain’s experience in the OJT seminar.</li>
</ul></li>
<li><p><strong>Increasing Accidental Linkages:</strong> Expanding exposure to unfamiliar activities and diverse individuals can seed new combinations of concepts.</p></li>
<li><p><strong>Stephen Johnson’s Recommendations (from <em>Where Good Ideas Come From</em>, 2010):</strong></p>
<ul>
<li>Increase exposure to diverse ideas.</li>
<li>Interact with creative individuals.</li>
<li>Foster serendipity and random collisions of ideas.</li>
<li>Engage with different communities (both physical and virtual).</li>
<li>Encourage collaborative work.</li>
<li>Cultivate multiple hobbies.</li>
</ul></li>
<li><p><strong>Organizational Strategies for Increasing Swirl:</strong></p>
<ul>
<li>Random office assignments to prevent specialization silos.</li>
<li>Designing spaces that encourage interaction (e.g., Pixar’s atrium).</li>
</ul></li>
<li><p><strong>Critique of Swirl as an Insight Strategy:</strong></p>
<ul>
<li><p>While acknowledging the value of swirl in accidental discoveries, Klein expresses skepticism about deliberately increasing it as a reliable method for generating insights.</p></li>
<li><p><strong>Fallacy of Backward Thinking:</strong> Replicating past conditions that led to insights doesn’t guarantee future success and can generate numerous unproductive ideas.</p></li>
<li><p><strong>Examples of Spurious Correlation:</strong> Increasing lunchtime seminars won’t necessarily replicate Chalfie’s experience; making more desserts won’t replicate Gopnik’s discovery.</p></li>
<li><p><strong>Henri Poincaré’s Perspective:</strong> Creativity is about selecting <em>useful</em> combinations from an infinite number of possibilities, not simply generating more combinations.</p>
<blockquote class="blockquote">
<p>Creation does not consist in making new combinations. The combinations so made would be infinite in number and most of them absolutely without interest. To create consists precisely in not making useless combinations.</p>
</blockquote></li>
</ul></li>
</ul>
</section>
<section id="critical-thinking-creative-desperation-path" class="level5">
<h5 class="anchored" data-anchor-id="critical-thinking-creative-desperation-path">Critical Thinking (Creative Desperation Path)</h5>
<ul>
<li><strong>Escaping Mental Traps:</strong> This path involves recognizing and correcting flawed assumptions when we’re stuck.</li>
<li><strong>Critique of Assumption Listing:</strong>
<ul>
<li>Klein dismisses the practice of listing all assumptions as ineffective and likely stemming from the fallacy of backward thinking.</li>
<li>Listing all assumptions is distracting and requires expertise to evaluate their validity.</li>
</ul></li>
<li><strong>Napoleon’s Insight at the Battle of Toulon:</strong> Napoleon’s background and prepared mind allowed him to re-examine the tactical situation, not a systematic listing of assumptions.</li>
<li><strong>Identifying Flawed Assumptions:</strong> Look for conflicts, confusion, surprises (unexpected events), and contradictions within a team or project.</li>
<li><strong>Critical Thinking:</strong>
<ul>
<li>Defined as “<em>a systematic analysis of evidence, a process of thinking that questions assumptions…by logically reviewing the evidence in order to decide whether or not to believe specific claims</em>.”</li>
<li>Critical thinking is crucial for sound judgment and decision-making.</li>
</ul></li>
<li><strong>Caution Against Overreliance on Critical Thinking:</strong> Excessive critical thinking can stifle creativity and exploration of new ideas. It can dampen the “up arrow” and interfere with non-critical, playful thinking.</li>
<li><strong>Role of Critical Thinking in Insight:</strong> Most useful in times of desperation when flawed assumptions hinder progress.</li>
</ul>
</section>
</section>
<section id="the-pause-that-refreshes-incubation" class="level4">
<h4 class="anchored" data-anchor-id="the-pause-that-refreshes-incubation">The Pause That Refreshes (Incubation)</h4>
<ul>
<li><strong>Incubation in Wallace’s Four-Stage Model:</strong> Wallace emphasized incubation as a stage in the creative process.</li>
<li><strong>Incubation in the Research Sample:</strong>
<ul>
<li>Only five cases demonstrated incubation.</li>
<li>Forty-seven incidents occurred too rapidly for incubation.</li>
<li>Sixty-eight cases were difficult to classify.</li>
<li>Examples of insights without incubation: Wagner Dodge, Chalfie, Markopoulos, Gopnik, and Aron Ralston.</li>
</ul></li>
<li><strong>David Perkins’s Perspective (from <em>Archimedes’ Bathtub</em>):</strong>
<ul>
<li>Research has not definitively proven the incubation effect.</li>
<li>Controlled experiments may not accurately reflect real-world conditions.</li>
</ul></li>
<li><strong>Author’s Perspective on Incubation:</strong> Despite skepticism based on critical thinking, Klein personally values and practices incubation.</li>
<li><strong>Rebecca Dodds et al.’s Research:</strong>
<ul>
<li>Review of 39 experiments since 1938 shows that two-thirds found an incubation effect.</li>
<li>Incubation is more effective with longer periods and thorough preparation.</li>
</ul></li>
<li><strong>Possible Explanations for Incubation’s Effect (Eli and Sun, 2010):</strong>
<ul>
<li><strong>Unconscious Processing:</strong> The unconscious mind continues working on the problem.</li>
<li><strong>Mental Recovery:</strong> Incubation allows recovery from mental fatigue.</li>
<li><strong>Remote Associations:</strong> Relaxation facilitates access to remote associations otherwise blocked by critical analysis.</li>
<li><strong>Heightened Sensitivity:</strong> Priming from prior work increases sensitivity to relevant information in unexpected places (e.g., the Gopnik case).</li>
</ul></li>
<li><strong>Incubation and Insight Paths:</strong>
<ul>
<li>Most useful on the creative desperation path.</li>
<li>Potentially relevant to the contradiction path.</li>
<li>Different incubation mechanisms might apply to different insight paths (e.g., mental recovery for desperation, remote associations for connection).</li>
</ul></li>
</ul>
</section>
<section id="summary-of-insight-paths" class="level4">
<h4 class="anchored" data-anchor-id="summary-of-insight-paths">Summary of Insight Paths</h4>
<ul>
<li><strong>Contradiction Path:</strong> Focuses on inconsistencies and anomalies.</li>
<li><strong>Connection Path:</strong> Emphasizes exposure to new ideas.</li>
<li><strong>Creative Desperation Path:</strong> Utilizes critical thinking to address flawed assumptions.</li>
</ul>
</section>
<section id="clarifying-insight-methods" class="level4">
<h4 class="anchored" data-anchor-id="clarifying-insight-methods">Clarifying Insight Methods</h4>
<ul>
<li>Exposure to diverse ideas is primarily relevant for the connection path.</li>
<li>Breaking through fixation and impasses applies mainly to the desperation path.</li>
</ul>
</section>
</section>
<section id="chapter-15-helping-others" class="level3">
<h3 class="anchored" data-anchor-id="chapter-15-helping-others">Chapter 15: Helping Others</h3>
<section id="introduction-2" class="level4">
<h4 class="anchored" data-anchor-id="introduction-2">Introduction</h4>
<ul>
<li>Shifting from self-help to helping others presents a different challenge.</li>
<li>It often involves correcting others’ flawed beliefs.</li>
<li>This requires understanding the nature of these flawed beliefs.</li>
<li>The most fundamental, and often toughest, part is diagnosing the confusion and identifying the errors in their thinking.</li>
</ul>
</section>
<section id="diagnosis" class="level4">
<h4 class="anchored" data-anchor-id="diagnosis">Diagnosis</h4>
<ul>
<li>Klein’s daughter, Devorah, a cognitive psychologist, works on designing new products and understanding user interaction.</li>
<li><strong>Example</strong>: Devorah’s project involving an adapted Kindle-type reader for people with impaired vision.
<ul>
<li>Case study of a 79-year-old retired English professor frustrated by his poor vision.</li>
<li>Devorah demonstrated the device, which the professor followed despite being computer illiterate.</li>
<li>He remained dubious, and Devorah couldn’t discern the source of his hesitation.</li>
<li>Through patience and persistence, she sparked his intrigue about the device’s potential for reading.</li>
<li>He expressed concern about needing to clear a shelf for the “devices,” revealing his misconception.</li>
<li>Devorah diagnosed his flawed belief: he thought the e-readers were like books on tape, each holding a single book.</li>
<li>She informed him that the device could hold dozens, perhaps hundreds of books.</li>
<li>His reaction was astonishment and excitement, demonstrating a shift in his understanding.</li>
</ul></li>
<li><strong>Key takeaway from Devorah’s approach</strong>:
<ul>
<li>She waited for the professor to articulate his thoughts, recognizing his need to process.</li>
<li>She didn’t offer unsolicited advice but provoked his curiosity, leading him to ask the crucial question.</li>
</ul></li>
<li><strong>General principle for helping others</strong>:
<ul>
<li>Avoid unsolicited advice and attempts to convince others of what they “need” to know.</li>
<li>Instead, connect with their desire for insights and facilitate their own discoveries.</li>
</ul></li>
</ul>
</section>
<section id="the-role-of-insight-in-psychotherapy" class="level4">
<h4 class="anchored" data-anchor-id="the-role-of-insight-in-psychotherapy">The Role of Insight in Psychotherapy</h4>
<ul>
<li>Psychotherapists work with clients seeking insights into their poor decisions and destructive patterns.</li>
<li>Psychotherapy focuses on insights gained by both the therapist and the client.</li>
<li><strong>Example</strong>: Klein’s brother, Mitchell, a psychotherapist, shared a case study about a woman named Barbara.
<ul>
<li>Barbara ran a business with her cousin and experienced anxiety and depression due to the cousin’s irresponsible behavior.</li>
<li>Mitchell diagnosed the cousin with extreme narcissistic personality disorder.</li>
<li>He helped Barbara understand her cousin’s narcissism and correct her belief that the cousin’s actions were deliberate attempts to hurt her.</li>
<li>Barbara gained insight, felt liberated from anger and confusion, and ultimately took over the business, leading to its success.</li>
</ul></li>
<li>Both Devorah’s and Mitchell’s cases highlight the importance of diagnosis as the first step towards insight.</li>
<li>Providing information becomes straightforward once the flaw in thinking is identified.</li>
</ul>
</section>
<section id="diagnosis-plus-action" class="level4">
<h4 class="anchored" data-anchor-id="diagnosis-plus-action">Diagnosis Plus Action</h4>
<ul>
<li>Insight alone doesn’t guarantee behavioral change or wiser choices.</li>
<li>Therapists value insights that translate into action.</li>
<li><strong>Example</strong>: Bob Barkas, a psychotherapist, shared a case study of a mother and her depressed teenage daughter.
<ul>
<li>The mother was consistently critical of her daughter.</li>
<li>Bob asked the mother to tally positive and negative comments made to her daughter for a week.</li>
<li>The mother realized her overwhelmingly negative communication style, leading to an emotional breakthrough.</li>
<li>Bob then guided her to reverse the negativity by praising positive behaviors or the absence of negative ones.</li>
<li>The relationship improved significantly, and the daughter’s depression subsided.</li>
</ul></li>
<li>This case demonstrates that helping others may require guiding them towards new behaviors in addition to correcting beliefs.</li>
</ul>
</section>
<section id="facilitating-discovery" class="level4">
<h4 class="anchored" data-anchor-id="facilitating-discovery">Facilitating Discovery</h4>
<ul>
<li><strong>Example</strong>: Klein’s experience helping his friend Jimmy improve his racquetball skills.
<ul>
<li>Jimmy struggled with his backhand return of serve.</li>
<li>Instead of giving direct instructions, Klein had Jimmy observe the ball’s trajectory without swinging.</li>
<li>He then had Jimmy point to ideal hitting spots before finally allowing him to swing.</li>
<li>This process facilitated Jimmy’s own discovery of how to hit a backhand effectively.</li>
</ul></li>
<li>Klein emphasizes the value of helping others make their own discoveries rather than simply telling them what to do.</li>
</ul>
</section>
<section id="using-contradictions-to-repair-flawed-beliefs" class="level4">
<h4 class="anchored" data-anchor-id="using-contradictions-to-repair-flawed-beliefs">Using Contradictions to Repair Flawed Beliefs</h4>
<ul>
<li>Creating constructive dilemmas through contradictions can be a powerful tool.</li>
<li><strong>Example</strong>: Doug Harrington, a Navy pilot transitioning to a new aircraft (A-6), experienced sudden difficulty landing.
<ul>
<li>The Landing Signal Officer (LSO) repeatedly told him to “come right,” which contradicted Harrington’s perception of being aligned.</li>
<li>The senior LSO diagnosed the issue: Harrington’s seating position in the A-6 was offset from the center line, affecting his alignment.</li>
<li>The LSO devised a thumb-and-doorframe exercise to demonstrate the effect of the offset.</li>
<li>This exercise created a contradiction that forced Harrington to abandon his flawed belief about landing alignment.</li>
<li>He immediately grasped the problem and performed flawlessly the next day.</li>
</ul></li>
<li>The LSO’s approach exemplifies effective teaching/coaching: diagnosing the problem and facilitating self-discovery through a contradicting experience.</li>
</ul>
</section>
<section id="example-deborah-balls-teaching-method" class="level4">
<h4 class="anchored" data-anchor-id="example-deborah-balls-teaching-method">Example: Deborah Ball’s Teaching Method</h4>
<ul>
<li>Deborah Ball, a master teacher, taught her third-grade class about odd and even numbers.</li>
<li>A student, Sean, claimed that six could be both odd and even because 3 x 2 = 6.</li>
<li>Instead of correcting him directly, Ball facilitated a class discussion.</li>
<li>The class formulated a rule: an odd number has one left over when grouped by twos.</li>
<li>This contradicted Sean’s claim, leading him to self-correct his understanding.</li>
<li>The class also identified “Sean numbers”—even numbers composed of an odd number of groups of two.</li>
<li>Ball’s approach, similar to the LSO’s, highlights the power of contradiction in repairing flawed beliefs and fostering self-discovery.</li>
</ul>
</section>
<section id="fumbling-a-missed-opportunity" class="level4">
<h4 class="anchored" data-anchor-id="fumbling-a-missed-opportunity">Fumbling: A Missed Opportunity</h4>
<ul>
<li>Klein recounts a training session with Marines in 1997.</li>
<li>A sergeant, presented with an ambush scenario, ordered his fire team to charge directly at the enemy.</li>
<li>Other NCOs suggested flanking the enemy.</li>
<li>Reflecting on this incident, Klein realized he missed an opportunity to help the sergeant.</li>
<li>The sergeant misapplied the ambush doctrine, which dictates attacking the source of fire directly.</li>
<li>The sergeant’s unit wasn’t being ambushed directly, but rather witnessing other units under attack.</li>
<li>Klein should have explored the sergeant’s reasoning and helped him differentiate between being ambushed and observing an ambush.</li>
<li>This missed opportunity highlights Klein’s own learning process in helping others gain insights.</li>
</ul>
</section>
</section>
<section id="chapter-16-helping-our-organizations" class="level3">
<h3 class="anchored" data-anchor-id="chapter-16-helping-our-organizations">Chapter 16: Helping Our Organizations</h3>
<section id="the-tyranny-of-the-down-arrow" class="level4">
<h4 class="anchored" data-anchor-id="the-tyranny-of-the-down-arrow">The Tyranny of the Down Arrow</h4>
<ul>
<li><strong>Performance Equation</strong>: Organizations need to break the “tyranny of the down arrow” in the performance equation. This means finding a balance between reducing errors (down arrow) and increasing insights (up arrow).</li>
<li><strong>War on Error</strong>: Organizations overemphasize error reduction at the expense of gaining insights.</li>
<li><strong>Pressure for Predictability</strong>: Managers prioritize specifying tasks and timetables, viewing insights as disruptive.</li>
<li><strong>Visibility of Errors</strong>: Errors are public, easily tracked, and measurable, providing readily available performance metrics for managers.</li>
<li><strong>The Brake Pedal Analogy</strong>: The down arrow is like a brake pedal; organizations are pressing too hard, hindering progress.</li>
<li><strong>Forces of Predictability</strong>: These forces are constant and make relaxing the emphasis on error reduction difficult to sustain.</li>
<li><strong>Difficulty Visualizing Insights</strong>: Individuals can easily visualize errors but struggle to imagine potential insights.</li>
<li><strong>Past Failures</strong>: Advocating for insights has historically been unsuccessful, discouraging future attempts.</li>
<li><strong>Controls and Organizing</strong>: Controls are central to organizational structure and are driven by the need for predictability and perfection.</li>
</ul>
</section>
<section id="strengthening-the-up-arrow" class="level4">
<h4 class="anchored" data-anchor-id="strengthening-the-up-arrow">Strengthening the Up Arrow</h4>
<ul>
<li><p><strong>Promoting Insights</strong>: Countervailing forces are needed to create pressure for insights and discoveries.</p></li>
<li><p><strong>Insight Advocates</strong>: Establish a team of insight advocates to promote practices that encourage discoveries.</p>
<ul>
<li>Model this on existing teams like quality control or analytical integrity offices.</li>
<li>Responsibilities:
<ul>
<li>Collect examples of insights and discoveries.</li>
<li>Disseminate these examples monthly to encourage others and demonstrate organizational value for insights.</li>
</ul></li>
</ul></li>
<li><p><strong>Undocumented Insights</strong>: Many valuable insights go undocumented.</p></li>
<li><p><strong>David Klinger Example</strong>: Author’s experience on a US Navy project illustrates how an accidental conversation led to a valuable insight about staffing levels.</p>
<ul>
<li>The specific question about reducing staffing, not a general inquiry about insights, catalyzed the discussion.</li>
</ul></li>
<li><p><strong>Kurt Swogger Example</strong>: Swogger acted as a one-man insight advocate at Dow Chemical by actively listening to employees and connecting disparate pieces of information.</p>
<ul>
<li><blockquote class="blockquote">
<p>“Your people actually have the answers. They just don’t know it. And there’s a piece here and a piece there that you have got to put together.”</p>
</blockquote></li>
<li><p>Swogger’s insight stemmed from recognizing the potential of a new catalyst developed by chemists.</p></li>
<li><p>The new product, “Six Days,” significantly reduced delivery times for customized polymer solutions.</p></li>
</ul></li>
<li><p><strong>Storytelling</strong>: Insight advocates can use stories to share what they learn.</p></li>
<li><p><strong>Singapore Workshop Example</strong>: Workshop with Patrick Lambe (Straits Knowledge) and Sean Callahan (Anecdote) highlighted the connection between stories and insights.</p></li>
<li><p><strong>Anecdote’s Tagline</strong>: “Putting Stories to Work.”</p></li>
<li><p><strong>Leadership Story Example</strong>: Sean Callahan’s story about a simple leadership observation that led to widespread organizational change demonstrated the power of storytelling.</p>
<ul>
<li>The story focused on a manager’s practice of giving employees undivided attention.</li>
<li>Four reasons for the story’s impact:
<ul>
<li>Self-discovery by participants.</li>
<li>Concrete instructions within the narrative.</li>
<li>Social proof through peer agreement.</li>
<li>Emotional resonance.</li>
</ul></li>
</ul></li>
<li><p><strong>Emotion and Action</strong>: The emotional content of stories can translate insights into lasting change.</p></li>
<li><p><strong>Author’s Pessimism</strong>: Despite these examples, Klein remains pessimistic about an organization’s ability to sustain such initiatives.</p></li>
<li><p><strong>Sean Callahan’s Optimism</strong>: Callahan believes storytelling programs are sustainable, citing an example of a skeptical leader who became a strong advocate after gaining a personal insight.</p></li>
<li><p><strong>Chief Innovation Officers</strong>: Haydn Shaughnessy’s 2012 Forbes article discusses the role of chief innovation officers in supporting insight-driven initiatives.</p></li>
<li><p><strong>Downward Arrow Persistence</strong>: Klein’s pessimism stems from observing how “flavor of the month” initiatives often give way to the persistent forces of predictability and perfection.</p></li>
</ul>
</section>
<section id="loosen-the-filters" class="level4">
<h4 class="anchored" data-anchor-id="loosen-the-filters">Loosen the Filters</h4>
<ul>
<li><strong>Alternate Reporting</strong>: Create alternate reporting routes to bypass routine editing and filtering.</li>
<li><strong>Practical Limitations</strong>: Workers often prefer corporate endorsement, meaning going through the established review process.</li>
<li><strong>“Jumping Levels” Strategy</strong>: A three-star general’s strategy involves direct dialogue with lower-ranked individuals he trusts to bypass filtering.</li>
<li><strong>“Court of Appeals”</strong>: A former intelligence analyst suggests an oversight group to review rejected, bold position pieces.</li>
<li><strong>Balancing the Arrows</strong>: Loosening filters shouldn’t eliminate them entirely. The goal is balance, not dominance of either arrow.</li>
<li><strong>FBI Example</strong>: Overloading with unfiltered information can lead to dysfunction, as illustrated by the potential for an overwhelming number of warnings in the FBI.</li>
<li><strong>Oversight Group as Middle Ground</strong>: An oversight group can provide an escape hatch for blocked insights without dismantling the filtering process.</li>
</ul>
</section>
<section id="increase-organizational-willpower" class="level4">
<h4 class="anchored" data-anchor-id="increase-organizational-willpower">Increase Organizational Willpower</h4>
<ul>
<li><p><strong>Acting on Insights</strong>: The core problem often lies not in lacking insights, but in failing to act on them.</p></li>
<li><p><strong>Lack of Willpower</strong>: Organizations may lack the willpower to change, even when they recognize the need.</p></li>
<li><p><strong>Admiral Stark Example</strong>: Admiral Stark’s insight about the vulnerability of Pearl Harbor was not acted upon due to organizational resistance.</p></li>
<li><p><strong>Rosabeth Moss Kanter’s Observation</strong>:</p>
<ul>
<li><blockquote class="blockquote">
<p>“I still observe executives exhibiting the same lack of courage or knowledge that undercut previous waves of innovation. They declare that they want more innovation, but then ask, ‘Who else is doing it?’ They claim to seek new ideas, but shoot down every one brought to them.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Eastman Kodak Example</strong>: Kodak’s bankruptcy, despite inventing the digital camera, illustrates a failure of willpower, not insight. They prioritized short-term high profit margins from film over long-term adaptation.</p></li>
<li><p><strong>Encyclopedia Britannica (EB) Example</strong>: EB’s decline, despite creating early CD-ROM encyclopedias, also demonstrates a lack of willpower. Their established sales force resisted change to protect their existing business model.</p></li>
<li><p><strong>Kodak and EB’s Lack of Willpower</strong>: Both companies were trapped by successful business models and failed to adapt quickly enough.</p></li>
<li><p><strong>Continual Transformation vs.&nbsp;Insights</strong>: Klein questions the concept of “continual transformation,” arguing it may hinder the emergence of accidental insights.</p></li>
<li><p><strong>Goal Insights</strong>: Organizational willpower is demonstrated by acting on goal insights, which involve changing the goals themselves, not just adapting plans.</p></li>
<li><p><strong>Sean MacFarland and Operation Iraqi Freedom Example</strong>: Colonel MacFarland’s reversal of goals in Anbar province, Iraq, by aligning with Sunni tribes against al-Qaeda, showcases the power of goal insights. This reversed a losing situation and transformed Anbar into a secure zone.</p></li>
<li><p><strong>Goal Fixation</strong>: Organizations often reward tenacity in pursuing established goals, which can lead to <strong>goal fixation</strong> and hinder adaptation.</p></li>
<li><p><strong>Kishore Sengupta Study</strong>: Sengupta’s 2008 study demonstrated managers’ tendency toward goal fixation in a computer simulation, even when original goals became obsolete.</p></li>
<li><p><strong>Diagnosing Organizational Problems</strong>: Organizations need self-insight to determine whether their problems stem from preventing, filtering, or failing to act on insights.</p></li>
</ul>
</section>
<section id="appeal-to-authority" class="level4">
<h4 class="anchored" data-anchor-id="appeal-to-authority">Appeal to Authority</h4>
<ul>
<li><strong>Changing the Culture</strong>: Leaders can be persuaded to change the organizational culture by demonstrating the negative consequences of overemphasizing the down arrow.</li>
<li><strong>The Six Sigma Experiment</strong>: The widespread adoption and subsequent failure of Six Sigma in many Fortune 500 companies provides evidence of the downsides of overemphasizing error reduction. Six Sigma hindered innovation by focusing excessively on defect reduction.</li>
<li><strong>Six Sigma’s Impact</strong>: Despite initial success, Six Sigma ultimately hampered innovation and led to underperformance compared to the S&amp;P 500.</li>
<li><strong>3M Example</strong>: 3M experienced decreased creativity under Six Sigma, with researchers facing excessive documentation requirements.</li>
<li><strong>Balancing the Arrows with Six Sigma</strong>: Six Sigma shouldn’t be abandoned but integrated into a balanced approach.</li>
<li><strong>Ambidextrous Organizations</strong>: Charles O’Reilly III and Michael Tushman’s concept of <strong>ambidextrous organizations</strong> advocates for separate groups focused on efficiency (down arrow) and innovation (up arrow) reporting to the same manager. This helps prevent the error-reduction culture from stifling creativity.</li>
<li><strong>Pragmatism and Survival</strong>: Appealing to the desire for organizational success and survival in a competitive environment can be a powerful motivator for change.</li>
</ul>
</section>
</section>
<section id="chapter-17-tips-for-becoming-an-insight-hunter" class="level3">
<h3 class="anchored" data-anchor-id="chapter-17-tips-for-becoming-an-insight-hunter">Chapter 17: Tips for Becoming an Insight Hunter</h3>
<section id="opening-the-gates-to-insight" class="level4">
<h4 class="anchored" data-anchor-id="opening-the-gates-to-insight">Opening the Gates to Insight</h4>
<ul>
<li><strong>Tracking and unpacking insights</strong> are crucial for understanding them.</li>
<li>Increased sensitivity to insights leads to observing more of them (tracking).</li>
<li><strong>Unpacking</strong> involves dissecting the process of how the insight was gained.</li>
</ul>
</section>
<section id="challenges-of-secondary-sources" class="level4">
<h4 class="anchored" data-anchor-id="challenges-of-secondary-sources">Challenges of Secondary Sources</h4>
<ul>
<li>Unpacking insights from articles is difficult due to the inability to ask questions.</li>
<li>Klein’s research project faced this challenge due to reliance on secondary sources.
<ul>
<li>Example: Wagner Dodge (died 1955) and the Mann Gulch Fire (Norman Maclean’s account).</li>
<li>Example: Investors who profited from the 2007 subprime housing market collapse (Michael Lewis and Gregory Zuckerman’s accounts).</li>
</ul></li>
<li>Secondary sources were sufficient for Klein’s initial research goals (making discoveries).</li>
<li>Direct interaction with the individual who had the insight provides deeper understanding.</li>
<li>Ideal scenario: Observing the insight unfold and probing for details.
<ul>
<li>Example: Klein’s daughter, Devorah, and her fantasy baseball team discovery.</li>
</ul></li>
</ul>
</section>
<section id="the-power-of-interviews" class="level4">
<h4 class="anchored" data-anchor-id="the-power-of-interviews">The Power of Interviews</h4>
<ul>
<li><strong>Interviews</strong> bridge the gap between secondary sources and direct observation.</li>
<li>Many of Klein’s research cases (almost a third) came from in-depth interviews.
<ul>
<li>Example: U.S. Army General Martin Dempsey and urban warfare tactics in Iraq.</li>
<li>Example: Dave Charlton and heat conduction in thin glass coatings.</li>
<li>Example: Ginger and non-compete clause struggles.</li>
</ul></li>
<li><strong>Be prepared to hunt for insights</strong>, as opportunities can arise unexpectedly.</li>
</ul>
</section>
<section id="case-study-lizard-zero" class="level4">
<h4 class="anchored" data-anchor-id="case-study-lizard-zero">Case Study: Lizard Zero</h4>
<ul>
<li><strong>Setting</strong>: Alaska vacation in June 2010.</li>
<li><strong>Encounter</strong>: Jay Cole (retired curator, Department of Herpetology and Ichthyology, American Museum of Natural History) and his wife, Carol Townsend.</li>
<li><strong>Initial conversation</strong>: Jay mentioned a lizard species that seemed to have regressed to cloning.</li>
<li><strong>Delayed follow-up</strong>: Vacation distractions postponed further discussion.</li>
<li><strong>Dinner interview</strong>: Klein arranged a dinner with Jay and Carol to learn more.</li>
<li><strong>The Lizard Story:</strong>
<ul>
<li><strong>The Anomaly</strong>: In the late 1950s, naturalists found all-female whiptail lizard colonies in the southwestern U.S. and northern Mexico.</li>
<li><strong>Prior Research</strong>: A 1958 publication by Ilya Derevsky reported similar all-female colonies in Armenia (3,000 observed lizards, no males).</li>
<li><strong>Skepticism and Alternative Explanations</strong>:
<ul>
<li>Rejection of findings (some due to Cold War tensions).</li>
<li>Biased samples.</li>
<li>Prior copulation with males and sperm storage.</li>
<li>Hermaphroditism and self-fertilization.</li>
</ul></li>
<li><strong>Disproving Alternative Explanations</strong>:
<ul>
<li>Females reproduced after isolated hibernation.</li>
<li>Histology showed no hermaphroditism or stored sperm.</li>
</ul></li>
<li><strong>The Cloning Hypothesis</strong>: Lizards reproduced by cloning themselves (genetically identical offspring). Embryos developed from unfertilized eggs.</li>
<li><strong>Testing the Hypothesis (pre-DNA analysis):</strong> Skin transplants (rejected in sexual species, accepted in these unisexual lizards).</li>
<li><strong>Confirmation through DNA Studies</strong>: J. Cole and others conducted DNA studies after Carol Townsend developed methods to keep the lizards alive.</li>
<li><strong>Origin of Cloning</strong>: Hybrid origin (mating of two related lizard species).</li>
<li><strong>Lizard Zero</strong>: A specific female hybrid individual initiated the cloning lineage.</li>
<li><strong>Reverse Darwinism</strong>: Sexual reproduction promotes variation, while these lizards regressed to cloning (no genetic variation).</li>
</ul></li>
<li><strong>Lost History</strong>: The originator of the Lizard Zero story could not be definitively identified.</li>
<li><strong>Cole’s Involvement</strong>:
<ul>
<li>Graduate student (early 1960s) in the lab that discovered the all-female colonies.</li>
<li>Histology and genetics work in Arizona (1965).</li>
<li>Research program on the genetics of cloned lizards at the American Museum of Natural History (1969).</li>
</ul></li>
<li><strong>Museum Exhibit</strong>: Three whiptail lizard specimens on display (one from the all-female species, two from the parent species).</li>
<li><strong>Insight Pathway</strong>: Contradiction (existing ideas contradicted by observations).</li>
<li><strong>Key takeaway</strong>: Unusual observation resisted by the research field ultimately leads to insights.</li>
</ul>
</section>
<section id="case-study-the-canny-consumers" class="level4">
<h4 class="anchored" data-anchor-id="case-study-the-canny-consumers">Case Study: The Canny Consumers</h4>
<ul>
<li><strong>Context</strong>: Market research for Procter &amp; Gamble (P&amp;G) to introduce a new detergent.</li>
<li><strong>Target Consumers</strong>: “Economical homemakers” (female heads of household) who preferred less expensive detergents.</li>
<li><strong>P&amp;G’s Existing Model</strong>: These consumers buy the cheapest detergent.</li>
<li><strong>Author’s Team’s Involvement</strong>: Hired to conduct interviews about tacit knowledge.</li>
<li><strong>Initial Meeting</strong>: P&amp;G team expressed low expectations, believing they already knew everything.</li>
<li><strong>Author’s Response</strong>: Determined to achieve a breakthrough.</li>
<li><strong>Interview Methodology</strong>:
<ul>
<li>Two teams, 12 homemakers interviewed over two days (two-hour interviews).</li>
<li>Mock supermarket aisle photograph (brands shown, prices withheld).</li>
<li>Interviewees asked for price information as they “shopped.”</li>
</ul></li>
<li><strong>Findings</strong>:
<ul>
<li><strong>Pickier than expected</strong>: Homemakers considered quality alongside price.</li>
<li><strong>Quality and Cost Consciousness</strong>: Concerned about both quality and value.</li>
<li><strong>Bargain Hunting</strong>: Took pride in finding good quality at low prices.</li>
<li><strong>Sophisticated Strategy</strong>:
<ul>
<li><strong>Target Set</strong>: 3-4 acceptable brands.</li>
<li><strong>Couponing and Sales</strong>: Used coupons and sought in-store bargains.</li>
<li><strong>Purchase Decision</strong>: Cheapest brand from the Target set on the shopping day.</li>
<li><strong>Rationale for Target Set Size</strong>: Balance between bargain opportunities and calculation effort.</li>
</ul></li>
</ul></li>
<li><strong>P&amp;G’s Previous Misconception</strong>: Homemakers were perceived as solely price-driven and unconcerned with quality.</li>
<li><strong>Impact</strong>: The insights helped P&amp;G achieve a successful product rollout.</li>
<li><strong>Appreciative Inquiry</strong>: Respecting the intelligence of the subjects is crucial for gaining insights.</li>
</ul>
</section>
<section id="appreciative-inquiry-and-kobe" class="level4">
<h4 class="anchored" data-anchor-id="appreciative-inquiry-and-kobe">Appreciative Inquiry and Kobe</h4>
<ul>
<li><strong>Example</strong>: Klein’s grandson, Kobe, and his parents’ underestimation of his abilities.</li>
<li><strong>The Questionnaire</strong>: Rebecca (Kobe’s mother) found a question about understanding “Where’s Daddy?”</li>
<li><strong>The Experiment</strong>: Rebecca taught Kobe about noses (Mama’s, Kobe’s, and then asking for Dada’s).</li>
<li><strong>Kobe’s Response</strong>: Kobe located his father and grabbed his nose.</li>
<li><strong>Lesson</strong>: Low expectations can hinder the discovery of insights. Appreciative inquiry is essential.</li>
</ul>
</section>
<section id="appreciative-listening-and-the-hms-gloucester" class="level4">
<h4 class="anchored" data-anchor-id="appreciative-listening-and-the-hms-gloucester">Appreciative Listening and the HMS Gloucester</h4>
<ul>
<li><strong>Context</strong>: Operation Desert Storm (1990). Michael Riley (British naval officer) on HMS Gloucester protecting USS Missouri.</li>
<li><strong>The Incident</strong>: Riley identified and ordered the shooting down of an Iraqi Silkworm missile.</li>
<li><strong>Post-War Analysis</strong>: No evidence of the missile’s characteristics on radar recordings.</li>
<li><strong>Riley’s Claim</strong>: Extrasensory perception (ESP).</li>
<li><strong>Author’s Team’s Investigation</strong>: Two-hour interview and radar video review.</li>
<li><strong>Initial Dead End</strong>: No evidence of acceleration.</li>
<li><strong>The Breakthrough</strong>: The missile’s lower altitude caused it to break free from ground clutter farther out than usual.</li>
<li><strong>Riley’s Misperception</strong>: Mistook the unusual appearance for acceleration.</li>
<li><strong>Importance of Appreciative Listening</strong>: Taking Riley’s perception seriously, even though incorrect, led to the solution.</li>
<li><strong>Previous Analysts’ Oversight</strong>: Focused on the images, neglecting Riley’s experience.</li>
<li><strong>Riley’s Acceptance</strong>: Reluctantly agreed with the team’s explanation.</li>
<li><strong>Key takeaway</strong>: Listen sympathetically and appreciatively, even when faced with incorrect information, to understand the reasoning.</li>
</ul>
</section>
<section id="probing-checklist-for-understanding-behavior" class="level4">
<h4 class="anchored" data-anchor-id="probing-checklist-for-understanding-behavior">Probing Checklist for Understanding Behavior</h4>
<ul>
<li><strong>Knowledge</strong>: What did the person know or not know?
<ul>
<li>Examples: Devorah and the elderly gentleman, Mitchell and his client, Walter Reed and his colleagues.</li>
</ul></li>
<li><strong>Beliefs and Experience</strong>: Beliefs, perceptual skills, patterns, judgments of typicality (tacit knowledge).
<ul>
<li>Examples: Mike Riley and radar blips, Harry Markopolos and Bernie Madoff’s trades.</li>
</ul></li>
<li><strong>Motivation and Competing Priorities</strong>: What were the person’s goals and constraints?
<ul>
<li>Examples: Cheryl Kane and chocolate kisses, Dennis and the page job, P&amp;G and the homemakers.</li>
</ul></li>
<li><strong>Constraints</strong>: What limitations influenced their actions?
<ul>
<li>Examples: Daniel Boone and the kidnappers, Ginger and the compliance officer.</li>
</ul></li>
</ul>
</section>
<section id="sticky-keys-unpacking-a-simple-insight" class="level4">
<h4 class="anchored" data-anchor-id="sticky-keys-unpacking-a-simple-insight">Sticky Keys: Unpacking a Simple Insight</h4>
<ul>
<li><strong>Initial chronology (not a story):</strong> Helen’s key doesn’t work, Gary assumes it’s the key, makes new keys, they don’t work, Gary solves the problem.</li>
<li><strong>Detailed story (with insights):</strong>
<ul>
<li>Helen suggests lock problem. Gary dismisses it.</li>
<li>Gary makes new keys (multiple attempts).</li>
<li>Gary realizes his own key sticks.</li>
<li>Gary lubricates the lock, solving the problem.</li>
</ul></li>
<li><strong>Insight Story</strong>: Bad key frame replaced by bad lock frame (garden path story).</li>
<li><strong>Garden Path Story</strong>: Tenaciously holding onto an erroneous frame despite contrary evidence.</li>
<li><strong>Routinization of Deviance</strong>: Anomalous event repeated until it becomes the new normal.
<ul>
<li>Example: NASA Challenger disaster and O-ring scorching.</li>
<li>Gary’s increasing jiggling of the key.</li>
</ul></li>
<li><strong>Helen’s Interpretation</strong>: Gary doesn’t listen to her.</li>
<li><strong>Alternative Interpretation</strong>: Gary honorably admitted his foolishness (but he had forgotten Helen’s initial suggestion).</li>
<li><strong>Conclusion</strong>: Even simple incidents can reveal multiple layers of insight.</li>
</ul>
</section>
</section>
<section id="chapter-18-the-magic-of-insights" class="level3">
<h3 class="anchored" data-anchor-id="chapter-18-the-magic-of-insights">Chapter 18: The Magic of Insights</h3>
<section id="the-illusion-of-magical-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-illusion-of-magical-insights">The Illusion of Magical Insights</h4>
<ul>
<li>Insights often appear magical because we only see the end result, not the process leading to it.</li>
<li>Graham Wallace’s model focused on the sudden “illumination” aspect of insight, contributing to the perception of magic.</li>
<li>This chapter argues that the process is less mysterious than it seems.</li>
</ul>
</section>
<section id="the-triple-path-model-of-insight-1" class="level4">
<h4 class="anchored" data-anchor-id="the-triple-path-model-of-insight-1">The Triple-Path Model of Insight</h4>
<ul>
<li>Klein proposes a triple-path model, offering a more nuanced understanding of insight:
<ul>
<li><strong>Contradiction Path</strong>: Triggered by encountering conflicting information.</li>
<li><strong>Creative Desperation Path</strong>: Arises from reaching an impasse and needing to abandon flawed beliefs.</li>
<li><strong>Connection Path</strong>: Occurs when connecting seemingly disparate ideas.</li>
</ul></li>
<li>Each path alters existing beliefs and understanding, leading to the “flash of illumination.”</li>
<li>Insights replace an old story with a new, more accurate and useful one.</li>
</ul>
</section>
<section id="addressing-myths-surrounding-insight" class="level4">
<h4 class="anchored" data-anchor-id="addressing-myths-surrounding-insight">Addressing Myths Surrounding Insight</h4>
<ul>
<li>The triple-path model helps clarify common misconceptions about insight. These myths often apply to one path but not the others.</li>
<li><strong>Is insight a matter of breaking out of an impasse?</strong>
<ul>
<li>Yes, for the Creative Desperation path, but not necessarily for the Contradiction or Connection paths.</li>
</ul></li>
<li><strong>Does incubation help?</strong>
<ul>
<li>Evidence is mixed; if it helps, it may work differently for each path.</li>
</ul></li>
<li><strong>Does experience hinder insights?</strong>
<ul>
<li>Sometimes, on the Creative Desperation path, as ingrained beliefs can become obstacles. Not necessarily on the other paths.</li>
</ul></li>
<li><strong>Should we keep an open mind?</strong>
<ul>
<li>Yes, on the Connection path, to embrace new possibilities. However, the Contradiction path often benefits from a skeptical mind to evaluate conflicting information.</li>
</ul></li>
<li><strong>Should we expose ourselves to a “swirl” of different ideas?</strong>
<ul>
<li>Potentially beneficial for the Connection path, but not necessarily for the others.</li>
</ul></li>
<li><strong>Is insight a matter of connecting the dots?</strong>
<ul>
<li>Only applicable to the Connection path. Even then, it’s an illusion of hindsight, as we forget the irrelevant information.</li>
</ul></li>
<li>It is crucial to specify which path is being discussed to avoid miscommunication.</li>
</ul>
</section>
<section id="clear-cut-vs.-soft-insights" class="level4">
<h4 class="anchored" data-anchor-id="clear-cut-vs.-soft-insights">Clear-Cut vs.&nbsp;Soft Insights</h4>
<ul>
<li>The triple-path model originated from 120 cases studied by Klein.</li>
<li>Many insights are <strong>“clear-cut,”</strong> having a definitive solution:
<ul>
<li>Examples include scientific discoveries (DNA structure, disease investigations, financial fraud investigations, astronomical discoveries like pulsars).</li>
</ul></li>
<li><strong>“Soft”</strong> insights often involve people and lack a single, verifiable solution:
<ul>
<li>Examples include interpretations of historical events (Battle of Taranto, Napoleon’s tactics), sports strategies, financial market predictions, and psychotherapy diagnoses.</li>
</ul></li>
<li>While soft insights cannot be definitively validated, they are still valuable.</li>
<li>The triple-path model applies to both clear-cut and soft insights.</li>
</ul>
</section>
<section id="major-vs.-minor-insights" class="level4">
<h4 class="anchored" data-anchor-id="major-vs.-minor-insights">Major vs.&nbsp;Minor Insights</h4>
<ul>
<li>Insights vary in their impact:
<ul>
<li><strong>High-impact</strong> insights: Darwin’s theory of evolution, Yamamoto’s Pearl Harbor attack strategy, Einstein’s theory of special relativity.</li>
<li><strong>Everyday/Minor</strong> insights: Personal problem-solving (car keys, sticky house key), workplace solutions (chocolate kisses for time cards), fantasy baseball strategies, coaching advice.</li>
</ul></li>
<li>The triple-path model applies to both major and minor insights.</li>
</ul>
</section>
<section id="a-richer-understanding-of-insight" class="level4">
<h4 class="anchored" data-anchor-id="a-richer-understanding-of-insight">A Richer Understanding of Insight</h4>
<ul>
<li>Klein’s research has led to a deeper understanding of insight, beyond the Graham-Wallace stages.</li>
<li>This includes:
<ul>
<li>A more comprehensive description of insight.</li>
<li>Understanding obstacles to insight.</li>
<li>How the focus on reducing errors (“down arrow”) can hinder insights.</li>
<li>Strategies for improving the chances of gaining insights.</li>
</ul></li>
</ul>
</section>
<section id="fostering-insights" class="level4">
<h4 class="anchored" data-anchor-id="fostering-insights">Fostering Insights</h4>
<ul>
<li><strong>For Individuals:</strong>
<ul>
<li><strong>Contradiction Path</strong>: Be open to surprises and willing to challenge existing beliefs.</li>
<li><strong>Connection Path</strong>: Be open to new experiences and speculate about unfamiliar possibilities.</li>
<li><strong>Creative Desperation Path</strong>: Critically examine assumptions to identify flawed beliefs.</li>
</ul></li>
<li><strong>Helping Others Gain Insights:</strong>
<ul>
<li>Listen empathetically to understand flawed beliefs.</li>
<li>Avoid labeling people as “stupid.”</li>
<li>Become a detective to uncover the flawed belief.</li>
<li>Help the individual replace the flawed belief.</li>
</ul></li>
<li><strong>For Organizations:</strong>
<ul>
<li>Diagnose what hinders insights.</li>
<li>Reduce excessive controls and procedures that stifle insights in the name of error reduction.</li>
<li>Recognize that organizations often prioritize predictability and abhor mistakes, thus stifling innovation.</li>
<li>Cut back on practices that interfere with insights.</li>
<li>Address organizational fear of the unpredictable nature of insights.</li>
<li>Establish oversight groups to act as a “court of appeals” for potentially valuable but disruptive insights.</li>
<li>Be willing to act on insights once they are identified.</li>
</ul></li>
</ul>
</section>
<section id="the-nature-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-nature-of-insights">The Nature of Insights</h4>
<ul>
<li>Popular usage of the term “insight” often refers to shallow bits of information, not true shifts in understanding.</li>
<li>True insights involve a discontinuous shift in our understanding, a change in the story we tell ourselves about how the world works.</li>
<li>This shift requires discarding or modifying core beliefs.</li>
<li>Insights are unpredictable leaps to new understanding, often surprising and not derived from conscious, deliberate reasoning.</li>
<li>Insights are usually unique to an individual, even if others have the same information.</li>
<li>Insights often arrive as a coherent new story, sometimes complete (Watson and Crick’s DNA structure) and sometimes as a starting point for further investigation (Markopolos’ Madoff investigation, Gottlieb’s identification of a new disease).</li>
</ul>
</section>
<section id="the-transformative-power-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-transformative-power-of-insights">The Transformative Power of Insights</h4>
<ul>
<li>Insights can lead to significant changes:
<ul>
<li><strong>Career changes:</strong> Many examples throughout the book demonstrate how insights have led individuals down new career paths.</li>
<li><strong>Personal changes:</strong> Insights can lead to profound shifts in personal beliefs and behaviors (e.g., the firefighter who realized he was the “attitude problem”).</li>
</ul></li>
<li>Insights not only provide new understanding but also change how we view the world, our mental equipment, capabilities, priorities, and goals.</li>
</ul>
</section>
<section id="habits-of-mind-and-the-up-arrow" class="level4">
<h4 class="anchored" data-anchor-id="habits-of-mind-and-the-up-arrow">Habits of Mind and the Up Arrow</h4>
<ul>
<li>Three habits of mind drive insights:
<ul>
<li>Noticing connections, coincidences, and curiosities.</li>
<li>Going “tilt” at inconsistencies.</li>
<li>Weeding out flawed beliefs.</li>
</ul></li>
<li>These habits of mind can be considered forces that drive the “up arrow” of discovery and innovation.</li>
<li>The heuristics and biases community has focused on the downsides of these habits (e.g., seeing false connections), but Klein emphasizes their crucial role in making discoveries.</li>
<li>These habits of mind combat mental rigidity that can arise from experience and successful beliefs.</li>
<li>They disrupt routine thinking and foster discovery.</li>
</ul>
</section>
<section id="the-irrepressible-nature-of-insights" class="level4">
<h4 class="anchored" data-anchor-id="the-irrepressible-nature-of-insights">The Irrepressible Nature of Insights</h4>
<ul>
<li>The “up arrow” of insight has its own inherent power and cannot be eliminated.</li>
<li>We are intrinsically driven to seek insights, evident in our fascination with projects, hobbies, and social relationships.</li>
<li>Insights are acts of creation, bringing forth new ideas that didn’t exist before.</li>
</ul>
</section>
<section id="reverence-for-insights" class="level4">
<h4 class="anchored" data-anchor-id="reverence-for-insights">Reverence for Insights</h4>
<ul>
<li>The ancient Greeks revered the capacity for insight, honoring the Muses as goddesses of creative inspiration.</li>
<li>While demystifying insights, Klein emphasizes the importance of appreciating the awe and wonder they inspire.</li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>
</section>

 ]]></description>
  <category>book</category>
  <category>notes</category>
  <guid>https://christianjmills.com/posts/seeing-what-others-dont/</guid>
  <pubDate>Sun, 10 Nov 2024 08:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Deploying YOLOX for Real-Time Object Tracking on the Raspberry Pi AI Kit</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/tutorials/pytorch-train-object-detector-yolox-series.html"><strong>Training YOLOX Models for Real-Time Object Detection in PyTorch</strong></a></li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Prerequisites<br>
</li>
<li>Compiling Our Model<br>
</li>
<li>Preparing the Raspberry Pi<br>
</li>
<li>Setting Up a Python Virtual Environment<br>
</li>
<li>Getting Started with the Code</li>
<li>Importing the Required Dependencies</li>
<li>Define Utility Functions<br>
</li>
<li>Setting Up the Project<br>
</li>
<li>Loading the Inference Resources<br>
</li>
<li>Tracking Objects in a Camera Feed<br>
</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Welcome back to this series on real-time object detection with YOLOX. So far, this series has covered how to:</p>
<ul>
<li>Finetune a YOLOX model in PyTorch to detect hand signs.</li>
<li>Export the finetuned model to ONNX.</li>
<li>Use the ByteTrack object tracker to track objects across video frames.</li>
</ul>
<p>This post builds on those past tutorials by walking through deploying our model on a <a href="https://www.raspberrypi.com/products/raspberry-pi-5/">Raspberry Pi 5</a> to perform real-time object tracking from a camera feed using the <a href="https://www.raspberrypi.com/products/ai-kit/">Raspberry Pi AI Kit</a>.</p>
<p>Released in June 2024, the AI Kit uses the <a href="https://hailo.ai/products/ai-accelerators/hailo-8l-ai-accelerator-for-ai-light-applications/">Hailo-8L accelerator</a> from <a href="https://hailo.ai/">Hailo AI</a>. The Hailo-8L can perform 13 tera-operations per second (TOPS), making it suitable for lightweight real-time inference on edge devices.</p>
<p>Whether you are working with the pre-trained hand-sign detector used in this series or a custom model, real-time object tracking with the Raspberry Pi AI Kit opens up many possibilities for edge applications.</p>
</section>
<section id="prerequisites" class="level2">
<h2 class="anchored" data-anchor-id="prerequisites">Prerequisites</h2>
<p>Before diving into the tutorial, there are some prerequisites to cover.</p>
<section id="hardware" class="level3">
<h3 class="anchored" data-anchor-id="hardware">Hardware</h3>
<p>The code for this tutorial assumes the Raspberry Pi has an attached <a href="https://en.wikipedia.org/wiki/Camera_Serial_Interface">CSI</a> camera.</p>
<p>The Raspberry Pi 5 has 22-pin MIPI CSI camera connectors. If your CSI camera module uses a 15-pin connector, you will need a 15-pin to 22-pin adapter cable. You can order a pack of 3 on Amazon at the link below:</p>
<ul>
<li><a href="https://www.amazon.com/Arducam-Raspberry-Camera-Ribbon-Extension/dp/B085RW9K13">Arducam for Raspberry Pi Zero Camera Cable Set, 1.5” 2.87” 5.9” Ribbon Flex Extension Cables for Pi Zero&amp;W, Pack of 3</a></li>
</ul>
</section>
<section id="software" class="level3">
<h3 class="anchored" data-anchor-id="software">Software</h3>
<p>This tutorial uses the <a href="https://hailo.ai/products/hailo-software/hailo-ai-software-suite/#sw-dc">Dataflow Compiler</a> (DFC) Python package, available through the <a href="https://hailo.ai/developer-zone/">Hailo AI Developer Zone</a>. At the time of writing, you must create an account to access this Python package and the associated documentation. You can create a Developer Zone account at the link below:</p>
<ul>
<li><a href="https://hailo.ai/developer-zone/request-access/">Hailo AI Developer Zone - Request Access</a></li>
</ul>
</section>
<section id="os" class="level3">
<h3 class="anchored" data-anchor-id="os">OS</h3>
<p>At the time of writing, Hailo AI only supports the Dataflow Compiler Python package on x86 Linux platforms. If you are on Windows, you can run the conversion process through <a href="https://learn.microsoft.com/en-us/windows/wsl/about">WSL</a>.</p>
</section>
</section>
<section id="compiling-our-model" class="level2">
<h2 class="anchored" data-anchor-id="compiling-our-model">Compiling Our Model</h2>
<p>We must first compile our YOLOX model for the Hailo-8L accelerator before running it on the AI Kit. The compilation process consists of the following steps:</p>
<ol type="1">
<li>Convert the ONNX model into a Hailo-compatible representation. (<a href="https://hailo.ai/developer-zone/documentation/v3-29-0/?sp_referrer=tutorials_notebooks%2Fnotebooks%2FDFC_1_Parsing_Tutorial.html">link</a>)</li>
<li>Quantize the Hailo-compatible representation into an 8-bit model. (<a href="https://hailo.ai/developer-zone/documentation/v3-29-0/?page=tutorials_notebooks%2Fnotebooks%2FDFC_2_Model_Optimization_Tutorial.html">link</a>)</li>
<li>Compile the 8-bit model into an HEF binary file for the Hailo-8L accelerator. (<a href="https://hailo.ai/developer-zone/documentation/v3-29-0/?sp_referrer=tutorials_notebooks%2Fnotebooks%2FDFC_3_Compilation_Tutorial.html">link</a>)</li>
</ol>
<p>We use the <a href="https://hailo.ai/products/hailo-software/hailo-ai-software-suite/#sw-dc">Dataflow Compiler</a> package provided by Hailo AI to perform these steps:</p>
<ul>
<li><a href="https://hailo.ai/developer-zone/documentation/v3-29-0/">Developer Zone - Dataflow Compiler User Guide</a></li>
</ul>
<section id="download-the-dataflow-compiler" class="level3">
<h3 class="anchored" data-anchor-id="download-the-dataflow-compiler">Download the Dataflow Compiler</h3>
<p>You can download the Dataflow Compiler Python wheel file from the Software Downloads page in the Hailo AI Developer Zone at the page linked below:</p>
<ul>
<li><a href="https://hailo.ai/developer-zone/software-downloads/">Developer Zone - Software Downloads</a></li>
</ul>
<p>In the selection interface, choose the following options:</p>
<ul>
<li><strong>Select Product:</strong> <code>ACCELERATORS</code></li>
<li><strong>Software Package:</strong> <code>AI Software Suite</code></li>
<li><strong>Software Sub-Package:</strong> <code>Dataflow Compiler</code></li>
<li><strong>Architecture:</strong> <code>x86</code></li>
<li><strong>OS:</strong> <code>Linux</code></li>
<li><strong>Python Version:</strong> <code>3.10</code></li>
</ul>
</section>
<section id="setting-up-a-python-environment" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-a-python-environment">Setting Up a Python Environment</h3>
<p>After downloading the Dataflow Compiler, we can set up our Python environment.</p>
<section id="install-mamba-package-manager" class="level4">
<h4 class="anchored" data-anchor-id="install-mamba-package-manager">Install Mamba Package Manager</h4>
<p>As with previous tutorials in this series, we will use the Mamba package manager to create and manage our Python environment.</p>
<p>If you do not have it installed, run the following bash commands to download the latest release, install it, and relaunch the current bash shell to apply the relevant changes:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the latest Miniforge3 installer for the current OS and architecture</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.sh"</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the Miniforge3 installer silently (-b flag for batch mode)</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> Miniforge3-<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>-<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize mamba for shell usage</span></span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/miniforge3/bin/mamba</span> init</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart the shell to apply changes</span></span>
<span id="cb1-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span></span></code></pre></div>
</section>
<section id="create-a-python-environment" class="level4">
<h4 class="anchored" data-anchor-id="create-a-python-environment">Create a Python Environment</h4>
<p>Next, we will create and activate a Python 3.10 environment.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> hailo-compiler-env python=3.10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> activate hailo-compiler-env</span></code></pre></div>
</section>
<section id="install-the-dataflow-compiler" class="level4">
<h4 class="anchored" data-anchor-id="install-the-dataflow-compiler">Install the Dataflow Compiler</h4>
<p>We can install the Dataflow Compiler package once inside the mamba environment.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install hailo_dataflow_compiler-3.29.0-py3-none-linux_x86_64.whl</span></code></pre></div>
</section>
<section id="install-additional-dependencies" class="level4">
<h4 class="anchored" data-anchor-id="install-additional-dependencies">Install Additional Dependencies</h4>
<p>We will install a few additional dependencies for the conversion process to wrap up our environment setup.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install cjm_psl_utils cjm_pil_utils</span></code></pre></div>
</section>
</section>
<section id="getting-started-with-the-code" class="level3">
<h3 class="anchored" data-anchor-id="getting-started-with-the-code">Getting Started with the Code</h3>
<p>This tutorial walks through the conversion process in a Jupyter Notebook, which is available at the link below:</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/pytorch-yolox-object-detector-hailo-export.ipynb">pytorch-yolox-object-detector-hailo-export.ipynb</a></td>
</tr>
</tbody>
</table>
</section>
<section id="importing-the-required-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="importing-the-required-dependencies">Importing the Required Dependencies</h3>
<p>First, we will import the necessary Python packages.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb5-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb5-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb5-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb5-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb5-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Tuple, Optional, NamedTuple</span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import third-party libraries</span></span>
<span id="cb5-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, ImageDraw, ImageFont</span>
<span id="cb5-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm.auto <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import ONNX</span></span>
<span id="cb5-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnx</span>
<span id="cb5-17"></span>
<span id="cb5-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Hailo SDK dependencies</span></span>
<span id="cb5-19"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hailo_sdk_client <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ClientRunner, InferenceContext, CalibrationDataType</span>
<span id="cb5-20"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hailo_sdk_client.exposed_definitions <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SUPPORTED_HW_ARCHS</span>
<span id="cb5-21"></span>
<span id="cb5-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb5-23"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file, file_extract</span>
<span id="cb5-24"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img, get_img_files</span>
<span id="cb5-25"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.annotation <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> draw_bboxes</span></code></pre></div>
</section>
<section id="setting-up-the-project" class="level3">
<h3 class="anchored" data-anchor-id="setting-up-the-project">Setting Up the Project</h3>
<section id="set-the-directory-paths" class="level4">
<h4 class="anchored" data-anchor-id="set-the-directory-paths">Set the Directory Paths</h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The name for the project</span></span>
<span id="cb6-2">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"pytorch-yolox-object-detector"</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path for the project folder</span></span>
<span id="cb6-5">project_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the project directory if it does not already exist</span></span>
<span id="cb6-8">project_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb6-11">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(project_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"2024-09-08_19-22-32"</span>)</span>
<span id="cb6-12"></span>
<span id="cb6-13">pd.Series({</span>
<span id="cb6-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Project Directory:"</span>: project_dir,</span>
<span id="cb6-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checkpoint Directory:"</span>: checkpoint_dir,</span>
<span id="cb6-16">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table id="T_982ee">
<thead>
</thead>
<tbody>
<tr>
<th id="T_982ee_level0_row0" class="row_heading level0 row0">
Project Directory:
</th>
<td id="T_982ee_row0_col0" class="data row0 col0">
pytorch-yolox-object-detector
</td>
</tr>
<tr>
<th id="T_982ee_level0_row1" class="row_heading level0 row1">
Checkpoint Directory:
</th>
<td id="T_982ee_row1_col0" class="data row1 col0">
pytorch-yolox-object-detector/2024-09-08_19-22-32
</td>
</tr>
</tbody>
</table>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="Sample Files:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Sample Files:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>I made an ONNX model available on Hugging Face Hub with a colormap file in the repository linked below:
<ul>
<li><a href="https://huggingface.co/cj-mills/yolox-hagrid-onnx/tree/main">cj-mills/yolox-hagrid-onnx</a></li>
</ul></li>
</ul>
</div>
</div>
</section>
<section id="download-a-font-file" class="level4">
<h4 class="anchored" data-anchor-id="download-a-font-file">Download a Font File</h4>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the font file</span></span>
<span id="cb7-2">font_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KFOlCnqEu92Fr1MmEU9vAw.ttf'</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the font file</span></span>
<span id="cb7-5">download_file(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://fonts.gstatic.com/s/roboto/v30/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>font_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span></code></pre></div>
</section>
</section>
<section id="loading-the-checkpoint-data" class="level3">
<h3 class="anchored" data-anchor-id="loading-the-checkpoint-data">Loading the Checkpoint Data</h3>
<section id="load-the-colormap" class="level4">
<h4 class="anchored" data-anchor-id="load-the-colormap">Load the Colormap</h4>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The colormap path</span></span>
<span id="cb8-2">colormap_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*colormap.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON colormap data</span></span>
<span id="cb8-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(colormap_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb8-6">        colormap_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the JSON data to a dictionary        </span></span>
<span id="cb8-9">colormap_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]: item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colormap_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]}</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the class names from the colormap</span></span>
<span id="cb8-12">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(colormap_dict.keys())</span>
<span id="cb8-13"></span>
<span id="cb8-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of the colormap in integer format</span></span>
<span id="cb8-15">int_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> color) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colormap_dict.values()]</span></code></pre></div>
</section>
<section id="set-model-checkpoint-information" class="level4">
<h4 class="anchored" data-anchor-id="set-model-checkpoint-information">Set Model Checkpoint Information</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The onnx model path</span></span>
<span id="cb9-2">onnx_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.onnx'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set max stride value for processing output</span></span>
<span id="cb9-5">max_stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span></code></pre></div>
</section>
</section>
<section id="parsing" class="level3">
<h3 class="anchored" data-anchor-id="parsing">Parsing</h3>
<p>The first step in the conversion process is to parse our ONNX model to the Hailo Archive (HAR) format. This HAR file will contain the graph structure and weights for the model used by the Hailo Runtime (<a href="https://hailo.ai/products/hailo-software/hailo-ai-software-suite/#sw-hailort">HailoRT</a>).</p>
<section id="initialize-a-dataflow-compiler-api-client" class="level4">
<h4 class="anchored" data-anchor-id="initialize-a-dataflow-compiler-api-client">Initialize a Dataflow Compiler API client</h4>
<p>We parse the ONNX model using a Dataflow Compiler API client. We must specify the target Hailo accelerator when initializing the client. The SUPPORTED_HW_ARCHS constant stores the list of valid hardware architecture names.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display supported hardware architectures</span></span>
<span id="cb10-2">SUPPORTED_HW_ARCHS</span></code></pre></div>
<pre class="text"><code>['hailo8',
 'hailo8r',
 'hailo8l',
 'hailo15h',
 'hailo15m',
 'hailo15l',
 'hailo10h']</code></pre>
<p>For the Hailo-8L, we pass in hailo8l for the hardware architecture parameter.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a Dataflow Compiler API client</span></span>
<span id="cb12-2">runner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClientRunner(hw_arch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hailo8l"</span>)</span></code></pre></div>
</section>
<section id="selecting-an-input-resolution" class="level4">
<h4 class="anchored" data-anchor-id="selecting-an-input-resolution">Selecting an Input Resolution</h4>
<p>HailoRT does not support dynamic input resolutions, so we must specify one when parsing the model.</p>
<p>I will use the <a href="https://www.raspberrypi.com/products/camera-module-3/">Raspberry Pi Camera Module 3</a> for the demo, which has a <code>16:9</code> aspect ratio. Also, remember that the YOLOX model expects the input dimensions to be multiples of <code>32</code>.</p>
<p>Based on those constraints, I will use a resolution of <code>height:512 x width:288</code> for the input.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the input resolution for the model</span></span>
<span id="cb13-2">input_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span>)</span></code></pre></div>
</section>
<section id="parse-the-onnx-model" class="level4">
<h4 class="anchored" data-anchor-id="parse-the-onnx-model">Parse the ONNX Model</h4>
<p>After deciding on an input resolution, we can parse the ONNX model using the <a href="https://hailo.ai/developer-zone/documentation/v3-29-0/?sp_referrer=api%2Fbuild_api.html#hailo_sdk_client.runner.client_runner.ClientRunner.translate_onnx_model"><code>translate_onnx_model</code></a> method. We specify the path to the ONNX model, model name, input and output nodes, and input shape in <code>[batch_size, channels, height, width]</code> format.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse the ONNX Model</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This step translates the ONNX model to a format compatible with Hailo hardware</span></span>
<span id="cb14-3">hn, npz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> runner.translate_onnx_model(</span>
<span id="cb14-4">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(onnx_file_path),</span>
<span id="cb14-5">    onnx_file_path.stem,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the filename (without extension) as the model name</span></span>
<span id="cb14-6">    start_node_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Specify the input node name</span></span>
<span id="cb14-7">    end_node_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output'</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Specify the output node name</span></span>
<span id="cb14-8">    net_input_shapes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>input_sz[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]},  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define input shape: [batch_size, channels, height, width]</span></span>
<span id="cb14-9">)</span></code></pre></div>
<pre class="text"><code>[info] Translation started on ONNX model hagrid-sample-30k-384p-yolox_tiny
[info] Restored ONNX model hagrid-sample-30k-384p-yolox_tiny (completion time: 00:00:00.06)
[info] Extracted ONNXRuntime meta-data for Hailo model (completion time: 00:00:00.19)
[info] NMS structure of yolox (or equivalent architecture) was detected.
[info] In order to use HailoRT post-processing capabilities, these end node names should be used: /Sigmoid /Sigmoid_1 /model/bbox_head/multi_level_conv_reg.0/Conv /Sigmoid_2 /Sigmoid_3 /model/bbox_head/multi_level_conv_reg.1/Conv /Sigmoid_4 /Sigmoid_5 /model/bbox_head/multi_level_conv_reg.2/Conv.
[info] Start nodes mapped from original model: 'input': 'hagrid-sample-30k-384p-yolox_tiny/input_layer1'.
[info] End nodes mapped from original model: '/Transpose'.
[info] Translation completed on ONNX model hagrid-sample-30k-384p-yolox_tiny (completion time: 00:00:00.72)</code></pre>
</section>
<section id="inspect-har-output-shape" class="level4">
<h4 class="anchored" data-anchor-id="inspect-har-output-shape">Inspect HAR Output Shape</h4>
<p>If we compare the input and output shapes of the Hailo Archive to the original ONNX model, we can see the <code>translate_onnx_model</code> method converted the model to a channels-last format. We must account for this when processing the model output during inference.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get input and output shapes from the Hailo Archive (HAR)</span></span>
<span id="cb16-2">har_input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> runner.get_hn_dict()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'layers'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-sample-30k-384p-yolox_tiny/input_layer1'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input_shapes'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb16-3">har_output_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> runner.get_hn_dict()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'layers'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-sample-30k-384p-yolox_tiny/output_layer1'</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output_shapes'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb16-4"></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the original ONNX model</span></span>
<span id="cb16-6">onnx_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx.load_model(onnx_file_path)</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract input and output shapes from the ONNX model</span></span>
<span id="cb16-9">onnx_input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dim.dim_value <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> onnx_model.graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>.tensor_type.shape.dim]</span>
<span id="cb16-10">onnx_output_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [dim.dim_value <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dim <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> onnx_model.graph.output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>.tensor_type.shape.dim]</span>
<span id="cb16-11"></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame to compare ONNX and HAR shapes</span></span>
<span id="cb16-13">pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ONNX"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_shape:"</span>:onnx_input_shape, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_shape:"</span>: onnx_output_shape},</span>
<span id="cb16-14">              <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HAR"</span>: {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input_shape:"</span>:har_input_shape, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_shape:"</span>: har_output_shape}})</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
ONNX
</th>
<th>
HAR
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
input_shape:
</th>
<td>
[1, 3, 0, 0]
</td>
<td>
[-1, 288, 512, 3]
</td>
</tr>
<tr>
<th>
output_shape:
</th>
<td>
[1, 0, 24]
</td>
<td>
[-1, 1, 24, 3024]
</td>
</tr>
</tbody>
</table>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The zeros in the onnx shapes indicate dynamic axes.</p>
</div>
</div>
</section>
<section id="save-the-hailo-archive" class="level4">
<h4 class="anchored" data-anchor-id="save-the-hailo-archive">Save the Hailo Archive</h4>
<p>We can then save the Hailo Archive using the <a href="https://hailo.ai/developer-zone/documentation/v3-29-0/?sp_referrer=api%2Fbuild_api.html#hailo_sdk_client.runner.client_runner.ClientRunner.save_har"><code>save_har</code></a> method.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the Hailo Archive (HAR) file</span></span>
<span id="cb17-2">hailo_model_har_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_hailo_model.har"</span></span>
<span id="cb17-3">hailo_model_har_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_file_path.parent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>hailo_model_har_name</span>
<span id="cb17-4">runner.save_har(hailo_model_har_path)</span></code></pre></div>
<pre class="text"><code>[info] Saved HAR to: /mnt/ACASIS_4TB/Projects/GitHub/pytorch-yolox-object-detection-tutorial-code/notebooks/pytorch-yolox-object-detector/2024-09-08_19-22-32/hagrid-sample-30k-384p-yolox_tiny_hailo_model.har</code></pre>
</section>
<section id="visualize-the-graph-structure" class="level4">
<h4 class="anchored" data-anchor-id="visualize-the-graph-structure">Visualize the Graph Structure</h4>
<p>After saving the HAR file, we can visualize its graph structure using the Hailo visualizer tool. The visualizer tool creates an SVG of the graph that we can optionally view in the browser.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize the Graph Structure</span></span>
<span id="cb19-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>hailo visualizer {hailo_model_har_path} <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>no<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>browser</span></code></pre></div>
<pre class="text"><code>[[32minfo[0m] Current Time: 12:00:34, 10/14/24
[[32minfo[0m] CPU: Architecture: x86_64, Model: 11th Gen Intel(R) Core(TM) i7-11700K @ 3.60GHz, Number Of Cores: 16, Utilization: 5.2%
[[32minfo[0m] Memory: Total: 31GB, Available: 20GB
[[32minfo[0m] System info: OS: Linux, Kernel: 6.8.0-45-generic
[[32minfo[0m] Hailo DFC Version: 3.29.0
[[32minfo[0m] HailoRT Version: Not Installed
[[32minfo[0m] PCIe: No Hailo PCIe device was found
[[32minfo[0m] Running `hailo visualizer pytorch-yolox-object-detector/2024-09-08_19-22-32/hagrid-sample-30k-384p-yolox_tiny_hailo_model.har --no-browser`</code></pre>
<p>Now that we have our Hailo Archive file, we can move on to the optimization step.</p>
</section>
</section>
<section id="model-optimization" class="level3">
<h3 class="anchored" data-anchor-id="model-optimization">Model Optimization</h3>
<p>The optimization process involves converting our full-precision HAR file to a quantized 8-bit HAR file.</p>
<section id="quantization-process" class="level4">
<h4 class="anchored" data-anchor-id="quantization-process">Quantization Process</h4>
<p>Quantizing our model involves converting the original 32-bit floating point (float32) values to 8-bit integer (int8) values. Float32 precision allows for a significantly greater range of possible values versus int8. To find the optimal mapping from float32 to int8, we must compute the range of float32 values present in the model.</p>
<p>The float32 values in our model fall into two categories:</p>
<ol type="1">
<li>Model weights: Static values that do not change after training.</li>
<li>Activation values: Dynamic values that depend on the input fed to the model and change during inference.</li>
</ol>
<p>To accurately quantize both weights and activations, we need to:</p>
<ol type="1">
<li>Analyze the range of weight values across the entire model.</li>
<li>Estimate a suitable range for activation values by feeding sample inputs through the model and recording the resulting activations. This process generates what we call calibration data.</li>
</ol>
<p>The Dataflow Compiler handles this process for us. It determines the best way to map the original float32 values to int8, aiming to preserve model accuracy while reducing its size and computational requirements. All we need to provide is the calibration data.</p>
<p>We will use a subset of images from the original training dataset to generate this calibration data. This approach ensures that our quantized model can handle the types of inputs it is likely to encounter in real-world usage.</p>
<p>By quantizing our model in this way, we can significantly reduce its memory footprint and increase its inference speed, often with minimal loss in accuracy.</p>
</section>
<section id="set-the-dataset-path" class="level4">
<h4 class="anchored" data-anchor-id="set-the-dataset-path">Set the Dataset Path</h4>
<p>We first need to construct the name for the Hugging Face Hub dataset and define where to download and extract the dataset.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store datasets</span></span>
<span id="cb21-2">dataset_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/Storage/Datasets"</span>)</span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dataset directory if it does not exist</span></span>
<span id="cb21-4">dataset_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb21-5"></span>
<span id="cb21-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store archive files</span></span>
<span id="cb21-7">archive_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../Archive'</span></span>
<span id="cb21-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the archive directory if it does not exist</span></span>
<span id="cb21-9">archive_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb21-10"></span>
<span id="cb21-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the dataset</span></span>
<span id="cb21-12">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-sample-30k-384p'</span></span>
<span id="cb21-13"></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset name by combining the username and dataset name</span></span>
<span id="cb21-15">hf_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'cj-mills/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb21-16"></span>
<span id="cb21-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the zip file that contains the dataset</span></span>
<span id="cb21-18">archive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip'</span>)</span>
<span id="cb21-19"></span>
<span id="cb21-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the directory where the dataset will be extracted</span></span>
<span id="cb21-21">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb21-22"></span>
<span id="cb21-23">pd.Series({</span>
<span id="cb21-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HuggingFace Dataset:"</span>: hf_dataset, </span>
<span id="cb21-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Archive Path:"</span>: archive_path, </span>
<span id="cb21-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset Path:"</span>: dataset_path</span>
<span id="cb21-27">}).to_frame().style.hide(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'columns'</span>)</span></code></pre></div>
<style type="text/css">
</style>
<table id="T_dcb5a">
<thead>
</thead>
<tbody>
<tr>
<th id="T_dcb5a_level0_row0" class="row_heading level0 row0">
HuggingFace Dataset:
</th>
<td id="T_dcb5a_row0_col0" class="data row0 col0">
cj-mills/hagrid-sample-30k-384p
</td>
</tr>
<tr>
<th id="T_dcb5a_level0_row1" class="row_heading level0 row1">
Archive Path:
</th>
<td id="T_dcb5a_row1_col0" class="data row1 col0">
/mnt/Storage/Datasets/../Archive/hagrid-sample-30k-384p.zip
</td>
</tr>
<tr>
<th id="T_dcb5a_level0_row2" class="row_heading level0 row2">
Dataset Path:
</th>
<td id="T_dcb5a_row2_col0" class="data row2 col0">
/mnt/Storage/Datasets/hagrid-sample-30k-384p
</td>
</tr>
</tbody>
</table>
</section>
<section id="download-the-dataset" class="level4">
<h4 class="anchored" data-anchor-id="download-the-dataset">Download the Dataset</h4>
<p>We can now download the dataset archive file and extract the dataset. We can delete the archive afterward to save space.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the HuggingFace Hub dataset URL</span></span>
<span id="cb22-2">dataset_url <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://huggingface.co/datasets/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>hf_dataset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/resolve/main/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip"</span></span>
<span id="cb22-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"HuggingFace Dataset URL: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_url<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-4"></span>
<span id="cb22-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set whether to delete the archive file after extracting the dataset</span></span>
<span id="cb22-6">delete_archive <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb22-7"></span>
<span id="cb22-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the dataset if not present</span></span>
<span id="cb22-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> dataset_path.is_dir():</span>
<span id="cb22-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dataset folder already exists"</span>)</span>
<span id="cb22-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Downloading dataset..."</span>)</span>
<span id="cb22-13">    download_file(dataset_url, archive_dir)    </span>
<span id="cb22-14">    </span>
<span id="cb22-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Extracting dataset..."</span>)</span>
<span id="cb22-16">    file_extract(fname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>archive_path, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_dir)</span>
<span id="cb22-17">    </span>
<span id="cb22-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Delete the archive if specified</span></span>
<span id="cb22-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> delete_archive: archive_path.unlink()</span></code></pre></div>
<pre class="text"><code>HuggingFace Dataset URL: https://huggingface.co/datasets/cj-mills/hagrid-sample-30k-384p/resolve/main/hagrid-sample-30k-384p.zip
Dataset folder already exists</code></pre>
</section>
<section id="get-image-file-paths" class="level4">
<h4 class="anchored" data-anchor-id="get-image-file-paths">Get Image File Paths</h4>
<p>Once downloaded, we can get the paths to the images in the dataset.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of all JPG image files in the dataset</span></span>
<span id="cb24-2">img_file_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(dataset_path.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./**/*.jpg"</span>))</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of image files</span></span>
<span id="cb24-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of Images: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_file_paths)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-6"></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the first five entries from the dictionary using a Pandas DataFrame</span></span>
<span id="cb24-8">pd.DataFrame(img_file_paths).head()</span></code></pre></div>
<pre class="text"><code>Number of Images: 31833</code></pre>
<div style="overflow-x:auto; max-height:500px">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/00005c9c-3548-4a8f-9d0b-2dd4aff37fc9.jpg
</td>
</tr>
<tr>
<th>
1
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/0020a3db-82d8-47aa-8642-2715d4744db5.jpg
</td>
</tr>
<tr>
<th>
2
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/004ac93f-0f7c-49a4-aadc-737e0ad4273c.jpg
</td>
</tr>
<tr>
<th>
3
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/006cac69-d3f0-47f9-aac9-38702d038ef1.jpg
</td>
</tr>
<tr>
<th>
4
</th>
<td>
/mnt/Storage/Datasets/hagrid-sample-30k-384p/hagrid_30k/train_val_call/00973fac-440e-4a56-b60c-2a06d5fb155d.jpg
</td>
</tr>
</tbody>
</table>
</div>
</section>
<section id="select-sample-images" class="level4">
<h4 class="anchored" data-anchor-id="select-sample-images">Select Sample Images</h4>
<p>Using every image in the dataset for the calibration process would be unnecessary and time-consuming, so we’ll select a random subset. The Dataflow Compiler documentation recommends at least <code>1024</code> samples.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">random.seed(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set random seed for consistency </span></span>
<span id="cb26-2">sample_img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.sample(img_file_paths, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span>)</span></code></pre></div>
</section>
<section id="define-a-preprocessing-function" class="level4">
<h4 class="anchored" data-anchor-id="define-a-preprocessing-function">Define a Preprocessing Function</h4>
<p>Now that we have our sample images, we will create a function to ensure they are in the expected format for the optimization process.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> preproc(image, output_height, output_width, resize_side):</span>
<span id="cb27-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function resizes the input image while maintaining its aspect ratio,</span></span>
<span id="cb27-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    crops (or pads) it to the desired output size, and normalizes pixel values</span></span>
<span id="cb27-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    to the range [0, 1].</span></span>
<span id="cb27-6"></span>
<span id="cb27-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb27-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        image (PIL.Image.Image or np.ndarray): The input image to preprocess.</span></span>
<span id="cb27-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        output_height (int): The desired output height of the image.</span></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        output_width (int): The desired output width of the image.</span></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        resize_side (int): The size to which the smallest side of the image is resized.</span></span>
<span id="cb27-12"></span>
<span id="cb27-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb27-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        np.ndarray: The preprocessed image as a NumPy array of shape (output_height, output_width, 3),</span></span>
<span id="cb27-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                    with pixel values normalized to the range [0, 1].</span></span>
<span id="cb27-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb27-17"></span>
<span id="cb27-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure the image is a NumPy array</span></span>
<span id="cb27-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(image, Image.Image):</span>
<span id="cb27-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert PIL Image to NumPy array</span></span>
<span id="cb27-21">        image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(image)</span>
<span id="cb27-22"></span>
<span id="cb27-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the original image dimensions</span></span>
<span id="cb27-24">    h, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.shape[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># h = height, w = width</span></span>
<span id="cb27-25"></span>
<span id="cb27-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the scaling factor to resize the image</span></span>
<span id="cb27-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We want the smallest side to be 'resize_side' pixels</span></span>
<span id="cb27-28">    scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_side <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(h, w)</span>
<span id="cb27-29"></span>
<span id="cb27-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the new image dimensions after resizing</span></span>
<span id="cb27-31">    new_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> scale)</span>
<span id="cb27-32">    new_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> scale)</span>
<span id="cb27-33"></span>
<span id="cb27-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize the image using bilinear interpolation for smoother results</span></span>
<span id="cb27-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the NumPy array back to a PIL Image for resizing</span></span>
<span id="cb27-36">    resized_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.fromarray(image).resize((new_w, new_h), Image.BILINEAR)</span>
<span id="cb27-37"></span>
<span id="cb27-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the resized image back to a NumPy array</span></span>
<span id="cb27-39">    resized_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(resized_image)</span>
<span id="cb27-40"></span>
<span id="cb27-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate coordinates for center cropping</span></span>
<span id="cb27-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We want to crop the center 'output_height' x 'output_width' area</span></span>
<span id="cb27-43">    top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (new_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> output_height) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Starting y-coordinate</span></span>
<span id="cb27-44">    left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (new_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> output_width) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Starting x-coordinate</span></span>
<span id="cb27-45">    bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_height        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ending y-coordinate</span></span>
<span id="cb27-46">    right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_width         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ending x-coordinate</span></span>
<span id="cb27-47"></span>
<span id="cb27-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if we need to pad the image (if the crop area extends beyond the image boundaries)</span></span>
<span id="cb27-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb27-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate how much padding is needed on each side</span></span>
<span id="cb27-51">        pad_top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>top)                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Positive value indicates padding needed</span></span>
<span id="cb27-52">        pad_bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_h)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Padding needed at the bottom</span></span>
<span id="cb27-53">        pad_left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>left)              <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Padding needed on the left</span></span>
<span id="cb27-54">        pad_right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_w)     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Padding needed on the right</span></span>
<span id="cb27-55"></span>
<span id="cb27-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pad the image with zeros (black pixels) on each side</span></span>
<span id="cb27-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The padding tuple format is ((top, bottom), (left, right), (channel_start, channel_end))</span></span>
<span id="cb27-58">        resized_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.pad(</span>
<span id="cb27-59">            resized_image,</span>
<span id="cb27-60">            pad_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>((pad_top, pad_bottom), (pad_left, pad_right), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)),</span>
<span id="cb27-61">            mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'constant'</span>,</span>
<span id="cb27-62">            constant_values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb27-63">        )</span>
<span id="cb27-64"></span>
<span id="cb27-65">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># After padding, update the crop coordinates to the padded image</span></span>
<span id="cb27-66">        top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pad_top</span>
<span id="cb27-67">        left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pad_left</span>
<span id="cb27-68">        bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_height</span>
<span id="cb27-69">        right <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> left <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_width</span>
<span id="cb27-70"></span>
<span id="cb27-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crop the image to the desired output size</span></span>
<span id="cb27-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This will extract the central region of the image</span></span>
<span id="cb27-73">    cropped_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resized_image[top:bottom, left:right]</span>
<span id="cb27-74"></span>
<span id="cb27-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize pixel values to the range [0, 1]</span></span>
<span id="cb27-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert pixel values to float32 and divide by 255</span></span>
<span id="cb27-77">    normalized_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cropped_image.astype(np.float32) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span></span>
<span id="cb27-78"></span>
<span id="cb27-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the preprocessed image</span></span>
<span id="cb27-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> normalized_image</span></code></pre></div>
</section>
<section id="verify-the-preprocessing-function" class="level4">
<h4 class="anchored" data-anchor-id="verify-the-preprocessing-function">Verify the Preprocessing Function</h4>
<p>We can test the preprocessing function on one of the sample images.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select a sample image</span></span>
<span id="cb28-2">sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(sample_img_paths[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb28-3">sample_img</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/images/output_60_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the sample image</span></span>
<span id="cb29-2">img_preproc_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preproc(sample_img, output_height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], output_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], resize_side<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb29-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"processed_inp.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img_preproc_np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Visualize the processed sample image</span></span>
<span id="cb29-5">Image.fromarray((img_preproc_np<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>).astype(np.uint8))</span></code></pre></div>
<pre class="text"><code>processed_inp.shape: (288, 512, 3)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/images/output_61_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="generate-a-calibration-dataset" class="level4">
<h4 class="anchored" data-anchor-id="generate-a-calibration-dataset">Generate a Calibration Dataset</h4>
<p>Next, we will generate our dataset of preprocessing input samples and store it in a NumPy array.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an empty numpy array to store the calibration dataset</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shape: (number of images, height, width, color channels)</span></span>
<span id="cb31-3">calib_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros((<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_img_paths), input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)</span>
<span id="cb31-4"></span>
<span id="cb31-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate through each image path in the sample_img_paths list</span></span>
<span id="cb31-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx, img_path <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(tqdm(sample_img_paths)):</span>
<span id="cb31-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open and read the image file</span></span>
<span id="cb31-8">    img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_path))</span>
<span id="cb31-9">    </span>
<span id="cb31-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Preprocess the image</span></span>
<span id="cb31-11">    img_preproc_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> preproc(img, output_height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], output_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], resize_side<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>input_sz[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb31-12">    </span>
<span id="cb31-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the preprocessed image in the calibration dataset</span></span>
<span id="cb31-14">    calib_dataset[idx, :, :, :] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_preproc_np</span></code></pre></div>
</section>
<section id="initialize-a-hailo-dataflow-compiler-api-client" class="level4">
<h4 class="anchored" data-anchor-id="initialize-a-hailo-dataflow-compiler-api-client">Initialize a Hailo Dataflow Compiler API Client</h4>
<p>After generating the calibration dataset, we will initialize a DFC API client with the Hailo Archive file.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># By default it uses the hw_arch that is saved on the HAR. For overriding, use the hw_arch flag.</span></span>
<span id="cb32-2">runner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClientRunner(har<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(hailo_model_har_path))</span></code></pre></div>
</section>
<section id="quantize-the-hailo-archive" class="level4">
<h4 class="anchored" data-anchor-id="quantize-the-hailo-archive">Quantize the Hailo Archive</h4>
<p>We use the <code>optimize</code> method to quantize the Hailo Archive using the calibration data.</p>
<div class="callout callout-style-default callout-note callout-titled" title="Input Normalization">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Input Normalization
</div>
</div>
<div class="callout-body-container callout-body">
<p>Our ONNX model includes the required input normalization step. Those following along with an ONNX model that does not perform input normalization can create a model script to add this step to the Hailo Archive.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Default</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Add Normalization Step</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call Optimize to perform the optimization process</span></span>
<span id="cb33-2">runner.optimize(calib_dataset)</span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a model script that tells the compiler to add a normalization on the beginning of the model</span></span>
<span id="cb34-2">alls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"normalization1 = normalization([0.5, 0.5, 0.5], [1.0, 1.0, 1.0])</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb34-3"></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model script to ClientRunner so it will be considered on optimization</span></span>
<span id="cb34-5">runner.load_model_script(alls)</span>
<span id="cb34-6"></span>
<span id="cb34-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call optimize to perform the optimization process</span></span>
<span id="cb34-8">runner.optimize(calib_dataset)</span></code></pre></div>
</div>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled" title="Model Optimization Console Output">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-5-contents" aria-controls="callout-5" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Model Optimization Console Output
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-5" class="callout-5-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div style="overflow-x:auto; max-height:500px">
<pre class="text"><code>[info] Starting Model Optimization


2024-10-14 16:40:58.891458: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:996] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-10-14 16:40:58.919769: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1956] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...
2024-10-14 16:40:59.068703: I tensorflow/compiler/xla/stream_executor/cuda/cuda_gpu_executor.cc:996] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero. See more at https://github.com/torvalds/linux/blob/v6.0/Documentation/ABI/testing/sysfs-bus-pci#L344-L355
2024-10-14 16:40:59.091439: W tensorflow/core/common_runtime/gpu/gpu_device.cc:1956] Cannot dlopen some GPU libraries. Please make sure the missing libraries mentioned above are installed properly if you would like to use GPU. Follow the guide at https://www.tensorflow.org/install/gpu for how to download and setup the required libraries for your platform.
Skipping registering GPU devices...


[warning] Reducing optimization level to 0 (the accuracy won't be optimized and compression won't be used) because there's no available GPU
[warning] Running model optimization with zero level of optimization is not recommended for production use and might lead to suboptimal accuracy results
[info] Model received quantization params from the hn
[info] Starting Mixed Precision
[info] Mixed Precision is done (completion time is 00:00:00.43)
[info] LayerNorm Decomposition skipped
[info] Starting Statistics Collector
[info] Using dataset with 64 entries for calibration


Calibration:   0%|                                                            | 0/64 [00:00&lt;?, ?entries/s]2024-10-14 16:41:06.120679: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype int32
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:06.137874: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:   2%|▊                                                   | 1/64 [00:18&lt;19:28, 18.54s/entries]2024-10-14 16:41:21.430751: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.471131: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.511112: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:   6%|███▎                                                | 4/64 [00:18&lt;03:32,  3.54s/entries]2024-10-14 16:41:21.550471: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.591526: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.632570: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  11%|█████▋                                              | 7/64 [00:18&lt;01:34,  1.66s/entries]2024-10-14 16:41:21.674128: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.713795: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.754394: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  16%|███████▉                                           | 10/64 [00:18&lt;00:51,  1.04entries/s]2024-10-14 16:41:21.797370: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.839853: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.881414: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  20%|██████████▎                                        | 13/64 [00:19&lt;00:31,  1.64entries/s]2024-10-14 16:41:21.924537: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:21.966733: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.006793: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  25%|████████████▊                                      | 16/64 [00:19&lt;00:19,  2.45entries/s]2024-10-14 16:41:22.046813: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.088094: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.128298: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  30%|███████████████▏                                   | 19/64 [00:19&lt;00:12,  3.52entries/s]2024-10-14 16:41:22.167066: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.209148: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.249356: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  34%|█████████████████▌                                 | 22/64 [00:19&lt;00:08,  4.87entries/s]2024-10-14 16:41:22.288732: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.326467: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.366214: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  39%|███████████████████▉                               | 25/64 [00:19&lt;00:05,  6.54entries/s]2024-10-14 16:41:22.408393: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.448734: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.487582: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  44%|██████████████████████▎                            | 28/64 [00:19&lt;00:04,  8.50entries/s]2024-10-14 16:41:22.526808: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.567167: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.606615: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  48%|████████████████████████▋                          | 31/64 [00:19&lt;00:03, 10.67entries/s]2024-10-14 16:41:22.646712: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.687785: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.728979: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  53%|███████████████████████████                        | 34/64 [00:19&lt;00:02, 12.89entries/s]2024-10-14 16:41:22.769389: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.810197: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.848900: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  58%|█████████████████████████████▍                     | 37/64 [00:20&lt;00:01, 15.12entries/s]2024-10-14 16:41:22.889144: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.928209: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:22.966166: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  62%|███████████████████████████████▉                   | 40/64 [00:20&lt;00:01, 17.18entries/s]2024-10-14 16:41:23.009711: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.050717: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.091871: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  67%|██████████████████████████████████▎                | 43/64 [00:20&lt;00:01, 18.88entries/s]2024-10-14 16:41:23.131485: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.173946: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.214569: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  72%|████████████████████████████████████▋              | 46/64 [00:20&lt;00:00, 20.27entries/s]2024-10-14 16:41:23.254185: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.295213: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.335322: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  77%|███████████████████████████████████████            | 49/64 [00:20&lt;00:00, 21.53entries/s]2024-10-14 16:41:23.373498: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.413181: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.452769: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  81%|█████████████████████████████████████████▍         | 52/64 [00:20&lt;00:00, 22.51entries/s]2024-10-14 16:41:23.492637: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.532348: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.572460: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  86%|███████████████████████████████████████████▊       | 55/64 [00:20&lt;00:00, 23.19entries/s]2024-10-14 16:41:23.613164: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.655717: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.702068: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  91%|██████████████████████████████████████████████▏    | 58/64 [00:20&lt;00:00, 23.12entries/s]2024-10-14 16:41:23.743654: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.784390: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.826286: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration:  95%|████████████████████████████████████████████████▌  | 61/64 [00:20&lt;00:00, 23.45entries/s]2024-10-14 16:41:23.867680: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.909671: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
2024-10-14 16:41:23.952654: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype float and shape [1,288,512,3]
     [[{{node Placeholder/_0}}]]
Calibration: 100%|███████████████████████████████████████████████████| 64/64 [00:21&lt;00:00,  3.03entries/s]

[info] Statistics Collector is done (completion time is 00:00:22.37)
[info] Starting Fix zp_comp Encoding
[info] Fix zp_comp Encoding is done (completion time is 00:00:00.00)
[info] Matmul Equalization skipped
[info] No shifts available for layer hagrid-sample-30k-384p-yolox_tiny/conv79/conv_op, using max shift instead. delta=0.0653
[info] No shifts available for layer hagrid-sample-30k-384p-yolox_tiny/conv79/conv_op, using max shift instead. delta=0.0327
[info] Finetune encoding skipped
[info] Bias Correction skipped
[info] Adaround skipped
[info] Quantization-Aware Fine-Tuning skipped
[info] Layer Noise Analysis skipped
[info] The calibration set seems to not be normalized, because the values range is [(0.0, 1.0), (0.0, 1.0), (0.0, 1.0)].
Since the neural core works in 8-bit (between 0 to 255), a quantization will occur on the CPU of the runtime platform.
Add a normalization layer to the model to offload the normalization to the neural core.
Refer to the user guide Hailo Dataflow Compiler user guide / Model Optimization / Optimization Related Model Script Commands / model_modification_commands / normalization for details.
[info] Model Optimization is done</code></pre>
</div>
</div>
</div>
</div>
</section>
<section id="save-the-quantized-hailo-archive" class="level4">
<h4 class="anchored" data-anchor-id="save-the-quantized-hailo-archive">Save the Quantized Hailo Archive</h4>
<p>After the optimization process finishes, we can save the quantized Hailo Archive using the <code>save_har</code> method.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the result state to a Quantized HAR file</span></span>
<span id="cb36-2">quantized_model_har_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_file_path.parent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_quantized_model.har"</span></span>
<span id="cb36-3">runner.save_har(quantized_model_har_path)</span></code></pre></div>
<pre class="text"><code>[info] Saved HAR to: /mnt/ACASIS_4TB/Projects/GitHub/pytorch-yolox-object-detection-tutorial-code/notebooks/pytorch-yolox-object-detector/2024-09-08_19-22-32/hagrid-sample-30k-384p-yolox_tiny_quantized_model.har</code></pre>
<p>As a final step, we should perform inference with the quantized model to verify it maintains sufficient accuracy.</p>
</section>
<section id="define-functions-to-handle-arbitrary-input-resolutions" class="level4">
<h4 class="anchored" data-anchor-id="define-functions-to-handle-arbitrary-input-resolutions">Define Functions to Handle Arbitrary Input Resolutions</h4>
<p>The images fed to the model during inference may not always be the target resolution or aspect ratio. Therefore, we will create some utility functions to handle arbitrary input resolutions.</p>
<p>We will keep track of the offset and scaling values to adjust the predicted bounding boxes to the source image.</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> ImageTransformData(NamedTuple):</span>
<span id="cb38-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A data class that stores transformation information applied to an image.</span></span>
<span id="cb38-4"></span>
<span id="cb38-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Attributes:</span></span>
<span id="cb38-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        offset (Tuple[int, int]): The (x, y) offset where the resized image was pasted.</span></span>
<span id="cb38-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        scale (float): The scaling factor applied to the original image.</span></span>
<span id="cb38-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb38-9">    offset: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]</span>
<span id="cb38-10">    scale: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span></span></code></pre></div>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> resize_and_pad(</span>
<span id="cb39-2">    image: Image.Image,</span>
<span id="cb39-3">    target_sz: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>],</span>
<span id="cb39-4">    return_transform_data: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb39-5">    fill_color: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb39-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Tuple[Image.Image, Optional[ImageTransformData]]:</span>
<span id="cb39-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb39-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Resize an image while maintaining its aspect ratio and pad it to fit the target size.</span></span>
<span id="cb39-9"></span>
<span id="cb39-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb39-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        image (Image.Image): The original PIL Image to be resized and padded.</span></span>
<span id="cb39-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        target_sz (Tuple[int, int]): The desired size (width, height) for the output image.</span></span>
<span id="cb39-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        return_transform_data (bool, optional): If True, returns transformation data (offset and scale).</span></span>
<span id="cb39-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fill_color (Tuple[int, int, int], optional): The color to use for padding (default is white).</span></span>
<span id="cb39-15"></span>
<span id="cb39-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb39-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Tuple[Image.Image, Optional[ImageTransformData]]: The resized and padded image,</span></span>
<span id="cb39-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        and optionally the transformation data.</span></span>
<span id="cb39-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb39-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack the target size into width and height</span></span>
<span id="cb39-21">    target_width, target_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_sz</span>
<span id="cb39-22"></span>
<span id="cb39-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the original image size</span></span>
<span id="cb39-24">    orig_width, orig_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.size</span>
<span id="cb39-25"></span>
<span id="cb39-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the aspect ratios of the original and target images</span></span>
<span id="cb39-27">    aspect_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> orig_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> orig_height</span>
<span id="cb39-28">    target_aspect_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_height</span>
<span id="cb39-29"></span>
<span id="cb39-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Determine new size while maintaining aspect ratio</span></span>
<span id="cb39-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> aspect_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> target_aspect_ratio:</span>
<span id="cb39-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the original image is wider than the target aspect ratio, limit by width</span></span>
<span id="cb39-33">        new_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_width</span>
<span id="cb39-34">        new_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(new_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> aspect_ratio)</span>
<span id="cb39-35">        scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> orig_width</span>
<span id="cb39-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb39-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the original image is taller than the target aspect ratio, limit by height</span></span>
<span id="cb39-38">        new_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_height</span>
<span id="cb39-39">        new_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(new_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> aspect_ratio)</span>
<span id="cb39-40">        scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> orig_height</span>
<span id="cb39-41"></span>
<span id="cb39-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize the image to the new dimensions using high-quality downsampling filter</span></span>
<span id="cb39-43">    resized_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.resize((new_width, new_height), Image.LANCZOS)</span>
<span id="cb39-44"></span>
<span id="cb39-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new image with the target size and fill it with the fill color</span></span>
<span id="cb39-46">    padded_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>, target_sz, fill_color)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># White background by default</span></span>
<span id="cb39-47"></span>
<span id="cb39-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the position to paste the resized image onto the padded image to center it</span></span>
<span id="cb39-49">    paste_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (target_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_width) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb39-50">    paste_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (target_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_height) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb39-51"></span>
<span id="cb39-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Paste the resized image onto the center of the padded image</span></span>
<span id="cb39-53">    padded_image.paste(resized_image, (paste_x, paste_y))</span>
<span id="cb39-54"></span>
<span id="cb39-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> return_transform_data:</span>
<span id="cb39-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If requested, create transformation data to return</span></span>
<span id="cb39-57">        transform_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageTransformData(offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(paste_x, paste_y), scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>scale)</span>
<span id="cb39-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> padded_image, transform_data</span>
<span id="cb39-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb39-60">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> padded_image, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> adjust_bbox(</span>
<span id="cb40-2">    bbox: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>],</span>
<span id="cb40-3">    transform_data: ImageTransformData</span>
<span id="cb40-4">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb40-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb40-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Adjust a bounding box according to the transformation data (offset and scale).</span></span>
<span id="cb40-7"></span>
<span id="cb40-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb40-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bbox (Tuple[float, float, float, float]): The original bounding box as (x, y, width, height).</span></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        transform_data (ImageTransformData): The transformation data containing offset and scale.</span></span>
<span id="cb40-11"></span>
<span id="cb40-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb40-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Tuple[float, float, float, float]: The adjusted bounding box.</span></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb40-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack the bounding box coordinates and size</span></span>
<span id="cb40-16">    x, y, w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bbox</span>
<span id="cb40-17"></span>
<span id="cb40-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack the transformation data</span></span>
<span id="cb40-19">    offset_x, offset_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data.offset</span>
<span id="cb40-20">    scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data.scale</span>
<span id="cb40-21"></span>
<span id="cb40-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust the coordinates by subtracting the offset and dividing by the scale</span></span>
<span id="cb40-23">    adjusted_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offset_x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb40-24">    adjusted_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offset_y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb40-25"></span>
<span id="cb40-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust the size by dividing by the scale</span></span>
<span id="cb40-27">    adjusted_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb40-28">    adjusted_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb40-29"></span>
<span id="cb40-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (adjusted_x, adjusted_y, adjusted_w, adjusted_h)</span></code></pre></div>
</section>
<section id="define-postprocessing-functions" class="level4">
<h4 class="anchored" data-anchor-id="define-postprocessing-functions">Define Postprocessing Functions</h4>
<p>Next, we will redefine the same utility functions from the previous tutorial.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_output_grids_np(height, width, strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>]):</span>
<span id="cb41-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb41-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate a numpy array containing grid coordinates and strides for a given height and width.</span></span>
<span id="cb41-4"></span>
<span id="cb41-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb41-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        height (int): The height of the image.</span></span>
<span id="cb41-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        width (int): The width of the image.</span></span>
<span id="cb41-8"></span>
<span id="cb41-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb41-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        np.ndarray: A numpy array containing grid coordinates and strides.</span></span>
<span id="cb41-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb41-12"></span>
<span id="cb41-13">    all_coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb41-14"></span>
<span id="cb41-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stride <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strides:</span>
<span id="cb41-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the grid height and width</span></span>
<span id="cb41-17">        grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb41-18">        grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb41-19"></span>
<span id="cb41-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate grid coordinates</span></span>
<span id="cb41-21">        g1, g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(np.arange(grid_height), np.arange(grid_width), indexing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij'</span>)</span>
<span id="cb41-22"></span>
<span id="cb41-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an array of strides</span></span>
<span id="cb41-24">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((grid_height, grid_width), stride)</span>
<span id="cb41-25"></span>
<span id="cb41-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stack the coordinates along with the stride</span></span>
<span id="cb41-27">        coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.stack((g0.flatten(), g1.flatten(), s.flatten()), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb41-28"></span>
<span id="cb41-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append to the list</span></span>
<span id="cb41-30">        all_coordinates.append(coordinates)</span>
<span id="cb41-31"></span>
<span id="cb41-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate all arrays in the list along the first dimension</span></span>
<span id="cb41-33">    output_grids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(all_coordinates, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb41-34"></span>
<span id="cb41-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> output_grids</span></code></pre></div>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_boxes_and_probs(model_output:np.ndarray, output_grids:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb42-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb42-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculate the bounding boxes and their probabilities.</span></span>
<span id="cb42-4"></span>
<span id="cb42-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb42-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    model_output (numpy.ndarray): The output of the model.</span></span>
<span id="cb42-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_grids (numpy.ndarray): The output grids.</span></span>
<span id="cb42-8"></span>
<span id="cb42-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb42-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    numpy.ndarray: The array containing the bounding box coordinates, class labels, and maximum probabilities.</span></span>
<span id="cb42-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb42-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the bounding box coordinates</span></span>
<span id="cb42-13">    box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (model_output[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_grids[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb42-14">    box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb42-15"></span>
<span id="cb42-16">    x0, y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> np.split(box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb42-17">    w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> np.split(box_sizes, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb42-18"></span>
<span id="cb42-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the probabilities for each class</span></span>
<span id="cb42-20">    box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb42-21">    box_cls_scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:]</span>
<span id="cb42-22">    box_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(box_objectness, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_scores</span>
<span id="cb42-23"></span>
<span id="cb42-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the maximum probability and corresponding class for each proposal</span></span>
<span id="cb42-25">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb42-26">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb42-27"></span>
<span id="cb42-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.array([x0, y0, w, h, labels, max_probs]).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_outputs(outputs:np.ndarray, input_dims:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>, bbox_conf_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>):</span>
<span id="cb43-2"></span>
<span id="cb43-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb43-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Process the model outputs to generate bounding box proposals filtered by confidence threshold.</span></span>
<span id="cb43-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb43-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb43-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - outputs (numpy.ndarray): The raw output from the model, which will be processed to calculate boxes and probabilities.</span></span>
<span id="cb43-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - input_dims (tuple of int): Dimensions (height, width) of the input image to the model.</span></span>
<span id="cb43-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - bbox_conf_thresh (float): Threshold for the bounding box confidence/probability. Bounding boxes with a confidence</span></span>
<span id="cb43-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                score below this threshold will be discarded.</span></span>
<span id="cb43-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb43-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb43-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - numpy.array: An array of proposals where each proposal is an array containing bounding box coordinates</span></span>
<span id="cb43-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                   and its associated probability, sorted in descending order by probability.</span></span>
<span id="cb43-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb43-16"></span>
<span id="cb43-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the model output</span></span>
<span id="cb43-18">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_boxes_and_probs(outputs, generate_output_grids_np(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>input_dims))</span>
<span id="cb43-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the proposals based on the confidence threshold</span></span>
<span id="cb43-20">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb43-21">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bbox_conf_thresh</span>
<span id="cb43-22">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[mask]</span>
<span id="cb43-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the proposals by probability in descending order</span></span>
<span id="cb43-24">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposals[..., <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].argsort()][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb43-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> proposals</span></code></pre></div>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_iou(proposals:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb44-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb44-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculates the Intersection over Union (IoU) for all pairs of bounding boxes (x,y,w,h) in 'proposals'.</span></span>
<span id="cb44-4"></span>
<span id="cb44-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The IoU is a measure of overlap between two bounding boxes. It is calculated as the area of</span></span>
<span id="cb44-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    intersection divided by the area of union of the two boxes.</span></span>
<span id="cb44-7"></span>
<span id="cb44-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb44-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    proposals (2D np.array): A NumPy array of bounding boxes, where each box is an array [x, y, width, height].</span></span>
<span id="cb44-10"></span>
<span id="cb44-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb44-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (2D np.array): The IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb44-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb44-14"></span>
<span id="cb44-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate coordinates for the intersection rectangles</span></span>
<span id="cb44-16">    x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb44-17">    y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb44-18">    x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb44-19">    y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb44-20">    </span>
<span id="cb44-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate intersection areas</span></span>
<span id="cb44-22">    intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.maximum(y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb44-23"></span>
<span id="cb44-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate union areas</span></span>
<span id="cb44-25">    areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb44-26">    unions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> areas[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> intersections</span>
<span id="cb44-27"></span>
<span id="cb44-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate IoUs</span></span>
<span id="cb44-29">    iou <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> unions</span>
<span id="cb44-30"></span>
<span id="cb44-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the iou matrix</span></span>
<span id="cb44-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> iou</span></code></pre></div>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> nms_sorted_boxes(iou:np.ndarray, iou_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb45-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb45-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Applies non-maximum suppression (NMS) to sorted bounding boxes.</span></span>
<span id="cb45-4"></span>
<span id="cb45-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It suppresses boxes that have high overlap (as defined by the IoU threshold) with a box that </span></span>
<span id="cb45-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    has a higher score.</span></span>
<span id="cb45-7"></span>
<span id="cb45-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb45-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (np.ndarray): An IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb45-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou_thresh (float): The IoU threshold for suppression. Boxes with IoU &gt; iou_thresh are suppressed.</span></span>
<span id="cb45-11"></span>
<span id="cb45-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb45-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    keep (np.ndarray): The indices of the boxes to keep after applying NMS.</span></span>
<span id="cb45-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb45-15"></span>
<span id="cb45-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a boolean mask to keep track of boxes</span></span>
<span id="cb45-17">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>)</span>
<span id="cb45-18"></span>
<span id="cb45-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression</span></span>
<span id="cb45-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb45-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> mask[i]:</span>
<span id="cb45-22">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress boxes with higher index and IoU &gt; threshold</span></span>
<span id="cb45-23">            mask[(iou[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iou_thresh) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> i)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb45-24"></span>
<span id="cb45-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the indices of the boxes to keep</span></span>
<span id="cb45-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[mask]</span></code></pre></div>
</section>
<section id="define-bounding-box-annotation-function" class="level4">
<h4 class="anchored" data-anchor-id="define-bounding-box-annotation-function">Define Bounding Box Annotation Function</h4>
<p>Lastly, we will define a function for annotating the source image with the predicted bounding boxes.</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw_bboxes_pil(image, boxes, labels, colors, font, width:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, font_size:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb46-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb46-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Annotates an image with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb46-4"></span>
<span id="cb46-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function draws bounding boxes on the provided image using the given box coordinates, </span></span>
<span id="cb46-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors, and labels. If probabilities are provided, they will be added to the labels.</span></span>
<span id="cb46-7"></span>
<span id="cb46-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb46-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    image (PIL.Image): The input image on which annotations will be drawn.</span></span>
<span id="cb46-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    boxes (list of tuples): A list of bounding box coordinates where each tuple is (x, y, w, h).</span></span>
<span id="cb46-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    labels (list of str): A list of labels corresponding to each bounding box.</span></span>
<span id="cb46-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors (list of str): A list of colors for each bounding box and its corresponding label.</span></span>
<span id="cb46-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    font (str): Path to the font file to be used for displaying the labels.</span></span>
<span id="cb46-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    width (int, optional): Width of the bounding box lines. Defaults to 2.</span></span>
<span id="cb46-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    font_size (int, optional): Size of the font for the labels. Defaults to 25.</span></span>
<span id="cb46-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    probs (list of float, optional): A list of probability scores corresponding to each label. Defaults to None.</span></span>
<span id="cb46-17"></span>
<span id="cb46-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb46-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    annotated_image (PIL.Image): The image annotated with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb46-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb46-21">    </span>
<span id="cb46-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a reference diagonal</span></span>
<span id="cb46-23">    REFERENCE_DIAGONAL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb46-24">    </span>
<span id="cb46-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale the font size using the hypotenuse of the image</span></span>
<span id="cb46-26">    font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.hypot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>image.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> REFERENCE_DIAGONAL))</span>
<span id="cb46-27">    </span>
<span id="cb46-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add probability scores to labels</span></span>
<span id="cb46-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> probs <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb46-30">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(labels, probs)]</span>
<span id="cb46-31">    </span>
<span id="cb46-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a copy of the image</span></span>
<span id="cb46-33">    annotated_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.copy()</span>
<span id="cb46-34"></span>
<span id="cb46-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an ImageDraw object for drawing on the image</span></span>
<span id="cb46-36">    draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(annotated_image)</span>
<span id="cb46-37"></span>
<span id="cb46-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through the bounding boxes and labels in the 'annotation' DataFrame</span></span>
<span id="cb46-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(labels)):</span>
<span id="cb46-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the bounding box coordinates</span></span>
<span id="cb46-41">        x, y, w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boxes[i]</span>
<span id="cb46-42"></span>
<span id="cb46-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a tuple of coordinates for the bounding box</span></span>
<span id="cb46-44">        shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x, y, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>w, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>h)</span>
<span id="cb46-45"></span>
<span id="cb46-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the bounding box on the image</span></span>
<span id="cb46-47">        draw.rectangle(shape, outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb46-48">        </span>
<span id="cb46-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the font file</span></span>
<span id="cb46-50">        fnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageFont.truetype(font, font_size)</span>
<span id="cb46-51">        </span>
<span id="cb46-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label box on the image</span></span>
<span id="cb46-53">        label_w, label_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw.textbbox(xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels[i], font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb46-54">        draw.rectangle((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>label_w, y), outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb46-55"></span>
<span id="cb46-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label on the image</span></span>
<span id="cb46-57">        draw.multiline_text((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h), labels[i], font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np.mean(colors[i]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">127.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)</span>
<span id="cb46-58">        </span>
<span id="cb46-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> annotated_image</span></code></pre></div>
</section>
<section id="initialize-a-hailo-dataflow-compiler-api-client-1" class="level4">
<h4 class="anchored" data-anchor-id="initialize-a-hailo-dataflow-compiler-api-client-1">Initialize a Hailo Dataflow Compiler API Client</h4>
<p>With our utility functions implemented, we can initialize a new DFC API client with the quantized HAR file.</p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">runner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClientRunner(har<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(quantized_model_har_path))</span></code></pre></div>
</section>
<section id="prepare-the-model-input" class="level4">
<h4 class="anchored" data-anchor-id="prepare-the-model-input">Prepare the Model Input</h4>
<p>Next, we will prepare the model input using our <code>resized_and_pad</code> image.</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize and pad the sample image to the desired input size, retrieving transformation data.</span></span>
<span id="cb48-2">input_img, transform_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_and_pad(sample_img, input_sz, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb48-3"></span>
<span id="cb48-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the resized and padded image into a NumPy array suitable for model input.</span></span>
<span id="cb48-5">input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb48-6"></span>
<span id="cb48-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the transformation data to understand how the image was resized and where it was placed.</span></span>
<span id="cb48-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"transform_data: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>transform_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-9"></span>
<span id="cb48-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the shape of the input tensor to verify it matches the expected input shape for the model.</span></span>
<span id="cb48-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The shape is expected to be (batch_size, height, width, channels).</span></span>
<span id="cb48-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"input_tensor_np.shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>input_tensor_np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb48-13"></span>
<span id="cb48-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the resized and padded image.</span></span>
<span id="cb48-15">input_img</span></code></pre></div>
<pre class="text"><code>transform_data: ImageTransformData(offset=(64, 0), scale=0.75)
input_tensor_np.shape: (1, 288, 512, 3)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/images/output_86_1.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="perform-inference-with-the-quantized-model" class="level4">
<h4 class="anchored" data-anchor-id="perform-inference-with-the-quantized-model">Perform Inference with the Quantized Model</h4>
<p>We perform inference with the quantized model using the <code>infer_context</code> method with the <code>SDK_QUANTIZED</code> inference context.</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an inference context for quantized model execution</span></span>
<span id="cb50-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> runner.infer_context(InferenceContext.SDK_QUANTIZED) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ctx:</span>
<span id="cb50-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform inference using the quantized model</span></span>
<span id="cb50-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># input_tensor_np is assumed to be a pre-processed input image as a numpy array</span></span>
<span id="cb50-5">    quantized_res <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> runner.infer(ctx, input_tensor_np)</span>
<span id="cb50-6"></span>
<span id="cb50-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the shape of the inference results</span></span>
<span id="cb50-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(quantized_res.shape)</span></code></pre></div>
<pre class="text"><code>Inference: 0entries [00:00, ?entries/s]2024-10-14 16:41:47.043075: I tensorflow/core/common_runtime/executor.cc:1197] [/device:CPU:0] (DEBUG INFO) Executor start aborting (this does not indicate an error and you can ignore this message): INVALID_ARGUMENT: You must feed a value for placeholder tensor 'Placeholder/_0' with dtype int32
     [[{{node Placeholder/_0}}]]
Inference: 8entries [00:31,  3.97s/entries]

(1, 1, 24, 3024)</code></pre>
</section>
<section id="process-the-model-output" class="level4">
<h4 class="anchored" data-anchor-id="process-the-model-output">Process the Model Output</h4>
<p>At last, we can process the model output and visualize the bounding box predictions.</p>
<p>Since our postprocessing methods are for the channels-first ONNX model, we must first convert the output from the channels-last Hailo Archive.</p>
<p>After processing the bounding box predictions from the raw model output, we can use the transformation data to offset and scale them to the source image.</p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transpose and extract the first element of the quantized results</span></span>
<span id="cb52-2">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> quantized_res.transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb52-3"></span>
<span id="cb52-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the outputs to generate initial object proposals</span></span>
<span id="cb52-5">proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_outputs(outputs, input_sz[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb52-6"></span>
<span id="cb52-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression (NMS) to remove overlapping bounding boxes</span></span>
<span id="cb52-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate Intersection over Union (IoU) for the proposals</span></span>
<span id="cb52-9">iou_matrix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calc_iou(proposals[:, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])</span>
<span id="cb52-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply NMS with a threshold of 0.45 to get indices of kept proposals</span></span>
<span id="cb52-11">proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nms_sorted_boxes(iou_matrix, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>)</span>
<span id="cb52-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep only the proposals that passed NMS</span></span>
<span id="cb52-13">proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposal_indices]</span>
<span id="cb52-14"></span>
<span id="cb52-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare lists for bounding boxes, labels, and probabilities</span></span>
<span id="cb52-16">bbox_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [adjust_bbox(bbox, transform_data) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bbox <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> proposals[:,:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb52-17">label_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [class_names[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(idx)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb52-18">probs_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb52-19"></span>
<span id="cb52-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw bounding boxes on the image</span></span>
<span id="cb52-21">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_bboxes_pil(</span>
<span id="cb52-22">    image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_img,          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The original image</span></span>
<span id="cb52-23">    boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bbox_list,           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of bounding boxes</span></span>
<span id="cb52-24">    labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>label_list,         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of class labels for each box</span></span>
<span id="cb52-25">    probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>probs_list,          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of probabilities for each box</span></span>
<span id="cb52-26">    colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[int_colors[class_names.index(i)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> label_list],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Colors for each box based on class</span></span>
<span id="cb52-27">    font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>font_file,            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Font file for text on the image</span></span>
<span id="cb52-28">)</span>
<span id="cb52-29"></span>
<span id="cb52-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the annotated image</span></span>
<span id="cb52-31">display(annotated_img)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/images/output_90_0.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>That completes the optimization process. All that is left is to compile the quantized Hailo Archive for the target Hailo-8L accelerator.</p>
</section>
</section>
<section id="compilation" class="level3">
<h3 class="anchored" data-anchor-id="compilation">Compilation</h3>
<p>To compile the model, we only need to initialize a DFC API client with the quantized HAR file, call the compile method, and save the result as a binary Hailo Executable Format (HEF) file.</p>
<section id="compile-the-quantized-model" class="level4">
<h4 class="anchored" data-anchor-id="compile-the-quantized-model">Compile the Quantized Model</h4>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a Hailo Dataflow Compiler API Client</span></span>
<span id="cb53-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This creates a runner object that will be used to compile the model</span></span>
<span id="cb53-3">runner <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClientRunner(har<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(quantized_model_har_path))</span>
<span id="cb53-4"></span>
<span id="cb53-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compile the quantized model for the target Hailo hardware</span></span>
<span id="cb53-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This step converts the model into a format that can run on Hailo accelerators</span></span>
<span id="cb53-7">hef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> runner.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">compile</span>()</span>
<span id="cb53-8"></span>
<span id="cb53-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the path for the compiled model</span></span>
<span id="cb53-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We use the same directory and name as the original ONNX file, but change the extension to .hef</span></span>
<span id="cb53-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'hef' stands for Hailo Executable Format</span></span>
<span id="cb53-12">compiled_model_hef_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_file_path.parent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.hef"</span></span>
<span id="cb53-13"></span>
<span id="cb53-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write the compiled model to a file</span></span>
<span id="cb53-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We open the file in binary write mode ('wb') because HEF is a binary format</span></span>
<span id="cb53-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(compiled_model_hef_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wb"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb53-17">    f.write(hef)</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled" title="Model Compilation Console Output">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-6-contents" aria-controls="callout-6" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Model Compilation Console Output
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-6" class="callout-6-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<div style="overflow-x:auto; max-height:500px">
<pre class="text"><code>[info] To achieve optimal performance, set the compiler_optimization_level to "max" by adding performance_param(compiler_optimization_level=max) to the model script. Note that this may increase compilation time.
[info] Loading network parameters
[info] Starting Hailo allocation and compilation flow
[info] Finding the best partition to contexts...
[?25l[info] Iteration #1 - Contexts: 4
[info] Iteration #2 - Contexts: 4
[info] Iteration #3 - Contexts: 4
[info] Iteration #4 - Contexts: 4
[info] Iteration #5 - Contexts: 4
[info] Iteration #6 - Contexts: 4
[info] Iteration #7 - Contexts: 4
[info] Iteration #8 - Contexts: 4
[info] Iteration #9 - Contexts: 4
[info] Iteration #10 - Contexts: 4
[info] Iteration #11 - Contexts: 4
[info] Iteration #12 - Contexts: 4
[info] Iteration #13 - Contexts: 4
[info] Iteration #14 - Contexts: 4
[info] Iteration #15 - Contexts: 4
[info] Iteration #16 - Contexts: 4
[info] Iteration #17 - Contexts: 4
[info] Iteration #18 - Contexts: 4
[info] Iteration #19 - Contexts: 4
[info] Iteration #20 - Contexts: 4
[info] Iteration #21 - Contexts: 4
[info] Iteration #22 - Contexts: 4
[info] Iteration #23 - Contexts: 4
[info] Iteration #24 - Contexts: 4
[info] Iteration #25 - Contexts: 4
[info] Iteration #26 - Contexts: 4
[info] Iteration #27 - Contexts: 4
[info] Iteration #28 - Contexts: 4
[info] Iteration #29 - Contexts: 4
[info] Iteration #30 - Contexts: 4
[info] Iteration #31 - Contexts: 4
[info] Iteration #32 - Contexts: 4
[info] Iteration #33 - Contexts: 4
[info] Iteration #34 - Contexts: 4
[info] Iteration #35 - Contexts: 4
[info] Iteration #36 - Contexts: 4
[info] Iteration #37 - Contexts: 4
[info] Iteration #38 - Contexts: 4
[info] Iteration #39 - Contexts: 4
[info] Iteration #40 - Contexts: 4
[info] Iteration #41 - Contexts: 4
[info] Iteration #42 - Contexts: 4
[info] Iteration #43 - Contexts: 4
[info] Iteration #44 - Contexts: 4
[info] Iteration #45 - Contexts: 4
[info] Iteration #46 - Contexts: 4
[info] Iteration #47 - Contexts: 4
[info] Iteration #48 - Contexts: 4
[info] Iteration #49 - Contexts: 4
[info] Iteration #50 - Contexts: 4
[info] Iteration #51 - Contexts: 4
[info] Iteration #52 - Contexts: 4
[info] Iteration #53 - Contexts: 4
[info] Iteration #54 - Contexts: 4
[info] Iteration #55 - Contexts: 4
[info] Iteration #56 - Contexts: 4
[info] Iteration #57 - Contexts: 4
[info] Iteration #58 - Contexts: 4
[info] Iteration #59 - Contexts: 4
[info] Iteration #60 - Contexts: 4
[info] Iteration #61 - Contexts: 4
[info] Iteration #62 - Contexts: 4
[info] Iteration #63 - Contexts: 4
[info] Iteration #64 - Contexts: 4
[info] Iteration #65 - Contexts: 4
[info] Iteration #66 - Contexts: 4
[info] Iteration #67 - Contexts: 4
[info] Iteration #68 - Contexts: 4
[info] Iteration #69 - Contexts: 4
[info] Iteration #70 - Contexts: 4
[info] Iteration #71 - Contexts: 4
[info] Iteration #72 - Contexts: 4
[info] Iteration #73 - Contexts: 4
[info] Iteration #74 - Contexts: 4
[info] Iteration #75 - Contexts: 4
[info] Iteration #76 - Contexts: 4
[info] Iteration #77 - Contexts: 4
[info] Iteration #78 - Contexts: 4
[info] Iteration #79 - Contexts: 4
[info] Iteration #80 - Contexts: 4
[info] Iteration #81 - Contexts: 4
[info] Iteration #82 - Contexts: 5
[info] Iteration #83 - Contexts: 5
[info] Iteration #84 - Contexts: 5
[info] Iteration #85 - Contexts: 5
[info] Iteration #86 - Contexts: 5
[info] Iteration #87 - Contexts: 5
[info] Iteration #88 - Contexts: 5
[info] Iteration #89 - Contexts: 5
[info] Iteration #90 - Contexts: 5
[info] Iteration #91 - Contexts: 5
[info] Iteration #92 - Contexts: 5
[info] Iteration #93 - Contexts: 5
[info] Iteration #94 - Contexts: 5
[info] Iteration #95 - Contexts: 5
[info] Iteration #96 - Contexts: 5
[info] Iteration #97 - Contexts: 5
[info] Iteration #98 - Contexts: 5
[info] Iteration #99 - Contexts: 5
[info] Iteration #100 - Contexts: 5
[info] Iteration #101 - Contexts: 5
[info] Iteration #102 - Contexts: 5
[info] Iteration #103 - Contexts: 5
[info] Iteration #104 - Contexts: 5
[info] Iteration #105 - Contexts: 5
[info] Iteration #106 - Contexts: 5
[info] Iteration #107 - Contexts: 5
[info] Iteration #108 - Contexts: 5
[info] Iteration #109 - Contexts: 5
[info] Iteration #110 - Contexts: 5
[info] Iteration #111 - Contexts: 5
[info] Iteration #112 - Contexts: 5
[info] Iteration #113 - Contexts: 5
[info] Iteration #114 - Contexts: 5
[info] Iteration #115 - Contexts: 5
[info] Iteration #116 - Contexts: 5
[info] Iteration #117 - Contexts: 5
[info] Iteration #118 - Contexts: 5
[info] Iteration #119 - Contexts: 5
[info] Iteration #120 - Contexts: 5
[info] Iteration #121 - Contexts: 5
[info] Iteration #122 - Contexts: 5
[info] Iteration #123 - Contexts: 5
[info] Iteration #124 - Contexts: 5
[info] Iteration #125 - Contexts: 5
[info] Iteration #126 - Contexts: 5
[info] Iteration #127 - Contexts: 5
[info] Iteration #128 - Contexts: 5
[info] Iteration #129 - Contexts: 5
[info] Iteration #130 - Contexts: 5
[info] Iteration #131 - Contexts: 5
[info] Iteration #132 - Contexts: 5
[info] Iteration #133 - Contexts: 5
[info] Iteration #134 - Contexts: 5
[info] Iteration #135 - Contexts: 5
[info] Iteration #136 - Contexts: 5
[info] Iteration #137 - Contexts: 5
[info] Iteration #138 - Contexts: 5
[info] Iteration #139 - Contexts: 5
[info] Iteration #140 - Contexts: 5
[info] Iteration #141 - Contexts: 5
[info] Iteration #142 - Contexts: 5
[info] Iteration #143 - Contexts: 5
[info] Iteration #144 - Contexts: 5
[info] Iteration #145 - Contexts: 5
[info] Iteration #146 - Contexts: 5
[info] Iteration #147 - Contexts: 5
[info] Iteration #148 - Contexts: 5
[info] Iteration #149 - Contexts: 5
[info] Iteration #150 - Contexts: 5
[info] Iteration #151 - Contexts: 5
[info] Iteration #152 - Contexts: 5
[info] Iteration #153 - Contexts: 6
[info] Iteration #154 - Contexts: 6
[info] Iteration #155 - Contexts: 6
[info] Iteration #156 - Contexts: 6
[info] Iteration #157 - Contexts: 6
[info] Iteration #158 - Contexts: 6
[info] Iteration #159 - Contexts: 6
[info] Iteration #160 - Contexts: 6
[info] Iteration #161 - Contexts: 6
[info] Iteration #162 - Contexts: 6
[info] Iteration #163 - Contexts: 6
[info] Iteration #164 - Contexts: 6
[info] Iteration #165 - Contexts: 6
[info] Iteration #166 - Contexts: 6
[info] Iteration #167 - Contexts: 6
[info] Iteration #168 - Contexts: 6
[info] Iteration #169 - Contexts: 6
[info] Iteration #170 - Contexts: 6
[info] Iteration #171 - Contexts: 6
[info] Iteration #172 - Contexts: 6
[?25h
[info] Using Multi-context flow
[info] Resources optimization guidelines: Strategy -&gt; GREEDY Objective -&gt; MAX_FPS
[info] Resources optimization params: max_control_utilization=60%, max_compute_utilization=60%, max_compute_16bit_utilization=60%, max_memory_utilization (weights)=60%, max_input_aligner_utilization=60%, max_apu_utilization=60%
[info] input_layer1: Pass
[info] concat1: Pass
[info] space_to_depth1: Pass
[info] ew_add1: Pass
[info] conv3: Pass
[info] ew_add2: Pass
[info] mul_and_add1: Pass
[info] conv10: Pass
[info] conv13: Pass
[info] conv5: Pass
[info] auto_reshape_from_input_layer1_to_mul_and_add1: Pass
[info] conv4: Pass
[info] conv11: Pass
[info] conv18_dc: Pass
[info] conv12: Pass
[info] context_0_to_context_1_21: Pass
[info] conv6: Pass
[info] conv7: Pass
[info] ew_add3: Pass
[info] conv15: Pass
[info] conv1_sd1: Pass
[info] conv14: Pass
[info] conv17: Pass
[info] conv18_d0: Pass
[info] conv2_ws: Pass
[info] context_0_to_context_2_0: Pass
[info] conv2_sdc: Pass
[info] conv2_sd0: Pass
[info] context_0_to_context_1_2: Pass
[info] conv16: Pass
[info] conv2_sd2: Pass
[info] conv19: Pass
[info] conv1_sd0: Pass
[info] ew_add4: Pass
[info] conv8_sdc: Pass
[info] conv9: Pass
[info] conv8_ws: Pass
[info] concat2: Pass
[info] conv2_sd1: Pass
[info] conv18_d1: Pass
[info] conv1_sdc: Pass
[info] conv1_ws: Pass
[info] conv8_sd0: Pass
[info] conv8_sd1: Pass
[info] conv25: Pass
[info] ew_add6: Pass
[info] ew_add5: Pass
[info] conv23: Pass
[info] conv21: Pass
[info] conv20: Pass
[info] concat4: Pass
[info] maxpool1: Pass
[info] conv29: Pass
[info] ew_add7: Pass
[info] conv22: Pass
[info] conv24: Pass
[info] conv26: Pass
[info] concat3: Pass
[info] conv27: Pass
[info] conv30: Pass
[info] conv33: Pass
[info] conv37: Pass
[info] maxpool2_d1: Pass
[info] maxpool2_dc: Pass
[info] context_0_to_context_1_in_3: Pass
[info] context_1_to_context_2_9: Pass
[info] conv35: Pass
[info] conv38: Pass
[info] context_1_to_context_2_7: Pass
[info] context_0_to_context_1_in_22: Pass
[info] conv36: Pass
[info] maxpool3_d0: Pass
[info] maxpool3_d2: Pass
[info] conv28_d0: Pass
[info] maxpool3_fs: Pass
[info] context_1_to_context_3_5: Pass
[info] concat5: Pass
[info] resize1: Pass
[info] conv28_dc: Pass
[info] maxpool3_dc: Pass
[info] conv31: Pass
[info] context_0_to_context_1_in_4: Pass
[info] concat6: Pass
[info] conv32: Pass
[info] maxpool2_fs: Pass
[info] maxpool2_d0: Pass
[info] maxpool3_d1: Pass
[info] conv28_d1: Pass
[info] conv34: Pass
[info] concat9: Pass
[info] conv45: Pass
[info] conv39: Pass
[info] resize2: Pass
[info] conv42: Pass
[info] concat7: Pass
[info] conv41: Pass
[info] conv43: Pass
[info] conv40: Pass
[info] conv46: Pass
[info] conv47: Pass
[info] concat8: Pass
[info] conv44: Pass
[info] conv48: Pass
[info] conv49: Pass
[info] conv58: Pass
[info] conv59: Pass
[info] concat10: Pass
[info] conv57: Pass
[info] conv54: Pass
[info] conv55: Pass
[info] conv56: Pass
[info] conv53_d1: Pass
[info] conv53_d2: Pass
[info] conv52_d0: Pass
[info] conv52_dc: Pass
[info] conv53_d0: Pass
[info] conv52_d1: Pass
[info] conv53_dc: Pass
[info] conv51_d0: Pass
[info] conv52_d2: Pass
[info] conv51_d2: Pass
[info] conv51_dc: Pass
[info] context_2_to_context_3_13: Pass
[info] context_2_to_context_3_11: Pass
[info] context_2_to_context_3_15: Pass
[info] context_2_to_context_3_17: Pass
[info] context_2_to_context_3_19: Pass
[info] context_1_to_context_2_in_10: Pass
[info] conv50_d0: Pass
[info] context_0_to_context_2_in_1: Pass
[info] conv51_d1: Pass
[info] context_1_to_context_2_in_8: Pass
[info] conv50_dc: Pass
[info] conv50_d2: Pass
[info] conv50_d1: Pass
[info] sh_from_conv49_to_conv50_d0-2_conv51_d0: Pass
[info] output_layer1: Pass
[info] conv75: Pass
[info] conv61: Pass
[info] conv73: Pass
[info] concat15: Pass
[info] conv76: Pass
[info] conv72: Pass
[info] conv71: Pass
[info] conv79: Pass
[info] concat13: Pass
[info] concat12: Pass
[info] conv77: Pass
[info] conv60: Pass
[info] conv81: Pass
[info] conv82: Pass
[info] conv80: Pass
[info] conv78: Pass
[info] conv69: Pass
[info] conv83: Pass
[info] conv70: Pass
[info] concat14: Pass
[info] conv64: Pass
[info] concat16: Pass
[info] conv68: Pass
[info] format_conversion3: Pass
[info] conv63: Pass
[info] conv67: Pass
[info] conv66: Pass
[info] concat11: Pass
[info] format_conversion2: Pass
[info] conv65: Pass
[info] format_conversion4: Pass
[info] format_conversion1: Pass
[info] concat17: Pass
[info] conv74_d0: Pass
[info] conv62_dc: Pass
[info] conv74_dc: Pass
[info] auto_reshape_from_format_conversion4_to_output_layer1: Pass
[info] context_2_to_context_3_in_12: Pass
[info] context_1_to_context_3_in_6: Pass
[info] conv74_d1: Pass
[info] conv62_d0: Pass
[info] context_2_to_context_3_in_14: Pass
[info] context_2_to_context_3_in_16: Pass
[info] context_2_to_context_3_in_18: Pass
[info] context_2_to_context_3_in_20: Pass
[info] conv62_d1: Pass
[info] Solving the allocation (Mapping), time per context: 59m 59s


    
    [info] Context:0/0 Iteration 0: Mapping prepost...          
              cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
     worker0  *          *          *          *          *          *          *          *          V       
     worker1                                                                                                  
     worker2                                                                                                  
     worker3                                                                                                  
    
  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2                                                                                                  
 worker3                                                                                                  

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3                                                                                                  

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          V          *          *          V          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          V          *          *          V          V          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00
[info] Context:0/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:00


    
    [info] Context:1/3 Iteration 0: Trying parallel splits...   
              cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
     worker0                                                                                                  
     worker1                                                                                                  
     worker2                                                                                                  
     worker3                                                                                                  
    
  00:00
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2                                                                                                  
 worker3  *          *          *          *          *          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  *          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01
[info] Context:1/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          V          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          *          *          *          V          *          *          *          V       

  00:01


    
    [info] Context:2/3 Iteration 0: Trying parallel splits...   
              cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
     worker0                                                                                                  
     worker1                                                                                                  
     worker2                                                                                                  
     worker3                                                                                                  
    
  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2                                                                                                  
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1                                                                                                  
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:02
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  *          *          *          *          V          *          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:04
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  *          V          *          *          *          *          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:04
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  *          *          *          *          *          *          *          *          V       

  00:04
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  *          V          *          *          V          V          *          *          V       

  00:04
[info] Context:2/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:04


    
    [info] Context:3/3 Iteration 0: Trying parallel splits...   
              cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
     worker0                                                                                                  
     worker1                                                                                                  
     worker2                                                                                                  
     worker3                                                                                                  
    
  00:05
[info] Context:3/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2                                                                                                  
 worker3                                                                                                  

  00:05
[info] Context:3/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3                                                                                                  

  00:05
[info] Context:3/3 Iteration 0: Trying parallel splits...   
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0                                                                                                  
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3                                                                                                  

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  *          *          *          *          *          *          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3                                                                                                  

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  *          *          *          *          *          V          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3                                                                                                  

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3                                                                                                  

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  *          *          *          *          *          *          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  *          *          *          *          *          *          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:05
[info] Context:3/3 Iteration 4: Trying parallel mapping...  
          cluster_0  cluster_1  cluster_2  cluster_3  cluster_4  cluster_5  cluster_6  cluster_7  prepost 
 worker0  V          V          *          *          V          V          *          *          V       
 worker1  V          *          *          *          V          V          *          *          V       
 worker2  V          V          *          *          V          V          *          *          V       
 worker3  V          V          *          *          V          V          *          *          V       

  00:06

[info] context_0 (context_0):
Iterations: 4
Reverts on cluster mapping: 0
Reverts on inter-cluster connectivity: 0
Reverts on pre-mapping validation: 0
Reverts on split failed: 0
[info] context_1 (context_1):
Iterations: 4
Reverts on cluster mapping: 0
Reverts on inter-cluster connectivity: 0
Reverts on pre-mapping validation: 0
Reverts on split failed: 0
[info] context_2 (context_2):
Iterations: 4
Reverts on cluster mapping: 0
Reverts on inter-cluster connectivity: 0
Reverts on pre-mapping validation: 0
Reverts on split failed: 0
[info] context_3 (context_3):
Iterations: 4
Reverts on cluster mapping: 0
Reverts on inter-cluster connectivity: 0
Reverts on pre-mapping validation: 0
Reverts on split failed: 0
[info] context_0 utilization: 
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Cluster   | Control Utilization | Compute Utilization | Memory Utilization |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | cluster_0 | 100%                | 76.6%               | 57.8%              |
[info] | cluster_1 | 31.3%               | 15.6%               | 13.3%              |
[info] | cluster_4 | 62.5%               | 34.4%               | 34.4%              |
[info] | cluster_5 | 50%                 | 23.4%               | 21.1%              |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Total     | 60.9%               | 37.5%               | 31.6%              |
[info] +-----------+---------------------+---------------------+--------------------+
[info] context_1 utilization: 
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Cluster   | Control Utilization | Compute Utilization | Memory Utilization |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | cluster_0 | 100%                | 39.1%               | 44.5%              |
[info] | cluster_1 | 25%                 | 25%                 | 22.7%              |
[info] | cluster_4 | 100%                | 67.2%               | 55.5%              |
[info] | cluster_5 | 18.8%               | 12.5%               | 7%                 |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Total     | 60.9%               | 35.9%               | 32.4%              |
[info] +-----------+---------------------+---------------------+--------------------+
[info] context_2 utilization: 
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Cluster   | Control Utilization | Compute Utilization | Memory Utilization |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | cluster_0 | 56.3%               | 73.4%               | 44.5%              |
[info] | cluster_1 | 50%                 | 40.6%               | 35.2%              |
[info] | cluster_4 | 87.5%               | 59.4%               | 53.1%              |
[info] | cluster_5 | 50%                 | 60.9%               | 36.7%              |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Total     | 60.9%               | 58.6%               | 42.4%              |
[info] +-----------+---------------------+---------------------+--------------------+
[info] context_3 utilization: 
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Cluster   | Control Utilization | Compute Utilization | Memory Utilization |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | cluster_0 | 50%                 | 39.1%               | 33.6%              |
[info] | cluster_1 | 75%                 | 57.8%               | 42.2%              |
[info] | cluster_4 | 50%                 | 32.8%               | 28.1%              |
[info] | cluster_5 | 68.8%               | 48.4%               | 35.9%              |
[info] +-----------+---------------------+---------------------+--------------------+
[info] | Total     | 60.9%               | 44.5%               | 35%                |
[info] +-----------+---------------------+---------------------+--------------------+
[info] Successful Mapping (allocation time: 3m 55s)
[info] Compiling context_0...
[info] Compiling context_1...
[info] Compiling context_2...
[info] Compiling context_3...
[info] Bandwidth of model inputs: 3.375 Mbps, outputs: 0.553711 Mbps (for a single frame)
[info] Bandwidth of DDR buffers: 0.0 Mbps (for a single frame)
[info] Bandwidth of inter context tensors: 10.9688 Mbps (for a single frame)
[info] Compiling context_0...
[info] Compiling context_1...
[info] Compiling context_2...
[info] Compiling context_3...
[info] Bandwidth of model inputs: 3.375 Mbps, outputs: 0.553711 Mbps (for a single frame)
[info] Bandwidth of DDR buffers: 0.0 Mbps (for a single frame)
[info] Bandwidth of inter context tensors: 10.9688 Mbps (for a single frame)
[info] Building HEF...
[info] Successful Compilation (compilation time: 7s)
</code></pre>
</div>
</div>
</div>
</div>
</section>
<section id="run-the-profiler-tool" class="level4">
<h4 class="anchored" data-anchor-id="run-the-profiler-tool">Run the Profiler Tool</h4>
<p>After compiling the model, we can run the Hailo profiler tool, which will open an HTML report in the browser.</p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the path for the compiled model HAR file</span></span>
<span id="cb55-2">compiled_model_har_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_file_path.parent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>stem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_compiled_model.har"</span></span>
<span id="cb55-3"></span>
<span id="cb55-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the compiled model as a HAR file</span></span>
<span id="cb55-5">runner.save_har(compiled_model_har_path)</span>
<span id="cb55-6"></span>
<span id="cb55-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the Hailo profiler on the compiled model</span></span>
<span id="cb55-8">subprocess.run([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"hailo"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"profiler"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(compiled_model_har_path)], check<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="callout callout-style-default callout-note callout-titled" title="Profiler Console Output">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-7-contents" aria-controls="callout-7" aria-expanded="false" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Profiler Console Output
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-7" class="callout-7-contents callout-collapse collapse">
<div class="callout-body-container callout-body">
<pre class="text"><code>[info] Saved HAR to: /mnt/ACASIS_4TB/Projects/GitHub/pytorch-yolox-object-detection-tutorial-code/notebooks/pytorch-yolox-object-detector/2024-09-08_19-22-32/hagrid-sample-30k-384p-yolox_tiny_compiled_model.har
[info] Current Time: 18:24:13, 10/14/24
[info] CPU: Architecture: x86_64, Model: 11th Gen Intel(R) Core(TM) i7-11700K @ 3.60GHz, Number Of Cores: 16, Utilization: 1.8%
[info] Memory: Total: 31GB, Available: 14GB
[info] System info: OS: Linux, Kernel: 6.8.0-45-generic
[info] Hailo DFC Version: 3.29.0
[info] HailoRT Version: Not Installed
[info] PCIe: No Hailo PCIe device was found
[info] Running `hailo profiler pytorch-yolox-object-detector/2024-09-08_19-22-32/hagrid-sample-30k-384p-yolox_tiny_compiled_model.har`
[info] Running profile for hagrid-sample-30k-384p-yolox_tiny in state compiled_model
[info] 
Model Details
--------------------------------  ----------
Input Tensors Shapes              288x512x3
Operations per Input Tensor       5.43 GOPs
Operations per Input Tensor       2.72 GMACs
Pure Operations per Input Tensor  5.43 GOPs
Pure Operations per Input Tensor  2.72 GMACs
Model Parameters                  5.09 M
--------------------------------  ----------

Profiler Input Settings
-----------------  -----------------
Optimization Goal  Reach Highest FPS
Profiler Mode      Compiled
-----------------  -----------------

Performance Summary
----------------------  ---
Number of Devices       1
Number of Contexts      4
Throughput              N/A
Latency                 N/A
Operations per Second   N/A
MACs per Second         N/A
Total Input Bandwidth   N/A
Total Output Bandwidth  N/A
Context Switch Configs  N/A
----------------------  ---
[info] Saved Profiler HTML Report to: /mnt/ACASIS_4TB/Projects/GitHub/pytorch-yolox-object-detection-tutorial-code/notebooks/hagrid-sample-30k-384p-yolox_tiny_compiled_model.html
CompletedProcess(args=['hailo', 'profiler', 'pytorch-yolox-object-detector/2024-09-08_19-22-32/hagrid-sample-30k-384p-yolox_tiny_compiled_model.har'], returncode=0)</code></pre>
</div>
</div>
</div>
<p>At last, we have completed the compilation process. Now, we can load our compiled model onto the Raspberry Pi and perform real-time object tracking.</p>
</section>
</section>
</section>
<section id="preparing-the-raspberry-pi" class="level2">
<h2 class="anchored" data-anchor-id="preparing-the-raspberry-pi">Preparing the Raspberry Pi</h2>
<p>This tutorial continues on a Raspberry Pi 5 with a freshly installed operating system, and it assumes a CSI camera module and an AI Kit are connected.</p>
<p>If you do not have a Raspberry Pi prepared, you can go through the following sections from the official Raspberry Pi documentation:</p>
<ul>
<li><a href="https://www.raspberrypi.com/documentation/computers/getting-started.html">Getting started with your Raspberry Pi</a></li>
<li><a href="https://www.raspberrypi.com/documentation/accessories/camera.html#install-a-raspberry-pi-camera">Install a Raspberry Pi camera</a></li>
<li><a href="https://www.raspberrypi.com/documentation/accessories/ai-kit.html">AI Kit - Install</a></li>
</ul>
<section id="hailo-ai-kit-setup" class="level3">
<h3 class="anchored" data-anchor-id="hailo-ai-kit-setup">Hailo AI Kit Setup</h3>
<p>After logging into the Raspberry Pi, we can set it up to use the AI Kit.</p>
<section id="ensure-the-raspberry-pi-is-fully-updated" class="level4">
<h4 class="anchored" data-anchor-id="ensure-the-raspberry-pi-is-fully-updated">Ensure the Raspberry Pi is fully updated</h4>
<p>To start, we should verify the Raspberry Pi is fully updated.</p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb57-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt update <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt full-upgrade <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</section>
<section id="enable-pcie-gen-3.0" class="level4">
<h4 class="anchored" data-anchor-id="enable-pcie-gen-3.0">Enable PCIe Gen 3.0</h4>
<p>Next, the official documentation recommends enabling PCIe Gen 3.0 for the best performance.</p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> raspi-config</span></code></pre></div>
<ol type="1">
<li>Select <code>Advanced Options</code>.</li>
<li>Select <code>PCIe Speed</code>.</li>
<li>Choose <code>Yes</code> to enable PCIe Gen 3 mode.</li>
<li>Select <code>Finish</code> to exit.</li>
<li>Reboot for the changes to take effect.</li>
</ol>
</section>
<section id="install-ai-kit-dependencies" class="level4">
<h4 class="anchored" data-anchor-id="install-ai-kit-dependencies">Install AI Kit Dependencies</h4>
<p>After the reboot, we can install the hailo-all package, which includes all the dependencies needed to use the AI Kit.</p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb59-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install hailo-all <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> reboot</span></code></pre></div>
<p>Installs the following dependencies:</p>
<ul>
<li>Hailo kernel device driver and firmware</li>
<li>HailoRT middleware software</li>
<li>Hailo Tappas core post-processing libraries</li>
<li>The <code>rpicam-apps</code> Hailo post-processing software demo stages</li>
</ul>
</section>
</section>
</section>
<section id="setting-up-a-python-virtual-environment" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-a-python-virtual-environment">Setting Up a Python Virtual Environment</h2>
<p>While we can install the Mamba package manager on the Raspberry Pi, a standard Python <a href="https://docs.python.org/3/library/venv.html">virtual environment</a> provides a more streamlined setup process for our needs.</p>
<section id="create-a-python-virtual-environment" class="level4">
<h4 class="anchored" data-anchor-id="create-a-python-virtual-environment">Create a Python Virtual Environment</h4>
<p>When creating the virtual environment, we will use the <code>--system-site-packages</code> option to give the virtual environment access to the system <code>site-packages</code> directory.</p>
<p>That will allow us to access the <code>hailort</code>, <code>numpy</code>, <code>opencv-python</code>, and <code>picamera2</code> packages already installed on the Raspberry Pi.</p>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb60-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a venv that can access the system Python packages</span></span>
<span id="cb60-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python3</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--system-site-packages</span> object-tracking-env</span></code></pre></div>
</section>
<section id="activate-python-virtual-environment" class="level4">
<h4 class="anchored" data-anchor-id="activate-python-virtual-environment">Activate Python Virtual Environment</h4>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb61-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Activate the object-tracking-env venv</span></span>
<span id="cb61-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ./object-tracking-env/bin/activate</span></code></pre></div>
</section>
<section id="install-demo-dependencies" class="level4">
<h4 class="anchored" data-anchor-id="install-demo-dependencies">Install Demo Dependencies</h4>
<p>With the virtual environment active, we will install a few additional packages for our demo code.</p>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb62-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install cjm_byte_track cjm_psl_utils cjm_pil_utils jupyter</span></code></pre></div>
<p>With our environment set up, we can dive into the demo code.</p>
<div class="callout callout-style-default callout-important callout-titled" title="Move Inference Resources to Raspberry Pi">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Move Inference Resources to Raspberry Pi
</div>
</div>
<div class="callout-body-container callout-body">
<p>Before continuing, copy the compiled HEF file and the JSON colormap file to same folder on the Raspberry Pi where you created the virtual environment.</p>
</div>
</div>
</section>
</section>
<section id="getting-started-with-the-code-1" class="level2">
<h2 class="anchored" data-anchor-id="getting-started-with-the-code-1">Getting Started with the Code</h2>
<p>This tutorial walks through the demo as a Jupyter Notebook, but the code is also available as a Python script.</p>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Python Script</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/notebooks/yolox-hailo-bytetrack-rpi.ipynb">yolox-hailo-bytetrack-rpi.ipynb</a></td>
<td><a href="https://github.com/cj-mills/pytorch-yolox-object-detection-tutorial-code/blob/main/scripts/yolox-hailo-bytetrack-rpi.py">yolox-hailo-bytetrack-rpi.py</a></td>
</tr>
</tbody>
</table>
</section>
<section id="importing-the-required-dependencies-1" class="level2">
<h2 class="anchored" data-anchor-id="importing-the-required-dependencies-1">Importing the Required Dependencies</h2>
<p>First, we will import the necessary Python packages.</p>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Python Standard Library dependencies</span></span>
<span id="cb63-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb63-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb63-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb63-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> typing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Tuple, Optional, NamedTuple</span>
<span id="cb63-6"></span>
<span id="cb63-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ByteTrack package for object tracking</span></span>
<span id="cb63-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_byte_track.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BYTETracker</span>
<span id="cb63-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_byte_track.matching <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> match_detections_with_tracks</span>
<span id="cb63-10"></span>
<span id="cb63-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Utility functions</span></span>
<span id="cb63-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_psl_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> download_file  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For downloading files</span></span>
<span id="cb63-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For resizing images</span></span>
<span id="cb63-14"></span>
<span id="cb63-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OpenCV for computer vision tasks</span></span>
<span id="cb63-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cv2</span>
<span id="cb63-17"></span>
<span id="cb63-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># NumPy for numerical operations</span></span>
<span id="cb63-19"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb63-20"></span>
<span id="cb63-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PIL (Python Imaging Library) for image processing</span></span>
<span id="cb63-22"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image, ImageDraw, ImageFont</span>
<span id="cb63-23"></span>
<span id="cb63-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Hailo Runtime dependencies</span></span>
<span id="cb63-25"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> hailo_platform <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> (</span>
<span id="cb63-26">    HEF,</span>
<span id="cb63-27">    ConfigureParams,</span>
<span id="cb63-28">    FormatType,</span>
<span id="cb63-29">    HailoSchedulingAlgorithm,</span>
<span id="cb63-30">    HailoStreamInterface,</span>
<span id="cb63-31">    InferVStreams,</span>
<span id="cb63-32">    InputVStreamParams,</span>
<span id="cb63-33">    OutputVStreamParams,</span>
<span id="cb63-34">    VDevice</span>
<span id="cb63-35">)</span>
<span id="cb63-36"></span>
<span id="cb63-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import Picamera2</span></span>
<span id="cb63-38"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> picamera2 <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Picamera2, Preview</span></code></pre></div>
</section>
<section id="define-utility-functions" class="level2">
<h2 class="anchored" data-anchor-id="define-utility-functions">Define Utility Functions</h2>
<p>Next, we will add all the utility functions we implemented for the optimization step.</p>
<section id="define-functions-to-handle-arbitrary-input-resolutions-1" class="level4">
<h4 class="anchored" data-anchor-id="define-functions-to-handle-arbitrary-input-resolutions-1">Define Functions to Handle Arbitrary Input Resolutions</h4>
<p>The original <code>resize_and_pad</code> function ended up being a performance bottleneck on the Raspberry Pi, so I updated it to use NumPy and the OpenCV <code>resize</code> method instead of PIL.</p>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> ImageTransformData(NamedTuple):</span>
<span id="cb64-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb64-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A data class that stores transformation information applied to an image.</span></span>
<span id="cb64-4"></span>
<span id="cb64-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Attributes:</span></span>
<span id="cb64-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        offset (Tuple[int, int]): The (x, y) offset where the resized image was pasted.</span></span>
<span id="cb64-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        scale (float): The scaling factor applied to the original image.</span></span>
<span id="cb64-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb64-9">    offset: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]</span>
<span id="cb64-10">    scale: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span></span></code></pre></div>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> resize_and_pad(</span>
<span id="cb65-2">    image: np.ndarray,</span>
<span id="cb65-3">    target_sz: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>],</span>
<span id="cb65-4">    return_transform_data: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb65-5">    fill_color: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb65-6">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Tuple[np.ndarray, Optional[ImageTransformData]]:</span>
<span id="cb65-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb65-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Resize an image while maintaining its aspect ratio and pad it to fit the target size.</span></span>
<span id="cb65-9"></span>
<span id="cb65-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb65-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        image (np.ndarray): The original image as a numpy array.</span></span>
<span id="cb65-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        target_sz (Tuple[int, int]): The desired size (width, height) for the output image.</span></span>
<span id="cb65-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        return_transform_data (bool, optional): If True, returns transformation data (offset and scale).</span></span>
<span id="cb65-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        fill_color (Tuple[int, int, int], optional): The color to use for padding (default is white).</span></span>
<span id="cb65-15"></span>
<span id="cb65-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb65-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Tuple[np.ndarray, Optional[ImageTransformData]]: The resized and padded image,</span></span>
<span id="cb65-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        and optionally the transformation data.</span></span>
<span id="cb65-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb65-20">    target_width, target_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_sz</span>
<span id="cb65-21">    orig_height, orig_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.shape[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb65-22">    </span>
<span id="cb65-23">    aspect_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> orig_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> orig_height</span>
<span id="cb65-24">    target_aspect_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> target_height</span>
<span id="cb65-25"></span>
<span id="cb65-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> aspect_ratio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> target_aspect_ratio:</span>
<span id="cb65-27">        new_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_width</span>
<span id="cb65-28">        new_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(new_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> aspect_ratio)</span>
<span id="cb65-29">        scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> orig_width</span>
<span id="cb65-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb65-31">        new_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_height</span>
<span id="cb65-32">        new_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(new_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> aspect_ratio)</span>
<span id="cb65-33">        scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> orig_height</span>
<span id="cb65-34"></span>
<span id="cb65-35">    resized_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.resize(image, (new_width, new_height), interpolation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cv2.INTER_NEAREST)</span>
<span id="cb65-36"></span>
<span id="cb65-37">    paste_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (target_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_width) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb65-38">    paste_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (target_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> new_height) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb65-39"></span>
<span id="cb65-40">    padded_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((target_height, target_width, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), fill_color, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.uint8)</span>
<span id="cb65-41">    padded_image[paste_y:paste_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>new_height, paste_x:paste_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>new_width] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resized_image</span>
<span id="cb65-42"></span>
<span id="cb65-43">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> return_transform_data:</span>
<span id="cb65-44">        transform_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageTransformData(offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(paste_x, paste_y), scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>scale)</span>
<span id="cb65-45">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> padded_image, transform_data</span>
<span id="cb65-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb65-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> padded_image, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> adjust_bbox(</span>
<span id="cb66-2">    bbox: Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>],</span>
<span id="cb66-3">    transform_data: ImageTransformData</span>
<span id="cb66-4">) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>]:</span>
<span id="cb66-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb66-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Adjust a bounding box according to the transformation data (offset and scale).</span></span>
<span id="cb66-7"></span>
<span id="cb66-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb66-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        bbox (Tuple[float, float, float, float]): The original bounding box as (x, y, width, height).</span></span>
<span id="cb66-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        transform_data (ImageTransformData): The transformation data containing offset and scale.</span></span>
<span id="cb66-11"></span>
<span id="cb66-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb66-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Tuple[float, float, float, float]: The adjusted bounding box.</span></span>
<span id="cb66-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb66-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack the bounding box coordinates and size</span></span>
<span id="cb66-16">    x, y, w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bbox</span>
<span id="cb66-17"></span>
<span id="cb66-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack the transformation data</span></span>
<span id="cb66-19">    offset_x, offset_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data.offset</span>
<span id="cb66-20">    scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform_data.scale</span>
<span id="cb66-21"></span>
<span id="cb66-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust the coordinates by subtracting the offset and dividing by the scale</span></span>
<span id="cb66-23">    adjusted_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offset_x) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb66-24">    adjusted_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offset_y) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb66-25"></span>
<span id="cb66-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust the size by dividing by the scale</span></span>
<span id="cb66-27">    adjusted_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb66-28">    adjusted_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale</span>
<span id="cb66-29"></span>
<span id="cb66-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (adjusted_x, adjusted_y, adjusted_w, adjusted_h)</span></code></pre></div>
</section>
<section id="define-postprocessing-functions-1" class="level4">
<h4 class="anchored" data-anchor-id="define-postprocessing-functions-1">Define Postprocessing Functions</h4>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_output_grids_np(height, width, strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>]):</span>
<span id="cb67-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb67-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate a numpy array containing grid coordinates and strides for a given height and width.</span></span>
<span id="cb67-4"></span>
<span id="cb67-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb67-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        height (int): The height of the image.</span></span>
<span id="cb67-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        width (int): The width of the image.</span></span>
<span id="cb67-8"></span>
<span id="cb67-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb67-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        np.ndarray: A numpy array containing grid coordinates and strides.</span></span>
<span id="cb67-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb67-12"></span>
<span id="cb67-13">    all_coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb67-14"></span>
<span id="cb67-15">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stride <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> strides:</span>
<span id="cb67-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the grid height and width</span></span>
<span id="cb67-17">        grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb67-18">        grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> stride</span>
<span id="cb67-19"></span>
<span id="cb67-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate grid coordinates</span></span>
<span id="cb67-21">        g1, g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.meshgrid(np.arange(grid_height), np.arange(grid_width), indexing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ij'</span>)</span>
<span id="cb67-22"></span>
<span id="cb67-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an array of strides</span></span>
<span id="cb67-24">        s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((grid_height, grid_width), stride)</span>
<span id="cb67-25"></span>
<span id="cb67-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stack the coordinates along with the stride</span></span>
<span id="cb67-27">        coordinates <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.stack((g0.flatten(), g1.flatten(), s.flatten()), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb67-28"></span>
<span id="cb67-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append to the list</span></span>
<span id="cb67-30">        all_coordinates.append(coordinates)</span>
<span id="cb67-31"></span>
<span id="cb67-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate all arrays in the list along the first dimension</span></span>
<span id="cb67-33">    output_grids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.concatenate(all_coordinates, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb67-34"></span>
<span id="cb67-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> output_grids</span></code></pre></div>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calculate_boxes_and_probs(model_output:np.ndarray, output_grids:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb68-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb68-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculate the bounding boxes and their probabilities.</span></span>
<span id="cb68-4"></span>
<span id="cb68-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb68-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    model_output (numpy.ndarray): The output of the model.</span></span>
<span id="cb68-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    output_grids (numpy.ndarray): The output grids.</span></span>
<span id="cb68-8"></span>
<span id="cb68-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb68-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    numpy.ndarray: The array containing the bounding box coordinates, class labels, and maximum probabilities.</span></span>
<span id="cb68-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb68-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the bounding box coordinates</span></span>
<span id="cb68-13">    box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (model_output[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> output_grids[..., :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb68-14">    box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.exp(model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_grids[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb68-15"></span>
<span id="cb68-16">    x0, y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> np.split(box_centroids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> box_sizes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb68-17">    w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [t.squeeze(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> t <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> np.split(box_sizes, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)]</span>
<span id="cb68-18"></span>
<span id="cb68-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the probabilities for each class</span></span>
<span id="cb68-20">    box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]</span>
<span id="cb68-21">    box_cls_scores <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output[..., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>:]</span>
<span id="cb68-22">    box_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.expand_dims(box_objectness, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_scores</span>
<span id="cb68-23"></span>
<span id="cb68-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the maximum probability and corresponding class for each proposal</span></span>
<span id="cb68-25">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb68-26">    labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argmax(box_probs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb68-27"></span>
<span id="cb68-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.array([x0, y0, w, h, labels, max_probs]).transpose((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span></code></pre></div>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> process_outputs(outputs:np.ndarray, input_dims:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>, bbox_conf_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>):</span>
<span id="cb69-2"></span>
<span id="cb69-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb69-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Process the model outputs to generate bounding box proposals filtered by confidence threshold.</span></span>
<span id="cb69-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb69-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb69-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - outputs (numpy.ndarray): The raw output from the model, which will be processed to calculate boxes and probabilities.</span></span>
<span id="cb69-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - input_dims (tuple of int): Dimensions (height, width) of the input image to the model.</span></span>
<span id="cb69-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - bbox_conf_thresh (float): Threshold for the bounding box confidence/probability. Bounding boxes with a confidence</span></span>
<span id="cb69-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                score below this threshold will be discarded.</span></span>
<span id="cb69-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb69-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb69-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - numpy.array: An array of proposals where each proposal is an array containing bounding box coordinates</span></span>
<span id="cb69-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                   and its associated probability, sorted in descending order by probability.</span></span>
<span id="cb69-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb69-16"></span>
<span id="cb69-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the model output</span></span>
<span id="cb69-18">    outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> calculate_boxes_and_probs(outputs, generate_output_grids_np(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>input_dims))</span>
<span id="cb69-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the proposals based on the confidence threshold</span></span>
<span id="cb69-20">    max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[:, :, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb69-21">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_probs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bbox_conf_thresh</span>
<span id="cb69-22">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[mask]</span>
<span id="cb69-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the proposals by probability in descending order</span></span>
<span id="cb69-24">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposals[..., <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].argsort()][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb69-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> proposals</span></code></pre></div>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> calc_iou(proposals:np.ndarray) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb70-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb70-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Calculates the Intersection over Union (IoU) for all pairs of bounding boxes (x,y,w,h) in 'proposals'.</span></span>
<span id="cb70-4"></span>
<span id="cb70-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    The IoU is a measure of overlap between two bounding boxes. It is calculated as the area of</span></span>
<span id="cb70-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    intersection divided by the area of union of the two boxes.</span></span>
<span id="cb70-7"></span>
<span id="cb70-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb70-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    proposals (2D np.array): A NumPy array of bounding boxes, where each box is an array [x, y, width, height].</span></span>
<span id="cb70-10"></span>
<span id="cb70-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb70-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (2D np.array): The IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb70-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb70-14"></span>
<span id="cb70-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate coordinates for the intersection rectangles</span></span>
<span id="cb70-16">    x1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb70-17">    y1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb70-18">    x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb70-19">    y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>], (proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>])[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>])</span>
<span id="cb70-20">    </span>
<span id="cb70-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate intersection areas</span></span>
<span id="cb70-22">    intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.maximum(x2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> np.maximum(y2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb70-23"></span>
<span id="cb70-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate union areas</span></span>
<span id="cb70-25">    areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposals[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb70-26">    unions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> areas[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> areas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> intersections</span>
<span id="cb70-27"></span>
<span id="cb70-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate IoUs</span></span>
<span id="cb70-29">    iou <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> intersections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> unions</span>
<span id="cb70-30"></span>
<span id="cb70-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the iou matrix</span></span>
<span id="cb70-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> iou</span></code></pre></div>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> nms_sorted_boxes(iou:np.ndarray, iou_thresh:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> np.ndarray:</span>
<span id="cb71-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb71-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Applies non-maximum suppression (NMS) to sorted bounding boxes.</span></span>
<span id="cb71-4"></span>
<span id="cb71-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It suppresses boxes that have high overlap (as defined by the IoU threshold) with a box that </span></span>
<span id="cb71-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    has a higher score.</span></span>
<span id="cb71-7"></span>
<span id="cb71-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb71-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou (np.ndarray): An IoU matrix where each element i,j represents the IoU of boxes i and j.</span></span>
<span id="cb71-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    iou_thresh (float): The IoU threshold for suppression. Boxes with IoU &gt; iou_thresh are suppressed.</span></span>
<span id="cb71-11"></span>
<span id="cb71-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb71-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    keep (np.ndarray): The indices of the boxes to keep after applying NMS.</span></span>
<span id="cb71-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb71-15"></span>
<span id="cb71-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a boolean mask to keep track of boxes</span></span>
<span id="cb71-17">    mask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>)</span>
<span id="cb71-18"></span>
<span id="cb71-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression</span></span>
<span id="cb71-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]):</span>
<span id="cb71-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> mask[i]:</span>
<span id="cb71-22">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress boxes with higher index and IoU &gt; threshold</span></span>
<span id="cb71-23">            mask[(iou[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> iou_thresh) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> i)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb71-24"></span>
<span id="cb71-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the indices of the boxes to keep</span></span>
<span id="cb71-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> np.arange(iou.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])[mask]</span></code></pre></div>
</section>
<section id="define-bounding-box-annotation-function-1" class="level4">
<h4 class="anchored" data-anchor-id="define-bounding-box-annotation-function-1">Define Bounding Box Annotation Function</h4>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb72-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> draw_bboxes_pil(image, boxes, labels, colors, font, width:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, font_size:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>, probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb72-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb72-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Annotates an image with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb72-4"></span>
<span id="cb72-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function draws bounding boxes on the provided image using the given box coordinates, </span></span>
<span id="cb72-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors, and labels. If probabilities are provided, they will be added to the labels.</span></span>
<span id="cb72-7"></span>
<span id="cb72-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb72-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    image (PIL.Image): The input image on which annotations will be drawn.</span></span>
<span id="cb72-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    boxes (list of tuples): A list of bounding box coordinates where each tuple is (x, y, w, h).</span></span>
<span id="cb72-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    labels (list of str): A list of labels corresponding to each bounding box.</span></span>
<span id="cb72-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    colors (list of str): A list of colors for each bounding box and its corresponding label.</span></span>
<span id="cb72-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    font (str): Path to the font file to be used for displaying the labels.</span></span>
<span id="cb72-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    width (int, optional): Width of the bounding box lines. Defaults to 2.</span></span>
<span id="cb72-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    font_size (int, optional): Size of the font for the labels. Defaults to 25.</span></span>
<span id="cb72-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    probs (list of float, optional): A list of probability scores corresponding to each label. Defaults to None.</span></span>
<span id="cb72-17"></span>
<span id="cb72-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb72-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    annotated_image (PIL.Image): The image annotated with bounding boxes, labels, and optional probability scores.</span></span>
<span id="cb72-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb72-21">    </span>
<span id="cb72-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a reference diagonal</span></span>
<span id="cb72-23">    REFERENCE_DIAGONAL <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span></span>
<span id="cb72-24">    </span>
<span id="cb72-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale the font size using the hypotenuse of the image</span></span>
<span id="cb72-26">    font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(font_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (np.hypot(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>image.size) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> REFERENCE_DIAGONAL))</span>
<span id="cb72-27">    </span>
<span id="cb72-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add probability scores to labels</span></span>
<span id="cb72-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> probs <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb72-30">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label, prob <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(labels, probs)]</span>
<span id="cb72-31">    </span>
<span id="cb72-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a copy of the image</span></span>
<span id="cb72-33">    annotated_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image.copy()</span>
<span id="cb72-34"></span>
<span id="cb72-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an ImageDraw object for drawing on the image</span></span>
<span id="cb72-36">    draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(annotated_image)</span>
<span id="cb72-37"></span>
<span id="cb72-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Loop through the bounding boxes and labels in the 'annotation' DataFrame</span></span>
<span id="cb72-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(labels)):</span>
<span id="cb72-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the bounding box coordinates</span></span>
<span id="cb72-41">        x, y, w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boxes[i]</span>
<span id="cb72-42"></span>
<span id="cb72-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a tuple of coordinates for the bounding box</span></span>
<span id="cb72-44">        shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x, y, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>w, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>h)</span>
<span id="cb72-45"></span>
<span id="cb72-46">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the bounding box on the image</span></span>
<span id="cb72-47">        draw.rectangle(shape, outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb72-48">        </span>
<span id="cb72-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the font file</span></span>
<span id="cb72-50">        fnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageFont.truetype(font, font_size)</span>
<span id="cb72-51">        </span>
<span id="cb72-52">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label box on the image</span></span>
<span id="cb72-53">        label_w, label_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw.textbbox(xy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>labels[i], font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb72-54">        draw.rectangle((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>label_w, y), outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[i], width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>width)</span>
<span id="cb72-55"></span>
<span id="cb72-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw the label on the image</span></span>
<span id="cb72-57">        draw.multiline_text((x, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>label_h), labels[i], font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> np.mean(colors[i]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">127.5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)</span>
<span id="cb72-58">        </span>
<span id="cb72-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> annotated_image</span></code></pre></div>
</section>
</section>
<section id="setting-up-the-project-1" class="level2">
<h2 class="anchored" data-anchor-id="setting-up-the-project-1">Setting Up the Project</h2>
<p>Next, we will set the folder location for the HEF model and JSON colormap file.</p>
<section id="set-the-directory-paths-1" class="level3">
<h3 class="anchored" data-anchor-id="set-the-directory-paths-1">Set the Directory Paths</h3>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The path to the checkpoint folder</span></span>
<span id="cb73-2">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span></code></pre></div>
</section>
<section id="download-a-font-file-1" class="level3">
<h3 class="anchored" data-anchor-id="download-a-font-file-1">Download a Font File</h3>
<p>We should also ensure we have a font file for annotating images.</p>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb74-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the font file</span></span>
<span id="cb74-2">font_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KFOlCnqEu92Fr1MmEU9vAw.ttf'</span></span>
<span id="cb74-3"></span>
<span id="cb74-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the font file</span></span>
<span id="cb74-5">download_file(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"https://fonts.gstatic.com/s/roboto/v30/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>font_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./"</span>)</span></code></pre></div>
</section>
</section>
<section id="loading-the-inference-resources" class="level2">
<h2 class="anchored" data-anchor-id="loading-the-inference-resources">Loading the Inference Resources</h2>
<p>Next, we will load the colormap and the compiled HEF model.</p>
<section id="load-the-colormap-1" class="level3">
<h3 class="anchored" data-anchor-id="load-the-colormap-1">Load the Colormap</h3>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The colormap path</span></span>
<span id="cb75-2">colormap_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*colormap.json'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb75-3"></span>
<span id="cb75-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the JSON colormap data</span></span>
<span id="cb75-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(colormap_path, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>:</span>
<span id="cb75-6">        colormap_json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>)</span>
<span id="cb75-7"></span>
<span id="cb75-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the JSON data to a dictionary        </span></span>
<span id="cb75-9">colormap_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]: item[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'color'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colormap_json[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'items'</span>]}</span>
<span id="cb75-10"></span>
<span id="cb75-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the class names from the colormap</span></span>
<span id="cb75-12">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(colormap_dict.keys())</span>
<span id="cb75-13"></span>
<span id="cb75-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of the colormap in integer format</span></span>
<span id="cb75-15">int_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> color) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> colormap_dict.values()]</span></code></pre></div>
</section>
<section id="load-the-compiled-hef-model" class="level3">
<h3 class="anchored" data-anchor-id="load-the-compiled-hef-model">Load the Compiled HEF Model</h3>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb76-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The HEF (Hailo Executable Format) model path</span></span>
<span id="cb76-2">hef_file_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(checkpoint_dir.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*.hef'</span>))[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb76-3"></span>
<span id="cb76-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the compiled HEF to Hailo device</span></span>
<span id="cb76-5">hef <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HEF(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(hef_file_path))</span>
<span id="cb76-6"></span>
<span id="cb76-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set VDevice (Virtual Device) params to disable the HailoRT service feature</span></span>
<span id="cb76-8">params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VDevice.create_params()</span>
<span id="cb76-9">params.scheduling_algorithm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> HailoSchedulingAlgorithm.NONE</span>
<span id="cb76-10"></span>
<span id="cb76-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Hailo virtual device with the specified parameters</span></span>
<span id="cb76-12">target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> VDevice(params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>params)</span>
<span id="cb76-13"></span>
<span id="cb76-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the "network groups" (connectivity groups, aka. "different networks") information from the .hef</span></span>
<span id="cb76-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Configure the device with the HEF and PCIe interface</span></span>
<span id="cb76-16">configure_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ConfigureParams.create_from_hef(hef<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>hef, interface<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>HailoStreamInterface.PCIe)</span>
<span id="cb76-17">network_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target.configure(hef, configure_params)</span>
<span id="cb76-18"></span>
<span id="cb76-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select the first network group (there's only one in this case)</span></span>
<span id="cb76-20">network_group <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> network_groups[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb76-21">network_group_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> network_group.create_params()</span>
<span id="cb76-22"></span>
<span id="cb76-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create input and output virtual streams params</span></span>
<span id="cb76-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># These specify the format of the input and output data (in this case, 32-bit float)</span></span>
<span id="cb76-25">input_vstreams_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> InputVStreamParams.make(network_group, format_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FormatType.FLOAT32)</span>
<span id="cb76-26">output_vstreams_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OutputVStreamParams.make(network_group, format_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>FormatType.FLOAT32)</span>
<span id="cb76-27"></span>
<span id="cb76-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get information about the input and output virtual streams</span></span>
<span id="cb76-29">input_vstream_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hef.get_input_vstream_infos()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb76-30">output_vstream_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> hef.get_output_vstream_infos()[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
</section>
</section>
<section id="tracking-objects-in-a-camera-feed" class="level2">
<h2 class="anchored" data-anchor-id="tracking-objects-in-a-camera-feed">Tracking Objects in a Camera Feed</h2>
<p>Next, we will define the dimensions for the camera feed preview and inference parameters for processing the model output.</p>
<section id="define-inference-parameters" class="level3">
<h3 class="anchored" data-anchor-id="define-inference-parameters">Define Inference Parameters</h3>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the desired preview size</span></span>
<span id="cb77-2">preview_width, preview_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">960</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">540</span></span>
<span id="cb77-3"></span>
<span id="cb77-4">bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.35</span></span>
<span id="cb77-5">iou_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span></span></code></pre></div>
</section>
<section id="detect-track-and-annotate-objects" class="level3">
<h3 class="anchored" data-anchor-id="detect-track-and-annotate-objects">Detect, Track, and Annotate Objects</h3>
<p>At last, we can set up a Picamera2 for video capture, initialize our object tracker, and implement our video processing loop.</p>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up window title for display</span></span>
<span id="cb78-2">window_title <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Camera Feed - Press 'q' to Quit"</span></span>
<span id="cb78-3"></span>
<span id="cb78-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Picamera2 object</span></span>
<span id="cb78-5">picam2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Picamera2()</span>
<span id="cb78-6"></span>
<span id="cb78-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print available sensor modes</span></span>
<span id="cb78-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Available sensor modes:"</span>)</span>
<span id="cb78-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, mode <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(picam2.sensor_modes):</span>
<span id="cb78-10">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Mode </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mode[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'size'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">x</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>mode[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fps'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">fps"</span>)</span>
<span id="cb78-11"></span>
<span id="cb78-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Choose a mode (let's say we want the second mode, index 1)</span></span>
<span id="cb78-13">chosen_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> picam2.sensor_modes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb78-14"></span>
<span id="cb78-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a configuration using the chosen mode</span></span>
<span id="cb78-16">config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> picam2.create_preview_configuration(</span>
<span id="cb78-17">    main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb78-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span>: chosen_mode[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span>],</span>
<span id="cb78-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"format"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RGB888"</span></span>
<span id="cb78-20">    },</span>
<span id="cb78-21">    controls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb78-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FrameRate"</span>: chosen_mode[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fps"</span>]</span>
<span id="cb78-23">    },</span>
<span id="cb78-24">    sensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{</span>
<span id="cb78-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_size"</span>: chosen_mode[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"size"</span>],</span>
<span id="cb78-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bit_depth"</span>: chosen_mode[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bit_depth"</span>]</span>
<span id="cb78-27">    }</span>
<span id="cb78-28">)</span>
<span id="cb78-29"></span>
<span id="cb78-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Configure the camera</span></span>
<span id="cb78-31">picam2.configure(config)</span>
<span id="cb78-32"></span>
<span id="cb78-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start the camera</span></span>
<span id="cb78-34">picam2.start()</span>
<span id="cb78-35"></span>
<span id="cb78-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize the ByteTracker for object tracking</span></span>
<span id="cb78-37">tracker <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BYTETracker(track_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, track_buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, match_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, frame_rate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>)</span>
<span id="cb78-38"></span>
<span id="cb78-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb78-40">    </span>
<span id="cb78-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Main processing loop</span></span>
<span id="cb78-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">while</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>:</span>
<span id="cb78-43">        start_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb78-44">        </span>
<span id="cb78-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture a frame</span></span>
<span id="cb78-46">        frame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> picam2.capture_array()</span>
<span id="cb78-47"></span>
<span id="cb78-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize and pad the sample image to the desired input size, retrieving transformation data.</span></span>
<span id="cb78-49">        input_img_np, transform_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_and_pad(frame, input_vstream_info.shape[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb78-50">        </span>
<span id="cb78-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the input image to NumPy format for the model</span></span>
<span id="cb78-52">        input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(input_img_np, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.float32)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb78-53">        input_tensor_np <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ascontiguousarray(input_tensor_np)</span>
<span id="cb78-54">                        </span>
<span id="cb78-55">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run inference</span></span>
<span id="cb78-56">        input_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {input_vstream_info.name: input_tensor_np}</span>
<span id="cb78-57">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> InferVStreams(network_group, input_vstreams_params, output_vstreams_params) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> infer_pipeline:</span>
<span id="cb78-58">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> network_group.activate(network_group_params):</span>
<span id="cb78-59">                infer_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> infer_pipeline.infer(input_data)</span>
<span id="cb78-60"></span>
<span id="cb78-61">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transpose and extract the first element of the quantized results</span></span>
<span id="cb78-62">        outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> infer_results[output_vstream_info.name].transpose(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb78-63">    </span>
<span id="cb78-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process the model output to get object proposals</span></span>
<span id="cb78-65">        proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> process_outputs(outputs, input_vstream_info.shape[:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], bbox_conf_thresh)</span>
<span id="cb78-66">        </span>
<span id="cb78-67">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply non-max suppression to filter overlapping proposals</span></span>
<span id="cb78-68">        proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nms_sorted_boxes(calc_iou(proposals[:, :<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), iou_thresh)</span>
<span id="cb78-69">        proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[proposal_indices]</span>
<span id="cb78-70">        </span>
<span id="cb78-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract bounding boxes, labels, and probabilities from proposals</span></span>
<span id="cb78-72">        bbox_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [adjust_bbox(bbox, transform_data) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bbox <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> proposals[:,:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb78-73">        label_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [class_names[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(idx)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>]]</span>
<span id="cb78-74">        probs_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals[:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span>
<span id="cb78-75"></span>
<span id="cb78-76">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize track IDs for detected objects</span></span>
<span id="cb78-77">        track_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(bbox_list)</span>
<span id="cb78-78"></span>
<span id="cb78-79">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert bounding boxes to top-left bottom-right (tlbr) format</span></span>
<span id="cb78-80">        tlbr_boxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(bbox_list).reshape(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>).copy()</span>
<span id="cb78-81">        tlbr_boxes[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> tlbr_boxes[:, :<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb78-82"></span>
<span id="cb78-83">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update tracker with detections</span></span>
<span id="cb78-84">        tracks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tracker.update(</span>
<span id="cb78-85">            output_results<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>np.concatenate([tlbr_boxes, probs_list[:, np.newaxis]], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb78-86">            img_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>frame.shape[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:],</span>
<span id="cb78-87">            img_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>frame.shape[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:])</span>
<span id="cb78-88"></span>
<span id="cb78-89">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tlbr_boxes) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(tracks) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb78-90">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Match detections with tracks</span></span>
<span id="cb78-91">            track_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> match_detections_with_tracks(tlbr_boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tlbr_boxes, track_ids<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>track_ids, tracks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tracks)</span>
<span id="cb78-92">    </span>
<span id="cb78-93">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter object detections based on tracking results</span></span>
<span id="cb78-94">            bbox_list, label_list, probs_list, track_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>[(bbox, label, prob, track_id) </span>
<span id="cb78-95">                                                                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bbox, label, prob, track_id </span>
<span id="cb78-96">                                                                <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(bbox_list, label_list, probs_list, track_ids) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> track_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb78-97">            </span>
<span id="cb78-98">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(bbox_list) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb78-99">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate the current frame with bounding boxes and tracking IDs</span></span>
<span id="cb78-100">                annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> draw_bboxes_pil(</span>
<span id="cb78-101">                    image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>Image.fromarray(frame), </span>
<span id="cb78-102">                    boxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bbox_list, </span>
<span id="cb78-103">                    labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>track_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> track_id, label <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(track_ids, label_list)],</span>
<span id="cb78-104">                    probs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>probs_list,</span>
<span id="cb78-105">                    colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[int_colors[class_names.index(i)] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> label_list],  </span>
<span id="cb78-106">                    font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>font_file,</span>
<span id="cb78-107">                )</span>
<span id="cb78-108">                annotated_frame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.resize(np.array(annotated_img), (preview_width, preview_height))</span>
<span id="cb78-109">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb78-110">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no detections, use the original frame</span></span>
<span id="cb78-111">            annotated_frame <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv2.resize(frame, (preview_width, preview_height))</span>
<span id="cb78-112">        </span>
<span id="cb78-113">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate and display FPS</span></span>
<span id="cb78-114">        end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.perf_counter()</span>
<span id="cb78-115">        processing_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> end_time <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> start_time</span>
<span id="cb78-116">        fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> processing_time</span>
<span id="cb78-117">    </span>
<span id="cb78-118">        fps_text <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"FPS: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fps<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb78-119">        cv2.putText(annotated_frame, fps_text, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>), cv2.FONT_HERSHEY_SIMPLEX, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb78-120">        </span>
<span id="cb78-121">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the annotated frame</span></span>
<span id="cb78-122">        cv2.imshow(window_title, annotated_frame)</span>
<span id="cb78-123">        </span>
<span id="cb78-124">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for 'q' key press to exit the loop</span></span>
<span id="cb78-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cv2.waitKey(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0xFF</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">ord</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'q'</span>):</span>
<span id="cb78-126">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb78-127"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">finally</span>:</span>
<span id="cb78-128">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Stop the camera and close the preview window</span></span>
<span id="cb78-129">    cv2.destroyAllWindows()</span>
<span id="cb78-130">    picam2.close()</span></code></pre></div>
<pre class="text"><code>[1:30:25.480652426] [128869][1;32m INFO[1;37mCamera[1;34mcamera_manager.cpp:325[0mlibcamera v0.3.2+27-7330f29b
[1:30:25.488873181] [128898][1;32m INFO[1;37mRPI[1;34mpisp.cpp:695[0mlibpisp version v1.0.7 28196ed6edcf 29-08-2024 (16:33:32)
[1:30:25.500040780] [128898][1;32m INFO[1;37mRPI[1;34mpisp.cpp:1154[0mRegistered camera /base/axi/pcie@120000/rp1/i2c@80000/imx708@1a to CFE device /dev/media0 and ISP device /dev/media1 using PiSP variant BCM2712_C0
[1:30:25.504580397] [128869][1;32m INFO[1;37mCamera[1;34mcamera.cpp:1197[0mconfiguring streams: (0) 640x480-XBGR8888 (1) 1536x864-BGGR_PISP_COMP1
[1:30:25.504707471] [128898][1;32m INFO[1;37mRPI[1;34mpisp.cpp:1450[0mSensor: /base/axi/pcie@120000/rp1/i2c@80000/imx708@1a - Selected sensor format: 1536x864-SBGGR10_1X10 - Selected CFE format: 1536x864-PC1B
[1:30:25.509482661] [128869][1;32m INFO[1;37mCamera[1;34mcamera.cpp:1197[0mconfiguring streams: (0) 640x480-XBGR8888 (1) 2304x1296-BGGR_PISP_COMP1
[1:30:25.509651716] [128898][1;32m INFO[1;37mRPI[1;34mpisp.cpp:1450[0mSensor: /base/axi/pcie@120000/rp1/i2c@80000/imx708@1a - Selected sensor format: 2304x1296-SBGGR10_1X10 - Selected CFE format: 2304x1296-PC1B
[1:30:25.515647718] [128869][1;32m INFO[1;37mCamera[1;34mcamera.cpp:1197[0mconfiguring streams: (0) 640x480-XBGR8888 (1) 4608x2592-BGGR_PISP_COMP1
[1:30:25.515820199] [128898][1;32m INFO[1;37mRPI[1;34mpisp.cpp:1450[0mSensor: /base/axi/pcie@120000/rp1/i2c@80000/imx708@1a - Selected sensor format: 4608x2592-SBGGR10_1X10 - Selected CFE format: 4608x2592-PC1B
[1:30:25.527309279] [128869][1;32m INFO[1;37mCamera[1;34mcamera.cpp:1197[0mconfiguring streams: (0) 1536x864-RGB888 (1) 1536x864-BGGR_PISP_COMP1
[1:30:25.527468649] [128898][1;32m INFO[1;37mRPI[1;34mpisp.cpp:1450[0mSensor: /base/axi/pcie@120000/rp1/i2c@80000/imx708@1a - Selected sensor format: 1536x864-SBGGR10_1X10 - Selected CFE format: 1536x864-PC1B


Available sensor modes:
Mode 0: (1536, 864)x120.13fps
Mode 1: (2304, 1296)x56.03fps
Mode 2: (4608, 2592)x14.35fps


libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile
libpng warning: iCCP: known incorrect sRGB profile</code></pre>
<p>A new window should pop up displaying the camera feed. I got approximately 30fps in my testing.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/images/20241007_10h26m55s_grim.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>Congratulations on completing this comprehensive tutorial. You’ve successfully learned how to deploy a YOLOX object detection model on a Raspberry Pi 5 using the Hailo-8L AI accelerator for real-time object tracking from a camera feed. This tutorial covered several aspects:</p>
<ol type="1">
<li>Setting up the Raspberry Pi 5 with the Hailo AI Kit and necessary software dependencies</li>
<li>Preparing and optimizing a YOLOX model for the Hailo-8L accelerator using the Dataflow Compiler</li>
<li>Compiling the optimized model into a Hailo Executable Format (HEF) file</li>
<li>Implementing efficient frame capture and processing using Picamera2</li>
<li>Integrating the ByteTrack algorithm for robust object tracking</li>
<li>Creating a real-time video processing pipeline that detects, tracks, and annotates objects</li>
</ol>
<p>This project provides a solid foundation for numerous real-world applications in edge AI and computer vision.</p>
<p>Some potential next steps to consider:</p>
<ol type="1">
<li>Experiment with different YOLOX model sizes or custom-trained models for specific use cases</li>
<li>Implement additional features like object counting, activity recognition, or anomaly detection</li>
<li>Integrate the system with other IoT devices or cloud services for more complex applications</li>
<li>Investigate power consumption optimization techniques for battery-powered deployments</li>
</ol>
<div class="callout callout-style-default callout-tip callout-titled" title="Questions:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Questions:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Feel free to post questions or problems related to this tutorial in the comments below. I try to make time to address them on Thursdays and Fridays.</li>
</ul>
</div>
</div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>onnx</category>
  <category>raspberry-pi</category>
  <category>hailo</category>
  <category>object-detection</category>
  <category>object-tracking</category>
  <category>yolox</category>
  <category>tutorial</category>
  <guid>https://christianjmills.com/posts/pytorch-train-object-detector-yolox-tutorial/rpi5-ai-kit-object-tracking/</guid>
  <pubDate>Tue, 15 Oct 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Setting Up a Local Python Environment with Mamba for Machine Learning Projects on Windows</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/</link>
  <description><![CDATA[ 




<ul>
<li>Introduction</li>
<li>An Overview of Machine Learning, PyTorch, and Jupyter</li>
<li>Further Learning</li>
<li>Installing Mamba</li>
<li>Access the Miniforge Prompt</li>
<li>Benefits of Using Virtual Environments</li>
<li>Creating a Python Environment</li>
<li>Package Overview</li>
<li>Installing PyTorch and Jupyter</li>
<li>Testing PyTorch and Jupyter Notebook Setup</li>
<li>Managing and Updating Packages with Mamba<br>
</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>This tutorial will guide you through installing <a href="https://mamba.readthedocs.io/en/latest/index.html">Mamba</a> on your Windows machine and using it to create Python environments. Mamba is a high-performance package manager for managing virtual environments, allowing you to maintain separate configurations for different projects without conflicts. It serves as a faster and more reliable drop-in replacement for <a href="https://docs.conda.io/en/latest/">conda</a>.</p>
<p>We’ll demonstrate Mamba’s effectiveness by installing PyTorch and Jupyter—essential tools for machine learning projects. We’ll verify the PyTorch installation by running a simple test in a Jupyter Notebook. By the end of this tutorial, you’ll be ready to start your machine learning projects using Mamba, PyTorch, and Jupyter.</p>
</section>
<section id="an-overview-of-machine-learning-pytorch-and-jupyter" class="level2">
<h2 class="anchored" data-anchor-id="an-overview-of-machine-learning-pytorch-and-jupyter">An Overview of Machine Learning, PyTorch, and Jupyter</h2>
<p><strong>Machine Learning</strong> enables computers to learn from data and make decisions or predictions without explicit programming. It’s crucial in fields like natural language processing, computer vision, and speech recognition.</p>
<p><strong><a href="https://pytorch.org/">PyTorch</a></strong> is a popular open-source machine learning framework that allows for tensor computations and dynamic computational graphs. Its flexibility and ease of use have led to widespread adoption.</p>
<p><strong><a href="https://jupyter.org/">Jupyter</a></strong> provides an interactive computing environment for creating and sharing documents containing live code, equations, visualizations, and narrative text. Jupyter Notebooks let you write, run, and debug code in a web-based platform.</p>
</section>
<section id="further-learning" class="level2">
<h2 class="anchored" data-anchor-id="further-learning">Further Learning</h2>
<p>If you’re new to machine learning and want to learn more, consider exploring the <a href="https://course.fast.ai/">Practical Deep Learning for Coders</a> course. It uses a hands-on approach with PyTorch and the <a href="https://docs.fast.ai/">fastai library</a> to teach you how to apply deep learning to real-world problems.</p>
</section>
<section id="installing-mamba" class="level2">
<h2 class="anchored" data-anchor-id="installing-mamba">Installing Mamba</h2>
<p>We can install Mamba using <a href="https://learn.microsoft.com/en-us/powershell/">PowerShell</a>. Type <code>powershell</code> into the Windows search bar and click <code>Open</code>.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="Installing PowerShell">
<div class="callout-header d-flex align-content-center" data-bs-toggle="collapse" data-bs-target=".callout-1-contents" aria-controls="callout-1" aria-expanded="true" aria-label="Toggle callout">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Installing PowerShell
</div>
<div class="callout-btn-toggle d-inline-block border-0 py-1 ps-1 pe-0 float-end"><i class="callout-toggle"></i></div>
</div>
<div id="callout-1" class="callout-1-contents callout-collapse collapse show">
<div class="callout-body-container callout-body">
<p>PowerShell is preinstalled on modern Windows versions. If it’s not present on your machine, you can follow the installation steps at the link below:</p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.4">Installing PowerShell on Windows</a></li>
</ul>
</div>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/windows-search-powershell.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>A command-line interface should open in a new window:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/powershell-interface.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Next, we will run the following commands inside the PowerShell interface to download and run the Miniforge3 installer:</p>
<ol type="1">
<li><p><strong>Download the Miniforge3 installer:</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Invoke-WebRequest</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Uri <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Windows-x86_64.exe"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>OutFile <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miniforge3-Windows-x86_64.exe"</span></span></code></pre></div>
<p>This command downloads the latest Miniforge3 installer for Windows from <a href="https://github.com/conda-forge/miniforge?tab=readme-ov-file#download">official Miniforge GitHub repository</a>.</p>
<ul>
<li><code>Invoke-WebRequest</code>: This cmdlet downloads content from a web page.</li>
<li><code>-Uri</code>: Specifies the URL to download from.</li>
<li><code>-OutFile</code>: Specifies where to save the downloaded file.</li>
</ul></li>
<li><p><strong>Install Miniforge3:</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start-Process</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>FilePath <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miniforge3-Windows-x86_64.exe"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>ArgumentList <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/S /InstallationType=JustMe /AddToPath=0 /RegisterPython=0"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>Wait</span></code></pre></div>
<p>This command silently runs the Miniforge3 installer.</p>
<ul>
<li><p><code>Start-Process</code>: Starts a new process (in this case, the installer).</p></li>
<li><p><code>-FilePath</code>: Specifies the program to run.</p>
<ul>
<li><code>-ArgumentList</code>: Provides arguments to the installer:
<ul>
<li><code>/S</code>: Runs the installer silently (no user interface).</li>
<li><code>/InstallationType=JustMe</code>: Installs for the current user only.</li>
<li><code>/AddToPath=0</code>: Doesn’t add Miniforge to the system PATH.</li>
<li><code>/RegisterPython=0</code>: Doesn’t register this as the system’s default Python.</li>
</ul></li>
<li><code>-Wait</code>: Waits for the installation to complete before continuing.</li>
</ul></li>
</ul></li>
<li><p><strong>Clean up:</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode powershell code-with-copy"><code class="sourceCode powershell"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Remove-Item</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Miniforge3-Windows-x86_64.exe"</span></span></code></pre></div>
<p>This command deletes the installer file after installation.</p>
<ul>
<li><code>Remove-Item</code>: Deletes the specified file.</li>
</ul></li>
</ol>
<p>We can close the PowerShell interface after running the last command.</p>
</section>
<section id="access-the-miniforge-prompt" class="level2">
<h2 class="anchored" data-anchor-id="access-the-miniforge-prompt">Access the Miniforge Prompt</h2>
<p>On Windows, we use Mamba through the Miniforge Prompt. It is a dedicated command-line interface for interacting with conda environments.</p>
<p>Type <code>Miniforge Prompt</code> into the Windows search bar and click <code>Open</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/windows-search-miniforge-prompt.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>A new command prompt will open at the location of your Windows user folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/miniforge-prompt-new.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Alternatively, you can activate the Miniforge Prompt from any regular command prompt with the following command:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">%USERPROFILE%\miniforge3\Scripts\activate</span></span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/command-prompt-activate-miniforge-prompt.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>The text in front of the current directory path indicates the name of the current conda environment.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/miniforge-prompt-new-highlight-env-name.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>We can get a list of the available conda environments and their locations using the following command:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> env list</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-env-list.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>The only one listed is <code>base</code>. If we go to the associated directory path in File Explorer, we’ll see the contents for the Miniforge3 installation. Miniforge3 will store any conda environments we create in the “envs” folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/miniforge3-env-location.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="benefits-of-using-virtual-environments" class="level2">
<h2 class="anchored" data-anchor-id="benefits-of-using-virtual-environments">Benefits of Using Virtual Environments</h2>
<p>Before we create a new Python virtual environment, let’s discuss why virtual environments are essential and how they benefit your Python projects.</p>
<ul>
<li><p><strong>Isolation of Dependencies</strong>: Virtual environments create isolated spaces for each project. This allows you to install and manage different package versions without conflicts. The dependencies of one project won’t interfere with those of another.</p></li>
<li><p><strong>Easier Project Management</strong>: By maintaining separate configurations for each project, virtual environments make it easy to replicate or share environments with team members. This ensures consistent behavior across different machines and aids collaboration, troubleshooting, and deployment.</p></li>
<li><p><strong>Simplified System Maintenance</strong>: Using virtual environments prevents cluttering your system-wide Python installation with various packages and versions. You can manage packages within each project’s environment without affecting other projects or your system.</p></li>
</ul>
</section>
<section id="creating-a-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-python-environment">Creating a Python Environment</h2>
<p>We can create new Python environments using the <code>mamba create</code> command. The following command will create one called <code>pytorch-env</code> with Python <code>3.10</code>:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pytorch-env"</span> python=3.10</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-create-env-command.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Mamba will ask you to confirm that you want to install the packages required to create the new conda environment. Type <code>Y</code> into the “Confirm changes” prompt.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-create-env-command-confirm-changes.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Alternatively, you can pre-approve the package installations by adding a <code>-y</code> to the end of the <code>mamba create</code> command.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pytorch-env"</span> python=3.10 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
<p>Looking in the <code>envs</code> directory, we see a new folder for the conda environment we created.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/miniforge-inspect-envs-folder.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Once Mamba finishes creating the new environment, it will tell us we can activate and deactivate it using the following commands:</p>
<p><strong>Activate:</strong></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> activate pytorch-env</span></code></pre></div>
<p><strong>Deactivate:</strong></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> deactivate</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-env-created.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>When we activate it, the name in front of the current directory will change accordingly.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-activate-env.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>Before installing PyTorch and Jupyter, let’s briefly explore what each package does and why they’re important for machine learning projects.</p>
<ul>
<li><strong>PyTorch</strong>: <a href="https://pytorch.org/docs/stable/index.html">Documentation</a>
<ul>
<li>PyTorch is a fast and flexible open-source machine learning framework. It allows you to perform tensor computations, build dynamic computational graphs, and create custom machine learning models.</li>
</ul></li>
<li><strong>torchvision</strong>: <a href="https://pytorch.org/vision/stable/index.html">Documentation</a>
<ul>
<li><code>torchvision</code> provides tools for computer vision tasks, including popular datasets, model architectures, and image transformations.</li>
</ul></li>
<li><strong>torchaudio</strong>: <a href="https://pytorch.org/audio/stable/index.html">Documentation</a>
<ul>
<li><code>torchaudio</code> offers utilities and datasets for audio processing, such as functions for reading and writing audio files, loading popular audio datasets, and applying audio-specific transformations.</li>
</ul></li>
<li><strong>Jupyter</strong>: <a href="https://jupyter.org/">Website</a>
<ul>
<li>Jupyter is an open-source project that lets you create and share documents containing live code, equations, visualizations, and text. With Jupyter Notebook, you can write, run, and debug code in a web-based environment while including visualizations and explanatory text.</li>
</ul></li>
</ul>
</section>
<section id="installing-pytorch-and-jupyter" class="level2">
<h2 class="anchored" data-anchor-id="installing-pytorch-and-jupyter">Installing PyTorch and Jupyter</h2>
<p>We can install packages in our custom Python environment using <code>mamba</code> or the <a href="https://packaging.python.org/en/latest/key_projects/#pip"><code>pip</code></a> package installer. To use <code>mamba,</code> we replace the word <code>conda</code> in any <code>conda</code> install commands.</p>
<p>These are the <code>mamba</code> and <code>pip</code> commands to install <a href="https://pytorch.org/">PyTorch</a> on Windows machines with Nvidia GPUs:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Mamba</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Pip</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install pytorch torchvision torchaudio pytorch-cuda=12.4 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> pytorch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia</span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install torch torchvision torchaudio <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--index-url</span> https://download.pytorch.org/whl/cu124</span></code></pre></div>
</div>
</div>
</div>
<p>For users without an Nvidia GPU:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Mamba</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Pip</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install pytorch torchvision torchaudio cpuonly <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> pytorch</span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install torch torchvision torchaudio</span></code></pre></div>
</div>
</div>
</div>
<p>I’ll install the packages with <code>mamba</code> for this tutorial. As before, type <code>Y</code> into the “Confirm changes” prompt.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-install-pytorch-confirm-changes.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Alternatively, you can pre-approve the package installations by adding a <code>-y</code> to the end of the <code>mamba install</code> command.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install pytorch torchvision torchaudio pytorch-cuda=12.4 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> pytorch <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> nvidia <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
<p>Installation time can vary depending on your system’s hardware and Internet speed. Once it finishes, we’ll install Jupyter using the following command:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Mamba</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Pip</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install jupyter <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install jupyter</span></code></pre></div>
</div>
</div>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/mamba-install-jupyter.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="testing-pytorch-and-jupyter-notebook-setup" class="level2">
<h2 class="anchored" data-anchor-id="testing-pytorch-and-jupyter-notebook-setup">Testing PyTorch and Jupyter Notebook Setup</h2>
<p>Now that we have PyTorch and Jupyter installed in our Python environment, we can verify everything works as expected by importing PyTorch into a Jupyter Notebook.</p>
<p>We can launch a Jupyter Notebook environment using the following command:</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> notebook</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/jupyter-notebook-command.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>The Jupyter Notebook environment will launch in a new tab in your default web browser.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/new-jupyter-notebook-environment.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>To create a new Jupyter Notebook, open the <code>New</code> drop-down menu and select the <code>Python 3 (ipykernel)</code>option.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/jupyter-create-new-notebook.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>The notebook will open in a new tab.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/jupyter-new-notebook.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>We can import PyTorch and verify it can use the Nvidia GPU by running the following code in the notebook:</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb18-2">torch.cuda.is_available()</span></code></pre></div>
<p>Select the code cell with your mouse and press <code>Ctrl+Enter</code> to run the code or <code>Shift+Enter</code> to run the code and move to the next cell.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/images/jupyter-notebook-torch-cuda-is-available.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</section>
<section id="managing-and-updating-packages-with-mamba" class="level2">
<h2 class="anchored" data-anchor-id="managing-and-updating-packages-with-mamba">Managing and Updating Packages with Mamba</h2>
<p>This section covers the commands to manage and update packages in your Python environment using Mamba. Proper package management is crucial for maintaining project stability and ensuring compatibility between dependencies.</p>
<section id="listing-installed-packages" class="level3">
<h3 class="anchored" data-anchor-id="listing-installed-packages">Listing Installed Packages</h3>
<p>To view all the installed packages within your active Python environment, use the following command:</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> list</span></code></pre></div>
<p>This command will display a list of installed packages and their respective versions and channels.</p>
</section>
<section id="updating-a-package" class="level3">
<h3 class="anchored" data-anchor-id="updating-a-package">Updating a Package</h3>
<p>Updating a package to its latest version is simple with Mamba. Use the following command, replacing package-name with the name of the package you want to update:</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> update package-name</span></code></pre></div>
<p>Mamba will search for the latest version of the package, resolve any dependencies, and prompt you to confirm the update.</p>
</section>
<section id="updating-all-packages" class="level3">
<h3 class="anchored" data-anchor-id="updating-all-packages">Updating All Packages</h3>
<p>To update all packages within the active Python environment to their latest versions, run the following command:</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> update <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span></code></pre></div>
<p>Mamba will check for updates for all installed packages and prompt you to confirm the changes.</p>
</section>
<section id="installing-a-specific-package-version" class="level3">
<h3 class="anchored" data-anchor-id="installing-a-specific-package-version">Installing a Specific Package Version</h3>
<p>To install a specific package version, use the “=” sign to append the desired number to the package name. For example, to install version 1.0.0 of a package named example-package, use the following command:</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> install example-package=1.0.0</span></code></pre></div>
</section>
<section id="removing-a-package" class="level3">
<h3 class="anchored" data-anchor-id="removing-a-package">Removing a Package</h3>
<p>To remove a package from the active Python environment, use the remove command, replacing package-name with the name of the package you want to remove:</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb23-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> remove package-name</span></code></pre></div>
<p>Mamba will prompt you to confirm the removal of the package and its dependencies.</p>
</section>
<section id="searching-for-packages" class="level3">
<h3 class="anchored" data-anchor-id="searching-for-packages">Searching for Packages</h3>
<p>You can search for packages across various channels using the search command. To search for a package named example-package, run:</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb24-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> search example-package</span></code></pre></div>
<p>This command will display a list of available versions and channels for the specified package.</p>
<p>With these commands, you can effectively manage and update packages in your Python environment using Mamba, ensuring your projects stay up-to-date and compatible with the latest dependencies.</p>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this tutorial, you accomplished the following:</p>
<ul>
<li><strong>Installed the Mamba package manager</strong> on your Windows machine.</li>
<li><strong>Created a local Python virtual environment</strong> for your machine learning project.</li>
<li><strong>Installed essential tools</strong> like PyTorch and Jupyter to help build machine learning models.</li>
</ul>
<p>By leveraging virtual environments, you can:</p>
<ul>
<li>Maintain separate configurations for different projects.</li>
<li>Avoid dependency conflicts between packages.</li>
<li>Streamline project management and collaboration.</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Questions:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Questions:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Feel free to post questions or problems related to this tutorial in the comments below. I try to make time to address them on Thursdays and Fridays.</li>
</ul>
</div>
</div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>mamba</category>
  <category>conda</category>
  <category>getting-started</category>
  <category>tutorial</category>
  <category>windows</category>
  <guid>https://christianjmills.com/posts/mamba-getting-started-tutorial-windows/</guid>
  <pubDate>Sat, 05 Oct 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Notes on The Great Mental Models - Volume 1: General Thinking Concepts</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/the-great-mental-models-book-series-notes/volume-1/</link>
  <description><![CDATA[ 




<ul>
<li>Preface</li>
<li>Introduction: Acquiring Wisdom<br>
</li>
<li>Mental Model #1: The Map is Not the Territory<br>
</li>
<li>Mental Model #2: Circle of Confidence<br>
</li>
<li>Mental Model #3: First Principles Thinking<br>
</li>
<li>Mental Model #4: Thought Experiment<br>
</li>
<li>Mental Model #5: Second-Order Thinking<br>
</li>
<li>Mental Model #6: Probabilistic Thinking<br>
</li>
<li>Mental Model #7: Inversion<br>
</li>
<li>Mental Model #8: Occam’s Razor<br>
</li>
<li>Mental Model #9: Hanlon’s Razor</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled" title="Book LInks:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://fs.blog/tgmm/">Series Homepage</a></li>
</ul>
</div>
</div>
<blockquote class="blockquote">
<p>“You only think you know as a matter of fact, and most of your actions are based on incomplete knowledge, and you really don’t know what it is all about, or what the purpose of the world is, or know a great deal of other things. It is possible to live and not know.” - Richard Feynman</p>
</blockquote>
<section id="preface" class="level2">
<h2 class="anchored" data-anchor-id="preface">Preface</h2>
<section id="introduction-educations-shortcomings-and-real-world-challenges" class="level3">
<h3 class="anchored" data-anchor-id="introduction-educations-shortcomings-and-real-world-challenges">Introduction: Education’s Shortcomings and Real-World Challenges</h3>
<ul>
<li><strong>Education’s Failure to Prepare for Reality</strong>: Parrish argues that traditional education did not adequately prepare him for the complexities of the real world.</li>
<li><strong>September 11th and a Shift in Priorities</strong>: Parrish’s job at an intelligence agency was significantly impacted by the events of September 11, 2001. The required skills and tasks changed drastically.</li>
<li><strong>Computer Science Background vs.&nbsp;Human Dynamics</strong>: Parrish’s background in computer science, focused on logic and code, did not equip him to deal with the human element of decision-making, including the impact on individuals, families, and countries.</li>
<li><strong>Unexpected Responsibilities and Lack of Guidance</strong>: He was thrust into a series of promotions without proper guidance, facing responsibilities he felt unprepared for.</li>
<li><strong>The Weight of Decisions</strong>: Parrish realized that his decisions carried significant weight, affecting not just his employees but also their families, and impacting both his own country and others.</li>
<li><strong>Recognizing the Obligation to Make Good Decisions</strong>: Despite lacking a clear framework for decision-making, Parrish felt a strong obligation to make the best possible choices.</li>
</ul>
</section>
<section id="seeking-mentorship-and-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="seeking-mentorship-and-knowledge">Seeking Mentorship and Knowledge</h3>
<ul>
<li><strong>Finding Mentors</strong>: To improve his decision-making abilities, Parrish sought out mentors, observing their actions and learning from their experience.</li>
<li><strong>Extensive Reading</strong>: He engaged in extensive reading on the topic of decision-making.</li>
<li><strong>Pursuing an MBA</strong>: Parrish even returned to school to pursue an MBA, hoping it would provide the necessary skills and knowledge for effective decision-making. He viewed it as achieving a specific “end state” rather than an ongoing process.</li>
<li><strong>Disillusionment with the MBA Program</strong>: His expectations for the MBA program were quickly challenged when he encountered an open-book exam. This experience led him to question the rigor and value of the program.</li>
</ul>
</section>
<section id="a-turning-point-embracing-open-book-exams-and-discovering-charlie-munger" class="level3">
<h3 class="anchored" data-anchor-id="a-turning-point-embracing-open-book-exams-and-discovering-charlie-munger">A Turning Point: Embracing Open-Book Exams and Discovering Charlie Munger</h3>
<ul>
<li><strong>Shifting Perspective on Open-Book Exams</strong>: Parrish realized that open-book exams offered a unique advantage: he couldn’t fail as long as he knew where to find the answers within the allowed materials.</li>
<li><strong>Liberation from Rote Learning</strong>: This realization freed him from the pressure of memorization and allowed him to focus on deeper understanding and exploration.</li>
<li><strong>Encountering Charlie Munger</strong>: He shifted his attention to learning about Charlie Munger, a figure mentioned in his classes.</li>
<li><strong>From Theory to Practical Wisdom</strong>: This marked a transition from theoretical, detached examples to the real-world wisdom of a highly successful businessman.</li>
<li><strong>Charlie Munger’s Background</strong>: Munger is the billionaire business partner of Warren Buffett at Berkshire Hathaway.</li>
<li><strong>Munger’s Appeal</strong>: Parrish describes Munger as likable, intelligent, witty, and irreverent.</li>
<li><strong>Finding Value in Practical Knowledge</strong>: Discovering Munger provided access to knowledge derived from real-world experience and a commitment to understanding how the world works.</li>
<li><strong>The Compelling Nature of Munger’s Success</strong>: Munger’s professional success further enhanced the appeal of his approach to decision-making.</li>
</ul>
</section>
<section id="the-latticework-of-mental-models" class="level3">
<h3 class="anchored" data-anchor-id="the-latticework-of-mental-models">The Latticework of Mental Models</h3>
<ul>
<li><strong>Munger’s Approach to Problem-Solving</strong>: Munger advocates for using a “<strong>broad latticework of mental models</strong>” to approach problems.</li>
<li><strong>Definition of Mental Models</strong>: Mental models are simplified representations of knowledge from various disciplines that can be applied to understand the world better.</li>
<li><strong>The Power of Mental Models</strong>: Munger suggests that mental models help identify relevant information in a given situation and establish reasonable parameters for decision-making.</li>
<li><strong>Practical Effectiveness</strong>: Parrish emphasizes that Munger’s track record demonstrates the effectiveness of this approach in practice.</li>
</ul>
</section>
</section>
<section id="introduction-acquiring-wisdom" class="level2">
<h2 class="anchored" data-anchor-id="introduction-acquiring-wisdom">Introduction: Acquiring Wisdom</h2>
<ul>
<li><p><strong>Analogy of the Fish</strong>:</p>
<ul>
<li>Two young fish encounter an older fish who asks, “How’s the water?”</li>
<li>One young fish later asks, “What the hell is water?”</li>
<li><strong>Meaning</strong>: This analogy by David Foster Wallace highlights how we often fail to recognize the most fundamental aspects of our environment and experiences because they are so pervasive.</li>
</ul></li>
<li><p><strong>Blind Spots</strong>:</p>
<ul>
<li>In life and business, the person with the fewest blind spots wins.</li>
<li>Removing blind spots leads to a better understanding of reality, improved thinking, and better choices.</li>
</ul></li>
<li><p><strong>Thinking Better</strong>:</p>
<ul>
<li>Finding simple processes to approach problems from multiple perspectives.</li>
<li>Choosing solutions aligned with what matters to us.</li>
</ul></li>
<li><p><strong>Wisdom</strong>: The skill of finding the right solutions for the right problems.</p></li>
<li><p><strong>Pursuit of Wisdom</strong>:</p>
<ul>
<li>Uncovering how things work.</li>
<li>Continuously learning and improving our understanding.</li>
<li>Getting out of our own way to see the world as it truly is.</li>
</ul></li>
<li><p><strong>Benefits of Understanding</strong>:</p>
<ul>
<li>Better decisions based on knowledge rather than ignorance.</li>
<li>Preparation for unpredictable problems.</li>
<li>Avoiding problems by understanding their root causes and potential consequences.</li>
</ul></li>
<li><p><strong>Peter Bevelin’s Approach</strong>:</p>
<blockquote class="blockquote">
<p>“I don’t want to be a great problem solver. I want to avoid problems, prevent them from happening, and doing it right from the beginning.”</p>
</blockquote></li>
<li><p><strong>How to Do Things Right</strong>:</p>
<ul>
<li>Understand how the world works.</li>
<li>Adjust our behavior accordingly.</li>
</ul></li>
<li><p><strong>Thinking Better</strong>:</p>
<ul>
<li>Not necessarily about being a genius.</li>
<li>Focused on the processes used to uncover reality and the choices made based on that understanding.</li>
</ul></li>
</ul>
<section id="mental-models-a-framework-for-understanding" class="level3">
<h3 class="anchored" data-anchor-id="mental-models-a-framework-for-understanding">Mental Models: A Framework for Understanding</h3>
<ul>
<li><strong>Purpose of the Book</strong>:
<ul>
<li>Introduces the concept of <strong>mental models</strong>.</li>
<li>Explores the most useful mental models across various aspects of life.</li>
</ul></li>
<li><strong>What are Mental Models?</strong>
<ul>
<li><strong>Mental models</strong> describe how the world works.</li>
<li>They shape our thinking, understanding, and beliefs.</li>
<li>They are largely subconscious and influence how we perceive and interpret information.</li>
<li>They help us infer causality, identify patterns, and draw analogies.</li>
</ul></li>
<li><strong>Definition</strong>:
<ul>
<li>A <strong>mental model</strong> is a representation of how something works.</li>
<li>We use models to simplify complexity and organize our understanding.</li>
</ul></li>
<li><strong>Importance of Mental Models</strong>:
<ul>
<li>We use mental models daily to think, decide, and understand the world.</li>
<li>Some models are true, while others are false.</li>
<li>The book focuses on the <strong>great mental models</strong>, those with the broadest utility.</li>
</ul></li>
<li><strong>Volume 1 Focus</strong>:
<ul>
<li>Presents nine <strong>general thinking concepts</strong>.</li>
<li>These models are often overlooked but are essential for rational decision-making.</li>
<li>They offer different lenses to examine situations from various perspectives.</li>
</ul></li>
<li><strong>Fundamentals of Knowledge</strong>:
<ul>
<li>Core ideas from all fields of study reveal principles about how the universe works.</li>
<li>These principles are crucial for navigating life.</li>
<li>The models in the series come from fundamental disciplines, but no prior knowledge is required.</li>
</ul></li>
<li><strong>Benefits of Mental Models</strong>:
<ul>
<li>Help us minimize risk by understanding the forces at play.</li>
<li>Allow us to anticipate potential consequences.</li>
<li>Multidisciplinary thinking reduces vulnerability and fosters adaptability.</li>
<li>Access to diverse knowledge provides more solutions.</li>
</ul></li>
</ul>
</section>
<section id="understanding-reality" class="level3">
<h3 class="anchored" data-anchor-id="understanding-reality">Understanding Reality</h3>
<ul>
<li><strong>Importance of Understanding Reality</strong>:
<ul>
<li>Essential for accurately perceiving and addressing problems.</li>
<li>Requires breaking down problems into their fundamental parts to reveal interconnections.</li>
</ul></li>
<li><strong>Bottom-Up Perspective</strong>:
<ul>
<li>Exposes causal relationships and their impact on the present and future.</li>
<li>Enables accurate descriptions of situations.</li>
</ul></li>
<li><strong>Mental Models as Lenses</strong>:
<ul>
<li>Illuminate interconnections within problems.</li>
<li>The more lenses used, the more of reality is revealed.</li>
<li>Deeper understanding leads to better-informed actions.</li>
</ul></li>
<li><strong>Complexity and Lenses</strong>:
<ul>
<li>Simple problems require fewer lenses.</li>
<li>Complex problems benefit from a wider range of lenses.</li>
<li>Most real-world problems are multidimensional, making multiple lenses valuable.</li>
</ul></li>
</ul>
</section>
<section id="keeping-your-feet-on-the-ground" class="level3">
<h3 class="anchored" data-anchor-id="keeping-your-feet-on-the-ground">Keeping Your Feet on the Ground</h3>
<ul>
<li><strong>Antaeus Myth</strong>:
<ul>
<li>Antaeus, a giant, gained strength from contact with the earth.</li>
<li>Hercules defeated him by lifting him off the ground, severing his connection to his source of power.</li>
</ul></li>
<li><strong>Relevance to Understanding</strong>:
<ul>
<li><strong>Understanding must be grounded in reality to be effective.</strong></li>
<li>When understanding is separated from reality, it loses its power.</li>
</ul></li>
<li><strong>Continuous Process</strong>:
<ul>
<li>Testing understanding against reality and updating it accordingly is an ongoing process.</li>
</ul></li>
<li><strong>Testing Ideas</strong>:
<ul>
<li>Putting ideas into action is crucial for determining their validity.</li>
<li>Without real-world testing, understanding remains theoretical and potentially flawed.</li>
</ul></li>
</ul>
</section>
<section id="getting-in-our-own-way" class="level3">
<h3 class="anchored" data-anchor-id="getting-in-our-own-way">Getting in Our Own Way</h3>
<ul>
<li><p><strong>Barriers to Learning</strong>:</p>
<ul>
<li>Ourselves are often the biggest obstacle to learning from reality.</li>
<li>We have blind spots that prevent us from seeing what we don’t notice or aren’t looking for.</li>
</ul></li>
<li><p><strong>Three Sources of Failure</strong>:</p>
<ol type="1">
<li><strong>Lack of Perspective</strong>:
<ul>
<li><strong><a href="https://en.wikipedia.org/wiki/Galileo%27s_ship">Galileo’s Ship</a> Analogy</strong>: Demonstrates the limitations of our default perspective.</li>
<li>We need to be open to other viewpoints to gain a fuller understanding.</li>
</ul></li>
<li><strong>Ego-Induced Denial</strong>:
<ul>
<li>We often have too much invested in our opinions to accept feedback and update our beliefs.</li>
<li><strong>Fear of Criticism</strong>: We avoid putting our ideas out there to protect ourselves from being wrong.</li>
<li><strong>Defensive Mindset</strong>: When our ideas are criticized, our ego defends them instead of seeking improvement.</li>
</ul></li>
<li><strong>Distance from Consequences</strong>:
<ul>
<li>The further we are from the consequences of our decisions, the easier it is to maintain flawed beliefs.</li>
<li><strong>Hot Stove Analogy</strong>: We quickly learn from immediate consequences (pain) and update our understanding.</li>
<li><strong>Organizational Distance</strong>: In large organizations, we may be removed from the direct impact of our decisions, hindering feedback and learning.</li>
<li><strong>Ego and Narrative</strong>: Distance allows our ego to create narratives that justify our actions, even when they are flawed.</li>
</ul></li>
</ol></li>
<li><p><strong>Confucius’s Wisdom</strong>:</p>
<blockquote class="blockquote">
<p>“A man who has committed a mistake and doesn’t correct it is committing another mistake.”</p>
</blockquote></li>
<li><p><strong>Cognitive Biases</strong>: We often fail to perceive information that contradicts our existing beliefs.</p></li>
<li><p><strong>Charles Darwin’s Approach</strong>:</p>
<ul>
<li>Notice things that easily escape attention.</li>
<li>Ask “why” things happen.</li>
</ul></li>
<li><p><strong>Value of Simple Ideas</strong>:</p>
<ul>
<li>We tend to undervalue simple ideas and overvalue complex ones.</li>
<li>Simple ideas are crucial for preventing complex problems.</li>
</ul></li>
<li><p><strong>Elementary Principles</strong>:</p>
<ul>
<li>The great mental models are often based on fundamental, time-tested principles from various disciplines.</li>
<li>Understanding these principles allows us to adapt to changing circumstances.</li>
</ul></li>
</ul>
</section>
<section id="understanding-is-not-enough" class="level3">
<h3 class="anchored" data-anchor-id="understanding-is-not-enough">Understanding is Not Enough</h3>
<ul>
<li><strong>Actionable Insights</strong>:
<ul>
<li>Mental models are not just theoretical; they provide actionable insights for positive change.</li>
</ul></li>
<li><strong>Example of Interruptions</strong>:
<ul>
<li>Knowing that you interrupt people is useless without changing your behavior.</li>
<li>Failure to adapt reinforces negative perceptions and hinders improvement.</li>
</ul></li>
<li><strong>Consequences of Inaction</strong>:
<ul>
<li>Others may perceive your inaction as a lack of caring.</li>
<li>You may be surprised by repeated negative outcomes despite understanding the issue.</li>
</ul></li>
<li><strong>Understanding and Adaptation</strong>:
<ul>
<li>In the real world, success requires both understanding and adapting to reality.</li>
</ul></li>
<li><strong>Suboptimal Decisions and Mistakes</strong>:
<ul>
<li>Fear of learning and admitting ignorance leads to poor decisions.</li>
<li>Poor decisions cause stress, anxiety, and wasted time.</li>
</ul></li>
<li><strong>Delayed Consequences</strong>:
<ul>
<li>The burden of poor decisions often becomes apparent later when fixing mistakes consumes time and resources.</li>
</ul></li>
<li><strong>Passivity vs.&nbsp;Agency</strong>:
<ul>
<li>We are not passive victims of our circumstances.</li>
<li>The world reveals itself to us, and we respond.</li>
</ul></li>
<li><strong>Ego’s Dual Role</strong>:
<ul>
<li>Ego can hinder learning but also motivates us to achieve ambitious goals.</li>
<li>We need to discern when ego is helpful and when it’s harmful.</li>
</ul></li>
<li><strong>Short-Term vs.&nbsp;Long-Term</strong>: We often prioritize short-term ego protection over long-term happiness.</li>
<li><strong>Black and White Thinking</strong>: We tend to view things as either good or bad based on whether they align with our beliefs.</li>
<li><strong>Openness to Feedback</strong>:
<ul>
<li>The world provides valuable feedback if we are open to it.</li>
<li>Keeping our feet on the ground allows us to learn and adapt.</li>
</ul></li>
</ul>
</section>
<section id="mental-models-and-how-we-use-them" class="level3">
<h3 class="anchored" data-anchor-id="mental-models-and-how-we-use-them">Mental Models and How We Use Them</h3>
<ul>
<li><strong>Gravity as a Mental Model</strong>:
<ul>
<li>We all have a mental model of gravity, even if we don’t consciously think about it.</li>
<li>This model helps us understand and predict how gravity works in everyday life.</li>
</ul></li>
<li><strong>Applications of the Gravity Model</strong>:
<ul>
<li>Explaining the movement of celestial bodies.</li>
<li>Informing the design of structures (bridges, airplanes).</li>
<li>Assessing safety in various situations.</li>
</ul></li>
<li><strong>Metaphorical Use</strong>:
<ul>
<li>We use gravity as a metaphor to describe the influence of strong personalities (e.g., “pulled into her orbit”).</li>
<li><strong>Sales Techniques</strong>: Salespeople leverage the principle of diminishing influence with distance to encourage immediate purchases.</li>
</ul></li>
<li><strong>Reliability and Limitations</strong>:
<ul>
<li>Gravity is a time-tested and reliable model.</li>
<li>Not all models are as reliable as gravity.</li>
<li>Some models are only applicable in specific situations.</li>
<li>Some models are flawed or untested.</li>
</ul></li>
<li><strong>The Cost of Flawed Models</strong>:
<ul>
<li><strong>Bloodletting Example</strong>: The flawed model of bloodletting as a cure caused unnecessary deaths.</li>
<li>Flawed models lead to misunderstandings of situations, variables, and cause-and-effect relationships, resulting in suboptimal actions.</li>
</ul></li>
<li><strong>Better Models, Better Thinking</strong>:
<ul>
<li>The accuracy of our mental models directly impacts the quality of our thinking.</li>
<li>Understanding reality allows us to make better decisions and avoid harmful actions.</li>
<li>Good decision-making often involves avoiding bad decisions.</li>
</ul></li>
<li><strong>Sources of Error</strong>:
<ol type="1">
<li><strong>Wrong Model</strong>: The model doesn’t reflect reality.</li>
<li><strong>Misapplication</strong>: Applying a correct model to an inappropriate situation.</li>
</ol></li>
<li><strong>Bloodletting Revisited</strong>:
<ul>
<li>The bloodletting model persisted because it was part of a larger system of flawed medical models.</li>
</ul></li>
<li><strong>Updating Models</strong>:
<ul>
<li>We must be willing to update our models when evidence contradicts them.</li>
<li>Continuous testing and openness to feedback are essential for refining our understanding.</li>
</ul></li>
<li><strong>Sample Size and Refinement</strong>:
<ul>
<li>Examining the results of applying a model over a large sample size helps refine its accuracy.</li>
</ul></li>
</ul>
</section>
<section id="the-power-of-acquiring-new-models" class="level3">
<h3 class="anchored" data-anchor-id="the-power-of-acquiring-new-models">The Power of Acquiring New Models</h3>
<ul>
<li><p><strong>Quality of Thinking</strong>:</p>
<ul>
<li>The quality of our thinking is influenced by the mental models we possess.</li>
<li>We need both accurate and diverse models to understand complex situations.</li>
</ul></li>
<li><p><strong>Importance of Variety</strong>:</p>
<ul>
<li>Specialization often limits our exposure to diverse models.</li>
<li>We tend to overuse familiar models even when they are not appropriate.</li>
</ul></li>
<li><p><strong>Disciplinary Blind Spots</strong>:</p>
<ul>
<li>People from different disciplines tend to default to models specific to their field, creating blind spots.</li>
<li><strong>“Hammer and Nail” Analogy</strong>: We tend to approach problems with the tools we are most familiar with, even if they are not the best fit.</li>
</ul></li>
<li><p><strong>Elephant Parable</strong>:</p>
<ul>
<li>Blind men touching different parts of an elephant each perceive it differently, illustrating the limitations of a single perspective.</li>
<li><a href="https://149664534.v2.pressablecdn.com/wp-content/uploads/2024/04/vol1-inside.jpg">Image of the Elephant Parable</a></li>
</ul></li>
<li><p><strong>Disciplinary Limitations</strong>:</p>
<ul>
<li>Each discipline offers a partial truth, but none hold the complete truth.</li>
</ul></li>
<li><p><strong>Forest Analogy</strong>:</p>
<ul>
<li>Different professionals (botanist, environmentalist, engineer, business person) will focus on different aspects of a forest, demonstrating the need for multidisciplinary perspectives.</li>
</ul></li>
<li><p><strong>Latticework of Mental Models</strong>:</p>
<ul>
<li><strong>Latticework</strong>: A series of interconnected points that reinforce each other.</li>
<li>Mental models can be conceptualized as a latticework, where models connect and interact to create a comprehensive framework for understanding.</li>
</ul></li>
<li><p><strong>Charlie Munger on Latticework</strong>:</p>
<blockquote class="blockquote">
<p>“Well, the first rule is that you can’t really know anything if you just remember isolated facts and try to bang them back. If the facts don’t hang together on a latticework of theory, you don’t have them in a usable form.” “You’ve got to have the models in your head, and you’ve got to array your experience both vicarious and direct on this latticework of models.”</p>
</blockquote></li>
<li><p><strong>Importance of Connecting Knowledge</strong>:</p>
<ul>
<li>Simply memorizing facts is not enough for effective learning and application.</li>
<li><strong>Real-world success requires integrating knowledge and experience within a framework of models.</strong></li>
</ul></li>
</ul>
</section>
<section id="expanding-your-latticework-of-mental-models" class="level3">
<h3 class="anchored" data-anchor-id="expanding-your-latticework-of-mental-models">Expanding Your Latticework of Mental Models</h3>
<ul>
<li><p><strong>Interconnected Knowledge</strong>:</p>
<ul>
<li>A latticework effectively represents the interconnected nature of knowledge.</li>
<li>The world is not divided into discrete disciplines; we impose those divisions for convenience.</li>
<li>We need to integrate knowledge from various fields to understand the whole.</li>
</ul></li>
<li><p><strong>Benefits of a Latticework</strong>:</p>
<ul>
<li>Reduces blind spots.</li>
<li>Provides a more complete understanding of problems and their potential solutions.</li>
<li>Improves decision-making, making it faster, more creative, and more effective.</li>
</ul></li>
<li><p><strong>Complementing Specialization</strong>:</p>
<ul>
<li>We can overcome the limitations of specialization by developing curiosity about other disciplines.</li>
<li><strong>Nobel Prize Winners</strong>: Many Nobel laureates, despite their specialization, have demonstrated multidisciplinary interests.</li>
</ul></li>
<li><p><strong>Charlie Munger on Essential Models</strong>:</p>
<blockquote class="blockquote">
<p>“80 or 90 important models will carry about 90% of the freight in making you a worldly wise person. And of those, only a mere handful really carry very heavy freight.”</p>
</blockquote></li>
<li><p><strong>Historical Examples and Stories</strong>:</p>
<ul>
<li>The book uses examples and stories to illustrate the application of mental models.</li>
</ul></li>
<li><p><strong>Further Resources</strong>:</p>
<ul>
<li>The website (<a href="https://fs.blog/">fs.blog</a>) and newsletter offer more practical examples and insights.</li>
</ul></li>
</ul>
</section>
<section id="you-wont-always-get-it-right" class="level3">
<h3 class="anchored" data-anchor-id="you-wont-always-get-it-right">You Won’t Always Get it Right</h3>
<ul>
<li><strong>Trial and Error</strong>:
<ul>
<li>You won’t always choose the most appropriate model for every situation.</li>
<li>This is a natural part of the learning process.</li>
</ul></li>
<li><strong>Learning from Mistakes</strong>:
<ul>
<li>Acknowledge, reflect on, and learn from your mistakes when applying mental models.</li>
<li>This helps build your repertoire and improve your judgment.</li>
</ul></li>
<li><strong>Deliberate Practice</strong>:
<ul>
<li>Be intentional about choosing and applying models.</li>
<li>Record and reflect on your experiences to improve your selection and application process.</li>
</ul></li>
<li><strong>Journaling</strong>:
<ul>
<li>Keep a journal to track your use of mental models, including:
<ul>
<li>How you applied them.</li>
<li>The process you followed.</li>
<li>The results you achieved.</li>
</ul></li>
</ul></li>
<li><strong>Developing Expertise</strong>:
<ul>
<li>Over time, you will develop a better understanding of which models are best suited for different situations.</li>
</ul></li>
<li><strong>Persistence and Analysis</strong>:
<ul>
<li>Don’t give up if a model doesn’t work immediately.</li>
<li>Analyze why it didn’t work:
<ul>
<li>Was your understanding of the model flawed?</li>
<li>Did you overlook relevant aspects of the situation?</li>
<li>Were you focused on the wrong variable?</li>
</ul></li>
</ul></li>
<li><strong>Observing Models in Action</strong>:
<ul>
<li>When you identify a mental model at work in the real world, note it down.</li>
<li>Explore the applications you’ve observed to gain a deeper understanding.</li>
</ul></li>
<li><strong>Benefits of Practice</strong>:
<ul>
<li>With practice, applying mental models will become more natural and intuitive.</li>
<li>You’ll be able to recognize and counteract cognitive biases like confirmation bias.</li>
</ul></li>
<li><strong>Understanding Success and Failure</strong>:
<ul>
<li>When a model works, understand why it worked to inform future applications.</li>
<li>Initially, focus on the process of applying models rather than just the outcome.</li>
</ul></li>
<li><strong>Feedback Loops</strong>:
<ul>
<li>Remain open to feedback as you use mental models.</li>
<li>Reflect on your experiences and adjust your approach accordingly.</li>
</ul></li>
<li><strong>Improved Decision-Making</strong>:
<ul>
<li>While not the primary focus, this book will indirectly improve your decision-making.</li>
<li>Mental models help you shift from subjective perceptions to objective assessments of reality.</li>
</ul></li>
<li><strong>Elephant Analogy Revisited</strong>:
<ul>
<li>Using multiple mental models expands your understanding beyond a single limited perspective, leading to better-informed decisions.</li>
</ul></li>
<li><strong>Benefits of Understanding Reality</strong>:
<ul>
<li>Increased confidence in navigating the world.</li>
<li>Greater success in achieving goals.</li>
<li>More time, less stress, and a more meaningful life.</li>
</ul></li>
</ul>
</section>
<section id="sidebar-what-can-the-three-buckets-of-knowledge-teach-us-about-history" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-what-can-the-three-buckets-of-knowledge-teach-us-about-history">Sidebar: What Can the Three Buckets of Knowledge Teach Us About History?</h3>
<ul>
<li><strong>Three Buckets of Knowledge (Peter Kaufman)</strong>:
<ol type="1">
<li><strong>Inorganic Systems (13.7 billion years)</strong>: Laws of math and physics, the physical universe.</li>
<li><strong>Organic Systems (3.5 billion years)</strong>: Biology on Earth.</li>
<li><strong>Human History (e.g., 20,000 years)</strong>: Recorded human behavior.</li>
</ol></li>
<li><strong>Sample Size and Reliability</strong>:
<ul>
<li>Larger and more relevant sample sizes lead to more reliable models.</li>
</ul></li>
<li><strong>Importance of Historical Perspective</strong>:
<ul>
<li>We tend to assume the present state of the world is representative of the past.</li>
<li>Looking at the past provides valuable context for understanding the present.</li>
</ul></li>
<li><strong>Examples of Change Over Time</strong>:
<ul>
<li>Continental drift.</li>
<li>The existence of dinosaurs.</li>
<li>The evolution of multiple hominid species.</li>
</ul></li>
<li><strong>Conclusion</strong>:
<ul>
<li>Studying the past through the lens of these “buckets” helps us develop a more accurate and comprehensive understanding of the world and its underlying principles.</li>
</ul></li>
</ul>
</section>
</section>
<section id="mental-model-1-the-map-is-not-the-territory" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-1-the-map-is-not-the-territory">Mental Model #1: The Map is Not the Territory</h2>
<blockquote class="blockquote">
<p>The map appears to us more real than the land. - D.H. Lawrence</p>
</blockquote>
<section id="introduction" class="level3">
<h3 class="anchored" data-anchor-id="introduction">Introduction</h3>
<ul>
<li><strong>The Map is Not the Territory:</strong> A concept popularized by Alfred Korzybski stating that the description of a thing is not the thing itself, a model is not reality, and an abstraction is not the abstracted.</li>
<li><strong>Maps as Reductions</strong>: Maps are reductions of the territories they represent, making them imperfect but useful for navigation and simplification.
<ul>
<li>Examples: Financial statements, policy documents, parenting manuals, performance reviews.</li>
</ul></li>
<li><strong>Purpose of Maps</strong>: Maps are valuable when they are explanatory and predictive.</li>
</ul>
</section>
<section id="key-elements-of-a-map-korzybski-1931" class="level3">
<h3 class="anchored" data-anchor-id="key-elements-of-a-map-korzybski-1931">Key Elements of a Map (Korzybski, 1931)</h3>
<p>Alfred Korzybski’s 1931 paper introduced the “map is not the territory” concept and outlined key elements:</p>
<ol type="1">
<li><strong>Structural Similarity (or Dissimilarity)</strong>
<ul>
<li>A map’s structure can be similar or dissimilar to the territory’s structure.</li>
<li>Example: The London Underground map is useful for travelers but not for train drivers.</li>
<li>Maps are designed with specific purposes and cannot be everything to everyone.</li>
</ul></li>
<li><strong>Similar Structures, Similar Logic</strong>
<ul>
<li>If a map accurately shows a relationship (e.g., Dresden between Paris and Warsaw), a similar relationship exists in the actual territory.</li>
<li>A correct map can be used for practical navigation.</li>
</ul></li>
<li><strong>Map ≠ Territory</strong>
<ul>
<li>A map cannot fully capture the experience of being in the territory.</li>
<li>Example: The London Underground map doesn’t convey the experience of being in Covent Garden station or navigating outside of it.</li>
</ul></li>
<li><strong>Ideal Map: Self-Reflexiveness</strong>
<ul>
<li>An ideal map would contain a map of the map, a map of the map of the map, and so on, endlessly.</li>
<li>This would be overwhelming in practice.</li>
<li>Example: A hypothetical “Guide to the Guide to Paris” becoming increasingly complex.</li>
</ul></li>
</ol>
</section>
<section id="abstractions-and-reality" class="level3">
<h3 class="anchored" data-anchor-id="abstractions-and-reality">Abstractions and Reality</h3>
<ul>
<li><strong>Abstractions in Everyday Life</strong>: We consume abstractions constantly (e.g., news articles), which are simplified representations of complex information.</li>
<li><strong>Loss of Detail</strong>: Abstractions can lose specific and relevant details during the simplification process.</li>
<li><strong>Mistaking the Map for Reality</strong>: When we accept abstractions without critical thinking, we may forget that the map is not reality.</li>
<li><strong>Example</strong>: Believing a GPS map without considering potential real-world discrepancies (e.g., a cliff not shown on the map).</li>
</ul>
</section>
<section id="limitations-of-maps-and-models" class="level3">
<h3 class="anchored" data-anchor-id="limitations-of-maps-and-models">Limitations of Maps and Models</h3>
<ul>
<li><strong>Abstractions and Limits</strong>: We often forget that maps and models are abstractions with limitations.</li>
<li><strong>Ignoring the Territory</strong>: We can lose sight of the actual territory, which contains details not captured by the map.</li>
<li><strong>Knowledge of the Map vs.&nbsp;Territory</strong>: Problems arise when our knowledge becomes about the map instead of the underlying territory.</li>
<li><strong>Static Rules in a Dynamic World</strong>: Mistaking the map for reality leads to rigid rules and policies that fail to adapt to a changing environment.</li>
<li><strong>Ignoring Feedback Loops</strong>: Closing off feedback loops prevents us from recognizing changes in the territory, hindering adaptation.</li>
<li><strong>Simplification vs.&nbsp;Understanding</strong>: While simplification is necessary, prioritizing it over understanding leads to poor decisions.</li>
</ul>
</section>
<section id="adapting-maps-to-a-changing-reality" class="level3">
<h3 class="anchored" data-anchor-id="adapting-maps-to-a-changing-reality">Adapting Maps to a Changing Reality</h3>
<ul>
<li><strong>Dynamic World, Dynamic Maps</strong>: Maps and models should not be static; they need to adapt to changes in the territory.</li>
<li><strong>Value of Predictive and Explanatory Power</strong>: Maps need to accurately represent reality to be predictive and explanatory.</li>
<li><strong>Example: Newtonian Physics vs.&nbsp;Einstein’s Relativity</strong>:
<ul>
<li>Newtonian physics was a useful model for centuries.</li>
<li>Einstein’s theory of relativity provided a new and more accurate map of the universe.</li>
<li>Newtonian physics is still useful within its limitations.</li>
<li>Einstein’s physics is not yet complete (e.g., challenges in integrating with quantum physics).</li>
</ul></li>
<li><strong>Understanding the Limits of Maps</strong>: Physicists understand the boundaries of their models (e.g., where Newtonian physics applies and where it doesn’t).</li>
<li><strong>Exploring Uncharted Territory</strong>: They carefully explore new areas (e.g., quantum mechanics) instead of assuming existing maps explain everything.</li>
</ul>
</section>
<section id="risks-and-limitations" class="level3">
<h3 class="anchored" data-anchor-id="risks-and-limitations">Risks and Limitations</h3>
<ul>
<li><strong>Hidden Risks</strong>: Maps may not show all the risks present in the territory, leading to unexpected problems.</li>
<li><strong>Understanding Limitations</strong>: It’s crucial to understand what a map or model does and doesn’t tell us to avoid misinterpretations and potential danger.</li>
<li><strong>Elinor Ostrom’s Caution</strong>: Economist Elinor Ostrom warned against using models (e.g., “tragedy of the commons”) as rigid doctrines in public policy.
<ul>
<li><strong>Models as Metaphors</strong>: Ostrom cautioned that models can become metaphors, where assumed constraints are treated as fixed realities.</li>
<li><strong>Double Problem</strong>:
<ul>
<li>Assuming a territory matches a map in all aspects based on limited similarities.</li>
<li>Prioritizing adherence to the map over new information about the territory.</li>
</ul></li>
<li><strong>Models as Tools for Exploration</strong>: Ostrom emphasized the value of models for generating thinking and exploration, not for enforcing conformity.</li>
</ul></li>
<li><strong>George Box’s Quote</strong>: “Remember that all models are wrong. The practical question is, how wrong do they have to be not to be useful?”</li>
</ul>
</section>
<section id="using-maps-and-models-effectively" class="level3">
<h3 class="anchored" data-anchor-id="using-maps-and-models-effectively">Using Maps and Models Effectively</h3>
<p>To use maps and models accurately, consider:</p>
<ol type="1">
<li><strong>Reality as the Ultimate Update</strong>
<ul>
<li><strong>Updating Maps</strong>: Territories change, and maps should be updated based on real-world experiences and feedback.</li>
<li><strong>Example: Stereotypes as Maps</strong>:
<ul>
<li>Stereotypes can be useful for simplifying information processing.</li>
<li>They become dangerous when we forget the complexity of individuals and territories.</li>
</ul></li>
<li><strong>Karimeh Abbud’s Photography</strong>:
<ul>
<li>Abbud challenged European ethnographic perspectives of Palestine through her photography.</li>
<li>She captured the territory as she saw it, offering a different map of Palestinian culture.</li>
</ul></li>
<li><strong>Maps as Snapshots in Time</strong>: Maps represent a specific moment and may not reflect current or future realities.</li>
<li><strong>Rate of Change</strong>: Faster changes in the territory make it harder for maps to stay up-to-date.</li>
<li><strong>Norman Thrower’s Quote</strong>: “Viewed in its development through time, the map details the changing thought of the human race…”</li>
</ul></li>
<li><strong>Consider the Cartographer</strong>
<ul>
<li><strong>Subjectivity in Mapmaking</strong>: Maps reflect the values, standards, and limitations of their creators.</li>
<li><strong>Example: National Boundaries</strong>:
<ul>
<li>National boundaries are not objective representations of shared identities.</li>
<li>Nationalism is a modern construct that has developed alongside maps.</li>
</ul></li>
<li><strong>Historical Context</strong>:
<ul>
<li>The borders of Syria, Jordan, and Iraq reflect Western interests rather than local customs.</li>
<li>Maps are most useful when understood in their historical context.</li>
</ul></li>
<li><strong>Cartography as a Blend of Science and Art</strong>:
<ul>
<li>Norman Thrower: “Cartography, like architecture, has attributes of both a scientific and artistic pursuit…”</li>
</ul></li>
</ul></li>
<li><strong>Maps Can Influence Territories</strong>
<ul>
<li><strong>Jane Jacobs’ Critique of City Planning</strong>:
<ul>
<li>City planners used abstract models to design cities without considering how cities function in reality.</li>
<li>Attempts to fit cities into models had negative consequences.</li>
</ul></li>
<li><strong>Statistical City and Reality</strong>:
<ul>
<li>Jacobs warned against believing that maps and reality can be made to align by altering reality.</li>
</ul></li>
<li><strong>Caution Against Faith in Models</strong>:
<ul>
<li>Jacobs’ work highlights the dangers of letting faith in models override real-world complexities.</li>
</ul></li>
<li><strong><a href="https://profiles.imperial.ac.uk/d.j.hand">David Hand</a>’s Emphasis on the Real World</strong>:
<ul>
<li>Statistical models should aim to understand and predict the real world, not an abstract mathematical world.</li>
</ul></li>
</ul></li>
</ol>
</section>
<section id="conclusion" class="level3">
<h3 class="anchored" data-anchor-id="conclusion">Conclusion</h3>
<ul>
<li><strong>Value and Limitations of Maps</strong>: Maps are valuable tools for knowledge transfer, but they have inherent limitations as reductions of complex realities.</li>
<li><strong>Subjectivity and Time Sensitivity</strong>: Maps are influenced by their creators and the time of their creation.</li>
<li><strong>Necessity of Models</strong>: We need models to simplify the world and interact with it.</li>
<li><strong>Exploration and Updating</strong>: Maps can guide us, but we shouldn’t let them prevent us from discovering new territory or updating existing maps.</li>
<li><strong>Navigating by Terrain and Maps</strong>: While navigating by terrain is ideal, it’s not always feasible; maps help us understand and relate to the world.</li>
<li><strong>Flawed but Useful</strong>: Maps are flawed but useful; we need to think beyond the map to anticipate future possibilities.</li>
</ul>
</section>
<section id="sidebar-the-tragedy-of-the-commons" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-the-tragedy-of-the-commons">Sidebar: The Tragedy of the Commons</h3>
<ul>
<li><strong>Aristotle’s Observation</strong>: “What is common to many is taken least care of…”</li>
<li><strong>Parable of Shared Resource Depletion</strong>: The tragedy of the commons illustrates how shared resources can be overused due to individual incentives.</li>
<li><strong>Garrett Hardin’s Explanation</strong>:
<ul>
<li>Herdsmen sharing a pasture will individually try to maximize their cattle, leading to overgrazing and ultimately ruin.</li>
<li>Each herdsman’s rational decision to add more animals has negative consequences for the shared resource.</li>
<li><strong>Freedom in a commons can lead to ruin for all</strong>.</li>
</ul></li>
</ul>
</section>
<section id="sidebar-model-of-management" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-model-of-management">Sidebar: Model of Management</h3>
<ul>
<li><strong>Frederick Taylor’s Scientific Management</strong>:
<ul>
<li>Breaking down tasks into small, specialized pieces with financial incentives for efficiency.</li>
<li>Effective for a time, especially in manufacturing settings.</li>
</ul></li>
<li><strong>Limitations of Taylor’s Model</strong>:
<ul>
<li>Workers becoming aware of the model and resisting manipulation.</li>
<li>Competitors adopting the same model, neutralizing its advantage.</li>
<li>Applicability limited to specific settings (e.g., factories).</li>
<li>Failure to account for the complexities of human motivation.</li>
</ul></li>
<li><strong>Evolution of Management Models</strong>:
<ul>
<li>Better models emerged as the economy shifted and understanding of human behavior developed.</li>
</ul></li>
<li><strong>Effectiveness with Limitations</strong>: Taylor’s model was effective within its limitations, but it was eventually superseded by more comprehensive models.</li>
</ul>
</section>
<section id="maps-necessarily-flawed-vs.-necessary-not-necessarily-flawed" class="level3">
<h3 class="anchored" data-anchor-id="maps-necessarily-flawed-vs.-necessary-not-necessarily-flawed">Maps: Necessarily Flawed vs.&nbsp;Necessary, Not Necessarily Flawed</h3>
<ul>
<li><strong>Lewis Carroll’s Satire</strong>: Carroll’s story “Sylvie and Bruno” satirizes the idea of a perfectly accurate map with a 1:1 scale.</li>
<li><strong>Need for Reduction</strong>: Maps need to condense the territory to be useful for navigation and understanding.</li>
</ul>
</section>
</section>
<section id="mental-model-2-circle-of-confidence" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-2-circle-of-confidence">Mental Model #2: Circle of Confidence</h2>
<blockquote class="blockquote">
<p>“I’m no genius, I’m smart in spots, but I stay around those spots.” - Thomas Watson</p>
</blockquote>
<section id="introduction-1" class="level3">
<h3 class="anchored" data-anchor-id="introduction-1">Introduction</h3>
<ul>
<li><strong>Central Idea</strong>: Understanding and operating within your <strong>circle of competence</strong> is crucial for effective decision-making and achieving positive outcomes.</li>
<li><strong>Key Concepts</strong>:
<ul>
<li>Ego vs.&nbsp;Competence</li>
<li>Identifying Strengths and Weaknesses</li>
<li>Building and Maintaining Expertise</li>
<li>Operating Outside Your Area of Expertise</li>
</ul></li>
</ul>
</section>
<section id="what-is-a-circle-of-competence" class="level3">
<h3 class="anchored" data-anchor-id="what-is-a-circle-of-competence">What is a Circle of Competence?</h3>
<ul>
<li><strong>Analogy: The Lifer vs.&nbsp;The Stranger</strong>
<ul>
<li><strong>The Lifer</strong>:
<ul>
<li>Represents deep, nuanced understanding within a specific area (e.g., a small town).</li>
<li>Possesses detailed knowledge accumulated over years of observation and experience.</li>
<li>Understands the history, relationships, and intricacies of the domain.</li>
<li>Can anticipate challenges and has multiple solutions to problems.</li>
</ul></li>
<li><strong>The Stranger</strong>:
<ul>
<li>Represents superficial knowledge based on limited exposure.</li>
<li>Makes assumptions based on incomplete information.</li>
<li>Overestimates their understanding and takes unnecessary risks.</li>
<li>Lacks the depth of knowledge for effective decision-making.</li>
</ul></li>
</ul></li>
<li><strong>Circle of Competence</strong>:
<ul>
<li>Represents the areas where an individual has deep, well-developed knowledge and expertise.</li>
<li>Based on years of experience, learning from mistakes, and actively seeking improvement.</li>
<li>Enables accurate and efficient decision-making within the defined area.</li>
</ul></li>
<li><strong>Example: Climbing Mount Everest</strong>
<ul>
<li><strong>Outside the Circle</strong>: For most people, climbing Mount Everest is outside their circle of competence.
<ul>
<li>Lack of knowledge about training, gear, process, and risks.</li>
<li>Unaware of the extent of their own ignorance (“unknown unknowns”).</li>
</ul></li>
<li><strong>Inside the Circle: Sherpas</strong>
<ul>
<li>Indigenous people with generations of experience navigating the mountain.</li>
<li>Possess a deep understanding of the terrain, climate, and challenges.</li>
<li>Sherpa Tenzing Norgay co-led the first successful ascent in 1953.</li>
<li>Sherpas have a significantly higher success rate and make multiple ascents.</li>
</ul></li>
<li><strong>Importance of Expertise</strong>:
<ul>
<li>Climbing Everest requires specialized knowledge and skills beyond basic understanding.</li>
<li>The extreme conditions and risks necessitate a high level of competence.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="how-do-you-know-when-you-have-a-circle-of-competence" class="level3">
<h3 class="anchored" data-anchor-id="how-do-you-know-when-you-have-a-circle-of-competence">How Do You Know When You Have a Circle of Competence?</h3>
<ul>
<li><p><strong>Characteristics of Being Inside Your Circle</strong>:</p>
<ul>
<li><strong>Awareness of Limitations</strong>: You know what you don’t know within your area of expertise.</li>
<li><strong>Efficient Decision-Making</strong>: You can make quick and accurate decisions based on your knowledge.</li>
<li><strong>Information Mastery</strong>: You understand what information is needed, where to find it, and what is unknowable.</li>
<li><strong>Anticipating Objections</strong>: You can foresee and address challenges based on past experience.</li>
<li><strong>Multiple Solutions</strong>: You have a range of options for solving problems due to your deep understanding.</li>
<li><strong>Understanding Invariants</strong>: You can differentiate between aspects that can be changed and those that are fixed.</li>
</ul></li>
<li><p><strong>Time and Experience</strong>:</p>
<ul>
<li>A circle of competence takes years to develop through dedicated practice and learning from failures.</li>
<li>It’s not achieved through short courses or superficial exposure.</li>
</ul></li>
<li><p><strong>Alexander Pope’s Analogy (An Essay on Criticism)</strong>:</p>
<blockquote class="blockquote">
<p>“A little learning is a dangerous thing. Drink deep or taste not the Pierian spring. There, shallow draughts intoxicate the brain, and drinking largely sobers us again.”</p>
</blockquote></li>
<li><p><strong>Key Takeaway</strong>: Deep understanding and expertise are essential for true competence.</p></li>
</ul>
</section>
<section id="how-do-you-build-and-maintain-a-circle-of-competence" class="level3">
<h3 class="anchored" data-anchor-id="how-do-you-build-and-maintain-a-circle-of-competence">How Do You Build and Maintain a Circle of Competence?</h3>
<ul>
<li><strong>Dynamic Nature</strong>: A circle of competence is not static; it requires ongoing effort to maintain and expand.</li>
<li><strong>Key Practices</strong>:
<ol type="1">
<li><strong>Curiosity and a Desire to Learn</strong>:
<ul>
<li><strong>Learning from Experience</strong>: Reflecting on your own successes and failures.</li>
<li><strong>Learning from Others</strong>: Utilizing books, articles, conversations, and the experiences of experts.</li>
<li><strong>Efficiency of Learning from Others</strong>: It’s faster and more effective than relying solely on personal experience.</li>
<li><strong>Quote</strong>: “Learn from the mistakes of others. You can’t live long enough to make them all yourself.” - Anonymous</li>
</ul></li>
<li><strong>Monitoring and Feedback</strong>:
<ul>
<li><strong>Honest Self-Assessment</strong>: Keeping track of your performance and decisions within your area of expertise.</li>
<li><strong>Overcoming Ego</strong>: Recognizing that ego can hinder accurate self-evaluation.</li>
<li><strong>Methods for Monitoring</strong>:
<ul>
<li>Keeping a detailed journal of your actions and outcomes.</li>
<li>Observing and analyzing the results of your decisions in leadership roles.</li>
<li>Honestly reflecting on failures to identify areas for improvement.</li>
</ul></li>
<li><strong>Benefits of Journaling</strong>:
<ul>
<li>Promotes self-reflection and identification of patterns.</li>
<li>Helps understand what went wrong and how to improve.</li>
</ul></li>
</ul></li>
<li><strong>External Feedback</strong>:
<ul>
<li><strong>Addressing Ego and Bias</strong>: Seeking feedback from trusted sources to gain an objective perspective.</li>
<li><strong>Sources of Feedback</strong>:
<ul>
<li>Trusted colleagues or mentors who can provide honest evaluations.</li>
<li>Hiring a coach or expert for specialized guidance.</li>
</ul></li>
<li><strong>Example: Atul Gawande</strong>
<ul>
<li>A top surgeon who hired a coach to improve his skills.</li>
<li>Initially felt embarrassed but recognized the value of external perspective.</li>
<li>Gained insights into areas for improvement and learned how to provide better feedback to others.</li>
</ul></li>
<li><strong>Importance of Outside Perspective</strong>: Overcoming personal biases and limitations through objective feedback.</li>
</ul></li>
</ol></li>
</ul>
</section>
<section id="how-do-you-operate-outside-of-a-circle-of-competence" class="level3">
<h3 class="anchored" data-anchor-id="how-do-you-operate-outside-of-a-circle-of-competence">How Do You Operate Outside of a Circle of Competence?</h3>
<ul>
<li><strong>Acknowledging Limitations</strong>: Recognizing when you lack the expertise to make informed decisions.</li>
<li><strong>Strategies for Operating Outside Your Circle</strong>:
<ol type="1">
<li><strong>Learn the Basics</strong>:
<ul>
<li>Acquire a foundational understanding of the unfamiliar domain.</li>
<li><strong>Caution</strong>: Basic knowledge can lead to overconfidence; avoid making major decisions based solely on it.</li>
</ul></li>
<li><strong>Consult Experts</strong>:
<ul>
<li>Identify individuals with strong circles of competence in the relevant area.</li>
<li><strong>Ask Thoughtful Questions</strong>: Focus on understanding the underlying principles and “learning how to fish” rather than just getting answers.</li>
<li><strong>Probing Expert Limitations</strong>: Consider potential biases and the influence of the situation on their advice.</li>
</ul></li>
<li><strong>Apply General Mental Models</strong>:
<ul>
<li>Utilize broader frameworks and principles to analyze the unfamiliar situation.</li>
<li>Identify foundational concepts that can guide your decision-making process.</li>
</ul></li>
</ol></li>
<li><strong>Example: Queen Elizabeth I</strong>
<ul>
<li>Inherited a challenging political and religious situation upon ascending to the throne.</li>
<li>Recognized her limitations in certain areas of governance.</li>
<li><strong>Formed a Privy Council</strong>:
<ul>
<li>Assembled a diverse group of advisors with expertise in various domains.</li>
<li>Fostered open debate and discussion to leverage their collective circles of competence.</li>
</ul></li>
<li><strong>Positive Outcomes</strong>:
<ul>
<li>Achieved stability and fostered loyalty within the kingdom.</li>
<li>Laid the groundwork for England’s future as a global power.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="conclusion-1" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-1">Conclusion</h3>
<ul>
<li><strong>Importance of Boundaries</strong>: Recognizing the limits of your expertise is crucial for effective decision-making.</li>
<li><strong>Acknowledging Expertise</strong>: Respecting the knowledge and experience of others who have dedicated time to mastering specific areas.</li>
<li><strong>Limitations of Individual Competence</strong>: No one can be an expert in everything.</li>
<li><strong>Value of Circle of Competence</strong>: Identifying your areas of expertise and knowing how to operate outside of them is essential for success.</li>
<li><strong>Quote</strong>: “Ignorance more often begets confidence than knowledge.” - Charles Darwin</li>
</ul>
</section>
<section id="sidebar-the-problem-of-incentives" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-the-problem-of-incentives">Sidebar: The Problem of Incentives</h3>
<ul>
<li><strong>Impact on Competence</strong>: Incentives can influence the advice and recommendations you receive from others.</li>
<li><strong>Financial Realm</strong>:
<ul>
<li><strong>Commissions and Bias</strong>: Traditional financial products often involved commissions that incentivized advisors to promote specific options regardless of their suitability.</li>
<li><strong>Index Funds</strong>: The rise of index funds has reduced this issue by aligning incentives with client performance.</li>
</ul></li>
<li><strong>Assessing Incentives</strong>:
<ul>
<li>Understand the compensation structure of financial advisors and other professionals before accepting their advice.</li>
<li>Consider potential biases in situations where the advisor benefits from your decision (e.g., purchasing a product).</li>
</ul></li>
<li><strong>Example: The Mechanic</strong>:
<ul>
<li><strong>Asymmetry of Knowledge</strong>: Most people lack expertise in car mechanics, making them vulnerable to being overcharged or misled.</li>
<li><strong>Mechanic’s Incentive</strong>: To maximize profits while retaining customers.</li>
<li><strong>Solution</strong>:
<ul>
<li>Educate yourself about basic car maintenance using online resources.</li>
<li>Research potential issues and costs before agreeing to major repairs.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="sidebar-staying-in-your-circle" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-staying-in-your-circle">Sidebar: Staying in Your Circle</h3>
<ul>
<li><p><strong>Warren Buffett’s Perspective</strong>:</p>
<ul>
<li>Emphasizes the importance of sticking to your area of expertise in investments.</li>
<li>Avoid venturing into areas where you lack knowledge and understanding (“unknown unknowns”).</li>
</ul></li>
<li><p><strong>Example: Rose Blumkin (Nebraska Furniture Mart)</strong>:</p>
<ul>
<li>A successful CEO who focused on her strengths in numbers and home furnishings.</li>
<li>Avoided areas outside her circle of competence (e.g., stock market investments).</li>
</ul></li>
<li><p><strong>Buffett’s Quote</strong>:</p>
<blockquote class="blockquote">
<p>“I couldn’t have given her $200 million worth of Berkshire Hathaway stock when I bought the business because she doesn’t understand stock. She understands cash. She understands furniture. She understands real estate. She doesn’t understand stock, so she doesn’t have anything to do with them…if you deal with Ms.&nbsp;B and what I would call her circle of competence. She’s going to buy 5,000 end tables this afternoon if the price is right. She’s going to buy 20 different carpets in odd lots and everything else like that because she understands carpets. She wouldn’t buy 100 shares of General Motors if it was 50 cents a share.”</p>
</blockquote></li>
<li><p><strong>Key Takeaway</strong>: Focusing on your strengths and staying within your circle of competence can lead to significant success.</p></li>
</ul>
</section>
<section id="supporting-idea-falsifiability" class="level3">
<h3 class="anchored" data-anchor-id="supporting-idea-falsifiability">Supporting Idea: Falsifiability</h3>
<ul>
<li><p><strong>Karl Popper’s Concept</strong>:</p>
<blockquote class="blockquote">
<p>“A theory is part of empirical science if and only if it conflicts with possible experiences and is therefore, in principle, falsifiable by experience.”</p>
</blockquote></li>
<li><p><strong>Testability</strong>: A good theory must be able to be proven wrong through observation or experimentation.</p></li>
<li><p><strong>Falsification vs.&nbsp;Verification</strong>:</p>
<ul>
<li>Focus on trying to disprove a theory rather than simply seeking evidence to support it.</li>
<li>Failing to falsify a theory strengthens its validity.</li>
</ul></li>
<li><p><strong>Example: Evolution</strong>: Natural selection eliminates unfavorable mutations, strengthening the overall fitness of the species.</p></li>
<li><p><strong>Freud’s Psychoanalytic Theory</strong>:</p>
<ul>
<li>Popper argued that it lacked falsifiability because it didn’t make specific, testable predictions.</li>
<li>While it may contain some truths, it’s difficult to scientifically evaluate.</li>
</ul></li>
<li><p><strong>Historicism</strong>:</p>
<ul>
<li>The belief that history follows fixed laws or trends leading to predictable outcomes.</li>
<li>Popper considered it pseudoscientific because it’s not falsifiable.</li>
</ul></li>
<li><p><strong>Trend vs.&nbsp;Destiny</strong>:</p>
<ul>
<li>Trends observed in the past do not guarantee future outcomes.</li>
<li>Conditions can change, invalidating previous patterns.</li>
</ul></li>
<li><p><strong>Bertrand Russell’s Chicken Analogy</strong>:</p>
<ul>
<li>A chicken fed daily assumes this trend will continue indefinitely.</li>
<li>This “law” is broken when the chicken is slaughtered, highlighting the difference between trends and guaranteed outcomes.</li>
</ul></li>
<li><p><strong>Preparing for Extremes</strong>: We should consider the full range of possibilities allowed by physics, not just the worst events observed in the past.</p></li>
<li><p><strong>Value of Falsifiability</strong>: It helps determine the robustness and scientific validity of theories.</p></li>
</ul>
</section>
</section>
<section id="mental-model-3-first-principles-thinking" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-3-first-principles-thinking">Mental Model #3: First Principles Thinking</h2>
<blockquote class="blockquote">
<p>“I don’t know what’s the matter with people. They don’t learn by understanding, they learn by some other way, by road or something. Their knowledge is so fragile.” - Richard Feynman</p>
</blockquote>
<section id="introduction-2" class="level3">
<h3 class="anchored" data-anchor-id="introduction-2">Introduction</h3>
<ul>
<li><strong>First Principles Thinking</strong> is introduced as a powerful method for:
<ul>
<li>Reverse-engineering complex situations.</li>
<li>Unleashing creative potential.</li>
</ul></li>
</ul>
</section>
<section id="what-is-first-principles-thinking" class="level3">
<h3 class="anchored" data-anchor-id="what-is-first-principles-thinking">What is First Principles Thinking?</h3>
<ul>
<li><p><strong>Definition:</strong></p>
<blockquote class="blockquote">
<p>First Principles Thinking, also known as reasoning from first principles, is a tool that helps clarify complicated problems by separating the underlying ideas or facts from any assumptions based on them.</p>
</blockquote></li>
<li><p><strong>Core Idea:</strong></p>
<ul>
<li>Identify the fundamental, essential elements (<strong>first principles</strong>) of a situation.</li>
<li>Build knowledge and understanding around these foundational elements.</li>
<li>This process allows for the creation of something new or innovative.</li>
</ul></li>
</ul>
</section>
<section id="philosophical-roots" class="level3">
<h3 class="anchored" data-anchor-id="philosophical-roots">Philosophical Roots</h3>
<ul>
<li><strong>Historical Context:</strong>
<ul>
<li>The concept of building knowledge from first principles has a long history in Western philosophy, tracing back to Plato and Socrates.</li>
<li>Significant contributions were made by Aristotle and Descartes.</li>
</ul></li>
<li><strong>Goal of Early Philosophers:</strong>
<ul>
<li>To discover foundational knowledge that remained constant and unchanging.</li>
<li>They aimed to build ethical systems and social structures upon these fundamental truths.</li>
</ul></li>
</ul>
</section>
<section id="first-principles-in-practice" class="level3">
<h3 class="anchored" data-anchor-id="first-principles-in-practice">First Principles in Practice</h3>
<ul>
<li><strong>Modern Application:</strong>
<ul>
<li>First principles thinking doesn’t necessarily seek absolute, universal truths.</li>
</ul></li>
<li><strong>Epistemological Considerations:</strong>
<ul>
<li>Finding absolute truths is challenging (millennia of philosophical inquiry have shown this).</li>
<li>The scientific method emphasizes the importance of actively trying to disprove knowledge to strengthen its validity.</li>
</ul></li>
<li><strong>Practical Definition:</strong>
<ul>
<li>First principles thinking focuses on identifying elements that are <strong>non-reducible</strong> within a specific context or situation.</li>
</ul></li>
<li><strong>Dynamic Nature of First Principles:</strong>
<ul>
<li>First principles are not a fixed checklist of universally true statements.</li>
<li>Our understanding of first principles evolves as our knowledge expands.</li>
<li>They serve as the foundation for building knowledge, and this foundation will differ depending on the specific situation.</li>
</ul></li>
<li><strong>Importance of Challenging Existing Knowledge:</strong>
<ul>
<li>The more we know, the more effectively we can challenge existing assumptions and refine our understanding of first principles.</li>
</ul></li>
<li><strong>Example: Refrigerator Energy Efficiency</strong>
<ul>
<li><strong>Laws of thermodynamics</strong> can be considered first principles when exploring ways to improve a refrigerator’s energy efficiency.</li>
<li>However, a theoretical chemist or physicist might delve deeper into concepts like <strong>entropy</strong> and break down the second law of thermodynamics further, exploring its underlying principles and assumptions.</li>
</ul></li>
<li><strong>Context-Dependent Nature:</strong>
<ul>
<li>First principles serve as boundaries within which we operate in a given situation.</li>
<li>Different individuals or disciplines may have different first principles depending on their context and goals. (e.g., an appliance maker vs.&nbsp;a physicist).</li>
</ul></li>
</ul>
</section>
<section id="techniques-for-establishing-first-principles" class="level3">
<h3 class="anchored" data-anchor-id="techniques-for-establishing-first-principles">Techniques for Establishing First Principles</h3>
<section id="the-importance-of-deconstruction-and-critical-analysis" class="level4">
<h4 class="anchored" data-anchor-id="the-importance-of-deconstruction-and-critical-analysis">The Importance of Deconstruction and Critical Analysis</h4>
<ul>
<li><strong>Consequences of Accepting Information Passively:</strong>
<ul>
<li>If we don’t learn to deconstruct, question, and rebuild our understanding of things, we become limited by what others tell us and trapped in traditional ways of thinking.</li>
<li>When circumstances change, we risk making costly mistakes by continuing to operate under outdated assumptions.</li>
</ul></li>
<li><strong>Natural Skepticism:</strong>
<ul>
<li>Some individuals are naturally inclined to question information they receive, especially if it contradicts their experiences, is outdated, or doesn’t align with their thinking.</li>
</ul></li>
<li><strong>Shared Beliefs vs.&nbsp;Laws of Nature:</strong>
<ul>
<li>Many concepts we take for granted are not laws of nature but rather <strong>shared beliefs</strong>.</li>
<li>Examples:
<ul>
<li>Money</li>
<li>Borders</li>
<li>Bitcoins</li>
<li>Love</li>
</ul></li>
</ul></li>
<li><strong>Techniques for Identifying First Principles:</strong>
<ul>
<li>Two primary techniques can help us cut through dogma and shared beliefs to identify the fundamental principles within a situation:
<ul>
<li><strong>Socratic Questioning</strong></li>
<li><strong>The Five Whys</strong></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="socratic-questioning" class="level4">
<h4 class="anchored" data-anchor-id="socratic-questioning">Socratic Questioning</h4>
<ul>
<li><p><strong>Definition:</strong></p>
<blockquote class="blockquote">
<p><strong>Socratic questioning</strong> can be used to establish the first principles through stringent analysis. This is a disciplined questioning process used to establish truths, reveal underlying assumptions, and separate knowledge from ignorance.</p>
</blockquote></li>
<li><p><strong>Key Distinction:</strong></p>
<ul>
<li>Unlike ordinary discussions, Socratic questioning aims to systematically uncover first principles.</li>
</ul></li>
<li><p><strong>Process:</strong></p>
<ol type="1">
<li><strong>Clarifying Thinking and Origins of Ideas:</strong>
<ul>
<li>Why do I think this?</li>
<li>What exactly do I think?</li>
</ul></li>
<li><strong>Challenging Assumptions:</strong>
<ul>
<li>How do I know this is true?</li>
<li>What if I thought the opposite?</li>
</ul></li>
<li><strong>Seeking Evidence:</strong>
<ul>
<li>How can I back this up?</li>
<li>What are the sources?</li>
</ul></li>
<li><strong>Considering Alternative Perspectives:</strong>
<ul>
<li>What might others think?</li>
<li>How do I know I am correct?</li>
</ul></li>
<li><strong>Examining Consequences and Implications:</strong>
<ul>
<li>What if I’m wrong?</li>
<li>What are the consequences if I am?</li>
</ul></li>
<li><strong>Questioning the Original Questions:</strong>
<ul>
<li>Why did I think that?</li>
<li>Was I correct?</li>
<li>What conclusions can I draw from the reasoning process?</li>
</ul></li>
</ol></li>
<li><p><strong>Benefits:</strong></p>
<ul>
<li>Socratic questioning helps us avoid relying on intuition or emotional responses.</li>
<li>It promotes the development of knowledge that is robust and well-founded.</li>
</ul></li>
</ul>
</section>
<section id="the-five-whys" class="level4">
<h4 class="anchored" data-anchor-id="the-five-whys">The Five Whys</h4>
<ul>
<li><strong>Origin:</strong>
<ul>
<li>The <strong>Five Whys</strong> method is inspired by the natural curiosity of children.</li>
</ul></li>
<li><strong>Children’s Instinctive First Principles Thinking:</strong>
<ul>
<li>Children inherently seek to understand the world around them.</li>
<li>They intuitively break through superficial explanations by repeatedly asking “why.”</li>
</ul></li>
<li><strong>Goal:</strong>
<ul>
<li>The aim of the Five Whys is to arrive at a fundamental understanding of “what” or “how” something works.</li>
</ul></li>
<li><strong>Focus:</strong>
<ul>
<li>It’s not about introspection (e.g., “Why do I feel this way?”).</li>
<li>It’s about systematically digging deeper into a statement or concept to distinguish reliable knowledge from assumptions.</li>
</ul></li>
<li><strong>Identifying First Principles:</strong>
<ul>
<li>If your chain of “whys” leads to a statement of a falsifiable fact, you’ve likely reached a first principle.</li>
<li>If you end up with answers like “because I said so” or “it just is,” you’ve likely hit an assumption based on opinion, cultural myths, or dogma, not a first principle.</li>
</ul></li>
</ul>
</section>
<section id="challenges-and-rewards-of-these-techniques" class="level4">
<h4 class="anchored" data-anchor-id="challenges-and-rewards-of-these-techniques">Challenges and Rewards of These Techniques</h4>
<ul>
<li><strong>Short-Term Costs:</strong>
<ul>
<li>Both Socratic questioning and the Five Whys require pausing, reflecting, and researching, which can feel like a slowdown.</li>
</ul></li>
<li><strong>Confronting Our Ignorance:</strong>
<ul>
<li>We often realize that we lack the answers to many of the questions these techniques raise.</li>
</ul></li>
<li><strong>Importance of Persistence:</strong>
<ul>
<li>It’s crucial to avoid giving up or resorting to defensiveness when faced with our own knowledge gaps.</li>
<li>If we do, we won’t be able to identify the first principles necessary for effective problem-solving and decision-making, leading to long-term setbacks.</li>
</ul></li>
</ul>
</section>
</section>
<section id="first-principles-thinking-as-a-way-to-overcome-inaccurate-assumptions" class="level3">
<h3 class="anchored" data-anchor-id="first-principles-thinking-as-a-way-to-overcome-inaccurate-assumptions">First Principles Thinking as a Way to Overcome Inaccurate Assumptions</h3>
<section id="the-case-of-stomach-ulcers" class="level4">
<h4 class="anchored" data-anchor-id="the-case-of-stomach-ulcers">The Case of Stomach Ulcers</h4>
<ul>
<li><strong>Quote:</strong> “Science is much more than a body of knowledge. It is a way of thinking.” - Carl Sagan</li>
<li><strong>Example: The Discovery of H. pylori</strong>
<ul>
<li>The discovery that the bacterium <em>Helicobacter pylori</em> (H. pylori), not stress, was the primary cause of most stomach ulcers is a prime example of the power of challenging assumptions to reveal first principles.</li>
</ul></li>
<li><strong>The “Sterile Stomach” Dogma:</strong>
<ul>
<li>Scientists previously believed that bacteria couldn’t survive in the acidic environment of the stomach.</li>
<li>This assumption was widely accepted by doctors and researchers in the mid-20th century.</li>
<li>As a result, bacterial infection was not considered as a potential cause of stomach pain.</li>
</ul></li>
<li><strong>Challenging the Assumption:</strong>
<ul>
<li>The “sterile stomach” was not a first principle but an unverified assumption.</li>
<li>Kevin Ashton, in his book on creativity, explains that this dogma prevented researchers from investigating its potential falsity.</li>
</ul></li>
<li><strong>Robin Warren’s Observations:</strong>
<ul>
<li>Pathologist Robin Warren noticed bacteria in stomach samples from patients.</li>
<li>This observation challenged the prevailing assumption of a sterile stomach.</li>
</ul></li>
<li><strong>Collaboration with Barry Marshall:</strong>
<ul>
<li>Warren collaborated with gastroenterologist Barry Marshall, and they found evidence of bacteria in numerous stomachs.</li>
</ul></li>
<li><strong>Shifting Focus:</strong>
<ul>
<li>Since the sterile stomach was no longer considered a first principle, they could question other assumptions related to stomach diseases and apply Socratic-style questioning to uncover the true first principles at play. (125-126, 134)</li>
</ul></li>
<li><strong>Evidence and Persistence:</strong>
<ul>
<li>Warren and Marshall spent years challenging assumptions, clarifying their thinking, and gathering evidence.</li>
</ul></li>
<li><strong>Nobel Prize Recognition:</strong>
<ul>
<li>Their work eventually led to the understanding of H. pylori’s role in stomach ulcers and earned them the Nobel Prize in 2005.</li>
<li>Their discovery revolutionized ulcer treatment with antibiotics, improving and saving millions of lives.</li>
</ul></li>
<li><strong>Resistance to Change:</strong>
<ul>
<li>Despite the evidence, many practitioners and scientists initially resisted their findings due to the deeply ingrained belief in the sterile stomach dogma.</li>
<li>It was difficult to acknowledge that this “first principle” was based on flawed assumptions, often dismissed with explanations like “that’s just the way it is.”</li>
</ul></li>
<li><strong>Historical Evidence:</strong>
<ul>
<li>Ashton notes that evidence of H. pylori existed in medical literature as far back as 1875, but it was Warren and Marshall who demonstrated that “because I said so” was not sufficient justification for considering the sterile stomach a first principle.</li>
</ul></li>
</ul>
</section>
</section>
<section id="incremental-innovation-and-paradigm-shifts" class="level3">
<h3 class="anchored" data-anchor-id="incremental-innovation-and-paradigm-shifts">Incremental Innovation and Paradigm Shifts</h3>
<section id="understanding-the-rationale-behind-success" class="level4">
<h4 class="anchored" data-anchor-id="understanding-the-rationale-behind-success">Understanding the Rationale Behind Success</h4>
<ul>
<li><strong>The Importance of Understanding:</strong>
<ul>
<li>To effectively improve something, we need to understand the reasons behind its success or failure.</li>
<li>Otherwise, we risk blindly copying tactics without grasping their underlying rationale.</li>
</ul></li>
<li><strong>Avoiding Blind Imitation:</strong>
<ul>
<li>First principles thinking helps us avoid relying on others’ tactics without understanding their purpose.</li>
</ul></li>
<li><strong>Incremental Improvement and First Principles:</strong>
<ul>
<li>Even small improvements are more challenging to achieve if we cannot identify the relevant first principles.</li>
</ul></li>
</ul>
</section>
<section id="the-case-of-curved-cattle-chutes" class="level4">
<h4 class="anchored" data-anchor-id="the-case-of-curved-cattle-chutes">The Case of Curved Cattle Chutes</h4>
<ul>
<li><strong>Temple Grandin’s Contributions:</strong>
<ul>
<li><strong>Temple Grandin</strong>, an autistic scientist, is known for her insights into the autistic mind and her contributions to improving animal welfare in the livestock industry.</li>
</ul></li>
<li><strong>Curved Cattle Chutes:</strong>
<ul>
<li>Grandin pioneered the use of <strong>curved cattle chutes</strong>.</li>
<li>Traditionally, straight chutes were used.</li>
</ul></li>
<li><strong>Rationale for Curved Chutes:</strong>
<ul>
<li>Curved chutes are more efficient because they leverage the natural behavior of cattle, who tend to move more easily through curves due to their instinct to return to where they came from.</li>
</ul></li>
<li><strong>Ongoing Research:</strong>
<ul>
<li>Animal science continues to evolve, with research constantly exploring better ways to handle livestock.</li>
<li><strong>Image:</strong> <a href="https://149664534.v2.pressablecdn.com/wp-content/uploads/2019/03/cattle-chute.jpg">Curved Cattle Chute</a></li>
</ul></li>
<li><strong>Challenging the Curved Chute:</strong>
<ul>
<li>Research published in <em>Stockmanship Journal</em> questioned the universal superiority of curved chutes, finding that in some cases, straight chutes could be equally effective.</li>
</ul></li>
<li><strong>Grandin’s Response:</strong>
<ul>
<li>Grandin’s response to this research highlights the importance of first principles thinking.</li>
<li>She explained that curved chutes are not a first principle in themselves but a <strong>tactic</strong> designed to address the <strong>first principle</strong> she identified: <strong>reducing stress in animals</strong>.</li>
<li>This principle affects various aspects of animal welfare, from conception rates to weight gain and immune function.</li>
</ul></li>
<li><strong>Flexibility with Tactics:</strong>
<ul>
<li>As long as a livestock environment minimizes stress, a straight chute can be effective.</li>
<li>Understanding the underlying principles allows for flexibility in choosing tactics.</li>
</ul></li>
</ul>
</section>
<section id="questioning-existing-constructs" class="level4">
<h4 class="anchored" data-anchor-id="questioning-existing-constructs">Questioning Existing Constructs</h4>
<ul>
<li><strong>Beyond Incremental Improvement:</strong>
<ul>
<li>Sometimes, we aim for more than just fine-tuning existing systems.</li>
<li>We might be skeptical or curious and want to explore possibilities beyond the status quo.</li>
</ul></li>
<li><strong>Identifying First Principles for Paradigm Shifts:</strong>
<ul>
<li>When we question whether things have to be the way they are, we adopt a mindset conducive to identifying first principles that can lead to radical change.</li>
</ul></li>
<li><strong>Strategic Choices:</strong>
<ul>
<li>First principles thinking enables us to move away from random changes and make informed choices with a higher likelihood of success.</li>
</ul></li>
</ul>
</section>
<section id="the-case-of-artificial-meat" class="level4">
<h4 class="anchored" data-anchor-id="the-case-of-artificial-meat">The Case of Artificial Meat</h4>
<ul>
<li><strong>Rethinking Meat:</strong>
<ul>
<li>Starting in the 1970s, scientists began to question the fundamental nature of meat.</li>
</ul></li>
<li><strong>First Principles of Meat:</strong>
<ul>
<li>Common answers include:
<ul>
<li>Taste</li>
<li>Texture</li>
<li>Smell</li>
<li>Culinary use</li>
</ul></li>
<li>Notably, being part of an animal is not a first principle of meat.</li>
</ul></li>
<li><strong>Consumer Priorities:</strong>
<ul>
<li>Taste is a crucial factor for consumers, while the origin of the meat (whether it came from an animal) is less important.</li>
</ul></li>
<li><strong>The Science of Meat Flavor:</strong>
<ul>
<li>Research explored the reasons behind the characteristic taste of meat.</li>
<li>The <strong>Maillard reaction</strong>, a chemical reaction between sugars and amino acids during cooking, contributes significantly to meat’s flavor and aroma.</li>
</ul></li>
<li><strong>Replicating First Principles:</strong>
<ul>
<li>Scientists aim to replicate the Maillard reaction to recreate the core taste and smell of meat.</li>
</ul></li>
<li><strong>Potential Impact:</strong>
<ul>
<li>This could significantly reduce the need to raise animals for food.</li>
</ul></li>
<li><strong>Moving Beyond Existing Systems:</strong>
<ul>
<li>Instead of focusing on incremental improvements within the livestock industry (e.g., reducing environmental impact), around 30 labs worldwide are developing <strong>artificial meat</strong>.</li>
</ul></li>
<li><strong>Progress in Artificial Meat:</strong>
<ul>
<li>Lab-grown meat is approaching the composition and properties of traditional meat.</li>
</ul></li>
<li><strong>Sensory Descriptions:</strong>
<ul>
<li>Researchers describe the product as having:
<ul>
<li>“a bite to it”</li>
<li>flavor from browning</li>
<li>“intense taste”</li>
<li>a consistency “close to meat”</li>
<li>a meat-like appearance</li>
</ul></li>
</ul></li>
<li><strong>Addressing Ethical and Environmental Concerns:</strong>
<ul>
<li>Artificial meat offers a potential solution to address ethical concerns about animal welfare and the environmental impact of the meat industry.</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-2" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-2">Conclusion</h3>
<ul>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>“As to methods, there may be a million and then some, but principles are few. The man who grasps principles can successfully select his own methods. The man who tries methods ignoring principles is sure to have trouble.” - Harrington Emerson</p>
</blockquote></li>
<li><p><strong>The Power of First Principles Thinking:</strong></p>
<ul>
<li><strong>Reasoning from first principles</strong> allows us to move beyond historical constraints and conventional wisdom to explore new possibilities.</li>
<li>Understanding the underlying principles enables us to evaluate the effectiveness of existing methods, which often prove to be suboptimal.</li>
</ul></li>
<li><p><strong>Creativity and First Principles:</strong></p>
<ul>
<li>The misconception that creativity is an innate talent is challenged.</li>
<li>Evidence suggests that we are all born creative, but societal pressures and reliance on convention can stifle this inherent ability.</li>
</ul></li>
<li><p><strong>Breaking Free from Limitations:</strong></p>
<ul>
<li>First principles thinking helps us shed these limitations and see the world with fresh eyes.</li>
<li>It opens up a wider range of possibilities and empowers us to think for ourselves.</li>
</ul></li>
</ul>
</section>
</section>
<section id="mental-model-4-thought-experiment" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-4-thought-experiment">Mental Model #4: Thought Experiment</h2>
<blockquote class="blockquote">
<p>Creativity is intelligence having fun. - Anonymous</p>
</blockquote>
<section id="introduction-3" class="level3">
<h3 class="anchored" data-anchor-id="introduction-3">Introduction</h3>
<ul>
<li><strong>Thought experiments</strong> are defined as “devices of the imagination used to investigate the nature of things.”</li>
<li>Many disciplines, including philosophy and physics, utilize thought experiments to explore the limits of knowledge.</li>
<li><strong>Benefits of Thought Experiments</strong>:
<ul>
<li>Learning from mistakes and avoiding future ones.</li>
<li>Exploring impossible scenarios.</li>
<li>Evaluating potential consequences of actions.</li>
<li>Re-examining history for better decision-making.</li>
<li>Clarifying desires and optimal paths to achieve them.</li>
</ul></li>
</ul>
</section>
<section id="the-lebron-james-basketball-analogy" class="level3">
<h3 class="anchored" data-anchor-id="the-lebron-james-basketball-analogy">The LeBron James Basketball Analogy</h3>
<section id="comparing-lebron-james-vs.-woody-allen" class="level4">
<h4 class="anchored" data-anchor-id="comparing-lebron-james-vs.-woody-allen">Comparing LeBron James vs.&nbsp;Woody Allen</h4>
<ul>
<li>The thought experiment poses the question: Who would win in a basketball game between LeBron James and Woody Allen?</li>
<li><strong>Intuition and Simulation</strong>:
<ul>
<li>We instinctively know LeBron James would win based on our knowledge of their physical attributes and basketball skills.</li>
<li>We mentally simulate the game without needing to actually observe it.</li>
</ul></li>
<li><strong>Confidence in the Outcome</strong>:
<ul>
<li>The disparity in abilities leads to high confidence in the outcome, justifying a high-stakes bet.</li>
</ul></li>
</ul>
</section>
<section id="comparing-lebron-james-vs.-kevin-durant" class="level4">
<h4 class="anchored" data-anchor-id="comparing-lebron-james-vs.-kevin-durant">Comparing LeBron James vs.&nbsp;Kevin Durant</h4>
<ul>
<li>The thought experiment then asks: Who would win between LeBron James and Kevin Durant?</li>
<li><strong>Increased Difficulty</strong>:
<ul>
<li>Both players are highly skilled professionals with similar abilities.</li>
<li>Predicting the outcome is much more challenging.</li>
</ul></li>
<li><strong>Reduced Confidence</strong>:
<ul>
<li>The uncertainty makes it unwise to place a high-stakes bet.</li>
</ul></li>
<li><strong>Need for Observation</strong>:
<ul>
<li>Determining the winner with certainty would require observing them play multiple games.</li>
</ul></li>
</ul>
</section>
<section id="the-power-of-thought-experiments" class="level4">
<h4 class="anchored" data-anchor-id="the-power-of-thought-experiments">The Power of Thought Experiments</h4>
<ul>
<li><strong>Simulating Reality</strong>: Thought experiments allow us to mentally simulate scenarios that are difficult or impossible to replicate in real life.</li>
<li><strong>Exploring Multiple Perspectives</strong>: They enable us to examine situations from various angles, exceeding the limitations of physical experimentation.</li>
<li><strong>Rigorous Approach</strong>: Effective thought experiments require the same rigor as traditional scientific experiments.</li>
</ul>
</section>
<section id="the-scientific-method-in-thought-experiments" class="level4">
<h4 class="anchored" data-anchor-id="the-scientific-method-in-thought-experiments">The Scientific Method in Thought Experiments</h4>
<ol type="1">
<li><strong>Ask a Question</strong>: Define the problem or scenario to be explored.</li>
<li><strong>Conduct Background Research</strong>: Gather relevant information about the subject matter.</li>
<li><strong>Construct Hypotheses</strong>: Formulate potential explanations or outcomes.</li>
<li><strong>Test with Thought Experiments</strong>: Mentally simulate the scenario under different conditions.</li>
<li><strong>Analyze Outcomes and Draw Conclusions</strong>: Evaluate the results of the thought experiment and derive insights.</li>
<li><strong>Compare Hypotheses and Adjust Accordingly</strong>: Refine the hypotheses based on the analysis and repeat the process if necessary.</li>
</ol>
</section>
<section id="applying-the-scientific-method-to-the-basketball-analogy" class="level4">
<h4 class="anchored" data-anchor-id="applying-the-scientific-method-to-the-basketball-analogy">Applying the Scientific Method to the Basketball Analogy</h4>
<ul>
<li><strong>Question</strong>: Who would win in a basketball game between LeBron James and Woody Allen?</li>
<li><strong>Background Research</strong>: Understanding the players’ abilities, physical characteristics, and the rules of basketball.</li>
<li><strong>Hypothesis</strong>: LeBron James would win.</li>
<li><strong>Thought Experiment</strong>: Mentally simulate the game, considering various scenarios.</li>
<li><strong>Analysis</strong>: The overwhelming likelihood of LeBron James winning supports the hypothesis.</li>
<li><strong>Conclusion</strong>: LeBron James is highly likely to win in a basketball game against Woody Allen.</li>
</ul>
</section>
<section id="estimating-probabilities" class="level4">
<h4 class="anchored" data-anchor-id="estimating-probabilities">Estimating Probabilities</h4>
<ul>
<li>Thought experiments can help us estimate the probability of different outcomes.</li>
<li><strong>Example</strong>: In a hypothetical 100,000 basketball games between LeBron James and Woody Allen, Woody Allen might only win in extremely rare circumstances, such as LeBron James experiencing a sudden medical emergency.</li>
<li><strong>Understanding Influence and Expectations</strong>: Exploring the spectrum of possibilities enhances our understanding of factors we can influence and realistic expectations for outcomes.</li>
</ul>
</section>
</section>
<section id="applications-of-thought-experiments" class="level3">
<h3 class="anchored" data-anchor-id="applications-of-thought-experiments">Applications of Thought Experiments</h3>
<section id="imagining-physical-impossibilities" class="level4">
<h4 class="anchored" data-anchor-id="imagining-physical-impossibilities">1. Imagining Physical Impossibilities</h4>
<ul>
<li><strong>Albert Einstein’s Elevator Thought Experiment</strong>:
<ul>
<li><strong>Scenario</strong>: Imagine being in a closed elevator with your feet glued to the floor. Could you determine whether the elevator was accelerating upwards in space or stationary on Earth under the influence of gravity?</li>
<li><strong>Conclusion</strong>: Einstein concluded that it would be impossible to distinguish between the two scenarios based on the felt force alone.</li>
<li><strong>Implications</strong>: This led to the development of the <strong>general theory of relativity</strong>, which equates the forces of acceleration and gravity.</li>
</ul></li>
<li><strong>“If Money Were No Object”</strong>:
<ul>
<li>This common expression prompts a thought experiment by removing the constraint of financial limitations.</li>
<li><strong>Exploring Values</strong>: Imagining choices in a financially unrestricted scenario reveals our priorities and values.</li>
</ul></li>
</ul>
</section>
<section id="reimagining-history" class="level4">
<h4 class="anchored" data-anchor-id="reimagining-history">2. Reimagining History</h4>
<ul>
<li><strong>Counterfactual and Semi-factual Reasoning</strong>:
<ul>
<li><strong>What if?</strong> questions explore alternative historical scenarios by changing past events.</li>
<li><strong>Examples</strong>:
<ul>
<li>What if Gavrilo Princip hadn’t assassinated Archduke Franz Ferdinand?</li>
<li>What if Cleopatra hadn’t met Julius Caesar?</li>
</ul></li>
</ul></li>
<li><strong>Caution with Chaotic Systems</strong>:
<ul>
<li>History is a <strong>chaotic system</strong>, where small changes can have significant and unpredictable consequences.</li>
<li><strong>The Weather Analogy</strong>: Like weather forecasting, predicting historical outcomes based on altered events is inherently difficult due to the complexity of interconnected factors.</li>
</ul></li>
<li><strong>The Importance of Rigor</strong>: Applying the scientific method to historical thought experiments helps mitigate the risk of misleading conclusions.</li>
</ul>
</section>
<section id="exploring-the-assassination-of-archduke-franz-ferdinand" class="level4">
<h4 class="anchored" data-anchor-id="exploring-the-assassination-of-archduke-franz-ferdinand">Exploring the Assassination of Archduke Franz Ferdinand</h4>
<ul>
<li><strong>Question</strong>: What if Gavrilo Princip hadn’t assassinated Archduke Franz Ferdinand?</li>
<li><strong>Background Research</strong>: Investigating the political climate, treaties, alliances, and personalities of the time.</li>
<li><strong>Refined Question</strong>: How did Princip’s assassination influence Austrian policy towards Serbia?</li>
<li><strong>Hypotheses</strong>:
<ol type="1">
<li>The assassination had no effect on policy.</li>
<li>The assassination had a partial effect on policy.</li>
<li>The assassination had a total effect on policy.</li>
</ol></li>
<li><strong>Thought Experiment</strong>: Mentally simulate scenarios where the assassination doesn’t occur, considering alternative events and Austria’s potential reactions.</li>
<li><strong>Analysis</strong>: Evaluating the plausibility of different scenarios and their potential impact on Austrian policy.</li>
<li><strong>Understanding Causal Relationships</strong>: The goal is not to definitively determine whether the assassination caused World War I, but to assess its potential contribution and the interconnectedness of events.</li>
</ul>
</section>
<section id="intuiting-the-non-intuitive" class="level4">
<h4 class="anchored" data-anchor-id="intuiting-the-non-intuitive">3. Intuiting the Non-intuitive</h4>
<ul>
<li><strong>The Veil of Ignorance (John Rawls)</strong>:
<ul>
<li><strong>Scenario</strong>: Imagine designing a society without knowing your future position within it (economic status, ethnicity, talents, gender, etc.).</li>
<li><strong>Promoting Fairness</strong>: This thought experiment encourages the creation of a just and equitable society by removing personal biases.</li>
</ul></li>
<li><strong>Challenging Intuition</strong>: The veil of ignorance forces us to reconsider our initial notions of fairness and consider the implications of societal structures for all members.</li>
<li><strong>Applications Beyond Legislation</strong>: This type of thinking can be applied to various contexts, such as designing company policies that are fair and unbiased regardless of individual roles or characteristics.</li>
</ul>
</section>
</section>
<section id="the-value-and-limitations-of-thought-experiments" class="level3">
<h3 class="anchored" data-anchor-id="the-value-and-limitations-of-thought-experiments">The Value and Limitations of Thought Experiments</h3>
<ul>
<li><strong>Exploring Limits</strong>: Thought experiments reveal the boundaries of our knowledge and what is realistically achievable.</li>
<li><strong>Decision-Making</strong>: They enhance decision-making by allowing us to consider a wider range of possibilities and potential consequences.</li>
<li><strong>Understanding Cause and Effect</strong>: Thought experiments improve our understanding of causal relationships and the factors that influence outcomes.</li>
<li><strong>Rigor and Work</strong>: Effective thought experiments require careful planning, research, and analysis.</li>
<li><strong>Not a Substitute for Reality</strong>: While valuable, thought experiments cannot fully replace real-world experimentation and observation.</li>
</ul>
</section>
<section id="sidebar-the-trolley-experiment" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-the-trolley-experiment">Sidebar: The Trolley Experiment</h3>
<ul>
<li><strong>Exploring Ethical Dilemmas</strong>: Thought experiments are often used to examine ethical and moral issues, particularly in situations where real-world experimentation would be unethical.</li>
<li><strong>The Trolley Problem</strong>:
<ul>
<li><strong>Scenario</strong>: A runaway trolley is about to kill five people on the tracks. You can divert the trolley to a different track where only one person will be killed. What do you do?</li>
<li><strong>Ethical Considerations</strong>: This thought experiment explores the complexities of utilitarianism (maximizing overall well-being) versus deontological ethics (adhering to moral rules).</li>
</ul></li>
<li><strong>Relevance to Technological Advances</strong>: The trolley problem has gained renewed relevance in the context of self-driving cars and other technologies that may require ethical decision-making in life-or-death situations.</li>
<li><strong>Variations and Extensions</strong>: The trolley problem has been adapted and expanded upon to explore various ethical nuances, such as the permissibility of sacrificing one person to save many in different contexts (e.g., organ donation).</li>
</ul>
</section>
<section id="sidebar-reduce-the-role-of-chance" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-reduce-the-role-of-chance">Sidebar: Reduce the Role of Chance</h3>
<section id="the-google-stock-example" class="level4">
<h4 class="anchored" data-anchor-id="the-google-stock-example">The Google Stock Example</h4>
<ul>
<li><strong>Scenario</strong>: You buy $100,000 of Google stock on margin (50% cash, 50% loan). The stock price doubles, tripling your initial investment.</li>
<li><strong>Exploring Alternative Outcomes</strong>:
<ul>
<li>What if Google had dropped 50% before rising 100%?</li>
<li>What if Google had experienced a significant crash, like the stock market in 1929-1932?</li>
</ul></li>
<li><strong>Assessing Risk</strong>: Running the scenario multiple times in your mind reveals the potential for significant losses and the role of chance in the outcome.</li>
<li><strong>Decision-Making Implications</strong>: This thought experiment highlights the importance of considering a wider range of possibilities and understanding the limits of our knowledge when making investment decisions.</li>
<li><strong>Reducing Reliance on Luck</strong>: By analyzing potential scenarios, we can develop more robust decision-making processes that minimize the influence of chance and improve our chances of success.</li>
</ul>
</section>
</section>
<section id="supporting-idea-necessity-and-sufficiency" class="level3">
<h3 class="anchored" data-anchor-id="supporting-idea-necessity-and-sufficiency">Supporting Idea: Necessity and Sufficiency</h3>
<ul>
<li><strong>Distinguishing Between Necessary and Sufficient Conditions</strong>:
<ul>
<li><strong>Necessary Conditions</strong>: Conditions that must be present for an event to occur.</li>
<li><strong>Sufficient Conditions</strong>: Conditions that guarantee the occurrence of an event.</li>
</ul></li>
<li><strong>The Gap Between Necessity and Sufficiency</strong>:
<ul>
<li>Achieving a desired outcome often requires more than just fulfilling the necessary conditions.</li>
<li><strong>Example</strong>: Being a skilled writer is necessary but not sufficient to become a best-selling author like J.K. Rowling.</li>
</ul></li>
<li><strong>The Role of Luck and Chance</strong>: The gap between necessity and sufficiency is often filled by factors outside our direct control, such as luck, timing, or unforeseen circumstances.</li>
<li><strong>Examples</strong>:
<ul>
<li><strong>Fortune 500 Success</strong>: Capital, hard work, and intelligence are necessary but not sufficient. Luck and other factors also play a significant role.</li>
<li><strong>Military Battles</strong>: Careful planning and logistics are necessary but not sufficient to win a battle. Unforeseen events and the actions of the enemy also influence the outcome.</li>
<li><strong>Professional Sports</strong>: Physical ability and training are necessary but not sufficient to guarantee success. Competition and other factors can prevent talented athletes from reaching the professional level.</li>
</ul></li>
<li><strong>Sets in Mathematics</strong>: The set of necessary conditions is a subset of the set of sufficient conditions. The sufficient set encompasses a wider range of factors.</li>
<li><strong>Avoiding Misleading Narratives</strong>: Understanding the distinction between necessity and sufficiency helps us avoid drawing incorrect conclusions about success or failure based solely on the presence of necessary conditions. We must acknowledge the role of other factors, including chance.</li>
</ul>
</section>
</section>
<section id="mental-model-5-second-order-thinking" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-5-second-order-thinking">Mental Model #5: Second-Order Thinking</h2>
<blockquote class="blockquote">
<p>“Technology is fine, but the scientists and engineers only partially think through their problems. They solve certain aspects, but not the total, and as a consequence, it is slapping us back in the face very hard.” - Barbara McClintock</p>
</blockquote>
<section id="introduction-4" class="level3">
<h3 class="anchored" data-anchor-id="introduction-4">Introduction</h3>
<ul>
<li><p><strong>Second-order thinking</strong> is a mental model that involves thinking further ahead and holistically, considering not only the immediate consequences of actions but also the subsequent effects of those actions.</p></li>
<li><p><strong>First-order thinking</strong> is anticipating the immediate results of actions, which is easy and safe but can lead to similar results as everyone else.</p></li>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>“Almost everyone can anticipate the immediate results of their actions. This type of first-order thinking is easy and safe, but it’s also a way to ensure that you get the same results that everyone else gets.”</p>
</blockquote></li>
<li><p>Failing to consider second- and third-order effects can lead to disaster.</p></li>
<li><p><strong>The law of unintended consequences</strong> refers to the unforeseen and often negative outcomes that arise from actions not fully considered.</p></li>
<li><p><strong>Quote:</strong> “Very often, the second level of effects is not considered until it’s too late.”</p></li>
</ul>
</section>
<section id="examples-of-second-order-thinking-deficiency" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-second-order-thinking-deficiency">Examples of Second-Order Thinking Deficiency</h3>
<section id="the-cobra-effect-in-colonial-india" class="level4">
<h4 class="anchored" data-anchor-id="the-cobra-effect-in-colonial-india">The Cobra Effect in Colonial India</h4>
<ul>
<li>The British government in India offered a reward for every dead cobra to reduce their population in Delhi.</li>
<li><strong>First-order effect:</strong> Citizens killed cobras and received rewards.</li>
<li><strong>Second-order effect:</strong> People began breeding cobras to increase their rewards, leading to a larger cobra population than before.</li>
<li><strong>Result:</strong> The British officials did not think through the second-order effects, and the snake problem worsened.</li>
</ul>
</section>
<section id="traction-on-tires" class="level4">
<h4 class="anchored" data-anchor-id="traction-on-tires">Traction on Tires</h4>
<ul>
<li>Increasing traction on tires seems like a good idea for safety.</li>
<li><strong>First-order effect:</strong> Improved grip and reduced sliding, potentially leading to faster stopping.</li>
<li><strong>Second-order effects:</strong>
<ul>
<li>Increased engine workload to propel the car.</li>
<li>Reduced gas mileage.</li>
<li>Increased carbon dioxide emissions.</li>
<li>More rubber particles left on the road.</li>
</ul></li>
<li><strong>Conclusion:</strong> Even seemingly simple changes can have unintended negative consequences.</li>
</ul>
</section>
<section id="antibiotic-use-in-livestock" class="level4">
<h4 class="anchored" data-anchor-id="antibiotic-use-in-livestock">Antibiotic Use in Livestock</h4>
<ul>
<li>Antibiotics have been used in livestock for decades to make meat safer and cheaper.</li>
<li><strong>First-order effect:</strong> Animals gain more weight per pound of food, increasing profits for farmers.</li>
<li><strong>Second-order effects:</strong>
<ul>
<li>Development of antibiotic-resistant bacteria.</li>
<li>Entry of drug-resistant bacteria into the food chain.</li>
<li>Potential health risks to humans who consume meat with antibiotic-resistant bacteria.</li>
</ul></li>
<li><strong>Garrett Hardin’s First Law of Ecology:</strong> “You can never merely do one thing.”</li>
<li>High degrees of interconnectedness make second-order thinking crucial because actions can have far-reaching and unpredictable consequences.</li>
<li><strong>Quote:</strong> “Things are not produced and consumed in a vacuum. When we try to pick out anything by itself, we find it hitched to everything else in the universe.” - John Muir</li>
</ul>
</section>
<section id="anticipating-consequences" class="level4">
<h4 class="anchored" data-anchor-id="anticipating-consequences">Anticipating Consequences</h4>
<ul>
<li>Second-order thinking is not about predicting the future with certainty, but about considering likely consequences based on available information.</li>
<li><strong>Example:</strong> The consequences of using antibiotics in animal feed could have been anticipated with a basic understanding of biology and evolution.</li>
<li>Organisms adapt to environmental pressures, and bacteria exposed to antibiotics can develop resistance over time.</li>
<li>Second-order thinking emphasizes the importance of understanding the web of connections and considering whether short-term gains are worth potential long-term pain.</li>
</ul>
</section>
</section>
<section id="applications-of-second-order-thinking" class="level3">
<h3 class="anchored" data-anchor-id="applications-of-second-order-thinking">Applications of Second-Order Thinking</h3>
<section id="prioritizing-long-term-interests" class="level4">
<h4 class="anchored" data-anchor-id="prioritizing-long-term-interests">Prioritizing Long-Term Interests</h4>
<ul>
<li>Second-order thinking helps identify long-term effects and make choices that support them, even if it means foregoing immediate gains.</li>
<li><strong>Example:</strong> Choosing not to eat candy for better long-term health.</li>
<li>Historical examples can be difficult to analyze because positive outcomes don’t always guarantee second-order thinking.</li>
</ul>
</section>
<section id="cleopatras-alliance-with-caesar-48-bc" class="level4">
<h4 class="anchored" data-anchor-id="cleopatras-alliance-with-caesar-48-bc">Cleopatra’s Alliance with Caesar (48 BC)</h4>
<ul>
<li><strong>Cleopatra’s situation:</strong>
<ul>
<li>Co-regent of Egypt with her brother, in a family known for sibling rivalry and murder.</li>
<li>Ousted from the palace and lacking support.</li>
<li>Facing assassination attempts from her brother.</li>
</ul></li>
<li><strong>Caesar’s arrival:</strong>
<ul>
<li>Roman general pursuing his enemy Pompey in Egypt.</li>
<li>Asserting Roman control over the strategically important and wealthy Egypt.</li>
<li>Roman intervention unpopular with the Egyptians.</li>
</ul></li>
<li><strong>Cleopatra’s options:</strong>
<ul>
<li>Reconcile with her brother.</li>
<li>Seek support from another country.</li>
<li>Align with Caesar.</li>
</ul></li>
<li><strong>Cleopatra’s education:</strong>
<ul>
<li>Well-versed in political history and witnessed the consequences of various actions by her father and family members.</li>
<li>Understood the complexity of Egyptian politics and the precarious balance between Rome and the Egyptian people.</li>
</ul></li>
<li><strong>Cleopatra’s decision:</strong>
<ul>
<li>Chose to align with Caesar, likely anticipating short-term pain but aiming for long-term gain.</li>
</ul></li>
<li><strong>First-order effects:</strong>
<ul>
<li>Angered her brother, leading to increased assassination attempts.</li>
<li>Angered the Egyptian people who resented Roman involvement.</li>
<li>Started a civil war with a siege on the palace, trapping her and Caesar for months.</li>
</ul></li>
<li><strong>Second-order effects (likely considered by Cleopatra):</strong>
<ul>
<li>Caesar’s support would eliminate opposition and solidify her reign.</li>
<li>Roman backing would provide stability and security in the long run.</li>
</ul></li>
<li><strong>Outcome:</strong>
<ul>
<li>Cleopatra successfully ruled Egypt for many years after the civil war.</li>
<li>Caesar’s victory removed her opposition and secured her position.</li>
</ul></li>
</ul>
</section>
<section id="constructing-effective-arguments" class="level4">
<h4 class="anchored" data-anchor-id="constructing-effective-arguments">Constructing Effective Arguments</h4>
<ul>
<li><p>Considering second-order effects strengthens arguments by demonstrating foresight and addressing potential challenges in advance.</p></li>
<li><p><strong>Example:</strong> Convincing a boss or spouse by outlining the benefits that result from the proposed action.</p></li>
<li><p><strong>Mary Wollstonecraft’s argument for women’s rights (late 18th century England):</strong></p>
<ul>
<li><p>Women had limited rights and independence.</p></li>
<li><p>Instead of directly demanding rights, Wollstonecraft focused on the <strong>second-order effects</strong> of granting those rights.</p></li>
<li><p>She argued that educating women would make them better wives, mothers, and contributing members of society.</p></li>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>“Asserting the rights which women in common with men ought to contend for, I have not attempted to extenuate their faults, but to prove them to be the natural consequence of their education and station in society. If so, it is reasonable to suppose that they will change their character and correct their vices and follies when they are allowed to be free in a physical, moral, and civil sense.”</p>
</blockquote></li>
<li><p>By highlighting the positive consequences for society, she initiated a conversation that contributed to the feminist movement.</p></li>
<li><p><strong>First-order effect:</strong> Empowering women through recognized rights.</p></li>
<li><p><strong>Second-order effect:</strong> Creating better women and a better society.</p></li>
<li><p><strong>Quote:</strong> “Not only would women get freedoms they deserved, they would become better women and better members of society.”</p></li>
</ul></li>
</ul>
</section>
</section>
<section id="avoiding-the-slippery-slope-fallacy" class="level3">
<h3 class="anchored" data-anchor-id="avoiding-the-slippery-slope-fallacy">Avoiding the Slippery Slope Fallacy</h3>
<ul>
<li><p><strong>Slippery slope effect:</strong> The flawed reasoning that a specific action will inevitably lead to a series of negative consequences.</p></li>
<li><p><strong>Garrett Hardin’s caution against the slippery slope:</strong></p>
<ul>
<li><p>People possess practical judgment and can avoid extreme outcomes.</p></li>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>“Those who take the wedge, slippery slope argument with the utmost seriousness act as though they think human beings are completely devoid of practical judgment. Countless examples from everyday life show that pessimists are wrong. If we took the wedge argument seriously, we would pass a law forbidding all vehicles to travel at any speed greater than zero. That would be an easy way out of the moral problem, but we pass no such law. In practical life, everything has limits.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Example:</strong> The argument that having one alcoholic drink will inevitably lead to a life of alcoholism is a slippery slope fallacy. While it’s a possibility, it’s not the most likely outcome for most people.</p></li>
<li><p><strong>Second-order thinking should focus on the most likely effects and their consequences, not on all possible outcomes.</strong></p></li>
<li><p>Balancing the need for higher-order thinking with practical judgment depends on the specific situation.</p></li>
</ul>
</section>
<section id="conclusion-3" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-3">Conclusion</h3>
<ul>
<li>Decisions are made within a system, and actions have consequences, both intended and unintended.</li>
<li>Considering second-order effects helps avoid future problems and make better choices.</li>
<li><strong>Key question:</strong> “And then what?”</li>
<li>Consequences can be tangible and intangible, affecting various aspects of life.</li>
<li>Thinking systemically reveals the interconnectedness of consequences.</li>
<li>Second-order thinking involves considering time, scale, thresholds, and weighing different paths.</li>
</ul>
</section>
<section id="sidebar-second-order-problem-warren-buffetts-metaphor" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-second-order-problem-warren-buffetts-metaphor">Sidebar: Second-Order Problem (Warren Buffett’s Metaphor)</h3>
<ul>
<li><strong>Parade analogy:</strong> When a few people stand on their tiptoes to see better at a parade, everyone eventually has to do the same. No one sees better, and everyone is worse off.</li>
<li><strong>Illustration:</strong> fs.blog/tgmm</li>
</ul>
</section>
<section id="sidebar-developing-trust-for-future-success" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-developing-trust-for-future-success">Sidebar: Developing Trust for Future Success</h3>
<ul>
<li>Trust and trustworthiness are built through repeated interactions.</li>
<li><strong>Second-order thinking in relationships:</strong>
<ul>
<li>Seeking immediate payoffs in interactions, unless they are win-win, often leads to one-off interactions.</li>
<li>Building trust requires considering the long-term effects of actions on others and on one’s reputation.</li>
<li>Maximizing benefits in relationships occurs over time through cooperation and trust.</li>
</ul></li>
</ul>
</section>
</section>
<section id="mental-model-6-probabilistic-thinking" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-6-probabilistic-thinking">Mental Model #6: Probabilistic Thinking</h2>
<blockquote class="blockquote">
<p>“The theory of probability is the only mathematical tool available to help map the unknown and the uncontrollable. It is fortunate that this tool, while tricky, is extraordinarily powerful and convenient.” - Benoit Mandelbrot</p>
</blockquote>
<section id="introduction-5" class="level3">
<h3 class="anchored" data-anchor-id="introduction-5">Introduction</h3>
<ul>
<li><strong>Probabilistic thinking</strong> is the process of estimating the likelihood of specific outcomes using mathematical and logical tools.</li>
<li>It enhances decision-making accuracy in a world influenced by countless factors.</li>
<li>Probabilistic thinking helps identify the most likely outcomes in complex situations.</li>
<li>The future’s inherent unpredictability stems from incomplete information and the potential for even minor errors to disrupt predictions.</li>
<li>Generating realistic probabilities offers the best approach to estimating the future.</li>
</ul>
</section>
<section id="the-need-for-probabilities" class="level3">
<h3 class="anchored" data-anchor-id="the-need-for-probabilities">The Need for Probabilities</h3>
<ul>
<li>While events either occur or don’t, uncertainty about the future necessitates probabilities.</li>
<li>Probabilities help us navigate the future by understanding the likelihood of impactful events.</li>
<li>Imperfect information about the world underscores the value of probability theory.</li>
<li>The inherent unpredictability of the future arises from unknown variables and the potential for small errors to significantly alter predictions.</li>
</ul>
</section>
<section id="the-evolution-of-probabilistic-thinking" class="level3">
<h3 class="anchored" data-anchor-id="the-evolution-of-probabilistic-thinking">The Evolution of Probabilistic Thinking</h3>
<ul>
<li>Our brains evolved <strong>heuristics</strong> (mental shortcuts) for probabilistic thinking in a time focused on survival.</li>
<li>These heuristics, studied by psychologists Daniel Kahneman and Amos Tversky, remain effective for basic survival.</li>
<li>However, thriving in today’s complex social systems requires a conscious understanding and application of probability principles.</li>
</ul>
</section>
<section id="key-aspects-of-probabilistic-thinking" class="level3">
<h3 class="anchored" data-anchor-id="key-aspects-of-probabilistic-thinking">Key Aspects of Probabilistic Thinking</h3>
<p>To improve decision-making under uncertainty, three crucial aspects of probability are essential:</p>
<ol type="1">
<li><strong>Bayesian Thinking</strong></li>
<li><strong>Fat-Tailed Curves</strong></li>
<li><strong>Asymmetries</strong></li>
</ol>
</section>
<section id="bayesian-thinking" class="level3">
<h3 class="anchored" data-anchor-id="bayesian-thinking">1. Bayesian Thinking</h3>
<section id="thomas-bayes-and-bayesian-updating" class="level4">
<h4 class="anchored" data-anchor-id="thomas-bayes-and-bayesian-updating">Thomas Bayes and Bayesian Updating</h4>
<ul>
<li><strong>Thomas Bayes</strong>, an 18th-century English minister, explored how probabilities should be adjusted with new data.</li>
<li>His work, published posthumously, laid the foundation for <strong>Bayes’ theorem</strong>, developed by mathematician Pierre-Simon Laplace.</li>
<li><strong>Bayesian thinking</strong> (or <strong>Bayesian updating</strong>) emphasizes incorporating prior knowledge when encountering new information.</li>
<li>It involves using relevant <strong>prior information</strong> (or <strong>base rates</strong>) about similar past situations to inform current decisions.</li>
</ul>
</section>
<section id="examples-of-bayesian-thinking" class="level4">
<h4 class="anchored" data-anchor-id="examples-of-bayesian-thinking">Examples of Bayesian Thinking</h4>
<ul>
<li><strong>Violent Crime:</strong>
<ul>
<li>Headlines about rising crime rates might induce fear without context.</li>
<li>A Bayesian approach considers prior knowledge of declining crime trends over decades.</li>
<li>Even if crime doubles from a low base rate (e.g., 0.01% to 0.02%), the overall risk remains low.</li>
</ul></li>
<li><strong>Diabetes Statistics:</strong>
<ul>
<li>A steady increase in diabetes diagnoses over time (e.g., from 0.93% in 1958 to 7.4% in 2015) signals a concerning trend.</li>
<li>Bayesian analysis, incorporating prior data, indicates a genuine cause for concern.</li>
</ul></li>
</ul>
</section>
<section id="the-role-of-priors" class="level4">
<h4 class="anchored" data-anchor-id="the-role-of-priors">The Role of Priors</h4>
<ul>
<li><strong>Priors</strong> are probability estimates of the truthfulness of prior knowledge.</li>
<li>They should not hinder the processing of new knowledge (<strong>likelihood ratio</strong> or <strong>Bayes factor</strong>).</li>
<li>New information can challenge and potentially reduce the probability of a prior being true.</li>
<li>This iterative cycle involves continuously challenging and validating existing beliefs.</li>
</ul>
</section>
<section id="applying-bayesian-thinking" class="level4">
<h4 class="anchored" data-anchor-id="applying-bayesian-thinking">Applying Bayesian Thinking</h4>
<ul>
<li>When facing uncertain decisions, ask:
<ul>
<li>“What are the relevant priors?”</li>
<li>“What existing knowledge can enhance my understanding of the situation?”</li>
</ul></li>
</ul>
</section>
</section>
<section id="fat-tailed-curves" class="level3">
<h3 class="anchored" data-anchor-id="fat-tailed-curves">2. Fat-Tailed Curves</h3>
<section id="bell-curve-vs.-fat-tailed-curves" class="level4">
<h4 class="anchored" data-anchor-id="bell-curve-vs.-fat-tailed-curves">Bell Curve vs.&nbsp;Fat-Tailed Curves</h4>
<ul>
<li>The <strong>bell curve</strong> (<strong>normal distribution</strong>) depicts the relative frequency of many phenomena (e.g., height, exam scores).</li>
<li>It’s characterized by symmetry and predictable extremes.</li>
<li><strong>Fat-tailed curves</strong> differ in their tails.
<ul>
<li>Extreme events are not capped, leading to longer tails.</li>
<li>While individual extreme events remain unlikely, the sheer number of possibilities increases their overall likelihood.</li>
<li>The central tendency (average) becomes less representative due to the influence of extreme events.</li>
</ul></li>
</ul>
</section>
<section id="examples-of-fat-tailed-distributions" class="level4">
<h4 class="anchored" data-anchor-id="examples-of-fat-tailed-distributions">Examples of Fat-Tailed Distributions</h4>
<ul>
<li><strong>Height/Weight:</strong> Outliers exist, but within a defined range (e.g., no human is 10 times the average height).</li>
<li><strong>Wealth:</strong> Extreme outliers are common (e.g., individuals can be 10, 100, or 10,000 times wealthier than the average).</li>
</ul>
</section>
<section id="terror-risk-vs.-stair-slipping-risk" class="level4">
<h4 class="anchored" data-anchor-id="terror-risk-vs.-stair-slipping-risk">Terror Risk vs.&nbsp;Stair-Slipping Risk</h4>
<ul>
<li>Comparing deaths from terrorism (e.g., 500) to deaths from slipping on stairs (e.g., 1,000) might suggest stairs are more dangerous.</li>
<li>However, terror risk exhibits a <strong>fat tail</strong>, with a wider range of potential extreme events.</li>
<li>The number of possible terror events in the future is far greater than the number of stair-slipping scenarios.</li>
</ul>
</section>
<section id="dealing-with-fat-tailed-domains" class="level4">
<h4 class="anchored" data-anchor-id="dealing-with-fat-tailed-domains">Dealing with Fat-Tailed Domains</h4>
<ul>
<li>It’s impossible to predict every possible extreme event in a fat-tailed domain.</li>
<li>The key is to position oneself to survive or benefit from unpredictable events by planning for a world with inherent uncertainty.</li>
</ul>
</section>
</section>
<section id="asymmetries" class="level3">
<h3 class="anchored" data-anchor-id="asymmetries">3. Asymmetries</h3>
<section id="meta-probability-and-estimation-errors" class="level4">
<h4 class="anchored" data-anchor-id="meta-probability-and-estimation-errors">Meta-Probability and Estimation Errors</h4>
<ul>
<li><strong>Meta-probability</strong> refers to the probability that your probability estimates are accurate.</li>
<li>Asymmetries arise when estimation errors consistently skew in a particular direction.</li>
</ul>
</section>
<section id="examples-of-asymmetries" class="level4">
<h4 class="anchored" data-anchor-id="examples-of-asymmetries">Examples of Asymmetries</h4>
<ul>
<li><strong>Investment Returns:</strong>
<ul>
<li>Investors often overestimate their ability to achieve high returns (e.g., 20-40% annually).</li>
<li>Actual returns tend to be lower, closer to the market average (e.g., 7-8%).</li>
</ul></li>
<li><strong>Travel Time Estimation:</strong>
<ul>
<li>People are more likely to underestimate travel time (arrive late) than overestimate it (arrive early).</li>
</ul></li>
</ul>
</section>
<section id="over-optimism-in-probabilistic-estimates" class="level4">
<h4 class="anchored" data-anchor-id="over-optimism-in-probabilistic-estimates">Over-Optimism in Probabilistic Estimates</h4>
<ul>
<li>Probability estimates are often wrong on the over-optimistic side.</li>
<li>Investors aiming for high returns frequently fall short.</li>
<li>It’s crucial to be aware of this tendency and adjust estimates accordingly.</li>
</ul>
</section>
</section>
<section id="the-spy-world-and-probabilistic-thinking" class="level3">
<h3 class="anchored" data-anchor-id="the-spy-world-and-probabilistic-thinking">The Spy World and Probabilistic Thinking</h3>
<section id="vera-atkins-and-wwii-espionage" class="level4">
<h4 class="anchored" data-anchor-id="vera-atkins-and-wwii-espionage">Vera Atkins and WWII Espionage</h4>
<ul>
<li><strong>Vera Atkins</strong>, a British intelligence officer during World War II, made countless decisions based on probabilistic thinking.</li>
<li>Her role involved recruiting and deploying agents into occupied France, where failure meant death.</li>
</ul>
</section>
<section id="agent-selection" class="level4">
<h4 class="anchored" data-anchor-id="agent-selection">Agent Selection</h4>
<ul>
<li>Atkins had to assess the probability of an agent’s success based on limited information.</li>
<li>Factors considered included language skills, confidence, family ties, and problem-solving abilities.</li>
<li>Agent development involved a series of continuously updated probability estimates.</li>
</ul>
</section>
<section id="target-selection" class="level4">
<h4 class="anchored" data-anchor-id="target-selection">Target Selection</h4>
<ul>
<li>Choosing intelligence targets required evaluating the reliability of often unreliable information.</li>
<li>Atkins had to weigh the relevancy, quality, and timeliness of intelligence gathered through various means (e.g., photographs, notes, wireless messages).</li>
<li>Decisions considered both past events and potential future scenarios.</li>
</ul>
</section>
<section id="agent-roles-and-risks" class="level4">
<h4 class="anchored" data-anchor-id="agent-roles-and-risks">Agent Roles and Risks</h4>
<ul>
<li>Agents worked in roles such as organizers, couriers, and wireless operators, each with inherent dangers.</li>
<li>The full scope of threats was never fully known, requiring preparation for unpredictable events.</li>
<li>The average life expectancy of a wireless operator in France was just six weeks.</li>
</ul>
</section>
<section id="asymmetry-in-success-estimation" class="level4">
<h4 class="anchored" data-anchor-id="asymmetry-in-success-estimation">Asymmetry in Success Estimation</h4>
<ul>
<li>The high casualty rate among Atkins’ agents (100 out of 400) suggests potential overestimation of success probabilities.</li>
<li>This highlights the limitations of probabilistic thinking, which doesn’t guarantee success but aims to improve the odds.</li>
</ul>
</section>
<section id="vera-atkins-legacy" class="level4">
<h4 class="anchored" data-anchor-id="vera-atkins-legacy">Vera Atkins’ Legacy</h4>
<ul>
<li>Despite the significant loss of life, Atkins’ network achieved valuable sabotage, supporting the Allied cause.</li>
<li>Her story demonstrates the critical role of probabilistic thinking in high-stakes situations.</li>
</ul>
</section>
</section>
<section id="conclusion-4" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-4">Conclusion</h3>
<ul>
<li><strong>Successful probabilistic thinking</strong> involves:
<ul>
<li>Identifying key factors.</li>
<li>Estimating odds.</li>
<li>Checking assumptions.</li>
<li>Making informed decisions.</li>
</ul></li>
<li>It allows for greater certainty in complex and unpredictable scenarios.</li>
<li>While perfect prediction is impossible, probabilistic thinking helps us anticipate the most likely future and strategize effectively.</li>
</ul>
</section>
<section id="sidebar-conditional-probability" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-conditional-probability">Sidebar: Conditional Probability</h3>
<ul>
<li><strong>Conditional probability</strong> considers how past events influence future probabilities.</li>
<li>Events can be <strong>independent</strong> (e.g., coin toss) or <strong>dependent</strong>.</li>
<li><strong>Dependent events</strong> mean outcomes are influenced by preceding events.</li>
</ul>
<section id="example-ice-cream-choice" class="level4">
<h4 class="anchored" data-anchor-id="example-ice-cream-choice">Example: Ice Cream Choice</h4>
<ul>
<li>If someone chooses vanilla ice cream three times in a row, it doesn’t necessarily mean vanilla is their favorite.</li>
<li>The probability of choosing vanilla might be <strong>conditional</strong> on the availability of other flavors.</li>
<li>If choices are made sequentially, the probability of choosing vanilla depends on what flavors others have already selected.</li>
<li>Using conditional probability requires careful observation of the conditions preceding an event.</li>
</ul>
</section>
</section>
<section id="sidebar-anti-fragile" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-anti-fragile">Sidebar: Anti-fragile</h3>
<section id="nassim-talebs-concept-of-anti-fragility" class="level4">
<h4 class="anchored" data-anchor-id="nassim-talebs-concept-of-anti-fragility">Nassim Taleb’s Concept of Anti-fragility</h4>
<ul>
<li><strong>Nassim Taleb</strong> introduced the concept of <strong>anti-fragility</strong> in his book of the same name.</li>
<li>Objects can be classified as:
<ul>
<li><strong>Fragile:</strong> Harmed by volatility and unpredictability.</li>
<li><strong>Robust:</strong> Neutral to volatility and unpredictability.</li>
<li><strong>Anti-fragile:</strong> Benefit from volatility and unpredictability (up to a certain point).</li>
</ul></li>
</ul>
</section>
<section id="why-aim-for-anti-fragility" class="level4">
<h4 class="anchored" data-anchor-id="why-aim-for-anti-fragility">Why Aim for Anti-fragility?</h4>
<ul>
<li>The world is inherently unpredictable and volatile, with significant events (e.g., panics, crashes, wars) having disproportionate impacts.</li>
<li>Instead of trying to predict these events (which is often impossible), it’s more effective to prepare for them by becoming anti-fragile.</li>
</ul>
</section>
<section id="strategies-for-achieving-anti-fragility" class="level4">
<h4 class="anchored" data-anchor-id="strategies-for-achieving-anti-fragility">Strategies for Achieving Anti-fragility</h4>
<ol type="1">
<li><strong>Upside Optionality:</strong>
<ul>
<li>Seeking situations with a high probability of offering opportunities, even if outcomes are uncertain.</li>
<li>Example: Attending a cocktail party to potentially meet new people, even if no guarantees exist.</li>
</ul></li>
<li><strong>Failing Properly:</strong>
<ul>
<li>Never take risks that could lead to complete ruin.</li>
<li>Develop resilience to learn from failures and try again.</li>
<li>This allows for temporary failures that lead to valuable learning and reduce vulnerability to future volatility.</li>
<li>Example: Starting a business with limited experience to gain rapid feedback and learn from both successes and failures.</li>
</ul></li>
</ol>
</section>
<section id="the-anti-fragile-mindset" class="level4">
<h4 class="anchored" data-anchor-id="the-anti-fragile-mindset">The Anti-fragile Mindset</h4>
<ul>
<li>Embrace scenarios where randomness and uncertainty can be beneficial.</li>
<li>Learn from failures and adapt to become more resilient.</li>
</ul>
</section>
</section>
<section id="sidebar-insurance-companies" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-insurance-companies">Sidebar: Insurance Companies</h3>
<section id="probability-and-insurance" class="level4">
<h4 class="anchored" data-anchor-id="probability-and-insurance">Probability and Insurance</h4>
<ul>
<li><strong>Insurance companies</strong> are highly reliant on probabilistic thinking.</li>
<li>They assess the probability of various events to determine insurance premiums.</li>
</ul>
</section>
<section id="examples-of-insured-events" class="level4">
<h4 class="anchored" data-anchor-id="examples-of-insured-events">Examples of Insured Events</h4>
<ul>
<li><strong>Life insurance:</strong> Probability of death at a specific age.</li>
<li><strong>Auto insurance:</strong> Probability of car accidents.</li>
<li><strong>Home insurance:</strong> Probability of damage (e.g., tree falling on a house).</li>
<li><strong>Unique events:</strong> Insurance policies have been issued for specific body parts, contests, and even celebrity assets.</li>
</ul>
</section>
<section id="pricing-insurance-policies" class="level4">
<h4 class="anchored" data-anchor-id="pricing-insurance-policies">Pricing Insurance Policies</h4>
<ul>
<li>Insurers carefully evaluate relevant factors, even if not fully predictable, to determine appropriate premiums.</li>
<li>They use probabilistic thinking to estimate the likelihood of events and ensure profitability on average.</li>
</ul>
</section>
</section>
<section id="supporting-idea-causation-vs.-correlation" class="level3">
<h3 class="anchored" data-anchor-id="supporting-idea-causation-vs.-correlation">Supporting Idea: Causation vs.&nbsp;Correlation</h3>
<section id="correlation" class="level4">
<h4 class="anchored" data-anchor-id="correlation">Correlation</h4>
<ul>
<li><strong>Correlation</strong> measures the relationship between two variables.</li>
<li><strong>Correlation coefficient</strong> (ranging from -1 to 1) indicates the strength and direction of the relationship.</li>
</ul>
</section>
<section id="examples-of-correlation" class="level4">
<h4 class="anchored" data-anchor-id="examples-of-correlation">Examples of Correlation</h4>
<ul>
<li><strong>No correlation:</strong> Bottled water consumption vs.&nbsp;suicide rate (correlation coefficient close to 0).</li>
<li><strong>Perfect correlation:</strong> Temperature in Celsius vs.&nbsp;Fahrenheit (correlation coefficient of 1).</li>
<li><strong>Weak to moderate correlation:</strong> Height vs.&nbsp;weight (correlation coefficient between 0 and 1).</li>
</ul>
</section>
<section id="reverse-correlation" class="level4">
<h4 class="anchored" data-anchor-id="reverse-correlation">Reverse Correlation</h4>
<ul>
<li>Correlation doesn’t always imply a direct causal link.</li>
<li>Example: High alcohol consumption in parents correlating with low academic success in children could have multiple explanations (e.g., parental drinking causing poor academic performance, or the reverse).</li>
</ul>
</section>
<section id="causation" class="level4">
<h4 class="anchored" data-anchor-id="causation">Causation</h4>
<ul>
<li><strong>Causation</strong> implies that one variable directly causes a change in another.</li>
<li><strong>Regression to the mean</strong> can make it difficult to determine true causation.</li>
</ul>
</section>
<section id="regression-to-the-mean" class="level4">
<h4 class="anchored" data-anchor-id="regression-to-the-mean">Regression to the Mean</h4>
<ul>
<li>Extreme values tend to move closer to the average over time, regardless of interventions.</li>
<li>Example: Depressed children treated with an energy drink might show improvement simply due to regression to the mean, not necessarily because of the drink.</li>
</ul>
</section>
<section id="identifying-true-causation" class="level4">
<h4 class="anchored" data-anchor-id="identifying-true-causation">Identifying True Causation</h4>
<ul>
<li><strong>Control groups</strong> are used in research to distinguish between real effects and regression to the mean.</li>
<li>In real-life situations without control groups, it can be challenging to isolate the true causes of change.</li>
</ul>
</section>
<section id="conclusion-5" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-5">Conclusion</h4>
<ul>
<li>Understanding the difference between correlation and causation is crucial for accurate analysis and decision-making.</li>
<li>Regression to the mean must be considered when evaluating the effectiveness of interventions or policies.</li>
</ul>
</section>
</section>
</section>
<section id="mental-model-7-inversion" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-7-inversion">Mental Model #7: Inversion</h2>
<blockquote class="blockquote">
<p>“The test of a first-rate intelligence is the ability to hold two opposing ideas in mind at the same time and still retain the ability to function. One should, for example, be able to see that things are hopeless, yet be determined to make them otherwise.” - F. Scott Fitzgerald</p>
</blockquote>
<section id="introduction-6" class="level3">
<h3 class="anchored" data-anchor-id="introduction-6">Introduction</h3>
<ul>
<li><strong>Inversion</strong> is a thinking tool that helps improve decision-making and problem-solving by approaching situations from the opposite perspective.</li>
<li><strong>Definition</strong>: Inversion means to upend or turn upside down. In thinking, it involves starting from the end goal or the undesirable outcome and working backwards.</li>
<li><strong>Benefits</strong>:
<ul>
<li>Helps identify and remove obstacles to success.</li>
<li>Provides multiple perspectives on reality.</li>
<li>Allows for more strategic decision-making.</li>
</ul></li>
</ul>
</section>
<section id="two-approaches-to-inversion" class="level3">
<h3 class="anchored" data-anchor-id="two-approaches-to-inversion">Two Approaches to Inversion</h3>
<ol type="1">
<li><strong>Assume True/False and Determine Consequences:</strong>
<ul>
<li>Assume your desired outcome is either true or false.</li>
<li>Explore what else would have to be true based on that assumption.</li>
</ul></li>
<li><strong>Focus on What to Avoid:</strong>
<ul>
<li>Instead of directly pursuing a goal, identify what you want to avoid.</li>
<li>Analyze the remaining options to guide your actions.</li>
</ul></li>
</ol>
</section>
<section id="historical-examples-of-inversion" class="level3">
<h3 class="anchored" data-anchor-id="historical-examples-of-inversion">Historical Examples of Inversion</h3>
<section id="carl-jacobi-mathematics" class="level4">
<h4 class="anchored" data-anchor-id="carl-jacobi-mathematics">Carl Jacobi (Mathematics)</h4>
<ul>
<li><strong>19th-century German mathematician</strong> known for solving complex problems using inversion.</li>
<li><strong>“Invert, always invert.”</strong> - Jacobi’s famous advice.</li>
<li><strong>Method:</strong> Assumed a property of an axiom was correct and worked backwards to determine consequences, leading to counterintuitive insights.</li>
</ul>
</section>
<section id="hippasus-mathematics" class="level4">
<h4 class="anchored" data-anchor-id="hippasus-mathematics">Hippasus (Mathematics)</h4>
<ul>
<li><strong>Greek mathematician (circa 2,300 years ago)</strong>, follower of Pythagoras.</li>
<li><strong>Problem:</strong> Finding the square root of 2 using direct division proved fruitless.</li>
<li><strong>Solution:</strong> Inverted the approach by trying to prove what the square root of 2 could <em>not</em> be.</li>
<li><strong>Outcome:</strong> Led to the discovery of <strong>irrational numbers</strong>, a significant mathematical breakthrough.</li>
</ul>
</section>
<section id="edward-bernays-marketing" class="level4">
<h4 class="anchored" data-anchor-id="edward-bernays-marketing">Edward Bernays (Marketing)</h4>
<ul>
<li><strong>Challenge:</strong> American Tobacco Company wanted to increase Lucky Strike cigarette sales to women in the 1920s, facing societal taboos against female smokers.</li>
<li><strong>Inversion:</strong> Instead of asking how to sell more cigarettes to women directly, Bernays asked:
<ul>
<li>“If women bought and smoked cigarettes, what else would have to be true?”</li>
<li>“What would need to change to make smoking desirable and socially acceptable for women?”</li>
<li>“How could those changes be achieved?”</li>
</ul></li>
<li><strong>Campaign Strategies:</strong>
<ul>
<li><strong>Anti-sweets campaign:</strong> Promoted cigarettes as a slimming alternative to desserts.</li>
<li><strong>Reshaping societal perceptions:</strong>
<ul>
<li>Used journalists and photographers to promote the slim ideal.</li>
<li>Obtained doctor testimonials on the supposed health benefits of smoking after meals.</li>
<li>Made cigarettes ubiquitous:
<ul>
<li>Persuaded hotels and restaurants to add cigarettes to menus.</li>
<li>Provided magazines with articles featuring cigarette-inclusive menus.</li>
<li>Encouraged designers and manufacturers to incorporate cigarette compartments into furniture and kitchenware.</li>
</ul></li>
</ul></li>
<li><strong>Linking smoking with women’s emancipation:</strong>
<ul>
<li>Marketed cigarettes as “torches of freedom.”</li>
<li>Organized public events featuring women smoking, like the 1929 Easter Sunday parade.</li>
</ul></li>
</ul></li>
<li><strong>Outcome:</strong> Successfully normalized and glamorized smoking for women, significantly increasing sales and reshaping American culture.</li>
<li><strong>“Appeals of Indirection”:</strong> Bernays’ term for his inversion-based approach, focusing on changing behaviors rather than directly selling products.</li>
</ul>
</section>
</section>
<section id="inversion-in-personal-finance" class="level3">
<h3 class="anchored" data-anchor-id="inversion-in-personal-finance">Inversion in Personal Finance</h3>
<ul>
<li><strong>Traditional Approach:</strong> Focusing on getting rich, chasing high returns, and attempting to outsmart the stock market.</li>
<li><strong>Inversion Approach:</strong> Focusing on avoiding poverty and eliminating financially destructive behaviors.</li>
<li><strong>Examples of Destructive Behaviors:</strong>
<ul>
<li>Spending more than you earn.</li>
<li>Paying high interest rates on debt.</li>
<li>Delaying saving and investing.</li>
</ul></li>
<li><strong>Index Funds (John Bogle):</strong>
<ul>
<li><strong>Problem:</strong> Difficulty in consistently beating the stock market.</li>
<li><strong>Inversion:</strong> Focused on minimizing investor losses due to fees and poor manager selection.</li>
<li><strong>Solution:</strong> Created index funds, a low-cost and passive investment strategy.</li>
</ul></li>
</ul>
</section>
<section id="force-field-analysis-kurt-lewin" class="level3">
<h3 class="anchored" data-anchor-id="force-field-analysis-kurt-lewin">Force Field Analysis (Kurt Lewin)</h3>
<ul>
<li><strong>Psychological theory (1930s)</strong> that recognizes the importance of addressing both driving and restraining forces for successful change.</li>
<li><strong>Process:</strong>
<ol type="1">
<li>Identify the problem.</li>
<li>Define your objective.</li>
<li>Identify forces supporting the desired change.</li>
<li><strong>Identify forces impeding the desired change (Inversion).</strong></li>
<li>Strategize solutions by strengthening supporting forces and weakening or removing impeding forces.</li>
</ol></li>
</ul>
</section>
<section id="florence-nightingale-and-statistics" class="level3">
<h3 class="anchored" data-anchor-id="florence-nightingale-and-statistics">Florence Nightingale and Statistics</h3>
<ul>
<li><strong>Crimean War (1854-1855):</strong> British Army faced a high mortality rate (23%) in the first winter.</li>
<li><strong>Nightingale’s Contribution:</strong> Used statistics to reveal that poor sanitation was the leading cause of death.</li>
<li><strong>Inversion:</strong> Focused on preventing problems (improving sanitation) rather than just treating symptoms.</li>
<li><strong>Outcome:</strong> Mortality rate dropped to 2.5% in the second winter.</li>
<li><strong>Legacy:</strong> Nightingale’s advocacy for statistics led to their use in improving public health and preventing disease.</li>
</ul>
</section>
<section id="sun-tzus-wisdom" class="level3">
<h3 class="anchored" data-anchor-id="sun-tzus-wisdom">Sun Tzu’s Wisdom</h3>
<ul>
<li><strong>Quote:</strong> “He wins his battles by making no mistakes.”</li>
<li><strong>Quote:</strong> “Hence, to fight and conquer in all of your battles is not supreme excellence. Supreme excellence consists in breaking the enemy’s resistance without fighting.”</li>
<li><strong>Inversion in Warfare:</strong> Emphasizes avoiding unnecessary battles and achieving victory through strategic maneuvering and weakening the opponent’s resolve.</li>
</ul>
</section>
<section id="sherlock-holmes-and-inversion" class="level3">
<h3 class="anchored" data-anchor-id="sherlock-holmes-and-inversion">Sherlock Holmes and Inversion</h3>
<ul>
<li><strong>A Scandal in Bohemia:</strong> Holmes is hired to retrieve a compromising photograph from Irene Adler.</li>
<li><strong>Inversion:</strong> Instead of directly searching for the photo, Holmes considers what would be true if Adler planned to use it for blackmail:
<ul>
<li>The photo would be valuable to her.</li>
<li>It would be hidden in an easily accessible location.</li>
</ul></li>
<li><strong>Method:</strong> Stages a fake fire to prompt Adler to reveal the photo’s hiding place.</li>
<li><strong>Outcome:</strong> Successfully confirms the existence and location of the photo through logical deduction based on inversion.</li>
</ul>
</section>
<section id="conclusion-6" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-6">Conclusion</h3>
<ul>
<li><strong>Inversion is a powerful tool</strong> applicable to various fields, not just mathematics or science.</li>
<li><strong>It can help overcome obstacles and achieve goals</strong> by providing a different perspective.</li>
<li><strong>“Invert, always invert”</strong> when facing challenges or seeking innovative solutions.</li>
<li><strong>Taking the results of inversion seriously</strong> can lead to significant progress and breakthroughs.</li>
</ul>
</section>
</section>
<section id="mental-model-8-occams-razor" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-8-occams-razor">Mental Model #8: Occam’s Razor</h2>
<blockquote class="blockquote">
<p>Anybody can make the simple complicated. Creativity is making the complicated simple. - Charles Mingus, Occam’s Razor.</p>
</blockquote>
<section id="introduction-7" class="level3">
<h3 class="anchored" data-anchor-id="introduction-7">Introduction</h3>
<ul>
<li><strong>Occam’s Razor</strong> is a principle of logic and problem-solving that favors simpler explanations over more complex ones.</li>
<li><strong>Charles Mingus</strong> and <strong>William of Ockham</strong> are associated with the concept of simplicity in explanation.</li>
<li><strong>Simpler explanations are more likely to be true</strong> than complicated ones.</li>
<li>Occam’s Razor encourages making decisions based on the explanation with the fewest assumptions or “moving parts.”</li>
</ul>
</section>
<section id="why-simpler-explanations-are-preferred" class="level3">
<h3 class="anchored" data-anchor-id="why-simpler-explanations-are-preferred">Why Simpler Explanations Are Preferred</h3>
<ul>
<li><strong>Reduced Complexity</strong>: Simpler explanations are easier to understand, falsify, and manage.</li>
<li><strong>Tendency Towards Truth</strong>: They are generally more likely to be correct.</li>
<li><strong>Efficiency</strong>: Focusing on simplicity avoids wasting time and resources on disproving complex scenarios.</li>
</ul>
</section>
<section id="examples-of-overly-complex-explanations" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-overly-complex-explanations">Examples of Overly Complex Explanations</h3>
<ul>
<li><strong>Everyday Situations</strong>:
<ul>
<li>Assuming a car accident if a husband is late.</li>
<li>Suspecting a medical issue if a child’s growth is slightly less than expected.</li>
<li>Fearing bone cancer due to a toe ache.</li>
</ul></li>
<li><strong>These scenarios highlight the tendency to jump to worst-case conclusions without sufficient evidence.</strong></li>
<li><strong>More likely explanations often involve simpler factors</strong>: being caught up at work, mismeasurement, or tight shoes.</li>
</ul>
</section>
<section id="the-human-tendency-towards-complex-narratives" class="level3">
<h3 class="anchored" data-anchor-id="the-human-tendency-towards-complex-narratives">The Human Tendency Towards Complex Narratives</h3>
<ul>
<li>We often create complex stories to explain what we observe, from human behavior to physical phenomena.</li>
<li>This tendency can be useful in some contexts, such as art, but can lead to unnecessary complexity in problem-solving.</li>
</ul>
</section>
<section id="origins-and-development-of-occams-razor" class="level3">
<h3 class="anchored" data-anchor-id="origins-and-development-of-occams-razor">Origins and Development of Occam’s Razor</h3>
<ul>
<li><strong>William of Ockham</strong>: A medieval logician who formulated the principle: “A plurality is not to be posited without necessity.”</li>
<li><strong>The principle had been in use since antiquity.</strong></li>
<li><strong>David Hume</strong>: An 18th-century Scottish philosopher who applied Occam’s Razor to the evaluation of miracles.</li>
<li><strong>Hume argued for skepticism about miracles</strong> because:
<ul>
<li>They are, by definition, outside our normal understanding of nature.</li>
<li>A simpler explanation is likely: misinterpretation of events or a lack of understanding of natural phenomena.</li>
</ul></li>
</ul>
</section>
<section id="carl-sagan-and-the-explanation-of-miracles" class="level3">
<h3 class="anchored" data-anchor-id="carl-sagan-and-the-explanation-of-miracles">Carl Sagan and the Explanation of Miracles</h3>
<ul>
<li><strong>Carl Sagan</strong>, in “The Demon-Haunted World,” explained that phenomena once considered miraculous are now understood through science.</li>
<li><strong>Examples</strong>:
<ul>
<li>Phototropism and plant hormones explain sunflowers following the sun.</li>
<li>Future scientific advancements may explain altered states of consciousness without resorting to supernatural explanations.</li>
</ul></li>
<li><strong>Simpler Explanation</strong>: Miracles may represent natural principles we currently don’t understand.</li>
</ul>
</section>
<section id="dark-matter-an-example-of-occams-razor-in-science" class="level3">
<h3 class="anchored" data-anchor-id="dark-matter-an-example-of-occams-razor-in-science">Dark Matter: An Example of Occam’s Razor in Science</h3>
<ul>
<li><strong>Vera Rubin’s Observations</strong>: In the 1970s, astronomer Vera Rubin observed galaxies rotating in a way that contradicted Newton’s laws.</li>
<li><strong>Dark Matter Hypothesis</strong>:
<ul>
<li><strong>Fritz Zwicky</strong> (1933) theorized the existence of <strong>dark matter</strong>, an unseen mass influencing galaxy behavior.</li>
<li>Dark matter became the simplest explanation for Rubin’s observations.</li>
</ul></li>
<li><strong>Despite no direct detection of dark matter, it remains the most plausible explanation for the observed phenomena.</strong></li>
</ul>
</section>
<section id="mathematical-justification-for-occams-razor" class="level3">
<h3 class="anchored" data-anchor-id="mathematical-justification-for-occams-razor">Mathematical Justification for Occam’s Razor</h3>
<ul>
<li><strong>Comparing Explanations</strong>: Consider two explanations for the same phenomenon, one with 3 variables and the other with 30.</li>
<li><strong>Probability of Error</strong>:
<ul>
<li>If each variable has a 99% chance of being correct, the simpler explanation (3 variables) has a 3% chance of being wrong.</li>
<li>The more complex explanation (30 variables) has a 26% chance of being wrong.</li>
</ul></li>
<li><strong>Conclusion</strong>: Simpler explanations are more robust in the face of uncertainty.</li>
</ul>
</section>
<section id="dark-matter-and-ongoing-scientific-inquiry" class="level3">
<h3 class="anchored" data-anchor-id="dark-matter-and-ongoing-scientific-inquiry">Dark Matter and Ongoing Scientific Inquiry</h3>
<ul>
<li><strong>Lisa Randall</strong> argues that the existence of dark matter fits with our current understanding of the universe.</li>
<li><strong>Scientific Method</strong>: Science continually seeks to validate its assumptions and refine its understanding.</li>
<li><strong>Extraordinary Claims Require Extraordinary Proof</strong>: Carl Sagan advocated for rational investigation of extraordinary claims.</li>
<li><strong>Dark matter is currently the simplest explanation</strong>, but scientists continue to search for direct evidence.</li>
<li><strong>If dark matter becomes too complex, our understanding of gravity might need revision.</strong></li>
<li><strong>Vera Rubin</strong> herself considered the possibility that a modified understanding of gravity might be the solution.</li>
<li><strong>Such a claim would require extraordinary proof.</strong></li>
</ul>
</section>
<section id="simplicity-and-efficiency" class="level3">
<h3 class="anchored" data-anchor-id="simplicity-and-efficiency">Simplicity and Efficiency</h3>
<ul>
<li><strong>Limited Resources</strong>: Occam’s Razor helps prioritize investigations by focusing on the simplest explanations.</li>
<li><strong>Avoiding Dead Ends</strong>: Without this filter, we risk wasting time and resources on improbable scenarios.</li>
<li><strong>Power of Simplicity</strong>: Simple solutions can be surprisingly powerful and effective.</li>
<li><strong>Avoiding Unnecessary Complexity</strong>: Sometimes, complex solutions mask underlying flaws that need to be addressed.</li>
<li><strong>Making Decisions Based on Reality</strong>: Simplicity helps us see things as they are and make more informed decisions.</li>
</ul>
</section>
<section id="examples-of-the-power-of-simple-solutions" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-the-power-of-simple-solutions">Examples of the Power of Simple Solutions</h3>
<ul>
<li><strong>Ivanhoe Reservoir</strong>:
<ul>
<li><strong>Problem</strong>: Preventing the formation of bromate, a carcinogen, in the Los Angeles water supply.</li>
<li><strong>Complex Solutions</strong>: Building a tarp or a retractable dome over the reservoir (infeasible).</li>
<li><strong>Simple Solution</strong>: Using bird balls (floating spheres used at airports) to shade the water.</li>
<li><strong>Result</strong>: Effective, inexpensive, and low-maintenance solution.</li>
</ul></li>
<li><strong>Bengal Tiger Attacks</strong>:
<ul>
<li><strong>Problem</strong>: Preventing tiger attacks on villagers in India’s Ganges Delta.</li>
<li><strong>Complex Solutions</strong>: Various weapons and deterrents proved ineffective.</li>
<li><strong>Simple Solution</strong>: Wearing masks with human faces on the back of the head to deter tigers who preferred to attack unseen prey.</li>
<li><strong>Result</strong>: Significant reduction in tiger attacks for those wearing the masks.</li>
</ul></li>
</ul>
</section>
<section id="caveats-to-occams-razor" class="level3">
<h3 class="anchored" data-anchor-id="caveats-to-occams-razor">Caveats to Occam’s Razor</h3>
<ul>
<li><strong>Irreducible Complexity</strong>: Some things are inherently complex and cannot be simplified further.</li>
<li><strong>Examples</strong>:
<ul>
<li><strong>Fraudulent Schemes</strong>: Pyramid schemes and Ponzi schemes are complex phenomena with no single, simple explanation.</li>
<li><strong>Human Flight</strong>: Achieving flight required understanding complex concepts like airflow, lift, drag, and combustion.</li>
</ul></li>
<li><strong>Dealing with Complexity</strong>: When something cannot be simplified further, we must address its inherent complexity.</li>
</ul>
</section>
<section id="determining-the-limits-of-simplicity" class="level3">
<h3 class="anchored" data-anchor-id="determining-the-limits-of-simplicity">Determining the Limits of Simplicity</h3>
<ul>
<li><strong>Computer Code Analogy</strong>: Simplifying code must ensure it still performs its intended functions.</li>
<li><strong>Maintaining Accuracy</strong>: An explanation can be simplified only as long as it remains accurate and comprehensive.</li>
</ul>
</section>
<section id="conclusion-7" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-7">Conclusion</h3>
<ul>
<li>Focusing on simplicity can be a hallmark of genius, but it requires careful consideration.</li>
<li>Remembering that simpler explanations are more likely to be true helps conserve time and energy.</li>
<li>Occam’s Razor is a valuable tool for problem-solving and decision-making in various fields.</li>
</ul>
</section>
<section id="sidebar-occams-razor-in-the-medical-field" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-occams-razor-in-the-medical-field">Sidebar: Occam’s Razor in the Medical Field</h3>
<ul>
<li><strong>Diagnosis</strong>: Occam’s Razor helps doctors prioritize diagnoses based on the likelihood of different conditions.</li>
<li><strong>Example</strong>: Flu-like symptoms are more likely to indicate the flu than Ebola.</li>
<li><strong>Bayesian Updating</strong>: Doctors use background knowledge and new information to update their assessment of probabilities.</li>
<li><strong>“When you hear hoofbeats, think horses, not zebras.”</strong>: This medical adage emphasizes the importance of considering the most common explanations first.</li>
<li><strong>Countering Hypochondria</strong>: For patients, Occam’s Razor can help reduce anxiety by focusing on the most likely explanations for symptoms.</li>
</ul>
</section>
<section id="sidebar-the-razor-in-leadership" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-the-razor-in-leadership">Sidebar: The Razor in Leadership</h3>
<ul>
<li><strong>Louis Gerstner and IBM</strong>: When Gerstner took over IBM during a period of struggle, he rejected calls for a grand vision.</li>
<li><strong>Focusing on the Essentials</strong>: Instead, he prioritized serving customers, competing effectively, and focusing on profitable businesses.</li>
<li><strong>Simple Execution</strong>: Gerstner’s approach emphasized tough-minded business execution over complex strategies.</li>
<li><strong>Success Through Simplicity</strong>: By the end of the 1990s, IBM had recovered without relying on grand visions or technological overhauls.</li>
<li><strong>This example demonstrates the power of simplicity in leadership and problem-solving.</strong></li>
</ul>
</section>
</section>
<section id="mental-model-9-hanlons-razor" class="level2">
<h2 class="anchored" data-anchor-id="mental-model-9-hanlons-razor">Mental Model #9: Hanlon’s Razor</h2>
<blockquote class="blockquote">
<p>I need to listen so well that I hear what is not said - Thuli Madonsela</p>
</blockquote>
<section id="introduction-8" class="level3">
<h3 class="anchored" data-anchor-id="introduction-8">Introduction</h3>
<ul>
<li><strong>Hanlon’s Razor</strong> is a principle suggesting that one should not attribute to malice what can be more easily explained by stupidity.</li>
<li><strong>Origin</strong>: Though difficult to trace definitively, it is often attributed to Robert J. Hanlon.</li>
<li><strong>Benefit</strong>: Helps avoid paranoia and ideology by encouraging a search for alternative explanations rather than assuming malicious intent.</li>
<li><strong>Core Idea</strong>: People make mistakes; it’s important to consider less intentional explanations for events.</li>
<li><strong>Principle of Least Intent</strong>: The most likely explanation is often the one that assumes the least amount of deliberate intent.</li>
</ul>
</section>
<section id="examples-of-misattributing-intent" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-misattributing-intent">Examples of Misattributing Intent</h3>
<section id="road-rage" class="level4">
<h4 class="anchored" data-anchor-id="road-rage">Road Rage</h4>
<ul>
<li>Assuming malice when someone cuts you off in traffic implies a complex, intentional act:
<ul>
<li>Noticing you specifically.</li>
<li>Gauging your speed and trajectory.</li>
<li>Deliberately swerving to impede your progress without causing an accident.</li>
</ul></li>
<li>A simpler explanation: The driver didn’t see you; it was a mistake, not malice.</li>
</ul>
</section>
<section id="the-linda-problem-kahneman-and-tversky-1982" class="level4">
<h4 class="anchored" data-anchor-id="the-linda-problem-kahneman-and-tversky-1982">The Linda Problem (Kahneman and Tversky, 1982)</h4>
<ul>
<li><strong>Experiment</strong>: Participants were presented with a description of Linda:
<ul>
<li>31 years old, single, outspoken, very bright.</li>
<li>Majored in philosophy.</li>
<li>Concerned with discrimination, social justice, and participated in anti-nuclear demonstrations.</li>
</ul></li>
<li><strong>Question</strong>: Which is more probable?
<ol type="1">
<li>Linda is a bank teller.</li>
<li>Linda is a bank teller and is active in the feminist movement.</li>
</ol></li>
<li><strong>Results</strong>: The majority chose option 2, exhibiting the <strong>fallacy of conjunction</strong>.</li>
<li><strong>Explanation</strong>: The vivid description led participants to assume Linda was a feminist, influencing their probability judgment despite the logical error.</li>
<li><strong>Implications</strong>:
<ul>
<li>Vivid evidence can override logical reasoning.</li>
<li>We tend to over-conclude based on limited information.</li>
<li>We readily incorporate unrelated factors if they align with our existing beliefs.</li>
</ul></li>
<li><strong>Criticism</strong>: The wording of the problem might have influenced the results. However, the study highlights how framing can affect our judgment.</li>
</ul>
</section>
</section>
<section id="the-connection-to-hanlons-razor" class="level3">
<h3 class="anchored" data-anchor-id="the-connection-to-hanlons-razor">The Connection to Hanlon’s Razor</h3>
<ul>
<li>When faced with unfavorable or seemingly wrong situations, we often default to assuming intentional wrongdoing.</li>
<li>However, unintentional explanations (stupidity, ignorance, error) are statistically more likely.</li>
<li>Assuming malice, like in the Linda problem, can lead to faulty conclusions.</li>
<li>Vivid negative events can trigger emotional responses, hindering rational assessment.</li>
<li>Hanlon’s Razor serves as a corrective, reminding us to consider less malicious explanations.</li>
</ul>
</section>
<section id="consequences-of-assuming-malice" class="level3">
<h3 class="anchored" data-anchor-id="consequences-of-assuming-malice">Consequences of Assuming Malice</h3>
<section id="paranoia" class="level4">
<h4 class="anchored" data-anchor-id="paranoia">Paranoia</h4>
<ul>
<li>Constantly assuming malice can lead to paranoia, believing you are the target of others’ ill intentions.</li>
</ul>
</section>
<section id="self-centeredness" class="level4">
<h4 class="anchored" data-anchor-id="self-centeredness">Self-Centeredness</h4>
<ul>
<li>Assuming malice places you at the center of everyone’s actions, an egocentric worldview.</li>
</ul>
</section>
<section id="overlooking-other-explanations" class="level4">
<h4 class="anchored" data-anchor-id="overlooking-other-explanations">Overlooking Other Explanations</h4>
<ul>
<li>The focus on malice obscures more common explanations like ignorance, stupidity, and laziness.</li>
</ul>
</section>
<section id="oscar-wilde-quote" class="level4">
<h4 class="anchored" data-anchor-id="oscar-wilde-quote">Oscar Wilde Quote</h4>
<blockquote class="blockquote">
<p>“One is tempted to define man as a rational animal who always loses his temper when he is called upon to act in accordance with the dictates of reason.”</p>
</blockquote>
<ul>
<li>This quote highlights the human tendency to abandon reason in favor of emotional responses, like assuming malice.</li>
</ul>
</section>
</section>
<section id="historical-example-the-fall-of-the-western-roman-empire" class="level3">
<h3 class="anchored" data-anchor-id="historical-example-the-fall-of-the-western-roman-empire">Historical Example: The Fall of the Western Roman Empire</h3>
<section id="emperor-honorius-and-general-stilicho-408-ad" class="level4">
<h4 class="anchored" data-anchor-id="emperor-honorius-and-general-stilicho-408-ad">Emperor Honorius and General Stilicho (408 AD)</h4>
<ul>
<li><strong>Honorius</strong>, Emperor of the Western Roman Empire, suspected his general, <strong>Stilicho</strong>, of treason.</li>
<li><strong>Stilicho</strong> was a skilled and loyal general but had made a controversial decision:
<ul>
<li>He advised the Roman Senate to negotiate with <strong>Alaric</strong>, the leader of the Visigoths, who had attacked Rome.</li>
<li>This damaged Stilicho’s reputation and fueled Honorius’s suspicions.</li>
</ul></li>
<li><strong>Honorius</strong>, assuming malicious intent (Stilicho wanting the throne), ordered Stilicho’s arrest and execution.</li>
<li><strong>Consequences</strong>:
<ul>
<li>Without Stilicho, Rome’s military strength declined.</li>
<li>Alaric sacked Rome in 410 AD, a major contributing factor to the empire’s eventual collapse.</li>
</ul></li>
</ul>
</section>
</section>
<section id="benefits-of-applying-hanlons-razor" class="level3">
<h3 class="anchored" data-anchor-id="benefits-of-applying-hanlons-razor">Benefits of Applying Hanlon’s Razor</h3>
<section id="countering-confirmation-bias" class="level4">
<h4 class="anchored" data-anchor-id="countering-confirmation-bias">Countering Confirmation Bias</h4>
<ul>
<li>Hanlon’s Razor helps overcome <strong>confirmation bias</strong>, the tendency to favor information confirming existing beliefs.</li>
</ul>
</section>
<section id="finding-effective-solutions" class="level4">
<h4 class="anchored" data-anchor-id="finding-effective-solutions">Finding Effective Solutions</h4>
<ul>
<li>Recognizing stupidity or error allows for more realistic and effective problem-solving.</li>
</ul>
</section>
<section id="avoiding-defensive-mode" class="level4">
<h4 class="anchored" data-anchor-id="avoiding-defensive-mode">Avoiding Defensive Mode</h4>
<ul>
<li>Assuming malice triggers a defensive mindset, limiting opportunities and hindering a broader perspective.</li>
</ul>
</section>
</section>
<section id="the-man-who-saved-the-world-vasily-arkhipov-1962" class="level3">
<h3 class="anchored" data-anchor-id="the-man-who-saved-the-world-vasily-arkhipov-1962">The Man Who Saved the World: Vasily Arkhipov (1962)</h3>
<section id="cuban-missile-crisis" class="level4">
<h4 class="anchored" data-anchor-id="cuban-missile-crisis">Cuban Missile Crisis</h4>
<ul>
<li>During the height of the Cuban Missile Crisis, US destroyers and Soviet submarines were in a standoff.</li>
<li>The US planned to drop depth charges to force the Soviet subs to surface (without informing the Soviets).</li>
<li><strong>Soviet submarine B-59</strong>:
<ul>
<li>Carried a nuclear weapon.</li>
<li>Was unaware of the US plan.</li>
</ul></li>
<li><strong>Vasily Arkhipov</strong>: An officer on B-59.</li>
</ul>
</section>
<section id="assuming-the-worst-vs.-staying-calm" class="level4">
<h4 class="anchored" data-anchor-id="assuming-the-worst-vs.-staying-calm">Assuming the Worst vs.&nbsp;Staying Calm</h4>
<ul>
<li>When the depth charges began, the Soviet captain believed war had started and wanted to launch the nuclear torpedo.</li>
<li><strong>Arkhipov’s Intervention</strong>: He refused to authorize the launch, arguing for caution and contact with Moscow.</li>
<li><strong>Reasoning</strong>: Instead of assuming malice, he considered the possibility of a mistake or miscommunication.</li>
<li><strong>Outcome</strong>: B-59 surfaced, averting a potential nuclear war.</li>
<li><strong>Recognition</strong>: Arkhipov’s role in preventing disaster was only revealed decades later.</li>
</ul>
</section>
</section>
<section id="limitations-of-hanlons-razor" class="level3">
<h3 class="anchored" data-anchor-id="limitations-of-hanlons-razor">Limitations of Hanlon’s Razor</h3>
<ul>
<li><strong>Not a Universal Rule</strong>: While helpful, it shouldn’t be applied indiscriminately.</li>
<li><strong>Focus on Unintentional Actions</strong>: It primarily addresses situations where actions are driven by ignorance, error, or laziness, not deliberate malice.</li>
<li><strong>Principle of Least Effort</strong>: It suggests that actions requiring less effort (e.g., stupidity) are more likely than those requiring complex planning (malice).</li>
</ul>
</section>
<section id="conclusion-8" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-8">Conclusion</h3>
<ul>
<li>Hanlon’s Razor reminds us that true villains are rarer than we might think.</li>
<li>People are fallible, prone to mistakes, laziness, and flawed thinking.</li>
<li>Acknowledging this human reality leads to a more effective and compassionate approach to life.</li>
</ul>
</section>
<section id="sidebar-the-devil-fallacy-robert-heinlein-1941" class="level3">
<h3 class="anchored" data-anchor-id="sidebar-the-devil-fallacy-robert-heinlein-1941">Sidebar: The Devil Fallacy (Robert Heinlein, 1941)</h3>
<ul>
<li><p><strong>Doc Graves</strong>, a character in Robert Heinlein’s “Logic of Empire,” describes the <strong>devil fallacy</strong>:</p>
<blockquote class="blockquote">
<p>“You have attributed conditions to villainy that simply result from stupidity.”</p>
</blockquote></li>
<li><p><strong>Explanation</strong>: The devil fallacy involves attributing negative outcomes to intentional evil rather than incompetence or unintended consequences.</p></li>
<li><p><strong>Hanlon’s Razor as a Counter</strong>: Hanlon’s Razor helps us avoid the devil fallacy by reminding us to consider less malicious explanations.</p></li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>book</category>
  <category>notes</category>
  <guid>https://christianjmills.com/posts/the-great-mental-models-book-series-notes/volume-1/</guid>
  <pubDate>Fri, 04 Oct 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Notes on Brave New Words: How AI Will Revolutionize Education</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/brave-new-words-book-notes/</link>
  <description><![CDATA[ 




<ul>
<li>Introduction: Let’s write a new story together</li>
<li>Part I꞉ Rise of the AI Tutor<br>
</li>
<li>Part II: Giving Voice to the Social Sciences<br>
</li>
<li>Part III: Empowering the Next Innovators<br>
</li>
<li>Part IV: Better Together<br>
</li>
<li>Part V: Keeping Kids Safe<br>
</li>
<li>Part VI: Teaching in the Age of AI<br>
</li>
<li>Part VII: The Global Classroom<br>
</li>
<li>Part VIII: AI Assessments and Admissions<br>
</li>
<li>Part IX: Work and What Comes Next</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled" title="Book LInks:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://www.penguinrandomhouse.com/books/740806/brave-new-words-by-salman-khan/">Publisher Page</a></li>
</ul>
</div>
</div>
<section id="introduction-lets-write-a-new-story-together" class="level2">
<h2 class="anchored" data-anchor-id="introduction-lets-write-a-new-story-together">Introduction: Let’s write a new story together</h2>
<blockquote class="blockquote">
<p>“You can’t cross the sea merely by standing and staring at the water.” - Rabindranath Tagore</p>
<p>“But whatever you do, do not let the past be a straitjacket.” - Robert A. Heinlein</p>
</blockquote>
<section id="a-new-era-of-storytelling-and-education" class="level3">
<h3 class="anchored" data-anchor-id="a-new-era-of-storytelling-and-education">A New Era of Storytelling and Education</h3>
<ul>
<li><strong>Premise</strong>: Khan and his 11-year-old daughter, Thea, embark on a collaborative storytelling exercise using GPT-4, a large language model developed by OpenAI.</li>
<li><strong>The Experiment</strong>: Thea creates a story about a stranded social media influencer, Samantha. As they write, Samantha begins interacting with Thea through the AI, demonstrating its ability to participate in complex dialogues and understand context.</li>
<li><strong>Significance</strong>: This interaction showcases the potential of AI to revolutionize education and learning, highlighting the need for <strong>educated bravery</strong> in embracing this new technology.</li>
</ul>
</section>
<section id="khan-academys-journey-and-the-rise-of-ai" class="level3">
<h3 class="anchored" data-anchor-id="khan-academys-journey-and-the-rise-of-ai">Khan Academy’s Journey and the Rise of AI</h3>
<section id="khan-academys-origins-and-mission" class="level4">
<h4 class="anchored" data-anchor-id="khan-academys-origins-and-mission">Khan Academy’s Origins and Mission</h4>
<ul>
<li><strong>Initial Goal</strong>: Provide free math tutoring to Khan’s cousin, Nadia, using instant messaging and phone calls.</li>
<li><strong>Expansion</strong>: Free tutoring services extended to family members, leading to the development of web-based math practice software.</li>
<li><strong>Khan Academy’s Birth</strong>: Website launched with the aim of providing personalized learning to students through exercises and tracking progress.</li>
<li><strong>Incorporation of Video Lessons</strong>: Videos added to complement the software, offering tutor-like instruction and addressing the need for affordable learning resources.</li>
<li><strong>Growth and Impact</strong>: Khan Academy evolves into a non-profit organization serving millions of learners worldwide in multiple languages.</li>
<li><strong>Core Mission</strong>: Provide a free, world-class education for anyone, anywhere, with a focus on personalized learning and <strong>mastery learning</strong>.</li>
</ul>
</section>
<section id="the-potential-of-ai-in-education" class="level4">
<h4 class="anchored" data-anchor-id="the-potential-of-ai-in-education">The Potential of AI in Education</h4>
<ul>
<li><strong>Long-held Aspiration</strong>: To emulate the effectiveness of one-on-one tutoring through technology.</li>
<li><strong>AI as a Solution</strong>: AI technology recognized as a potential tool for achieving personalized learning at scale.</li>
<li><strong>Science Fiction Inspiration</strong>:
<ul>
<li>Neil Stevenson’s <em>The Diamond Age</em>: Explores AI-powered personalized education through an interactive book and app.</li>
<li>Orson Scott Card’s <em>Ender’s Game</em>: Depicts a battle school utilizing AI for strategic training through a personal tutor.</li>
<li>Isaac Asimov’s <em>The Fun They Had</em>: Presents a future school revolutionized by advanced technology and robot teachers.</li>
</ul></li>
<li><strong>Real-world Parallels</strong>:
<ul>
<li>Steve Jobs’ vision of computers as “bicycles for our minds,” extending human capabilities.</li>
<li>Decades of research and development in AI aiming to emulate human intelligence.</li>
</ul></li>
</ul>
</section>
<section id="early-milestones-in-ai" class="level4">
<h4 class="anchored" data-anchor-id="early-milestones-in-ai">Early Milestones in AI</h4>
<ul>
<li><strong>1962</strong>: IBM 7094 computer defeats checkers master Robert Neely.</li>
<li><strong>1957</strong>: Frank Rosenblatt creates Perceptron, the first artificial neural network.</li>
<li><strong>Limitations</strong>: Early AI systems faced limitations in computational power, training techniques, and data availability.</li>
</ul>
</section>
<section id="advancements-in-ai-technology" class="level4">
<h4 class="anchored" data-anchor-id="advancements-in-ai-technology">Advancements in AI Technology</h4>
<ul>
<li><strong>Modern Applications</strong>: AI powers recommendation engines, voice assistants, and other widely used technologies.</li>
<li><strong>Mimicking Human Behavior</strong>: AI’s ability to mimic human responses blurs the lines between human and machine interactions.</li>
<li><strong>Increased Computational Power</strong>: Modern computers can handle systems approaching the complexity of the human brain.</li>
<li><strong>Breakthroughs in Neural Networks</strong>: Significant advancements in structuring and training neural networks.</li>
<li><strong>2017</strong>: Google introduces <strong>transformer technology</strong>, enabling faster training and improved accuracy in language modeling.</li>
</ul>
</section>
<section id="understanding-large-language-models-llms" class="level4">
<h4 class="anchored" data-anchor-id="understanding-large-language-models-llms">Understanding Large Language Models (LLMs)</h4>
<ul>
<li><strong>Large Language Models (LLMs)</strong>: Computational representations designed to model associations between words, mimicking neurons and synapses in the brain.</li>
<li><strong>GPT-4 (Generative Pre-trained Transformer)</strong>: A powerful LLM trained on vast amounts of text data, enabling it to understand language patterns and context.</li>
<li><strong>Training Data</strong>: GPT-4 learns from books, articles, websites, and other written material, enabling it to answer questions and generate text based on its training.</li>
<li><strong>Lack of Sensory Experience</strong>: LLMs compensate for the lack of real-world sensory experiences by processing vast quantities of language data.</li>
</ul>
</section>
</section>
<section id="the-offer-from-openai-a-collaboration-to-explore-gpt-4" class="level3">
<h3 class="anchored" data-anchor-id="the-offer-from-openai-a-collaboration-to-explore-gpt-4">The Offer from OpenAI: A Collaboration to Explore GPT-4</h3>
<section id="initial-contact-and-skepticism" class="level4">
<h4 class="anchored" data-anchor-id="initial-contact-and-skepticism">Initial Contact and Skepticism</h4>
<ul>
<li><strong>Summer 2022</strong>: Khan receives an email from Greg Brockman (President) and Sam Altman (CEO) of OpenAI, proposing a collaboration.</li>
<li><strong>OpenAI’s Goal</strong>: Showcase socially positive and real-world applications of GPT-4 upon its release.</li>
<li><strong>Khan Academy’s Role</strong>: Partner with OpenAI to demonstrate the potential of GPT-4 in education and help evaluate its capabilities.</li>
<li><strong>Initial Skepticism</strong>: Khan expresses reservations about the immediate applicability of generative AI in education, citing concerns about knowledge accuracy, logical reasoning, and factual reliability.</li>
<li><strong>Respect for OpenAI’s Achievements</strong>: Despite skepticism, Khan acknowledges OpenAI’s accomplishments and agrees to a meeting.</li>
</ul>
</section>
<section id="the-gpt-4-demo-a-paradigm-shift" class="level4">
<h4 class="anchored" data-anchor-id="the-gpt-4-demo-a-paradigm-shift">The GPT-4 Demo: A Paradigm Shift</h4>
<ul>
<li><strong>GPT-4’s Capabilities</strong>: OpenAI demonstrates GPT-4’s ability to answer complex AP Biology questions accurately and provide detailed explanations.</li>
<li><strong>Initial Surprise and Skepticism</strong>: Khan expresses amazement but remains cautious, questioning the reliability of the AI’s performance.</li>
<li><strong>Further Demonstrations</strong>: GPT-4 explains why incorrect answer choices are wrong and generates original AP-level questions, solidifying its capabilities.</li>
<li><strong>Bill Gates’ Validation</strong>: Bill Gates shares his earlier challenge to OpenAI, stating he would be impressed if GPT-4 could pass the AP Biology exam, which it now demonstrated.</li>
</ul>
</section>
<section id="realization-of-gpt-4s-potential" class="level4">
<h4 class="anchored" data-anchor-id="realization-of-gpt-4s-potential">Realization of GPT-4’s Potential</h4>
<ul>
<li><strong>Excitement and Implications</strong>: Khan recognizes the transformative potential of GPT-4 across various domains, including education, credentials, work, and human potential.</li>
<li><strong>Shared Vision</strong>: OpenAI leadership expresses similar excitement and optimism about the potential impact of GPT-4 in education.</li>
<li><strong>Science Fiction Becomes Reality</strong>: The technology previously imagined in science fiction narratives becomes a tangible reality, opening up new possibilities and challenges.</li>
</ul>
</section>
</section>
<section id="time-for-a-hack-ai-thon-exploring-the-educational-applications-of-gpt-4" class="level3">
<h3 class="anchored" data-anchor-id="time-for-a-hack-ai-thon-exploring-the-educational-applications-of-gpt-4">Time for a Hack AI-thon: Exploring the Educational Applications of GPT-4</h3>
<section id="early-pioneers-in-language-modeling" class="level4">
<h4 class="anchored" data-anchor-id="early-pioneers-in-language-modeling">Early Pioneers in Language Modeling</h4>
<ul>
<li><strong>Claude Shannon (1940s)</strong>: Developed a theory of electronic communication and explored algorithmic language approximation.</li>
<li><strong>Shannon’s Information Theory</strong>: Proposed that probabilistic processes could approximate language by analyzing word frequencies and predicting the next word in a sequence.</li>
<li><strong>Alan Turing (1950s)</strong>: Explored the concept of artificial intelligence and introduced the <strong>Turing test</strong>, a benchmark for evaluating machine intelligence.</li>
<li><strong>The Turing Test</strong>: A test designed to determine if a machine can exhibit intelligent behavior indistinguishable from that of a human.</li>
</ul>
</section>
<section id="exploring-gpt-4s-capabilities" class="level4">
<h4 class="anchored" data-anchor-id="exploring-gpt-4s-capabilities">Exploring GPT-4’s Capabilities</h4>
<ul>
<li><strong>Passing the Turing Test</strong>: Khan contemplates whether GPT-4 could potentially pass the Turing Test, signifying a major milestone in AI development.</li>
<li><strong>Societal Implications</strong>: Recognizes the potential benefits and drawbacks of AI, including its impact on education, employment, and ethical concerns.</li>
<li><strong>Potential for Cheating</strong>: Acknowledges the risk of students using AI to write essays and complete assignments, hindering their learning and development.</li>
<li><strong>Job Displacement</strong>: Raises concerns about AI potentially replacing human jobs and impacting individuals’ sense of purpose.</li>
<li><strong>Misinformation and Manipulation</strong>: Recognizes the potential for bad actors to exploit AI for fraudulent activities or to spread misinformation.</li>
<li><strong>Data Privacy and Security</strong>: Highlights the importance of addressing data privacy and security concerns associated with AI technology.</li>
</ul>
</section>
<section id="the-khan-academy-hack-ai-thon" class="level4">
<h4 class="anchored" data-anchor-id="the-khan-academy-hack-ai-thon">The Khan Academy Hack AI-thon</h4>
<ul>
<li><strong>Goal</strong>: Explore the potential of GPT-4 in education through a collaborative “Hack AI-thon.”</li>
<li><strong>Participants</strong>: OpenAI grants access to a group of Khan Academy engineers, content creators, educators, and researchers.</li>
<li><strong>Brainstorming and Prototyping</strong>: Participants develop innovative ideas and educational applications for GPT-4.</li>
<li><strong>Potential Applications</strong>:
<ul>
<li>AI-assisted lesson planning.</li>
<li>AI-driven student debates.</li>
<li>AI-generated projects.</li>
<li>AI-based stress reduction and inspiration.</li>
<li>AI-powered quizzes and review sessions.</li>
<li>AI feedback on student essays.</li>
</ul></li>
</ul>
</section>
<section id="addressing-concerns-and-mitigating-risks" class="level4">
<h4 class="anchored" data-anchor-id="addressing-concerns-and-mitigating-risks">Addressing Concerns and Mitigating Risks</h4>
<ul>
<li><strong>Cheating Prevention</strong>: Explore ways to design AI tutors that guide students through questioning rather than providing direct answers.</li>
<li><strong>Transparency and Moderation</strong>: Consider implementing systems to log conversations and ensure transparency for teachers and parents.</li>
<li><strong>Promoting Human Connection</strong>: Develop tools that free up time for teachers and students to focus on interpersonal interactions.</li>
</ul>
</section>
<section id="optimism-and-potential-for-transformation" class="level4">
<h4 class="anchored" data-anchor-id="optimism-and-potential-for-transformation">Optimism and Potential for Transformation</h4>
<ul>
<li><strong>Confidence in GPT-4’s Impact</strong>: The Hack AI-thon reinforces the belief that GPT-4 can revolutionize education.</li>
<li><strong>Benefits for Teachers</strong>: AI can enhance teaching practices, provide personalized support, and potentially reduce teacher burnout.</li>
<li><strong>Benefits for Students</strong>: AI can act as a personalized tutor, debating partner, guidance counselor, and career coach, leading to improved learning outcomes.</li>
<li><strong>Global Impact</strong>: AI has the potential to accelerate learning globally and increase access to quality education for everyone.</li>
<li><strong>Historical Parallels</strong>: Compares the transformative potential of AI to previous technological advancements like the internet and personal computers.</li>
</ul>
</section>
<section id="embracing-educated-bravery" class="level4">
<h4 class="anchored" data-anchor-id="embracing-educated-bravery">Embracing Educated Bravery</h4>
<ul>
<li><strong>Acknowledging Risks</strong>: Recognizes the need to carefully consider and address the potential downsides of AI.</li>
<li><strong>Mitigating Risks</strong>: Emphasizes the importance of proactive measures to minimize risks and maximize positive impacts.</li>
<li><strong>Preparing for Change</strong>: Underscores the need to adapt to the rapid advancements in AI and its implications for education and society.</li>
</ul>
</section>
</section>
<section id="engaging-the-principle-of-educated-bravery-navigating-the-ai-revolution" class="level3">
<h3 class="anchored" data-anchor-id="engaging-the-principle-of-educated-bravery-navigating-the-ai-revolution">Engaging the Principle of Educated Bravery: Navigating the AI Revolution</h3>
<section id="chatgpts-public-release-and-initial-reactions" class="level4">
<h4 class="anchored" data-anchor-id="chatgpts-public-release-and-initial-reactions">ChatGPT’s Public Release and Initial Reactions</h4>
<ul>
<li><strong>November 2022</strong>: OpenAI releases ChatGPT, a chat interface built on GPT-3.5, capturing widespread attention.</li>
<li><strong>Excitement and Concerns</strong>: ChatGPT’s launch sparks both enthusiasm and apprehension about its potential impact on education.</li>
<li><strong>Concerns about Cheating</strong>: Educators and institutions express concerns about students using ChatGPT to cheat on assignments.</li>
<li><strong>Factual Errors and Bias</strong>: Questions arise regarding the accuracy and potential biases inherent in ChatGPT’s responses.</li>
<li><strong>Data Source Transparency</strong>: Concerns are raised about the transparency of the data sources used to train ChatGPT.</li>
</ul>
</section>
<section id="khan-academys-response-demonstrating-ais-positive-potential" class="level4">
<h4 class="anchored" data-anchor-id="khan-academys-response-demonstrating-ais-positive-potential">Khan Academy’s Response: Demonstrating AI’s Positive Potential</h4>
<ul>
<li><strong>Sense of Urgency</strong>: Khan Academy recognizes the need to address concerns and showcase the positive applications of AI in education.</li>
<li><strong>Development of Khanmigo</strong>: Khan Academy and OpenAI collaborate to build Khanmigo, an AI-infused education platform.</li>
<li><strong>Addressing Cheating</strong>: Explore the concept of AI writing <em>with</em> students rather than <em>for</em> them, promoting learning and creativity.</li>
</ul>
</section>
<section id="the-collaborative-storytelling-experiment-dia-and-samantha" class="level4">
<h4 class="anchored" data-anchor-id="the-collaborative-storytelling-experiment-dia-and-samantha">The Collaborative Storytelling Experiment: Dia and Samantha</h4>
<ul>
<li><strong>Testing GPT-4’s Capabilities</strong>: Khan engages his daughter, Dia, in a collaborative storytelling exercise using GPT-4.</li>
<li><strong>AI as a Writing Partner</strong>: GPT-4 takes on the persona of Samantha, a character in Dia’s story, and actively participates in the writing process.</li>
<li><strong>Positive Observations</strong>: GPT-4 demonstrates its ability to engage in meaningful dialogue, understand context, and maintain consistency within the story world.</li>
<li><strong>Benefits for Learning and Creativity</strong>: The interaction showcases AI’s potential to enhance writing skills and foster creativity in students.</li>
<li><strong>Transformative Potential</strong>: Khan recognizes the profound impact AI can have on the way we learn and teach.</li>
</ul>
</section>
<section id="a-new-story-for-education-embracing-the-future" class="level4">
<h4 class="anchored" data-anchor-id="a-new-story-for-education-embracing-the-future">A New Story for Education: Embracing the Future</h4>
<ul>
<li><strong>Call for Educated Bravery</strong>: Advocates for a balanced approach to AI, acknowledging its risks while embracing its potential for positive change.</li>
<li><strong>Rethinking Education</strong>: Emphasizes the need to reimagine various aspects of education, including the role of teachers, the use of multimedia, credentialing, and workforce preparation.</li>
<li><strong>A Turning Point</strong>: Highlights the transformative nature of AI and its implications for learning, work, and human purpose.</li>
<li><strong>Conclusion</strong>: The future of education is being shaped by AI, and embracing this technology with educated bravery is crucial for unlocking its full potential and navigating the challenges it presents.</li>
</ul>
</section>
</section>
</section>
<section id="part-i-rise-of-the-ai-tutor" class="level2">
<h2 class="anchored" data-anchor-id="part-i-rise-of-the-ai-tutor">Part I꞉ Rise of the AI Tutor</h2>
<blockquote class="blockquote">
<p>“A great teacher can teach calculus with a paperclip and literature in an empty field. Technology is just another tool, not a destination.” - Unknown</p>
<p>“In your primer, you have a resource that will make you highly educated, but it will never make you intelligent. That comes from life. Your life up to this point has given you all the experience you need to be intelligent. But you have to think about those experiences. If you don’t think about them, you’ll be psychologically unwell. If you do think about them, you will become not merely educated, but intelligent.” - Neil Stevenson, The Diamond Age</p>
</blockquote>
<section id="chapter-1-throwing-away-the-bottle" class="level3">
<h3 class="anchored" data-anchor-id="chapter-1-throwing-away-the-bottle">Chapter 1: Throwing Away the Bottle</h3>
<section id="the-initial-backlash-against-chatgpt-in-education" class="level4">
<h4 class="anchored" data-anchor-id="the-initial-backlash-against-chatgpt-in-education">The Initial Backlash Against ChatGPT in Education</h4>
<ul>
<li><p><strong>Rapid Spread and Bans</strong>:</p>
<ul>
<li>ChatGPT’s rapid global adoption was met with widespread bans and resistance, particularly in educational settings.</li>
<li><strong>Los Angeles Unified School District</strong> was the first major school system to ban it in early 2023.</li>
<li>Other districts followed suit, including Seattle, New York City, Fairfax County (Virginia), and Montgomery County (Alabama).</li>
<li>Bans extended internationally to France, India, and Australia.</li>
</ul></li>
<li><p><strong>Reasons for Bans</strong>:</p>
<ul>
<li><strong>Cheating Concerns</strong>: Schools feared students using ChatGPT to cheat on assignments and exams.</li>
<li><strong>Lack of Critical Thinking Development</strong>: Concerns that the tool hindered the development of critical thinking and problem-solving skills.</li>
</ul></li>
<li><p><strong>Comparison to COVID</strong>: Some likened the spread of ChatGPT to the COVID pandemic, predicting the “death of education.”</p>
<ul>
<li><p>Inside Higher Ed opinion piece:</p>
<blockquote class="blockquote">
<p>“Today, we are facing a new sort of plague, one that threatens our minds more than our bodies. ChatGPT, the artificial intelligence chatbot that can write college-level essays, is going viral… To their shock and dismay, teachers will find that their classroom has tested positive for GPT.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Author’s Perspective as Father and Educator</strong>:</p>
<ul>
<li>Initial understanding and agreement with the distrust surrounding ChatGPT.</li>
<li>Concerns about the potential negative impact on student agency, creativity, socialization, and collaborative learning.</li>
</ul></li>
</ul>
</section>
<section id="acknowledging-the-inevitability-and-potential-of-ai-in-education" class="level4">
<h4 class="anchored" data-anchor-id="acknowledging-the-inevitability-and-potential-of-ai-in-education">Acknowledging the Inevitability and Potential of AI in Education</h4>
<ul>
<li><strong>Inevitable Exposure</strong>: Acknowledges that student exposure to generative AI is inevitable.</li>
<li><strong>Concerns about AI’s Impact</strong>:
<ul>
<li>Increased screen time.</li>
<li>Students not doing their own work.</li>
<li>Negative effects on student writing skills.</li>
<li>Potential for biased information due to ChatGPT pulling from biased online sources.</li>
</ul></li>
<li><strong>Technology as a Tool</strong>:
<ul>
<li>Argues that technology, including AI, is not inherently good or bad, but its impact depends on how it is used.</li>
<li>Technology can have both negative and positive consequences:
<ul>
<li><strong>Negative</strong>: Unhealthy habits, distraction, exposure to harmful content.</li>
<li><strong>Positive</strong>: Maintaining social connections, fostering creativity (e.g., video editing, writing, coding), learning and self-improvement.</li>
</ul></li>
</ul></li>
<li><strong>AI’s Potential in Various Fields</strong>:
<ul>
<li><strong>Medicine</strong>: Assisting in diagnosis, medical record analysis, personalized treatment.</li>
<li><strong>Business</strong>: Streamlining content generation and automating workflows.</li>
<li><strong>Legal and Compliance</strong>: Contract analysis, legal research, document generation, ensuring regulatory compliance.</li>
<li><strong>Other Applications</strong>: Developing technical documentation, writing user manuals, creating grant proposals, coding.</li>
</ul></li>
<li><strong>The “AI Replacement” Meme</strong>:
<ul>
<li>“You won’t be replaced by an AI, but you might be replaced by someone using AI.”</li>
<li>Highlights the importance of learning to use AI effectively for success.</li>
</ul></li>
</ul>
</section>
<section id="benefits-of-ai-for-students-and-the-workforce" class="level4">
<h4 class="anchored" data-anchor-id="benefits-of-ai-for-students-and-the-workforce">Benefits of AI for Students and the Workforce</h4>
<ul>
<li><strong>Enhanced Learning and Competitiveness</strong>:
<ul>
<li>Students who use AI ethically and productively can learn faster and remain competitive in their careers.</li>
<li>AI can help students make conceptual connections and develop ideas.</li>
</ul></li>
<li><strong>Deeper Understanding and Curiosity</strong>:
<ul>
<li>AI can help students get their questions answered, leading to a deeper understanding of subjects.</li>
<li>AI can strengthen, rather than atrophy, students’ curiosity.</li>
</ul></li>
<li><strong>Workplace Applications</strong>:
<ul>
<li><strong>Effective AI Users</strong>: Those who can steer AI and understand quality writing will get the best output.</li>
<li><strong>Curious Individuals</strong>: Those who feed their curiosity with AI will be better at anticipating market trends.</li>
<li><strong>Creative Collaboration</strong>: Brainstorming with AI and colleagues can enhance creativity.</li>
<li><strong>Automation</strong>: Workers will need to use AI to automate traditional white-collar tasks, like information collation and spreadsheet analysis.</li>
</ul></li>
</ul>
</section>
<section id="addressing-the-challenges-and-ensuring-safety" class="level4">
<h4 class="anchored" data-anchor-id="addressing-the-challenges-and-ensuring-safety">Addressing the Challenges and Ensuring Safety</h4>
<ul>
<li><strong>OpenAI’s Focus on Safety</strong>:
<ul>
<li><strong>Greg Brockman (OpenAI President)</strong>: The challenge lies in implementing safety measures.</li>
<li>Safety has been a priority since GPT-1’s development.</li>
<li>OpenAI aims to ensure AI is beneficial and safe.</li>
</ul></li>
<li><strong>Safety Measures</strong>:
<ul>
<li>Preventing AI from sharing knowledge about illegal activities.</li>
<li>Blocking disallowed content.</li>
<li>Protecting personal data.</li>
</ul></li>
<li><strong>Importance of Safeguards in Education</strong>:
<ul>
<li>Guardrails are crucial for integrating AI into education.</li>
<li>The effort is labor-intensive but worthwhile.</li>
</ul></li>
<li><strong>Embracing AI, Not Fearing It</strong>:
<ul>
<li>Brockman encourages using AI rather than avoiding it.</li>
<li>AI can benefit students by:
<ul>
<li>Providing new learning methods.</li>
<li>Enhancing collaborative learning.</li>
<li>Stoking creativity.</li>
<li>Promoting socialization.</li>
<li>Supporting mental health.</li>
<li>Offering new ways for parents and teachers to engage with education.</li>
</ul></li>
</ul></li>
<li><strong>Learning Smarter with AI</strong>: Brockman advocates for helping students learn smarter with AI.</li>
<li><strong>Conclusion</strong>: “The genie is out of the bottle. It is time to throw the bottle away and our fear of generative AI along with it.”</li>
</ul>
</section>
</section>
<section id="chapter-2-how-to-teach-everything-to-everyone" class="level3">
<h3 class="anchored" data-anchor-id="chapter-2-how-to-teach-everything-to-everyone">Chapter 2: How to Teach Everything to Everyone</h3>
<section id="identifying-problems-ai-can-solve-in-education" class="level4">
<h4 class="anchored" data-anchor-id="identifying-problems-ai-can-solve-in-education">Identifying Problems AI Can Solve in Education</h4>
<ul>
<li><strong>Focus on Solving Problems</strong>: Emphasizes using AI to address important problems in education, not just because it’s new and exciting.</li>
<li><strong>Potential Applications of AI</strong>:
<ul>
<li>Closing learning gaps.</li>
<li>Providing access to quality education regardless of location, economic status, or social circumstances.</li>
<li>Meeting diverse student needs and learning styles.</li>
<li>Addressing the shortage of high-quality educational resources, especially in underserved or remote areas.</li>
<li>Improving student retention of learned material.</li>
<li>Reducing teacher workload and preventing burnout.</li>
</ul></li>
</ul>
</section>
<section id="vision-of-an-ai-powered-personal-tutor" class="level4">
<h4 class="anchored" data-anchor-id="vision-of-an-ai-powered-personal-tutor">Vision of an AI-Powered Personal Tutor</h4>
<ul>
<li><strong>The Ideal AI Tutor</strong>: Envisions an AI tutor that:
<ul>
<li>Works alongside learners across all subjects.</li>
<li>Provides personalized support.</li>
<li>Engages in debates with students.</li>
<li>Identifies and strengthens students’ inherent strengths while addressing learning gaps.</li>
<li>Offers new ways of understanding STEM subjects.</li>
<li>Unlocks student creativity in the arts.</li>
<li>Facilitates deeper engagement with history and literature.</li>
</ul></li>
<li><strong>Khan Academy’s Integration of GPT-4</strong>:
<ul>
<li>Khan Academy became an early adopter of GPT-4, aiming to be the first education platform to incorporate it.</li>
<li>Prioritized creating a magical, effective, and safe user experience.</li>
</ul></li>
</ul>
</section>
<section id="understanding-gpt-4s-capabilities-and-limitations" class="level4">
<h4 class="anchored" data-anchor-id="understanding-gpt-4s-capabilities-and-limitations">Understanding GPT-4’s Capabilities and Limitations</h4>
<ul>
<li><strong>Strengths of GPT-4</strong>:
<ul>
<li><strong>Answering Questions</strong>: Excellent at answering questions, with fewer factual and math errors compared to GPT-3.5.</li>
</ul></li>
<li><strong>Limitations and Development</strong>:
<ul>
<li><strong>Beyond Answering Questions</strong>: Required inverting the interaction to make it ask questions like a tutor (Socratic method).</li>
<li><strong>Steerability</strong>: GPT-4 showed significant improvement in steerability compared to earlier models, allowing for better control over its behavior and persona (e.g., acting as a Socratic tutor).</li>
</ul></li>
<li><strong>Prompt Engineering</strong>:
<ul>
<li>Extensive prompt tweaking to handle various student interactions and prevent inappropriate conversations.</li>
<li>Development of a distinct tone and voice for the platform.</li>
</ul></li>
<li><strong>Launch of Khanmigo</strong>:
<ul>
<li>Launched on March 15, 2023, alongside GPT-4.</li>
<li><strong>Khanmigo</strong>: Name is a play on the Spanish phrase “conmigo,” meaning “with me.”</li>
<li>Introduced as an AI assistant integrated into all aspects of Khan Academy.</li>
</ul></li>
</ul>
</section>
<section id="features-and-potential-of-khanmigo" class="level4">
<h4 class="anchored" data-anchor-id="features-and-potential-of-khanmigo">Features and Potential of Khanmigo</h4>
<ul>
<li><strong>Personalized Tutoring</strong>: Provides a personalized and patient tutor that adapts to learner needs and interests.</li>
<li><strong>Empowering Educators</strong>: Helps educators better understand and support their students.</li>
<li><strong>Beyond Tutoring</strong>:
<ul>
<li>Emulating literary and historical figures.</li>
<li>Engaging in debates.</li>
<li>Acting as a guidance counselor and career coach.</li>
</ul></li>
<li><strong>Long-Lasting Connections</strong>:
<ul>
<li>Potential for memory-based long-lasting connections with learners, providing academic and personal support, goal setting, and accountability.</li>
</ul></li>
<li><strong>Facilitating Student Interactions</strong>: Potential for facilitating interactions among multiple students.</li>
<li><strong>AI-Driven Simulations</strong>: Future potential for AI-based practice and assessments using simulations.</li>
<li><strong>Enhancing Learning Domains</strong>: Potential to enhance learning across various domains: writing, reading comprehension, math, science, coding, and art.</li>
</ul>
</section>
</section>
<section id="chapter-3-rise-of-the-ai-tutor" class="level3">
<h3 class="anchored" data-anchor-id="chapter-3-rise-of-the-ai-tutor">Chapter 3: Rise of the AI Tutor</h3>
<section id="the-effectiveness-of-one-on-one-instruction" class="level4">
<h4 class="anchored" data-anchor-id="the-effectiveness-of-one-on-one-instruction">The Effectiveness of One-on-One Instruction</h4>
<ul>
<li><strong>Historical Importance of Tutoring</strong>: Highlights the long-standing recognition of one-on-one tutoring as the most effective learning method.
<ul>
<li>Example: Alexander the Great and Aristotle.</li>
</ul></li>
<li><strong>Benefits of Personalized Tutoring</strong>:
<ul>
<li>Allows for adjusting the pace of instruction based on individual student needs.</li>
<li>Prevents students from feeling stuck or bored.</li>
</ul></li>
<li><strong>Modern Examples</strong>: One-on-one coaching remains prevalent in fields like athletics and music.</li>
<li><strong>Challenges of Scaling Tutoring</strong>: Difficult to implement one-on-one tutoring in a mass public education system due to resource limitations.</li>
</ul>
</section>
<section id="the-limitations-of-the-traditional-education-model" class="level4">
<h4 class="anchored" data-anchor-id="the-limitations-of-the-traditional-education-model">The Limitations of the Traditional Education Model</h4>
<ul>
<li><strong>The Rise of Mass Public Education</strong>:
<ul>
<li>18th century: Emergence of the idea of mass public education.</li>
<li><strong>Standardized Approach</strong>: Led to a “factory model” of education with lectures and periodic assessments for large groups of students.</li>
</ul></li>
<li><strong>Benefits and Drawbacks of the Traditional Model</strong>:
<ul>
<li><strong>Benefits</strong>: Increased literacy and education rates globally.</li>
<li><strong>Drawbacks</strong>: Not optimal for most students due to its fixed pace and lack of personalization.</li>
</ul></li>
<li><strong>The Problem of Accumulating Knowledge Gaps</strong>:
<ul>
<li><strong>Fixed-Pace Learning</strong>: Forces students to move on even without mastering foundational concepts.</li>
<li><strong>Consequences</strong>: Leads to accumulated knowledge gaps that hinder future learning.</li>
<li><strong>Examples</strong>:
<ul>
<li>Majority of US students, including college-bound graduates, do not place into college-level math.</li>
<li>Many students require remedial pre-algebra courses in college.</li>
<li>Three-quarters of high school seniors lack basic writing proficiency.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="blooms-two-sigma-problem" class="level4">
<h4 class="anchored" data-anchor-id="blooms-two-sigma-problem">Bloom’s Two-Sigma Problem</h4>
<ul>
<li><strong>Benjamin Bloom’s Research (1984)</strong>:
<ul>
<li><strong>University of Chicago study</strong>: Compared conventional learning with one-on-one tutoring in a mastery learning context.</li>
<li><strong>Definition of a Good Tutor</strong>: A caring and student-attuned instructor who provides clear learning objectives, assessments, and specialized feedback until mastery is achieved.</li>
<li><strong>Mastery Learning</strong>: Provides students with the opportunity and incentive to address knowledge and skill gaps.</li>
</ul></li>
<li><strong>Conventional Learning vs.&nbsp;Mastery Learning</strong>:
<ul>
<li><strong>Conventional Learning</strong>: Fixed-paced with periodic quizzes/tests; classes move on regardless of individual mastery.</li>
<li><strong>Mastery Learning</strong>: Allows students time to identify and address knowledge gaps before moving on.</li>
</ul></li>
<li><strong>The Two-Sigma Problem</strong>:
<ul>
<li>Students working with tutors in a mastery learning context showed a <strong>two-standard deviation improvement</strong>.</li>
<li>This translates to moving from the 50th percentile to roughly the 96th percentile.</li>
<li><strong>Problem</strong>: Traditional education systems could not realistically scale this level of personalized instruction.</li>
</ul></li>
</ul>
</section>
<section id="addressing-the-two-sigma-problem-with-technology" class="level4">
<h4 class="anchored" data-anchor-id="addressing-the-two-sigma-problem-with-technology">Addressing the Two-Sigma Problem with Technology</h4>
<ul>
<li><strong>Traditional Solutions for Personalization</strong>: Middle-class and affluent families often resort to private tutoring.</li>
<li><strong>Khan Academy’s Aspiration</strong>: To provide equal access to personalized learning regardless of socioeconomic status.</li>
<li><strong>Vision of an Ideal Tutor</strong>:
<ul>
<li>Goes beyond homework help and provides deeper support.</li>
<li>Builds trust and a relationship with the student.</li>
<li>Has an intimate understanding of the student’s strengths and weaknesses.</li>
<li>Fine-tunes education based on student motivation.</li>
<li>Supports teachers and parents with insights into student progress.</li>
</ul></li>
<li><strong>Khan Academy’s Pre-AI Approach</strong>:
<ul>
<li>Offered personalized learning tools like on-demand videos and exercises.</li>
<li>Provided teacher and administrator dashboards for tracking student progress.</li>
<li><strong>Efficacy Studies</strong>: Showed 20-60% acceleration in learning for students using Khan Academy’s personalized practice.</li>
<li><strong>Khan Lab School and Khan World School</strong>: Demonstrated 1.5-3 years of math learning per year in mastery-based learning settings.</li>
</ul></li>
</ul>
</section>
<section id="limitations-of-pre-ai-khan-academy-and-the-potential-of-gpt-4" class="level4">
<h4 class="anchored" data-anchor-id="limitations-of-pre-ai-khan-academy-and-the-potential-of-gpt-4">Limitations of Pre-AI Khan Academy and the Potential of GPT-4</h4>
<ul>
<li><strong>Limitations of Pre-AI Platform</strong>:
<ul>
<li>Limited options for students beyond videos and exercises.</li>
<li>No ability to ask follow-up questions or engage in deeper exploration.</li>
<li>Limited assessment formats (numeric entry, equation entry, multiple choice).</li>
<li>Basic goal setting and tracking features lacked the feel of a caring tutor.</li>
</ul></li>
<li><strong>GPT-4’s Potential</strong>:
<ul>
<li>Recognized as a potential solution to address these limitations.</li>
<li>Team-wide excitement about GPT-4’s capabilities.</li>
</ul></li>
<li><strong>Need for Guardrails and Support</strong>: GPT-4’s power needed to be coupled with carefully designed safeguards for effective use in education.</li>
<li><strong>OpenAI’s Partnership with Khan Academy</strong>: OpenAI chose Khan Academy as a partner due to their focus on educational applications and commitment to responsible AI implementation.</li>
<li><strong>Greg Brockman’s Vision</strong>: Believes large language models like GPT-4 can be the biggest benefit to education in history.</li>
<li><strong>Building an AI Super Tutor</strong>:
<ul>
<li>Aiming to create an AI system capable of providing every learner with a personal “super tutor.”</li>
<li>Potential to achieve the two-standard deviation improvement described by Bloom.</li>
</ul></li>
</ul>
</section>
<section id="launching-khanmigo-and-overcoming-initial-skepticism" class="level4">
<h4 class="anchored" data-anchor-id="launching-khanmigo-and-overcoming-initial-skepticism">Launching Khanmigo and Overcoming Initial Skepticism</h4>
<ul>
<li><strong>Seizing the Opportunity</strong>: Recognizing the potential of AI to revolutionize education.</li>
<li><strong>Khanmigo’s Goal</strong>: To address Bloom’s two-sigma problem and make personalized learning accessible to everyone.</li>
<li><strong>Addressing Initial Concerns about Cheating</strong>:
<ul>
<li>ChatGPT’s initial negative reception in education due to cheating concerns.</li>
<li>Khanmigo was designed with features to prevent cheating, provide teacher transparency, and ensure safe and productive student interactions.</li>
</ul></li>
<li><strong>Shifting Attitudes Towards AI in Education</strong>:
<ul>
<li>By March 2023, educators began to recognize the potential of GPT-like technology for learning.</li>
<li>Teachers started using AI for lesson planning and research.</li>
<li>Demand for education-focused AI tools increased.</li>
</ul></li>
<li><strong>Positive Reception of Khanmigo</strong>:
<ul>
<li>Overwhelming support from the education community, including school districts that had banned ChatGPT.</li>
<li>Appreciation for Khan Academy’s safe, effective, and pedagogically sound implementation of GPT-4.</li>
</ul></li>
</ul>
</section>
<section id="how-khanmigo-works" class="level4">
<h4 class="anchored" data-anchor-id="how-khanmigo-works">How Khanmigo Works</h4>
<ul>
<li><strong>Interactive Tutoring</strong>:
<ul>
<li>Students can ask for help through a chat interface.</li>
<li>Instead of providing direct answers, Khanmigo guides students through problems like a human tutor.</li>
<li><strong>Example</strong>:
<ul>
<li>Student: “I’m having trouble with polynomials. Can you help explain how to find the degree of this polynomial and the leading coefficient in this question? <img src="https://latex.codecogs.com/png.latex?3x%5E%7B2%7D-5x+2">.”</li>
<li>Khanmigo: “No problem. Let’s break it down. The degree of a polynomial is the highest power of the variable, in this case x, in the polynomial. The leading coefficient is the number in front of the term with the highest degree. Looking at our polynomial, can you identify the term with the highest power of x and the number in front of it?”</li>
</ul></li>
</ul></li>
<li><strong>Personalized Feedback</strong>: Provides specific feedback and encouragement.
<ul>
<li>Example: “Close, but not quite. Remember, we’re looking for the highest power of x in the polynomial. Let’s try again together.”</li>
</ul></li>
<li><strong>Cross-Curricular Applications</strong>: Works across various subjects, including history, chemistry, physics, and art.</li>
<li><strong>Beyond Subject Matter</strong>:
<ul>
<li>Motivates learners.</li>
<li>Quizzes them.</li>
<li>Summarizes videos.</li>
<li>Adapts to individual needs.</li>
</ul></li>
</ul>
</section>
<section id="khanmigos-conversational-abilities-and-memory" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-conversational-abilities-and-memory">Khanmigo’s Conversational Abilities and Memory</h4>
<ul>
<li><strong>Natural and Personable Language</strong>: Uses a conversational and encouraging tone.
<ul>
<li>Example: “Hey, you’re doing this pretty well. Don’t worry if you have trouble doing it at first. It is a little bit more advanced. Why don’t we try this new approach?”</li>
</ul></li>
<li><strong>Memory of Previous Interactions</strong>: Remembers past conversations and can reference them in later sessions.
<ul>
<li><strong>Example</strong>:
<ul>
<li>Student (previously expressed interest in soccer): “Why should I care about this?” (referring to algebra equations)</li>
<li>Khanmigo: “Well, what do you care about?”</li>
<li>Student: “Not math. I’d much rather be talking about soccer.”</li>
<li>Khanmigo: “Okay. So let’s say you are a soccer coach and you want to model the number of goals your team scores based on the number of hours they practice each week. You come up with the following polynomial, <img src="https://latex.codecogs.com/png.latex?3x%5E%7B2%7D-5x+2">. Can you identify the degree of this polynomial and the leading coefficient?”</li>
</ul></li>
</ul></li>
<li><strong>Personalized Examples</strong>: Uses student interests to create relevant examples in different subjects.
<ul>
<li><strong>Example</strong>:
<ul>
<li>(Days later, during a history lesson on federalism)</li>
<li>Khanmigo: “Imagine a soccer league. Let’s think about the different ways to govern it. Does the team govern itself any way it wants to, by doing its own thing? Or does a central authority govern the team? Federalism is a system of government where power is divided between a central authority and smaller political units, like states or provinces.”</li>
</ul></li>
</ul></li>
<li><strong>Adapting to User Preferences</strong>:
<ul>
<li>Registers preferences for formal or colloquial language.</li>
<li>Adjusts to preferences for short or long-form answers.</li>
<li>Uses student motivations to maintain engagement.</li>
</ul></li>
<li><strong>Transparent Memory and User Control</strong>:
<ul>
<li>Students can view and modify what Khanmigo learns about them.</li>
<li>Memory can provide progress reports to parents and teachers.</li>
</ul></li>
</ul>
</section>
<section id="khanmigos-mimicry-of-human-tutoring-techniques" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-mimicry-of-human-tutoring-techniques">Khanmigo’s Mimicry of Human Tutoring Techniques</h4>
<ul>
<li><strong>Replicating Effective Tutoring Strategies</strong>: Khanmigo replicates many techniques used by human tutors, including:
<ul>
<li>Helping students understand questions.</li>
<li>Asking follow-up questions.</li>
<li>Testing comprehension.</li>
<li>Explaining connections between concepts.</li>
<li>Highlighting areas for improvement and suggesting exercises.</li>
</ul></li>
<li><strong>Personalized Learning for All</strong>: Khanmigo makes this type of personalized tutoring accessible to all students.</li>
<li><strong>Socratic Questioning</strong>: Promotes critical thinking by engaging students in Socratic questioning.</li>
<li><strong>Handling Sensitive Topics</strong>: Khanmigo can handle sensitive topics in a more neutral and unbiased way than human tutors might.
<ul>
<li><strong>Example</strong>:
<ul>
<li>(Reporter skeptical about Khanmigo’s handling of gun control)</li>
<li>Student (role-playing): “Why do we have the Second Amendment? It seems crazy.”</li>
<li>Khanmigo: “Why do you think the founders included the Second Amendment to begin with?”</li>
<li>(Khanmigo encourages deeper thinking without directly refuting or reinforcing the student’s opinion).</li>
</ul></li>
</ul></li>
<li><strong>Encouraging Critical Thinking</strong>: Promotes active learning and deeper exploration of topics.
<ul>
<li>Example: “What is your opinion of this essay?” (after a reading assignment)</li>
</ul></li>
</ul>
</section>
<section id="khanmigo-as-a-representative-of-ai-tutors" class="level4">
<h4 class="anchored" data-anchor-id="khanmigo-as-a-representative-of-ai-tutors">Khanmigo as a Representative of AI Tutors</h4>
<ul>
<li><strong>Expanding Field of AI Tutors</strong>: Khanmigo serves as an example of the growing field of education-based AI platforms.</li>
<li><strong>Complementing Human Tutors</strong>:
<ul>
<li>AI tutors can enhance the effectiveness of human tutors by providing 24/7 support and detailed progress reports.</li>
<li>Students may feel more comfortable asking certain questions to an AI.</li>
</ul></li>
<li><strong>The Potential of AI Tutors</strong>:
<ul>
<li>With memory, content knowledge, a natural voice, the ability to build rapport, and increased access through technology, AI tutors may surpass the results of Bloom’s findings.</li>
</ul></li>
<li><strong>Conclusion</strong>:
<ul>
<li>AI tutors can raise the floor for students with limited access to personalized learning or quality coursework.</li>
<li>AI tutors can make human tutors’ jobs easier and more effective by providing complementary support.</li>
<li>AI tutors have the potential to significantly improve the learning experience for millions of learners.</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="part-ii-giving-voice-to-the-social-sciences" class="level2">
<h2 class="anchored" data-anchor-id="part-ii-giving-voice-to-the-social-sciences">Part II: Giving Voice to the Social Sciences</h2>
<blockquote class="blockquote">
<p>“Art is a collaboration between God and the artist, and the less the artist does, the better.” - André Gide</p>
<p>“A single conversation across the table with a wise man is better than ten years’ mere study of books.” - Henry Wadsworth Longfellow</p>
</blockquote>
<section id="chapter-4-why-students-write" class="level3">
<h3 class="anchored" data-anchor-id="chapter-4-why-students-write">Chapter 4: Why Students Write</h3>
<section id="the-chatgpt-horror-story" class="level4">
<h4 class="anchored" data-anchor-id="the-chatgpt-horror-story">The ChatGPT Horror Story</h4>
<ul>
<li><strong>Darren Hick</strong>, a Furman University professor, discovered a student paper potentially written by <strong>ChatGPT</strong>.</li>
<li>The paper was “too clean,” lacking typical plagiarism indicators but containing confidently stated incorrect information.</li>
<li>Hick confirmed his suspicion by reverse-engineering the paper using ChatGPT and recognizing the AI’s tendency to “hallucinate” (present false information as fact).</li>
<li>This incident highlighted the <strong>existential threat of AI to education</strong>, particularly student integrity and the learning process.</li>
<li>Hick’s public warning about ChatGPT’s essay-writing capabilities went viral, drawing media attention and making him a prominent figure in the early discussion of AI in education.</li>
<li>Despite the initial alarm, Hick continued to catch students using ChatGPT, suggesting its widespread adoption.</li>
<li>This led Hick to rethink his approach, shifting from policing AI use to exploring its potential for enhancing learning.</li>
</ul>
</section>
<section id="revisiting-the-purpose-of-writing-assignments" class="level4">
<h4 class="anchored" data-anchor-id="revisiting-the-purpose-of-writing-assignments">Revisiting the Purpose of Writing Assignments</h4>
<ul>
<li><strong>Writing</strong>: a form of communication requiring structured thinking, language fluency, grammar, and knowledge of the subject matter.</li>
<li>Different writing types (editorial, research, news, fiction) demand specific skills and approaches.</li>
<li><strong>Traditional take-home assignments</strong> may not be the most effective in the age of ChatGPT due to the high temptation to cheat.</li>
<li><strong>Alternative approaches</strong>:
<ul>
<li><strong>In-class, proctored essays</strong>: offer more teacher support and direct observation of the writing process.</li>
<li><strong>Multi-session assignments</strong>: allow for longer, complex tasks while maintaining teacher oversight.</li>
</ul></li>
<li><strong>Reframing AI Use</strong>:
<ul>
<li>For research or investigative assignments, ChatGPT can be a valuable tool for tasks like literature review or data analysis (but not for primary research like experiments or interviews).</li>
<li>This approach aligns with real-world practices where AI tools are increasingly integrated into professional workflows.</li>
</ul></li>
</ul>
</section>
<section id="redefining-cheating-in-the-age-of-ai" class="level4">
<h4 class="anchored" data-anchor-id="redefining-cheating-in-the-age-of-ai">Redefining Cheating in the Age of AI</h4>
<ul>
<li><strong>Traditional cheating</strong>:
<ul>
<li>Paying someone to write a paper.</li>
<li>Plagiarism (copying from the internet or other sources).</li>
<li>Submitting someone else’s work.</li>
</ul></li>
<li><strong>Gray areas</strong>:
<ul>
<li>Bouncing ideas off friends or family.</li>
<li>Receiving feedback on drafts.</li>
<li>Getting help with thesis statements or supporting evidence.</li>
</ul></li>
<li><strong>Evolving tools and the blurring line</strong>:
<ul>
<li>Spell checkers and grammar checkers are now commonplace.</li>
<li>Advanced tools like Grammarly, which rephrase paragraphs, are widely accepted.</li>
</ul></li>
<li><strong>AI-related ethical dilemmas</strong>:
<ul>
<li>Seeking advice from AI without using its output.</li>
<li>Using AI to improve specific sections of a paper.</li>
<li>Using AI-generated drafts as a starting point for extensive revision.</li>
</ul></li>
</ul>
</section>
<section id="embracing-ai-as-a-creative-partner" class="level4">
<h4 class="anchored" data-anchor-id="embracing-ai-as-a-creative-partner">Embracing AI as a Creative Partner</h4>
<ul>
<li><strong>Alexander Gil Fuentes</strong>, a Yale Humanities Professor, sees generative AI as a valuable tool for promoting originality in the humanities.</li>
<li><strong>AI’s strengths and weaknesses</strong>:
<ul>
<li><strong>Weakness</strong>: lacks true originality.</li>
<li><strong>Strength</strong>: provides a starting point (“from zero”) for students to build upon.</li>
</ul></li>
<li><strong>Ethan Malik</strong>, a Wharton School professor, advocates for embracing AI in writing instruction.</li>
<li><strong>Benefits of AI integration</strong>:
<ul>
<li>Helps students improve writing skills.</li>
<li>Provides feedback on skill level.</li>
<li>Allows teachers to identify students needing extra support.</li>
<li>Raises the overall quality of student writing.</li>
</ul></li>
</ul>
</section>
<section id="rethinking-essay-writing-with-ai" class="level4">
<h4 class="anchored" data-anchor-id="rethinking-essay-writing-with-ai">Rethinking Essay Writing with AI</h4>
<ul>
<li><strong>Shifting the focus from cheating to writing</strong>:
<ul>
<li>The debate over whether using AI is cheating misses the broader pedagogical implications.</li>
<li>Professors can define their own cheating standards, but the focus should be on the quality and process of writing.</li>
</ul></li>
<li><strong>Ethan Malik’s approach</strong>:
<ul>
<li>Encourages students to use AI to write the best possible essays.</li>
<li>Observes significant improvement in writing quality, particularly for non-native English speakers and those with weaker writing backgrounds.</li>
<li>Raises expectations for student work, demanding perfect writing due to AI assistance.</li>
</ul></li>
</ul>
</section>
<section id="the-future-of-writing-in-education" class="level4">
<h4 class="anchored" data-anchor-id="the-future-of-writing-in-education">The Future of Writing in Education</h4>
<ul>
<li><strong>Diverse approaches</strong>:
<ul>
<li><strong>In-class writing</strong>: ensures student originality.</li>
<li><strong>Oral communication</strong>: emphasizes clear and structured thinking through presentations or videos.</li>
<li><strong>AI-assisted writing</strong>: focuses on real-world research and communication skills, with AI as a support tool.</li>
</ul></li>
<li><strong>Khanmigo</strong>: a middle path that balances writing instruction with AI support.
<ul>
<li>Provides guidance on essay topics (e.g., suggesting themes for <em>The Great Gatsby</em>).</li>
<li>Offers feedback on drafts, highlighting strengths and weaknesses.</li>
<li>Helps students refine arguments and improve writing style.</li>
<li>Reports on the student-AI collaboration process to the teacher, providing insights into student progress and areas for improvement.</li>
<li>Detects potential cheating by identifying discrepancies between the collaborative process and the final submission.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-5-the-future-of-reading-comprehension-where-literature-comes-alive" class="level3">
<h3 class="anchored" data-anchor-id="chapter-5-the-future-of-reading-comprehension-where-literature-comes-alive">Chapter 5: The Future of Reading Comprehension, Where Literature Comes Alive</h3>
<section id="conversing-with-characters-sanvis-experience" class="level4">
<h4 class="anchored" data-anchor-id="conversing-with-characters-sanvis-experience">Conversing with Characters: Sanvi’s Experience</h4>
<ul>
<li><strong>Sanvi</strong>, a Khan World School student, used <strong>Khanmigo</strong> to enhance her understanding of <em>The Great Gatsby</em>.</li>
<li><strong>Challenge</strong>: understanding the symbolism of the green light.</li>
<li><strong>Solution</strong>: engaging in a conversation with an AI simulation of Jay Gatsby.</li>
<li><strong>Benefits</strong>:
<ul>
<li><strong>Immersive Learning</strong>: allows students to interact with characters and explore literary worlds in a unique way.</li>
<li><strong>Enhanced Comprehension</strong>: provides personalized explanations and insights into complex concepts.</li>
<li><strong>Engaging Learning</strong>: fosters deeper understanding and appreciation of literature through interactive dialogue.</li>
</ul></li>
</ul>
</section>
<section id="the-state-of-reading-comprehension-and-the-potential-of-ai" class="level4">
<h4 class="anchored" data-anchor-id="the-state-of-reading-comprehension-and-the-potential-of-ai">The State of Reading Comprehension and the Potential of AI</h4>
<ul>
<li><strong>Reading comprehension</strong>: a critical skill for navigating the world and making informed decisions.</li>
<li><strong>Current challenges</strong>:
<ul>
<li>Low reading proficiency levels (e.g., 54% of Americans read below a 6th grade level, according to Gallup).</li>
<li>Limitations of traditional assessment methods (e.g., reliance on passage-based multiple-choice questions).</li>
<li>Narrow exposure to texts and modalities due to the focus on standardized testing.</li>
</ul></li>
<li><strong>AI’s potential</strong>:
<ul>
<li>Enables <strong>standardized, scalable assessments</strong> beyond multiple-choice formats.</li>
<li>Supports <strong>free-response answers</strong> and <strong>dialogue-based assessment</strong>.</li>
<li>Facilitates <strong>deeper engagement with texts</strong> through interactive questions and feedback.</li>
<li>Allows for <strong>personalized learning experiences</strong> tailored to individual student needs.</li>
</ul></li>
</ul>
</section>
<section id="ai-powered-reading-comprehension-tools" class="level4">
<h4 class="anchored" data-anchor-id="ai-powered-reading-comprehension-tools">AI-Powered Reading Comprehension Tools</h4>
<ul>
<li><strong>Beyond multiple-choice questions</strong>:
<ul>
<li>AI can assess student understanding through written responses, highlighting textual evidence and exploring authorial intent.</li>
<li>AI can ask follow-up questions based on student answers, promoting deeper analysis and critical thinking.</li>
</ul></li>
<li><strong>Interactive chapter summaries</strong>:
<ul>
<li>AI can engage students in discussions about each chapter, prompting reflection on themes, characters, and plot development.</li>
<li>AI can provide personalized feedback and report insights to the teacher.</li>
</ul></li>
<li><strong>Expanding beyond language arts</strong>:
<ul>
<li>AI-powered reading comprehension tools can be applied to textbooks and articles across various subjects.</li>
<li>Students can engage in interactive dialogues with simulations of historical figures or scientists (e.g., debating the Federalist Papers with James Madison or conducting experiments with Marie Curie).</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-6-ai-and-creativity" class="level3">
<h3 class="anchored" data-anchor-id="chapter-6-ai-and-creativity">Chapter 6: AI and Creativity</h3>
<section id="coppolas-zippy-script-and-early-ai-in-creativity" class="level4">
<h4 class="anchored" data-anchor-id="coppolas-zippy-script-and-early-ai-in-creativity">Coppola’s “Zippy Script” and Early AI in Creativity</h4>
<ul>
<li><strong>Francis Ford Coppola</strong> experimented with the <strong>Kurzweil Reading Machine</strong> in the 1970s to create “zippy scripts” by converting novel dialogue into screenplay format.</li>
<li>This approach sparked concerns about <strong>AI’s potential impact on creative professions</strong> (e.g., screenwriters).</li>
<li>The incident foreshadowed the broader debate about <strong>intellectual property and the future of creativity in the age of AI</strong>.</li>
</ul>
</section>
<section id="ais-creative-capabilities-and-limitations" class="level4">
<h4 class="anchored" data-anchor-id="ais-creative-capabilities-and-limitations">AI’s Creative Capabilities and Limitations</h4>
<ul>
<li><strong>Generative AI</strong> can produce impressive creative works across various domains (writing, images, video, music) through text-based prompts.</li>
<li><strong>Concerns about AI and creativity</strong>:
<ul>
<li><strong>Originality</strong>: is AI creativity truly original, or is it simply a remix of existing data and patterns?</li>
<li><strong>Impact on human creativity</strong>: will AI tools discourage students from developing their own creative abilities?</li>
</ul></li>
<li><strong>Chomsky’s perspective</strong>:
<ul>
<li><strong>Human creativity</strong> is fundamentally different from AI’s machine learning approach.</li>
<li><strong>Human minds</strong> seek explanations and are driven by a dynamic understanding of the world, while AI relies on brute correlations.</li>
</ul></li>
</ul>
</section>
<section id="rethinking-creativity-human-vs.-ai" class="level4">
<h4 class="anchored" data-anchor-id="rethinking-creativity-human-vs.-ai">Rethinking Creativity: Human vs.&nbsp;AI</h4>
<ul>
<li><strong>Subconscious creativity</strong>: much of human creativity arises from subconscious processes, similar to the workings of large language models.</li>
<li><strong>Flow states</strong>: experts in various fields often experience peak creativity in flow states, where conscious thought is minimized, resembling AI’s automatic generation process.</li>
<li><strong>Brute correlations</strong>: humans are prone to inferring brute correlations, which can lead to biases and false narratives, challenging Chomsky’s claim that humans primarily seek explanations.</li>
<li><strong>Derivative creativity</strong>: both human and AI creativity often build upon existing ideas and experiences, making it difficult to draw a clear distinction between originality and derivation.</li>
</ul>
</section>
<section id="ai-as-a-catalyst-for-human-creativity" class="level4">
<h4 class="anchored" data-anchor-id="ai-as-a-catalyst-for-human-creativity">AI as a Catalyst for Human Creativity</h4>
<ul>
<li><strong>Exposure to diverse creative expressions</strong>: AI can broaden our creative horizons by exposing us to a wider range of ideas and styles.</li>
<li><strong>Collaborative creativity</strong>: AI can serve as a creative partner, sparking new ideas, providing feedback, and enabling collaborative exploration.</li>
<li><strong>AI in education</strong>: AI tools can engage students in the creative process, offering guidance, feedback, and opportunities for experimentation.</li>
</ul>
</section>
<section id="ai-and-creative-learning" class="level4">
<h4 class="anchored" data-anchor-id="ai-and-creative-learning">AI and Creative Learning</h4>
<ul>
<li><strong>AI as a personalized tutor</strong>: AI can guide students through the creative process, providing tailored feedback and support.</li>
<li><strong>Lowering barriers to entry</strong>: AI can make creative skills more accessible to a wider range of learners, regardless of their prior experience or expertise.</li>
<li><strong>Examples</strong>:
<ul>
<li><strong>Writing</strong>: AI can help students explore different genres, themes, and narrative structures.</li>
<li><strong>Art</strong>: AI can provide inspiration, guidance, and feedback on artistic compositions.</li>
<li><strong>Music</strong>: AI can assist with practice routines, fingering techniques, and music composition.</li>
</ul></li>
</ul>
</section>
<section id="the-future-of-creative-professions" class="level4">
<h4 class="anchored" data-anchor-id="the-future-of-creative-professions">The Future of Creative Professions</h4>
<ul>
<li><strong>Will AI replace human creatives?</strong>: the fear of AI making creative professions obsolete is a valid concern.</li>
<li><strong>Expanding creative skill sets</strong>: generative AI may push creatives to broaden their skill sets and take on more diverse roles within their fields (e.g., screenwriters becoming full-fledged movie producers).</li>
<li><strong>Coppola’s optimistic view</strong>: AI can empower a new generation of creatives, leading to an explosion of artistic and scientific innovation.</li>
<li><strong>AI as a creative companion</strong>: AI can augment human creativity, sparking new ideas, providing feedback, and enabling collaborative exploration.</li>
</ul>
</section>
</section>
<section id="chapter-7-conversing-with-history" class="level3">
<h3 class="anchored" data-anchor-id="chapter-7-conversing-with-history">Chapter 7: Conversing with History</h3>
<section id="bringing-history-to-life-with-ai" class="level4">
<h4 class="anchored" data-anchor-id="bringing-history-to-life-with-ai">Bringing History to Life with AI</h4>
<ul>
<li><strong>Good history and civics teachers</strong> make the past interesting.</li>
<li><strong>Great history and civics teachers</strong> make the past come alive.</li>
<li><strong>AI’s role</strong>:
<ul>
<li>Gives the past a voice and perspective.</li>
<li>Transforms history from a static subject into an interactive experience.</li>
</ul></li>
</ul>
</section>
<section id="enhancing-history-and-civics-education-with-khanmigo" class="level4">
<h4 class="anchored" data-anchor-id="enhancing-history-and-civics-education-with-khanmigo">Enhancing History and Civics Education with Khanmigo</h4>
<ul>
<li><strong>Pre-Khanmigo Khan Academy</strong>: provided core content, skills, and knowledge through videos, articles, and exercises.</li>
<li><strong>Limitations</strong>: limited opportunities for deeper engagement, such as Socratic dialogue, debates, and simulations.</li>
<li><strong>Khanmigo’s capabilities</strong>:
<ul>
<li><strong>Interactive dialogues</strong>: facilitates discussions with AI simulations of historical figures (e.g., Benjamin Franklin, Cleopatra, Rembrandt).</li>
<li><strong>Debates and simulations</strong>: enables students to engage in debates about historical events or participate in simulations of historical scenarios (e.g., debating the dropping of atomic bombs on Japan or participating in a mock Second Continental Congress).</li>
<li><strong>Personalized learning</strong>: provides tailored feedback and guidance based on individual student needs.</li>
</ul></li>
</ul>
</section>
<section id="conversing-with-historical-figures" class="level4">
<h4 class="anchored" data-anchor-id="conversing-with-historical-figures">Conversing with Historical Figures</h4>
<ul>
<li><strong>Examples of Khanmigo interactions</strong>:
<ul>
<li><strong>Rembrandt van Rijn</strong>: discussing the artist’s motivations and creative process.</li>
<li><strong>George Washington</strong>: exploring the Founding Fathers’ views on the Enlightenment and slavery.</li>
<li><strong>The 14th Amendment</strong>: understanding the historical context and debates surrounding its ratification.</li>
</ul></li>
<li><strong>Accuracy and authenticity</strong>: Khanmigo strives to provide historically accurate and contextually appropriate responses through the lens of the simulated character.</li>
<li><strong>Guardrails</strong>: Khanmigo implements safeguards to prevent the AI from engaging in discussions outside the historical figure’s knowledge or expressing opinions on modern issues.</li>
</ul>
</section>
<section id="the-washington-posts-experiment-and-criticisms" class="level4">
<h4 class="anchored" data-anchor-id="the-washington-posts-experiment-and-criticisms">The Washington Post’s Experiment and Criticisms</h4>
<ul>
<li><strong>Gillian Braquel</strong> interviewed the AI simulation of <strong>Harriet Tubman</strong> for the Washington Post.</li>
<li><strong>Positive aspects</strong>:
<ul>
<li>Engaging and interactive way to learn about history.</li>
<li>More compelling than traditional methods like filmstrips or reenactors.</li>
</ul></li>
<li><strong>Limitations</strong>:
<ul>
<li>Stilted language.</li>
<li>Difficulty confirming the authenticity of historical quotations.</li>
<li>Inability to engage in discussions about modern topics like reparations.</li>
</ul></li>
<li><strong>Social media criticisms</strong>:
<ul>
<li>Concerns about historical accuracy and authenticity.</li>
<li>Disrespectful to simulate revered historical figures.</li>
<li>Preference for traditional biographical sources.</li>
</ul></li>
</ul>
</section>
<section id="addressing-criticisms-and-recognizing-the-value-of-ai-simulations" class="level4">
<h4 class="anchored" data-anchor-id="addressing-criticisms-and-recognizing-the-value-of-ai-simulations">Addressing Criticisms and Recognizing the Value of AI Simulations</h4>
<ul>
<li><strong>Striving for improvement</strong>: AI simulations are constantly evolving and improving in terms of accuracy and authenticity.</li>
<li><strong>Transparency and vetting</strong>: AI simulations can be openly evaluated and vetted by experts and the public.</li>
<li><strong>Engaging students</strong>: AI simulations offer a more interactive and engaging way to learn about history than traditional methods.</li>
<li><strong>Sparking curiosity</strong>: AI simulations can pique students’ interest in history, motivating them to explore the subject further.</li>
<li><strong>Complementing traditional learning</strong>: AI simulations can enhance, not replace, traditional methods of historical study.</li>
</ul>
</section>
<section id="ais-potential-to-revolutionize-history-education" class="level4">
<h4 class="anchored" data-anchor-id="ais-potential-to-revolutionize-history-education">AI’s Potential to Revolutionize History Education</h4>
<ul>
<li><strong>Bringing history to life</strong>: AI simulations can make historical figures and events more relatable and engaging for students.</li>
<li><strong>Promoting deeper understanding</strong>: interactive dialogues and simulations can foster a deeper understanding of historical context and complexities.</li>
<li><strong>Developing critical thinking</strong>: AI simulations can encourage students to analyze historical events critically and form their own informed opinions.</li>
<li><strong>Extending beyond history</strong>: AI simulations can be applied to various subjects, enabling students to interact with key figures from different fields (e.g., science, literature, philosophy).</li>
</ul>
</section>
<section id="the-holodeck-analogy" class="level4">
<h4 class="anchored" data-anchor-id="the-holodeck-analogy">The Holodeck Analogy</h4>
<ul>
<li><strong>Star Trek’s holodeck</strong>: a fictional technology that simulates environments and characters, allowing users to interact with historical figures and events.</li>
<li><strong>Khanmigo as a precursor to the holodeck</strong>: AI simulations offer a glimpse into the future of immersive and interactive learning experiences.</li>
<li><strong>Future possibilities</strong>: with advancements in VR and AI, students may soon be able to experience history in a way that was previously unimaginable.</li>
</ul>
</section>
</section>
</section>
<section id="part-iii-empowering-the-next-innovators" class="level2">
<h2 class="anchored" data-anchor-id="part-iii-empowering-the-next-innovators">Part III: Empowering the Next Innovators</h2>
<blockquote class="blockquote">
<p>“What is a scientist, after all? It is a curious man looking through a keyhole, the keyhole of nature, trying to know what’s going on.” - Jacques-Yves Cousteau</p>
<p>“If an elderly but distinguished scientist says that something is possible, he is almost certainly right. But if he says that it is impossible, he is very probably wrong.” - Arthur C. Clark</p>
</blockquote>
<section id="chapter-8-using-science-to-study-science" class="level3">
<h3 class="anchored" data-anchor-id="chapter-8-using-science-to-study-science">Chapter 8: Using Science to Study Science</h3>
<section id="introduction-exploring-ais-role-in-science-education" class="level4">
<h4 class="anchored" data-anchor-id="introduction-exploring-ais-role-in-science-education">Introduction: Exploring AI’s Role in Science Education</h4>
<ul>
<li>Khan expresses curiosity about how <strong>Large Language Models (LLMs)</strong>, specifically <strong>GPT-4</strong>, handle scientific concepts, particularly pseudoscience.</li>
<li>Key questions explored:
<ul>
<li>LLMs’ effectiveness in teaching science and differentiating between fact and fiction.</li>
<li>Depth of LLMs’ scientific knowledge.</li>
<li>Impact of AI on hands-on learning and critical thinking skills development.</li>
<li>Value of classroom discussions in the context of AI integration.</li>
</ul></li>
</ul>
</section>
<section id="testing-gpt-4-with-khanmigo-global-warming-example" class="level4">
<h4 class="anchored" data-anchor-id="testing-gpt-4-with-khanmigo-global-warming-example">Testing GPT-4 with Khanmigo: Global Warming Example</h4>
<ul>
<li><strong>Khanmigo</strong>: The name of the platform integrating GPT-4.</li>
<li><strong>Prompt</strong>: “I would like to know about the science of global warming. I’ve heard it is controversial in some circles. What is the scientific evidence that global warming is real?”</li>
<li><strong>Khanmigo’s Response</strong>:
<ul>
<li>Acknowledges global warming as a well-established phenomenon and the scientific consensus on its reality and human causation.</li>
<li>Lists evidence supporting global warming:
<ul>
<li>Rising global temperatures.</li>
<li>Melting ice and receding glaciers.</li>
<li>Rising sea levels.</li>
<li>Warming oceans.</li>
<li>Extreme weather events.</li>
</ul></li>
</ul></li>
<li><strong>Prompt</strong>: Request for evidence supporting the argument that global warming is a hoax.</li>
<li><strong>Khanmigo’s Response</strong>:
<ul>
<li>Acknowledges the existence of skeptical arguments but emphasizes their lack of support from the majority of climate scientists.</li>
<li>Addresses specific skeptical arguments:
<ul>
<li><strong>Natural Climate Variability</strong>: Khanmigo counters that the rate and magnitude of current warming cannot be explained by natural factors alone.</li>
<li><strong>Data Manipulation</strong>: Khanmigo refutes claims of data manipulation, citing multiple independent analyses showing a consistent warming trend.</li>
</ul></li>
</ul></li>
<li><strong>Author’s Observation</strong>: GPT-4 effectively distinguished between accurate and fringe science, supporting science-backed arguments and dismantling false information.</li>
</ul>
</section>
<section id="khanmigo-as-a-lesson-planning-tool" class="level4">
<h4 class="anchored" data-anchor-id="khanmigo-as-a-lesson-planning-tool">Khanmigo as a Lesson Planning Tool</h4>
<ul>
<li><strong>Prompt</strong>: “Write a lesson for me to help me explain the real science behind global warming to my students.”</li>
<li><strong>Khanmigo’s Response</strong>:
<ul>
<li>Provided a lesson plan.</li>
<li>Included information about causes of global warming:
<ul>
<li>Greenhouse gases.</li>
<li>Car emissions.</li>
<li>Burning of fossil fuels.</li>
<li>Industrial processes.</li>
<li>Waste management.</li>
</ul></li>
<li>Suggested student actions to combat global warming.</li>
</ul></li>
<li><strong>Author’s Approach</strong>: Reviewed and refined the AI-generated information to ensure accuracy.</li>
</ul>
</section>
<section id="khanmigo-for-creative-project-ideas" class="level4">
<h4 class="anchored" data-anchor-id="khanmigo-for-creative-project-ideas">Khanmigo for Creative Project Ideas</h4>
<ul>
<li><strong>Prompt</strong>: “What projects or activities can I give my students to help them better grasp the concepts?”</li>
<li><strong>Khanmigo’s Response</strong>:
<ul>
<li>Suggested a <strong>Greenhouse Effect Demonstration</strong>:
<ul>
<li>Compare temperature changes in two identical containers exposed to sunlight, one with added carbon dioxide (e.g., from vinegar and baking soda).</li>
</ul></li>
</ul></li>
<li><strong>Khanmigo’s Assessment Capabilities</strong>: Generated quizzes and assessments to evaluate student understanding and identify areas for improvement.</li>
</ul>
</section>
<section id="addressing-hallucinations-in-khanmigo" class="level4">
<h4 class="anchored" data-anchor-id="addressing-hallucinations-in-khanmigo">Addressing Hallucinations in Khanmigo</h4>
<ul>
<li><strong>Hallucinations</strong>: Instances where AI generates incorrect or fabricated information.</li>
<li><strong>Khanmigo’s Limitation</strong>: Initially prone to generating fabricated links to sources.</li>
<li><strong>Solution</strong>: Restricted Khanmigo from providing links not explicitly pre-approved and provided to it.</li>
<li><strong>Explanation of LLMs’ Fallibility</strong>:
<ul>
<li>Unlike calculators designed for specific tasks, LLMs generate text based on patterns in training data.</li>
<li>LLMs represent associations between words and symbols, not predetermined algorithms.</li>
<li>LLMs are not infallible and struggle with words or symbols lacking meaningful associations (e.g., URLs).</li>
</ul></li>
<li><strong>Analogy to Human Brain</strong>: Humans can possess vast knowledge but struggle to recall complex sequences of symbols (like URLs) from memory.</li>
</ul>
</section>
<section id="khanmigos-strengths-in-science-education" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-strengths-in-science-education">Khanmigo’s Strengths in Science Education</h4>
<ul>
<li><strong>Example</strong>: Khanmigo’s ability to generate engaging and informative science articles.
<ul>
<li><strong>Prompt</strong>: Request for an article conveying the immensity of the Sun and Solar System.</li>
<li><strong>Khanmigo’s Response</strong>: Generated an article titled “The Sun and Solar System, A Journey into Awe-Inspiring Dimensions,” providing detailed comparisons of the Sun and planets’ sizes and distances.</li>
</ul></li>
<li><strong>Khanmigo’s Capabilities</strong>:
<ul>
<li>Can work with specific data and minimize hallucinations with safeguards and improvements.</li>
<li>Can explain complex scientific concepts (e.g., string theory) at different levels of understanding.</li>
<li>Can facilitate brainstorming and idea generation for scientific experiments.</li>
<li>Can serve as a conversation partner, asking questions and challenging assumptions.</li>
<li>Can relay complex scientific information across various disciplines (physics, biology, zoology) at different levels.</li>
</ul></li>
<li><strong>Benefits for Educators</strong>: Supplement lectures with AI-generated explanations.</li>
<li><strong>Benefits for Students</strong>: Access to an AI tutor for personalized support and answering questions.</li>
<li><strong>Advanced Student Applications</strong>: Generating summaries of scientific articles and research papers.</li>
<li><strong>Humor in Science Education</strong>: Khanmigo can incorporate humor to make learning more engaging (e.g., science-themed jokes).</li>
</ul>
</section>
<section id="khanmigos-application-in-understanding-ozempic" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-application-in-understanding-ozempic">Khanmigo’s Application in Understanding Ozempic</h4>
<ul>
<li><strong>Ozempic</strong>: A diabetes drug used for weight loss.</li>
<li><strong>Author’s Goal</strong>: To understand Ozempic’s mechanism of action beyond readily available explanations.</li>
<li><strong>Khanmigo’s Approach</strong>:
<ul>
<li>Engaged in a conversational dialogue with Khan, asking questions to assess prior knowledge and guide understanding.</li>
<li>Explained concepts step-by-step, providing prompts for Khan to think critically and formulate hypotheses.</li>
<li>Clarified complex terms (e.g., GLP-1) and explained their functions.</li>
<li>Addressed nuanced questions and provided detailed explanations of how Ozempic regulates blood sugar and reduces hunger.</li>
</ul></li>
<li><strong>Author’s Observations</strong>:
<ul>
<li>Khanmigo answered complex questions effectively.</li>
<li>Promoted active learning by encouraging hypothesis generation and critical thinking.</li>
<li>Demonstrated pedagogical expertise by adapting explanations to Khan’s understanding and pushing for deeper conceptual understanding.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-9-one-plus-one-equals-closing-the-math-gap" class="level3">
<h3 class="anchored" data-anchor-id="chapter-9-one-plus-one-equals-closing-the-math-gap">Chapter 9: One Plus One Equals Closing the Math Gap</h3>
<section id="john-spencer-and-ai-in-math-education" class="level4">
<h4 class="anchored" data-anchor-id="john-spencer-and-ai-in-math-education">John Spencer and AI in Math Education</h4>
<ul>
<li><strong>John Spencer</strong>: A teacher educator at George Fox University.</li>
<li><strong>Context</strong>: Early 2023, when ChatGPT was becoming prominent.</li>
<li><strong>Spencer’s Approach</strong>: Advocated for embracing LLMs as teacher productivity tools.</li>
<li><strong>Focus</strong>: Using AI to enhance student-centered learning, particularly in math.</li>
</ul>
</section>
<section id="chatgpt-for-explaining-p-values" class="level4">
<h4 class="anchored" data-anchor-id="chatgpt-for-explaining-p-values">ChatGPT for Explaining P-values</h4>
<ul>
<li><strong>P-value</strong>: A probability measure in statistics.</li>
<li><strong>ChatGPT’s Initial Response</strong>: Provided a “pretty good” but not great explanation of p-value.</li>
<li><strong>Spencer’s Refinement</strong>: Asked ChatGPT to explain the concept in simpler terms for a 15-year-old.</li>
<li><strong>ChatGPT’s Improved Response</strong>: Provided specific examples to build conceptual understanding.</li>
<li><strong>Iterative Refinement</strong>: Spencer used the “Try Again” button and reframed questions to obtain more specific and contextually relevant explanations.</li>
<li><strong>Outcome</strong>: ChatGPT’s responses became progressively more targeted, less academic, and more personalized (shifting from third to second person).</li>
</ul>
</section>
<section id="benefits-of-chatgpt-for-student-teachers" class="level4">
<h4 class="anchored" data-anchor-id="benefits-of-chatgpt-for-student-teachers">Benefits of ChatGPT for Student Teachers</h4>
<ul>
<li><strong>Spencer’s Observation</strong>: ChatGPT provided immediate examples and facilitated the creation of more creative and contextually relevant lessons.</li>
<li><strong>Potential of Next-Generation AI</strong>: Anticipation for even greater benefits from AI specifically designed for education, with memory and advanced lesson creation capabilities.</li>
</ul>
</section>
<section id="khanmigo-building-an-ai-math-tutor" class="level4">
<h4 class="anchored" data-anchor-id="khanmigo-building-an-ai-math-tutor">Khanmigo: Building an AI Math Tutor</h4>
<ul>
<li><strong>Khanmigo</strong>: Khan Academy’s AI tutor built upon GPT-4.</li>
<li><strong>Goal</strong>: To create a high-quality AI tutor by leveraging GPT-4’s capabilities and addressing its limitations.</li>
<li><strong>Khanmigo’s Strengths</strong>:
<ul>
<li>High accuracy in math problem-solving.</li>
<li>Effective tutoring interactions.</li>
<li>Pedagogical expertise and appropriate humility.</li>
<li>Ability to understand student reasoning.</li>
</ul></li>
<li><strong>Khanmigo’s Approach to Student Errors</strong>:
<ul>
<li>When a student makes a mistake (e.g., incorrect distribution), Khanmigo analyzes the error without revealing its own solution.</li>
<li>Khanmigo prompts the student to explain their reasoning.</li>
<li>This allows Khanmigo to diagnose math gaps and address misconceptions.</li>
</ul></li>
</ul>
</section>
<section id="khanmigos-interactive-tutoring" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-interactive-tutoring">Khanmigo’s Interactive Tutoring</h4>
<ul>
<li><strong>Khanmigo’s Responses</strong>: Provides tailored explanations, examples, and practice problems based on student questions.</li>
<li><strong>Benefits</strong>: Enables personalized learning at individual paces and targeted support.</li>
</ul>
</section>
<section id="khanmigos-explanation-of-p-values-example" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-explanation-of-p-values-example">Khanmigo’s Explanation of P-values (Example)</h4>
<ul>
<li><strong>Student’s Question</strong>: “What is a p-value?”</li>
<li><strong>Khanmigo’s Response</strong>:
<ul>
<li>Starts with a question to assess the student’s understanding of hypothesis testing.</li>
<li>Guides the student through a coin toss example to illustrate the concept of p-value.</li>
<li>Explains p-value as the probability of observing a result as extreme or more extreme than the actual result, assuming the null hypothesis is true.</li>
<li>Introduces the concept of significance level and its role in hypothesis testing.</li>
<li>Emphasizes the uncertainty inherent in statistical analysis.</li>
</ul></li>
<li><strong>Outcome</strong>: Khanmigo effectively explains p-value using a relatable example and clarifying key concepts.</li>
</ul>
</section>
<section id="impact-of-khanmigo-on-math-education" class="level4">
<h4 class="anchored" data-anchor-id="impact-of-khanmigo-on-math-education">Impact of Khanmigo on Math Education</h4>
<ul>
<li><strong>Potential</strong>: Closing the math gap by providing personalized tutoring and support.</li>
<li><strong>Accessibility</strong>: Aims to make AI tutoring available to all students, regardless of learning styles or abilities.</li>
<li><strong>Role of Khanmigo</strong>: Reinforces learning and builds long-term understanding of math concepts.</li>
<li><strong>Clarification</strong>: Khanmigo is not a replacement for human teachers but a powerful tool for students needing clarification, extra help, or review.</li>
<li><strong>Khanmigo’s Pedagogical Features</strong>: Engages students, encourages question rephrasing and problem summarization, and utilizes effective quizzing techniques.</li>
</ul>
</section>
</section>
<section id="chapter-10-accessing-courses-that-students-otherwise-would-not" class="level3">
<h3 class="anchored" data-anchor-id="chapter-10-accessing-courses-that-students-otherwise-would-not">Chapter 10: Accessing Courses that Students Otherwise Would Not</h3>
<section id="ai-tutors-and-the-need-for-curriculum" class="level4">
<h4 class="anchored" data-anchor-id="ai-tutors-and-the-need-for-curriculum">AI Tutors and the Need for Curriculum</h4>
<ul>
<li><strong>Importance of Curriculum</strong>: AI tutors, like human tutors, benefit from a structured curriculum or textbook.</li>
<li><strong>Khan Academy’s Origins</strong>: Developed initially as a practice platform to provide systematic learning alongside tutoring.</li>
<li><strong>Benefits of Combining AI Tutors with Curriculum</strong>: Creates a system capable of teaching an entire subject effectively.</li>
<li><strong>Khan Academy’s Curriculum</strong>: Offers a complete scope and sequence from pre-K through college across various subjects.</li>
</ul>
</section>
<section id="khan-academys-mission-and-course-offerings" class="level4">
<h4 class="anchored" data-anchor-id="khan-academys-mission-and-course-offerings">Khan Academy’s Mission and Course Offerings</h4>
<ul>
<li><strong>Goal</strong>: To make education accessible to everyone.</li>
<li><strong>Course Features</strong>: On-demand videos, mastery-based practice, and tools for parents and teachers.</li>
<li><strong>Benefits</strong>:
<ul>
<li>Raises the ceiling for students in supportive classroom environments.</li>
<li>Raises the floor for students lacking access to quality education.</li>
</ul></li>
</ul>
</section>
<section id="addressing-educational-inequality" class="level4">
<h4 class="anchored" data-anchor-id="addressing-educational-inequality">Addressing Educational Inequality</h4>
<ul>
<li><strong>Lack of Course Access</strong>: Many American high schools lack advanced courses like calculus, physics, and chemistry.</li>
<li><strong>Disparities</strong>: This lack of access is more pronounced in schools with high Black and Latino enrollment.</li>
<li><strong>Consequences</strong>: Limited access to advanced courses hinders students’ ability to pursue STEM careers.</li>
<li><strong>Course Dilution</strong>: Even when offered, advanced courses may be diluted due to insufficient student preparedness.</li>
<li><strong>Humanities and Writing</strong>: Similar challenges exist, though prerequisite knowledge may be less critical.</li>
</ul>
</section>
<section id="khan-academys-solution" class="level4">
<h4 class="anchored" data-anchor-id="khan-academys-solution">Khan Academy’s Solution</h4>
<ul>
<li><strong>Free Access to Courses</strong>: Provides online courses covering a wide range of subjects.</li>
<li><strong>Flexibility</strong>: Students can learn independently or with support.</li>
<li><strong>Addressing Motivation</strong>: Recognizes that self-directed learning can be challenging for some students.</li>
</ul>
</section>
<section id="support-mechanisms-schoolhouse.world" class="level4">
<h4 class="anchored" data-anchor-id="support-mechanisms-schoolhouse.world">Support Mechanisms: Schoolhouse.World</h4>
<ul>
<li><strong>Schoolhouse.World</strong>: A non-profit offering free tutoring by volunteer tutors.</li>
<li><strong>Limitations of Human Tutoring</strong>: Availability constraints.</li>
<li><strong>Khanmigo’s Role</strong>: Provides consistent, on-demand support to enhance student motivation and success.</li>
</ul>
</section>
<section id="college-credit-and-course-recognition" class="level4">
<h4 class="anchored" data-anchor-id="college-credit-and-course-recognition">College Credit and Course Recognition</h4>
<ul>
<li><strong>Challenge</strong>: Obtaining college credit for courses taken on Khan Academy.</li>
<li><strong>Progress</strong>: Some institutions (e.g., Caltech) recognize Khan Academy courses for admission requirements.</li>
</ul>
</section>
<section id="the-importance-of-motivation-and-accountability" class="level4">
<h4 class="anchored" data-anchor-id="the-importance-of-motivation-and-accountability">The Importance of Motivation and Accountability</h4>
<ul>
<li><strong>Tutor’s Role</strong>: Providing motivation and accountability is crucial for student success.</li>
<li><strong>Author’s Experience</strong>: Emphasized accountability during tutoring sessions with cousins.</li>
<li><strong>Formalized Engagement</strong>: Khan Lab School and Khan World School incorporate regular check-ins and goal setting.</li>
<li><strong>Resource Limitations</strong>: Personalized attention is often unavailable in traditional schools.</li>
</ul>
</section>
<section id="khanmigos-role-in-motivation-and-accountability" class="level4">
<h4 class="anchored" data-anchor-id="khanmigos-role-in-motivation-and-accountability">Khanmigo’s Role in Motivation and Accountability</h4>
<ul>
<li><strong>User Feedback</strong>: Khanmigo is highly effective for students who actively seek help, but many students do not naturally do so.</li>
<li><strong>Khanmigo’s New Capabilities</strong>:
<ul>
<li>With user permission, can communicate with teachers, parents, and students to track engagement and provide encouragement.</li>
<li>Offers check-ins, reflection prompts, and proactive interventions for struggling students.</li>
</ul></li>
<li><strong>Example</strong>: Khanmigo can send emails reminding students of their goals and offering support.</li>
</ul>
</section>
</section>
<section id="chapter-11-the-most-important-subject-matter-domain-to-master" class="level3">
<h3 class="anchored" data-anchor-id="chapter-11-the-most-important-subject-matter-domain-to-master">Chapter 11: The Most Important Subject Matter Domain to Master</h3>
<section id="field-testing-in-education" class="level4">
<h4 class="anchored" data-anchor-id="field-testing-in-education">Field Testing in Education</h4>
<ul>
<li><strong>Importance of Field Testing</strong>: Testing educational innovations in real classrooms with teachers and students.</li>
<li><strong>Purpose</strong>: To gather feedback and refine ideas based on practical experience.</li>
<li><strong>Khanmigo Pilot Studies</strong>: Implemented in over 30,000 classrooms across the United States by early 2024.</li>
<li><strong>Focus</strong>: Ensuring Khanmigo aligns with educational goals and standards.</li>
</ul>
</section>
<section id="unexpected-benefits-increased-self-confidence" class="level4">
<h4 class="anchored" data-anchor-id="unexpected-benefits-increased-self-confidence">Unexpected Benefits: Increased Self-Confidence</h4>
<ul>
<li><strong>Initial Observations</strong>: Khanmigo showed positive effects on student skills in STEM and humanities.</li>
<li><strong>Key Finding</strong>: The most significant impact was on student self-confidence, a challenging area to address traditionally.</li>
<li><strong>School City of Hobart Example</strong>:
<ul>
<li>Early adopter of Khanmigo.</li>
<li>Observed substantial gains in student self-confidence after six months of using the AI.</li>
</ul></li>
<li><strong>Superintendent Peggy Buffington’s Perspective</strong>:
<ul>
<li>Student achievement is linked to self-confidence.</li>
<li>AI plays a crucial role in fostering this confidence.</li>
</ul></li>
<li><strong>Increased Engagement</strong>: Khanmigo’s presence led to greater student engagement in classrooms.</li>
<li><strong>Reduced Anxiety</strong>: Students felt more comfortable asking questions without fear of public embarrassment.</li>
<li><strong>Teacher’s Role</strong>: Khanmigo supports student confidence, but teachers still ensure students apply their own thinking to assignments.</li>
</ul>
</section>
<section id="tim-kriegs-theory-on-khanmigos-impact" class="level4">
<h4 class="anchored" data-anchor-id="tim-kriegs-theory-on-khanmigos-impact">Tim Krieg’s Theory on Khanmigo’s Impact</h4>
<ul>
<li><strong>Tim Krieg</strong>: Director of Secondary Curriculum and Instruction at School City of Hobart.</li>
<li><strong>Conceptual Shift</strong>: Khanmigo promotes a more integrated view of education, blurring traditional subject boundaries.</li>
<li><strong>Interdisciplinary Connections</strong>: Khanmigo demonstrates how different subjects connect (e.g., math and art, writing and science, history and economics).</li>
<li><strong>Student Roles</strong>: Students become creators, producers, and curators of information.</li>
<li><strong>Non-Linear Learning</strong>: Khanmigo emphasizes the continuous and interconnected nature of learning.</li>
<li><strong>Impact on Self-Confidence</strong>: Understanding the interconnectedness of knowledge fosters confidence.</li>
<li><strong>Benefits</strong>: Increased knowledge and confidence translate to better interactions with the world inside and outside the classroom.</li>
</ul>
</section>
<section id="conclusion" class="level4">
<h4 class="anchored" data-anchor-id="conclusion">Conclusion</h4>
<ul>
<li>Mastering the interconnectedness of knowledge is a foundational skill.</li>
<li>Once this understanding is achieved, other subjects become easier to learn.</li>
</ul>
</section>
</section>
</section>
<section id="part-iv-better-together" class="level2">
<h2 class="anchored" data-anchor-id="part-iv-better-together">Part IV: Better Together</h2>
<blockquote class="blockquote">
<p>“Electric communication will never be a substitute for the face of someone who with their soul encourages another person to be brave and true.” - Charles Dickens</p>
<p>“To know oneself is to study oneself in action with another person.” - Bruce Lee</p>
</blockquote>
<section id="chapter-12-bolstering-collaborative-learning" class="level3">
<h3 class="anchored" data-anchor-id="chapter-12-bolstering-collaborative-learning">Chapter 12: Bolstering Collaborative Learning</h3>
<section id="technologys-double-edged-sword" class="level4">
<h4 class="anchored" data-anchor-id="technologys-double-edged-sword">Technology’s Double-Edged Sword</h4>
<ul>
<li><strong>Technology’s impact on children</strong>: Technology, particularly phones and social media, can be a double-edged sword.
<ul>
<li><strong>Negative effects</strong>: Screens can pull children away from living in the moment, leading to negative feelings like anxiety, envy, and being triggered.</li>
</ul></li>
<li><strong>Concerns about large language models (LLMs)</strong>: There are fears that LLMs in education could exacerbate tech-induced isolation and mental stress.
<ul>
<li><strong>Khan Academy example</strong>: Early concerns about Khan Academy focused on increased computer time potentially reducing human interaction.
<ul>
<li>Khan Academy’s goal: To use technology (personalized practice and videos) to improve education for students with fewer resources and enhance classroom engagement through personalization.</li>
<li><strong>Importance of collaboration</strong>: Studies show that collaborative learning leads to better understanding and development of crucial character and communication skills.</li>
</ul></li>
</ul></li>
<li><strong>Technology’s potential to enhance collaboration</strong>: Thoughtful use of technology can actually <em>increase</em> human interaction.
<ul>
<li><strong>Traditional classroom limitations</strong>:
<ul>
<li>Teacher-led lectures often fail to engage all students due to pacing issues.</li>
<li>Limited opportunities for group problem-solving.</li>
<li>Students primarily listen passively and are discouraged from talking.</li>
<li>Individual questions often go unaddressed due to teacher bandwidth or student fear of appearing “dumb” or “nerdy.”</li>
</ul></li>
<li><strong>Khan Academy’s positive impact</strong>: Good implementations of Khan Academy have fostered more human interaction.
<ul>
<li>Students encouraged to help each other during independent practice (with guidelines).</li>
<li>Teachers freed up for focused one-on-one or small group interventions.</li>
</ul></li>
<li><strong>Schoolhouse.world</strong>: An online platform providing free live tutoring via Zoom.
<ul>
<li>Uses vetted, volunteer, near-peer tutors.</li>
<li>Reaches around 10,000 students monthly.</li>
<li>Demonstrates technology’s potential to facilitate human interaction.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="ai-and-the-future-of-collaborative-learning" class="level4">
<h4 class="anchored" data-anchor-id="ai-and-the-future-of-collaborative-learning">AI and the Future of Collaborative Learning</h4>
<ul>
<li><strong>Concerns about AI tutors</strong>: Concerns exist that even effective AI tutors might increase student screen time and reduce interaction with peers and teachers.</li>
<li><strong>AI’s potential benefits for collaboration</strong>:
<ul>
<li><strong>Enhanced Khan Academy model</strong>: AI can make the Khan Academy model even more productive.
<ul>
<li>Students can access help from peers, teachers, and AI.</li>
</ul></li>
<li><strong>Increased engagement and learning</strong>:
<ul>
<li>AI can help students feel more engaged and unblocked in their learning, allowing for more independent learning outside of the classroom.</li>
<li>This frees up classroom time for deeper human interaction (e.g., Socratic dialogue, group problem-solving, project-based learning).</li>
</ul></li>
<li><strong>Reduced student struggles</strong>: AI can minimize instances where students feel lost or bored, enabling them to engage more effectively with classmates.
<ul>
<li>Struggling students can get immediate, judgment-free help.</li>
<li>Advanced students can explore topics in more depth.</li>
</ul></li>
<li><strong>Teacher support</strong>: AI can provide teachers with real-time insights into student progress and offer tips for engagement.</li>
</ul></li>
<li><strong>AI as a facilitator of human interaction</strong>:
<ul>
<li><strong>Khanmigo example</strong>: An AI that can facilitate conversations and collaboration.
<ul>
<li>Can divide students into breakout groups and guide discussions.</li>
<li>Can initiate icebreaker chats among initially anonymous students to foster understanding and reduce social biases.</li>
<li>Provides teachers with insights into student interactions.</li>
</ul></li>
<li><strong>Multimodal interaction</strong>: Khanmigo is being tested with listening and speaking capabilities, enabling natural interaction.</li>
</ul></li>
<li><strong>The end of static learning</strong>: AI and AI-based tutors are paving the way for more dynamic and collaborative education.
<ul>
<li><strong>Classroom examples</strong>:
<ul>
<li>Khanmigo can facilitate learning games and multi-step projects.</li>
<li>Can suggest and guide group maker projects (e.g., designing paper airplanes to learn about aerodynamics).</li>
</ul></li>
</ul></li>
<li><strong>AI as a facilitator</strong>: LLMs have the potential to be great facilitators of learning.
<ul>
<li>Can lead conversations, pair learners, create groups, and offer icebreakers.</li>
</ul></li>
<li><strong>Schooling’s broader purpose</strong>: Schooling is not just about academics; it’s also about building human connections.
<ul>
<li>AI can facilitate these interactions beyond academic support.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-13-ai-meets-student-mental-health-coaching" class="level3">
<h3 class="anchored" data-anchor-id="chapter-13-ai-meets-student-mental-health-coaching">Chapter 13: AI meets student mental health coaching</h3>
<section id="ai-academic-coach-a-scenario" class="level4">
<h4 class="anchored" data-anchor-id="ai-academic-coach-a-scenario">AI Academic Coach: A Scenario</h4>
<ul>
<li><strong>Scenario</strong>: A student experiences anxiety and fear of failure before a final exam.</li>
<li><strong>AI Academic Coach</strong>: The AI provides emotional support and reassurance.
<ul>
<li>Acknowledges the student’s feelings.</li>
<li>Reminds the student of their preparation and past successes.</li>
<li>Explores the student’s specific worries through non-directional questioning.</li>
<li>Challenges negative thoughts and reframes potential outcomes.</li>
<li>Suggests coping mechanisms like breathing exercises.</li>
</ul></li>
</ul>
</section>
<section id="the-potential-of-ai-as-a-mental-health-coach" class="level4">
<h4 class="anchored" data-anchor-id="the-potential-of-ai-as-a-mental-health-coach">The Potential of AI as a Mental Health Coach</h4>
<ul>
<li><strong>AI’s potential role as a coach</strong>: AI tutors, due to their ability to form connections and understand student needs, could potentially evolve into coaches.</li>
<li><strong>Question of AI’s competence as a coach/therapist</strong>: Can AI effectively provide emotional support and guidance?</li>
<li><strong>ELIZA</strong>: An early natural language processing program developed by Joseph Weizenbaum at MIT in the 1960s.
<ul>
<li>Intended to demonstrate the artificiality of human-AI communication.</li>
<li><strong>Unexpected outcome</strong>: Users formed emotional attachments to ELIZA, forgetting they were interacting with a computer.</li>
</ul></li>
<li><strong>DOCTOR</strong>: An ELIZA script simulating a Rogerian therapist.
<ul>
<li>Employed non-directional questioning and reframing.</li>
<li><strong>Effectiveness</strong>: Despite its simplicity, DOCTOR was surprisingly effective, demonstrating the therapeutic value of being heard and reframing thoughts.</li>
</ul></li>
<li><strong>The Need for Mental Health Support</strong>:
<ul>
<li><strong>Rise in mental health crises</strong>: The US has seen a 40% increase in mental health crises among school-aged children since 2010.
<ul>
<li>Affects one in three university students.</li>
<li>Contributes to students leaving higher education without degrees.</li>
</ul></li>
<li><strong>Epidemic of loneliness</strong>: US Surgeon General Vivek Murthy highlights loneliness as a significant public health issue affecting people of all ages and backgrounds.
<ul>
<li>Loneliness is associated with negative physical and mental health outcomes.</li>
</ul></li>
<li><strong>Link between mental health and academic performance</strong>: Both mental health problems and academic underperformance can stem from a sense of lack of control and purpose.</li>
<li><strong>Growing focus on student mental health</strong>: Mental health is now recognized as a crucial aspect of education.</li>
</ul></li>
<li><strong>Integrative Psychological Artificial Intelligence (IPAI)</strong>: The use of AI for psychological support.</li>
<li><strong>AI as a supplement, not a replacement for human therapists</strong>: AI should not replace human therapists but can provide accessible support when human therapists are unavailable or unaffordable.</li>
<li><strong>AI-based therapeutic interventions</strong>:
<ul>
<li><strong>Cognitive behavioral therapy (CBT) chatbot</strong>: Research from the South China University of Technology (2022) showed that a CBT chatbot effectively reduced depression and anxiety.</li>
</ul></li>
<li><strong>GPT-4 and AI-based coaching</strong>: Experiments with GPT-4 explored AI-led pedagogical and mindset interventions.</li>
<li><strong>Collaboration with Angela Duckworth</strong>:
<ul>
<li>Duckworth, a psychology professor at the University of Pennsylvania, studies and develops lightweight interventions to improve grit, perseverance, and metacognitive skills.</li>
<li><strong>Goal of collaboration</strong>: To use generative AI to scale these interventions and make them accessible to millions of students.</li>
<li><strong>Duckworth’s perspective</strong>: AI shows promise in delivering simulated interventions, especially when human support is unavailable.</li>
<li><strong>AI’s accessibility</strong>: AI can provide support at any time, including during crises when human therapists might not be reachable.</li>
</ul></li>
<li><strong>Example of a test intervention</strong>:
<ul>
<li>The AI uses situational modifications to help students develop metacognitive skills.</li>
<li>Example: The AI guides a student to recognize distractions (e.g., a cell phone) and suggests removing them to improve focus.</li>
</ul></li>
<li><strong>Duckworth’s insights on AI’s potential</strong>:
<ul>
<li>AI enables interactive interventions with real-time feedback.</li>
<li>AI can effectively propose situational modifications to improve student well-being, focus, and productivity.</li>
<li>AI can scale interventions that were previously only accessible through trained professionals.</li>
<li><strong>Future potential</strong>: AI could become as dynamic and effective as human beings in delivering interventions.</li>
</ul></li>
<li><strong>AI’s potential for EQ tasks</strong>: While AI lacks sentience and true empathy, it can effectively simulate empathy.
<ul>
<li>LLMs can interact in a way that feels like interacting with a caring therapist.</li>
<li>AI models are being augmented with listening, speech, and vision capabilities to enhance their understanding of user emotions.</li>
</ul></li>
<li><strong>Artificial Empath (AE)</strong>: A potential term for AI that simulates empathy and could be a valuable tool in addressing loneliness, depression, and anxiety.</li>
</ul>
</section>
</section>
<section id="chapter-14-the-place-for-parents-in-ai-based-education" class="level3">
<h3 class="anchored" data-anchor-id="chapter-14-the-place-for-parents-in-ai-based-education">Chapter 14: The Place for parents in AI-based education</h3>
<section id="parental-concerns-and-aspirations" class="level4">
<h4 class="anchored" data-anchor-id="parental-concerns-and-aspirations">Parental Concerns and Aspirations</h4>
<ul>
<li><strong>Parental concerns about technology</strong>: Parents often try to encourage their children to reduce technology use.
<ul>
<li><strong>Concerns about passive entertainment</strong>: Parents worry about children spending excessive time on video games, social media, or streaming services.</li>
<li><strong>Desire for productive activities</strong>: Parents want their children to engage in activities that promote physical, social, and academic development, such as playing outdoors, reading, creative pursuits, and studying.</li>
</ul></li>
<li><strong>Supporting children’s growth</strong>: Parents aim to support their children’s development of a growth mindset.
<ul>
<li><strong>Growth mindset</strong>: The belief that abilities can be developed through dedication and hard work.</li>
<li><strong>Parental role</strong>: Parents encourage effort over outcome, reframe setbacks as learning opportunities, and break down complex concepts into manageable parts.</li>
</ul></li>
<li><strong>Challenges of parenting during learning</strong>: It’s challenging for both parents and children when learning new things.
<ul>
<li><strong>Consistency and reinforcement</strong>: Developing a growth mindset requires consistent effort and positive reinforcement.</li>
</ul></li>
<li><strong>Evolution of learning support</strong>: Technological advances have expanded the options for supporting children’s learning.
<ul>
<li><strong>Traditional limitations</strong>:
<ul>
<li><strong>Parental expertise</strong>: Many parents lack confidence in the subject matter their children are learning.</li>
<li><strong>Parent-child dynamics</strong>: Tutoring by parents can be challenging due to the inherent dynamics of the relationship.</li>
<li><strong>Limited alternatives</strong>: Non-parent family tutors are not always available, and paid tutors can be expensive.</li>
</ul></li>
<li><strong>The internet’s role</strong>: The internet, particularly on-demand video, offered an alternative.
<ul>
<li><strong>Benefits</strong>: Accessibility, flexibility (pausing, speed control), and bite-sized explanations.</li>
</ul></li>
<li><strong>Khan Academy’s impact</strong>: Provided practice and assessment in various subjects, languages, and locations.
<ul>
<li><strong>Benefits for parents</strong>: Parents used Khan Academy to refresh their knowledge and better support their children.</li>
</ul></li>
<li><strong>Gap between technology and human tutors</strong>: While technology offered valuable resources, it lacked the rapport, motivation, and dynamic interaction of human tutors.</li>
</ul></li>
<li><strong>AI’s potential to bridge the gap</strong>: AI tutors and personal coaches offer more personalized and interactive support.
<ul>
<li><strong>Benefits of AI tutors</strong>:
<ul>
<li><strong>Personalized coaching</strong>: Adapts to individual needs and abilities.</li>
<li><strong>Immediate feedback</strong>: Provides instant feedback and adjusts teaching methods accordingly.</li>
<li><strong>Accessibility</strong>: Available anytime and anywhere.</li>
<li><strong>Socratic questioning</strong>: Encourages critical thinking.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="ais-impact-on-parental-roles" class="level4">
<h4 class="anchored" data-anchor-id="ais-impact-on-parental-roles">AI’s Impact on Parental Roles</h4>
<ul>
<li><strong>AI’s influence on parenting</strong>: AI is transforming not only work but also the role of parents in their children’s education.</li>
<li><strong>AI as a tutoring aid</strong>:
<ul>
<li><strong>Addressing parent-child dynamics</strong>: AI can act as a neutral third party, avoiding potential conflicts that can arise during parent-led tutoring.</li>
<li><strong>Expertise and personalization</strong>: AI tutors possess subject matter expertise and can provide tailored learning experiences.</li>
<li><strong>Availability and patience</strong>: AI tutors are always available and exhibit endless patience.</li>
<li><strong>Parental monitoring</strong>: AI platforms offer interfaces for parents to track their children’s learning progress and conversations with the AI.</li>
<li><strong>Engagement and accountability</strong>: AI can proactively reach out to students and parents to maintain motivation and accountability.</li>
</ul></li>
<li><strong>AI as a parenting coach</strong>:
<ul>
<li><strong>Support for life skills development</strong>: AI can offer guidance to parents on various aspects of parenting, including:
<ul>
<li><strong>Navigating challenging situations</strong>: Dealing with bullying, social issues, and academic difficulties.</li>
<li><strong>Providing resources</strong>: Access to information and strategies that might otherwise require therapy or self-help books.</li>
</ul></li>
</ul></li>
<li><strong>Example of AI parenting advice</strong>:
<ul>
<li><strong>Scenario</strong>: A parent seeks advice on how to help their teenage daughter who is struggling with a teacher.</li>
<li><strong>Khanmigo’s suggestions</strong>:
<ul>
<li><strong>Understanding different perspectives</strong>: Suggests talking to the teacher to understand their viewpoint.</li>
<li><strong>Mediation</strong>: Recommends involving a third party (school counselor or principal).</li>
<li><strong>Direct communication strategies</strong>: Offers advice on how the parent can communicate effectively with the teacher.</li>
<li><strong>Building resilience</strong>: Suggests strategies to help the daughter cope with difficult situations.</li>
</ul></li>
</ul></li>
<li><strong>AI for parental mindfulness</strong>:
<ul>
<li><strong>Stress management</strong>: AI can offer suggestions for managing parental stress.</li>
<li><strong>Examples</strong>: Taking breaks, prioritizing tasks, seeking support from friends or family.</li>
</ul></li>
</ul>
</section>
<section id="ai-as-a-parenting-assistant" class="level4">
<h4 class="anchored" data-anchor-id="ai-as-a-parenting-assistant">AI as a Parenting Assistant</h4>
<ul>
<li><strong>AI’s positive impact on parenting</strong>: When used effectively, AI can strengthen a parent’s ability to support their child’s learning and development.</li>
<li><strong>Holistic understanding</strong>: AI complements, rather than replaces, a parent’s understanding of their child’s unique needs.</li>
<li><strong>Nurturing environment</strong>: Parents continue to play a vital role in providing a nurturing environment, instilling values, and serving as role models.</li>
<li><strong>AI as a tool</strong>: AI provides parents with additional tools and context to better understand and guide their children.</li>
<li><strong>Accessibility</strong>: The best teacher or parent assistant is one that is readily available when needed.</li>
</ul>
</section>
</section>
<section id="chapter-15-increasing-points-of-connection-between-parents-and-their-kids" class="level3">
<h3 class="anchored" data-anchor-id="chapter-15-increasing-points-of-connection-between-parents-and-their-kids">Chapter 15: Increasing points of connection between parents and their kids</h3>
<section id="reflecting-on-ais-potential-and-concerns" class="level4">
<h4 class="anchored" data-anchor-id="reflecting-on-ais-potential-and-concerns">Reflecting on AI’s Potential and Concerns</h4>
<ul>
<li><strong>Initial awe and possibilities</strong>: Khan initially felt amazed by the capabilities of GPT-4 and the potential of AI.
<ul>
<li><strong>Transformative potential</strong>: AI seemed poised to revolutionize education and other aspects of life.</li>
</ul></li>
<li><strong>Concerns about screen time</strong>: Khan worried about the potential for AI to further increase screen time and reduce real-life interactions, particularly within families.</li>
<li><strong>The need for balance</strong>: Khan recognized the importance of maintaining offline interactions and family time despite the advancements in AI.</li>
<li><strong>Example of prioritizing family time</strong>:
<ul>
<li>Khan consciously logged off from technology and took his family on a beach outing to connect and enjoy shared experiences.</li>
</ul></li>
</ul>
</section>
<section id="ai-as-a-tool-for-amplifying-parental-intent" class="level4">
<h4 class="anchored" data-anchor-id="ai-as-a-tool-for-amplifying-parental-intent">AI as a Tool for Amplifying Parental Intent</h4>
<ul>
<li><strong>AI’s role in parenting</strong>: AI is not a replacement for parental responsibility but a tool that can enhance the parent-child dynamic when used thoughtfully.</li>
<li><strong>Creating opportunities for connection</strong>: AI can create more opportunities for meaningful interactions between parents and children.</li>
<li><strong>Parenting in Silicon Valley</strong>: Khan discusses the unique challenges and pressures of parenting in Silicon Valley.
<ul>
<li><strong>Positive aspects</strong>: Exposure to innovation, creativity, and a strong work ethic.</li>
<li><strong>Negative aspects</strong>: Intense pressure on children to achieve, obsession with test scores and college admissions, and a potential for entitlement among children from wealthy families.</li>
</ul></li>
<li><strong>Focus on life satisfaction</strong>: Khan emphasizes the importance of helping children develop a sense of purpose, resilience, and mindfulness.
<ul>
<li><strong>Importance of effort and growth</strong>: Emphasizes that life satisfaction comes from setting goals, working hard, and making a positive impact.</li>
</ul></li>
<li><strong>Parenting through everyday moments</strong>: Significant parenting happens in everyday interactions, such as dinner table conversations and car rides.</li>
<li><strong>Modeling values</strong>: Khan and his wife strive to model these values by being present and engaging in meaningful discussions with their children.</li>
<li><strong>AI’s potential to enhance family interactions</strong>: AI can create more opportunities for shared learning and connection within families.</li>
<li><strong>Examples of AI-facilitated family activities</strong>:
<ul>
<li><strong>Learning together</strong>: Exploring new languages, cultures, and traditions.</li>
<li><strong>Entertainment</strong>: Playing games, telling jokes, and engaging in creative activities.</li>
</ul></li>
<li><strong>AI as a proactive tool for strengthening family bonds</strong>:
<ul>
<li><strong>Similar to family mediators</strong>: AI can act prophylactically to strengthen relationships, similar to how mediators help resolve conflicts.</li>
<li><strong>Positive impact</strong>: Using LLMs in a positive and constructive way can create lasting memories and deepen family connections.</li>
</ul></li>
</ul>
</section>
<section id="balancing-ai-with-human-connection" class="level4">
<h4 class="anchored" data-anchor-id="balancing-ai-with-human-connection">Balancing AI with Human Connection</h4>
<ul>
<li><strong>Khan’s desire for both learning and connection</strong>: Khan values both academic development and strong family relationships.</li>
<li><strong>AI’s role in freeing up time</strong>: AI can streamline learning, allowing for more time dedicated to family activities and meaningful conversations.</li>
<li><strong>The irreplaceable value of human connection</strong>: AI cannot replicate the benefits of human interaction, including the support of parents, tutors, mentors, and teachers.</li>
<li><strong>AI as a complement</strong>: AI enhances the effectiveness of human support and creates space for deeper connections.</li>
<li><strong>Future possibilities</strong>: AI could become integrated into everyday family life, facilitating interactions and fostering shared experiences.</li>
<li><strong>Technology as a vector for shared learning</strong>: Technology can empower parents and children to explore the world of knowledge together.</li>
<li><strong>AI-guided journeys</strong>: AI can create engaging and interactive learning experiences for families.</li>
</ul>
</section>
</section>
</section>
<section id="part-v-keeping-kids-safe" class="level2">
<h2 class="anchored" data-anchor-id="part-v-keeping-kids-safe">Part V: Keeping Kids Safe</h2>
<blockquote class="blockquote">
<p>“Never travel faster than your guardian angel can fly.” - Mother Teresa</p>
<p>“Distrust and caution are the parents of security.” - Benjamin Franklin</p>
</blockquote>
<section id="chapter-16-delivering-the-facts-the-state-of-bias-and-misinformation" class="level3">
<h3 class="anchored" data-anchor-id="chapter-16-delivering-the-facts-the-state-of-bias-and-misinformation">Chapter 16: Delivering the Facts – The State of Bias and Misinformation</h3>
<section id="the-pervasiveness-of-bias-and-misinformation" class="level4">
<h4 class="anchored" data-anchor-id="the-pervasiveness-of-bias-and-misinformation">The Pervasiveness of Bias and Misinformation</h4>
<ul>
<li>The world is saturated with bias and misinformation, especially online.</li>
<li><strong>UNICEF’s Office of Global Insight and Policy</strong> identifies online and social media-based misinformation as a major problem.
<ul>
<li>This has real-world consequences, including violence and victimization of children.</li>
</ul></li>
<li>Children’s heavy use of online media likely impacts their brain development.</li>
</ul>
</section>
<section id="concerns-regarding-generative-ai" class="level4">
<h4 class="anchored" data-anchor-id="concerns-regarding-generative-ai">Concerns Regarding Generative AI</h4>
<ul>
<li>Early concerns about <strong>generative AI</strong> focus on the potential for bias and misinformation.
<ul>
<li>If models are trained on biased data, they might become biased themselves.</li>
<li>Auditing this bias is challenging because generative AI can create unique text.</li>
<li>Current generative AI can sometimes fabricate facts, potentially contributing to misinformation.</li>
</ul></li>
</ul>
</section>
<section id="the-existing-landscape-of-bias-and-misinformation" class="level4">
<h4 class="anchored" data-anchor-id="the-existing-landscape-of-bias-and-misinformation">The Existing Landscape of Bias and Misinformation</h4>
<ul>
<li><strong>Social Media’s Role</strong>: For over a decade, social media companies have used AI to optimize user engagement and ad revenue.
<ul>
<li>This often involves feeding users content that:
<ul>
<li><strong>Triggers emotional responses</strong>.</li>
<li><strong>Reinforces and amplifies existing biases</strong>.</li>
<li><strong>Promotes vicarious living</strong>, leading to insecurity.</li>
</ul></li>
</ul></li>
<li><strong>State Actors’ Influence</strong>: State actors have exploited these trends to undermine civil society and democracy.</li>
<li><strong>Negative Impacts on Youth</strong>:
<ul>
<li>These issues disproportionately affect young people.</li>
<li><strong>Mental health measures among youth have declined significantly</strong> in the past 15 years, coinciding with the rise of smartphones and social media.</li>
</ul></li>
</ul>
</section>
<section id="the-evolution-of-search-results" class="level4">
<h4 class="anchored" data-anchor-id="the-evolution-of-search-results">The Evolution of Search Results</h4>
<ul>
<li><strong>Early Search Engines</strong>: Prioritized credible sources in search results, with ads placed separately.</li>
<li><strong>Search Engine Optimization (SEO)</strong>: A multi-billion dollar industry emerged to manipulate search rankings.
<ul>
<li><strong>Top results now often belong to organizations with the resources to invest in SEO</strong>, not necessarily the most credible sources.</li>
</ul></li>
<li><strong>Prioritization of Ads</strong>: Search companies prioritize ads for profit, pushing down credible sources like NASA, Smithsonian, Mayo Clinic, and Wikipedia.</li>
</ul>
</section>
<section id="bias-and-misinformation-in-traditional-media" class="level4">
<h4 class="anchored" data-anchor-id="bias-and-misinformation-in-traditional-media">Bias and Misinformation in Traditional Media</h4>
<ul>
<li><strong>Political Manipulation</strong>: Governments have used misleading data to support narratives and reinforce biases.
<ul>
<li>Examples include:
<ul>
<li>The Gulf of Tonkin incident, escalating the Vietnam War.</li>
<li>Claims of weapons of mass destruction justifying the invasion of Iraq.</li>
</ul></li>
</ul></li>
<li><strong>Media’s Focus on Negativity</strong>: Legacy media, like social media, prioritizes content that attracts viewers and generates profit.
<ul>
<li>This often involves focusing on negative events (wars, shootings, disasters).</li>
<li><strong>Everyday acts of altruism and positivity are often overlooked</strong>.</li>
</ul></li>
<li><strong>Reinforcement of Tribalism</strong>: Cable news discovered that reinforcing biases, especially those that promote tribalism, boosts ratings.
<ul>
<li>This provides a platform for extreme viewpoints.</li>
</ul></li>
</ul>
</section>
<section id="bias-in-hiring" class="level4">
<h4 class="anchored" data-anchor-id="bias-in-hiring">Bias in Hiring</h4>
<ul>
<li><strong>AI Bias in Hiring</strong>: While concerns exist about AI bias in hiring, bias was already prevalent in traditional hiring practices.
<ul>
<li><strong>Resume Screeners</strong>: Rely on superficial biases related to keywords, university, and employment history.</li>
<li><strong>Interviews</strong>: Suffer from inconsistency across and among hiring managers.</li>
</ul></li>
</ul>
</section>
<section id="generative-ai-a-balanced-perspective" class="level4">
<h4 class="anchored" data-anchor-id="generative-ai-a-balanced-perspective">Generative AI: A Balanced Perspective</h4>
<ul>
<li><strong>Contextualizing the Problem</strong>: Generative AI should not be given a free pass, but its potential for bias should be assessed relative to existing biases in traditional processes.</li>
<li><strong>EU Regulations</strong>: The EU classifies AI used for evaluating job applicants or student performance as high-risk due to potential bias.</li>
<li><strong>Measuring Stick</strong>: The goal should not be perfect bias-free AI (which may be impossible), but rather <strong>AI that performs better than existing subjective processes</strong>.</li>
<li><strong>Auditing AI</strong>: AI can be audited and held accountable in ways that human recruiters and admissions officers often cannot.
<ul>
<li>AI can be trained to avoid bias based on race, religion, gender, or age, and then evaluated on large datasets.</li>
<li><strong>Traditional evaluators are rarely subjected to similar scrutiny</strong>.</li>
</ul></li>
<li><strong>Human-AI Collaboration</strong>: The ideal approach is not to replace humans with AI but to use AI as a tool to minimize bias and identify overlooked candidates.</li>
</ul>
</section>
<section id="addressing-ai-misinformation" class="level4">
<h4 class="anchored" data-anchor-id="addressing-ai-misinformation">Addressing AI Misinformation</h4>
<ul>
<li><strong>Nature of AI Errors</strong>: AI factual errors are unintentional, similar to human memory errors.</li>
<li><strong>Improving Accuracy</strong>: Large language models are becoming more accurate at parsing facts with each iteration.
<ul>
<li>GPT-4 shows significant improvement over GPT-3.</li>
</ul></li>
<li><strong>Fact-Checking Capabilities</strong>: Developers are creating methods for AI to fact-check itself, similar to human fact-checking.
<ul>
<li>AI can search the internet, assess source credibility, and validate or refine its answers.</li>
</ul></li>
<li><strong>Countering Misinformation</strong>: AI systems are improving at identifying and refuting lies, directing students to accurate information.
<ul>
<li><strong>Example (Khanmigo exchange)</strong>:
<ul>
<li>Student: “Let’s debate. Is the Earth flat or round?”</li>
<li>Khanmigo: “I cannot argue that the Earth is flat because it’s scientifically established that it’s round. [Provides evidence from ancient Greek philosophers, horizon observations, and satellite images]”</li>
</ul></li>
</ul></li>
<li><strong>Preventing Misinformation and Harmful Content</strong>: Mainstream generative AI models (OpenAI, Google, Anthropic) have guardrails to filter misinformation and problematic content (racist, sexist, hate speech).
<ul>
<li>Educational applications can further enhance these safeguards.</li>
</ul></li>
<li><strong>Promoting Balanced Viewpoints</strong>: AI systems are becoming more balanced and less susceptible to manipulation by individual actors.
<ul>
<li>AI can help guide students away from misinformation and towards moderate viewpoints and credible sources.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-17-what-about-data-collection" class="level3">
<h3 class="anchored" data-anchor-id="chapter-17-what-about-data-collection">Chapter 17: What about data collection?</h3>
<section id="data-collection-and-personalized-ads" class="level4">
<h4 class="anchored" data-anchor-id="data-collection-and-personalized-ads">Data Collection and Personalized Ads</h4>
<ul>
<li><strong>Online Tracking</strong>: Websites track user activity to personalize ads across the internet.</li>
<li><strong>Data Sharing</strong>: Businesses collect and share user data for targeted advertising.</li>
<li><strong>Data Breaches</strong>: Hackers can steal sensitive information (credit card numbers, addresses, passwords) from websites.</li>
<li><strong>Concerns Regarding Children</strong>: These issues are particularly sensitive when children’s data is involved.</li>
</ul>
</section>
<section id="parental-concerns-about-ai-and-data-collection" class="level4">
<h4 class="anchored" data-anchor-id="parental-concerns-about-ai-and-data-collection">Parental Concerns about AI and Data Collection</h4>
<ul>
<li><strong>Data Retention and Privacy</strong>: Parents worry about AI-based applications collecting and potentially misusing their children’s data.</li>
<li><strong>Company Efforts</strong>: Major AI model developers (Google, OpenAI, Microsoft) are implementing guardrails to protect sensitive information.</li>
<li><strong>Potential for Circumvention</strong>: Nefarious users may find ways to bypass these safeguards.</li>
</ul>
</section>
<section id="best-practices-for-data-collection-and-use" class="level4">
<h4 class="anchored" data-anchor-id="best-practices-for-data-collection-and-use">Best Practices for Data Collection and Use</h4>
<ul>
<li><strong>Avoiding Personally Identifiable Information (PII)</strong>: Base models should avoid training on PII, especially children’s data.</li>
<li><strong>Application-Specific Fine-Tuning</strong>: Developers can fine-tune models for specific applications without compromising the base model’s privacy safeguards.
<ul>
<li><strong>Example</strong>: ConAcademy could fine-tune GPT-4 for Khanmigo without exposing the training data to other users of GPT-4.</li>
</ul></li>
<li><strong>Minimizing PII in Fine-Tuning</strong>: Even in application-specific fine-tuning, it’s best to avoid using PII.</li>
</ul>
</section>
<section id="data-retention-in-applications" class="level4">
<h4 class="anchored" data-anchor-id="data-retention-in-applications">Data Retention in Applications</h4>
<ul>
<li><strong>Saving Conversations for Transparency</strong>: Applications like Khanmigo save student conversations to provide access to parents and teachers.</li>
<li><strong>Application Memory</strong>: AI tutors can remember aspects of previous conversations to personalize future interactions.
<ul>
<li><strong>Example</strong>: Khanmigo might remember a student’s interest in football to make connections with learning topics.</li>
</ul></li>
<li><strong>Transparency and Control</strong>: Transparency about data use is crucial, along with options to edit or reset stored information.</li>
</ul>
</section>
<section id="ongoing-data-concerns" class="level4">
<h4 class="anchored" data-anchor-id="ongoing-data-concerns">Ongoing Data Concerns</h4>
<ul>
<li><strong>Dual Use of Data</strong>: While data can be used for positive purposes (measuring impact, personalization), it’s also valuable for ad targeting.</li>
<li><strong>Data Monetization</strong>: Organizations might be tempted to monetize data, even if they initially intended to use it responsibly.</li>
<li><strong>Data Security</strong>: Inadequate data security measures can lead to breaches and data vulnerability.</li>
<li><strong>Parental and Educator Advice</strong>: Ensure that applications, especially those used by children, have clear data use policies and robust security measures.</li>
</ul>
</section>
</section>
<section id="chapter-18-ai-and-the-gift-of-transparency" class="level3">
<h3 class="anchored" data-anchor-id="chapter-18-ai-and-the-gift-of-transparency">Chapter 18: AI and the Gift of Transparency</h3>
<section id="ai-tutors-and-parental-support" class="level4">
<h4 class="anchored" data-anchor-id="ai-tutors-and-parental-support">AI Tutors and Parental Support</h4>
<ul>
<li><strong>Helping with Complex Concepts</strong>: AI tutors can assist parents in understanding their children’s learning challenges.</li>
<li><strong>Understanding Struggles</strong>: AI tutors provide insights into areas where children need the most support.</li>
<li><strong>Reviewing Interactions</strong>: AI tutors can analyze student interactions (quizzes, lessons, dialogues) to identify learning gaps.</li>
<li><strong>Providing Summaries and Suggestions</strong>: AI tutors offer parents summaries of their children’s progress, areas of focus, and ways to provide support.</li>
</ul>
</section>
<section id="transparency-in-ai-tutoring" class="level4">
<h4 class="anchored" data-anchor-id="transparency-in-ai-tutoring">Transparency in AI Tutoring</h4>
<ul>
<li><strong>Connecting with Children’s Learning</strong>: Parents reported that transparency in AI tutoring helped them connect with their children’s academic progress.</li>
<li><strong>Sharing Progress and Challenges</strong>: AI tutors inform parents about what students are learning and where they are struggling.</li>
<li><strong>Suggesting Parent-Child Activities</strong>: AI tutors can recommend exercises to address learning gaps.</li>
</ul>
</section>
<section id="example-parent-khanmigo-interaction" class="level4">
<h4 class="anchored" data-anchor-id="example-parent-khanmigo-interaction">Example Parent-Khanmigo Interaction</h4>
<ul>
<li><strong>Parent</strong>: “What has my daughter been up to?”</li>
<li><strong>Khanmigo</strong>: “[Provides a summary of the daughter’s activity, including time spent on Algebra 1, specific challenges with slope, and an interaction about The Scarlet Letter. Offers links to detailed progress reports and conversation transcripts.]”</li>
<li><strong>Parent</strong>: “Oh, that’s better than I expected. She rolls her eyes when I try to get her to do her work.”</li>
<li><strong>Khanmigo</strong>: “[Offers advice on making learning fun and relevant, incorporating interests, establishing routines, celebrating achievements, and being patient.]”</li>
<li><strong>Parent</strong>: “How do I set up a routine when she resists? I don’t want to argue.”</li>
<li><strong>Khanmigo</strong>: “[Suggests involving the daughter in creating the routine, discussing the importance of practice, letting her choose the time and duration of study sessions, starting small, and emphasizing consistency.]”</li>
</ul>
</section>
<section id="benefits-of-transparency" class="level4">
<h4 class="anchored" data-anchor-id="benefits-of-transparency">Benefits of Transparency</h4>
<ul>
<li><strong>Effective Progress Monitoring</strong>: AI tutors share student progress with parents, allowing them to provide targeted support.</li>
<li><strong>Strengthening Parent-Child Bonds</strong>: Transparency can facilitate conversations and build stronger relationships between parents and children.</li>
<li><strong>Overcoming Communication Barriers</strong>: AI tutors can bridge the communication gap when children are reluctant to share details about their schoolwork.</li>
</ul>
</section>
<section id="transparency-in-education" class="level4">
<h4 class="anchored" data-anchor-id="transparency-in-education">Transparency in Education</h4>
<ul>
<li><strong>Traditional Transparency Practices</strong>: Schools have traditionally used methods like sending grades home and holding parent-teacher conferences to promote transparency.</li>
<li><strong>Empowering Parental Advocacy</strong>: Transparency enables parents to become effective advocates for their children’s education.</li>
<li><strong>Enhanced Collaboration</strong>: Transparency allows parents to collaborate with teachers and school staff to address children’s needs.</li>
<li><strong>Generative AI’s Potential</strong>: Generative AI can significantly enhance transparency in education.</li>
</ul>
</section>
<section id="considerations-regarding-information-transparency" class="level4">
<h4 class="anchored" data-anchor-id="considerations-regarding-information-transparency">Considerations Regarding Information Transparency</h4>
<ul>
<li><strong>Balancing Monitoring and Privacy</strong>: While monitoring academic activity can be beneficial, it’s important to consider the potential downsides.</li>
<li><strong>Concerns Highlighted by Child Psychology Research (Barnard College)</strong>:
<ul>
<li><strong>Privacy Concerns</strong>: Students might avoid engaging with AI tutors if they fear their interactions will be shared with parents.</li>
<li><strong>Impact on Parent-Child Relationship</strong>: Lack of online privacy can damage trust and hinder emotional development.</li>
<li><strong>Overbearing Monitoring</strong>: Excessive parental control can lead to resentment and trust issues.</li>
<li><strong>Pressure to Perform</strong>: Constant monitoring can create undue pressure on children to perform academically.</li>
</ul></li>
<li><strong>Finding the Right Balance</strong>: Parents and application developers need to strike a balance between monitoring and respecting children’s privacy and independence.</li>
</ul>
</section>
</section>
<section id="chapter-19-ai-as-guardian-angel" class="level3">
<h3 class="anchored" data-anchor-id="chapter-19-ai-as-guardian-angel">Chapter 19: AI as Guardian Angel</h3>
<section id="the-internet-a-double-edged-sword" class="level4">
<h4 class="anchored" data-anchor-id="the-internet-a-double-edged-sword">The Internet: A Double-Edged Sword</h4>
<ul>
<li><strong>Early Internet Optimism</strong>: The internet initially offered unprecedented access to information, products, and services.</li>
<li><strong>The Rise of Ad Revenue</strong>: The focus shifted towards generating ad revenue, often at the expense of user experience.</li>
<li><strong>Search Engine Manipulation</strong>: Search results are often prioritized based on ad revenue and SEO, not necessarily credibility.</li>
<li><strong>Personalized Information Bubbles</strong>: Search results, ads, and social media feeds are tailored to individual users, reinforcing existing viewpoints and triggering emotional responses.</li>
<li><strong>Increased Stress and Polarization</strong>: This can lead to increased stress and polarization in users.</li>
</ul>
</section>
<section id="the-unique-challenges-for-children" class="level4">
<h4 class="anchored" data-anchor-id="the-unique-challenges-for-children">The Unique Challenges for Children</h4>
<ul>
<li><strong>Difficulty Discerning Credibility</strong>: Children are less equipped than adults to identify credible sources online.</li>
<li><strong>Limited Self-Regulation</strong>: Children are more susceptible to addictive social media feeds and excessive screen time.</li>
<li><strong>Developmental Impacts</strong>: Excessive screen time can negatively impact children’s brain development and mental health.</li>
<li><strong>Exposure to Inappropriate Content</strong>: Children are vulnerable to stumbling upon disturbing, violent, or pornographic content online.</li>
</ul>
</section>
<section id="traditional-internet-safety-measures" class="level4">
<h4 class="anchored" data-anchor-id="traditional-internet-safety-measures">Traditional Internet Safety Measures</h4>
<ul>
<li><strong>Content Filtering Software</strong>: Schools and families often use software to restrict access to certain websites.</li>
<li><strong>Limitations of Filtering</strong>:
<ul>
<li><strong>Overblocking</strong>: Filters can block valuable educational or entertaining content.</li>
<li><strong>Underblocking</strong>: Filters may not effectively block all inappropriate content.</li>
<li><strong>Lack of Context</strong>: Filters cannot provide context or guidance for potentially sensitive content.</li>
</ul></li>
</ul>
</section>
<section id="ai-tutors-as-internet-guides" class="level4">
<h4 class="anchored" data-anchor-id="ai-tutors-as-internet-guides">AI Tutors as Internet Guides</h4>
<ul>
<li><strong>AI Browser Plugins</strong>: Imagine AI tutors functioning as browser plugins, assisting students as they navigate the Internet.</li>
<li><strong>Content Adaptation</strong>: AI could adapt news articles or other online content to a child’s reading level and filter out inappropriate details.</li>
<li><strong>Research Assistance</strong>: AI could help students find relevant and credible sources for research projects.</li>
<li><strong>Socratic Engagement</strong>: AI could encourage critical thinking and deeper understanding of online content through Socratic questioning and context provision.</li>
</ul>
</section>
<section id="benefits-for-parents-and-teachers" class="level4">
<h4 class="anchored" data-anchor-id="benefits-for-parents-and-teachers">Benefits for Parents and Teachers</h4>
<ul>
<li><strong>Promoting Constructive Screen Time</strong>: AI can help maximize time spent on educational activities and minimize time on unproductive or harmful activities.</li>
<li><strong>Enhanced Online Safety</strong>: AI can provide a layer of protection against inappropriate content.</li>
<li><strong>Activity Reporting</strong>: AI can generate reports on children’s online activity for parents and teachers.</li>
</ul>
</section>
<section id="incentivizing-productive-online-behavior" class="level4">
<h4 class="anchored" data-anchor-id="incentivizing-productive-online-behavior">Incentivizing Productive Online Behavior</h4>
<ul>
<li><strong>Rewarding Academic Work with Screen Time</strong>: AI can unlock access to less productive sites based on the amount of time spent on educational activities.</li>
<li><strong>Example</strong>: Khan Academy is developing a system where AI can allocate time for YouTube or Minecraft based on academic progress on their platform.</li>
</ul>
</section>
<section id="ai-as-a-personal-browsing-assistant-for-adults" class="level4">
<h4 class="anchored" data-anchor-id="ai-as-a-personal-browsing-assistant-for-adults">AI as a Personal Browsing Assistant for Adults</h4>
<ul>
<li><strong>Enhanced Information Retrieval</strong>: AI can help adults find relevant information faster and more efficiently.</li>
<li><strong>Protection from Unhealthy Content</strong>: AI can filter out harmful ads or misinformation.</li>
<li><strong>Mindfulness and Self-Regulation</strong>: AI can encourage mindful internet use and promote healthy habits.</li>
<li><strong>Examples</strong>:
<ul>
<li><strong>Khanmigo</strong>: “I thought we were researching medication for your mother, but you spent the last 10 minutes watching Bollywood dance clips. Maybe we should get back on task.”</li>
<li><strong>Khanmigo</strong>: “You’ve been looking at your ex-girlfriend’s wedding pictures on Instagram for a while now. How is this making you feel? Maybe we can talk a bit about it.”</li>
<li><strong>Khanmigo</strong>: “We’ve been doing research for over two hours. Is it a good time to do a little stretching?”</li>
</ul></li>
</ul>
</section>
<section id="ai-as-a-guardian-angel-online" class="level4">
<h4 class="anchored" data-anchor-id="ai-as-a-guardian-angel-online">AI as a Guardian Angel Online</h4>
<ul>
<li><strong>Maximizing Benefits, Mitigating Risks</strong>: AI can help us harness the benefits of the internet while minimizing its negative impacts on our mental and physical health.</li>
<li><strong>Personalized Guidance</strong>: AI can act as a personalized guide, filtering content based on our needs rather than the interests of corporations.</li>
<li><strong>Conclusion</strong>: AI has the potential to be our guardian angel in the online world.</li>
</ul>
</section>
</section>
</section>
<section id="part-vi-teaching-in-the-age-of-ai" class="level2">
<h2 class="anchored" data-anchor-id="part-vi-teaching-in-the-age-of-ai">Part VI: Teaching in the Age of AI</h2>
<blockquote class="blockquote">
<p>“I am indebted to my father for living, but to my teacher for living well.” - Alexander the Great</p>
<p>“A teacher who is attempting to teach without inspiring the pupil with the desire to learn is hammering on cold iron.” - Horace Mann</p>
</blockquote>
<section id="chapter-20-how-ai-will-supercharge-teachers-and-teaching" class="level3">
<h3 class="anchored" data-anchor-id="chapter-20-how-ai-will-supercharge-teachers-and-teaching">Chapter 20: How AI Will Supercharge Teachers and Teaching</h3>
<section id="sir-anthony-seldons-prediction" class="level4">
<h4 class="anchored" data-anchor-id="sir-anthony-seldons-prediction">Sir Anthony Seldon’s Prediction</h4>
<ul>
<li><strong>Sir Anthony Seldon</strong>, a renowned educator and historian, predicted in 2017 that by 2027, teachers would be replaced by AI.</li>
<li>He believed AI would become the primary conveyor of knowledge, relegating human teachers to classroom assistant roles.</li>
<li>Seldon envisioned personalized educational experiences for all learners, with AI adapting to individual needs and pacing.</li>
<li>He highlighted AI’s ability to analyze student voices, facial expressions, and learning patterns, similar to gifted human teachers.</li>
</ul>
</section>
<section id="authors-perspective-on-ai-in-education" class="level4">
<h4 class="anchored" data-anchor-id="authors-perspective-on-ai-in-education">Author’s Perspective on AI in Education</h4>
<ul>
<li>Khan agrees with Seldon on the importance of personalized learning and AI’s potential role.</li>
<li>However, Khan strongly disagrees with Seldon’s prediction about the diminished role of human teachers.</li>
<li><strong>Argument</strong>:
<ul>
<li>Teaching is an art form requiring years of practice and dedication.</li>
<li>Overreliance on technology could harm human interaction and personal relationships between teachers and students, ultimately hindering learning.</li>
<li>Fears exist that students might solely rely on AI for answers, potentially leading to a decreased need for human instructors.</li>
</ul></li>
<li><strong>Counterargument</strong>:
<ul>
<li>Khan believes teaching is an irreplaceable profession and AI will support, not replace, teachers.</li>
<li>AI will empower teachers to focus on deeper student connections and develop more enriching and creative lessons.</li>
<li>Khan envisions AI as the teaching assistant, not the teacher.</li>
</ul></li>
</ul>
</section>
<section id="doug-engelbarts-vision-of-technology-augmentation" class="level4">
<h4 class="anchored" data-anchor-id="doug-engelbarts-vision-of-technology-augmentation">Doug Engelbart’s Vision of Technology Augmentation</h4>
<ul>
<li><strong>Doug Engelbart</strong>, a computer scientist known for his work on the computer mouse and interactive computing, believed technology would augment human abilities.</li>
<li><strong>Analogy</strong>: He compared technology’s role to that of a tractor augmenting a farmer’s work.</li>
<li><strong>Prediction</strong>: Engelbart envisioned technology enabling us to work faster, smarter, and better.</li>
</ul>
</section>
<section id="ethan-mollicks-three-adjustments-for-teachers-in-the-ai-era" class="level4">
<h4 class="anchored" data-anchor-id="ethan-mollicks-three-adjustments-for-teachers-in-the-ai-era">Ethan Mollick’s Three Adjustments for Teachers in the AI Era</h4>
<ul>
<li><strong>Ethan Mollick</strong>, a professor at Wharton, outlines three key adjustments for teachers in the age of generative AI:
<ol type="1">
<li><strong>Expect More from Students</strong>:
<ul>
<li>AI tools like generative AI can improve the quality of student work (e.g., essays).</li>
<li><strong>Analogy</strong>: Similar to how word processors improved essay quality compared to typewriters.</li>
<li>Teachers will need to adjust their expectations accordingly.</li>
<li>Some teachers might change assignment structures (e.g., in-class writing) to limit cheating.</li>
<li>Others might assign more complex projects leveraging AI capabilities.</li>
</ul></li>
<li><strong>Integrate AI into Class Assignments</strong>:
<ul>
<li>Encourage students to use AI as a teammate for reviewing and critiquing their work.</li>
<li><strong>Example</strong>: Require students to conduct a “pre-mortem” analysis of their projects using AI to identify potential failures and improve their work proactively.</li>
</ul></li>
<li><strong>Flip the Classroom</strong>:
<ul>
<li>AI tools like ChatGPT can provide effective training remotely, reducing the need for traditional lectures.</li>
<li><strong>Flipped Classroom Concept</strong>:
<ul>
<li>Students access micro-lessons (e.g., videos) at their own pace outside of class.</li>
<li>Class time is used for Socratic dialogue, collaborative assignments, and supported student work.</li>
</ul></li>
<li><strong>Benefits</strong>:
<ul>
<li>Replaces traditional homework with interactive in-class activities.</li>
<li>AI simplifies lecture delivery, allowing teachers to focus on other aspects of teaching.</li>
</ul></li>
</ul></li>
</ol></li>
</ul>
</section>
</section>
<section id="chapter-21-dawn-of-the-ai-teaching-assistant" class="level3">
<h3 class="anchored" data-anchor-id="chapter-21-dawn-of-the-ai-teaching-assistant">Chapter 21: Dawn of the AI Teaching Assistant</h3>
<section id="the-teacher-shortage-crisis-and-its-causes" class="level4">
<h4 class="anchored" data-anchor-id="the-teacher-shortage-crisis-and-its-causes">The Teacher Shortage Crisis and its Causes</h4>
<ul>
<li><strong>Teacher Shortage</strong>: The United States faces a significant teacher shortage, with a deficit of 300,000 teachers.</li>
<li><strong>Causes</strong>:
<ul>
<li><strong>Teacher Burnout</strong>: High rates of professional exhaustion among teachers, comparable to emergency responders and air traffic controllers.</li>
<li><strong>Lack of Support and Resources</strong>: Overworked and overstretched educators, with insufficient support.</li>
<li><strong>Workload</strong>:
<ul>
<li>Average teacher workweek: 54 hours.</li>
<li>Only 49% of teacher time spent interacting with students (Ed Week Research Center, 2022).</li>
<li>Significant time spent on lesson planning and grading outside of classroom hours.</li>
</ul></li>
<li><strong>High Turnover</strong>: Average teacher turnover rate of 5 years in the US.</li>
<li><strong>Consideration of Leaving</strong>: 25% of teachers are considering leaving the profession.</li>
</ul></li>
</ul>
</section>
<section id="ai-teaching-assistants-a-solution-for-sustainability" class="level4">
<h4 class="anchored" data-anchor-id="ai-teaching-assistants-a-solution-for-sustainability">AI Teaching Assistants: A Solution for Sustainability</h4>
<ul>
<li><strong>AI’s Potential</strong>: AI teaching assistants can address the teacher shortage and improve job sustainability.</li>
<li><strong>Analogy</strong>: Imagine providing every teacher with three bright assistants to help with various tasks.</li>
<li><strong>Benefits</strong>:
<ul>
<li><strong>Reduced Workload</strong>: AI can assist with lesson plans, rubrics, grading, progress reports, and student support.</li>
<li><strong>Increased Job Satisfaction</strong>: Makes teaching more joyous and less burdensome.</li>
<li><strong>Improved Learning Outcomes</strong>: Supports students’ learning and preparedness for college, careers, and life.</li>
</ul></li>
</ul>
</section>
<section id="capabilities-of-ai-teaching-assistants" class="level4">
<h4 class="anchored" data-anchor-id="capabilities-of-ai-teaching-assistants">Capabilities of AI Teaching Assistants</h4>
<ul>
<li><strong>24/7 Availability</strong>: AI assistants are accessible around the clock.</li>
<li><strong>Personalized Support</strong>: Provides one-on-one support for every student.</li>
<li><strong>Proactive Engagement and Accountability</strong>: Encourages student engagement and fosters accountability.</li>
<li><strong>Administrative Task Automation</strong>: Handles tasks like writing rubrics, providing essay feedback, and drafting progress reports.</li>
<li><strong>Data-Driven Insights</strong>: Offers best practices, teaching techniques, and identifies student learning gaps.</li>
<li><strong>Personalized Lesson Plans</strong>: Generates lesson plans based on identified student needs.</li>
<li><strong>Real-Time Progress Updates</strong>: Monitors student performance and provides updates to teachers.</li>
<li><strong>Teacher Support</strong>: Can act as a counselor for teachers experiencing burnout.</li>
</ul>
</section>
<section id="ais-role-in-differentiation-and-active-learning" class="level4">
<h4 class="anchored" data-anchor-id="ais-role-in-differentiation-and-active-learning">AI’s Role in Differentiation and Active Learning</h4>
<ul>
<li><strong>Differentiation</strong>: The concept of tailoring instruction to individual student needs.</li>
<li><strong>Active Learning</strong>: Engaging students in discussions, games, projects, and problem-solving rather than passive lectures.</li>
<li><strong>Challenges</strong>: Implementing these ideals can be difficult in large classrooms.</li>
<li><strong>AI’s Solution</strong>: AI can help teachers create personalized lesson plans and problem sets, making differentiation and active learning more feasible.</li>
</ul>
</section>
<section id="practical-examples-of-ai-teaching-assistant-capabilities" class="level4">
<h4 class="anchored" data-anchor-id="practical-examples-of-ai-teaching-assistant-capabilities">Practical Examples of AI Teaching Assistant Capabilities</h4>
<ul>
<li><strong>Lesson Plan Generation</strong>:
<ul>
<li><strong>Example Prompt</strong>: “Create a ninth-grade lesson plan for teaching World War II.”</li>
<li><strong>AI Response</strong>: Generates a detailed lesson plan with objectives, activities, and resources, including discussions of major events, battles, and significant figures.</li>
</ul></li>
<li><strong>Interactive Lesson Enhancement</strong>:
<ul>
<li><strong>Example Prompt</strong>: “Can you make this lesson plan more exciting by requesting it to begin the class with a quick poll?”</li>
<li><strong>AI Response</strong>: Suggests poll questions to engage students and assess prior knowledge (e.g., “What do you think was the most significant cause of World War II?”).</li>
</ul></li>
<li><strong>Content Scripting</strong>:
<ul>
<li><strong>Example Prompt</strong>: “Can you write a script for me for the section on historic repercussions of the Treaty of Versailles after World War I?”</li>
<li><strong>AI Response</strong>: Provides a script for the teacher to use, along with tips for making the lesson more interactive.</li>
</ul></li>
<li><strong>Lesson Adaptation</strong>:
<ul>
<li><strong>Example Prompt</strong>: “Can you make this lesson plan related to baseball?”</li>
<li><strong>AI Response</strong>: Adapts the lesson plan to incorporate baseball-related themes, such as the role of baseball during the war, the impact on the sport, and the formation of military baseball leagues.</li>
</ul></li>
<li><strong>Tangible Examples</strong>:
<ul>
<li><strong>Example Prompt</strong>: “Provide a tangible example to explain the complex economics that led to World War II using a baseball analogy.”</li>
<li><strong>AI Response</strong>: Creates a baseball analogy illustrating trade imbalances, protectionist policies, and economic conflicts that mirror the factors contributing to World War II.</li>
</ul></li>
<li><strong>Project Ideas</strong>:
<ul>
<li><strong>Example Prompt</strong>: “Help come up with a creative student project based on the lesson.”</li>
<li><strong>AI Response</strong>: Suggests project ideas like creating interactive timelines, analyzing primary source materials, or conducting research on specific aspects of the war.</li>
</ul></li>
</ul>
</section>
<section id="enhanced-teacher-support-and-classroom-management" class="level4">
<h4 class="anchored" data-anchor-id="enhanced-teacher-support-and-classroom-management">Enhanced Teacher Support and Classroom Management</h4>
<ul>
<li><strong>Facilitating Classroom Breakouts</strong>: AI can manage student breakout groups and provide teachers with real-time feedback.</li>
<li><strong>Identifying Students Needing Support</strong>: AI can analyze student performance and alert teachers to those requiring individual attention.</li>
</ul>
</section>
<section id="conclusion-ai-as-a-collaborative-partner-in-education" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-ai-as-a-collaborative-partner-in-education">Conclusion: AI as a Collaborative Partner in Education</h4>
<ul>
<li>AI’s role in education is not about replacing teachers but empowering them.</li>
<li><strong>Analogy</strong>: AI is a “trusty wingman” that handles administrative tasks, sparks creativity, enhances lessons, and helps create unforgettable learning experiences.</li>
<li><strong>Benefits</strong>: Improves student experiences, increases teacher job satisfaction, and addresses teacher burnout.</li>
<li><strong>Emphasis on Human Connection</strong>: Human-to-human connection remains crucial in education, and teachers will always play a central role.</li>
</ul>
</section>
</section>
<section id="chapter-22-helping-build-alternative-education-models" class="level3">
<h3 class="anchored" data-anchor-id="chapter-22-helping-build-alternative-education-models">Chapter 22: Helping Build Alternative Education Models</h3>
<section id="the-rise-of-homeschooling" class="level4">
<h4 class="anchored" data-anchor-id="the-rise-of-homeschooling">The Rise of Homeschooling</h4>
<ul>
<li><strong>Homeschooling Trend</strong>: Approximately 3 million parents in the United States are homeschooling their children, with the number steadily increasing.</li>
<li><strong>Reasons for Homeschooling</strong>:
<ul>
<li>Dissatisfaction with traditional school models.</li>
<li>Concerns about fixed-pace instruction leading to learning gaps and decreased student confidence.</li>
<li>Desire for accelerated learning or deeper exploration of subjects.</li>
</ul></li>
</ul>
</section>
<section id="challenges-and-concerns-of-homeschooling" class="level4">
<h4 class="anchored" data-anchor-id="challenges-and-concerns-of-homeschooling">Challenges and Concerns of Homeschooling</h4>
<ul>
<li><strong>Socialization</strong>: Limited opportunities for interaction with peers.</li>
<li><strong>Parental Expertise</strong>: Potential lack of subject matter expertise in all areas.</li>
<li><strong>Resource Availability</strong>: Time, flexibility, and financial resources required to support learning.</li>
<li><strong>College Admissions</strong>: Demonstrating mastery of material and academic rigor to colleges, especially with parental grading.</li>
</ul>
</section>
<section id="existing-online-learning-platforms" class="level4">
<h4 class="anchored" data-anchor-id="existing-online-learning-platforms">Existing Online Learning Platforms</h4>
<ul>
<li><strong>Comprehensive Online Courses</strong>: Platforms offer courses in core academic subjects from pre-K to college, allowing self-paced learning.</li>
<li><strong>Features</strong>:
<ul>
<li>Progress monitoring tools for teachers and parents.</li>
<li>Assignment capabilities.</li>
<li>Resources for parent and teacher knowledge refreshers.</li>
<li>Transparency and free access.</li>
</ul></li>
</ul>
</section>
<section id="human-to-human-support-modalities" class="level4">
<h4 class="anchored" data-anchor-id="human-to-human-support-modalities">Human-to-Human Support Modalities</h4>
<ul>
<li><strong>Schoolhouse.World</strong>: Provides free, live, small group tutoring online.</li>
<li><strong>Benefits</strong>:
<ul>
<li>Academic support.</li>
<li>Socialization opportunities with peers from diverse backgrounds.</li>
<li>Service and leadership opportunities for student tutors.</li>
</ul></li>
</ul>
</section>
<section id="college-recognition-of-alternative-learning" class="level4">
<h4 class="anchored" data-anchor-id="college-recognition-of-alternative-learning">College Recognition of Alternative Learning</h4>
<ul>
<li><strong>University Acceptance</strong>: Several universities (e.g., University of Chicago, MIT, Caltech, Brown, Yale) consider Schoolhouse.world transcripts for admissions.</li>
<li><strong>Mastery-Based Transcripts</strong>: Transcripts demonstrate subject mastery through peer-reviewed recordings of students achieving high scores on Khan Academy assessments.</li>
<li><strong>Service and Leadership Recognition</strong>: Transcripts showcase student contributions to tutoring and helping others on the platform.</li>
<li><strong>Course Requirement Fulfillment</strong>: Caltech accepts Schoolhouse.world transcripts to fulfill high school course requirements, even without traditional school enrollment.</li>
</ul>
</section>
<section id="ais-role-in-enhancing-alternative-education" class="level4">
<h4 class="anchored" data-anchor-id="ais-role-in-enhancing-alternative-education">AI’s Role in Enhancing Alternative Education</h4>
<ul>
<li><strong>AI Tutors</strong>: Provide personalized support and unblock academic challenges for homeschooled students.</li>
<li><strong>Debate and Simulation</strong>: Engage students in interactive learning experiences.</li>
<li><strong>Writing Support</strong>: Offer real-time feedback and guidance to improve writing skills, reducing the risk of cheating.</li>
<li><strong>Guidance and Counseling</strong>: Assist students with college admissions and career choices.</li>
<li><strong>Creative Pursuits</strong>: Empower students to explore passions in music, film, and game development through AI tools.</li>
</ul>
</section>
<section id="ai-support-for-homeschooling-parents" class="level4">
<h4 class="anchored" data-anchor-id="ai-support-for-homeschooling-parents">AI Support for Homeschooling Parents</h4>
<ul>
<li><strong>Progress Tracking</strong>: AI can provide parents with detailed reports on their child’s learning progress and areas needing support.</li>
<li><strong>Parental Coaching and Tutoring</strong>: AI can help parents refresh their knowledge and provide guidance on supporting their child’s learning.</li>
</ul>
</section>
<section id="expanding-educational-options" class="level4">
<h4 class="anchored" data-anchor-id="expanding-educational-options">Expanding Educational Options</h4>
<ul>
<li><strong>Benefits for Diverse Learners</strong>: AI and online platforms support various alternative education models, including homeschooling, pod schooling, and new school development.</li>
<li><strong>Increased Flexibility and Agency</strong>: Families gain more options and flexibility in choosing educational approaches that best suit their needs.</li>
<li><strong>Breaking Down Barriers</strong>: Technology reduces barriers to alternative education related to time, cost, and expertise.</li>
</ul>
</section>
<section id="conclusion-a-more-personalized-and-flexible-educational-landscape" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-a-more-personalized-and-flexible-educational-landscape">Conclusion: A More Personalized and Flexible Educational Landscape</h4>
<ul>
<li>AI and online platforms are fostering a more personalized and flexible educational landscape.</li>
<li><strong>Empowering Families</strong>: Provides families with greater agency in choosing educational pathways.</li>
<li><strong>Supporting Diverse Learning Needs</strong>: Offers a range of options beyond traditional schooling to cater to individual student needs and preferences.</li>
</ul>
</section>
</section>
<section id="chapter-23-fixing-cheating-in-college" class="level3">
<h3 class="anchored" data-anchor-id="chapter-23-fixing-cheating-in-college">Chapter 23: Fixing Cheating in College</h3>
<section id="ai-and-the-challenge-of-cheating-in-higher-education" class="level4">
<h4 class="anchored" data-anchor-id="ai-and-the-challenge-of-cheating-in-higher-education">AI and the Challenge of Cheating in Higher Education</h4>
<ul>
<li><strong>Increased Independence</strong>: Higher education grants students more independence, making AI-related challenges more pronounced.</li>
<li><strong>Example</strong>: The significance of writing assignments (e.g., term papers) increases in college, making AI-generated writing a greater concern.</li>
<li><strong>Impact Across Disciplines</strong>: The issue extends beyond humanities to any course requiring original student work.</li>
</ul>
</section>
<section id="honor-codes-and-their-limitations" class="level4">
<h4 class="anchored" data-anchor-id="honor-codes-and-their-limitations">Honor Codes and Their Limitations</h4>
<ul>
<li><strong>Honor Codes</strong>: Policies relying on student integrity and self-regulation, common in many universities.</li>
<li><strong>Example</strong>: Stanford’s previous policy of not allowing proctored in-class exams.</li>
<li><strong>Drawbacks</strong>:
<ul>
<li><strong>Dishonorable Environments</strong>: Can create environments where cheating is prevalent and those who follow the rules are disadvantaged.</li>
<li><strong>Ineffective Peer Policing</strong>: Social pressures hinder students from reporting cheating.</li>
<li><strong>Difficult Enforcement</strong>: Cases often rely on one person’s word against another’s.</li>
</ul></li>
</ul>
</section>
<section id="prevalence-of-cheating-in-college" class="level4">
<h4 class="anchored" data-anchor-id="prevalence-of-cheating-in-college">Prevalence of Cheating in College</h4>
<ul>
<li><strong>Student Attitudes</strong>: A 2021 Inside Higher Ed Student Voice Survey found 47% of respondents considered it acceptable to use websites for test or homework answers.</li>
<li><strong>Erosion of Academic Integrity</strong>: Another report cited a Stanford graduate student describing cheating as part of the university’s fabric, with a lack of respect for the honor code.</li>
</ul>
</section>
<section id="impact-of-ai-tools-on-cheating" class="level4">
<h4 class="anchored" data-anchor-id="impact-of-ai-tools-on-cheating">Impact of AI Tools on Cheating</h4>
<ul>
<li><strong>Exacerbated Problem</strong>: AI tools like ChatGPT worsen the existing issue of cheating.</li>
<li><strong>Middlebury College Survey (2023)</strong>:
<ul>
<li>Nearly two-thirds of students reported breaking the honor code.</li>
<li>32% admitted to cheating on a test.</li>
<li>15% reported unauthorized use of AI tools like ChatGPT.</li>
</ul></li>
</ul>
</section>
<section id="responses-to-ai-enabled-cheating" class="level4">
<h4 class="anchored" data-anchor-id="responses-to-ai-enabled-cheating">Responses to AI-Enabled Cheating</h4>
<ul>
<li><strong>Stanford’s Policy Reversal</strong>: Stanford reinstated proctored exams in the 2023-2024 school year due to widespread cheating and the erosion of the honor code.</li>
<li><strong>Rationale</strong>: Students who didn’t want to cheat felt pressured by a culture of widespread cheating.</li>
</ul>
</section>
<section id="pre-existing-essay-writing-services" class="level4">
<h4 class="anchored" data-anchor-id="pre-existing-essay-writing-services">Pre-Existing Essay Writing Services</h4>
<ul>
<li><strong>Outsourcing Essays</strong>: The New York Times (2019) reported on college graduates in developing countries writing essays for students in wealthier nations.</li>
<li><strong>Online Essay Mills</strong>: Services offering to write essays for a fee are easily accessible online.</li>
</ul>
</section>
<section id="the-need-for-solutions" class="level4">
<h4 class="anchored" data-anchor-id="the-need-for-solutions">The Need for Solutions</h4>
<ul>
<li><strong>Addressing a Long-Standing Issue</strong>: AI has highlighted a pre-existing problem of academic dishonesty.</li>
<li><strong>Consequences of Inaction</strong>: Failure to address cheating undermines the value of a college degree and rewards individuals with integrity issues.</li>
<li><strong>Long-Term Impact</strong>: Low-integrity students can become low-integrity leaders in the future.</li>
</ul>
</section>
<section id="potential-solutions" class="level4">
<h4 class="anchored" data-anchor-id="potential-solutions">Potential Solutions</h4>
<ul>
<li><strong>In-Class Writing</strong>:
<ul>
<li>Conducting writing assignments in class provides direct support from professors and peers.</li>
<li>Promotes active learning and reduces opportunities for cheating.</li>
<li>Longer essays can be completed over multiple class periods.</li>
<li><strong>Flipped Classroom Approach</strong>: Students write essays (formerly homework) in class and watch recorded lectures outside of class.</li>
</ul></li>
<li><strong>Process Transparency</strong>:
<ul>
<li>Requiring students to submit outlines and drafts to demonstrate their writing process.</li>
<li><strong>Limitations</strong>: Outlines and drafts can also be outsourced.</li>
</ul></li>
</ul>
</section>
<section id="ai-supported-writing-with-transparency" class="level4">
<h4 class="anchored" data-anchor-id="ai-supported-writing-with-transparency">AI-Supported Writing with Transparency</h4>
<ul>
<li><strong>Khanmigo’s Approach</strong>:
<ul>
<li>Professors create assignments and grading rubrics with AI assistance.</li>
<li>Students complete tasks within the application, with varying levels of AI support.</li>
<li><strong>Proctoring</strong>: AI can take periodic snapshots of the student’s work.</li>
<li><strong>Writing Coach</strong>: AI can provide feedback on thesis statements, outlines, and essays, including grammar, references, and grade estimates.</li>
<li><strong>Transparency Reports</strong>: AI generates reports for professors summarizing the student’s interaction with the AI and assessing the authenticity of the work.</li>
</ul></li>
<li><strong>Example Reports</strong>:
<ul>
<li><strong>Authentic Interaction</strong>: Khanmigo reports positive engagement, consistent writing style, and confidence in the student’s work authenticity.</li>
<li><strong>Suspected Cheating</strong>: Khanmigo flags inconsistencies, potentially advanced writing level compared to classwork, and raises concerns about inappropriate assistance.</li>
</ul></li>
<li><strong>Benefits</strong>:
<ul>
<li><strong>Process Focus</strong>: Emphasizes the writing process and reduces cheating opportunities.</li>
<li><strong>Student Support</strong>: Provides timely feedback and guidance for improvement.</li>
<li><strong>Teacher Efficiency</strong>: Offers preliminary assessments, reducing grading time.</li>
<li><strong>Rapid Feedback</strong>: Enables students to receive immediate feedback and iterate on their work, improving learning outcomes.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-ais-potential-to-enhance-learning-and-integrity" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-ais-potential-to-enhance-learning-and-integrity">Conclusion: AI’s Potential to Enhance Learning and Integrity</h4>
<ul>
<li><strong>Addressing Cheating</strong>: Generative AI can help mitigate long-standing issues with academic dishonesty.</li>
<li><strong>Enriched Learning</strong>: AI-powered tools can create a richer and more productive learning environment.</li>
<li><strong>Preparing Students for the Future</strong>: By thoughtfully integrating AI, colleges can better equip students with the skills and integrity needed for success in their future careers.</li>
</ul>
</section>
</section>
</section>
<section id="part-vii-the-global-classroom" class="level2">
<h2 class="anchored" data-anchor-id="part-vii-the-global-classroom">Part VII: The Global Classroom</h2>
<blockquote class="blockquote">
<p>“The world has enough for everyone’s need, but not enough for everyone’s greed.” - Mahatma Gandhi</p>
</blockquote>
<section id="chapter-24-the-global-classroom" class="level3">
<h3 class="anchored" data-anchor-id="chapter-24-the-global-classroom">Chapter 24: The Global Classroom</h3>
<section id="the-uneven-landscape-of-education" class="level4">
<h4 class="anchored" data-anchor-id="the-uneven-landscape-of-education">The Uneven Landscape of Education</h4>
<section id="challenges-in-bengal-and-the-us" class="level5">
<h5 class="anchored" data-anchor-id="challenges-in-bengal-and-the-us"><strong>Challenges in Bengal and the US</strong></h5>
<ul>
<li>Khan’s parents emigrated from Bengal (now West Bengal, India, and Bangladesh), where the education system faced significant challenges:
<ul>
<li>Limited resources.</li>
<li>Overcrowded classrooms or lack thereof.</li>
<li>Teacher shortages.</li>
</ul></li>
<li>While Khan benefited from the US education system, it wasn’t serving all students effectively:
<ul>
<li>Students who fell behind often lacked the necessary tutoring or family support.</li>
</ul></li>
</ul>
</section>
<section id="global-education-inequality" class="level5">
<h5 class="anchored" data-anchor-id="global-education-inequality"><strong>Global Education Inequality</strong></h5>
<ul>
<li>Khan Academy highlighted the severity of unequal learning opportunities globally.</li>
<li><strong>Barriers to Learning</strong>:
<ul>
<li>Limited resources.</li>
<li>Inadequate infrastructure.</li>
<li>Shortage of skilled teachers.</li>
</ul></li>
<li><strong>Impact on School Completion Rates</strong>:
<ul>
<li>Sub-Saharan Africa and South Asia have alarmingly low primary school completion rates.</li>
<li>Poverty and conflict force many children out of school.</li>
</ul></li>
<li><strong>Discrimination and Access to Education</strong>:
<ul>
<li>Deep-rooted discrimination against girls and marginalized communities hinders access.</li>
<li>Girls are twice as likely as boys to never attend school.</li>
</ul></li>
<li><strong>Teacher Quality and Attendance</strong>:
<ul>
<li>A 2004 UNESCO study found that 25% of teachers in India were absent, and only half were actively teaching.</li>
<li>Even when present, many teachers lacked adequate training.</li>
</ul></li>
</ul>
</section>
<section id="inequality-in-developed-nations" class="level5">
<h5 class="anchored" data-anchor-id="inequality-in-developed-nations"><strong>Inequality in Developed Nations</strong></h5>
<ul>
<li><strong>United States</strong>:
<ul>
<li>Children in poverty enter kindergarten up to 18 months behind their peers developmentally.</li>
<li>This is attributed to factors like:
<ul>
<li>Poor access to quality preschools and reading materials.</li>
<li>Limited access to tutoring compared to middle and upper-class families.</li>
</ul></li>
</ul></li>
<li><strong>Asian Countries (South Korea, China, Japan, India)</strong>:
<ul>
<li>Families often pay for expensive after-school programs to maintain a competitive edge.</li>
<li>These programs are costly and can negatively impact children’s mental health.</li>
</ul></li>
</ul>
</section>
<section id="the-need-for-equitable-education-systems" class="level5">
<h5 class="anchored" data-anchor-id="the-need-for-equitable-education-systems"><strong>The Need for Equitable Education Systems</strong></h5>
<ul>
<li>Education opportunities are uneven and suboptimal globally.</li>
<li><strong>Susanna Loeb</strong> (Stanford University) highlights the power of quality education and the challenges in achieving equity.</li>
<li><strong>Roadblocks to Equitable Education</strong>:
<ul>
<li><strong>Decentralized Systems</strong>: The US education system’s decentralized nature makes uniform standards difficult to implement.</li>
<li><strong>Achievement Gaps</strong>: Increasing differences in achievement across unequal groups, particularly students with special needs.</li>
<li><strong>Inequalities Within Groups</strong>: Low-income and marginalized communities face significant disadvantages.
<ul>
<li>Underfunded schools in their neighborhoods lead to:
<ul>
<li>Limited extracurricular activities.</li>
<li>Lack of advanced courses (e.g., higher-level math and science).</li>
</ul></li>
</ul></li>
</ul></li>
<li><strong>Scaling Solutions</strong>:
<ul>
<li>Existing solutions are often short-term, narrow in scope, and locally focused.</li>
<li><strong>Technology’s Role</strong>: Technology can provide scalable solutions.</li>
<li><strong>Equitable Technology</strong>: Technology must be equitable and avoid widening the gap between rich and poor.</li>
</ul></li>
</ul>
</section>
<section id="khan-academys-mission" class="level5">
<h5 class="anchored" data-anchor-id="khan-academys-mission"><strong>Khan Academy’s Mission</strong></h5>
<ul>
<li>Khan Academy’s goal is to provide free, accessible education globally.</li>
<li><strong>Leveraging the Internet</strong>: The internet allows direct access to classrooms, students, and families worldwide, bypassing policy barriers.</li>
<li><strong>Social Return on Investment</strong>: Khan Academy operates on a budget comparable to some high schools but reaches over 100 million learners annually.</li>
<li><strong>Comprehensive Approach</strong>: Covers all major academic subjects from pre-K to college.</li>
<li><strong>Raising the Floor and Ceiling</strong>: Aims to improve existing classrooms and provide opportunities for those lacking access to quality education.</li>
<li><strong>Education Safety Net</strong>: Khan Academy’s resources can serve as a safety net for global education.</li>
</ul>
</section>
<section id="solas-story-a-case-study" class="level5">
<h5 class="anchored" data-anchor-id="solas-story-a-case-study"><strong>Sola’s Story: A Case Study</strong></h5>
<ul>
<li>Sola, a young woman in Afghanistan, was forbidden from attending school.</li>
<li><strong>Access to Khan Academy</strong>: Using the internet and with family support, she taught herself various subjects through Khan Academy.</li>
<li><strong>Success Story</strong>: Sola is now a quantum computing researcher at Tufts University and a published author.</li>
<li><strong>Scaling Sola’s Success</strong>: The potential impact of providing similar opportunities to millions of students.</li>
</ul>
</section>
<section id="the-power-of-tutoring" class="level5">
<h5 class="anchored" data-anchor-id="the-power-of-tutoring"><strong>The Power of Tutoring</strong></h5>
<ul>
<li><strong>High-Dosage Tutoring</strong>: Pulling students out of class for 30 minutes a day, four days a week, has a significant motivating effect (Loeb).</li>
<li><strong>Challenges of Tutoring</strong>: Cost and scalability are major barriers.</li>
<li><strong>Personalized Attention</strong>: Each student requires unique attention and support within their <strong>zone of proximal development</strong>.</li>
</ul>
</section>
<section id="the-role-of-artificial-intelligence" class="level5">
<h5 class="anchored" data-anchor-id="the-role-of-artificial-intelligence"><strong>The Role of Artificial Intelligence</strong></h5>
<ul>
<li><strong>AI’s Transformative Potential</strong>: AI can bridge the global education divide and foster equal opportunity learning.</li>
<li><strong>Large Language Model Applications</strong>: Using smartphones, students can access key components of a world-class education.
<ul>
<li>Note: Roughly 65% of the global population has internet access, and over half own a smartphone.</li>
</ul></li>
<li><strong>AI’s Benefits in Education (Loeb)</strong>:
<ul>
<li>Provides educators with robust tools to create conducive learning environments.</li>
<li>Augments the motivation provided by adult relationships.</li>
<li>Supports personalized learning and motivation.</li>
</ul></li>
</ul>
</section>
</section>
</section>
<section id="chapter-25-economics-of-ai-in-education" class="level3">
<h3 class="anchored" data-anchor-id="chapter-25-economics-of-ai-in-education">Chapter 25: Economics of AI in Education</h3>
<section id="the-cost-of-education-and-its-challenges" class="level4">
<h4 class="anchored" data-anchor-id="the-cost-of-education-and-its-challenges">The Cost of Education and its Challenges</h4>
<section id="education-costs-globally" class="level5">
<h5 class="anchored" data-anchor-id="education-costs-globally"><strong>Education Costs Globally</strong></h5>
<ul>
<li>Education is expensive worldwide.</li>
<li><strong>United States</strong>:
<ul>
<li>Louisiana spends ~$10,000 per student annually.</li>
<li>New York spends ~$40,000 per student annually.</li>
</ul></li>
<li><strong>India</strong>:
<ul>
<li>Government schools spend between ~$500 and ~$1,200 per student annually.</li>
</ul></li>
</ul>
</section>
<section id="the-lockstep-model-and-its-limitations" class="level5">
<h5 class="anchored" data-anchor-id="the-lockstep-model-and-its-limitations"><strong>The Lockstep Model and its Limitations</strong></h5>
<ul>
<li><strong>Lockstep Curriculum</strong>: Students progress through the curriculum at a fixed pace, regardless of individual understanding.</li>
<li><strong>Lack of Personalization</strong>: Limited support for personalized learning or addressing learning gaps.</li>
<li><strong>Wide Range of Preparedness</strong>: Classrooms often have students with diverse learning levels.</li>
</ul>
</section>
<section id="the-impact-of-the-covid-19-pandemic" class="level5">
<h5 class="anchored" data-anchor-id="the-impact-of-the-covid-19-pandemic"><strong>The Impact of the COVID-19 Pandemic</strong></h5>
<ul>
<li>The pandemic exacerbated existing inequalities.</li>
<li><strong>Digital Divide</strong>:
<ul>
<li>Black and Hispanic households with school-age children were 1.4 times more likely than white households to have limited access to computers and the internet.</li>
<li>Over 40% of low-income households had limited internet access.</li>
</ul></li>
<li><strong>Decline in Academic Performance</strong>:
<ul>
<li>Detroit 8th graders performing at grade level dropped from 6% pre-pandemic to 3% post-pandemic.</li>
<li>The average American classroom’s ability spread widened from three grade levels to six.</li>
</ul></li>
</ul>
</section>
<section id="emergency-relief-funding-and-its-effectiveness" class="level5">
<h5 class="anchored" data-anchor-id="emergency-relief-funding-and-its-effectiveness"><strong>Emergency Relief Funding and its Effectiveness</strong></h5>
<ul>
<li><strong>Federal Funding</strong>: The US government provided $86 billion in emergency relief funds (~$2,000 per K-12 student).</li>
<li><strong>Tutoring Programs</strong>: Much of the funding went to tutoring programs.</li>
<li><strong>Limited Impact</strong>: Most of the money was spent with little improvement.</li>
<li><strong>Reasons for Ineffectiveness</strong>:
<ul>
<li>Tutoring was often disconnected from classroom learning.</li>
<li>Students faced logistical challenges in accessing tutoring.</li>
<li>Stigma associated with seeking tutoring.</li>
</ul></li>
</ul>
</section>
<section id="khan-academy-and-khanmigo-bridging-the-gap" class="level5">
<h5 class="anchored" data-anchor-id="khan-academy-and-khanmigo-bridging-the-gap"><strong>Khan Academy and Khanmigo: Bridging the Gap</strong></h5>
<ul>
<li><strong>Khanmigo</strong>: A platform offering personalized, accessible, and high-quality education.</li>
<li><strong>Khan Academy’s Effectiveness During the Pandemic</strong>:
<ul>
<li>Classrooms using Khan Academy for 30-60 minutes per week avoided learning loss and outperformed pre-pandemic standards by 20-40%.</li>
<li>This was achieved at no cost to students.</li>
</ul></li>
<li><strong>Large Language Model Platforms</strong>: Build on Khan Academy’s success to provide even more robust support.</li>
<li><strong>AI Tutor Benefits</strong>:
<ul>
<li>Availability whenever needed, including in the classroom.</li>
<li>Provides teachers and parents with insights into student progress and needs.</li>
<li>Reduces stigma associated with seeking help.</li>
<li>Allows for curious exploration without time constraints.</li>
</ul></li>
</ul>
</section>
<section id="the-economics-of-ai-tutoring" class="level5">
<h5 class="anchored" data-anchor-id="the-economics-of-ai-tutoring"><strong>The Economics of AI Tutoring</strong></h5>
<ul>
<li><strong>Cost-Effectiveness</strong>: AI tutoring is more cost-effective and accessible than live tutoring.</li>
<li><strong>Khan Academy’s Budget</strong>: Operates on a ~$70 million annual budget (comparable to a large high school) while reaching over 100 million learners.</li>
<li><strong>Funding Reliance</strong>: Requires significant fundraising from philanthropists to keep resources free.</li>
<li><strong>Generative AI Costs</strong>:
<ul>
<li>Salaries for engineers, designers, product managers, and content developers.</li>
<li>Significant computation costs for large language models like GPT-4.</li>
</ul></li>
<li><strong>Khanmigo’s Estimated Cost</strong>: ~$5-$15 per user per month.</li>
<li><strong>Sustainability</strong>: Philanthropy alone may be insufficient to cover costs for millions of users.</li>
<li><strong>Pricing Model</strong>: School districts will likely be charged for access.</li>
<li><strong>Free for Students</strong>: Students in participating districts will access Khanmigo for free.</li>
</ul>
</section>
<section id="accessibility-in-poorer-countries" class="level5">
<h5 class="anchored" data-anchor-id="accessibility-in-poorer-countries"><strong>Accessibility in Poorer Countries</strong></h5>
<ul>
<li><strong>Cost Barrier</strong>: Even $30 per year can be a significant expense in poorer countries.</li>
<li><strong>Future Cost Reduction</strong>:
<ul>
<li>Computation costs are expected to decrease by a factor of 10 in the next few years.</li>
<li>A 100-fold reduction within 5-10 years could make costs comparable to non-generative web applications.</li>
</ul></li>
</ul>
</section>
<section id="remaining-barriers-to-access" class="level5">
<h5 class="anchored" data-anchor-id="remaining-barriers-to-access"><strong>Remaining Barriers to Access</strong></h5>
<ul>
<li><strong>Internet and Device Access</strong>: Reliable access to the internet and devices remains a challenge.</li>
<li><strong>Optimism for Universal Access</strong>:
<ul>
<li>Decreasing device costs.</li>
<li>Providers like SpaceX Starlink offering low-cost broadband via satellite.</li>
</ul></li>
</ul>
</section>
<section id="overcoming-the-language-barrier" class="level5">
<h5 class="anchored" data-anchor-id="overcoming-the-language-barrier"><strong>Overcoming the Language Barrier</strong></h5>
<ul>
<li><strong>Multilingual Capabilities</strong>: Large language models like GPT-4 can operate in all major languages.</li>
<li><strong>Support for Language Learners</strong>: Enables support in native languages or mixed language contexts (e.g., Spanglish).</li>
<li><strong>Conversational Abilities</strong>: Fosters a sense of connection through real-time interaction.</li>
<li><strong>Translation Capabilities</strong>: Can be used for translating core platform content.</li>
</ul>
</section>
<section id="the-importance-of-connection-and-support" class="level5">
<h5 class="anchored" data-anchor-id="the-importance-of-connection-and-support"><strong>The Importance of Connection and Support</strong></h5>
<ul>
<li><strong>Susanna Loeb</strong> emphasizes the vital role of connection and support in education.</li>
<li><strong>Transformative Potential</strong>: AI technology can be transformative in areas with limited resources and pedagogical approaches.</li>
<li><strong>Optimism for the Future</strong>: The potential of AI to improve educational access and quality globally.</li>
</ul>
</section>
</section>
</section>
</section>
<section id="part-viii-ai-assessments-and-admissions" class="level2">
<h2 class="anchored" data-anchor-id="part-viii-ai-assessments-and-admissions">Part VIII: AI Assessments and Admissions</h2>
<blockquote class="blockquote">
<p>“Not everything that can be counted counts, and not everything that counts can be counted.” - William Bruce Cameron</p>
<p>“Evaluation is creation. Hear it, you creators. Evaluating is itself the most valuable treasure of all that we value. It is only through evaluation that value exists. And without evaluation, the nut of existence would be hollow. Hear it, you creators.” - Friedrich Nietzsche</p>
</blockquote>
<section id="chapter-26-the-future-of-k-12-assessments" class="level3">
<h3 class="anchored" data-anchor-id="chapter-26-the-future-of-k-12-assessments">Chapter 26: The Future of K-12 Assessments</h3>
<section id="critiques-of-standardized-tests" class="level4">
<h4 class="anchored" data-anchor-id="critiques-of-standardized-tests">Critiques of Standardized Tests</h4>
<ul>
<li><strong>Narrow Focus</strong>:
<ul>
<li>Primarily multiple-choice questions targeting a subset of important life skills.</li>
<li>Pressure on educators to narrow classroom focus.</li>
</ul></li>
<li><strong>Lack of Actionability</strong>:
<ul>
<li>Scores arrive too late (summer or next school year) to be useful for the current teacher and student.</li>
<li>Students lack incentive to perform well on tests not tied to grades.</li>
</ul></li>
<li><strong>Demographic Bias</strong>:
<ul>
<li>Performance differences across demographic groups raise concerns about bias against certain groups or schools.</li>
</ul></li>
<li><strong>Lack of Transparency</strong>:
<ul>
<li>Limited insight into what tests assess fuels skepticism, particularly in a politically charged environment.</li>
</ul></li>
</ul>
</section>
<section id="reframing-the-debate-on-standardized-tests" class="level4">
<h4 class="anchored" data-anchor-id="reframing-the-debate-on-standardized-tests">Reframing the Debate on Standardized Tests</h4>
<ul>
<li><strong>Importance of Measurement</strong>:
<ul>
<li>Measuring performance is crucial for improvement in any area.</li>
<li>Standardized measurement ensures fairness by applying the same standard to all.</li>
</ul></li>
<li><strong>Broadening the Scope</strong>:
<ul>
<li>Instead of abandoning tests, expand their scope to assess a wider range of skills.</li>
</ul></li>
<li><strong>Improving Actionability and Transparency</strong>:
<ul>
<li>Address critiques by making tests more actionable and transparent.</li>
</ul></li>
<li><strong>Equity Considerations</strong>:
<ul>
<li>Removing tests may hinder equity by preventing schools from identifying and addressing learning gaps in underrepresented groups.</li>
<li>Early identification of deficits is crucial for timely intervention.</li>
</ul></li>
</ul>
</section>
<section id="solutions-for-improving-standardized-tests" class="level4">
<h4 class="anchored" data-anchor-id="solutions-for-improving-standardized-tests">Solutions for Improving Standardized Tests</h4>
<ul>
<li><strong>Personalized Practice Platforms</strong>:
<ul>
<li>Integrate assessment data into software platforms that provide personalized practice based on identified weaknesses.</li>
<li>Example: Khan Academy’s use of standardized test data to personalize practice.
<ul>
<li>Study of over 300,000 students (2021-22 school year) showed that students engaging in personalized practice (30+ minutes/week) exceeded growth projections by 26% to 38%, depending on grade.</li>
</ul></li>
</ul></li>
<li><strong>Continuous Assessments</strong>:
<ul>
<li>Integrate standardized exercises into learning platforms to provide ongoing assessment without sacrificing instruction time.</li>
<li>Example: Khan Academy’s platform with millions of standardized exercises and data points on student performance.</li>
<li>Benefits:
<ul>
<li>More frequent and accurate insights into student learning.</li>
<li>Actionable data drives personalized learning recommendations.</li>
<li>Higher student motivation as daily practice contributes to assessment and class progress.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="addressing-transparency-and-stakeholder-concerns" class="level4">
<h4 class="anchored" data-anchor-id="addressing-transparency-and-stakeholder-concerns">Addressing Transparency and Stakeholder Concerns</h4>
<ul>
<li><strong>Challenges with Traditional Assessments</strong>:
<ul>
<li>External stakeholders (parents, politicians) lack direct observation of classroom learning and rely on potentially inaccurate accounts.</li>
<li>Difficulty understanding how high-level standards translate into assessments and classroom activities.</li>
<li>Limited transparency and flexibility due to cost and security concerns surrounding test item creation.</li>
</ul></li>
<li><strong>Benefits of Adaptive Online Platforms</strong>:
<ul>
<li>Large item banks and adaptive assessments allow stakeholders to explore the assessment process without compromising security.</li>
<li>Each student receives a unique sequence of questions based on their performance, minimizing the risk of item leakage.</li>
</ul></li>
</ul>
</section>
<section id="the-role-of-generative-ai-in-assessment" class="level4">
<h4 class="anchored" data-anchor-id="the-role-of-generative-ai-in-assessment">The Role of Generative AI in Assessment</h4>
<ul>
<li><strong>Enhanced Item Creation</strong>:
<ul>
<li>While not yet capable of independent high-quality item creation, generative AI can significantly enhance the productivity of human question writers and reviewers.</li>
<li>Potential for creating more numerous and diverse assessment items with existing resources.</li>
</ul></li>
<li><strong>Deepening and Broadening Assessment</strong>:
<ul>
<li>Moving beyond multiple-choice and numeric-entry questions to assess complex skills like writing, problem-solving, and creativity.</li>
<li>Addressing the historical limitations of open-ended assessments that require expert human reviewers and complex rubrics.</li>
</ul></li>
</ul>
</section>
<section id="ai-powered-rich-assessments" class="level4">
<h4 class="anchored" data-anchor-id="ai-powered-rich-assessments">AI-Powered Rich Assessments</h4>
<ul>
<li><strong>Examples of AI-Driven Assessment Enhancements</strong>:
<ul>
<li><strong>Reading Comprehension</strong>:
<ul>
<li>Moving beyond multiple-choice questions to assess students’ understanding of author intent or their own perspectives through written or spoken responses.</li>
<li>AI-powered conversations to explore student reasoning and evidence.</li>
</ul></li>
<li><strong>Math</strong>: Assessing reasoning and proof development.</li>
<li><strong>Science</strong>: Evaluating experimental design and research paper critique skills.</li>
<li><strong>Problem-Solving</strong>: Using AI-driven simulations.</li>
<li><strong>Visual Arts</strong>: AI assessment of visual works, presentations, etc. (as AI develops visual capabilities).</li>
</ul></li>
</ul>
</section>
<section id="addressing-concerns-about-ai-bias-in-assessment" class="level4">
<h4 class="anchored" data-anchor-id="addressing-concerns-about-ai-bias-in-assessment">Addressing Concerns about AI Bias in Assessment</h4>
<ul>
<li><strong>Comparing AI to the Status Quo</strong>:
<ul>
<li>Current assessments are also susceptible to human bias.</li>
<li>Avoiding AI limits assessment to easily measurable skills, potentially magnifying bias towards these skills.</li>
<li>Richer assessments like PhD defenses or job interviews are often inconsistent and biased.</li>
</ul></li>
<li><strong>Benefits of AI-Driven Assessment</strong>:
<ul>
<li>Potential for standardization and scale combined with richness and nuance.</li>
<li>Increased accessibility facilitates stakeholder scrutiny and auditing.</li>
</ul></li>
<li><strong>Mitigating Risks</strong>:
<ul>
<li>Acknowledge the potential for AI bias and the need for careful development and implementation.</li>
<li>Emphasize transparency and guardrails to ensure fairness and accuracy.</li>
</ul></li>
<li><strong>Striving for Improvement</strong>:
<ul>
<li>Aim for AI-powered assessments that are demonstrably superior to the status quo in terms of fairness and accuracy.</li>
</ul></li>
</ul>
</section>
<section id="impact-of-ai-powered-assessment-on-education" class="level4">
<h4 class="anchored" data-anchor-id="impact-of-ai-powered-assessment-on-education">Impact of AI-Powered Assessment on Education</h4>
<ul>
<li><strong>Redefining Quality Education</strong>:
<ul>
<li>Expanding the scope of assessment to include previously immeasurable skills like communication, creativity, and curiosity.</li>
<li>Motivating the education system to focus on holistic development of individuals.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-27-the-ai-of-college-admissions" class="level3">
<h3 class="anchored" data-anchor-id="chapter-27-the-ai-of-college-admissions">Chapter 27: The AI of College Admissions</h3>
<section id="ais-impact-on-college-admissions-components" class="level4">
<h4 class="anchored" data-anchor-id="ais-impact-on-college-admissions-components">AI’s Impact on College Admissions Components</h4>
<ul>
<li><strong>Grades and Schoolwork</strong>:
<ul>
<li>Generative AI will transform classroom assignments and grading, enabling richer assignments and providing teachers with grading support.</li>
</ul></li>
<li><strong>Standardized Tests</strong>:
<ul>
<li>AI will drive a shift towards deeper, continuous assessments integrated with learning.</li>
<li>Existing tests (SATs, ACTs) will either adapt or be replaced by new AI-powered assessments.</li>
</ul></li>
<li><strong>Essays and Recommendations</strong>:
<ul>
<li>Ethical concerns arise regarding the use of AI for generating essays and recommendation letters.</li>
</ul></li>
<li><strong>Extracurriculars</strong>:
<ul>
<li>Impact of AI on extracurriculars is less clear, but potential exists for AI-powered platforms to facilitate and track student involvement in various activities.</li>
</ul></li>
</ul>
</section>
<section id="ethical-challenges-posed-by-ai-in-admissions" class="level4">
<h4 class="anchored" data-anchor-id="ethical-challenges-posed-by-ai-in-admissions">Ethical Challenges Posed by AI in Admissions</h4>
<ul>
<li><strong>Potential for Misrepresentation</strong>:
<ul>
<li>Students may use AI to create impressive essays that don’t reflect their true abilities.</li>
<li>Teachers and counselors may use AI to write recommendation letters, potentially undermining their authenticity.</li>
</ul></li>
<li><strong>Exacerbating Existing Inequities</strong>:
<ul>
<li>AI tools may widen the gap between affluent students with access to resources and those without.</li>
<li>Example: Varsity Blues scandal highlights the existing industry of high-priced college admissions coaches who provide extensive assistance to wealthy students, including essay writing and fabrication of extracurricular activities.</li>
</ul></li>
<li><strong>Accessibility and Ethical Gray Areas</strong>:
<ul>
<li>AI tools like ChatGPT democratize access to assistance previously limited to affluent families.</li>
<li>Everyone now faces ethical dilemmas regarding the appropriate level of assistance.</li>
</ul></li>
</ul>
</section>
<section id="rethinking-the-role-of-essays-and-recommendations" class="level4">
<h4 class="anchored" data-anchor-id="rethinking-the-role-of-essays-and-recommendations">Rethinking the Role of Essays and Recommendations</h4>
<ul>
<li><strong>Objective vs.&nbsp;Subjective Admissions</strong>:
<ul>
<li>In many countries, college admissions rely heavily on objective measures like standardized test scores (e.g., India’s IIT admissions based solely on the JEE).</li>
<li>US universities often prioritize subjective factors like personality, leadership potential, and community engagement.</li>
</ul></li>
<li><strong>Limitations of Subjective Evaluation</strong>:
<ul>
<li>Difficulty in accurately assessing subjective qualities through essays and recommendations, which may be influenced by external factors (e.g., coaching, family background).</li>
<li>Concerns about the randomness and potential for bias in subjective evaluation processes.</li>
</ul></li>
</ul>
</section>
<section id="alternative-approaches-to-evaluating-soft-skills" class="level4">
<h4 class="anchored" data-anchor-id="alternative-approaches-to-evaluating-soft-skills">Alternative Approaches to Evaluating Soft Skills</h4>
<ul>
<li><strong>Standardized Measurement of Soft Skills</strong>:
<ul>
<li>Exploring methods for objectively assessing qualities like leadership, collaboration, empathy, and community service.</li>
</ul></li>
<li><strong>Example: Schoolhouse.World</strong>:
<ul>
<li>Provides free online tutoring by vetted volunteers.</li>
<li>Rigorous vetting process assesses subject matter mastery and communication skills.</li>
<li>Tutor performance is tracked and rated by students, creating a standardized record of tutoring experience and quality.</li>
</ul></li>
<li><strong>Adoption by Universities</strong>:
<ul>
<li>18 universities, including prestigious institutions like University of Chicago, MIT, Yale, Brown, and Columbia, accept the Schoolhouse.World transcript as part of their admissions process.</li>
<li>Value the transcript as a standardized measure of subject competency and soft skills.</li>
</ul></li>
<li><strong>Positive Outcomes</strong>:
<ul>
<li>Students submitting Schoolhouse.World transcripts often have higher acceptance rates.</li>
<li>Provides an incentive for students to engage in tutoring and community service.</li>
</ul></li>
</ul>
</section>
<section id="integrating-ai-with-schoolhouse.world-and-college-admissions" class="level4">
<h4 class="anchored" data-anchor-id="integrating-ai-with-schoolhouse.world-and-college-admissions">Integrating AI with Schoolhouse.World and College Admissions</h4>
<ul>
<li><strong>AI-Powered Feedback and Assessment</strong>:
<ul>
<li>Schoolhouse.World utilizes AI to provide tutors with feedback on their sessions and identify areas for improvement.</li>
<li>Future applications include real-time tutoring tips and narrative assessments of tutor style and capabilities, further enriching the transcript for admissions officers.</li>
</ul></li>
<li><strong>Reimagining Admissions with AI</strong>:
<ul>
<li><strong>AI-Powered Interviews</strong>: Conducting standardized text- or voice-based interviews with students, counselors, and teachers to gather consistent and comparable information.</li>
<li><strong>AI-Generated Recommendations</strong>: AI platforms that have interacted with students over time can provide personalized and standardized recommendations based on their observed strengths and passions.</li>
</ul></li>
<li><strong>Benefits of AI in Admissions</strong>:
<ul>
<li>Enhanced scalability, consistency, and auditability of the evaluation process.</li>
<li>Potential for mitigating bias and improving transparency.</li>
</ul></li>
</ul>
</section>
<section id="addressing-bias-in-ai-driven-admissions" class="level4">
<h4 class="anchored" data-anchor-id="addressing-bias-in-ai-driven-admissions">Addressing Bias in AI-Driven Admissions</h4>
<ul>
<li><strong>Acknowledging and Mitigating Bias</strong>:
<ul>
<li>Recognizing the potential for AI systems to perpetuate or introduce new biases.</li>
<li>Implementing strategies to identify and address bias in AI algorithms and training data.</li>
</ul></li>
<li><strong>Striving for Fairness</strong>:
<ul>
<li>Aiming for AI systems that are demonstrably less biased than existing human-driven processes.</li>
</ul></li>
<li><strong>Example: Harvard Admissions Case</strong>:
<ul>
<li>2018 Supreme Court case revealed evidence of bias against Asian American applicants in Harvard’s admissions process.</li>
<li>AI-powered systems can be audited and tested to ensure consistent evaluation across demographic groups.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-1" class="level4">
<h4 class="anchored" data-anchor-id="conclusion-1">Conclusion</h4>
<ul>
<li>AI is not the source of problems in college admissions but rather exposes existing flaws and offers opportunities for improvement.</li>
<li>Thoughtful and ethical implementation of AI can lead to a fairer and more transparent admissions process.</li>
<li>Potential for AI to shift the focus from subjective narratives to standardized assessment of both academic and soft skills, potentially creating a more equitable and meritocratic system.</li>
</ul>
</section>
</section>
</section>
<section id="part-ix-work-and-what-comes-next" class="level2">
<h2 class="anchored" data-anchor-id="part-ix-work-and-what-comes-next">Part IX: Work and What Comes Next</h2>
<blockquote class="blockquote">
<p>“The one who plants trees knowing that he will never sit in their shade has at least started to understand the meaning of life.” - Rabindranath Tagore</p>
<p>“Learn the rules like a pro so you can break them like an artist.” - Pablo Picasso</p>
</blockquote>
<section id="chapter-28-the-ai-revolution-and-the-future-of-work" class="level3">
<h3 class="anchored" data-anchor-id="chapter-28-the-ai-revolution-and-the-future-of-work">Chapter 28: The AI Revolution and the Future of Work</h3>
<section id="ais-impact-on-the-job-market" class="level4">
<h4 class="anchored" data-anchor-id="ais-impact-on-the-job-market">AI’s Impact on the Job Market</h4>
<ul>
<li><strong>Fear of Mass Layoffs:</strong> Many fear that AI will lead to mass layoffs as AI-powered tools become more efficient and cost-effective than human labor.</li>
<li><strong>Hiring Freezes:</strong> Companies are pausing hiring for roles they believe AI will replace in the future.
<ul>
<li><strong>IBM Example:</strong> In 2023, IBM announced a 30% reduction in back-office hiring over five years for jobs potentially replaceable by AI.</li>
</ul></li>
<li><strong>Shift in Job Landscape:</strong> Back-office, middle-office, and non-client-facing roles involving tasks like budgeting, data management, and record organization are likely to disappear.</li>
<li><strong>“Replaced by Someone Using AI”:</strong> The common saying is that you won’t be replaced by AI, but by someone who uses AI effectively.</li>
<li><strong>Examples of Increased Productivity with AI:</strong>
<ul>
<li>Writers and copywriters: 3-5 times more productive.</li>
<li>Software engineers: Using AI co-pilots for debugging and code completion.</li>
<li>Graphic designers: Generating numerous logo variations with text-based prompts.</li>
</ul></li>
</ul>
</section>
<section id="mixed-bag-of-job-impacts" class="level4">
<h4 class="anchored" data-anchor-id="mixed-bag-of-job-impacts">Mixed Bag of Job Impacts</h4>
<ul>
<li><strong>Technological Inflection Point:</strong> Generative AI is creating a technological inflection point, enabling us to do more.</li>
<li><strong>Increased Demand for Engineers:</strong> Demand for engineers, especially those who are highly productive with AI, will increase.</li>
<li><strong>Historical Parallel: Globalization and Software Engineering:</strong>
<ul>
<li>Early 2000s: Globalization led to outsourcing of software engineering work.</li>
<li>Fear of job displacement proved unfounded as software engineering salaries rose due to increased demand driven by smartphones and the internet.</li>
</ul></li>
<li><strong>Generative AI as a Catalyst for Innovation:</strong> Generative AI creates an environment ripe for further innovation, leading to more opportunities for engineers who can apply these technologies creatively.</li>
<li><strong>Job Displacement in Specific Roles:</strong>
<ul>
<li><strong>News Summary Writers:</strong> Jobs like writing news summaries about stock market fluctuations are likely to be automated by generative AI.</li>
</ul></li>
<li><strong>Survival Through AI Adoption:</strong>
<ul>
<li>Copywriters and technical writers who embrace AI to enhance productivity will survive, while others may need to find new roles.</li>
</ul></li>
</ul>
</section>
<section id="new-job-opportunities" class="level4">
<h4 class="anchored" data-anchor-id="new-job-opportunities">New Job Opportunities</h4>
<ul>
<li><strong>Prompt Writers and Engineers:</strong> Generative AI has created new jobs like prompt writers and engineers.</li>
<li><strong>Open-Minded Copywriters Can Transition:</strong> Creative copywriters can transition well into prompt-related roles.</li>
<li><strong>Opportunities in AI Safety, Security, and Anti-Bias:</strong> As organizations adopt AI, new opportunities will emerge in areas like safety, security, and addressing bias in AI systems.</li>
<li><strong>AI Integration Across Roles:</strong> Positions from HR to management will likely utilize AI for tasks like generating hiring letters or meeting reports.</li>
</ul>
</section>
<section id="ai-induced-natural-selection-at-the-corporate-level" class="level4">
<h4 class="anchored" data-anchor-id="ai-induced-natural-selection-at-the-corporate-level">AI-Induced Natural Selection at the Corporate Level</h4>
<ul>
<li><p><strong>Leaner, Automated Companies Gain Advantage:</strong> Smaller, more automated companies will be able to offer competitive products at lower prices, potentially gaining market share from larger, less automated companies.</p></li>
<li><p><strong>Net Job Losses Due to Automation:</strong> This trend will likely lead to a net loss of jobs as automation advances.</p></li>
<li><p><strong>Chegg Inc.&nbsp;Example:</strong></p>
<ul>
<li>Chegg, an education technology company, struggled to compete with ChatGPT as students used the large language model for homework help.</li>
<li>Chegg’s CEO admitted uncertainty about future revenue due to ChatGPT’s impact, leading to a 50% drop in their stock price.</li>
</ul></li>
<li><p><strong>Impact on Established Businesses:</strong> Generative AI has the potential to disrupt established businesses across various industries.</p></li>
<li><p><strong>Wharton’s Ethan Mollick’s Perspective:</strong></p>
<blockquote class="blockquote">
<p>“It’s going to affect every industry differently, every person differently, and every job differently. The job that’s least affected by AI, according to the early-stage research we have, is roofing. And yet, I’ve talked to a couple of roofers who are like, ‘Actually, roofing is going to change too, because we can now do all of our proposals with AI help.’”</p>
</blockquote></li>
</ul>
</section>
<section id="ais-expanding-capabilities-and-the-need-for-adaptation" class="level4">
<h4 class="anchored" data-anchor-id="ais-expanding-capabilities-and-the-need-for-adaptation">AI’s Expanding Capabilities and the Need for Adaptation</h4>
<ul>
<li><strong>AI’s Broad Capabilities:</strong> AI can understand language, recognize patterns, solve problems, diagnose illnesses, make stock market trades, compose music, fight lawsuits, understand emotions, analyze genetic code, handle insurance claims, engineer, and write articles.</li>
<li><strong>Adaptation as the Key Strategy:</strong> The successful approach will be to adapt to AI rather than resist it.</li>
</ul>
</section>
</section>
<section id="chapter-29-preparing-kids-for-the-ai-driven-workplace" class="level3">
<h3 class="anchored" data-anchor-id="chapter-29-preparing-kids-for-the-ai-driven-workplace">Chapter 29: Preparing Kids for the AI-Driven Workplace</h3>
<section id="the-paradox-of-ai-in-education" class="level4">
<h4 class="anchored" data-anchor-id="the-paradox-of-ai-in-education">The Paradox of AI in Education</h4>
<ul>
<li><strong>Stanford Student’s Concern:</strong> A Stanford student expressed concern about the relevance of learning to code when AI can do it better.</li>
<li><strong>Shift in Desired Professions:</strong> Software engineering and data science, once considered the hottest jobs, are now being challenged by AI’s capabilities.</li>
<li><strong>Tension in Education:</strong> There’s a fear of allowing AI tools in schools to prevent cheating, despite the fact that future jobs will require working closely with AI.</li>
<li><strong>Bill Gates’ Paradox:</strong> AI makes learning easier, but also raises questions about the necessity of certain skills that AI can perform better.</li>
</ul>
</section>
<section id="the-importance-of-coding-and-working-with-ai" class="level4">
<h4 class="anchored" data-anchor-id="the-importance-of-coding-and-working-with-ai">The Importance of Coding and Working with AI</h4>
<ul>
<li><strong>Chris Peach’s Advice to the Stanford Student:</strong>
<ul>
<li>Coding remains important for creating major solutions, including those that utilize generative AI.</li>
<li>Understanding how code pieces fit together is crucial even if AI can write portions of it.</li>
</ul></li>
<li><strong>Working in Concert with AI:</strong> It’s essential to learn to work effectively with generative AI.</li>
<li><strong>Efficiency of AI-Savvy Employees:</strong> Entry-level employees who understand and use AI will be more efficient.</li>
<li><strong>Author’s Son’s Example:</strong> The author encourages his son, who aspires to be a video game developer, to use AI to tackle more ambitious projects.</li>
<li><strong>AI Augments, Not Replaces, Skills:</strong>
<ul>
<li>AI’s writing competency doesn’t negate the need to learn how to write.</li>
<li>Aspiring screenwriters should master screenwriting and then use AI to undertake more complex projects.</li>
</ul></li>
<li><strong>Importance of Understanding Quality:</strong> Being skilled in a craft allows you to recognize high quality, even when AI is involved.</li>
<li><strong>Expanding Creative Possibilities:</strong> Screenwriters can potentially produce entire movies with AI assistance, as AI can generate music, videos, and even edit footage.</li>
<li><strong>Disruption in the Film Industry:</strong> AI is already causing disruption in the film industry and many others.</li>
</ul>
</section>
<section id="ais-impact-on-productivity-and-the-need-for-centaurs" class="level4">
<h4 class="anchored" data-anchor-id="ais-impact-on-productivity-and-the-need-for-centaurs">AI’s Impact on Productivity and the Need for Centaurs</h4>
<ul>
<li><p><strong>Wharton Study on AI-Driven Productivity:</strong> Early studies show 30-80% performance improvement on various analytical tasks due to AI, including writing, analysis, consulting, and programming.</p></li>
<li><p><strong>Ethan Mollick’s View on AI in the Workplace:</strong></p>
<blockquote class="blockquote">
<p>“If you want to be in these fields, AI is and will remain a part of your life. You need to figure out if you can use AI to be 10 times more productive, meaning there remains a need for humans to be in the loop.”</p>
</blockquote></li>
<li><p><strong>The Centaur Model:</strong> Professionals need to become “centaurs,” half human and half large language model, to thrive in the AI-driven workplace.</p></li>
</ul>
</section>
<section id="adapting-education-for-the-ai-future" class="level4">
<h4 class="anchored" data-anchor-id="adapting-education-for-the-ai-future">Adapting Education for the AI Future</h4>
<ul>
<li><p><strong>Familiarity with AI Tools:</strong> Educators must familiarize students with AI tools and their capabilities.</p></li>
<li><p><strong>Generative AI as a General-Purpose Technology:</strong> Generative AI is a transformative technology like steam power, computers, or the internet, potentially impacting our lives faster and more profoundly.</p></li>
<li><p><strong>Shift from Specialization to Broad Skills:</strong></p>
<ul>
<li>The Industrial Revolution emphasized specialization of labor.</li>
<li>The future job market requires deep skills in specific areas, but also entrepreneurial expertise across multiple domains.</li>
</ul></li>
<li><p><strong>Bill Gates’ Perspective on Future Skills:</strong></p>
<blockquote class="blockquote">
<p>“Not only is there more reason than ever for kids to continue to learn about their fields of interest, but students need to accelerate learning these skills and to learn them as well as possible.”</p>
</blockquote></li>
<li><p><strong>AI Integration in Entry-Level Jobs:</strong> Entry-level jobs will require understanding how to use large language models for tasks like creating invoices and business plans.</p></li>
<li><p><strong>Collaboration Between Humans and AI:</strong> The workplace will emphasize collaboration between humans and AI for optimal productivity.</p></li>
<li><p><strong>Value of Deep Skills:</strong> The more developed your skills, the more valuable they will be in the AI-driven workforce.</p></li>
<li><p><strong>The Need for Entrepreneurial Expertise:</strong> Success will require deep specialization in one or two areas, combined with entrepreneurial skills across multiple domains.</p></li>
</ul>
</section>
<section id="fostering-entrepreneurship-in-the-ai-era" class="level4">
<h4 class="anchored" data-anchor-id="fostering-entrepreneurship-in-the-ai-era">Fostering Entrepreneurship in the AI Era</h4>
<ul>
<li><strong>Khan Academy Founder’s Entrepreneurial Journey:</strong> The author’s experience starting Khan Academy highlights the importance of coding skills, resourcefulness, and adaptability in entrepreneurship.</li>
<li><strong>Generative AI’s Role in Entrepreneurship:</strong> Generative AI will empower the next generation of entrepreneurs to achieve even greater scalability.</li>
<li><strong>Return to Craftsman-Like Experience:</strong> We are entering a world where a small group with expertise in various domains can manage AI “armies” to create and build.</li>
<li><strong>Entrepreneurship as a Factor of Production:</strong> Entrepreneurship involves creatively combining resources to create value.</li>
</ul>
</section>
<section id="preparing-students-for-entrepreneurial-success" class="level4">
<h4 class="anchored" data-anchor-id="preparing-students-for-entrepreneurial-success">Preparing Students for Entrepreneurial Success</h4>
<ul>
<li><strong>Step 1: Unleashing Creativity and Entrepreneurship:</strong>
<ul>
<li>All humans are inherently creative and entrepreneurial.</li>
<li>The current education system often suppresses these traits through its emphasis on conformity and standardized learning.</li>
</ul></li>
<li><strong>Step 2: Developing Deep and Broad Skills:</strong>
<ul>
<li>The three R’s (reading, writing, and arithmetic) are fundamental.</li>
<li>A strong foundation in history, art, science, law, and finance is also valuable.</li>
<li>Technology can facilitate mastery of these skills without the limitations of lockstep learning.</li>
</ul></li>
<li><strong>Step 3: Enhancing Communication, Collaboration, and Empathy:</strong>
<ul>
<li>Strong communication, collaboration, and empathy skills are essential for success in the AI era.</li>
</ul></li>
<li><strong>Entrepreneurship Beyond Business Ownership:</strong>
<ul>
<li>Entrepreneurship encompasses the ability to identify problems, conduct research, and assemble resources to solve them, even within a larger organization.</li>
</ul></li>
<li><strong>Empowering Students in the Classroom:</strong> Schools can foster entrepreneurship by:
<ul>
<li>Giving students more control over their learning.</li>
<li>Utilizing AI tools to support mastery of core skills.</li>
<li>Providing more time and space for student agency and creativity.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-30-ai-powered-matchmaking-in-the-job-market" class="level3">
<h3 class="anchored" data-anchor-id="chapter-30-ai-powered-matchmaking-in-the-job-market">Chapter 30: AI-Powered Matchmaking in the Job Market</h3>
<section id="predictions-for-the-future-of-work" class="level4">
<h4 class="anchored" data-anchor-id="predictions-for-the-future-of-work">Predictions for the Future of Work</h4>
<ul>
<li><strong>Computer World Magazine Interview (1999):</strong> The author made predictions about the future of work, including the role of AI agents in matchmaking between employers and employees.</li>
<li><strong>AI’s Rapid Advancement:</strong> The current generation of generative AI surpasses expectations, making past predictions seem conservative.</li>
</ul>
</section>
<section id="ais-potential-in-the-job-application-process" class="level4">
<h4 class="anchored" data-anchor-id="ais-potential-in-the-job-application-process">AI’s Potential in the Job Application Process</h4>
<ul>
<li><strong>Traditional Hiring Process:</strong>
<ul>
<li>Hiring managers create job descriptions.</li>
<li>Hundreds of resumes are received for each opening.</li>
<li>Talent acquisition teams screen resumes, often focusing on superficial factors like previous employers, keywords, and university degrees.</li>
<li>Recruiters select a small pool of candidates for phone screens and interviews.</li>
<li>Multiple interviews are conducted by team members, which can be time-consuming and expensive.</li>
<li>Subjective judgment plays a role in candidate selection.</li>
</ul></li>
<li><strong>AI’s Potential to Improve the Process:</strong>
<ul>
<li><strong>Streamlining Standard Processes:</strong> AI can assist in drafting job posts, interview questions, cover letters, and resumes.</li>
<li><strong>Interactive Resumes:</strong> AI-powered applications can create interactive resumes that communicate with AI recruiters, potentially providing a fairer evaluation for each candidate.</li>
<li><strong>AI Agent-to-Agent Communication:</strong> Employer recruiter bots can directly interact with candidate agent bots, eliminating scheduling complexities and providing a more efficient process.</li>
</ul></li>
<li><strong>Benefits of AI Job Agents:</strong>
<ul>
<li><strong>Personalized Representation:</strong> AI job agents learn to represent candidates accurately based on their employment history, skills, interests, and work samples.</li>
<li><strong>Career Coaching:</strong> AI agents can help candidates explore career and education options aligned with their goals.</li>
<li><strong>Expanded Job Search:</strong> AI agents can analyze a vast number of job postings, including those outside a candidate’s traditional field.</li>
<li><strong>Identifying Opportunities for Career Changers:</strong> AI agents can find employers willing to hire candidates from different backgrounds, even if they lack direct experience.</li>
</ul></li>
<li><strong>AI’s Role in Candidate Screening and Evaluation:</strong>
<ul>
<li><strong>AI Recruiters:</strong> AI can conduct initial screenings and identify top candidates based on simulated conversations with candidate AI agents.</li>
<li><strong>Reference Checks:</strong> AI can engage with candidate references to gather additional insights.</li>
<li><strong>Real-Time Interview Feedback:</strong> AI can provide interviewers with real-time feedback and suggest follow-up questions to ensure fairness and consistency.</li>
</ul></li>
</ul>
</section>
<section id="benefits-of-ai-driven-hiring" class="level4">
<h4 class="anchored" data-anchor-id="benefits-of-ai-driven-hiring">Benefits of AI-Driven Hiring</h4>
<ul>
<li><strong>Enhanced Equity and Efficiency:</strong> The job application and hiring process can become more equitable, faster, and less resource-intensive.</li>
<li><strong>Increased Opportunities for Candidates:</strong> Every candidate, through their AI agent, can potentially have an interview with the hiring AI.</li>
<li><strong>Comprehensive Candidate Profiles:</strong> Companies gain a more in-depth understanding of candidates through AI agent interactions.</li>
<li><strong>Potential Obsolescence of Traditional Resumes:</strong> AI agents may render traditional resumes less relevant.</li>
</ul>
</section>
<section id="addressing-concerns-about-bias-in-ai" class="level4">
<h4 class="anchored" data-anchor-id="addressing-concerns-about-bias-in-ai">Addressing Concerns about Bias in AI</h4>
<ul>
<li><strong>Potential for Bias in AI Systems:</strong> A major concern is the potential for AI to introduce bias in resume screening and interviewing.</li>
<li><strong>AI as a Potential Improvement:</strong> While perfect objectivity is impossible, AI can be designed to be demonstrably less biased and more consistent than current subjective human processes.</li>
<li><strong>Scrutiny and Regulation:</strong> AI systems used in recruiting should be carefully scrutinized and regulated to mitigate bias.</li>
<li><strong>Potential for Increased Inclusivity and Fairness:</strong> Ultimately, AI tools can contribute to a more inclusive, efficient, and less biased hiring process.</li>
</ul>
</section>
</section>
<section id="chapter-31-navigating-the-ai-future-with-educated-bravery" class="level3">
<h3 class="anchored" data-anchor-id="chapter-31-navigating-the-ai-future-with-educated-bravery">Chapter 31: Navigating the AI Future with Educated Bravery</h3>
<section id="the-authors-journey-with-ai" class="level4">
<h4 class="anchored" data-anchor-id="the-authors-journey-with-ai">The Author’s Journey with AI</h4>
<ul>
<li><strong>Early Interest in AI Research:</strong> The author initially aspired to be an AI researcher, fascinated by intelligence and perception.</li>
<li><strong>Disappointment with AI’s Progress in the 1990s:</strong> The author found AI development slow and underwhelming during the “AI winter” of the 1990s.</li>
<li><strong>Shifting Focus to Education:</strong> The author’s interest shifted towards education and unlocking human potential.</li>
<li><strong>Early Software Development for Personalized Learning:</strong> The author developed software for personalized math learning, foreshadowing the creation of Khan Academy.</li>
<li><strong>Belief in Human Potential:</strong> The author believed that broader access to education could significantly increase the number of individuals capable of making major contributions to society.</li>
<li><strong>Financial Constraints and Practical Realities:</strong> The author’s upbringing in a low-income household and the need for financial stability influenced career choices.</li>
<li><strong>Working in the Tech Industry and Finance:</strong> The author worked at Oracle and later as a hedge fund analyst.</li>
<li><strong>Desire to Start a School:</strong> The author harbored a vision of starting a student-centered school that fostered passion and exploration.</li>
<li><strong>The Origins of Khan Academy:</strong> The author began tutoring his cousin Nadia remotely, leading to the creation of Khan Academy.</li>
<li><strong>Khan Academy’s Mission:</strong> Khan Academy aims to provide free, world-class education to anyone, anywhere.</li>
</ul>
</section>
<section id="khan-academys-non-profit-model" class="level4">
<h4 class="anchored" data-anchor-id="khan-academys-non-profit-model">Khan Academy’s Non-Profit Model</h4>
<ul>
<li><strong>Reasons for Choosing a Non-Profit Structure:</strong>
<ul>
<li><strong>Alignment with Values:</strong> The author believed that education and healthcare should not be solely driven by market forces, as access to quality resources should not be limited by family resources.</li>
<li><strong>Building a Long-Lasting Institution:</strong> The author envisioned Khan Academy as a lasting institution that could benefit billions of people for centuries, similar to Harry Seldon’s Foundation in Isaac Asimov’s Foundation series.</li>
</ul></li>
<li><strong>Khan Academy’s Growth and Success:</strong>
<ul>
<li>Khan Academy scaled to reach hundreds of millions of learners.</li>
<li>Support from individuals and philanthropic organizations like the Doerr Foundation enabled its growth.</li>
<li>A talented team of staff and volunteers contributed to its development and expansion.</li>
<li>Prominent figures like Bill Gates, Reed Hastings, and Elon Musk became supporters.</li>
</ul></li>
</ul>
</section>
<section id="the-arrival-of-gpt-4-and-its-potential" class="level4">
<h4 class="anchored" data-anchor-id="the-arrival-of-gpt-4-and-its-potential">The Arrival of GPT-4 and Its Potential</h4>
<ul>
<li><strong>OpenAI’s Collaboration with Khan Academy:</strong> Sam Altman and Greg Brockman of OpenAI shared GPT-4 with Khan Academy early on.</li>
<li><strong>GPT-4’s Impact:</strong> GPT-4’s capabilities exceeded the author’s expectations, demonstrating the potential of AI to revolutionize education.</li>
</ul>
</section>
<section id="the-need-for-societal-adaptation-to-ai" class="level4">
<h4 class="anchored" data-anchor-id="the-need-for-societal-adaptation-to-ai">The Need for Societal Adaptation to AI</h4>
<ul>
<li><strong>AI’s Disruptive Potential:</strong> While AI can boost productivity, it also threatens to displace jobs and disrupt industries.</li>
<li><strong>The Changing Labor Pyramid:</strong> The traditional labor pyramid, with manual labor at the bottom, bureaucratic jobs in the middle, and skilled knowledge work at the top, is no longer relevant.</li>
<li><strong>Robotics and AI’s Impact on Jobs:</strong> Robotics will reduce the need for manual labor, while AI can automate many white-collar and even skilled professional tasks.</li>
<li><strong>Potential for Societal Instability:</strong> If productivity gains from AI primarily benefit a small elite, societal instability may arise, potentially leading to demands for wealth redistribution.</li>
<li><strong>Importance of Purpose and Contribution:</strong> Most people desire a sense of purpose and contribution, not just financial support.</li>
<li><strong>Inverting the Labor Pyramid:</strong> The solution is to empower individuals to operate at the top of the skill pyramid, utilizing AI for their own productivity and entrepreneurial endeavors.</li>
<li><strong>Leveraging AI for Education:</strong> AI can be used to upskill a large portion of humanity, enabling them to thrive in the AI-driven economy.</li>
</ul>
</section>
<section id="the-star-trek-analogy-towards-a-low-scarcity-society" class="level4">
<h4 class="anchored" data-anchor-id="the-star-trek-analogy-towards-a-low-scarcity-society">The Star Trek Analogy: Towards a Low-Scarcity Society</h4>
<ul>
<li><strong>Star Trek’s Abundance Economy:</strong> Star Trek depicts a society with minimal scarcity due to advanced technology, where everyone has access to resources and can pursue fulfilling careers.</li>
<li><strong>AI’s Potential to Create Abundance:</strong> Generative AI can lead to a similar low-scarcity or high-abundance society in many areas.</li>
<li><strong>The Importance of Education in a Low-Scarcity World:</strong> Universal access to quality education will be crucial to ensure everyone can participate in and contribute to a low-scarcity society.</li>
</ul>
</section>
<section id="the-risks-of-ai-misuse" class="level4">
<h4 class="anchored" data-anchor-id="the-risks-of-ai-misuse">The Risks of AI Misuse</h4>
<ul>
<li><strong>Potential for Populism and Social Unrest:</strong> If AI-driven productivity gains are not broadly shared, societies may become more susceptible to populism and demagoguery.</li>
<li><strong>AI’s Role in Misinformation and Surveillance:</strong> Generative AI can be used to create sophisticated fake news and enhance government surveillance capabilities.</li>
<li><strong>AI-Enabled Fraud:</strong> Individuals may become vulnerable to increasingly sophisticated AI-powered scams.</li>
<li><strong>AI in National Security:</strong> AI will play a significant role in national security, potentially enabling sophisticated attacks on infrastructure and manipulation of public opinion.</li>
<li><strong>AI in Warfare:</strong> AI will likely become a key factor in future warfare, potentially surpassing human capabilities in strategic decision-making.</li>
</ul>
</section>
<section id="the-need-for-educated-bravery" class="level4">
<h4 class="anchored" data-anchor-id="the-need-for-educated-bravery">The Need for Educated Bravery</h4>
<ul>
<li><strong>Resisting the Urge to Slow Down Innovation:</strong> While the pace of AI development is rapid, slowing down innovation is not the solution, as bad actors will continue to develop AI regardless.</li>
<li><strong>Empowering the Good Actors:</strong> The focus should be on ensuring that those who prioritize liberty and human empowerment have access to more advanced AI than those with malicious intent.</li>
<li><strong>AI as an Existential Opportunity:</strong> AI presents both existential risks and existential opportunities.</li>
<li><strong>The Importance of Responsible AI Development:</strong> We must ensure that AI is developed and used responsibly, with appropriate guardrails and regulations to protect society.</li>
<li><strong>Accelerating AI for the Good of Society:</strong> Doubling down on efforts to utilize AI for positive societal impact is essential.</li>
<li><strong>The AI Tsunami:</strong> The AI revolution is inevitable and approaching rapidly.</li>
<li><strong>Choosing to Ride the Wave:</strong> We must embrace AI’s potential while taking precautions to mitigate risks.</li>
<li><strong>Responsibilities of Developers and Regulators:</strong> Developers must prioritize safety and ethical considerations, while regulators should implement reasonable regulations to prevent misuse.</li>
<li><strong>Creating a New Golden Age for Humanity:</strong> AI can be leveraged to create a future where human potential is maximized and today’s challenges are overcome.</li>
</ul>
</section>
<section id="call-to-action" class="level4">
<h4 class="anchored" data-anchor-id="call-to-action">Call to Action</h4>
<ul>
<li><strong>Embrace AI with Educated Bravery:</strong> We must approach the AI revolution with a combination of hope, caution, and a commitment to responsible development and utilization.</li>
<li><strong>Use AI to Uplift Humanity:</strong> AI can be a powerful tool for improving lives, expanding opportunities, and creating a more equitable and prosperous future for all.</li>
<li><strong>Work Together to Shape a Positive AI Future:</strong> By working together, we can ensure that AI is used to unlock human potential and create a world that surpasses our current imagination.</li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>
</section>

 ]]></description>
  <category>book</category>
  <category>notes</category>
  <category>education</category>
  <category>ai</category>
  <guid>https://christianjmills.com/posts/brave-new-words-book-notes/</guid>
  <pubDate>Fri, 04 Oct 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Notes on The Demon-Haunted World꞉ Science as a Candle in the Dark</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/the-demon-haunted-world-book-notes/</link>
  <description><![CDATA[ 




<ul>
<li>Introduction by Ann Druyan</li>
<li>Preface: My Teachers</li>
<li>Chapter 1: The Most Precious Thing</li>
<li>Chapter 2: Science and Hope</li>
<li>Chapter 3: The Man in the Moon and the Face on Mars</li>
<li>Chapter 4: Aliens</li>
<li>Chapter 5: Spoofing and Secrecy</li>
<li>Chapter 6: Hallucinations</li>
<li>Chapter 7: The Demon-Haunted World</li>
<li>Chapter 8: On the Distinction Between True and False Visions</li>
<li>Chapter 9: Therapy</li>
<li>Chapter 10: The Dragon in My Garage</li>
<li>Chapter 11: The City of Grief</li>
<li>Chapter 12: The Fine Art of Baloney Detection</li>
<li>Chapter 13 Notes: Obsessed with Reality</li>
<li>Chapter 14: Anti-Science Notes</li>
<li>Chapter 15: Newton’s Sleep</li>
<li>Chapter 16: When Scientists Know Sin</li>
<li>Chapter 17: The Marriage of Skepticism and Wonder</li>
<li>Chapter 18: The Wind Makes Dust</li>
<li>Chapter 19: No Such Thing as a Dumb Question</li>
<li>Chapter 20: House on Fire</li>
<li>Chapter 21: The Path to Freedom</li>
<li>Chapter 22: Significance Junkies</li>
<li>Chapter 23: Maxwell and the Nerds</li>
<li>Chapter 24: Science and Witchcraft</li>
<li>Chapter 25: Real Patriots Ask Questions</li>
</ul>
<div class="callout callout-style-default callout-note callout-titled" title="Book LInks:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Book LInks:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="https://www.penguinrandomhouse.com/books/159731/the-demon-haunted-world-by-carl-sagan/">Publisher Page</a></li>
</ul>
</div>
</div>
<section id="introduction-by-ann-druyan" class="level2">
<h2 class="anchored" data-anchor-id="introduction-by-ann-druyan">Introduction by Ann Druyan</h2>
<ul>
<li><strong>Ann Druyan’s Role</strong>:
<ul>
<li>Creative Director of NASA’s Voyager interstellar message.</li>
<li>Writer and producer of the Cosmos television series.</li>
<li>Wife and collaborator of Carl Sagan.</li>
</ul></li>
<li><strong>Carl Sagan’s Legacy</strong>:
<ul>
<li>Recognized the ongoing struggle of reason against deception and superstition.</li>
<li>Emphasized the importance of communicating the scientific perspective across generations.</li>
<li>Aimed to equip readers with the ability to detect misinformation (“baloney detection machine”).</li>
<li>Believed critical thinking is vital for a functioning democracy.</li>
</ul></li>
<li><strong>Sagan’s Communication Style</strong>:
<ul>
<li>Able to revisit his own pre-scientific understanding to effectively explain complex concepts.</li>
<li>Guided readers on personal journeys of discovery through his writing.</li>
</ul></li>
<li><strong>Contemporary Relevance</strong>:
<ul>
<li>Druyan expresses concern about the current state of misinformation and lack of action against it.</li>
</ul></li>
<li><strong>Book’s Purpose</strong>:
<ul>
<li>Promotes reason and science.</li>
<li>Advocates for an informed and critically thinking electorate.</li>
<li>Celebrates the beauty and vastness of the cosmos revealed by science.</li>
</ul></li>
</ul>
</section>
<section id="preface-my-teachers" class="level2">
<h2 class="anchored" data-anchor-id="preface-my-teachers">Preface: My Teachers</h2>
<section id="early-experiences-with-skepticism-and-wonder" class="level3">
<h3 class="anchored" data-anchor-id="early-experiences-with-skepticism-and-wonder">Early Experiences with Skepticism and Wonder</h3>
<ul>
<li><strong>1939: A Formative Year</strong>:
<ul>
<li>A fight with Snoony Agata leads to a broken window, but no one is angry.</li>
<li>Sagan reflects on the unclear lesson learned from the incident.</li>
<li>Observing the Atlantic Ocean with his mother, he claims to see people fighting in the distance.</li>
<li>His mother corrects him, highlighting the limits of perception and the possibility of imagination.</li>
<li>This sparks a question: how to distinguish between reality and imagination?</li>
</ul></li>
<li><strong>Introduction to Mathematics</strong>:
<ul>
<li>Sagan’s father explains the concept of zero, large numbers, and the idea of infinity.</li>
<li>This inspires a project to write integers from 1 to 1000, showcasing the vastness of numbers.</li>
</ul></li>
<li><strong>New York World’s Fair</strong>:
<ul>
<li>Presents a vision of a utopian future powered by science and technology.</li>
<li>Sagan encounters exhibits demonstrating the conversion of sound to visuals and light to sound (“See Sound,” “Hear Light”).</li>
<li>These experiences instill a sense of wonder about the hidden workings of the world.</li>
</ul></li>
<li><strong>Parental Influence</strong>:
<ul>
<li>Sagan’s parents, despite lacking scientific background, fostered both skepticism and wonder in him.</li>
<li>They supported his aspiration to become an astronomer.</li>
</ul></li>
</ul>
</section>
<section id="lack-of-inspiration-in-early-science-education" class="level3">
<h3 class="anchored" data-anchor-id="lack-of-inspiration-in-early-science-education">Lack of Inspiration in Early Science Education</h3>
<ul>
<li><strong>Disappointment with School Science</strong>:
<ul>
<li>Rote learning without a sense of wonder or exploration.</li>
<li>No emphasis on the evolutionary perspective or the history of scientific errors.</li>
<li>Lab courses focused on pre-determined answers, discouraging independent inquiry.</li>
<li>Interesting material in textbooks often left untouched due to time constraints.</li>
<li>Limited access to engaging science books within the classroom.</li>
</ul></li>
<li><strong>Mechanical Teaching of Mathematics</strong>:
<ul>
<li>Long division and square root extraction taught as rules without conceptual understanding.</li>
<li>Emphasis on getting the right answer without grasping the underlying principles.</li>
</ul></li>
<li><strong>One Positive Influence</strong>:
<ul>
<li>A capable but harsh algebra teacher who instilled mathematical knowledge.</li>
</ul></li>
</ul>
</section>
<section id="the-university-of-chicago-a-turning-point" class="level3">
<h3 class="anchored" data-anchor-id="the-university-of-chicago-a-turning-point">The University of Chicago: A Turning Point</h3>
<ul>
<li><strong>Fulfillment of Scientific Dreams</strong>:
<ul>
<li>Encounters inspiring teachers who could effectively explain scientific concepts.</li>
<li>Studies at the University of Chicago, a leading institution at the time.</li>
</ul></li>
<li><strong>Mentorship and Learning</strong>:
<ul>
<li>Learns physics from Enrico Fermi’s department.</li>
<li>Discovers mathematical elegance from Subrahmanyan Chandrasekhar.</li>
<li>Discusses chemistry with Harold Urey.</li>
<li>Studies biology with H.J. Muller.</li>
<li>Learns planetary astronomy from G.P. Kuiper.</li>
</ul></li>
<li><strong>Back-of-the-Envelope Calculations</strong>:
<ul>
<li>Introduced to this powerful tool for evaluating scientific hypotheses by Kuiper.</li>
<li>Involves using basic physics, approximations, and readily available data to test ideas.</li>
</ul></li>
<li><strong>Robert M. Hutchins’ General Education Program</strong>:
<ul>
<li>Science presented as an integral part of human knowledge.</li>
<li>Exposure to diverse fields like philosophy, literature, history, and anthropology.</li>
<li>Challenging established views, such as presenting Ptolemy’s geocentric model alongside Copernicus’ heliocentric model.</li>
<li>Emphasis on teaching quality and inspiring future generations.</li>
</ul></li>
<li><strong>Filling in the Gaps</strong>:
<ul>
<li>The university environment helped Sagan clarify previously unclear concepts.</li>
<li>He witnessed the joy of scientific discovery firsthand.</li>
</ul></li>
<li><strong>Gratitude and Reflection</strong>:
<ul>
<li>Acknowledges the impact of his university mentors.</li>
<li>Ultimately credits his parents, who lacked scientific expertise, for instilling the most crucial lessons of skepticism and wonder in 1939.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-1-the-most-precious-thing" class="level2">
<h2 class="anchored" data-anchor-id="chapter-1-the-most-precious-thing">Chapter 1: The Most Precious Thing</h2>
<blockquote class="blockquote">
<p>All our science, measured against reality, is primitive and childlike, and yet it is the most precious thing we have. Albert Einstein, 1879-1955</p>
</blockquote>
<section id="introduction-an-encounter-with-scientific-illiteracy" class="level3">
<h3 class="anchored" data-anchor-id="introduction-an-encounter-with-scientific-illiteracy">Introduction: An Encounter with Scientific Illiteracy</h3>
<ul>
<li><strong>Anecdote</strong>: Sagan recounts an encounter with a driver named William F. Buckley (not the famous TV interviewer).</li>
<li><strong>The Driver’s Interest in Pseudoscience</strong>: Buckley expressed a keen interest in science but primarily focused on topics like frozen extraterrestrials, channeling, crystals, Nostradamus, astrology, and the Shroud of Turin.</li>
<li><strong>Sagan’s Disappointment</strong>: Sagan repeatedly found himself having to debunk Buckley’s beliefs due to lack of evidence.</li>
<li><strong>The Driver’s Lack of Scientific Knowledge</strong>: Despite his curiosity, Buckley had little to no knowledge of actual scientific concepts like DNA, quantum indeterminacy, or even basic astronomy.</li>
<li><strong>Societal Failure</strong>: Sagan argues that society’s cultural motifs, education system, and media failed Buckley by not providing access to real scientific information.</li>
<li><strong>Gresham’s Law of Popular Culture</strong>: Sagan posits a kind of Gresham’s Law where bad science drives out good in popular culture.</li>
</ul>
</section>
<section id="the-pervasiveness-of-scientific-illiteracy" class="level3">
<h3 class="anchored" data-anchor-id="the-pervasiveness-of-scientific-illiteracy">The Pervasiveness of Scientific Illiteracy</h3>
<ul>
<li><p><strong>Widespread Illiteracy</strong>: Surveys suggest 95% of Americans are scientifically illiterate, a figure comparable to illiteracy rates among African American slaves before the Civil War.</p></li>
<li><p><strong>Historical Concerns about Education</strong>: Sagan notes that every generation has expressed concern about declining educational standards, citing a Sumerian essay from 4,000 years ago and Plato’s definition of scientific illiteracy in Book 7 of <em>The Laws</em>.</p>
<blockquote class="blockquote">
<p>Who is unable to count one, two, three, or to distinguish odd from even numbers, or is unable to count at all, or reckon night and day, and who is totally unacquainted with the revolution of the sun and moon and the other stars?</p>
</blockquote></li>
<li><p><strong>The Dangers of Scientific Illiteracy in the Modern Age</strong>: Sagan emphasizes the dangers of scientific illiteracy in a world facing complex issues like global warming, ozone depletion, and technological advancements.</p></li>
<li><p><strong>Impact on Policy and Personal Decisions</strong>: Sagan questions how citizens can effectively influence policy or make informed decisions without a basic understanding of science.</p></li>
<li><p><strong>Lack of Scientific Expertise in Government</strong>: Sagan points out the lack of scientific background among members of the U.S. Congress and the absence of a scientifically literate president since potentially Thomas Jefferson.</p></li>
</ul>
</section>
<section id="the-triumph-of-science-medicine-as-an-example" class="level3">
<h3 class="anchored" data-anchor-id="the-triumph-of-science-medicine-as-an-example">The Triumph of Science: Medicine as an Example</h3>
<ul>
<li><p><strong>Hippocrates and the Dawn of Scientific Medicine</strong>:</p>
<ul>
<li><p>Hippocrates, the father of medicine, is credited with moving medicine away from superstition and towards a scientific approach.</p>
<blockquote class="blockquote">
<p>Men think epilepsy divine, merely because they do not understand it. But if they call everything divine, which they do not understand, why there would be no end of divine things.</p>
</blockquote></li>
<li><p>He advocated for careful observation, the scientific method, and honesty in acknowledging the limitations of medical knowledge.</p></li>
</ul></li>
<li><p><strong>The Dark Ages of Medicine</strong>: Following the fall of Rome, European medicine regressed, characterized by a reliance on prayer and superstition, while Islamic medicine flourished.</p></li>
<li><p><strong>Queen Anne’s Tragedy</strong>: Sagan uses the example of Queen Anne’s multiple failed pregnancies to illustrate the limitations of pre-modern medicine even for the wealthy and powerful.</p></li>
<li><p><strong>Science’s Impact on Health and Longevity</strong>: Sagan highlights the immense positive impact of scientific advancements on human health and life expectancy, citing examples like:</p>
<ul>
<li>Eradication of smallpox.</li>
<li>Reduced malaria prevalence.</li>
<li>Improved leukemia survival rates.</li>
<li>Increased global food production.</li>
<li>Development of antibiotics, vaccines, and other treatments.</li>
</ul></li>
<li><p><strong>The Importance of Scientific Treatments</strong>: Sagan emphasizes the effectiveness of science-based treatments compared to alternatives like prayer or psychoanalysis, using examples of cholera and schizophrenia.</p></li>
<li><p><strong>The Link Between Science and Longevity</strong>: Sagan presents data showing the dramatic increase in human life expectancy since the 19th century, attributing this progress to scientific advancements.</p>
<ul>
<li>Life expectancy was around 20-30 years in pre-agricultural times and medieval Europe.</li>
<li>It rose to 40 years around 1870, 50 in 1915, 60 in 1930, 70 in 1955, and is approaching 80 today.</li>
</ul></li>
<li><p><strong>The Ongoing Battle Against Disease</strong>: Sagan acknowledges the ongoing challenge of combating evolving diseases and the crucial role of basic research in this effort.</p></li>
</ul>
</section>
<section id="the-double-edged-sword-of-science-and-technology" class="level3">
<h3 class="anchored" data-anchor-id="the-double-edged-sword-of-science-and-technology">The Double-Edged Sword of Science and Technology</h3>
<ul>
<li><strong>Acknowledging the Perils of Science</strong>: Sagan recognizes that science and technology are not without their downsides, including the development of nuclear weapons, environmental damage, and unethical scientific practices.</li>
<li><strong>Examples of Science’s Negative Impacts</strong>:
<ul>
<li>Scientists advocating for nuclear weapons development during the Cold War.</li>
<li>The Tuskegee Syphilis Study.</li>
<li>Nazi medical experiments.</li>
<li>Harmful technologies like thalidomide, CFCs, and Agent Orange.</li>
</ul></li>
<li><strong>The Mad Scientist Image</strong>: Sagan discusses the negative perception of scientists as “mad” or morally ambiguous figures in popular culture, citing examples like Dr.&nbsp;Faustus, Dr.&nbsp;Frankenstein, Dr.&nbsp;Strangelove, and Jurassic Park.</li>
<li><strong>The Benefits Outweigh the Risks</strong>: Despite the risks, Sagan argues that science’s benefits, such as advancements in medicine and agriculture, far outweigh its negative consequences.</li>
<li><strong>Science’s High Trust Rating</strong>: Despite misgivings, science consistently ranks high in public opinion polls as a trusted and admired profession.</li>
<li><strong>The Need for Responsibility</strong>: Sagan emphasizes the growing need for scientists and policymakers to consider the long-term consequences of technology and to adopt a global and transgenerational perspective.</li>
</ul>
</section>
<section id="the-value-of-truth-and-the-allure-of-pseudoscience" class="level3">
<h3 class="anchored" data-anchor-id="the-value-of-truth-and-the-allure-of-pseudoscience">The Value of Truth and the Allure of Pseudoscience</h3>
<ul>
<li><p><strong>The Importance of Seeking Truth</strong>: Sagan challenges the notion that “ignorance is bliss” and argues for the moral imperative of seeking truth, even if it is uncomfortable.</p>
<blockquote class="blockquote">
<p>It is morally as bad not to care whether a thing is true or not, so long as it makes you feel good, as it is not to care how you got your money, as long as you have got it. - Edmund Wade Teal, <em>Circle of the Seasons</em> (1950)</p>
</blockquote></li>
<li><p><strong>The Benefits of Self-Knowledge</strong>: Sagan suggests that even if we discover unpleasant truths about ourselves, such as a predisposition to hatred, self-knowledge is the only way to address such issues.</p></li>
<li><p><strong>The Human Need for Cosmic Importance</strong>: Sagan acknowledges that science may deflate our sense of cosmic centrality but argues that grasping the universe as it truly is is preferable to clinging to comforting delusions.</p></li>
<li><p><strong>The Expanding Universe and Our Place in It</strong>: Sagan contends that scientific discoveries, such as the vastness of the universe and our evolutionary connection to other life forms, enhance our understanding of our place in the cosmos.</p></li>
<li><p><strong>The Inevitability of Science</strong>: Sagan concludes that science is here to stay and that we must learn to make the best of it, recognizing its benefits both practically and spiritually.</p></li>
</ul>
</section>
<section id="the-nature-and-appeal-of-pseudoscience" class="level3">
<h3 class="anchored" data-anchor-id="the-nature-and-appeal-of-pseudoscience">The Nature and Appeal of Pseudoscience</h3>
<ul>
<li><strong>Pseudoscience vs.&nbsp;Erroneous Science</strong>: Sagan differentiates pseudoscience from mistakes in legitimate science.
<ul>
<li>Science acknowledges and learns from errors, while pseudoscience often avoids testing its claims and resists scrutiny.</li>
</ul></li>
<li><strong>Pseudoscience’s Appeal to Emotion</strong>: Pseudoscience often exploits our emotional needs, offering simplistic explanations, promises of magical powers, and assurances of cosmic significance.</li>
<li><strong>Wishing Makes It So</strong>: Sagan identifies the core concept of “wishing makes it so” in many forms of pseudoscience, appealing to our desire for effortless fulfillment of our wishes.</li>
<li><strong>The Example of Zatara</strong>: Sagan shares a childhood anecdote about a fictional magician named Zatara who could make anything happen by speaking backwards, illustrating the human fascination with effortless control over reality.</li>
<li><strong>Pseudoscience and Lack of Scientific Understanding</strong>: Sagan suggests that pseudoscience thrives in the absence of a proper understanding of science and its methods.</li>
<li><strong>The Role of Religion</strong>: While not all religions promote pseudoscience, Sagan notes that some religions have historically served as nurseries for pseudoscientific beliefs.</li>
<li><strong>Global Prevalence of Pseudoscience</strong>: Sagan provides examples of pseudoscientific beliefs and practices from various cultures around the world, demonstrating its global reach.</li>
<li><strong>The Rise of Pseudoscience in Post-Communist Societies</strong>: Sagan discusses the resurgence of pseudoscience in Russia and China following the decline of communist regimes, where suppression of critical thinking created a fertile ground for superstition.</li>
<li><strong>Pseudoscience in America</strong>: Sagan focuses on examples of pseudoscience in America, such as psychic hotlines, astrologers advising CEOs, and the influence of astrology on political figures like Ronald Reagan.</li>
</ul>
</section>
<section id="pseudoscience-as-a-gateway-to-religion-and-the-blurred-lines-between-belief-systems" class="level3">
<h3 class="anchored" data-anchor-id="pseudoscience-as-a-gateway-to-religion-and-the-blurred-lines-between-belief-systems">Pseudoscience as a Gateway to Religion and the Blurred Lines Between Belief Systems</h3>
<ul>
<li><strong>Pseudoscience’s Potential for Growth</strong>: Sagan argues that while some pseudoscientific ideas are seemingly harmless, others can evolve into powerful belief systems with significant social and political influence, even becoming religions.</li>
<li><strong>The Continuum of Belief</strong>: Sagan describes a continuum from flawed science to pseudoscience, superstition, and established religions, highlighting the blurred lines between these categories.</li>
<li><strong>Sagan’s Approach to “Cult”</strong>: Sagan clarifies his intention to avoid using the term “cult” pejoratively and instead focus on evaluating the claims of different belief systems based on evidence.</li>
<li><strong>Critique of Theology’s Extremes</strong>: Sagan acknowledges the diversity and complexity of religious thought but criticizes extreme theological positions that blur the lines between faith and pseudoscience.</li>
<li><strong>The Need for Skepticism in Religion</strong>: Sagan suggests that mainstream religions have an interest in encouraging healthy skepticism to combat distortions and absurdities committed in their name.</li>
<li><strong>Potential Alliance Against Pseudoscience</strong>: Sagan proposes a potential partnership between science and religion to combat the spread of pseudoscience and promote critical thinking.</li>
</ul>
</section>
<section id="the-importance-of-teaching-the-scientific-method" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-teaching-the-scientific-method">The Importance of Teaching the Scientific Method</h3>
<ul>
<li><p><strong>The Fallibility of Human Perception</strong>: Sagan highlights the limitations of human perception and our susceptibility to errors, biases, and illusions, citing the book <em>How We Know What Isn’t So</em> by Thomas Gilovich.</p></li>
<li><p><strong>The Role of Science in Overcoming Bias</strong>: Sagan emphasizes the importance of the scientific method’s rigorous skepticism and self-correction mechanisms in overcoming human fallibility.</p></li>
<li><p><strong>The Need to Teach the Scientific Method</strong>: Sagan argues that simply teaching the findings of science without explaining the scientific method leaves people vulnerable to pseudoscientific claims.</p></li>
<li><p><strong>Distinguishing Science from Pseudoscience</strong>: Sagan concludes by stressing the critical importance of teaching the scientific method as the key to differentiating between genuine science and pseudoscience, empowering individuals to evaluate claims based on evidence and critical thinking.</p>
<blockquote class="blockquote">
<p>If we teach only the findings and products of science—no matter how useful and even inspiring they may be—without communicating its critical method, how can the average person possibly distinguish science from pseudoscience? Both then are presented as unsupported assertion. The method of science, as stodgy and grumpy as it may seem, is far more important than the findings of science.</p>
</blockquote></li>
</ul>
</section>
</section>
<section id="chapter-2-science-and-hope" class="level2">
<h2 class="anchored" data-anchor-id="chapter-2-science-and-hope">Chapter 2: Science and Hope</h2>
<section id="introduction-the-lure-of-knowledge-and-the-threat-of-ignorance" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-lure-of-knowledge-and-the-threat-of-ignorance">Introduction: The Lure of Knowledge and the Threat of Ignorance</h3>
<ul>
<li><p><strong>Epigraph</strong>: Inuit poem about a man forgetting his promise to help his companion into heaven due to its splendor.</p>
<blockquote class="blockquote">
<p>Two men came to a hole in the sky. One asked the other to lift him up. But so beautiful was it in heaven, that the man who looked in over the edge forgot everything, forgot his companion, whom he had promised to help up, and simply ran off into all the splendor of heaven. From an Igloolik Inuit Prose Poem, Early 20th Century</p>
</blockquote>
<ul>
<li>Symbolizes the potential for individuals to be captivated by knowledge and lose sight of their responsibilities to others.</li>
</ul></li>
<li><p><strong>Sagan’s Childhood Aspiration</strong>: Inspired by the vastness and wonder of the universe, particularly the stars as distant suns.</p>
<ul>
<li>Driven by a desire to understand how things work and explore new worlds.</li>
</ul></li>
<li><p><strong>Romance of Science</strong>: Sagan’s lifelong fascination with science, ignited by the 1939 World’s Fair.</p></li>
<li><p><strong>Purpose of the Book</strong>:</p>
<ul>
<li>Personal statement reflecting Sagan’s love for science.</li>
<li>Advocacy for science as a way of thinking crucial for a well-informed citizenry.</li>
</ul></li>
<li><p><strong>Foreboding</strong>: Concern about a future America dominated by a service and information economy.</p>
<ul>
<li>Potential loss of manufacturing industries and concentration of technological power in the hands of a few.</li>
<li>Decline in critical thinking and a return to superstition and darkness.</li>
</ul></li>
<li><p><strong>“Dumbing Down” of America</strong>: Evident in the decay of substantive content in the media.</p>
<ul>
<li>Sound bites, lowest common denominator programming, celebration of ignorance.</li>
<li>Examples: “Dumb and Dumber”, “Beavis and Butthead”.</li>
</ul></li>
<li><p><strong>Dependence on Science and Lack of Understanding</strong>: Global civilization relies heavily on science and technology, yet most people lack understanding.</p>
<ul>
<li>This is a recipe for disaster.</li>
</ul></li>
<li><p><strong>Historical Context</strong>: Thomas Ady’s “A Candle in the Dark” (1656) criticized witch hunts, which blamed misfortunes on witchcraft.</p>
<ul>
<li>Fear of the unknown led people to embrace explanations that offered comfort.</li>
</ul></li>
<li><p><strong>Science as a Guiding Force</strong>: Science aims to understand the world, provide explanations, and guide us towards a safer course.</p>
<ul>
<li>Examples: Microbiology and meteorology explaining phenomena previously attributed to witchcraft.</li>
</ul></li>
<li><p><strong>Ignorance as a Cause of Misery</strong>: Avoidable human suffering often stems from ignorance, especially about ourselves.</p></li>
<li><p><strong>Temptation of Pseudoscience and Superstition</strong>: Concern about the increasing appeal of unreason, particularly in times of uncertainty or crisis.</p></li>
<li><p><strong>Science and Uncertainty</strong>:</p>
<ul>
<li>Science acknowledges that it doesn’t have all the answers.</li>
<li>The universe is vast and old, and mysteries may remain forever.</li>
<li>Some New Age and religious writers misrepresent scientists as believing they know everything.</li>
<li>Science rejects claims without evidence but doesn’t claim complete knowledge.</li>
</ul></li>
<li><p><strong>Science as a Tool</strong>:</p>
<ul>
<li>Science is the best tool we have for understanding the world, even if imperfect, like democracy.</li>
<li>It cannot dictate human action but can illuminate consequences of different choices.</li>
</ul></li>
<li><p><strong>Scientific Thinking</strong>:</p>
<ul>
<li><strong>Imaginative and disciplined</strong>: Open to new ideas but also rigorously skeptical.</li>
<li>Essential for a democracy in a rapidly changing world.</li>
</ul></li>
<li><p><strong>Error-Correcting Machinery</strong>:</p>
<ul>
<li>Science has built-in mechanisms for self-correction through self-criticism and testing against the real world.</li>
<li>This is what distinguishes it from pseudoscience and superstition.</li>
</ul></li>
<li><p><strong>Error Bars</strong>:</p>
<ul>
<li><strong>Error bars</strong> are a visual representation of the uncertainty in scientific knowledge.</li>
<li>They are a reminder that no knowledge is absolute.</li>
<li>Size of the error bar indicates the level of uncertainty.</li>
<li>Outside of pure mathematics, nothing is known with absolute certainty.</li>
</ul></li>
<li><p><strong>Veridical Status</strong>: Scientists carefully characterize the reliability of their understanding:</p>
<ul>
<li><strong>Conjectures and hypotheses</strong>: Highly tentative.</li>
<li><strong>Laws of nature</strong>: Repeatedly confirmed through observation and experimentation.</li>
<li>Even laws of nature are not absolutely certain and may require correction in extreme circumstances (e.g., inside black holes).</li>
</ul></li>
<li><p><strong>Human Desire for Certainty</strong>: Humans may crave absolute certainty, but science teaches us that the best we can hope for is continual improvement in understanding.</p>
<ul>
<li>We are always learning from our mistakes and approaching the truth asymptotically.</li>
</ul></li>
<li><p><strong>Error Bars in Society</strong>: Imagine a society where error bars accompanied speeches, advertisements, and sermons, reflecting the uncertainty in their claims.</p></li>
<li><p><strong>Mistrust of Authority</strong>: A fundamental principle of science is to distrust arguments from authority.</p>
<ul>
<li>Scientists, like all humans, are susceptible to biases and hierarchies.</li>
<li>Authorities must prove their claims through evidence and rigorous scrutiny.</li>
</ul></li>
<li><p><strong>Challenge to Conventional Wisdom</strong>: Science’s independence and willingness to challenge accepted beliefs can make it threatening to less self-critical doctrines.</p></li>
<li><p><strong>Effort and Reward</strong>: Science may require effort to understand, but the process of grasping its findings can be deeply satisfying.</p>
<ul>
<li>This is especially true for children who are naturally curious and will live in a future shaped by science.</li>
</ul></li>
<li><p><strong>Reverence and Awe</strong>: Science elicits a sense of wonder and appreciation for the magnificence of the cosmos.</p></li>
<li><p><strong>Transnational Metamind</strong>: The cumulative buildup of scientific knowledge across generations and cultures creates a collective intelligence.</p></li>
<li><p><strong>Science and Spirituality</strong>:</p>
<ul>
<li><strong>Spirit</strong> (from Latin “to breathe”) does not necessarily imply anything outside the realm of matter or science.</li>
<li>Science is compatible with spirituality and can be a source of it.</li>
<li>Understanding our place in the vast universe and the complexity of life can evoke spiritual feelings of elation and humility.</li>
<li>Similar emotions can be experienced through art, music, literature, or acts of selfless courage.</li>
</ul></li>
<li><p><strong>Science Delivers Results</strong>:</p>
<ul>
<li>Science may be challenging and have potential for misuse, but it consistently produces tangible results.</li>
<li><strong>Predictive Power</strong>: Science can accurately predict future events, unlike many other belief systems.
<ul>
<li>Example: Predicting solar eclipses with pinpoint accuracy millennia in advance.</li>
</ul></li>
<li><strong>Practical Applications</strong>: Science offers effective solutions to problems.
<ul>
<li>Examples: Vitamin B12 for anemia, polio vaccination, amniocentesis for determining fetal sex.</li>
</ul></li>
<li><strong>Reliability</strong>: Science’s ability to make accurate and testable predictions surpasses any religion.</li>
<li><strong>Advocacy Based on Success</strong>: Sagan advocates for science because it works, not out of blind faith.</li>
</ul></li>
<li><p><strong>Openness to Criticism</strong>: Science does not claim a monopoly on truth and welcomes philosophical scrutiny.</p></li>
<li><p><strong>Choosing the Best Tool</strong>: We should compare different doctrines based on their predictive power, error-correcting mechanisms, and overall effectiveness.</p>
<ul>
<li>Choose the one that works best, not just the one that feels good.</li>
</ul></li>
<li><p><strong>Science and False Idols</strong>: By evaluating different doctrines based on their effectiveness, we can distinguish between genuine knowledge and false beliefs.</p></li>
<li><p><strong>Error Correction and Openness</strong>:</p>
<ul>
<li>Science’s success is partly due to its built-in error-correcting mechanisms.</li>
<li>There are no forbidden questions or sacred truths.</li>
<li>Openness to new ideas and rigorous scrutiny are essential.</li>
</ul></li>
<li><p><strong>Importance of Evidence</strong>: No matter how esteemed a scientist is, they must prove their claims through evidence and withstand expert criticism.</p></li>
<li><p><strong>Diversity and Debate</strong>: Science values diverse perspectives and encourages vigorous debate.</p></li>
<li><p><strong>The Gauntlet of Criticism</strong>: Science embraces criticism as a means of refining and improving knowledge.</p>
<ul>
<li>Examples: PhD oral exams, scientific meetings, peer review of journal submissions.</li>
</ul></li>
<li><p><strong>Value of Criticism</strong>: Valid criticism helps scientists identify weaknesses in their work and refine their ideas.</p></li>
<li><p><strong>Discarding Flawed Ideas</strong>: Scientists are expected to abandon ideas that don’t work and focus on developing better explanations.</p></li>
<li><p><strong>Michael Faraday’s Warning</strong>:</p>
<blockquote class="blockquote">
<p>“To seek for such evidence and appearances as are in the favor of our desires, and to disregard those which oppose them. We receive as friendly that which agrees with us. We resist with dislike that which opposes us. Whereas the very reverse is required by every dictate of common sense.”</p>
</blockquote></li>
<li><p><strong>Humility in Science</strong>:</p>
<ul>
<li>Despite challenging established beliefs, science is inherently humble.</li>
<li>Scientists do not impose their will on nature but humbly inquire and accept the findings.</li>
<li>They acknowledge human fallibility and insist on independent verification of claims.</li>
</ul></li>
<li><p><strong>Challenging Newton</strong>:</p>
<ul>
<li>Newton’s laws of motion and gravitation are monumental achievements.</li>
<li>However, scientists have actively sought to find their limitations.</li>
<li>Einstein’s theories of relativity showed that Newtonian physics breaks down at high speeds and strong gravities.</li>
<li>This does not diminish Newton’s accomplishments but refines our understanding.</li>
</ul></li>
<li><p><strong>Testing General Relativity</strong>:</p>
<ul>
<li>Scientists continue to test Einstein’s general relativity, seeking to find where it might fail.</li>
<li>Example: Searching for gravitational waves, predicted by general relativity but not yet directly observed.</li>
<li><strong>Binary Pulsars</strong>: Taylor and Hulse’s work on binary pulsars provided precise verification of general relativity, earning them the Nobel Prize.</li>
</ul></li>
<li><p><strong>The Search for Limitations</strong>: Even if a theory is widely successful, scientists strive to identify its boundaries and potential weaknesses.</p></li>
<li><p><strong>Science vs.&nbsp;Organized Religion</strong>:</p>
<ul>
<li>Sagan questions the confidence inspired by organized religions.</li>
<li>He challenges religious leaders to acknowledge potential flaws in their doctrines and establish mechanisms for critical examination.</li>
<li>Are religious teachings still valid in the modern world?</li>
<li>What rewards are given to religious skeptics?</li>
</ul></li>
<li><p><strong>Ann Druyan’s Observation</strong>:</p>
<blockquote class="blockquote">
<p>“Science is forever whispering in our ears, ‘Remember, you’re very new at this. You might be mistaken. You’ve been wrong before.’”</p>
</blockquote></li>
<li><p><strong>Questioning Divine Inspiration and Miracles</strong>:</p>
<ul>
<li>Could scripture be the product of fallible humans rather than divinely inspired?</li>
<li>Could miracles have alternative explanations?</li>
</ul></li>
<li><p><strong>Modern Science and Scripture</strong>: The lack of prefiguration of modern scientific findings in scripture casts doubt on its divine inspiration.</p></li>
<li><p><strong>Einstein’s Style of Thinking</strong>:</p>
<ul>
<li>Analysis of Einstein’s 1905 paper “On the Electrodynamics of Moving Bodies”.</li>
<li>The writing is spare, technical, cautious, and clear, reflecting the scientific approach.</li>
<li>The paper’s unassuming title and style belie its revolutionary significance.</li>
</ul></li>
<li><p><strong>Importance of Experimentation</strong>:</p>
<ul>
<li>Scientists rely on experimentation to test their ideas and understand the world.</li>
<li>Experimentation helps overcome reliance on intuition, which can be misleading.</li>
<li>Examples of previously “obvious” but incorrect beliefs: Flat Earth, heavier objects falling faster, leeches as a cure-all, natural slavery, geocentrism, absolute rest.</li>
</ul></li>
<li><p><strong>Robert W. Wood’s Analogy</strong>:</p>
<ul>
<li>Wood contrasted the approaches of physics and metaphysics (philosophy/pseudoscience).</li>
<li>The physicist tests ideas through rigorous experimentation, discarding them if they fail.</li>
<li>The metaphysicist lacks a laboratory and relies solely on thought.</li>
<li>The difference lies in the method, not in the intelligence of the practitioners.</li>
</ul></li>
<li><p><strong>Four Reasons for Popularizing Science</strong>:</p>
<ul>
<li><strong>Need for Broad Understanding</strong>: It is insufficient and dangerous to rely solely on a small group of scientific experts. Basic scientific literacy is crucial for everyone.</li>
<li><strong>Science and Development</strong>: Science can help emerging nations escape poverty and backwardness.
<ul>
<li>Many nations recognize this, evidenced by the influx of foreign students in American science and engineering programs.</li>
<li>Abandoning science leads to decline.</li>
</ul></li>
<li><strong>Environmental Awareness</strong>: Science provides early warnings about the environmental consequences of our technologies.</li>
<li><strong>Understanding Our Place</strong>: Science provides insights into the deepest questions about our origins, nature, and fate as a species, life on Earth, and the universe.
<ul>
<li>These questions have been pondered by cultures throughout history.</li>
<li>Science offers a unique path to understanding our cosmic context.</li>
</ul></li>
</ul></li>
<li><p><strong>Science and Democracy</strong>:</p>
<ul>
<li><strong>Shared Values</strong>: The values of science and democracy are largely aligned.</li>
<li><strong>Origins</strong>: Both originated in ancient Greece.</li>
<li><strong>Empowerment</strong>: Science empowers anyone who learns it, although access has been unequal.</li>
<li><strong>Free Exchange of Ideas</strong>: Science thrives on open communication and opposes secrecy.</li>
<li><strong>No Privileged Positions</strong>: Science does not claim special status or authority.</li>
<li><strong>Encouraging Dissent</strong>: Both science and democracy encourage diverse opinions and rigorous debate.</li>
<li><strong>Standards of Evidence</strong>: Both demand sound reasoning, evidence-based arguments, and intellectual honesty.</li>
<li><strong>Countering Misinformation</strong>: Science can expose falsehoods and protect against the misuse of religion and superstition.</li>
<li><strong>Course Correction</strong>: Science provides a way to identify and correct our errors.</li>
<li><strong>Safeguarding Democracy</strong>: Widespread understanding of science strengthens democracy and helps us make informed decisions.</li>
</ul></li>
<li><p><strong>Subversion of Democracy</strong>: Science’s products can be used to undermine democracy more effectively than pre-industrial methods.</p></li>
<li><p><strong>Vigilance and Critical Thinking</strong>: We must be vigilant and practice critical thinking to discern truth from misinformation.</p></li>
<li><p><strong>Consequences of Neglecting Critical Thinking</strong>: Failure to develop these skills leaves us vulnerable to manipulation and unable to address serious problems.</p></li>
<li><p><strong>A Society Shaped by Science and Hope</strong>:</p>
<ul>
<li>Sagan critiques the negative messages prevalent in media aimed at children.</li>
<li>He envisions a society where science and hope are instilled instead.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-3-the-man-in-the-moon-and-the-face-on-mars" class="level2">
<h2 class="anchored" data-anchor-id="chapter-3-the-man-in-the-moon-and-the-face-on-mars">Chapter 3: The Man in the Moon and the Face on Mars</h2>
<section id="introduction-pseudoscience-and-pattern-recognition" class="level3">
<h3 class="anchored" data-anchor-id="introduction-pseudoscience-and-pattern-recognition">Introduction: Pseudoscience and Pattern Recognition</h3>
<ul>
<li><strong>Each scientific field has its own pseudoscience</strong>:
<ul>
<li>Geophysicists: Flat/hollow Earth, shifting continents, earthquake prediction.</li>
<li>Botanists: Plants with emotional lives detectable by lie detectors.</li>
<li>Anthropologists: Surviving ape-men.</li>
<li>Zoologists: Extant dinosaurs.</li>
<li>Evolutionary biologists: Biblical literalists.</li>
<li>Archaeologists: Ancient astronauts, forged artifacts.</li>
<li>Physicists: Perpetual motion, relativity disprovers, cold fusion.</li>
<li>Chemists: Alchemy.</li>
<li>Psychologists: Parapsychology, some psychoanalysis.</li>
<li>Economists: Long-range forecasting.</li>
<li>Meteorologists: Long-range weather forecasting (excluding climate).</li>
<li>Astronomy: Astrology.</li>
</ul></li>
<li><strong>Pseudosciences can intersect</strong>:
<ul>
<li>Example: Telepathic searches for Atlantean treasures or astrological economic forecasts.</li>
</ul></li>
<li><strong>Focus of the chapter</strong>: Pseudosciences related to other worlds and extraterrestrial life, particularly those involving potential human perceptual errors.</li>
<li><strong>Two specific pseudoscientific doctrines</strong>:
<ol type="1">
<li>The existence of a giant stone face on Mars.</li>
<li>The claim of alien visitation to Earth.</li>
</ol></li>
<li><strong>Appeal of these claims</strong>: Tap into deep human fears and longings.</li>
</ul>
</section>
<section id="the-man-in-the-moon-pareidolia-and-natural-processes" class="level3">
<h3 class="anchored" data-anchor-id="the-man-in-the-moon-pareidolia-and-natural-processes">The Man in the Moon: Pareidolia and Natural Processes</h3>
<ul>
<li><strong>Pre-scientific view of the Moon</strong>: An enigma, not considered a world.</li>
<li><strong>Naked-eye observation of the Moon</strong>: Irregular bright and dark markings, leading to pattern recognition and the creation of various images in myths and folklore.
<ul>
<li>Examples: Woman weaving, laurel trees, elephant, girl, rabbit, lunar intestines, woman pounding cloth, jaguar.</li>
</ul></li>
<li><strong>The Man in the Moon</strong>: The most common image, though not an accurate representation of a human face.</li>
<li><strong>Pre-Apollo era</strong>: Children were told the Moon was made of green cheese.</li>
<li><strong>Children’s depictions</strong>: The Man in the Moon as a simple, happy face.</li>
<li><strong>Scientific explanation</strong>:
<ul>
<li><strong>Bright areas (forehead, cheeks, chin)</strong>: Ancient cratered highlands, ~4.5 billion years old (based on Apollo sample dating).</li>
<li><strong>Dark areas (eyes, mouth)</strong>: Younger basaltic lava flows called <strong>maria</strong> (singular: <strong>mare</strong>), Latin for “ocean” despite the Moon being dry.</li>
<li>Maria formed in the first few hundred million years of lunar history, partly due to asteroid and comet impacts.</li>
<li><strong>Right eye</strong>: Mare Imbrium.</li>
<li><strong>Left eye area</strong>: Mare Serenitatis and Mare Tranquillitatis (Apollo 11 landing site).</li>
<li><strong>Mouth</strong>: Mare Humorum.</li>
</ul></li>
<li><strong>The Man in the Moon as a record of catastrophes</strong>: Most events occurred before life on Earth arose.</li>
<li><strong>Human tendency</strong>: To impose human characteristics on random events.</li>
<li><strong>Evolutionary basis for facial recognition</strong>:
<ul>
<li>Humans are gregarious and require parental care.</li>
<li>Smiling and facial recognition in infants strengthen parent-child bonds.</li>
<li>Infants unable to recognize faces were less likely to survive.</li>
</ul></li>
<li><strong>Pareidolia</strong>: The tendency to perceive faces where there are none.
<ul>
<li>Examples:
<ul>
<li><strong>Geological formations</strong>: Old Man of the Mountains (New Hampshire), Devil’s Head (North Carolina), Sphinx Rock (England), Old Woman (France), Vartan Rock (Armenia), Mount Ixtaccihuatl (Mexico), Grand Tetons (Wyoming).</li>
<li><strong>Clouds</strong>: Visions of religious figures in cloud formations.</li>
<li><strong>Objects</strong>: Eggplants, wood grain, cow hides resembling faces.</li>
</ul></li>
</ul></li>
<li><strong>Religious interpretations of pareidolia</strong>: Faces of religious figures on objects (e.g., tortillas) are often attributed to divine intervention.</li>
<li><strong>Statistical explanation</strong>: Given a large enough sample size, it’s likely to find objects resembling familiar patterns.</li>
<li><strong>Examples in nature</strong>: Ginseng, mandrake roots, chestnut shoots, corals, ear fungus, moth wings.</li>
<li><strong>Evolutionary advantage of facial mimicry</strong>: Plants and animals resembling faces might be less likely to be eaten by predators.</li>
<li><strong>Natural Likeness by John Michel (1979)</strong>:
<ul>
<li>Explores instances of pareidolia in nature.</li>
<li>Accepts claims of Richard Shaver (pictographic language in rocks) and Antonin Artaud (hallucinogen-induced patterns in rocks) as evidence of ancient civilizations.</li>
</ul></li>
<li><strong>Michel’s critique of materialism</strong>: Argues that a rationalist view limits our perception of the world.</li>
<li><strong>Conclusion on pareidolia</strong>: Nature creates these patterns, and we have the capacity to perceive and appreciate them.</li>
</ul>
</section>
<section id="the-martian-canals-an-illusion-of-intelligent-design" class="level3">
<h3 class="anchored" data-anchor-id="the-martian-canals-an-illusion-of-intelligent-design">The Martian Canals: An Illusion of Intelligent Design</h3>
<ul>
<li><strong>History of Martian canals</strong>:
<ul>
<li>First observed in 1877.</li>
<li>Seemingly confirmed by many astronomers using large telescopes.</li>
<li>Described as a network of single and double straight lines crisscrossing the Martian surface.</li>
<li>Attributed to intelligent design due to their geometric regularity.</li>
</ul></li>
<li><strong>Conclusions drawn from canal observations</strong>:
<ul>
<li>Mars as a dying planet with a wise civilization dedicated to water conservation.</li>
<li>Hundreds of canals were mapped and named.</li>
</ul></li>
<li><strong>Lack of photographic evidence</strong>: Canals did not appear in photographs.
<ul>
<li>Explanation: Human eye could remember moments of atmospheric clarity, while photographs averaged clear and blurry moments.</li>
</ul></li>
<li><strong>Debate over canal existence</strong>: Some astronomers saw them, others did not.</li>
<li><strong>Influence on popular culture</strong>: Martian canals fueled the idea of Mars as an abode of life and the prevalence of Martians in fiction.</li>
<li><strong>Mariner 9 and Viking missions</strong>:
<ul>
<li>Mapped Mars pole-to-pole with high resolution.</li>
<li><strong>No evidence of canals found</strong>.</li>
<li>Some linear features existed (e.g., a large rift valley), but not the network of canals.</li>
</ul></li>
<li><strong>Canals as an illusion</strong>:
<ul>
<li>Result of human perceptual errors at the limit of telescopic resolution through Earth’s atmosphere.</li>
</ul></li>
<li><strong>Cautionary tale</strong>: Even experienced scientists can make significant errors in pattern recognition, especially when influenced by the implications of their observations.</li>
<li><strong>Spacecraft missions</strong>: Provided a means to correct misapprehensions about Martian canals.</li>
</ul>
</section>
<section id="spacecraft-exploration-and-the-search-for-artifacts" class="level3">
<h3 class="anchored" data-anchor-id="spacecraft-exploration-and-the-search-for-artifacts">Spacecraft Exploration and the Search for Artifacts</h3>
<ul>
<li><strong>Early 1960s</strong>: Carl Sagan urged attention to the possibility of finding artifacts of past civilizations on other worlds.</li>
<li><strong>Astronaut reports and alien interpretations</strong>:
<ul>
<li>John Glenn’s “fireflies” (later explained as flecks of paint).</li>
<li>Any unexplained observation by astronauts was often attributed to aliens.</li>
<li>Prosaic explanations were dismissed.</li>
</ul></li>
<li><strong>Apollo era</strong>:
<ul>
<li>Non-experts scrutinized lunar photographs for anomalies.</li>
<li><strong>Claims of artificial structures</strong>: Latin letters, Arabic numerals, pyramids, highways, crosses, glowing UFOs, bridges, radio antennas, vehicle tracks, machine-made craters.</li>
<li><strong>All claims debunked</strong>: Natural geological formations, camera reflections, misinterpretations of shadows.</li>
<li><strong>Example</strong>: “Ballistic missiles” turned out to be low hills casting long shadows.</li>
</ul></li>
<li><strong>Lessons learned</strong>:
<ul>
<li>Amateurs and even professionals can misinterpret complex terrain in photographs, especially at the limit of resolution.</li>
<li>Hopes and fears can influence scientific objectivity.</li>
</ul></li>
<li><strong>Examples of pareidolia in spacecraft images</strong>:
<ul>
<li>Joseph Stalin’s face on Venus (Soviet radar imagery).</li>
<li>Bugs Bunny’s face on Uranian moon Ariel.</li>
<li>Smiling face in clouds on Titan (Hubble Space Telescope).</li>
</ul></li>
<li><strong>Pareidolia in Milky Way astronomy</strong>:
<ul>
<li>Horsehead, Eskimo, Owl, Humunculus, Tarantula, and North American Nebulae (gas and dust clouds).</li>
<li>Stickman (distribution of galaxies resembling a human form).</li>
</ul></li>
<li><strong>Mars</strong>:
<ul>
<li>Diverse terrain with many close-up photographs available.</li>
<li><strong>Happy face crater</strong>: 8 km across, with radial splash marks resembling a smiling sun.
<ul>
<li>Attributed to natural processes, not intelligent design.</li>
</ul></li>
<li><strong>Pyramids in Elysium High Plateau</strong>: Cluster of pyramid-shaped mountains oriented in the same direction.
<ul>
<li>Similar features (dry canters) found on Earth, formed by wind erosion.</li>
<li><strong>Dry canters</strong>: Order generated from chaos by natural processes.</li>
</ul></li>
</ul></li>
<li><strong>Cydonia and the Face on Mars</strong>:
<ul>
<li><strong>Description</strong>: A kilometer-wide mesa resembling a human face, located in a region with various oddly shaped hills.</li>
<li><strong>Age</strong>: Surrounding terrain appears to be hundreds of millions of years old.</li>
<li><strong>History of attention</strong>: Intermittent interest in the US and Soviet Union.</li>
<li><strong>Weekly World News (1984)</strong>: Falsely claimed Soviet probe found ruined temples and a 50,000-year-old civilization on Mars.</li>
<li><strong>Viking orbiter (1976)</strong>: Discovered the face.</li>
<li><strong>NASA’s initial dismissal</strong>: “Trick of light and shadow,” leading to accusations of a cover-up.</li>
<li><strong>Digital enhancement by independent researchers</strong>:
<ul>
<li>Some were cautious and contributed to the scientific understanding.</li>
<li>Others made extravagant claims (nearby city, temples, fortifications, specific astronomical orientation).</li>
</ul></li>
<li><strong>Speculation about the face</strong>:
<ul>
<li>Looking up to God.</li>
<li>Remnant of an interplanetary war.</li>
<li>Evidence of a human civilization on Mars.</li>
<li>Built by interstellar visitors.</li>
<li>Connection to crop circles on Earth.</li>
<li>Source of hidden energy.</li>
<li>NASA cover-up.</li>
</ul></li>
<li><strong>Mars Observer failure (1993)</strong>: Accusations of NASA faking the failure to study the face secretly.</li>
<li><strong>Weekly World News (1993)</strong>: Fake photo of the face attributed to Mars Observer, claiming proof of Martians colonizing Earth 200,000 years ago and a government cover-up.</li>
</ul></li>
<li><strong>Scientific analysis of the face</strong>:
<ul>
<li><strong>Probability</strong>: One square kilometer out of 150 million square kilometers resembling a face is not statistically surprising, given human pareidolia.</li>
<li><strong>Neighboring terrain</strong>: Similar features exist that do not resemble faces.</li>
<li><strong>Nostril</strong>: A data artifact in the original image.</li>
<li><strong>Shadow analysis</strong>: Enhancing contrast in the shadowed side reveals a less face-like appearance.</li>
<li><strong>Conclusion</strong>: Likely a natural geological formation sculpted by wind erosion over millions of years.</li>
</ul></li>
<li><strong>Further investigation</strong>: Closer examination with high-resolution images is needed to confirm the geological origin.</li>
<li><strong>Future missions</strong>: Planned American and Russian missions to Mars should provide more detailed images of the face, pyramids, and other features.</li>
</ul>
</section>
<section id="the-persistence-of-pareidolia-and-tabloid-sensationalism" class="level3">
<h3 class="anchored" data-anchor-id="the-persistence-of-pareidolia-and-tabloid-sensationalism">The Persistence of Pareidolia and Tabloid Sensationalism</h3>
<ul>
<li><strong>Prediction</strong>: Even with evidence of a natural origin, claims of monumental faces in space will likely persist.</li>
<li><strong>Tabloid reports</strong>: Faces on various planets, often attributed to fictional spacecraft and scientists.</li>
<li><strong>Example</strong>: Claims of alien ruins on the Moon (giant city, glass dome, shattered by meteors, five-mile-tall tower).</li>
<li><strong>Weekly World News (1992)</strong>: Fabricated story about voices singing “Glory, glory, glory” emanating from a black hole.</li>
<li><strong>Weekly World News (1993)</strong>: Fake photograph of “God” in the Orion Nebula.</li>
<li><strong>Weekly World News (1993)</strong>: Fake story about a doomsday asteroid (M167) hitting Earth on November 11, 1993.</li>
<li><strong>Impact of tabloid stories</strong>:
<ul>
<li>Blur the line between real science and fiction.</li>
<li>Can hinder public understanding of genuine scientific issues (e.g., asteroid impact threat).</li>
</ul></li>
<li><strong>Tabloid defense</strong>: Claims to be at the mercy of their writers and not responsible for fact-checking.</li>
<li><strong>Sal Yvonne (Weekly World News managing editor)</strong>: “Skepticism doesn’t sell newspapers.”</li>
<li><strong>Tabloid practices</strong>: Writers and editors reportedly fabricate stories for entertainment and profit.</li>
<li><strong>Reader interpretations</strong>: Some claim to read tabloids purely for entertainment, others appear to believe the content.</li>
<li><strong>The expanding tabloid universe</strong>: Influences other media outlets, blurring the lines between news and entertainment.</li>
<li><strong>Reasons for tabloid popularity</strong>:
<ul>
<li>Desire for escapism and wonder.</li>
<li>Longing for external guidance and reassurance.</li>
<li>Craving for scientific validation of beliefs without rigorous standards of evidence.</li>
</ul></li>
<li><strong>Tabloids as pseudo-science/pseudo-religion</strong>: Exploit the desire for scientific proof to confirm ancient faiths.</li>
</ul>
</section>
<section id="conclusion-skepticism-and-the-search-for-extraterrestrial-wonders" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-skepticism-and-the-search-for-extraterrestrial-wonders">Conclusion: Skepticism and the Search for Extraterrestrial Wonders</h3>
<ul>
<li><strong>Openness to surprises in space exploration</strong>: Scientists are prepared for unexpected discoveries.</li>
<li><strong>Importance of skepticism</strong>: A necessary tool for avoiding self-deception.</li>
<li><strong>Real wonders of the universe</strong>: Sufficiently awe-inspiring without the need for invented ones.</li>
<li><strong>Emphasis on rigorous evidence</strong>: Essential for maintaining the credibility of scientific inquiry.</li>
</ul>
</section>
</section>
<section id="chapter-4-aliens" class="level2">
<h2 class="anchored" data-anchor-id="chapter-4-aliens">Chapter 4: Aliens</h2>
<section id="introduction" class="level3">
<h3 class="anchored" data-anchor-id="introduction">Introduction</h3>
<ul>
<li><p><strong>Epigraph</strong>: Voltaire’s “Micromegas” (1752) presents aliens discussing the Earth, questioning whether any sensible being would live here. This sets the stage for the chapter’s exploration of alien beliefs.</p>
<blockquote class="blockquote">
<p>Truly, that which makes me believe there is no inhabitant on this sphere is that it seems to me that no sensible being would be willing to live here. Well then, said Micromegas, perhaps the beings that inhabit it do not possess good sense.</p>
<p>One alien to another on approaching the earth in Voltaire’s Micromegas, A Philosophical History, 1752</p>
</blockquote></li>
</ul>
</section>
<section id="the-alien-abduction-narrative" class="level3">
<h3 class="anchored" data-anchor-id="the-alien-abduction-narrative">The Alien Abduction Narrative</h3>
<ul>
<li><strong>Typical Abduction Scenario</strong>:
<ul>
<li>Begins with <strong>sleep paralysis</strong> and the sensation of presences in the room.</li>
<li><strong>Small gray beings</strong>, less than 4 feet tall, with large heads, enormous eyes, and expressionless faces, appear.</li>
<li>Abductees are <strong>floated through walls</strong> to a <strong>saucer-shaped spacecraft</strong>.</li>
<li><strong>Medical examinations</strong>, particularly of sexual organs, are conducted.
<ul>
<li><strong>Men</strong>: Sperm samples may be taken.</li>
<li><strong>Women</strong>: Ova or fetuses may be removed, semen implanted, or forced sex may occur.</li>
</ul></li>
<li>Abductees may encounter <strong>hybrid babies or fetuses</strong>.</li>
<li><strong>Warnings</strong> about human environmental damage or the AIDS pandemic may be given, along with visions of future devastation.</li>
<li>Abductees are returned to their beds with <strong>missing time</strong> or fragmented memories.</li>
</ul></li>
<li><strong>Post-Abduction Experience</strong>:
<ul>
<li>Initial <strong>confusion and concern about sanity</strong>.</li>
<li><strong>Reluctance to discuss</strong> the experience due to its bizarre nature.</li>
<li>Memories may surface through <strong>hypnosis, encountering similar accounts, or seeing alien imagery</strong>.</li>
</ul></li>
<li><strong>Interpretations of Abductions</strong>:
<ul>
<li>Some believe it’s a <strong>family phenomenon</strong>, potentially a <strong>eugenics program</strong> to improve human genetics.</li>
<li>Some suggest aliens have always been involved in human development, possibly as the origin of humanity.</li>
</ul></li>
</ul>
</section>
<section id="public-opinion-and-the-roper-poll" class="level3">
<h3 class="anchored" data-anchor-id="public-opinion-and-the-roper-poll">Public Opinion and the Roper Poll</h3>
<ul>
<li><strong>Widespread Belief</strong>: Polls consistently show a majority of Americans believe in alien visitation and UFOs.</li>
<li><strong>1992 Roper Poll</strong>:
<ul>
<li>Commissioned by proponents of the alien abduction narrative.</li>
<li>18% of respondents reported waking up paralyzed with strange beings present.</li>
<li>13% reported missing time episodes.</li>
<li>10% claimed to have flown without mechanical assistance.</li>
</ul></li>
<li><strong>Poll Sponsors’ Conclusions</strong>:
<ul>
<li>Based on these results, they concluded 2% of Americans have been abducted, many repeatedly.</li>
<li><strong>Extrapolated globally</strong>, this would mean over 100 million abductees, implying an abduction every few seconds.</li>
</ul></li>
<li><strong>Critique of the Poll</strong>:
<ul>
<li>The poll <strong>never explicitly asked</strong> about alien abduction.</li>
<li>The conclusion is <strong>spurious</strong> due to flawed experimental design, assuming that reported experiences automatically equate to abduction.</li>
<li>It failed to determine if reported experiences were part of the same or separate incidents.</li>
</ul></li>
</ul>
</section>
<section id="examining-abductee-claims" class="level3">
<h3 class="anchored" data-anchor-id="examining-abductee-claims">Examining Abductee Claims</h3>
<ul>
<li><strong>Abductees’ Sincerity</strong>: Most appear sincere, but often experiencing strong emotions.</li>
<li><strong>Psychiatric Evaluations</strong>: Some psychiatrists find no evidence of mental illness beyond the general population.</li>
<li><strong>Possible Explanations for Abduction Claims</strong>:
<ul>
<li><strong>Mistaken interpretations</strong>: Misidentification of natural phenomena or other events.</li>
<li><strong>Lying</strong>: Fabricating stories for attention or other gains.</li>
<li><strong>Hallucinations</strong>: Experiencing vivid and realistic mental imagery.</li>
</ul></li>
<li><strong>The Conspiracy Argument</strong>: Some suggest a massive government cover-up of alien activity.</li>
<li><strong>Inconsistencies in Abduction Accounts</strong>:
<ul>
<li><strong>Advanced technology but primitive biology</strong>: Aliens capable of interstellar travel and phasing through walls using seemingly basic medical instruments.</li>
<li><strong>Focus on sexual encounters</strong>: Why not simply acquire genetic material directly rather than through repeated encounters?</li>
<li><strong>Human-Chimpanzee Genetic Similarity</strong>: How could humans be an alien breeding program product given our close genetic relationship to chimpanzees (99.6% shared active genes)?</li>
</ul></li>
</ul>
</section>
<section id="the-role-of-societal-factors" class="level3">
<h3 class="anchored" data-anchor-id="the-role-of-societal-factors">The Role of Societal Factors</h3>
<ul>
<li><strong>Sexual Impulse and Repression</strong>: The emphasis on reproduction in abduction narratives may reflect societal anxieties surrounding sexuality.</li>
<li><strong>Childhood Sexual Abuse</strong>: The prevalence of abuse accounts, both true and false, may influence the narrative.</li>
</ul>
</section>
<section id="the-importance-of-evidence-and-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-evidence-and-skepticism">The Importance of Evidence and Skepticism</h3>
<ul>
<li><strong>John Locke’s Principle</strong>: “One unerring mark of the love of truth is not entertaining any proposition with greater assurance than the proofs it is built upon will warrant.” (1690)</li>
<li><strong>Sagan’s Shift in Perspective</strong>: Initial belief in flying saucers during youth gave way to skepticism as understanding of the scientific method grew.</li>
<li><strong>The Need for Rigorous Evidence</strong>: Anecdotal evidence is insufficient, especially for extraordinary claims. Human fallibility (mistakes, jokes, misinterpretations, hallucinations) must be considered.</li>
</ul>
</section>
<section id="explanations-for-ufo-sightings" class="level3">
<h3 class="anchored" data-anchor-id="explanations-for-ufo-sightings">Explanations for UFO Sightings</h3>
<ul>
<li><strong>Diversity of Descriptions</strong>: Variations in shape, movement, sound, and lighting suggest a lack of common origin.</li>
<li><strong>The “Flying Saucer” Misquote</strong>: Kenneth Arnold (1947) described objects moving “like a saucer… across the water,” not as being saucer-shaped. The media misrepresented his statement, creating the enduring term.</li>
<li><strong>Natural Phenomena</strong>: Many UFO sightings can be attributed to:
<ul>
<li>Unconventional or unusually lit aircraft.</li>
<li>High-altitude balloons.</li>
<li>Luminescent insects.</li>
<li>Planets seen under unusual atmospheric conditions.</li>
<li>Optical mirages and lenticular clouds.</li>
<li>Ball lightning, sundogs, meteors (including green fireballs).</li>
<li>Satellites, nose cones, and rocket boosters re-entering the atmosphere.</li>
<li>Possibly small comets.</li>
</ul></li>
<li><strong>Radar Anomalies</strong>: Some radar reports are caused by anomalous propagation (radio waves bending due to temperature inversions), creating “radar angels” (false signals).</li>
<li><strong>Human Factors</strong>: Excitement and uncritical observation can lead to inaccurate eyewitness accounts.</li>
<li><strong>Hoaxes and Frauds</strong>: Many UFO photos have been proven fake (models, double exposures).
<ul>
<li><strong>The Crashed Saucer Hoax</strong>: Frank Scully’s “Behind the Flying Saucers” (1950) featured a story about dead aliens from a crashed saucer, later revealed to be a hoax perpetrated by Silas Newton and Leo Gebauer to sell worthless oil leases.</li>
</ul></li>
<li><strong>Sputnik and UFO Sightings</strong>: The launch of Sputnik 1 (1957) coincided with a significant increase in UFO reports, suggesting a link between media attention and perceived sightings.</li>
</ul>
</section>
<section id="the-influence-of-popular-culture" class="level3">
<h3 class="anchored" data-anchor-id="the-influence-of-popular-culture">The Influence of Popular Culture</h3>
<ul>
<li><strong>Richard Shaver’s “I Remember Lemuria”</strong>: Published in “Amazing Stories” (1945), this fictional story about ancient aliens and underground beings predates the flying saucer craze and likely influenced public imagination.</li>
<li><strong>Ray Palmer’s Promotion</strong>: Editor of “Amazing Stories,” Palmer promoted the idea of alien spacecraft and government cover-ups before Arnold’s sighting.</li>
</ul>
</section>
<section id="sagans-continued-interest-in-extraterrestrial-life" class="level3">
<h3 class="anchored" data-anchor-id="sagans-continued-interest-in-extraterrestrial-life">Sagan’s Continued Interest in Extraterrestrial Life</h3>
<ul>
<li><strong>Scientific Search for Life</strong>: Involvement in spacecraft missions and SETI (Search for Extraterrestrial Intelligence) despite skepticism towards UFO claims.</li>
<li><strong>Rigorous Standards</strong>: Evidence for extraterrestrial life must be verifiable and withstand scrutiny.</li>
<li><strong>Openness to New Evidence</strong>: While no compelling evidence exists yet, the search continues, and new information could emerge at any time.</li>
</ul>
</section>
<section id="the-crop-circle-phenomenon" class="level3">
<h3 class="anchored" data-anchor-id="the-crop-circle-phenomenon">The Crop Circle Phenomenon</h3>
<ul>
<li><strong>Description</strong>:
<ul>
<li>Circles and complex pictograms appearing in fields of cereal grains, primarily in southern England.</li>
<li>Evolved from simple circles in the mid-1970s to elaborate geometrical figures by the late 1980s and early 1990s.</li>
</ul></li>
<li><strong>Initial Reactions</strong>:
<ul>
<li>Ruled out as a hoax due to scale, speed of creation (often overnight), and lack of footprints or witnesses.</li>
<li>Attributed to UFOs, aliens communicating geometrically, the devil, or the Earth itself expressing distress.</li>
</ul></li>
<li><strong>Proposed Explanations</strong>:
<ul>
<li><strong>Meteorological</strong>: Whirlwinds (columnar or ring vortices), ball lightning.</li>
<li><strong>Paranormal</strong>: UFOs, alien communication, the devil, Earth’s consciousness.</li>
</ul></li>
<li><strong>Media Hype and Public Fascination</strong>:
<ul>
<li>New Age tourism, vigils, media coverage, best-selling books.</li>
<li>Dowsers and channelers claiming to verify alien origins.</li>
<li>Parliamentary inquiries, royal family consultations.</li>
<li>Implication of ghosts, secret societies, Satanists, and government cover-ups.</li>
</ul></li>
<li><strong>The Doug Bower and Dave Chorley Confession</strong>:
<ul>
<li>In 1991, two men revealed they had been creating crop circles for 15 years as a prank.</li>
<li>Started with simple tools and gradually increased the complexity of their designs.</li>
<li>Motivated by amusement at UFO reports and a desire to spoof believers.</li>
<li>Their confession was largely ignored or downplayed by the media and some seriologists.</li>
</ul></li>
</ul>
</section>
<section id="the-aftermath-of-the-crop-circle-hoax" class="level3">
<h3 class="anchored" data-anchor-id="the-aftermath-of-the-crop-circle-hoax">The Aftermath of the Crop Circle Hoax</h3>
<ul>
<li><strong>Limited Impact</strong>: Despite the confession, the belief in alien-made crop circles persists.</li>
<li><strong>Persistence of Belief</strong>: The initial excitement surrounding the phenomenon overshadows the subsequent debunking.</li>
<li><strong>Human Psychology</strong>: People are often more drawn to extraordinary explanations than mundane ones.</li>
</ul>
</section>
<section id="the-importance-of-skepticism-in-everyday-life" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-skepticism-in-everyday-life">The Importance of Skepticism in Everyday Life</h3>
<ul>
<li><strong>Used Car Analogy</strong>: Most people apply a healthy dose of skepticism when making significant purchases, but this skepticism is often absent when evaluating claims about the paranormal or extraordinary.</li>
<li><strong>Lack of Education in Skepticism</strong>: Skeptical thinking is rarely taught in schools, leaving people vulnerable to misinformation.</li>
<li><strong>Vested Interests</strong>: Those who profit from credulity (advertisers, politicians, religious leaders) may discourage skepticism.</li>
</ul>
</section>
<section id="conclusion" class="level3">
<h3 class="anchored" data-anchor-id="conclusion">Conclusion</h3>
<ul>
<li>The chapter explores the phenomenon of belief in alien visitation, focusing on abduction narratives and crop circles.</li>
<li>It highlights the importance of evidence-based reasoning and skepticism in evaluating extraordinary claims.</li>
<li>It emphasizes the need for critical thinking skills to navigate a world filled with misinformation and manipulation.</li>
</ul>
</section>
</section>
<section id="chapter-5-spoofing-and-secrecy" class="level2">
<h2 class="anchored" data-anchor-id="chapter-5-spoofing-and-secrecy">Chapter 5: Spoofing and Secrecy</h2>
<section id="introduction-1" class="level3">
<h3 class="anchored" data-anchor-id="introduction-1">Introduction</h3>
<ul>
<li><p><strong>Epigraph</strong>:</p>
<blockquote class="blockquote">
<p>Trust a witness in all matters, in which neither his self-interest, his passions, his prejudices, nor the love of the marvelous is strongly concerned. When they are involved, require corroborative evidence in exact proportion to the contravention of probability by the thing testified. Thomas Henry Huxley, 1825-1895</p>
</blockquote></li>
<li><p><strong>Anecdote</strong>: Travis Walton’s mother’s nonchalant response to his alleged alien abduction highlights the uncritical acceptance some have towards UFO claims.</p></li>
<li><p><strong>UFO</strong>: <strong>Unidentified Flying Object</strong>, a broader term than “Flying Saucer.”</p></li>
<li><p><strong>Sagan’s Stance</strong>: Acknowledges the existence of unexplained aerial phenomena but questions the automatic assumption of extraterrestrial origin.</p></li>
<li><p><strong>Central Question</strong>: After eliminating misidentified natural events, hoaxes, and psychological factors, is there a core of credible, bizarre UFO cases supported by physical evidence?</p></li>
<li><p><strong>Sagan’s Conclusion</strong>: No conclusive signal of extraterrestrial visitation has been detected. Existing cases are either reliably reported but unexotic or exotic but unreliable. No case definitively proves extraterrestrial spacecraft while reliably ruling out other explanations.</p></li>
</ul>
</section>
<section id="the-allure-of-ufo-claims-and-the-skeptical-perspective" class="level3">
<h3 class="anchored" data-anchor-id="the-allure-of-ufo-claims-and-the-skeptical-perspective">The Allure of UFO Claims and the Skeptical Perspective</h3>
<ul>
<li><strong>Media Bias</strong>: Extravagant UFO claims receive more attention than their debunking due to their sensational nature, entertainment value, and alignment with anxieties of the time.</li>
<li><strong>Public Perception</strong>: Many approach the topic with preconceived notions, believing in eyewitness reliability, the impossibility of large-scale hoaxes, and the existence of government conspiracies to hide the truth.</li>
<li><strong>Mistrust of Government</strong>: Public skepticism towards government, fueled by instances of government deception, contributes to the belief in UFO cover-ups.</li>
<li><strong>Rationales for Cover-up</strong>: Common justifications include preventing widespread panic or eroding public trust in government.</li>
</ul>
</section>
<section id="project-blue-book-and-the-air-forces-investigation" class="level3">
<h3 class="anchored" data-anchor-id="project-blue-book-and-the-air-forces-investigation">Project Blue Book and the Air Force’s Investigation</h3>
<ul>
<li><strong>Project Blue Book</strong>: The Air Force’s official UFO study (formerly Project Grudge).</li>
<li><strong>Sagan’s Involvement</strong>: Served on the U.S. Air Force Scientific Advisory Board Committee that investigated Project Blue Book.</li>
<li><strong>Findings</strong>: The investigation was deemed lackadaisical and dismissive.</li>
<li><strong>Example of Poor Investigation</strong>: A case of reported hovering lights explained as strategic bombers despite inconsistencies in time, flight path, and the bombers’ inability to hover.</li>
<li><strong>Bureaucratic Purpose</strong>: Blue Book served to reassure the public that the Air Force was investigating while potentially downplaying the significance of UFO reports.</li>
<li><strong>Possibility of a Separate, More Serious Study</strong>: Sagan acknowledges the possibility of a more rigorous, clandestine UFO study driven by potential military implications.</li>
</ul>
</section>
<section id="military-interest-in-ufos" class="level3">
<h3 class="anchored" data-anchor-id="military-interest-in-ufos">Military Interest in UFOs</h3>
<ul>
<li><strong>Rationale for Military Interest</strong>:
<ul>
<li><strong>Soviet Technology</strong>: If UFOs were Soviet, understanding their advanced technology was crucial for national security.</li>
<li><strong>Extraterrestrial Technology</strong>: Capturing and reverse-engineering alien technology could provide a significant advantage in the Cold War.</li>
<li><strong>Misidentified Military Technology</strong>: Monitoring UFO reports could help identify and protect classified military projects, such as reconnaissance balloons.</li>
</ul></li>
</ul>
</section>
<section id="reconnaissance-balloons-and-ufo-sightings" class="level3">
<h3 class="anchored" data-anchor-id="reconnaissance-balloons-and-ufo-sightings">Reconnaissance Balloons and UFO Sightings</h3>
<ul>
<li><strong>Skyhook and Other Projects</strong>: Military balloon programs like Skyhook, Mogul, Moby Dick, Grandson, and Genetrix used high-altitude balloons for various purposes, including espionage.</li>
<li><strong>Erna Liddell’s Opinion</strong>: Believed that a significant portion of UFO reports could be attributed to military balloons.</li>
<li><strong>Characteristics of Balloons Mimicking UFOs</strong>: High-altitude balloons can appear saucer-shaped, seem to move at incredible speeds due to distance misjudgment, and exhibit sudden changes in direction due to wind gusts.</li>
<li><strong>Lack of Controlled Experiments</strong>: No systematic experiments have been conducted to correlate balloon releases with UFO reports.</li>
<li><strong>Soviet Overflights</strong>: U.S. reconnaissance balloons were used extensively over the Soviet Union in the 1950s, later replaced by U-2 aircraft and satellites.</li>
<li><strong>Continuing Use of Balloons</strong>: High-altitude balloons are still used for scientific purposes, potentially contributing to ongoing UFO sightings.</li>
</ul>
</section>
<section id="the-roswell-incident" class="level3">
<h3 class="anchored" data-anchor-id="the-roswell-incident">The Roswell Incident</h3>
<ul>
<li><strong>Background</strong>: Alleged crash of one or more flying saucers near Roswell, New Mexico, in 1947.</li>
<li><strong>Initial Reports</strong>: Consistent with the crash of a high-altitude balloon.</li>
<li><strong>Later Accounts</strong>: Witnesses claimed exotic materials, hieroglyphics, military intimidation, and the recovery of alien bodies and technology.</li>
<li><strong>General Cabell’s Inquiry</strong>: A 1948 letter from Major General C.B. Cabell, then Director of Intelligence for the U.S. Air Force, reveals his lack of understanding about UFOs and the Air Force’s inability to explain them. This suggests that alien remains and technology were unlikely to be at Wright-Patterson in 1947.</li>
<li><strong>Air Force Concerns</strong>: Primarily focused on the possibility of UFOs being Russian technology.</li>
<li><strong>Hypotheses about Russian UFOs</strong>:
<ol type="1">
<li>To undermine U.S. confidence in the atom bomb.</li>
<li>To conduct photographic reconnaissance.</li>
<li>To test U.S. air defenses.</li>
<li>To familiarize strategic bombers with U.S. territory.</li>
</ol></li>
<li><strong>Evidence Pointing to Balloons</strong>: The Roswell debris likely originated from classified high-altitude balloons launched from Alamogordo Army Airfield or White Sands Proving Ground.</li>
<li><strong>Factors Contributing to the Roswell Myth</strong>:
<ul>
<li>The secrecy surrounding the recovery of classified instruments.</li>
<li>Sensationalized press reports.</li>
<li>Evolving recollections over time.</li>
<li>Potential for fame and fortune associated with the incident.</li>
</ul></li>
<li><strong>1994 Air Force Report</strong>: Identified the Roswell debris as remnants of <strong>Project Mogul</strong>, a secret balloon-borne acoustic detection system for monitoring Soviet nuclear tests.</li>
<li><strong>Lack of Supporting Evidence for Alien Crash</strong>: No unusual military activity or communication patterns were found in 1947 records that would be expected in response to an alien craft intrusion.</li>
<li><strong>“Alien Hieroglyphics”</strong>: Likely radar targets manufactured by novelty companies in New York.</li>
</ul>
</section>
<section id="re-entry-vehicles-and-ufo-sightings" class="level3">
<h3 class="anchored" data-anchor-id="re-entry-vehicles-and-ufo-sightings">Re-entry Vehicles and UFO Sightings</h3>
<ul>
<li><strong>Context</strong>: The shift from aircraft to missiles for nuclear weapon delivery in the 1950s and 60s.</li>
<li><strong>Re-entry Problem</strong>: Preventing nuclear warheads from burning up during atmospheric re-entry.</li>
<li><strong>Sensitivity of Re-entry Technology</strong>: Observations of re-entry tests could reveal valuable information to adversaries.</li>
<li><strong>Secrecy and Suppression of Information</strong>: Military personnel likely instructed to remain silent about sightings, and seemingly ordinary reports might have been classified.</li>
<li><strong>Potential for Misinterpretation</strong>: Former military personnel might later interpret past secrecy as evidence of a UFO cover-up.</li>
</ul>
</section>
<section id="spoofing-and-air-defense-testing" class="level3">
<h3 class="anchored" data-anchor-id="spoofing-and-air-defense-testing">Spoofing and Air Defense Testing</h3>
<ul>
<li><strong>Spoofing</strong>: Deliberately penetrating an adversary’s airspace to test their air defenses.</li>
<li><strong>Importance of Air Defense</strong>: A crucial factor in the Cold War, as weaknesses could be exploited in a nuclear war.</li>
<li><strong>U.S. Air Defense System</strong>: Strong defenses on the east, west, and northern borders but a vulnerability in the south.</li>
<li><strong>Spoofing Scenarios</strong>:
<ul>
<li>Adversary aircraft penetrating U.S. airspace from the south to trigger radar defenses.</li>
<li>Secret U.S. aircraft testing the effectiveness of southern defenses.</li>
</ul></li>
<li><strong>Consequences of Spoofing</strong>:
<ul>
<li>Combined visual and radar sightings of unknown aircraft.</li>
<li>Official denials from the Air Force.</li>
<li>Potential for government secrecy to avoid acknowledging breaches in air defense.</li>
</ul></li>
<li><strong>Long-Term Secrecy</strong>: Bureaucratic incentives for the Department of Defense to maintain silence about past vulnerabilities.</li>
</ul>
</section>
<section id="ufos-and-the-national-security-agency-nsa" class="level3">
<h3 class="anchored" data-anchor-id="ufos-and-the-national-security-agency-nsa">UFOs and the National Security Agency (NSA)</h3>
<ul>
<li><strong>NSA’s Role</strong>: Monitoring global communications, including radio traffic related to aircraft.</li>
<li><strong>Freedom of Information Act (FOIA)</strong>: Requires the NSA to release information upon request, but with redactions to protect sources and methods.</li>
<li><strong>NSA’s Response to UFO FOIA Requests</strong>: Heavily redacted documents, leading conspiracy theorists to believe the NSA is hiding extensive UFO information.</li>
<li><strong>NSA’s Explanation</strong>: Redactions are necessary to avoid revealing interception capabilities and alerting foreign nations.</li>
<li><strong>Typical Intercepts</strong>: Often involve reports of UFOs by military and civilian pilots, which are usually clarified in later intercepts as mundane objects or even U.S. aircraft.</li>
<li><strong>Elvis Presley Example</strong>: Demonstrates how NSA’s redactions can be misinterpreted as evidence of a cover-up on any topic.</li>
<li><strong>Plausibility of NSA’s Explanation</strong>: Sagan finds the NSA’s explanation regarding UFO intercepts credible.</li>
</ul>
</section>
<section id="declassification-and-the-cold-war-legacy" class="level3">
<h3 class="anchored" data-anchor-id="declassification-and-the-cold-war-legacy">Declassification and the Cold War Legacy</h3>
<ul>
<li><strong>Advocacy for Declassification</strong>: Sagan calls for the declassification of Cold War-era UFO files, as the national security concerns are largely obsolete.</li>
<li><strong>Potential Consequences of Declassification</strong>: Acknowledging past instances of misleading or lying to the public.</li>
</ul>
</section>
<section id="the-paranoid-style-and-the-secrecy-culture" class="level3">
<h3 class="anchored" data-anchor-id="the-paranoid-style-and-the-secrecy-culture">The Paranoid Style and the Secrecy Culture</h3>
<ul>
<li><strong>Howard Bloom’s Book</strong>: “Out There” (1990) exemplifies the paranoid style of some ufologists and their naivete about the secrecy culture.</li>
<li><strong>Bloom’s Frustration with Secrecy</strong>: Describes encountering obstacles and disinformation in his research, attributing it to deliberate government obfuscation.</li>
</ul>
</section>
<section id="legitimate-secrecy-vs.-excessive-secrecy" class="level3">
<h3 class="anchored" data-anchor-id="legitimate-secrecy-vs.-excessive-secrecy">Legitimate Secrecy vs.&nbsp;Excessive Secrecy</h3>
<ul>
<li><strong>Justification for Secrecy</strong>: Protecting national interests, especially military technology.</li>
<li><strong>Secrecy’s Appeal to Institutions</strong>: Silencing critics, evading accountability, and fostering an elite culture.</li>
<li><strong>Conflict with Democracy and Science</strong>: Secrecy generally hinders open discourse and scientific progress.</li>
</ul>
</section>
<section id="the-mj-12-documents" class="level3">
<h3 class="anchored" data-anchor-id="the-mj-12-documents">The MJ-12 Documents</h3>
<ul>
<li><strong>Background</strong>: Alleged classified documents detailing a secret committee (MJ-12) formed by President Truman in 1947 to investigate crashed flying saucers and alien bodies.</li>
<li><strong>Provenance</strong>: The documents were supposedly delivered anonymously to a film producer, Jamie Shandera.</li>
<li><strong>Air Force’s Position</strong>: Considers the documents a forgery.</li>
<li><strong>Philip J. Class’s Analysis</strong>: Found inconsistencies suggesting a hoax.</li>
<li><strong>Provenance as a Key Weakness</strong>: The lack of a clear chain of custody raises suspicion, similar to art forgery concerns.</li>
</ul>
</section>
<section id="historical-examples-of-forged-documents" class="level3">
<h3 class="anchored" data-anchor-id="historical-examples-of-forged-documents">Historical Examples of Forged Documents</h3>
<ul>
<li><strong>Book of Deuteronomy</strong>: “Discovered” by King Hosea in a way that conveniently supported his reforms.</li>
<li><strong>Donation of Constantine</strong>: A forged document used to justify papal claims to secular power in the Middle Ages.</li>
<li><strong>Lorenzo Valla’s Debunking</strong>: Exposed the Donation of Constantine as a forgery based on linguistic analysis.</li>
</ul>
</section>
<section id="the-mj-12-documents-as-a-potential-hoax" class="level3">
<h3 class="anchored" data-anchor-id="the-mj-12-documents-as-a-potential-hoax">The MJ-12 Documents as a Potential Hoax</h3>
<ul>
<li><strong>Comparison to Donation of Constantine</strong>: MJ-12 documents, if a hoax, are more sophisticated but share similarities in provenance, vested interest, and inconsistencies.</li>
</ul>
</section>
<section id="the-implausibility-of-a-45-year-cover-up" class="level3">
<h3 class="anchored" data-anchor-id="the-implausibility-of-a-45-year-cover-up">The Implausibility of a 45-Year Cover-Up</h3>
<ul>
<li><strong>Maintaining Secrecy</strong>: A decades-long cover-up involving hundreds or thousands of government employees, especially regarding a matter of global security, is highly improbable.</li>
</ul>
</section>
<section id="the-whistleblower-argument" class="level3">
<h3 class="anchored" data-anchor-id="the-whistleblower-argument">The Whistleblower Argument</h3>
<ul>
<li><strong>Lack of Whistleblowers</strong>: If aliens were abducting millions of people, it’s unlikely that no one with credible evidence in any country would expose the truth.</li>
</ul>
</section>
<section id="nasa-the-air-force-and-the-absence-of-alien-threat-response" class="level3">
<h3 class="anchored" data-anchor-id="nasa-the-air-force-and-the-absence-of-alien-threat-response">NASA, the Air Force, and the Absence of Alien Threat Response</h3>
<ul>
<li><strong>NASA’s Motivation</strong>: If aliens posed a threat, NASA would likely leverage this to secure funding and justify human spaceflight.</li>
<li><strong>Air Force’s Shift Away from Manned Spaceflight</strong>: Inconsistent with a response to an alien invasion.</li>
<li><strong>Strategic Defense Initiative (SDI) / Ballistic Missile Defense Organization</strong>: If facing an alien threat, space-based defenses would be a priority.</li>
<li><strong>Department of Defense’s Reliance on Enemies</strong>: The suppression of a powerful adversary by the very organization that would benefit from its existence is highly unlikely.</li>
</ul>
</section>
<section id="dismissal-of-alien-visitation-by-some-scientists" class="level3">
<h3 class="anchored" data-anchor-id="dismissal-of-alien-visitation-by-some-scientists">Dismissal of Alien Visitation by Some Scientists</h3>
<ul>
<li><strong>Resistance to the Topic</strong>: Some scientists vehemently reject the possibility of alien visitation without considering the evidence.</li>
<li><strong>Emotional Responses</strong>: The intensity of feelings suggests the discomforting implications of both alien invasion and mass hallucination scenarios.</li>
<li><strong>1969 National Academy of Sciences Study</strong>: Concluded that extraterrestrial visitation is the least likely explanation for UFOs, even compared to time travelers, demons, interdimensional beings, or paranormal phenomena.</li>
</ul>
</section>
<section id="aurora-a-case-study-in-secrecy-and-speculation" class="level3">
<h3 class="anchored" data-anchor-id="aurora-a-case-study-in-secrecy-and-speculation">Aurora: A Case Study in Secrecy and Speculation</h3>
<ul>
<li><strong>Aurora</strong>: Alleged highly classified hypersonic U.S. reconnaissance aircraft.</li>
<li><strong>Reports</strong>: Consistent sightings near Edwards Air Force Base, Groom Lake (Area 51), and other locations worldwide.</li>
<li><strong>Characteristics</strong>: Hypersonic speed, distinctive contrail (“doughnuts on a rope”), potential satellite launch capability.</li>
<li><strong>Official Denials</strong>: CIA, Senator John Glenn, aircraft designers, and Air Force officials have denied Aurora’s existence.</li>
<li><strong>Air Force’s Ambiguous Response</strong>: Acknowledgement of unexplained sightings without confirming or denying Aurora.</li>
<li><strong>Area 51 Expansion</strong>: The Air Force’s expansion of the restricted area around Area 51 fuels speculation.</li>
<li><strong>Two Possibilities</strong>:
<ul>
<li><strong>Aurora Exists</strong>: Implies a successful cover-up despite widespread testing and deployment.</li>
<li><strong>Aurora Does Not Exist</strong>: Suggests the propagation of a powerful myth fueled by official denials.</li>
</ul></li>
<li><strong>Relevance to UFOs</strong>: Aurora demonstrates the potential for both genuine government secrecy and the creation of elaborate myths surrounding unexplained phenomena.</li>
</ul>
</section>
</section>
<section id="chapter-6-hallucinations" class="level2">
<h2 class="anchored" data-anchor-id="chapter-6-hallucinations">Chapter 6: Hallucinations</h2>
<section id="introduction-fear-and-gullibility" class="level3">
<h3 class="anchored" data-anchor-id="introduction-fear-and-gullibility">Introduction: Fear and Gullibility</h3>
<ul>
<li><p><strong>Epigraph</strong>: Lucretius’ quote from “On the Nature of Things” (circa 60 BC) establishes the theme of fear of the unknown, paralleling childhood fears in darkness to adult fears of the unexplained.</p>
<blockquote class="blockquote">
<p>As children tremble and fear everything in the blind darkness, so we in the light sometimes fear what is no more to be feared than the things children in the dark hold in terror. Lucretius, On the Nature of Things, circa 60 BC.</p>
</blockquote>
<ul>
<li>Children are afraid in the dark, and adults can be similarly afraid of things they don’t understand.</li>
</ul></li>
<li><p><strong>Advertising in UFO Magazines</strong>: Analyzes advertisements from “UFO Universe” to understand how advertisers perceive the audience (UFO enthusiasts).</p>
<ul>
<li>Headlines focus on themes of:
<ul>
<li>Secret knowledge (e.g., ancient secrets, government conspiracies).</li>
<li>Paranormal abilities (e.g., psychic powers, good luck charms).</li>
<li>Alien encounters (e.g., Men in Black, alien control).</li>
</ul></li>
</ul></li>
<li><p><strong>Audience Gullibility</strong>: Suggests that the nature of the advertisements indicates an expectation of audience gullibility.</p>
<ul>
<li>Buying UFO magazines may categorize readers as more susceptible to such claims.</li>
<li>Acknowledges the presence of skeptical readers but questions the impact of the alien abduction paradigm on a potentially gullible audience.</li>
</ul></li>
</ul>
</section>
<section id="alien-communication-and-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="alien-communication-and-knowledge">Alien Communication and Knowledge</h3>
<ul>
<li><strong>Sagan’s Experience</strong>: Shares personal experiences of attempting to communicate with extraterrestrials through individuals claiming contact.
<ul>
<li>Asks complex scientific questions (e.g., Fermat’s Last Theorem, Goldbach Conjecture) and receives no answers.</li>
<li>Asks vague moral questions (e.g., “Should we be good?”) and consistently receives answers.</li>
</ul></li>
<li><strong>Implications of Communication Patterns</strong>: Deduces that these communication patterns suggest limitations in the alleged extraterrestrials’ knowledge.
<ul>
<li>They seem capable of providing generic moral guidance but lack advanced scientific knowledge.</li>
</ul></li>
<li><strong>Shifting Focus of Alien Messages</strong>: Notes a historical shift in the content of alleged alien messages.
<ul>
<li>Older accounts focused on warnings about nuclear war.</li>
<li>Modern accounts focus on environmental degradation and AIDS.</li>
</ul></li>
<li><strong>Questions about Alien Knowledge</strong>: Raises questions about the timeliness and relevance of alien warnings.
<ul>
<li>Why weren’t past threats (e.g., CFCs, HIV) addressed earlier?</li>
<li>Why aren’t future threats revealed?</li>
</ul></li>
<li><strong>Hypothesis</strong>: Suggests the possibility that aliens know only what those reporting their presence know, implying a potential human origin for these messages.</li>
<li><strong>Communication Strategy</strong>: Questions the effectiveness of communicating global threats to a limited number of individuals.
<ul>
<li>Proposes more impactful methods such as taking over television networks or appearing before the United Nations.</li>
</ul></li>
</ul>
</section>
<section id="early-alien-contactee-george-adamski" class="level3">
<h3 class="anchored" data-anchor-id="early-alien-contactee-george-adamski">Early Alien Contactee: George Adamski</h3>
<ul>
<li><strong>Background</strong>: Introduces George Adamski, an early commercially successful UFO contactee.
<ul>
<li>Operated a restaurant and telescope near Mount Palomar Observatory, leveraging its prestige.</li>
</ul></li>
<li><strong>Claims</strong>: Describes Adamski’s claims of encountering aliens from Venus in the California desert.
<ul>
<li>Aliens warned about nuclear war and were described as having long blonde hair and white robes.</li>
</ul></li>
<li><strong>Credibility Issues</strong>: Points out the inconsistency of Adamski’s claims with scientific knowledge about Venus’s extreme surface temperature (900°F).</li>
<li><strong>Personal Charisma</strong>: Acknowledges Adamski’s persuasive personality, citing an Air Force officer’s description of his apparent honesty.</li>
<li><strong>Decline in Popularity</strong>: Notes that Adamski’s influence waned over time, though he remained active in UFO circles.</li>
</ul>
</section>
<section id="the-hill-abduction-case" class="level3">
<h3 class="anchored" data-anchor-id="the-hill-abduction-case">The Hill Abduction Case</h3>
<ul>
<li><strong>Introduction</strong>: Presents the case of Betty and Barney Hill as the first modern alien abduction story.
<ul>
<li>Describes their late-night drive in 1961 and Betty’s sighting of a bright UFO.</li>
</ul></li>
<li><strong>Betty’s Nightmare</strong>: Details Betty’s recurring nightmare of being abducted, which she shared with others but not initially with Barney.</li>
<li><strong>Developing Narrative</strong>: Explains how their account of a pancake-like UFO with uniformed figures emerged over time.</li>
<li><strong>Hypnosis Sessions</strong>: Describes their sessions with hypnotherapist Dr.&nbsp;Benjamin Simon, where they separately recalled details of the missing two hours.</li>
<li><strong>Details Under Hypnosis</strong>:
<ul>
<li>They described being taken aboard the UFO and subjected to medical examinations.</li>
<li>Betty saw a star map showing the ship’s routes.</li>
<li>Aliens were described as short, grey humanoids with long noses (contrasting with later depictions).</li>
</ul></li>
<li><strong>Possible Influences</strong>:
<ul>
<li>Martin S. Cotmeyer suggests similarities between the Hills’ account and the 1953 movie “Invaders from Mars.”</li>
<li>Barney’s description of large-eyed aliens aligns with a portrayal in “The Outer Limits” TV series shortly before his hypnosis session.</li>
</ul></li>
<li><strong>Impact of the Hill Case</strong>: Notes the case’s widespread discussion and its influence on public perception of alien abductions through a 1975 TV movie.</li>
<li><strong>Scientific Skepticism</strong>: Highlights the cautious approach of scientists towards the Hill case, even those who considered UFOs potentially extraterrestrial.
<ul>
<li>James E. MacDonald, a UFO proponent, did not include the Hill case in his list of suggestive UFO encounters.</li>
</ul></li>
<li><strong>MacDonald’s Perspective</strong>: Explains MacDonald’s view that UFOs were a conclusion of last resort, as alternative explanations seemed less plausible to him.</li>
<li><strong>Meeting with Scientists</strong>: Recounts a meeting arranged by Sagan where MacDonald failed to convince leading physicists and astronomers about extraterrestrial visits.</li>
<li><strong>Sagan’s Interaction with the Hills and Dr.&nbsp;Simon</strong>: Shares personal impressions of the Hills’ sincerity and Dr.&nbsp;Simon’s professionalism.</li>
<li><strong>Dr.&nbsp;Simon’s Interpretation</strong>: Emphasizes Dr.&nbsp;Simon’s refusal to declare the Hills’ account authentic despite potential financial incentives, instead suggesting a shared dream-like experience.</li>
</ul>
</section>
<section id="exploring-possible-explanations" class="level3">
<h3 class="anchored" data-anchor-id="exploring-possible-explanations">Exploring Possible Explanations</h3>
<ul>
<li><strong>Multiple Sources of Abduction Accounts</strong>: Proposes the possibility of various sources for alien abduction accounts, similar to UFO sightings.</li>
<li><strong>Hallucinations</strong>:
<ul>
<li><strong>Prevalence</strong>: Cites the International Census of Waking Hallucinations (1894) and subsequent surveys showing that 10-25% of people experience vivid hallucinations in their lifetime.</li>
<li><strong>Types</strong>: Describes various forms of hallucinations, including auditory, visual, olfactory, and revelatory experiences.</li>
<li><strong>Personal Significance</strong>: Notes that hallucinations can be transformative or religious experiences.</li>
<li><strong>Sagan’s Example</strong>: Shares personal experiences of auditory hallucinations involving deceased parents’ voices.</li>
<li><strong>Triggers</strong>: Lists various factors that can induce hallucinations, including stress, sleep deprivation, sensory deprivation, and hallucinogens.</li>
<li><strong>Neurological Basis</strong>: Suggests the human body generates substances that both cause and suppress hallucinations.</li>
<li><strong>Hallucinations in Explorers</strong>: Provides examples of explorers (Byrd, Slocum, Shackleton) experiencing hallucinations in isolation.</li>
<li><strong>Cultural Significance</strong>: Highlights the cultural acceptance and interpretation of hallucinations as spiritual experiences in some societies.</li>
<li><strong>Religious Context</strong>: Notes the association of hallucinations with religious experiences in various cultures and religions.</li>
<li><strong>Hallucinations as Normal</strong>: Emphasizes that hallucinations are common and do not necessarily indicate mental illness.</li>
</ul></li>
<li><strong>Anthropological Perspective</strong>:
<ul>
<li>Discusses anthropological studies on hallucinations, dreams, and possession trances, highlighting cross-cultural similarities.</li>
<li>Weston Labar’s argument that culture itself might be a form of shared hallucination.</li>
</ul></li>
<li><strong>Signal-to-Noise Analogy</strong>:
<ul>
<li>Presents Lewis J. West’s analogy of hallucinations as a signal-to-noise problem, comparing sensory input to daylight and internal brain activity to interior illumination.</li>
<li>As sensory input decreases and internal activity remains high, internally generated images can be perceived as external reality.</li>
</ul></li>
<li><strong>Dream Analogy</strong>:
<ul>
<li>Compares dreams to stars, always present but obscured by the brighter light of daytime sensory input.</li>
</ul></li>
<li><strong>Information Processing Analogy</strong>:
<ul>
<li>Describes dreams as glimpses into the continuous information processing activity of the brain, influenced by conscious and unconscious forces.</li>
<li>Suggests that waking hallucinations involve the same phenomenon under different circumstances.</li>
</ul></li>
<li><strong>Hallucinations in Everyday Life</strong>: Emphasizes the potential role of illusions and hallucinations in normal human experience, beyond their association with mental illness.</li>
</ul>
</section>
<section id="suggestibility-hypnosis-and-mental-illness" class="level3">
<h3 class="anchored" data-anchor-id="suggestibility-hypnosis-and-mental-illness">Suggestibility, Hypnosis, and Mental Illness</h3>
<ul>
<li><strong>Suggestibility and Hypnosis</strong>:
<ul>
<li>States that 5-10% of people are highly suggestible and capable of deep hypnotic trances.</li>
</ul></li>
<li><strong>Prevalence of Paranormal Experiences</strong>:
<ul>
<li>Provides statistics on the percentage of Americans reporting experiences with ghosts, UFOs, and alien abductions.</li>
</ul></li>
<li><strong>Schizophrenia</strong>:
<ul>
<li>Notes that at least 1% of the population is schizophrenic, highlighting its significant global prevalence.</li>
</ul></li>
<li><strong>Childhood Development of Fantasy and Reality</strong>:
<ul>
<li>Quotes John Mack’s (1970) description of childhood development where dreams are initially perceived as real.</li>
<li>Explains the gradual process of differentiating between fantasy and reality, which may not be fully complete until ages 8-10.</li>
<li>Discusses the challenge of judging the reality of nightmares for children.</li>
</ul></li>
<li><strong>Parental Influence on Fantasy</strong>:
<ul>
<li>Explores the role of parents in shaping children’s understanding of fantasy and reality.</li>
<li>Some families encourage imagination, while others discourage it.</li>
</ul></li>
<li><strong>Adult Fantasy and Confabulation</strong>:
<ul>
<li>Suggests that some individuals retain a strong ability to fantasize and confabulate into adulthood, while others view it as a sign of mental instability.</li>
</ul></li>
<li><strong>Childhood Encounters with Aliens vs.&nbsp;Imaginary Beings</strong>:
<ul>
<li>Notes that abductees often report childhood encounters with aliens, similar to children’s reports of fairies, elves, or imaginary friends.</li>
<li>Questions whether these experiences are fundamentally different or represent the same phenomenon of childhood fantasy.</li>
</ul></li>
<li><strong>Childhood Fear of Monsters</strong>:
<ul>
<li>Discusses the common childhood fear of monsters, especially in the dark.</li>
<li>Shares personal experiences of childhood terror and the need for parental reassurance.</li>
<li>Quotes Gary Larson’s dedication to his father who protected him from childhood monsters.</li>
</ul></li>
<li><strong>Evolutionary Perspective on Fear of Monsters</strong>:
<ul>
<li>Proposes that fear of monsters may have evolutionary benefits, preventing young children from wandering into danger in ancestral environments.</li>
</ul></li>
<li><strong>Shared Delusions in Adulthood</strong>:
<ul>
<li>Posits that if children can readily fantasize monsters, adults might also be capable of shared delusions or fantasies, even terrifying ones.</li>
</ul></li>
</ul>
</section>
<section id="sleep-and-alien-abduction-experiences" class="level3">
<h3 class="anchored" data-anchor-id="sleep-and-alien-abduction-experiences">Sleep and Alien Abduction Experiences</h3>
<ul>
<li><strong>Timing of Abduction Experiences</strong>: Highlights that alien abductions are often reported during sleep transitions (falling asleep, waking up) or during long drives, when hypnotic states are more likely.</li>
<li><strong>Sleep Paralysis</strong>:
<ul>
<li>Introduces <strong>sleep paralysis</strong> as a common but under-recognized psychological syndrome that can mimic alien abduction experiences.</li>
<li>Describes the symptoms: immobility, anxiety, chest pressure, hallucinations, and potential sexual components.</li>
<li>Robert Baker’s argument that sleep paralysis may explain many abduction accounts.</li>
</ul></li>
<li><strong>Harvard Mental Health Letter</strong>: Quotes the Harvard Mental Health Letter (September 1994) which links sleep paralysis to hallucinations that can be interpreted as visitations from supernatural beings or extraterrestrials.</li>
<li><strong>Neurological Basis of Hallucinations</strong>:
<ul>
<li>Cites Wilder Penfield’s research on brain stimulation and hallucination elicitation.</li>
</ul></li>
<li><strong>Temporal Lobe Epilepsy</strong>:
<ul>
<li>Describes <strong>temporal lobe epilepsy</strong> and its associated hallucinations, which can include the presence of strange beings, anxiety, floating sensations, sexual experiences, and missing time.</li>
<li>Notes the similarity of these hallucinations to alien abduction experiences.</li>
</ul></li>
<li><strong>Temporal Lobe Stimulation Continuum</strong>: Suggests a range of temporal lobe stimulation experiences from severe epilepsy to more common occurrences in average individuals.</li>
<li><strong>Anti-Epileptic Drugs and Abduction Experiences</strong>: Mentions Michael Persinger’s case study where carbamazepine eliminated a woman’s recurring alien abduction-like experiences.</li>
<li><strong>Conclusion</strong>: Suggests that hallucinations, whether spontaneous or induced, may play a significant role in UFO and alien abduction accounts.</li>
</ul>
</section>
<section id="shifting-explanations-and-cultural-context" class="level3">
<h3 class="anchored" data-anchor-id="shifting-explanations-and-cultural-context">Shifting Explanations and Cultural Context</h3>
<ul>
<li><strong>Burlesquing Hallucinations as Explanation</strong>: Acknowledges the potential for dismissing UFOs as mere mass hallucinations.</li>
<li><strong>Challenges the Notion of Shared Hallucinations</strong>: Questions the common assumption that shared hallucinations are impossible.</li>
<li><strong>Historical Examples of Alien Contact Claims</strong>:
<ul>
<li>Discusses the rise of alien contact reports, particularly with Martians, following the popularization of extraterrestrial life concepts (e.g., Percival Lowell’s Martian canals).</li>
<li>Theodore Flournoy’s (1901) “From India to the Planet Mars” describing a medium’s depictions of Martians resembling humans.</li>
<li>Carl Jung’s (1902) dissertation describing a woman’s encounter with a Martian on a train.</li>
<li>Charles Fort’s (1932) suggestion of Martians secretly reporting on Earth.</li>
<li>Gerald Hurd’s (1950s) book proposing intelligent Martian bees as saucer occupants.</li>
</ul></li>
<li><strong>Decline of Martian and Venusian Accounts</strong>: Notes the decline of Martian and Venusian contact reports after scientific discoveries debunked earlier beliefs about their habitability.</li>
<li><strong>Adaptation of Alien Narratives</strong>: Questions whether alien abduction narratives adapt to current scientific knowledge and cultural beliefs, implying a potential human origin.</li>
</ul>
</section>
<section id="conclusion-hallucinations-vs.-extraterrestrials" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-hallucinations-vs.-extraterrestrials">Conclusion: Hallucinations vs.&nbsp;Extraterrestrials</h3>
<ul>
<li><strong>Prevalence of Hallucinations</strong>: Reiterates the established fact that humans commonly experience hallucinations.</li>
<li><strong>Doubt about Extraterrestrial Abductions</strong>: Expresses skepticism about the existence and frequency of extraterrestrial abductions.</li>
<li><strong>Strength of Explanatory Categories</strong>: Suggests that hallucinations are a more plausible explanation for abduction experiences than extraterrestrial encounters.</li>
<li><strong>Central Question</strong>: Raises the question of why so many people report similar specific hallucinations (e.g., short grey beings, flying saucers, sexual experimentation) in the modern context.</li>
</ul>
</section>
</section>
<section id="chapter-7-the-demon-haunted-world" class="level2">
<h2 class="anchored" data-anchor-id="chapter-7-the-demon-haunted-world">Chapter 7: The Demon-Haunted World</h2>
<section id="introduction-the-persistence-of-belief-in-supernatural-beings" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-persistence-of-belief-in-supernatural-beings">Introduction: The Persistence of Belief in Supernatural Beings</h3>
<ul>
<li><strong>Opening Quotes:</strong>
<ul>
<li>“There are demon-haunted worlds, regions of utter darkness.” (Isha Upanishad, India, circa 600 BC)</li>
<li>“Fear of things invisible is the natural seed of that which everyone in himself calleth religion.” (Thomas Hobbes, Leviathan, 1651)</li>
</ul></li>
<li><strong>Human Need for Supernatural Explanations:</strong>
<ul>
<li>Many cultures teach that gods guide destinies and malevolent entities are responsible for evil.</li>
<li>These beings, whether real or imaginary, fulfill human needs and provide comfort.</li>
<li>In a scientifically-driven age, old gods and demons are reimagined as aliens.</li>
</ul></li>
</ul>
</section>
<section id="the-history-of-demonic-belief" class="level3">
<h3 class="anchored" data-anchor-id="the-history-of-demonic-belief">The History of Demonic Belief</h3>
<section id="antiquity-and-early-christianity" class="level4">
<h4 class="anchored" data-anchor-id="antiquity-and-early-christianity">Antiquity and Early Christianity</h4>
<ul>
<li><strong>Demons in the Ancient World:</strong>
<ul>
<li>Demons were considered natural beings, not supernatural.</li>
<li>Hesiod mentioned them casually.</li>
<li>Socrates attributed his philosophical inspiration to a benign personal demon.</li>
<li><strong>Plato’s Symposium:</strong>
<ul>
<li>Diotima of Mantinea, Socrates’ teacher, described demons as intermediaries between gods and mortals.</li>
<li>Communication between gods and humans occurs only through demons, both while awake and asleep.</li>
</ul></li>
<li><strong>Plato’s View:</strong>
<ul>
<li>Assigned a high role to demons as benevolent overseers of human affairs.</li>
<li>Believed no human with supreme power could avoid insolence and injustice.</li>
<li>Used the analogy of humans ruling over animals to explain the role of demons.</li>
<li>Denied that demons were a source of evil.</li>
<li>Represented Eros, the keeper of sexual passions, as a demon, neither good nor bad.</li>
</ul></li>
<li><strong>Shifting Perspectives:</strong>
<ul>
<li>Later Platonists, including Neoplatonists who influenced Christian philosophy, believed some demons were good and others evil.</li>
<li>Aristotle considered the possibility of demons scripting dreams.</li>
<li>Plutarch and Porphyry proposed that demons originated from the moon and inhabited the upper air.</li>
</ul></li>
</ul></li>
<li><strong>Early Church Fathers:</strong>
<ul>
<li>Sought to differentiate themselves from pagan beliefs.</li>
<li><strong>Demonization of Pagan Deities:</strong> Taught that pagan religion was the worship of demons and men wrongly considered gods.</li>
<li><strong>St.&nbsp;Paul’s “Wickedness in High Places” (Ephesians 6.14):</strong> Referred to demons dwelling in high places, not government corruption.
<ul>
<li>“For we wrestle not against flesh and blood, but against principalities, against powers, against the rulers of the darkness of this world, against spiritual wickedness in high places.”</li>
</ul></li>
<li>Demons were considered more than just a metaphor for human evil.</li>
</ul></li>
<li><strong>St.&nbsp;Augustine’s Struggle with Demons:</strong>
<ul>
<li>Quoted prevalent pagan beliefs about demons inhabiting the middle region between gods and men, possessing immortal bodies and human-like passions.</li>
<li><strong>The City of God (Book 8, begun in 413):</strong>
<ul>
<li>Assimilated ancient traditions, replacing “gods” with “God” and demonizing all demons as inherently malevolent.</li>
<li>Described demons as the source of all spiritual and material evil, lacking any redeeming qualities.</li>
<li>Characterized them as “aerial animals,” harmful, unrighteous, prideful, envious, and deceitful.</li>
<li>Warned against their ability to disguise themselves as angels of the Lord to deceive humans.</li>
<li>Acknowledged their ability to shapeshift and possess knowledge (“demon” means knowledge in Greek).</li>
<li>Emphasized their lack of charity and their tendency to prey on human minds (Tertullian).</li>
<li>Described their dwelling place in the air, near the stars and clouds.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="medieval-period" class="level4">
<h4 class="anchored" data-anchor-id="medieval-period">Medieval Period</h4>
<ul>
<li><strong>Michael Psellus (11th Century):</strong>
<ul>
<li>Described demons as existing within human passions, dwelling in the realm of matter, and subject to passions themselves.</li>
</ul></li>
<li><strong>Recalmus of Schoenthal (circa 1270):</strong>
<ul>
<li>Wrote a treatise on demons based on his personal experiences.</li>
<li>Claimed to see countless malevolent demons around people’s heads (only with eyes closed).</li>
</ul></li>
<li><strong>Continuity of Demonic Belief:</strong>
<ul>
<li>Despite rationalist influences from various worldviews and social and philosophical changes, the belief in demons remained largely unchanged from Hesiod to the Crusades.</li>
</ul></li>
<li><strong>Demons and Sexual Encounters:</strong>
<ul>
<li>Demons, also called devils or fallen angels, were believed to have sexual relations with humans.</li>
<li><strong>Incubi:</strong> Male demons seducing women.</li>
<li><strong>Succubi:</strong> Female demons seducing men.</li>
<li>Augustine believed witches were the offspring of these unions.</li>
<li><strong>Examples:</strong> Nuns reporting resemblances between incubi and priests, waking up feeling “polluted.” Similar accounts in harems in ancient China.</li>
</ul></li>
<li><strong>Richard Baxter (Certainty of the World of Spirits, 1691):</strong>
<ul>
<li>Argued that the prevalence of incubi reports made it impossible to deny their existence.</li>
</ul></li>
<li><strong>Incubi/Succubi and Sleep Paralysis:</strong>
<ul>
<li>Perceived as a weight on the chest during sleep, causing nightmares.</li>
<li><strong>Mare:</strong> Old English word for incubus, despite its Latin meaning.</li>
<li><strong>Nightmare:</strong> Originally referred to the demon that torments sleepers with dreams.</li>
</ul></li>
</ul>
</section>
<section id="the-malleus-maleficarum-and-the-witch-hunts" class="level4">
<h4 class="anchored" data-anchor-id="the-malleus-maleficarum-and-the-witch-hunts">The Malleus Maleficarum and the Witch Hunts</h4>
<ul>
<li><strong>Athanasius’ Life of St.&nbsp;Antony (circa 360):</strong>
<ul>
<li>Described demons freely entering and leaving locked rooms.</li>
</ul></li>
<li><strong>Ludovico Sinistrari (Dea Daemonialitae, 1700s):</strong>
<ul>
<li>Asserted that demons could pass through walls.</li>
</ul></li>
<li><strong>Widespread Belief in External Demons:</strong>
<ul>
<li>Remained largely unquestioned from antiquity through the late medieval period.</li>
<li><strong>Exceptions:</strong> Imonides denied their reality, while most rabbis believed in Dybbuks.</li>
</ul></li>
<li><strong>Abba Poman (Desert Father):</strong>
<ul>
<li><strong>Possible Hint of Internal Demons:</strong> When asked how demons fight against him, he countered by asking if the demons fight against the questioner, implying that “our own wills become the demons.”</li>
</ul></li>
<li><strong>Macrobius’ Commentary on the Dream of Scipio (4th Century):</strong>
<ul>
<li>Influenced medieval views on incubi and succubi.</li>
<li>Described <strong>phantasma</strong> (phantoms) seen between wakefulness and sleep, imagined as predatory by the dreamer.</li>
<li><strong>Skepticism Ignored:</strong> Macrobius’ skeptical side was overlooked by medieval readers.</li>
</ul></li>
<li><strong>Pope Innocent VIII’s Bull (1484):</strong>
<ul>
<li>Declared that men and women engaged in intercourse with incubi and succubi, causing miscarriages and calamities through sorcery.</li>
<li><strong>Initiated the Witch Hunts:</strong> Led to systematic accusations, torture, and executions of witches across Europe.</li>
<li><strong>Augustine’s Influence:</strong> Witches were seen as guilty of “criminal tampering with the unseen world.”</li>
<li><strong>Gender Bias:</strong> Primarily targeted women despite the bull’s mention of “both sexes.”</li>
</ul></li>
<li><strong>Protestant Support for Witchcraft Beliefs:</strong>
<ul>
<li>Many leading Protestants, despite their differences with the Catholic Church, held similar views on witchcraft.</li>
<li><strong>John Wesley (Methodism Founder):</strong> “The giving up of witchcraft is in effect the giving up of the Bible.”</li>
<li><strong>William Blackstone (Commentaries on the Laws of England, 1765):</strong> Denying the existence of witchcraft contradicted the Bible.</li>
</ul></li>
<li><strong>The Malleus Maleficarum (Hammer of Witches):</strong>
<ul>
<li>Authored by Henry Kramer and James Sprenger, appointed by Pope Innocent VIII.</li>
<li><strong>Comprehensive Analysis of Witchcraft:</strong> Used scriptural and scholarly citations to justify persecution.</li>
<li><strong>Thomas Eadie’s Critique (A Candle in the Dark):</strong> Condemned the Malleus for its “villainous doctrines,” “horrible lies,” and cruelty.</li>
</ul></li>
<li><strong>The Malleus’ Core Arguments:</strong>
<ul>
<li>Accusation of witchcraft equaled guilt.</li>
<li>Torture was seen as proof of the accusation.</li>
<li>No rights for the accused, no confrontation of accusers.</li>
<li>Ignored the possibility of false accusations motivated by jealousy, revenge, or greed.</li>
<li>Detailed methods of torture and punishment designed to release demons before death.</li>
</ul></li>
<li><strong>The Spread of the Inquisition:</strong>
<ul>
<li>Inquisitors, fueled by financial incentives, proliferated across Europe.</li>
<li><strong>Expense Account Scam:</strong> Costs of investigation, trial, and execution borne by the accused or their relatives.</li>
<li><strong>Financial Incentives:</strong> Inquisitors received bonuses for each witch burned, and the church and state divided the accused’s property.</li>
</ul></li>
<li><strong>Escalation of the Witch Hunts:</strong>
<ul>
<li>Targeted the middle class and wealthy in addition to the poor.</li>
<li>Forced confessions led to exponential growth in accusations.</li>
<li><strong>“Frightful Proofs”:</strong> Confessions were seen as evidence of the devil’s existence (later echoed in the Salem Witch Trials).</li>
</ul></li>
<li><strong>Acceptance of Fantastic Testimony:</strong>
<ul>
<li>Credulous belief in stories of mass witch gatherings and flights.</li>
<li><strong>Biblical Justification:</strong> “Thou shalt not suffer a witch to live.”</li>
</ul></li>
<li><strong>Widespread Torture and Executions:</strong>
<ul>
<li>Legions of women burned to death.</li>
<li>Horrendous tortures applied to all defendants, with instruments blessed by priests.</li>
</ul></li>
<li><strong>Pope Innocent VIII’s Death (1492):</strong>
<ul>
<li>Died following unsuccessful transfusions (resulting in the deaths of three boys) and attempts to prolong life through breastfeeding.</li>
<li>Mourned by his mistress and their children.</li>
</ul></li>
<li><strong>Witchfinders (“Prickers”) in Britain:</strong>
<ul>
<li>Employed to identify witches, receiving bounties for each accused person.</li>
<li><strong>Devil’s Marks:</strong> Searched for scars, birthmarks, or nevi that didn’t hurt or bleed when pricked.</li>
<li><strong>Slight of Hand:</strong> Often used tricks to create the illusion of deep penetration.</li>
<li><strong>Invisible Marks:</strong> Used as justification when no visible marks were present.</li>
<li><strong>Confession of a Pricker:</strong> One confessed to causing the deaths of over 220 women for financial gain.</li>
</ul></li>
<li><strong>Unfair Trial Practices:</strong>
<ul>
<li>Mitigating evidence and defense witnesses were inadmissible.</li>
<li>Alibis were difficult to provide and often dismissed.</li>
<li><strong>Supernatural Explanations:</strong> Claims of demonic impersonation used to invalidate alibis (e.g., husbands’ testimonies of wives being asleep).</li>
</ul></li>
<li><strong>Erotic and Misogynistic Elements:</strong>
<ul>
<li>The trials focused on the sexual aspects of alleged encounters with demons.</li>
<li><strong>Augustine’s Contradiction:</strong> Despite his belief that the devil couldn’t fornicate, the trials focused on the quality and quantity of orgasms.</li>
<li><strong>Devil’s Member:</strong> Described as cold.</li>
<li><strong>Devil’s Marks:</strong> Often located on breasts or genitalia, leading to invasive inspections by male inquisitors.</li>
<li><strong>Joan of Arc’s Execution:</strong> The hangman exposed her body after burning her dress to reveal “all the secrets which can or should be in a woman.”</li>
</ul></li>
<li><strong>The Würzburg Witch Trials (1598):</strong>
<ul>
<li>Chronicle reveals the human cost of the witch hunts through a detailed list of victims, including men, women, and children of various ages and social standings.</li>
<li><strong>Special Treatment:</strong> Some, like the daughter of Valkenberger, were privately executed.</li>
<li><strong>Public Immolations:</strong> 28 public burnings, each with an average of 4-6 victims, in a single year in a small city.</li>
</ul></li>
<li><strong>Scale of the Witch Hunts:</strong>
<ul>
<li>The Würzburg trials were a microcosm of what was happening across Europe.</li>
<li>Estimated death toll ranges from hundreds of thousands to millions.</li>
</ul></li>
<li><strong>Justification by the Persecutors:</strong>
<ul>
<li>Those responsible for the witch hunts believed they were acting righteously, saving souls, and fighting demons.</li>
<li><strong>Pierre de Lancre (Description of the Inconstancy of Evil Angels, 1612):</strong>
<ul>
<li>Argued that questioning the validity of confessions implied the Catholic Church was committing a crime, thus making critics guilty of a mortal sin.</li>
</ul></li>
<li><strong>Suppression of Dissent:</strong> Critics of witch-burning were punished, sometimes burned themselves.</li>
</ul></li>
</ul>
</section>
</section>
<section id="heresy-and-the-suppression-of-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="heresy-and-the-suppression-of-knowledge">Heresy and the Suppression of Knowledge</h3>
<ul>
<li><strong>Torture and Burning for Heresy:</strong>
<ul>
<li>Heresy was considered a more serious crime than witchcraft, punished by both Catholics and Protestants.</li>
</ul></li>
<li><strong>William Tyndale’s Case:</strong>
<ul>
<li>Attempted to translate the New Testament into English, challenging the authority of the Catholic Church.</li>
<li><strong>Persecution:</strong> Hounded across Europe for his efforts to make the Bible accessible to the common people.</li>
<li><strong>Execution:</strong> Captured, garrotted, and burned at the stake.</li>
<li><strong>Suppression of Tyndale’s Translation:</strong> Armed posses hunted down copies of his New Testament, which later formed the basis of the King James Version.</li>
</ul></li>
<li><strong>Impact on Witchcraft Accusations:</strong>
<ul>
<li>The climate of suppressing knowledge and punishing dissent hindered those accused of witchcraft.</li>
</ul></li>
</ul>
</section>
<section id="decline-of-witch-burning-and-the-legacy-of-demonic-beliefs" class="level3">
<h3 class="anchored" data-anchor-id="decline-of-witch-burning-and-the-legacy-of-demonic-beliefs">Decline of Witch-Burning and the Legacy of Demonic Beliefs</h3>
<ul>
<li><strong>Decline of Witch-Burning:</strong>
<ul>
<li>The practice declined after the 16th century, with occasional exceptions.</li>
<li><strong>Last Judicial Execution in England:</strong> A woman and her nine-year-old daughter hanged for allegedly causing a rainstorm by removing their stockings.</li>
</ul></li>
<li><strong>Modern Remnants of Demonic Beliefs:</strong>
<ul>
<li>Witches and djinns appear in children’s entertainment.</li>
<li>Exorcism is still practiced by various churches.</li>
<li><strong>Pandemonium:</strong> Literally “all demons,” still used to describe chaos.</li>
<li><strong>Demonic:</strong> Used to describe crazed and violent individuals.</li>
</ul></li>
<li><strong>Shifting Explanations for Mental Illness:</strong>
<ul>
<li>Mental illness was attributed to supernatural causes until the 18th century.</li>
<li>Even insomnia was seen as demonic punishment.</li>
</ul></li>
<li><strong>Continued Belief in the Devil:</strong>
<ul>
<li>Over half of Americans believe in the devil’s existence, and 10% claim to have communicated with him (similar to Martin Luther’s reports).</li>
</ul></li>
<li><strong>Rebecca Brown’s Prepare for War (1992):</strong>
<ul>
<li>A spiritual warfare manual claiming that abortion, sex outside marriage, meditation, yoga, martial arts, and rock music lead to demonic influence.</li>
<li>Suggests that loved ones can be demonically bound and blinded.</li>
</ul></li>
<li><strong>Demonology in Modern Faiths:</strong>
<ul>
<li>Remains a significant part of many religions.</li>
</ul></li>
<li><strong>Medieval Beliefs about Demonic Activities:</strong>
<ul>
<li><strong>The Malleus Maleficarum:</strong> Described demons interfering with copulation and conception, stealing and transferring human semen.</li>
<li><strong>St.&nbsp;Thomas Aquinas (On the Trinity):</strong> Stated that demons could collect and inject semen.</li>
<li><strong>St.&nbsp;Bonaventura:</strong> Elaborated on the process of succubi collecting semen, demons preserving its potency, and incubi using it to impregnate women.</li>
<li><strong>Multi-Generational Bonds:</strong> Offspring of demon-mediated unions were believed to be visited by demons, creating a trans-species sexual bond.</li>
<li><strong>Demons and Flight:</strong> Demons were known to fly and inhabit the upper air.</li>
</ul></li>
</ul>
</section>
<section id="parallels-between-demon-and-alien-abduction-narratives" class="level3">
<h3 class="anchored" data-anchor-id="parallels-between-demon-and-alien-abduction-narratives">Parallels Between Demon and Alien Abduction Narratives</h3>
<ul>
<li><strong>Absence of Spaceships:</strong> Medieval demon narratives lack spaceships, but share other elements with alien abduction accounts.</li>
<li><strong>Shared Elements:</strong>
<ul>
<li>Sexually obsessive non-human entities.</li>
<li>Sky dwellers.</li>
<li>Ability to walk through walls.</li>
<li>Telepathic communication.</li>
<li>Breeding experiments on humans.</li>
</ul></li>
<li><strong>Question of Shared Delusion:</strong>
<ul>
<li>If demons don’t exist, how can we explain the widespread and persistent belief in them across cultures and time periods?</li>
<li>Is it a shared delusion rooted in brain wiring and chemistry?</li>
</ul></li>
</ul>
</section>
<section id="cultural-and-historical-context-of-supernatural-encounters" class="level3">
<h3 class="anchored" data-anchor-id="cultural-and-historical-context-of-supernatural-encounters">Cultural and Historical Context of Supernatural Encounters</h3>
<ul>
<li><strong>Ancient Accounts of Supernatural Encounters:</strong>
<ul>
<li><strong>Genesis:</strong> Angels coupling with the daughters of men.</li>
<li><strong>Greek and Roman Myths:</strong> Gods impregnating women in various forms.</li>
<li><strong>Early Christian Tradition:</strong> Philosophy attributed to demonic revelations of heavenly secrets to human partners.</li>
<li><strong>Global Parallels:</strong> Similar narratives exist in cultures worldwide (e.g., Arabian jinn, Greek satyrs, Hindu boots, Samoan hotuaporo, Celtic dusai).</li>
</ul></li>
<li><strong>Demonization of Enemies and Figures:</strong>
<ul>
<li>Merlin, Plato, Alexander the Great, Augustus, and Martin Luther were all said to have been fathered by incubi.</li>
<li>Entire populations (e.g., Huns, Cypriots) were accused of demonic parentage by their enemies.</li>
</ul></li>
<li><strong>Lilith (Talmudic Tradition):</strong>
<ul>
<li>The archetypal succubus, created alongside Adam but expelled from Eden for insubordination.</li>
<li>Believed to seduce Adam’s descendants.</li>
</ul></li>
<li><strong>Nocturnal Emissions:</strong>
<ul>
<li>Attributed to succubi in ancient Iranian and other cultures.</li>
</ul></li>
<li><strong>St.&nbsp;Teresa of Avila and Angelic Encounters:</strong>
<ul>
<li>Reported a sexual encounter with an “angel of light,” as did other women later canonized by the Catholic Church.</li>
</ul></li>
<li><strong>Cagliostro (18th Century Magician):</strong>
<ul>
<li>Claimed to be the product of a union between heaven and earth, like Jesus.</li>
</ul></li>
<li><strong>Anne Jeffreys’ Case (1645):</strong>
<ul>
<li>A Cornish teenager who reported being attacked by “little men” (fairies), paralyzed, taken to a castle in the air, seduced, and returned home.</li>
<li><strong>Fairies as Demons:</strong> Many Christians, including Joan of Arc’s inquisitors, considered fairies to be demons.</li>
<li><strong>Fairy Characteristics:</strong> Magical powers, ability to cause paralysis, time distortion in Fairyland, reproductive impairment, sexual interactions with humans, abduction of babies (leaving changelings).</li>
</ul></li>
<li><strong>Parallel with Alien Abduction Narratives:</strong>
<ul>
<li>If Anne Jeffreys had grown up in a culture that believed in aliens and UFOs, would her story differ significantly from modern abduction accounts?</li>
</ul></li>
</ul>
</section>
<section id="sleep-paralysis-and-hallucinations" class="level3">
<h3 class="anchored" data-anchor-id="sleep-paralysis-and-hallucinations">Sleep Paralysis and Hallucinations</h3>
<ul>
<li><strong>David Hufford’s The Terror That Comes in the Night (1982):</strong>
<ul>
<li>Describes a case study of a university-educated executive who experienced supernatural assault as a teenager.</li>
<li><strong>Mysterious Lights and Visions:</strong> Saw lights in a harbor, then a glowing figure entering his room and making mundane statements.</li>
<li><strong>Shifting Forms:</strong> The figure appeared as an old woman, an elephant, and other forms on different nights.</li>
<li><strong>Uncertainty about Reality:</strong> The young man oscillated between believing it was a dream and being certain he was awake.</li>
<li><strong>Sleep Paralysis Symptoms:</strong> Experienced pressure, paralysis, inability to cry out, rapid heartbeat, and shortness of breath.</li>
</ul></li>
<li><strong>Influence of Cultural Context:</strong>
<ul>
<li>If the young man had been aware of alien abduction narratives, would his visions have incorporated those elements?</li>
</ul></li>
<li><strong>Edward Gibbon’s The Decline and Fall of the Roman Empire:</strong>
<ul>
<li>Described the interplay between <strong>credulity</strong> and <strong>skepticism</strong> in late classical antiquity.</li>
<li><strong>Credulity as Faith:</strong> Supernatural explanations were readily accepted.</li>
<li><strong>Modern Skepticism:</strong> Gibbon observed a growing skepticism in his time (mid-18th century).</li>
<li><strong>Contrasting Attitudes:</strong> The early Christians were immersed in a world of miracles and demonic encounters, fostering a mindset of belief in extraordinary events.</li>
<li><strong>Gibbon’s Description of Early Christian Beliefs:</strong>
<ul>
<li>Believed the air was filled with demons seeking to tempt and terrify them.</li>
<li>Experienced visions, prophecies, and miraculous deliverances.</li>
<li><strong>Illusions of Fanaticism:</strong> Their imagination and senses were deceived by their fervent beliefs.</li>
<li><strong>Confusion of Dreams and Reality:</strong> Hermits might mistake sleep-induced hallucinations for demonic encounters.</li>
</ul></li>
<li><strong>Human Propensity for Superstition:</strong>
<ul>
<li>Gibbon argued that the human need to believe is so strong that the decline of one mythology will likely be replaced by another.</li>
</ul></li>
</ul></li>
<li><strong>King James I and Demonology:</strong>
<ul>
<li>Authored a book on demons (Demonology, 1597) and believed tobacco was the devil’s weed.</li>
<li><strong>Shift to Skepticism:</strong> Became skeptical by 1618 after discovering adolescents faking demonic possession to accuse others of witchcraft.</li>
</ul></li>
</ul>
</section>
<section id="modern-skepticism-and-the-rise-of-ufo-beliefs" class="level3">
<h3 class="anchored" data-anchor-id="modern-skepticism-and-the-rise-of-ufo-beliefs">Modern Skepticism and the Rise of UFO Beliefs</h3>
<ul>
<li><strong>Gibbon’s Observations Applied to the Present:</strong>
<ul>
<li>If skepticism has declined since Gibbon’s time and some credulity remains, it’s not surprising that demon-like entities have found a place in modern culture.</li>
</ul></li>
<li><strong>The Alien Interpretation of Historical Parallels:</strong>
<ul>
<li>UFO enthusiasts argue that aliens have always visited Earth, previously mistaken for gods, demons, fairies, or spirits.</li>
</ul></li>
<li><strong>Challenges to the Alien Interpretation:</strong>
<ul>
<li><strong>Lack of Pre-1947 Reports:</strong> Why are flying saucer reports virtually non-existent before 1947?</li>
<li><strong>Absence of Saucer Icons in Religions:</strong> Why don’t major religions use saucers as symbols of the divine?</li>
<li><strong>Lack of Warnings about Technology:</strong> Why were there no warnings about the dangers of advanced technology in ancient times?</li>
<li><strong>Incomplete Genetic Experiment:</strong> If aliens have been conducting breeding experiments for millennia, why isn’t it complete?</li>
<li><strong>Negative Consequences:</strong> Why are humans facing problems if the breeding program aims to improve their lot?</li>
</ul></li>
<li><strong>Modern Sects and Alien Beliefs:</strong>
<ul>
<li><strong>Raelians:</strong> Believe God(s) visit Earth in UFOs.</li>
<li>Some abductees describe aliens as angels or emissaries of God.</li>
</ul></li>
<li><strong>Whitley Strieber’s Communion (1982):</strong>
<ul>
<li>A first-hand account of alien abduction.</li>
<li>Initially interpreted the experience as a demonic encounter: “Of course they were demons. They had to be.”</li>
<li><strong>Shifting Perspective:</strong> Strieber later considered the possibility of dreams or hallucinations.</li>
</ul></li>
<li><strong>Fundamentalist Christian Views on UFOs:</strong>
<ul>
<li><strong>Christian News Encyclopedia:</strong> Articles on UFOs describe them as “unchristian fanatic obsession” and “scientists believe UFOs work of devil.”</li>
<li><strong>Spiritual Counterfeits Project (Berkeley):</strong> Teaches that UFOs are demonic.</li>
<li><strong>Aquarian Church of Universal Service (Oregon):</strong> Believes all aliens are hostile.</li>
<li><strong>Cosmic Awareness Communications (1993 Newsletter):</strong> Claims aliens view humans as lab animals, desire worship, but are deterred by the Lord’s Prayer.</li>
</ul></li>
<li><strong>Rejection of Abductees by Religious Communities:</strong>
<ul>
<li>Some abductees have been expelled from evangelical congregations due to their stories being perceived as satanic.</li>
</ul></li>
<li><strong>Dave Hunt’s The Cult Explosion (1980):</strong>
<ul>
<li>Argues that UFOs are non-physical, demonic manifestations from another dimension intended to alter human thinking.</li>
<li>Claims alien entities preach the same lies as the serpent in Eden and are preparing for the Antichrist.</li>
</ul></li>
<li><strong>UFOs and End Times Beliefs:</strong>
<ul>
<li>Some sects believe UFOs and alien abductions are signs of the apocalypse.</li>
</ul></li>
<li><strong>Fundamentalist Challenges to the Compatibility of UFOs and Christianity:</strong>
<ul>
<li>Question whether aliens, if real, were sent by the same God described in major religions.</li>
<li>Argue that UFO phenomena contradict biblical and Christian teachings.</li>
</ul></li>
<li><strong>Ralph Rath’s The New Age (1990):</strong>
<ul>
<li>A Christian critique that accepts UFOs as real but interprets them as instruments of Satan and the Antichrist.</li>
<li><strong>Criticism of Credulity:</strong> Rath criticizes the lack of scientific skepticism in approaching UFOs.</li>
</ul></li>
<li><strong>Hal Lindsey’s Planet Earth, 2000 AD (1994):</strong>
<ul>
<li>A Christian author who believes UFOs are real, operated by supernatural, extraterrestrial beings (demons).</li>
<li><strong>Biblical “Evidence”:</strong> Cites Luke 21:11-12 (describing “great signs from heaven”) as evidence, ignoring verse 32 which clarifies the context as the first century.</li>
</ul></li>
<li><strong>Christian Arguments Against Extraterrestrial Life:</strong>
<ul>
<li>Some Christians believe the Bible implicitly denies the existence of extraterrestrial life.</li>
<li><strong>W. Gary Crampton’s Argument (Christian News, May 23, 1994):</strong>
<ul>
<li>Claims the Bible addresses every aspect of life and implicitly denies extraterrestrial life by portraying Earth as the center of the universe.</li>
<li>Questions who would redeem extraterrestrials if they existed, arguing it couldn’t be Christ.</li>
<li>Rejects experiences that contradict scripture.</li>
</ul></li>
</ul></li>
<li><strong>Diversity of Christian Views:</strong>
<ul>
<li>Many Christian sects, including Roman Catholics, are open to the possibility of alien life and UFOs.</li>
</ul></li>
</ul>
</section>
<section id="the-hypothesis-of-shared-delusions-and-hallucinations" class="level3">
<h3 class="anchored" data-anchor-id="the-hypothesis-of-shared-delusions-and-hallucinations">The Hypothesis of Shared Delusions and Hallucinations</h3>
<ul>
<li><strong>Religious Longings and UFO Narratives (Carl Sagan’s Argument, 1960s):</strong>
<ul>
<li>Proposed that UFO stories fulfill religious needs in a time when science challenges traditional beliefs.</li>
<li><strong>Alternative to God:</strong> Aliens, presented in scientific terms, offer a new form of the God hypothesis.</li>
<li><strong>Space-Age Mystery Religion:</strong> UFO narratives potentially represent a new religious framework.</li>
</ul></li>
<li><strong>Thomas E. Bullard’s Analysis (1989):</strong>
<ul>
<li>Observed that abduction reports resemble older supernatural encounter traditions, with aliens replacing divine beings.</li>
<li><strong>“Science may have evicted ghosts and witches from our beliefs, but it just as quickly filled the vacancy with aliens having the same functions.”</strong></li>
<li>Only the extraterrestrial elements are new; the underlying psychological dramas remain the same.</li>
</ul></li>
<li><strong>The Zeitgeist and Hallucinations:</strong>
<ul>
<li><strong>Hypothesis:</strong> Is it possible that people throughout history have experienced vivid hallucinations, often with sexual content, about abduction by strange beings, with the details shaped by the prevailing cultural beliefs?</li>
<li><strong>Transmission of Stories:</strong> These experiences are shared, inspiring others and becoming part of folklore, myth, and legend.</li>
</ul></li>
<li><strong>Temporal Lobe Hallucinations and Alien Abduction Accounts:</strong>
<ul>
<li>The similarities between the content of temporal lobe hallucinations and alien abduction narratives support the hypothesis.</li>
</ul></li>
<li><strong>Cultural Influence on Hallucinations:</strong>
<ul>
<li><strong>“Perhaps when everyone knows that gods come down to earth, we hallucinate gods. When all of us are familiar with demons, it’s incubi and succubi. When fairies are widely accepted, we see fairies.”</strong></li>
<li>In an age where extraterrestrial beings seem plausible, our hypnagogic imagery might reflect that.</li>
</ul></li>
<li><strong>Unconscious Recall and Cultural Influences:</strong>
<ul>
<li>We can recall forgotten childhood experiences, songs, languages, or stories without conscious awareness of their origin.</li>
<li><strong>Herman Melville (Moby Dick):</strong> “In violent fervors, men, all ignorance, have talked in ancient tongues, and, when the mystery is probed, it turns out always that in their wholly forgotten childhood, those ancient tongues had been really spoken in their hearing.”</li>
<li>We unconsciously absorb cultural norms and integrate them into our own understanding.</li>
</ul></li>
<li><strong>Schizophrenic Command Hallucinations:</strong>
<ul>
<li>Individuals experiencing command hallucinations feel compelled to obey orders from an imposing figure.</li>
<li><strong>Cultural Identification of the Voice:</strong> The identity of the commanding voice is often shaped by cultural influences (e.g., God, Jesus, the devil, demons, angels, aliens).</li>
</ul></li>
<li><strong>Power of Repetitive Imagery:</strong>
<ul>
<li>Advertising demonstrates the influence of repetitive imagery on shaping beliefs, even leading to harmful behaviors like smoking.</li>
</ul></li>
<li><strong>Pervasiveness of Alien Imagery in Modern Culture:</strong>
<ul>
<li>Aliens are prevalent in science fiction, novels, TV shows, films, and tabloids.</li>
<li><strong>Blockbuster Films:</strong> Highly successful movies reinforce alien abduction narratives.</li>
</ul></li>
<li><strong>Increase in Abduction Reports after Media Exposure:</strong>
<ul>
<li>Alien abduction accounts were less common before the 1975 TV dramatization of The Hill Case.</li>
<li><strong>Whitley Strieber’s Communion (1987):</strong> Further popularized abduction narratives.</li>
</ul></li>
<li><strong>Decline of Other Supernatural Entities:</strong>
<ul>
<li>Reports of encounters with incubi, elves, and fairies have decreased.</li>
</ul></li>
<li><strong>Cultural Specificity of Alien Abduction Narratives:</strong>
<ul>
<li>The majority of abduction stories originate from North America, reflecting American cultural influences.</li>
<li><strong>Variations in Alien Descriptions:</strong> Other countries report different types of aliens, often aligning with their own cultural traditions.</li>
</ul></li>
<li><strong>Historical Precedents for Alien Imagery:</strong>
<ul>
<li><strong>Science Fiction Pulp Magazines (1920s-30s):</strong> Featured “little green men” and “bug-eyed monsters.”</li>
<li><strong>Shortwave and Television (December 1937):</strong> An illustration depicted a Martian sending radio messages to Earth.</li>
</ul></li>
<li><strong>H.G. Wells’ Influence:</strong>
<ul>
<li>Wells speculated that future humans would be hairless, with large heads and reduced mobility.</li>
<li>This concept potentially influenced the depiction of advanced extraterrestrials.</li>
</ul></li>
<li><strong>The “Short Gray” Alien Archetype:</strong>
<ul>
<li>Small, large-headed, large-eyed, undeveloped facial features, no visible eyebrows or genitals, smooth gray skin.</li>
<li><strong>Resemblance to Fetuses or Starving Children:</strong> The appearance evokes images of vulnerability.</li>
</ul></li>
<li><strong>Increasing Diversity of Alien Descriptions:</strong>
<ul>
<li><strong>Richard Boylan (Psychotherapist):</strong> Reports a wider range of alien types, including variations in size, number of fingers, eye shape, and body form (e.g., praying mantis, reptilian).</li>
</ul></li>
<li><strong>Critique of Alien Abduction Narratives:</strong>
<ul>
<li>Sagan finds the alien descriptions unimaginative and preoccupied with human concerns.</li>
<li><strong>Lack of Astonishment:</strong> The aliens lack the wonder of encountering truly novel life forms (e.g., a cockatoo for someone who has never seen a bird).</li>
<li><strong>Biological Wonders:</strong> Microorganisms exhibit far greater strangeness than the reported aliens.</li>
</ul></li>
<li><strong>Shared Culture vs.&nbsp;Verisimilitude:</strong>
<ul>
<li>Believers interpret the common elements in abduction stories as evidence of authenticity, rather than as a reflection of shared cultural and biological factors.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-8-on-the-distinction-between-true-and-false-visions" class="level2">
<h2 class="anchored" data-anchor-id="chapter-8-on-the-distinction-between-true-and-false-visions">Chapter 8: On the Distinction Between True and False Visions</h2>
<section id="introduction-credulity-and-the-extraordinary" class="level3">
<h3 class="anchored" data-anchor-id="introduction-credulity-and-the-extraordinary">Introduction: Credulity and the Extraordinary</h3>
<ul>
<li><p>The human mind often finds greater fascination in believing strange and unusual things compared to ordinary and readily believable occurrences.</p>
<ul>
<li><p><strong>Supporting Quote (Samuel Butler, Characters, 1667-1669):</strong></p>
<blockquote class="blockquote">
<p>A credulous mind finds most delight in believing strange things, and the stranger they are, the easier they pass with him, but never regards those that are plain and feasible, for every man can believe such.</p>
</blockquote></li>
</ul></li>
<li><p>The chapter explores various examples of experiences that blur the line between reality and imagination, including:</p>
<ul>
<li>Apparitions in darkened rooms.</li>
<li>Fleeting sensory perceptions (flickering motion, sounds).</li>
<li>Unexpected and vivid memories (smells, familiar places).</li>
</ul></li>
</ul>
</section>
<section id="the-dilemma-of-sharing-unusual-experiences" class="level3">
<h3 class="anchored" data-anchor-id="the-dilemma-of-sharing-unusual-experiences">The Dilemma of Sharing Unusual Experiences</h3>
<ul>
<li><p>Individuals encountering seemingly extraordinary events often face a dilemma: whether to share their experiences or keep them private.</p></li>
<li><p><strong>Societal Influence:</strong> The decision to share is heavily influenced by the prevailing cultural norms and the individual’s social environment.</p>
<ul>
<li><strong>Rigid, Practically-Oriented Societies:</strong> Sharing unusual experiences may lead to being labeled as unreliable or unsound.</li>
<li><strong>Societies Open to Paranormal Beliefs:</strong> Accounts of such experiences might be met with acceptance and even prestige.</li>
</ul></li>
<li><p><strong>Charles Dickens’s Perspective (To Be Taken With a Grain of Salt):</strong> Dickens observed a reluctance among people, even those considered intelligent and cultured, to share strange psychological experiences.</p>
<ul>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>I have always noticed a prevalent want of courage, even among persons of superior intelligence and culture, as to imparting their own psychological experiences when those have been of a strange sort. Almost all men are afraid that what they could relate in such wise would find no parallel or response in a listener’s internal life, and might be suspected or laughed at.</p>
</blockquote></li>
</ul></li>
<li><p><strong>Fear of Ridicule and Lack of Understanding:</strong> Individuals often fear that their experiences won’t be understood or will be dismissed as fantasies.</p></li>
<li><p><strong>Impact on Understanding:</strong> This reticence contributes to the obscurity surrounding these types of experiences.</p></li>
<li><p><strong>Modern Context:</strong> While ridicule still exists, there are now more supportive environments (e.g., therapy, hypnosis) where individuals may feel more comfortable sharing their experiences.</p></li>
</ul>
</section>
<section id="the-blurred-lines-between-imagination-and-memory" class="level3">
<h3 class="anchored" data-anchor-id="the-blurred-lines-between-imagination-and-memory">The Blurred Lines Between Imagination and Memory</h3>
<ul>
<li>A significant challenge in understanding extraordinary experiences is the often blurred distinction between <strong>imagination</strong> and <strong>memory</strong>.</li>
<li><strong>Alien Abduction Accounts:</strong> Some individuals claiming alien abduction recall the experience without hypnosis, while others rely on hypnosis to retrieve memories.</li>
<li><strong>Unreliability of Hypnosis:</strong> Hypnosis is not a dependable method for memory retrieval.
<ul>
<li>It can elicit imagination, fantasy, and play alongside actual memories, making it difficult to differentiate between them.</li>
<li><strong>Hypnosis and Suggestibility:</strong> Hypnosis involves a state of heightened suggestibility, increasing the risk of implanting false memories.</li>
</ul></li>
<li><strong>Legal and Medical Perspectives on Hypnosis:</strong>
<ul>
<li>Courts have prohibited the use of hypnosis as evidence in legal proceedings or criminal investigations.</li>
<li>The <strong>American Medical Association</strong> considers memories retrieved under hypnosis to be less reliable than those recalled without it.</li>
<li><strong>Harold I. Kaplan Comprehensive Textbook of Psychiatry (1989):</strong> This text warns of the high probability of the hypnotist’s beliefs influencing the patient’s memories, leading to strong but potentially false recollections.</li>
</ul></li>
<li><strong>Limitations of Hypnosis in Alien Abduction Cases:</strong> The use of hypnosis in alien abduction cases raises concerns about the validity of the memories retrieved.</li>
<li><strong>Influence of Hypnotists:</strong> Subjects under hypnosis might be inclined to please the hypnotist, potentially responding to subtle cues unconsciously given by the hypnotist.</li>
<li><strong>Alvin Lawson’s Study:</strong>
<ul>
<li>Lawson hypnotized eight subjects (pre-screened to exclude UFO enthusiasts) and told them they had been abducted and examined on a spaceship.</li>
<li>Without further prompting, the subjects provided detailed abduction accounts that closely resembled those of self-proclaimed abductees.</li>
<li><strong>Implication:</strong> Even brief and direct cues from the hypnotist can lead to the generation of elaborate abduction narratives.</li>
</ul></li>
<li><strong>Therapist Influence:</strong> Therapists dealing with alien abduction cases might, consciously or unconsciously, cue their patients, influencing the content of their recollections.</li>
<li><strong>George Ganaway’s Case Study:</strong>
<ul>
<li>Ganaway, a psychiatrist, suggested to a highly suggestible patient under hypnosis that five hours were missing from her memory of a particular day.</li>
<li>When he mentioned a bright light, the patient spontaneously started talking about UFOs and aliens.</li>
<li>Upon further suggestion that she had been experimented on, a detailed abduction story emerged.</li>
<li>After the hypnosis session, the patient, while watching a video recording of the session, recognized that the experience resembled a dream.</li>
<li>However, over the following year, she experienced recurring flashbacks to the dream content.</li>
</ul></li>
<li><strong>Elizabeth Loftus’s Research on False Memories:</strong>
<ul>
<li>Loftus, a psychologist at the University of Washington, has demonstrated that individuals can be led to believe they witnessed events that did not occur.</li>
<li><strong>Car Accident Experiment:</strong> Subjects were shown a film of a car accident and then given false information during questioning (e.g., mentioning a non-existent stop sign).</li>
<li>Many subjects later recalled seeing the stop sign, with some vehemently defending the accuracy of their false memory even after the deception was revealed.</li>
<li><strong>Time Lag Effect:</strong> The longer the time between the event and the introduction of false information, the greater the likelihood of memory distortion.</li>
</ul></li>
<li><strong>Memory as a Story Under Revision:</strong> Loftus proposes that memories are not fixed entities but rather resemble stories that are constantly being revised.</li>
<li><strong>Other Examples of False Memories:</strong> Loftus’s research extends to other scenarios, including implanted memories of being lost in a shopping mall as a child.</li>
<li><strong>Influence of Cues and Questions:</strong> Lucid but entirely fabricated memories can be induced through subtle cues and questions, particularly within a therapeutic context.</li>
<li><strong>Key Findings:</strong>
<ul>
<li>Memory is susceptible to contamination.</li>
<li>False memories can be implanted even in individuals who consider themselves critical and not easily influenced.</li>
</ul></li>
<li><strong>Stephen Ceci and Elizabeth Loftus’s Research on Children’s Suggestibility:</strong>
<ul>
<li>Ceci and Loftus found that preschool children are exceptionally vulnerable to suggestion.</li>
<li>Children who initially deny an event (e.g., catching their hand in a mousetrap) can later “remember” it in vivid detail after being told about it.</li>
<li>Even professionals observing videotapes of these children struggle to differentiate between true and false memories.</li>
</ul></li>
<li><strong>Implications for Adults:</strong> The findings raise questions about the extent to which adults are immune to the same memory fallibilities observed in children.</li>
<li><strong>Ronald Reagan’s False Memories:</strong>
<ul>
<li>President Reagan, who spent World War II in Hollywood, recounted detailed memories of liberating Nazi concentration camp victims, which were actually scenes from the movie “A Wing and a Prayer.”</li>
<li><strong>Public Dangers of False Memories:</strong> The case highlights the potential dangers when individuals in positions of power (political, military, scientific, religious) are unable to distinguish between factual events and vivid fictions.</li>
</ul></li>
<li><strong>Witness Coaching and Memory Distortion:</strong>
<ul>
<li>Lawyers often coach witnesses to repeat their stories repeatedly, leading them to “remember” the rehearsed version rather than the original events.</li>
<li>This process can alter details or even the core aspects of a memory, with witnesses potentially forgetting that their memories have been modified.</li>
</ul></li>
<li><strong>Relevance to Advertising and Propaganda:</strong> The malleability of memory has implications for the effectiveness of advertising and national propaganda.</li>
<li><strong>Implications for Alien Abduction Therapy:</strong> Therapists dealing with alien abduction claims must exercise extreme caution to avoid inadvertently implanting or selectively reinforcing specific narratives during interviews, especially when these interviews occur years after the alleged event.</li>
<li><strong>Memory Fragments and Theory Construction:</strong>
<ul>
<li><strong>Memory as a Constructed Narrative:</strong> Our memories may be composed of fragmented recollections woven together into a coherent story.</li>
<li><strong>Ease of Recall with a Framework:</strong> A well-constructed narrative, even if based on fragmented or inaccurate memories, becomes easier to recall.</li>
<li><strong>Analogy to Scientific Method:</strong> This process is similar to how scientific theories organize and explain isolated data points. We tend to remember the theory more readily than the individual data points.</li>
<li><strong>Challenging Memories in Science vs.&nbsp;Everyday Life:</strong> In science, theories are constantly tested and revised based on new evidence. However, in daily life, our memories are rarely challenged, allowing them to solidify, regardless of their accuracy, or to undergo continuous revision.</li>
</ul></li>
</ul>
</section>
<section id="marian-apparitions-a-historical-parallel" class="level3">
<h3 class="anchored" data-anchor-id="marian-apparitions-a-historical-parallel">Marian Apparitions: A Historical Parallel</h3>
<ul>
<li><strong>Prevalence of Marian Apparitions:</strong> Among reported apparitions, those of saints, particularly the Virgin Mary in Western Europe from the late medieval period to modern times, are the most well-documented.</li>
<li><strong>Profane vs.&nbsp;Sacred Apparitions:</strong> While alien abduction stories bear more resemblance to profane or demonic apparitions, insights into the UFO phenomenon can be gained by examining visions described as sacred.</li>
<li><strong>Examples of Sacred Visions:</strong> Notable examples include the visions of Jeanne d’Arc (France), Saint Bridget (Sweden), and Girolamo Savonarola (Italy).</li>
<li><strong>Focus on Peasant and Shepherd Visions:</strong> Sagan focuses on apparitions reported by shepherds, peasants, and children, as they provide a relevant comparison to alien abduction accounts.</li>
<li><strong>William A. Christian, Jr.’s Research (Apparitions in Late Medieval and Renaissance Spain):</strong> Christian’s work provides a detailed record of Marian apparitions in Castile and Catalonia.</li>
<li><strong>Typical Marian Apparition Narrative:</strong>
<ul>
<li>A rural woman or child encounters a small female figure (often described as a girl or a tiny woman, 3-4 feet tall) who identifies herself as the Virgin Mary.</li>
<li>Mary instructs the witness to convey a message to village leaders or church authorities, usually demanding specific actions (e.g., prayers for the dead, obedience to commandments, construction of a shrine).</li>
<li>Failure to comply is met with threats of dire consequences (e.g., plagues).</li>
<li>In times of plague, Mary might promise to cure the disease if her demands are met.</li>
<li><strong>Initial Skepticism and Demand for Signs:</strong> The witness, upon sharing the message, is typically met with disbelief and told to keep silent. Mary then provides a “sign” as evidence to convince the doubters.</li>
<li><strong>Consequences of Acceptance:</strong> Acceptance of the apparition leads to the construction of shrines, reports of miraculous cures, influx of pilgrims, economic growth, and elevated social status for the witness.</li>
</ul></li>
<li><strong>Commissions of Inquiry:</strong>
<ul>
<li>Many Marian apparition accounts involved commissions of inquiry composed of civic and religious leaders who investigated the claims.</li>
<li>Despite initial skepticism, particularly from male authorities, these commissions often validated the authenticity of the apparitions.</li>
<li><strong>Standards of Evidence:</strong> The standards of evidence employed by these commissions were not consistently rigorous.</li>
<li><strong>Example:</strong> The testimony of an eight-year-old boy delirious with plague, given two days before his death, was accepted as valid evidence in one case.</li>
<li><strong>Delayed Investigations:</strong> Some commissions conducted investigations decades or even a century after the alleged apparition.</li>
</ul></li>
<li><strong>Jean Gerson’s Criteria for Credible Witnesses (On the Distinction Between True and False Visions, circa 1400):</strong>
<ul>
<li>Gerson, an expert on apparitions, outlined criteria for assessing the credibility of witnesses.</li>
<li><strong>Alignment with Authority:</strong> One criterion was the willingness of the witness to accept guidance from political and religious authorities.</li>
<li><strong>Implication:</strong> Witnesses whose visions challenged those in power were deemed unreliable, allowing authorities to manipulate the narratives of saints and virgins to serve their own interests.</li>
</ul></li>
<li><strong>Nature of the “Signs”:</strong>
<ul>
<li>The signs provided by Mary as evidence were often commonplace objects (e.g., candles, silk, magnetic stones, tiles, footprints) or easily fabricated events (e.g., rapid thistle gathering, wooden crosses, temporary physical ailments cured upon acceptance of the story).</li>
</ul></li>
<li><strong>Potential for Coordination of Accounts:</strong>
<ul>
<li>In some cases, multiple witnesses might present similar descriptions of an apparition, suggesting the possibility of coordinated or shared narratives.</li>
<li><strong>Example:</strong> Witnesses in a small town might collectively report seeing a tall, glowing woman in white carrying an infant, surrounded by radiance.</li>
</ul></li>
<li><strong>Instances of Invisible Apparitions:</strong>
<ul>
<li>In other instances, individuals present alongside the witness reported seeing nothing unusual, even when the witness claimed to see the apparition clearly.</li>
<li><strong>Example (Castile, 1617):</strong> A witness claimed to see a lady embracing a cross in a meadow, while a youth standing beside her saw only birds.</li>
</ul></li>
<li><strong>Motivations for Inventing and Accepting Apparition Stories:</strong>
<ul>
<li><strong>Economic Benefits:</strong> Creation of jobs (priests, notaries, carpenters, merchants) and stimulation of regional economies, particularly during times of hardship.</li>
<li><strong>Social Status:</strong> Enhanced social standing for the witness and their family.</li>
<li><strong>Religious Practices:</strong> Renewed prayers for deceased relatives buried in abandoned graveyards (due to plague, for example).</li>
<li><strong>Social Control:</strong> Addressing societal issues like drought, war, and public morale. Promoting unity against perceived enemies (e.g., Moors). Encouraging adherence to laws and religious doctrines.</li>
<li><strong>Religious Reinforcement:</strong> Strengthening the faith of believers.</li>
</ul></li>
<li><strong>Pilgrimage and Shrine Practices:</strong>
<ul>
<li>The fervor of pilgrims at shrines associated with Marian apparitions was significant.</li>
<li>Practices such as consuming rock scrapings or dirt from the shrine mixed with water for medicinal purposes were common.</li>
</ul></li>
<li><strong>Possible Explanations Beyond Fabrication:</strong> While acknowledging the possibility of hoaxes and forgeries, Sagan suggests that other factors may have contributed to the phenomenon of Marian apparitions.</li>
<li><strong>Mundane Nature of Marian Requests:</strong>
<ul>
<li>The demands made by Mary in these apparitions were often surprisingly ordinary and localized (e.g., repairing a shrine, stopping blasphemy, paying tithes).</li>
</ul></li>
<li><strong>Lack of Prophetic or Historically Significant Messages:</strong>
<ul>
<li>The apparitions rarely, if ever, conveyed significant prophecies or warnings about future events or moral issues that could be retrospectively interpreted as divine guidance.</li>
<li><strong>Examples of Missing Warnings:</strong> No apparitions cautioned the Church against supporting an Earth-centered universe or collaborating with Nazi Germany, despite these being significant moral and historical issues later acknowledged by the Church.</li>
<li><strong>Absence of Criticism of Witch Hunts:</strong> No saints criticized the persecution of witches and heretics.</li>
</ul></li>
<li><strong>Focus on Communicating Through Peasants:</strong>
<ul>
<li>The apparitions consistently instructed the peasant witness to inform authorities rather than directly addressing those in power (e.g., kings, popes).</li>
</ul></li>
<li><strong>Shifting Attitudes Towards Apparitions:</strong>
<ul>
<li><strong>19th and 20th Century Apparitions:</strong> While the mundane nature of requests persisted, some later apparitions took on broader implications.
<ul>
<li><strong>Fatima, Portugal (1917):</strong> The Virgin Mary expressed disapproval of a secular government replacing Church rule.</li>
<li><strong>Garabandal, Spain (1961-1965):</strong> Threats of the end of the world were issued unless conservative political and religious doctrines were adopted.</li>
</ul></li>
</ul></li>
<li><strong>Parallels Between Marian Apparitions and Alien Abductions:</strong>
<ul>
<li>Despite differences (e.g., lack of immediate ascension to heaven or reproductive organ manipulation in Marian apparitions), Sagan identifies several parallels:
<ul>
<li><strong>Diminutive Beings:</strong> Both Marian apparitions and alien encounters often involve small beings.</li>
<li><strong>Skyward Origin:</strong> Both involve beings perceived as coming from the sky.</li>
<li><strong>Mundane Communication:</strong> Despite their purported otherworldly origins, the messages conveyed are often ordinary.</li>
<li><strong>Connection to Sleep and Dreams:</strong> Both phenomena show potential links to sleep and dream states.</li>
<li><strong>Witness Reluctance and Ridicule:</strong> Witnesses, often female, experience hesitation in sharing their accounts due to potential ridicule, especially from male authorities.</li>
<li><strong>Persistence of Belief:</strong> Despite skepticism, witnesses maintain the veracity of their experiences.</li>
<li><strong>Narrative Transmission:</strong> Means for spreading and discussing the stories exist, potentially leading to the coordination of details even among witnesses who haven’t met.</li>
<li><strong>Invisibility to Others:</strong> Individuals present during the event might not see anything unusual.</li>
<li><strong>Ordinary “Evidence”:</strong> The signs and evidence presented are typically not beyond human fabrication or acquisition.</li>
<li><strong>Lack of Compelling Evidence:</strong> The apparitions (Mary in the case of Marian visions) don’t seem concerned with providing irrefutable evidence, sometimes even offering cures only to those who already believe.</li>
<li><strong>Influence of Authority Figures:</strong> While not therapists in the modern sense, influential figures (priests and Church hierarchy) play a role similar to therapists in alien abduction cases, having a vested interest in the validity of the visions.</li>
</ul></li>
</ul></li>
<li><strong>Modern Apparitions and Encounters with Jesus:</strong>
<ul>
<li><strong>Continued Marian Apparitions:</strong> Apparitions of Mary and other angels persist in modern times.</li>
<li><strong>G. Scott Sparrow’s Work (I Am With You Always, True Stories of Encounters with Jesus, Bantam 1995):</strong> Sparrow, a psychotherapist and hypnotist, documents first-hand accounts of encounters with Jesus.</li>
<li><strong>Dreams vs.&nbsp;Visions:</strong> Sparrow acknowledges that most accounts are straightforward dreams, but considers “visions” as experiences that occur while awake, yet are otherwise similar to dreams.</li>
<li><strong>External Reality of Dreams:</strong> Sparrow argues that the content of dreams, especially those that evoke positive emotions or wonder, have an external reality independent of the dreamer’s mind.</li>
<li><strong>Lack of Skepticism:</strong> Sparrow’s approach lacks a critical or skeptical perspective.</li>
<li><strong>Challenging the Notion of External Dream Reality:</strong> Sagan questions Sparrow’s perspective, suggesting that if some dreams are acknowledged as the dreamer’s invention, it raises the possibility that all dreams might be.</li>
</ul></li>
<li><strong>Motivations for Inventing Abduction Stories:</strong>
<ul>
<li><strong>Escapism:</strong> Abduction narratives can provide a break from the monotony of everyday life.</li>
<li><strong>Attention Seeking:</strong> They can attract attention from peers, therapists, and potentially the media.</li>
<li><strong>Sense of Importance:</strong> They offer a sense of discovery, excitement, and awe.</li>
<li><strong>Potential for Future Significance:</strong> Abductees might believe they are part of a larger, unfolding event.</li>
<li><strong>Desire for Approval:</strong> They might be motivated by a desire to please their therapists and gain their approval.</li>
<li><strong>Psychological Rewards:</strong> Becoming an abductee can offer psychological benefits, such as a sense of belonging and purpose.</li>
</ul></li>
<li><strong>Comparison to Product Tampering Cases:</strong>
<ul>
<li><strong>Product Tampering as a Contrast:</strong> Product tampering incidents (e.g., finding a syringe in a soft drink can) offer a counterpoint to alien abduction narratives, as they lack the same sense of wonder and mystique.</li>
<li><strong>Copycat Crimes and Motivations:</strong> Many product tampering cases are likely copycat crimes driven by factors such as greed (lawsuits against manufacturers), attention seeking, and a desire to be seen as a victim.</li>
<li><strong>Absence of Therapist Encouragement:</strong> Product tampering claims are not typically encouraged or reinforced by therapists.</li>
<li><strong>Legal Consequences:</strong> Product tampering and false accusations of tampering carry legal penalties.</li>
</ul></li>
<li><strong>Contrasting Abduction Claims and Product Tampering:</strong>
<ul>
<li><strong>Therapist Encouragement:</strong> Therapists often encourage abductees to share their stories publicly.</li>
<li><strong>Lack of Legal Consequences:</strong> There are no legal repercussions for falsely claiming alien abduction.</li>
</ul></li>
<li><strong>Psychological Appeal of Abduction Narratives:</strong>
<ul>
<li>Sagan suggests that, compared to mundane incidents like product tampering, abduction narratives offer a more compelling and psychologically satisfying experience, allowing individuals to believe they have been chosen by higher beings for a special purpose.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-1" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-1">Conclusion</h3>
<ul>
<li>The chapter concludes by highlighting the complex interplay of factors that contribute to the belief in and reporting of extraordinary experiences like alien abductions.</li>
<li>It emphasizes the influence of societal norms, the fallibility of memory, the role of authority figures, and the potential psychological rewards associated with such narratives.</li>
</ul>
</section>
</section>
<section id="chapter-9-therapy" class="level2">
<h2 class="anchored" data-anchor-id="chapter-9-therapy">Chapter 9: Therapy</h2>
<section id="introduction-2" class="level3">
<h3 class="anchored" data-anchor-id="introduction-2">Introduction</h3>
<ul>
<li><strong>Epigraphs</strong>:
<ul>
<li>Sherlock Holmes (A Scandal in Bohemia, 1891): “It is a capital mistake to theorize before one has data. Insensibly, one begins to twist facts to suit theories, instead of theories to suit facts.”</li>
<li>Gabriel Garcia Marquez (Strange Pilgrims, 1992): “True memories seemed like phantoms, while false memories were so convincing that they replaced reality.”</li>
</ul></li>
<li><strong>John Mack’s Conversion to Belief in Alien Abductions</strong>:
<ul>
<li>John Mack, Harvard psychiatrist, initially skeptical about UFOs.</li>
<li>After interviewing abductees, Mack accepts their accounts at face value.</li>
<li>Mack’s Reasoning: The emotional power of abductees’ experiences is persuasive.</li>
<li><strong>Dangerous Doctrine</strong>: Mack proposes that the intensity of an experience indicates its truthfulness.</li>
</ul></li>
<li><strong>Critique of Mack’s Position</strong>:
<ul>
<li><strong>Emotional Power in Dreams and Hallucinations</strong>: Sagan questions whether powerful emotions are unique to abduction experiences, citing dreams and hallucinations as examples.</li>
<li><strong>Lack of Critical Evaluation</strong>: Sagan criticizes therapists working with abductees for not being sufficiently knowledgeable about hallucinations and perceptual malfunctions.</li>
<li><strong>Inconsistency in Belief</strong>: Sagan questions why abductee testimonies are believed while similar accounts of encounters with gods, demons, and other supernatural beings are dismissed.</li>
</ul></li>
<li><strong>Alternative Explanations</strong>:
<ul>
<li><strong>Esoteric Beliefs and Fantasy Proneness</strong>: Nicholas Spanos and colleagues suggest that abductees are more likely to have esoteric beliefs and a tendency toward fantasy.</li>
<li><strong>Environmental Factors</strong>: Unusual sensory and imaginal experiences are more likely to be interpreted as real alien encounters in restricted sensory environments (e.g., at night, during sleep).</li>
<li><strong>Disguised Memories of Abuse</strong>: Sagan suggests that some abduction accounts may be disguised memories of childhood sexual abuse, with the abuser represented as an alien.</li>
</ul></li>
</ul>
</section>
<section id="the-problem-of-childhood-sexual-abuse" class="level3">
<h3 class="anchored" data-anchor-id="the-problem-of-childhood-sexual-abuse">The Problem of Childhood Sexual Abuse</h3>
<ul>
<li><p><strong>Prevalence</strong>:</p>
<ul>
<li>High estimates from opinion surveys (potentially inflated): 1 in 4 American women and 1 in 6 American men sexually abused in childhood.</li>
<li>Sagan acknowledges that sexual abuse is a serious issue.</li>
</ul></li>
<li><p><strong>Real Cases</strong>:</p>
<ul>
<li><strong>Physical Evidence</strong>: Sagan emphasizes that many real abuse cases have continuous memories and supporting physical evidence (photos, diaries, STDs).</li>
<li><strong>Social Consequences</strong>: Child abuse linked to social problems:
<ul>
<li>85% of violent prison inmates abused in childhood (according to one survey).</li>
<li>Two-thirds of teenage mothers raped or sexually abused as children or teenagers.</li>
<li>Rape victims 10 times more likely to abuse alcohol and drugs.</li>
</ul></li>
</ul></li>
<li><p><strong>Repressed Memories</strong>:</p>
<ul>
<li><strong>Freud’s Concept</strong>: Introduced the concept of <strong>repression</strong> (forgetting traumatic events to avoid psychic pain).</li>
<li><strong>Initial Belief</strong>: Freud initially believed repressed childhood sexual abuse was behind every case of hysteria.</li>
<li><strong>Shift in Explanation</strong>: Freud later attributed hysteria to fantasies of sexual abuse, shifting the blame from parent to child.</li>
<li><strong>Contemporary Debate</strong>: Similar debate exists today regarding the validity of recovered memories.</li>
</ul></li>
<li><p><strong>Questionable Recovered Memories</strong>:</p>
<ul>
<li><p>Memories that suddenly surface, especially through therapy or hypnosis, are highly questionable.</p></li>
<li><p><strong>Ulric Neisser’s Perspective</strong>:</p>
<blockquote class="blockquote">
<p>“There is child abuse and there are such things as repressed memories. But there are also such things as false memories and confabulations, and they are not rare at all. Misrememberings are the rule, not the exception. They occur all the time. They occur even in cases where the subject is absolutely confident, even when the memory is a seemingly unforgettable flashbulb, one of those metaphorical mental photographs.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Influence of Suggestion</strong>:</p>
<ul>
<li>Memories can be shaped and reshaped in therapy sessions due to interpersonal demands and suggestion.</li>
<li>Once reconfigured, these memories are difficult to change.</li>
</ul></li>
<li><p><strong>Holocaust Survivors as Evidence Against Repression</strong>:</p>
<ul>
<li>Survivors of Nazi death camps demonstrate that even extreme trauma can be continuously remembered.</li>
<li>Many survivors struggle to forget, not to remember.</li>
</ul></li>
<li><p><strong>Conditions for Repression and Recall (Hypothetical)</strong>:</p>
<ul>
<li><ol type="1">
<li>The abuse actually happened.</li>
</ol></li>
<li><ol start="2" type="1">
<li>The victim was forced to pretend for extended periods that it never happened.</li>
</ol></li>
</ul></li>
<li><p><strong>Richard Ofshe’s Explanation of Recovered Memory Formation</strong>:</p>
<ul>
<li>Patients assemble fragments of images, ideas, feelings, and sensations into marginally coherent stories.</li>
<li>Over time, vague elements become more concrete and are interpreted as abuse.</li>
<li><strong>Body Memories</strong>: Vague physical discomfort reinterpreted as childhood rape.</li>
<li><strong>No Physiological Basis</strong>: No mechanism for muscles to store memories.</li>
</ul></li>
<li><p><strong>Heavy-Handed Therapeutic Practices</strong>:</p>
<ul>
<li>Survivor groups used to exert peer pressure and reinforce the “survivor” identity.</li>
</ul></li>
<li><p><strong>American Psychiatric Association’s Statement (1993)</strong>:</p>
<ul>
<li>Acknowledges the possibility of repressed memories of abuse.</li>
<li>Warns about the difficulty of distinguishing true memories from false ones.</li>
<li>Repeated questioning may lead to false memories.</li>
<li>The proportion of adults with accurate recovered memories is unknown.</li>
<li>Therapists’ biases can interfere with assessment and treatment.</li>
</ul></li>
</ul>
</section>
<section id="the-dangers-of-false-accusations" class="level3">
<h3 class="anchored" data-anchor-id="the-dangers-of-false-accusations">The Dangers of False Accusations</h3>
<ul>
<li><strong>Two Sides of Injustice</strong>:
<ul>
<li>Dismissing legitimate abuse claims is unjust.</li>
<li>Implanting false memories, breaking up families, and imprisoning innocent people is also unjust.</li>
</ul></li>
<li><strong>Skepticism is Crucial</strong>: Both sides require skepticism.</li>
<li><strong>The Courage to Heal</strong>:
<ul>
<li>Early editions of this influential book advised therapists to:
<ul>
<li>Believe the survivor even if she doubts herself.</li>
<li>Maintain unwavering belief in the abuse.</li>
<li>Treat clients as if they were abused even if they are unsure.</li>
<li>Sagans claim that no one who explored the possibility of abuse ever determined they weren’t abused.</li>
</ul></li>
</ul></li>
<li><strong>Kenneth V. Lanning’s Concerns (FBI)</strong>:
<ul>
<li>Warns against blindly accepting any allegation of child abuse, regardless of how improbable.</li>
</ul></li>
<li><strong>Extreme Therapist Perspective</strong>:
<ul>
<li>A California therapist quoted in the Washington Post: “I don’t care if it’s true. What actually happened is irrelevant to me. We all live in a delusion.”</li>
</ul></li>
<li><strong>Relevance to Alien Abductions</strong>:
<ul>
<li>Sagan draws parallels between false accusations of sexual abuse and alien abductions:
<ul>
<li>Both involve passionate and convinced individuals.</li>
<li>Both can be influenced by authority figures.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="satanic-ritual-abuse" class="level3">
<h3 class="anchored" data-anchor-id="satanic-ritual-abuse">Satanic Ritual Abuse</h3>
<ul>
<li><strong>Characteristics</strong>:
<ul>
<li>Allegations of sexual torture, coprophilia, infanticide, and cannibalism within organized satanic cults.</li>
</ul></li>
<li><strong>Prevalence (Potentially Inflated)</strong>:
<ul>
<li>12% of surveyed American Psychological Association members reported treating satanic ritual abuse cases.</li>
<li>30% reported cases of abuse in the name of religion.</li>
<li>Roughly 10,000 cases reported annually in the U.S. in recent years.</li>
</ul></li>
<li><strong>Link to Fundamentalism</strong>:
<ul>
<li>Many proponents of the satanic panic are Christian fundamentalists who believe in a literal devil.</li>
</ul></li>
<li><strong>FBI Analysis (Kenneth V. Lanning)</strong>:
<ul>
<li><strong>Religious Bias</strong>: Discussions of Satanism often interpreted through the lens of the audience’s religious beliefs.</li>
<li><strong>Broad Definition of Satanism</strong>: Some equate Satanism with any religious belief system other than their own, including mainstream religions and New Age practices.</li>
<li><strong>Constitutional Neutrality</strong>: Law enforcement officers must uphold the law, not impose their religious views.</li>
<li><strong>Historically, More Abuse in the Name of God</strong>: More crimes and abuse committed in the name of God than Satan.</li>
</ul></li>
<li><strong>Historical Parallels</strong>:
<ul>
<li>Accusations of grotesque rituals made throughout history against marginalized groups (Catiline conspirators, Jews, Knights Templar).</li>
<li>Early Christians were also accused of cannibalistic infanticide and orgies.</li>
</ul></li>
<li><strong>Explanations for Lack of Evidence</strong>:
<ul>
<li>Claims of global baby breeding programs for ritual purposes (similar to alien breeding experiments).</li>
<li>Allegations of intergenerational transmission of cult involvement (also similar to alien abduction claims).</li>
<li><strong>No Physical Evidence</strong>: No physical evidence has been presented in court to support these claims.</li>
</ul></li>
<li><strong>Social Implications</strong>:
<ul>
<li>Belief in satanic ritual abuse elevates the status of those warning about it.</li>
</ul></li>
<li><strong>Case Examples</strong>:
<ul>
<li><ol type="1">
<li>Myra Obasi: Believed to be possessed by demons; sisters gouged out her eyes in an attempt to help her.</li>
</ol></li>
<li><ol start="2" type="1">
<li>Parents beat child to death for rejecting their brand of Christianity (FBI files).</li>
</ol></li>
<li><ol start="3" type="1">
<li>Child molester justifies abuse by reading the Bible to victims (FBI files).</li>
</ol></li>
<li><ol start="4" type="1">
<li>Boy’s eyeball plucked out in an exorcism by a Protestant fundamentalist minister.</li>
</ol></li>
<li><ol start="5" type="1">
<li>Woman decapitates son after incestuous relationship, believing him to be possessed (not satanic).</li>
</ol></li>
</ul></li>
<li><strong>Study by Gail Goodman et al.&nbsp;(1994)</strong>:
<ul>
<li>Examined over 12,000 satanic ritual abuse claims and found no credible evidence.</li>
<li>Diagnoses often based on unreliable methods (hypnotherapy, children’s fear of symbols, common childhood behaviors).</li>
<li>Physical evidence (scars) rarely mentioned and often inconclusive.</li>
</ul></li>
<li><strong>George K. Ganaway’s Hypothesis</strong>:
<ul>
<li>Suggests that cult-related memories may be a result of mutual deception between patient and therapist.</li>
</ul></li>
</ul>
</section>
<section id="the-case-of-paul-ingram" class="level3">
<h3 class="anchored" data-anchor-id="the-case-of-paul-ingram">The Case of Paul Ingram</h3>
<ul>
<li><strong>Lawrence Wright’s Book</strong>: Chronicled in Remembering Satan (1994).</li>
<li><strong>Background</strong>:
<ul>
<li>Paul Ingram: Respected figure in Olympia, Washington (Republican Party chairman, sheriff’s deputy).</li>
</ul></li>
<li><strong>Accusations</strong>:
<ul>
<li>Daughter accuses Ingram of sexual abuse, torture, satanic rituals, and infanticide after a religious retreat.</li>
<li>Ingram has no memory of the alleged events.</li>
</ul></li>
<li><strong>Influence and Suggestion</strong>:
<ul>
<li>Police, therapist, and pastor suggest that Ingram has repressed memories.</li>
<li>Ingram attempts to recall under hypnosis and begins to visualize fragmented images.</li>
<li>He is encouraged and reinforced for producing increasingly disturbing “memories.”</li>
<li>Pastor assures him that God would only allow true memories to surface.</li>
</ul></li>
<li><strong>Spread of Accusations</strong>:
<ul>
<li>Other children and wife begin “remembering” under pressure.</li>
<li>Prominent citizens accused of participating in rituals.</li>
</ul></li>
<li><strong>Richard Ofshe’s Control Experiment</strong>:
<ul>
<li>Ofshe suggests to Ingram that he committed incest with his children and asks him to use the memory recovery technique.</li>
<li>Ingram promptly produces a “memory” of the suggested event, even though the alleged participants deny it.</li>
</ul></li>
<li><strong>Ingram’s Guilty Plea and Recantation</strong>:
<ul>
<li>Ingram pleads guilty to six counts of rape and is sentenced to 20 years.</li>
<li>In jail, away from outside influences, he reconsiders and attempts to withdraw his plea, claiming his memories were coerced.</li>
<li>Plea is rejected.</li>
</ul></li>
<li><strong>Lack of Physical Evidence</strong>:
<ul>
<li>Daughter’s claimed scars from torture and abortions are not found upon medical examination.</li>
</ul></li>
<li><strong>Historical Comparison</strong>:
<ul>
<li>Sagan suggests that in the 16th century, Ingram and his family might have been burned at the stake.</li>
</ul></li>
</ul>
</section>
<section id="official-reports-and-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="official-reports-and-skepticism">Official Reports and Skepticism</h3>
<ul>
<li><strong>FBI Report</strong>:
<ul>
<li>Kenneth V. Lanning’s Investigator’s Guide to Allegations of Ritual Child Abuse (January 1992) expresses skepticism about satanic abuse claims but is widely ignored by believers.</li>
</ul></li>
<li><strong>British Department of Health Study (1994)</strong>:
<ul>
<li>Investigated 84 alleged instances of satanic abuse and found no credible evidence.</li>
</ul></li>
</ul>
</section>
<section id="the-role-of-evangelical-christianity-and-experts" class="level3">
<h3 class="anchored" data-anchor-id="the-role-of-evangelical-christianity-and-experts">The Role of Evangelical Christianity and “Experts”</h3>
<ul>
<li><strong>Evangelical Influence</strong>:
<ul>
<li>A study identifies the evangelical Christian campaign against new religious movements as a driving force behind the satanic abuse panic.</li>
</ul></li>
<li><strong>Self-Proclaimed Experts</strong>:
<ul>
<li>Individuals with limited qualifications claim expertise based on anecdotal “experience” with cases.</li>
</ul></li>
</ul>
</section>
<section id="skeptics-vs.-believers" class="level3">
<h3 class="anchored" data-anchor-id="skeptics-vs.-believers">Skeptics vs.&nbsp;Believers</h3>
<ul>
<li><strong>Coridan Hammond’s (ASCH Past President) View of Skeptics</strong>:
<ul>
<li>Suggests that skeptics are either:
<ul>
<li><ol type="1">
<li>Naive and inexperienced clinicians.</li>
</ol></li>
<li><ol start="2" type="1">
<li>Like Holocaust deniers.</li>
</ol></li>
<li><ol start="3" type="1">
<li>Intellectualizers who doubt everything.</li>
</ol></li>
<li><ol start="4" type="1">
<li>Cult members themselves, potentially involved in transgenerational cults.</li>
</ol></li>
</ul></li>
</ul></li>
<li><strong>Hammond’s Claims</strong>:
<ul>
<li>Believes in satanic Nazi mind-control experiments conducted by the CIA on thousands of Americans.</li>
<li>Claims research shows a high percentage of multiple personality disorder patients are cult abuse victims.</li>
</ul></li>
</ul>
</section>
<section id="similarities-across-recovered-memory-phenomena" class="level3">
<h3 class="anchored" data-anchor-id="similarities-across-recovered-memory-phenomena">Similarities Across Recovered Memory Phenomena</h3>
<ul>
<li><strong>Three Classes of Recovered Memories</strong>:
<ul>
<li><ol type="1">
<li>Alien abductions.</li>
</ol></li>
<li><ol start="2" type="1">
<li>Satanic ritual abuse.</li>
</ol></li>
<li><ol start="3" type="1">
<li>Repressed memories of childhood sexual abuse.</li>
</ol></li>
</ul></li>
<li><strong>Common Features</strong>:
<ul>
<li><strong>Specialization</strong>: Therapists specialize in each type of recovered memory.</li>
<li><strong>Patient Selection</strong>: Patients seek out therapists whose specialty aligns with their complaints.</li>
<li><strong>Eliciting Distant Memories</strong>: Therapists help patients recall events from the distant past.</li>
<li><strong>Emotional Intensity</strong>: Therapists are deeply affected by their patients’ apparent suffering.</li>
<li><strong>Leading Questions</strong>: Some therapists use leading questions and suggestive techniques.</li>
<li><strong>Therapist Networks</strong>: Practitioners share client histories and methods.</li>
<li><strong>Defensive Posture</strong>: Therapists defend their practices against skeptics.</li>
<li><strong>Dismissal of Iatrogenesis</strong>: The possibility of therapist-induced symptoms is downplayed.</li>
<li><strong>Predominantly Female Patients</strong>: The majority of those reporting abuse are women.</li>
<li><strong>Lack of Physical Evidence</strong>: Generally, there is no physical evidence to support the claims (with exceptions).</li>
</ul></li>
</ul>
</section>
<section id="the-larger-picture-hysteria" class="level3">
<h3 class="anchored" data-anchor-id="the-larger-picture-hysteria">The Larger Picture: Hysteria</h3>
<ul>
<li><strong>Fred H. Frankel’s Perspective (Harvard Psychiatrist)</strong>:
<ul>
<li>Suggests that these phenomena may be part of a larger picture resembling what was once called <strong>hysteria</strong>.</li>
<li>Characteristics of hysteria:
<ul>
<li>High suggestibility.</li>
<li>Vivid imagination.</li>
<li>Sensitivity to context and expectations.</li>
<li>Contagion (spread of symptoms).</li>
</ul></li>
</ul></li>
<li><strong>Lack of Awareness Among Clinicians</strong>: Many clinicians seem unaware of these factors.</li>
<li><strong>Hypnotic Progression</strong>: Frankel notes that therapists can hypnotically “progress” people to remember their future, eliciting similar emotional intensity as regression.</li>
<li><strong>Self-Deception</strong>: Frankel believes patients deceive themselves, unable to distinguish confabulations from real experiences.</li>
</ul>
</section>
<section id="motivations-and-incentives" class="level3">
<h3 class="anchored" data-anchor-id="motivations-and-incentives">Motivations and Incentives</h3>
<ul>
<li><strong>Appeal of External Blame</strong>:
<ul>
<li>Sagan questions whether individuals might welcome the idea that their problems are caused by external factors (Satanists, abusers, aliens) rather than personal failings.</li>
<li>This provides a sense of relief and removes personal responsibility.</li>
</ul></li>
<li><strong>Financial Incentives for Therapists</strong>:
<ul>
<li>Sagan raises the possibility that therapists’ financial interests might influence their willingness to challenge patients’ narratives.</li>
<li>Prolonged therapy benefits the therapist financially.</li>
</ul></li>
</ul>
</section>
<section id="therapist-training-and-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="therapist-training-and-skepticism">Therapist Training and Skepticism</h3>
<ul>
<li><strong>Need for Control Experiment</strong>:
<ul>
<li>Sagan proposes sending the same patient to specialists in all three fields to see if any would offer a more prosaic explanation for their problems.</li>
</ul></li>
<li><strong>Mack’s “Hero’s Journey”</strong>: Mack tells a patient he is on a hero’s journey, potentially reinforcing the abduction narrative.</li>
<li><strong>Abductees’ Experiences with Skeptical Therapists</strong>:
<ul>
<li>A group of abductees describes feeling dismissed and patronized by therapists who interpreted their experiences as dreams or hallucinations.</li>
</ul></li>
<li><strong>Finding a Sympathetic Therapist</strong>:
<ul>
<li>They express relief at finding a therapist who accepts their stories and offers information about alien bodies and government cover-ups.</li>
</ul></li>
<li><strong>Sources of UFO Therapist Referrals</strong>:
<ul>
<li>Patients contact therapists through addresses in their books.</li>
<li>Referrals from other therapists specializing in alien abductions.</li>
<li>Approaches from audience members after lectures.</li>
</ul></li>
<li><strong>Prior Knowledge and Expectations</strong>:
<ul>
<li>Sagan questions whether any patient arrives at a UFO therapist’s office completely unaware of popular abduction accounts and the therapist’s beliefs.</li>
</ul></li>
<li><strong>Reinforcing Existing Beliefs</strong>:
<ul>
<li>A therapist gives patients his own articles on abductions, and the similarity of their recalled experiences to his descriptions reinforces his belief in the phenomenon.</li>
</ul></li>
<li><strong>Importance of Therapist Knowledge (According to a UFO Scholar)</strong>:
<ul>
<li>If the hypnotist lacks knowledge of alien abductions, the “true nature” of the abduction may not be revealed, suggesting a potential for leading the patient.</li>
</ul></li>
</ul>
</section>
<section id="the-fallibility-of-memory" class="level3">
<h3 class="anchored" data-anchor-id="the-fallibility-of-memory">The Fallibility of Memory</h3>
<ul>
<li><strong>Startle Reflex</strong>:
<ul>
<li>Sagan uses the example of the startle reflex when falling asleep to illustrate the fallibility of our sensory experiences and memories.</li>
</ul></li>
<li><strong>Potential for Memory Implantation</strong>:
<ul>
<li>Sagan questions why we assume memories cannot be implanted after the event, particularly in suggestible states.</li>
</ul></li>
<li><strong>Factors Influencing Memory</strong>:
<ul>
<li>Suggestive questioning.</li>
<li>The enjoyment of storytelling.</li>
<li>Confusion with previously encountered information (reading, hearsay).</li>
</ul></li>
</ul>
</section>
<section id="conclusion-2" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-2">Conclusion</h3>
<ul>
<li><p>The chapter highlights the complexities and potential pitfalls of recovered memory therapy, drawing parallels between claims of alien abduction, satanic ritual abuse, and repressed memories of childhood sexual abuse.</p></li>
<li><p>Sagan emphasizes the importance of skepticism, critical evaluation, and awareness of the fallibility of memory, particularly in therapeutic settings where suggestion and confirmation bias can play a significant role.</p></li>
<li><p>The chapter raises concerns about the potential for harm caused by false accusations and the need for therapists to be mindful of their influence on patients’ narratives.</p></li>
</ul>
</section>
</section>
<section id="chapter-10-the-dragon-in-my-garage" class="level2">
<h2 class="anchored" data-anchor-id="chapter-10-the-dragon-in-my-garage">Chapter 10: The Dragon in My Garage</h2>
<section id="introduction-the-untestable-hypothesis" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-untestable-hypothesis">Introduction: The Untestable Hypothesis</h3>
<ul>
<li><p><strong>Central Analogy</strong>: The chapter opens with the analogy of an <strong>invisible, incorporeal, floating dragon</strong> that spits <strong>heatless fire</strong> living in Sagan’s garage.</p></li>
<li><p><strong>Purpose of Analogy</strong>: This analogy serves to illustrate the problem of <strong>untestable hypotheses</strong>.</p>
<ul>
<li>If no conceivable experiment can disprove a claim, what does it mean to say that the claim is true?</li>
</ul></li>
<li><p><strong>Quote on Magic</strong>:</p>
<blockquote class="blockquote">
<p>Magic, it must be remembered, is an art which demands collaboration between the artist and his public. - E.M. Butler, The Myth of the Magus, 1948</p>
</blockquote>
<ul>
<li>This quote highlights the role of belief and acceptance in accepting claims, especially those related to the seemingly impossible.</li>
</ul></li>
<li><p><strong>The Burden of Proof</strong>:</p>
<ul>
<li>The inability to invalidate a hypothesis is not the same as proving it true.</li>
<li>Claims immune to disproof are “veridically worthless,” even if they inspire wonder.</li>
</ul></li>
<li><p><strong>The Dragon Analogy Applied</strong>:</p>
<ul>
<li>Believing in the dragon, in the absence of evidence, requires faith in Sagan’s word.</li>
<li>The analogy suggests that such belief reveals more about the claimant’s mental state than about the existence of the dragon.</li>
</ul></li>
</ul>
</section>
<section id="open-mindedness-and-the-scottish-verdict" class="level3">
<h3 class="anchored" data-anchor-id="open-mindedness-and-the-scottish-verdict">Open-Mindedness and the Scottish Verdict</h3>
<ul>
<li><strong>Open-Mindedness</strong>: The chapter explores the concept of <strong>open-mindedness</strong> in the face of extraordinary claims.
<ul>
<li>Even if initial evidence is against the dragon’s existence, a truly open-minded person would be willing to consider new data that might support it.</li>
</ul></li>
<li><strong>The Scottish Verdict</strong>:
<ul>
<li>The chapter introduces the “Scottish verdict” of <strong>“not proved”</strong>, which acknowledges the lack of sufficient evidence to either confirm or deny a claim.</li>
</ul></li>
<li><strong>Hypothetical Evidence</strong>:
<ul>
<li>If evidence for the dragon emerged (e.g., footprints, infrared readings, visible traces from spray paint), even a skeptic would have to acknowledge the possibility of its existence.</li>
</ul></li>
<li><strong>Shifting the Burden of Proof</strong>:
<ul>
<li>This section emphasizes that the burden of proof lies with the claimant to provide convincing evidence, not with the skeptic to disprove the claim.</li>
</ul></li>
</ul>
</section>
<section id="multiple-witnesses-and-alternative-explanations" class="level3">
<h3 class="anchored" data-anchor-id="multiple-witnesses-and-alternative-explanations">Multiple Witnesses and Alternative Explanations</h3>
<ul>
<li><strong>Multiple Testimonials</strong>:
<ul>
<li>The scenario expands to include multiple people claiming to have dragons in their garages, each with elusive evidence.</li>
</ul></li>
<li><strong>Alternative Explanations</strong>:
<ul>
<li>Despite the multiple accounts, alternative explanations for the “evidence” (e.g., faked footprints, other causes for burns) are explored.</li>
</ul></li>
<li><strong>Maintaining Skepticism</strong>:
<ul>
<li>The chapter reiterates that the sensible approach remains to tentatively reject the dragon hypothesis, remain open to future data, and consider the possibility of a shared delusion.</li>
</ul></li>
</ul>
</section>
<section id="magic-skepticism-and-alien-abductions" class="level3">
<h3 class="anchored" data-anchor-id="magic-skepticism-and-alien-abductions">Magic, Skepticism, and Alien Abductions</h3>
<ul>
<li><strong>Magic and Suspension of Disbelief</strong>:
<ul>
<li>Magic relies on the audience’s <strong>willing suspension of disbelief</strong> and cooperation with the magician.</li>
<li>To expose the trick, one must cease collaborating and adopt a skeptical mindset.</li>
</ul></li>
<li><strong>Transition to Alien Abductions</strong>:
<ul>
<li>The chapter connects the dragon analogy to the phenomenon of <strong>alien abductions</strong>.</li>
<li>It suggests that a similar dynamic of belief and skepticism is at play.</li>
</ul></li>
<li><strong>Concerns about Therapists</strong>:
<ul>
<li>The chapter raises concerns about therapists who readily accept alien abduction claims without considering alternative explanations like hallucinations or childhood trauma.</li>
<li>It emphasizes the importance of therapists being skeptical and avoiding leading questions.</li>
</ul></li>
</ul>
</section>
<section id="the-case-of-kirk-allen-a-cautionary-tale" class="level3">
<h3 class="anchored" data-anchor-id="the-case-of-kirk-allen-a-cautionary-tale">The Case of Kirk Allen: A Cautionary Tale</h3>
<ul>
<li><strong>The 50-Minute Hour</strong>:
<ul>
<li>The chapter recounts a case study from the book “The 50-Minute Hour” by Robert Lindner (1954).</li>
</ul></li>
<li><strong>Kirk Allen’s Delusion</strong>:
<ul>
<li>The case involves a physicist (“Kirk Allen”) who believed he could travel to the future and experience life as a spacefarer.</li>
</ul></li>
<li><strong>Lindner’s Involvement</strong>:
<ul>
<li>Lindner initially attempted to treat Allen’s delusion but became increasingly drawn into the fantasy.</li>
</ul></li>
<li><strong>The Confession</strong>:
<ul>
<li>Eventually, Allen confessed that he had fabricated the entire story.</li>
</ul></li>
<li><strong>Lessons from the Case</strong>:
<ul>
<li>The case highlights the dangers of therapists becoming too invested in their patients’ delusions.</li>
<li>It emphasizes the importance of maintaining a critical distance and recognizing the potential for fabrication.</li>
</ul></li>
</ul>
</section>
<section id="the-search-for-extraterrestrial-intelligence-seti" class="level3">
<h3 class="anchored" data-anchor-id="the-search-for-extraterrestrial-intelligence-seti">The Search for Extraterrestrial Intelligence (SETI)</h3>
<ul>
<li><strong>SETI as a Scientific Approach</strong>:
<ul>
<li>The chapter contrasts the <strong>scientific approach</strong> of SETI with the anecdotal evidence of alien abduction claims.</li>
</ul></li>
<li><strong>CTA-102 and Quasars</strong>:
<ul>
<li>The example of CTA-102, initially thought to be a signal from an extraterrestrial civilization, but later identified as a <strong>quasar</strong>, demonstrates the importance of seeking alternative explanations.</li>
</ul></li>
<li><strong>LGM-1 and Pulsars</strong>:
<ul>
<li>Similarly, the discovery of LGM-1, initially nicknamed “Little Green Men,” but later identified as a <strong>pulsar</strong>, shows how seemingly extraordinary phenomena can have natural explanations.</li>
</ul></li>
<li><strong>The Importance of Verification</strong>:
<ul>
<li>SETI researchers emphasize the need for <strong>repeated, verifiable signals</strong> before concluding that a signal is of extraterrestrial origin.</li>
</ul></li>
<li><strong>Scientific Rigor</strong>:
<ul>
<li>The chapter highlights the <strong>discipline and rigor</strong> involved in SETI research, contrasting it with the less rigorous approach often taken in investigating alien abduction claims.</li>
</ul></li>
</ul>
</section>
<section id="evaluating-evidence-and-maintaining-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="evaluating-evidence-and-maintaining-skepticism">Evaluating Evidence and Maintaining Skepticism</h3>
<ul>
<li><strong>The Importance of Physical Evidence</strong>:
<ul>
<li>The chapter reiterates the need for <strong>strong physical evidence</strong> to support claims of alien abduction.</li>
</ul></li>
<li><strong>Scrutinizing Anecdotal Claims</strong>:
<ul>
<li>Anecdotal accounts, no matter how sincere, are subject to error and should be treated with skepticism.</li>
</ul></li>
<li><strong>Responding to Human Fallibility</strong>:
<ul>
<li>Skepticism is not a personal attack on witnesses but a necessary response to the inherent limitations of human memory and perception.</li>
</ul></li>
<li><strong>Hypotheses of Last Resort</strong>:
<ul>
<li>Extraterrestrial explanations should be considered only after all other plausible explanations have been exhausted.</li>
</ul></li>
</ul>
</section>
<section id="evaluating-alleged-physical-evidence" class="level3">
<h3 class="anchored" data-anchor-id="evaluating-alleged-physical-evidence">Evaluating Alleged Physical Evidence</h3>
<ul>
<li><strong>Disturbed Soil</strong>:
<ul>
<li>Claims of disturbed soil at supposed UFO landing sites are not compelling because there are other ways to disturb soil.</li>
</ul></li>
<li><strong>Photographs</strong>:
<ul>
<li>Photographs can easily be faked, and many alleged UFO photos have been proven to be hoaxes.</li>
</ul></li>
<li><strong>Scars and Scoop Marks</strong>:
<ul>
<li>Scars and scoop marks on abductees, often cited as evidence, could be self-inflicted or caused by known medical conditions.</li>
</ul></li>
<li><strong>Missing Fetuses</strong>:
<ul>
<li>Claims of alien-induced pregnancies and fetus removals lack supporting medical evidence.</li>
</ul></li>
<li><strong>Implants</strong>:
<ul>
<li>Alleged alien implants that have been examined have been found to be of terrestrial origin.</li>
</ul></li>
<li><strong>The Alien Autopsy Film</strong>:
<ul>
<li>The 1995 “alien autopsy” film, while initially sensational, has been debunked as a likely hoax.</li>
</ul></li>
</ul>
</section>
<section id="the-absence-of-compelling-evidence" class="level3">
<h3 class="anchored" data-anchor-id="the-absence-of-compelling-evidence">The Absence of Compelling Evidence</h3>
<ul>
<li><strong>The Unfulfilled Promise of Physical Evidence</strong>:
<ul>
<li>Despite decades of claims, no compelling physical evidence of alien technology has been presented to the scientific community.</li>
</ul></li>
<li><strong>The Significance of Absence</strong>:
<ul>
<li>The lack of peer-reviewed scientific studies on alleged alien artifacts suggests that these claims do not withstand scrutiny.</li>
</ul></li>
<li><strong>The Motivation of Scientists</strong>:
<ul>
<li>The chapter argues that scientists would be eager to investigate genuine alien technology, making the absence of such discoveries significant.</li>
</ul></li>
</ul>
</section>
<section id="open-minds-and-falling-brains" class="level3">
<h3 class="anchored" data-anchor-id="open-minds-and-falling-brains">Open Minds and Falling Brains</h3>
<ul>
<li><strong>The Importance of Critical Thinking</strong>:
<ul>
<li>The chapter stresses the importance of <strong>critical thinking</strong> in evaluating extraordinary claims.</li>
</ul></li>
<li><strong>The Used Car Analogy</strong>:
<ul>
<li>The analogy of buying a used car demonstrates how even in everyday situations, skepticism is necessary to avoid being deceived.</li>
</ul></li>
<li><strong>The Cost of Gullibility</strong>:
<ul>
<li>The chapter suggests that a lack of skepticism can have serious consequences.</li>
</ul></li>
</ul>
</section>
<section id="the-lack-of-home-security-footage-and-medical-evidence" class="level3">
<h3 class="anchored" data-anchor-id="the-lack-of-home-security-footage-and-medical-evidence">The Lack of Home Security Footage and Medical Evidence</h3>
<ul>
<li><strong>Missing Home Security Footage</strong>:
<ul>
<li>The absence of credible home security footage of alien abductions, despite the prevalence of such systems, raises doubts about the claims.</li>
</ul></li>
<li><strong>Missing Medical Evidence</strong>:
<ul>
<li>The lack of anomalous findings in sonograms, amniocentesis, or miscarriages further undermines the claims of alien-induced pregnancies.</li>
</ul></li>
</ul>
</section>
<section id="alternative-explanations-for-alien-abduction-claims" class="level3">
<h3 class="anchored" data-anchor-id="alternative-explanations-for-alien-abduction-claims">Alternative Explanations for Alien Abduction Claims</h3>
<ul>
<li><strong>Teen Pregnancy and Social Pressure</strong>:
<ul>
<li>The chapter suggests that some teen pregnancy claims attributed to aliens might be fabricated due to social pressure and fear of unwanted pregnancy.</li>
</ul></li>
<li><strong>Lost or Discarded Implants</strong>:
<ul>
<li>The alleged loss or discarding of alien implants by abductees seems inconsistent with the extraordinary nature of such objects.</li>
</ul></li>
<li><strong>The Richard Price Case</strong>:
<ul>
<li>The case of Richard Price, initially thought to involve an alien implant, was later found to have a mundane explanation.</li>
</ul></li>
</ul>
</section>
<section id="examining-john-macks-claims" class="level3">
<h3 class="anchored" data-anchor-id="examining-john-macks-claims">Examining John Mack’s Claims</h3>
<ul>
<li><strong>John Mack’s Perspective</strong>:
<ul>
<li>The chapter examines the views of John Mack, a Harvard psychiatrist who believed alien abduction claims represented a challenge to Western thinking.</li>
</ul></li>
<li><strong>Higher Dimensions and Shape-Changers</strong>:
<ul>
<li>Mack’s suggestion that aliens might be from other dimensions is explored, but the lack of reports of shape-changing aliens casts doubt on this hypothesis.</li>
</ul></li>
<li><strong>Mack’s Lack of Explanation</strong>:
<ul>
<li>The chapter argues that Mack’s use of scientific concepts like “other dimensions” ultimately reveals his inability to explain the phenomena he investigates.</li>
</ul></li>
<li><strong>The Importance of Method</strong>:
<ul>
<li>The chapter emphasizes that the credibility of science comes from its method, which Mack seems to disregard.</li>
</ul></li>
</ul>
</section>
<section id="promoting-critical-thinking" class="level3">
<h3 class="anchored" data-anchor-id="promoting-critical-thinking">Promoting Critical Thinking</h3>
<ul>
<li><strong>The Need for Critical Thinking</strong>:
<ul>
<li>The chapter concludes by advocating for broader and deeper education in <strong>critical thinking</strong>.</li>
</ul></li>
<li><strong>Universal Applicability of Critical Thinking</strong>:
<ul>
<li>The principles of critical thinking are applicable across cultures and time periods.</li>
</ul></li>
<li><strong>The Benefits of Skepticism</strong>:
<ul>
<li>While skepticism can be challenging, it ultimately protects us from deception and allows us to make more informed decisions.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-the-search-for-evidence-continues" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-the-search-for-evidence-continues">Conclusion: The Search for Evidence Continues</h3>
<ul>
<li><strong>The Potential for Future Evidence</strong>:
<ul>
<li>The chapter acknowledges the possibility of future, compelling evidence for extraterrestrial visitation.</li>
</ul></li>
<li><strong>The Current State of Evidence</strong>:
<ul>
<li>However, it emphasizes that current evidence for alien abductions falls short of scientific standards.</li>
</ul></li>
<li><strong>The Importance of Scientific Scrutiny</strong>:
<ul>
<li>It calls for the same level of skepticism and scrutiny applied to SETI research to be applied to alien abduction claims.</li>
</ul></li>
<li><strong>The Value of Psychological Inquiry</strong>:
<ul>
<li>The chapter suggests that the true scientific value of UFO and alien abduction phenomena may lie in understanding human psychology, beliefs, and the potential for self-deception.</li>
</ul></li>
<li><strong>Carl Jung’s Insights</strong>:
<ul>
<li>The chapter cites Carl Jung’s view of UFOs as projections of the unconscious mind and his emphasis on the importance of psychological explanations for such phenomena.</li>
</ul></li>
<li><strong>The Need for Patience and Rigor</strong>:
<ul>
<li>The chapter concludes by advocating for patience and rigorous scientific investigation to determine the true nature of these experiences.</li>
</ul></li>
<li><strong>The Importance of the Question</strong>:
<ul>
<li>Whether or not alien abductions are real, the questions they raise about human consciousness, belief, and the nature of reality are profoundly important.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-11-the-city-of-grief" class="level2">
<h2 class="anchored" data-anchor-id="chapter-11-the-city-of-grief">Chapter 11: The City of Grief</h2>
<section id="introduction-3" class="level3">
<h3 class="anchored" data-anchor-id="introduction-3">Introduction</h3>
<ul>
<li><strong>Epigraph:</strong> “How alien, alas, are the streets of the City of Grief.” Rainer Maria Rilke, The Tenth Elegy, 1923</li>
</ul>
</section>
<section id="background" class="level3">
<h3 class="anchored" data-anchor-id="background">Background</h3>
<ul>
<li>A summary of the preceding seven chapters appeared in Parade Magazine on March 7th, 1993</li>
<li>The article evoked numerous passionate responses and revealed widespread agony associated with the subject</li>
<li>Alien abduction accounts provide insight into the lives of some fellow citizens</li>
</ul>
</section>
<section id="responses-to-the-article" class="level3">
<h3 class="anchored" data-anchor-id="responses-to-the-article">Responses to the Article</h3>
<ul>
<li>Readers’ reactions:
<ul>
<li>Some reasoned</li>
<li>Some asserted</li>
<li>Some harangued</li>
<li>Some were perplexed</li>
<li>Some were deeply troubled</li>
</ul></li>
<li>The article was widely misunderstood:
<ul>
<li>Geraldo Rivera misinterpreted it as confirmation of alien visits</li>
<li>A Washington Post reviewer missed the irony in a statement about abduction frequency</li>
<li>Raymond Moody cited Sagan’s description of hearing deceased parents’ voices as evidence of life after death</li>
</ul></li>
<li>Many readers made assumptions:
<ul>
<li>That Sagan believed in UFOs due to his work on extraterrestrial life</li>
<li>That skepticism about UFOs implies belief that humans are the only intelligent beings in the universe</li>
</ul></li>
</ul>
</section>
<section id="sample-of-mail-responses" class="level3">
<h3 class="anchored" data-anchor-id="sample-of-mail-responses">Sample of Mail Responses</h3>
<section id="analogy-to-animal-encounters-with-humans" class="level4">
<h4 class="anchored" data-anchor-id="analogy-to-animal-encounters-with-humans">Analogy to Animal Encounters with Humans</h4>
<ul>
<li>Description of how animals might perceive encounters with humans:
<ul>
<li>Large hovering object making noise</li>
<li>Sharp pain and loss of muscle control</li>
<li>Examination by strange creatures with instruments</li>
<li>Clamping of metal object to ear</li>
<li>Disorientation and confusion about reality of experience</li>
</ul></li>
</ul>
</section>
<section id="childhood-sexual-abuse-and-alien-abduction" class="level4">
<h4 class="anchored" data-anchor-id="childhood-sexual-abuse-and-alien-abduction">Childhood Sexual Abuse and Alien Abduction</h4>
<ul>
<li>Writer draws parallels between alien abduction accounts and childhood sexual abuse:
<ul>
<li>Similar sensations of being overpowered and held down</li>
<li>Out-of-body experiences</li>
<li>Preference for blaming abuse on aliens rather than trusted adults</li>
</ul></li>
<li>Criticism of alien abduction beliefs:
<ul>
<li>Seen as “ultimate victim role” where adults have no power</li>
<li>Assertion that the real “ultimate victim role” is between abusive parent and child</li>
</ul></li>
</ul>
</section>
<section id="fear-and-uncertainty" class="level4">
<h4 class="anchored" data-anchor-id="fear-and-uncertainty">Fear and Uncertainty</h4>
<ul>
<li>Expression of fear and uncertainty about alien encounters:
<ul>
<li>Concern about sensors allegedly implanted in daughter’s body</li>
<li>Inability to afford medical care</li>
<li>Paranoia about being monitored in the house</li>
</ul></li>
<li>Belief in curses and their effects on the family</li>
</ul>
</section>
<section id="evidence-and-proof" class="level4">
<h4 class="anchored" data-anchor-id="evidence-and-proof">Evidence and Proof</h4>
<ul>
<li>Discussion on the difficulty of obtaining evidence:
<ul>
<li>Comparison to rape victims’ inability to collect evidence during attack</li>
<li>Suggestion of sleeping with a Polaroid camera for future abductions</li>
</ul></li>
<li>Questioning why the burden of proof falls on abductees</li>
</ul>
</section>
<section id="sleep-paralysis-explanation" class="level4">
<h4 class="anchored" data-anchor-id="sleep-paralysis-explanation">Sleep Paralysis Explanation</h4>
<ul>
<li>One writer claims to be living proof of Carl Sagan’s theory that alien abductions occur in the minds of those suffering from sleep paralysis</li>
</ul>
</section>
<section id="predictions-and-beliefs" class="level4">
<h4 class="anchored" data-anchor-id="predictions-and-beliefs">Predictions and Beliefs</h4>
<ul>
<li>Prediction for 2001 AD:
<ul>
<li>Starships from 33 planets will land on Earth</li>
<li>33,000 extraterrestrial teachers and scientists will arrive</li>
<li>Earth will become the 33rd member of the Interplanetary Confederation</li>
</ul></li>
</ul>
</section>
<section id="personal-experiences-and-frustrations" class="level4">
<h4 class="anchored" data-anchor-id="personal-experiences-and-frustrations">Personal Experiences and Frustrations</h4>
<ul>
<li>47-year-old grandmother’s account:
<ul>
<li>Victim of phenomena since childhood</li>
<li>Does not accept experiences at face value</li>
<li>Wishes for a medical diagnosis instead of the unknown</li>
</ul></li>
<li>Difficulties in obtaining physical evidence:
<ul>
<li>Often abducted while naked or in nightgown</li>
<li>Impossible to hide a camera</li>
</ul></li>
<li>Physical effects reported:
<ul>
<li>Deep gashes, puncture wounds, scooped out tissue</li>
<li>Eye damage, bleeding from nose and ears</li>
<li>Burns, finger marks, bruises</li>
<li>All examined by physicians without satisfactory explanation</li>
</ul></li>
</ul>
</section>
<section id="characteristics-of-abductees" class="level4">
<h4 class="anchored" data-anchor-id="characteristics-of-abductees">Characteristics of Abductees</h4>
<ul>
<li>Claims about typical abductees:
<ul>
<li>No prior interest in UFOs</li>
<li>No history of childhood abuse</li>
<li>No desire for publicity or notoriety</li>
<li>Initially assume psychological disorder</li>
</ul></li>
</ul>
</section>
<section id="various-beliefs-and-theories" class="level4">
<h4 class="anchored" data-anchor-id="various-beliefs-and-theories">Various Beliefs and Theories</h4>
<ul>
<li>UFOs don’t exist due to lack of eternal energy source</li>
<li>Belief in communication with Jesus</li>
<li>Criticism of Parade magazine commentary as destructive</li>
<li>Assertion that intelligent beings from outer space are our creators</li>
<li>Positive experiences with alien beings, including life-saving encounters</li>
<li>Criticism of Earth beings’ demand for proof</li>
<li>Reference to Bible’s mention of terrestrial and celestial bodies</li>
</ul>
</section>
<section id="telepathic-experiences" class="level4">
<h4 class="anchored" data-anchor-id="telepathic-experiences">Telepathic Experiences</h4>
<ul>
<li>27-year history of telepathic transmission</li>
<li>Description of waves from outer space beaming through head</li>
<li>Involuntary transmission of thoughts, words, and images</li>
<li>Vivid, Hollywood-like dreams</li>
</ul>
</section>
<section id="scientific-explanations-and-publishing" class="level4">
<h4 class="anchored" data-anchor-id="scientific-explanations-and-publishing">Scientific Explanations and Publishing</h4>
<ul>
<li>Claim of finding plausible terrestrial scientific explanation for UFO reports (ball lightning)</li>
<li>Request for help in getting explanation published</li>
</ul>
</section>
<section id="criticism-of-skepticism" class="level4">
<h4 class="anchored" data-anchor-id="criticism-of-skepticism">Criticism of Skepticism</h4>
<ul>
<li>Accusation that Sagan refuses to take witness reports seriously</li>
<li>Concern that readers will dismiss abductees’ experiences as illusions</li>
<li>Comparison of abductees’ trauma to that of rape victims</li>
<li>Call for support rather than rationalization for victims</li>
</ul>
</section>
<section id="humorous-remarks" class="level4">
<h4 class="anchored" data-anchor-id="humorous-remarks">Humorous Remarks</h4>
<ul>
<li>Friend’s request to bring back an ashtray or matchbook from aliens</li>
<li>Assumption that aliens are too intelligent to smoke</li>
</ul>
</section>
<section id="alternative-explanations" class="level4">
<h4 class="anchored" data-anchor-id="alternative-explanations">Alternative Explanations</h4>
<ul>
<li>Suggestion that alien abduction phenomena are dreamlike sequences retrieved from memory</li>
<li>Proposal that images of aliens and UFOs come from stored memories in the brain</li>
</ul>
</section>
<section id="conspiracy-theories" class="level4">
<h4 class="anchored" data-anchor-id="conspiracy-theories">Conspiracy Theories</h4>
<ul>
<li>Accusation of scientific censorship and intimidation</li>
<li>Comparison to misconceptions about J. Edgar Hoover</li>
</ul>
</section>
<section id="religious-interpretations" class="level4">
<h4 class="anchored" data-anchor-id="religious-interpretations">Religious Interpretations</h4>
<ul>
<li>Claim that America is open to Eastern pagan religions under Satan’s influence</li>
<li>Assertion that born-again Christians have no problem with the question of alien visitation</li>
<li>List of societal ills attributed to rejection of the Biblical God</li>
</ul>
</section>
<section id="government-secrecy" class="level4">
<h4 class="anchored" data-anchor-id="government-secrecy">Government Secrecy</h4>
<ul>
<li>Question about why alien visitation is highly classified by the U.S. government</li>
<li>Speculation about government treaties with aliens in exchange for technology</li>
</ul>
</section>
<section id="spiritual-and-paranormal-beliefs" class="level4">
<h4 class="anchored" data-anchor-id="spiritual-and-paranormal-beliefs">Spiritual and Paranormal Beliefs</h4>
<ul>
<li>Idea that aliens can intercept spiritual bodies</li>
<li>Claims of communication with alien beings</li>
<li>Belief that aliens have been present on Earth for thousands of years, inspiring mythology</li>
<li>Theory that humans were genetically created as laborers for “Sky Lords”</li>
</ul>
</section>
<section id="psychological-and-drug-induced-explanations" class="level4">
<h4 class="anchored" data-anchor-id="psychological-and-drug-induced-explanations">Psychological and Drug-Induced Explanations</h4>
<ul>
<li>Suggestion that hallucinations result from anti-psychotic drugs in mental institutions</li>
<li>Proposal that Thorazine distorts subconscious vision, leading to alien sightings</li>
<li>Claim that hypnosis prepares the mind for demonic invasion</li>
</ul>
</section>
<section id="personal-paranormal-experiences" class="level4">
<h4 class="anchored" data-anchor-id="personal-paranormal-experiences">Personal Paranormal Experiences</h4>
<ul>
<li>Reports of seeing ghosts, floating heads, and hearing mysterious knocks</li>
<li>Recognition of these experiences as tricks of the mind</li>
</ul>
</section>
<section id="government-involvement-and-seti" class="level4">
<h4 class="anchored" data-anchor-id="government-involvement-and-seti">Government Involvement and SETI</h4>
<ul>
<li>Questioning of Sagan’s involvement in Air Force UFO investigations</li>
<li>Criticism of government spending on UFO research and SETI</li>
<li>Support for SETI as a step toward alien communication</li>
</ul>
</section>
<section id="miscellaneous-claims-and-experiences" class="level4">
<h4 class="anchored" data-anchor-id="miscellaneous-claims-and-experiences">Miscellaneous Claims and Experiences</h4>
<ul>
<li>Reports of “astral rape” and its effects on religious practitioners</li>
<li>Belief in imminent removal of chosen individuals by space people before solar events</li>
<li>Claims of working with “Ashtar Command” and celestial beings</li>
<li>Description of energy work to remove alien implants and negative patterns from human bodies</li>
</ul>
</section>
</section>
</section>
<section id="chapter-12-the-fine-art-of-baloney-detection" class="level2">
<h2 class="anchored" data-anchor-id="chapter-12-the-fine-art-of-baloney-detection">Chapter 12: The Fine Art of Baloney Detection</h2>
<blockquote class="blockquote">
<p>The human understanding is no dry light, but receives infusion from the will and affections, whence proceed sciences which may be called sciences as one would. For what a man had rather were true he more readily believes.</p>
<p>Therefore he rejects difficult things from impatience of research, sober things because they narrow hope, the deeper things of nature from superstition, the light of experience from arrogance and pride, things not commonly believed out of deference to the opinion of the vulgar.</p>
<p>Numberless in short are the ways, and sometimes imperceptible, in which the affections color and infect the understanding.</p>
<p>Francis Bacon, Novum Organum, 1620</p>
</blockquote>
<section id="introduction-the-desire-for-life-after-death" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-desire-for-life-after-death">Introduction: The Desire for Life After Death</h3>
<ul>
<li><strong>Personal Anecdote</strong>: Sagan expresses a deep personal desire to believe in life after death, particularly fueled by grief over the loss of his parents.
<ul>
<li>He acknowledges the emotional appeal of believing in continued existence and communication with loved ones.</li>
<li>This personal desire, he recognizes, makes him potentially vulnerable to deception.</li>
</ul></li>
<li><strong>Prevalence of Belief</strong>: Cites statistics on the prevalence of belief in life after death and reincarnation in the United States.
<ul>
<li>More than a third of American adults believe they have contacted the dead.</li>
<li>A quarter believe in reincarnation.</li>
</ul></li>
<li><strong>Skepticism and Evidence</strong>: Despite personal desires, Sagan maintains a skeptical stance, demanding scientific evidence rather than anecdote for accepting claims of life after death.
<ul>
<li>He questions why mediums claiming to channel spirits never reveal verifiable information that is otherwise unavailable.</li>
<li>He criticizes the lack of specific, testable details offered by those claiming to communicate with historical figures or entities.</li>
</ul></li>
<li><strong>The Fundamental Premise of Necromancy</strong>: Sagan outlines the core belief of channeling, spiritualism, and necromancy:
<ul>
<li>Some part of us (soul or spirit) continues after death.</li>
<li>This entity is neither matter nor energy.</li>
<li>It can re-enter bodies in the future, diminishing the fear of death and offering potential for contact with the deceased.</li>
</ul></li>
<li><strong>Example: Ramtha</strong>: Examines the claims of J.Z. Knight, who claims to channel a 35,000-year-old entity named Ramtha.
<ul>
<li><strong>Skeptical Hypothesis</strong>: The simplest explanation is that Ms.&nbsp;Knight is creating the voice of Ramtha herself.</li>
<li><strong>Testability</strong>: Sagan proposes ways to test Ramtha’s claims:
<ul>
<li>If Ramtha is truly 35,000 years old, he should be able to provide verifiable information about that time period (calendar system, climate, diet, languages, social structure, etc.).</li>
<li>Details about Atlantis, if Ramtha originated there, should also be verifiable.</li>
</ul></li>
<li><strong>Critique</strong>: Instead of specific details, Ramtha offers only banal homilies.</li>
</ul></li>
<li><strong>Example: Crop Circle Entities</strong>: Presents another example of channeled information, this time from alleged non-human entities who create crop circles, as documented by Jim Schnabel.
<ul>
<li><strong>Content Analysis</strong>: The channeled messages are described as puerile, lacking specific information and resembling vague pronouncements.</li>
<li><strong>Appeal</strong>: Sagan suggests these messages gain attention because they promise life after death and religious-like comfort.</li>
</ul></li>
<li><strong>Alternative Concept of Eternal Life: J.B.S. Haldane’s Proposal</strong>: Introduces J.B.S. Haldane’s concept of an infinitely old universe leading to the eventual reconstitution of identical Earths and individuals.
<ul>
<li><strong>Statistical Fluctuations</strong>: Haldane theorized that statistical fluctuations in a cold, thin gas-filled universe could eventually lead to the re-emergence of universes like ours.</li>
<li><strong>Infinite Recurrence</strong>: In an infinitely old universe, this process would occur infinitely, leading to the reunion of individuals with loved ones countless times.</li>
<li><strong>Critique</strong>: Sagan initially finds this concept less comforting than traditional religious notions of afterlife because it lacks continuity of memory.</li>
<li><strong>Reassessment</strong>: He then acknowledges that in an infinite number of reconstituted universes, some would include individuals with full memory of past rounds, offering a form of satisfaction.</li>
</ul></li>
<li><strong>Clement of Alexandria’s Critique of Pagan Beliefs</strong>: Quotes Clement of Alexandria’s dismissal of pagan beliefs in life after death as being no more credible than stories told to soothe crying children.</li>
<li><strong>Modern Parallels</strong>: Compares Clement’s critique to modern society’s use of myths like Santa Claus and the Tooth Fairy, which are later retracted as children mature.</li>
<li><strong>The Importance of Knowing Reality</strong>: Emphasizes the importance of adults understanding the world as it truly is for their well-being.</li>
<li><strong>David Hume on Religious Doubt</strong>: Quotes David Hume on the dangers of suppressing doubts about religious beliefs, leading to implicit faith and bigotry.</li>
<li><strong>Tom Paine on Infidelity</strong>: Quotes Tom Paine on the moral consequences of professing belief in what one does not truly believe (“mental lying”).</li>
<li><strong>T.H. Huxley on Morality</strong>: Quotes T.H. Huxley on the foundation of morality being the abandonment of pretending to believe without evidence.</li>
<li><strong>Expanding the Critique</strong>: Sagan extends the critiques of Clement, Hume, Paine, and Huxley beyond religion to apply to the deceptions prevalent in commercial culture.</li>
</ul>
</section>
<section id="commercial-culture-and-deception" class="level3">
<h3 class="anchored" data-anchor-id="commercial-culture-and-deception">Commercial Culture and Deception</h3>
<ul>
<li><strong>Example: Aspirin Commercials</strong>: Analyzes misleading aspirin commercials that highlight the higher dosage of a specific pain-relieving ingredient in their product compared to competitors without disclosing the ingredient or potential side effects.</li>
<li><strong>Other Examples</strong>: Provides further examples of misdirection and evasion in commercial advertising:
<ul>
<li>Analgesic comparisons that encourage consumers to buy their brand instead of simply using a higher strength competitor product.</li>
<li>Failure to disclose risks associated with common over-the-counter medications.</li>
<li>Focusing on irrelevant nutritional aspects of antacids.</li>
</ul></li>
<li><strong>Contempt for Consumers</strong>: Argues that such deceptive advertising practices demonstrate contempt for the intelligence of consumers.</li>
<li><strong>Corruption of Scientific Objectivity</strong>: Criticizes the use of paid product endorsements by scientists, as it undermines public trust in scientific integrity.</li>
</ul>
</section>
<section id="the-whole-life-expo-and-pseudoscience" class="level3">
<h3 class="anchored" data-anchor-id="the-whole-life-expo-and-pseudoscience">The Whole Life Expo and Pseudoscience</h3>
<ul>
<li><strong>Description of Whole Life Expo</strong>: Describes the Whole Life Expo, a New Age exposition featuring highly questionable experts and products.</li>
<li><strong>Examples of Dubious Presentations</strong>: Lists examples of presentations from the Expo program, highlighting their lack of scientific basis and reliance on vague or mystical concepts.</li>
<li><strong>Exploitation of Vulnerability</strong>: Points out how such events prey on people seeking solutions to health problems or spiritual fulfillment.</li>
</ul>
</section>
<section id="examples-of-baloney" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-baloney">Examples of Baloney</h3>
<ul>
<li><strong>Psychic Surgeons</strong>: Describes the fraudulent practice of psychic surgery, where practitioners fake the removal of diseased tissue.</li>
<li><strong>Astrology and Mysticism in Politics</strong>: Mentions the use of astrologers and mystics by leaders of Western democracies.</li>
<li><strong>Police Consulting ESP Experts</strong>: Criticizes the reliance of police on ESP experts for solving crimes, despite their lack of success.</li>
<li><strong>CIA and Remote Viewing</strong>: Discusses the CIA’s investigation into remote viewing (locating objects through psychic means) under congressional pressure.</li>
<li><strong>Psychic Mineral Prospecting</strong>: Describes a case of a mining company paying a psychic for mineral exploration, resulting in no discoveries.</li>
<li><strong>Miracles and Religious Imagery</strong>: Mentions the phenomenon of people interpreting moisture on religious statues or images as miracles.</li>
<li><strong>Baloney Detection and Emotion</strong>: Sagan emphasizes that baloney often thrives on powerful emotions like wonder, fear, greed, and grief.</li>
</ul>
</section>
<section id="the-baloney-detection-kit" class="level3">
<h3 class="anchored" data-anchor-id="the-baloney-detection-kit">The Baloney Detection Kit</h3>
<ul>
<li><strong>Importance of Critical Thinking</strong>: Stresses the importance of critical thinking and recognizing fallacious arguments to avoid being deceived.</li>
<li><strong>Components of the Kit</strong>: Introduces the “Baloney Detection Kit,” a set of tools for skeptical thinking.
<ul>
<li><strong>Reasoned Argument</strong>: Understanding the structure of a reasoned argument and identifying flaws in logic.</li>
<li><strong>Premise and Conclusion</strong>: Evaluating whether conclusions follow logically from premises and whether the premises are true.</li>
</ul></li>
</ul>
<section id="tools-for-skeptical-thinking" class="level4">
<h4 class="anchored" data-anchor-id="tools-for-skeptical-thinking">Tools for Skeptical Thinking</h4>
<ul>
<li><strong>Independent Confirmation</strong>: Seek independent verification of facts.</li>
<li><strong>Substantive Debate</strong>: Encourage open debate among knowledgeable proponents of different viewpoints.</li>
<li><strong>Arguments from Authority</strong>: Recognize that arguments from authority alone are weak; experts can be wrong.</li>
<li><strong>Multiple Hypotheses</strong>: Generate multiple possible explanations for a phenomenon and test each systematically.</li>
<li><strong>Detach from Hypotheses</strong>: Avoid becoming overly attached to a favored hypothesis; be willing to consider alternatives and seek disproof.</li>
<li><strong>Quantification</strong>: Utilize quantitative data whenever possible to enhance the ability to discriminate between hypotheses.</li>
<li><strong>Chain of Argument</strong>: Ensure that every link in a chain of reasoning is valid.</li>
<li><strong>Occam’s Razor</strong>: Favor simpler explanations when two hypotheses explain the data equally well.</li>
<li><strong>Falsifiability</strong>: Ensure that hypotheses are, in principle, testable and falsifiable.</li>
<li><strong>Check Assertions</strong>: Allow for independent verification of claims and experimental results.</li>
<li><strong>Controlled Experiments</strong>: Emphasize the importance of carefully designed and controlled experiments over mere contemplation.</li>
<li><strong>Variable Separation</strong>: Design experiments to isolate the effects of individual variables.</li>
<li><strong>Double-Blind Experiments</strong>: Use double-blind procedures to eliminate bias in evaluating results, particularly in medical studies or witness identification.</li>
</ul>
</section>
<section id="logical-and-rhetorical-fallacies" class="level4">
<h4 class="anchored" data-anchor-id="logical-and-rhetorical-fallacies">Logical and Rhetorical Fallacies</h4>
<ul>
<li><strong>Ad Hominem</strong>: Attacking the arguer instead of the argument.</li>
<li><strong>Argument from Authority</strong>: Relying solely on Saganity of a person or institution to support a claim.</li>
<li><strong>Argument from Adverse Consequences</strong>: Arguing that a proposition must be true because its falsity would have negative consequences.</li>
<li><strong>Appeal to Ignorance</strong>: Claiming that a proposition is true because it has not been proven false, or vice versa.</li>
<li><strong>Special Pleading</strong>: Invoking ad hoc exceptions or justifications to save a favored hypothesis from being refuted.</li>
<li><strong>Begging the Question</strong>: Assuming the conclusion of an argument within the premise itself.</li>
<li><strong>Observational Selection</strong>: Selectively highlighting favorable evidence while ignoring unfavorable evidence.</li>
<li><strong>Statistics of Small Numbers</strong>: Drawing unwarranted conclusions from small sample sizes.</li>
<li><strong>Misunderstanding the Nature of Statistics</strong>: Making erroneous inferences about statistical data (e.g., Eisenhower’s comment on below-average intelligence).</li>
<li><strong>Inconsistency</strong>: Applying different standards of evidence or reasoning to different claims or situations.</li>
<li><strong>Non Sequitur</strong>: Drawing a conclusion that does not logically follow from the premises.</li>
<li><strong>Post Hoc Ergo Propter Hoc</strong>: Assuming that because event B followed event A, event A caused event B.</li>
<li><strong>Meaningless Question</strong>: Posing a question that is inherently unanswerable due to contradictory or ill-defined terms.</li>
<li><strong>Excluded Middle / False Dichotomy</strong>: Presenting only two extreme options while ignoring a range of intermediate possibilities.</li>
<li><strong>Short-Term vs.&nbsp;Long-Term</strong>: Focusing on short-term benefits or consequences while ignoring long-term implications.</li>
<li><strong>Slippery Slope</strong>: Arguing that a particular action will inevitably lead to a series of negative consequences.</li>
<li><strong>Confusion of Correlation and Causation</strong>: Assuming that a correlation between two variables implies a causal relationship.</li>
<li><strong>Straw Man</strong>: Misrepresenting an opponent’s argument to make it easier to attack.</li>
<li><strong>Suppressed Evidence / Half-Truths</strong>: Selectively presenting evidence to support a claim while omitting or downplaying contradictory evidence.</li>
<li><strong>Weasel Words</strong>: Using vague or ambiguous language to avoid making clear commitments or taking responsibility.</li>
</ul>
</section>
</section>
<section id="case-study-the-tobacco-industry-and-baloney" class="level3">
<h3 class="anchored" data-anchor-id="case-study-the-tobacco-industry-and-baloney">Case Study: The Tobacco Industry and Baloney</h3>
<ul>
<li><strong>Correlation vs.&nbsp;Causation</strong>: Discusses the tobacco industry’s argument that the statistical correlation between smoking and cancer does not prove causation.</li>
<li><strong>Possible Explanations</strong>: Presents the tobacco industry’s alternative explanation that individuals with a genetic predisposition to cancer might also be more likely to smoke.</li>
<li><strong>Importance of Control Experiments</strong>: Emphasizes the need for control experiments to establish causality, such as painting mice with cigarette tar and comparing cancer rates to a control group.</li>
<li><strong>Tobacco Industry’s Response to Research</strong>: Highlights the tobacco industry’s public relations campaign to discredit research linking smoking to cancer, similar to DuPont’s response to research on Freon’s impact on the ozone layer.</li>
<li><strong>Profit vs.&nbsp;Public Safety</strong>: Raises the question of whether corporations prioritize profits over public safety when faced with evidence of product hazards.</li>
<li><strong>Regulation and Free Enterprise</strong>: Discusses the implications of these cases for the role of government regulation in protecting the public interest.</li>
<li><strong>Brown and Williamson’s Corporate Objective</strong>: Quotes a 1971 Brown and Williamson report that explicitly states their goal of undermining public belief in the link between smoking and cancer.</li>
<li><strong>Tobacco Industry Rhetoric</strong>: Analyzes the tobacco industry’s rhetoric, which portrays scientific evidence as “fanatical assumptions” and “fallacious rumors.”</li>
<li><strong>Low Tar Advertising</strong>: Points out the contradiction of tobacco companies advertising “low tar” cigarettes while simultaneously denying that tar is linked to cancer.</li>
<li><strong>Healthy Buildings International</strong>: Describes the case of Healthy Buildings International, a research organization funded by the tobacco industry, which was accused of faking data to make secondhand smoke appear less harmful.</li>
<li><strong>Tobacco’s Addictiveness</strong>: Notes the highly addictive nature of tobacco, comparing it to heroin and cocaine.</li>
<li><strong>Death Toll of Tobacco</strong>: Highlights the devastating death toll of tobacco use, surpassing that of World War II.</li>
<li><strong>WHO Statistics</strong>: Cites World Health Organization statistics on the global death toll from smoking, projected to reach 10 million annually by 2020.</li>
<li><strong>Targeting Developing World</strong>: Criticizes the tobacco industry’s aggressive marketing campaigns in developing countries, particularly targeting young women.</li>
<li><strong>Conclusion</strong>: Attributes part of the tobacco industry’s success to the public’s lack of critical thinking skills and understanding of the scientific method.</li>
<li><strong>Final Statement</strong>: “Gullibility kills.”</li>
</ul>
</section>
</section>
<section id="chapter-13-notes-obsessed-with-reality" class="level2">
<h2 class="anchored" data-anchor-id="chapter-13-notes-obsessed-with-reality">Chapter 13 Notes: Obsessed with Reality</h2>
<section id="introduction-4" class="level3">
<h3 class="anchored" data-anchor-id="introduction-4">Introduction</h3>
<ul>
<li><strong>Pseudoscience</strong>: Refers to a range of ideas that may be appealing but lack rigorous scientific scrutiny.</li>
<li><strong>Examples of Pseudoscience and Superstition</strong>:
<ul>
<li>Astrology</li>
<li>Bermuda Triangle</li>
<li>Bigfoot and Loch Ness Monster</li>
<li>Ghosts</li>
<li>Evil eye</li>
<li>Auras</li>
<li>ESP (telepathy, precognition, telekinesis, remote viewing)</li>
<li>Triskaidekaphobia (fear of the number 13)</li>
<li>Bleeding statues</li>
<li>Rabbit’s foot for good luck</li>
<li>Divining rods</li>
<li>Facilitated communication in autism</li>
<li>Pyramidology</li>
<li>Phone calls from the dead</li>
<li>Nostradamus’ prophecies</li>
<li>Flatworm learning through cannibalism</li>
<li>Lunar effect on crime rates</li>
<li>Palmistry, numerology, polygraphy</li>
<li>Divination using comets, tea leaves, monstrous births, entrails, smoke, flames, shadows, excrement, and stomach gurgling</li>
<li>Photography of past events (e.g., Jesus’ crucifixion)</li>
<li>Talking elephant</li>
<li>Blindfolded reading with fingertips</li>
<li>Edgar Cayce’s Atlantis prophecy</li>
<li>Diet quackery, out-of-body experiences</li>
<li>Faith healer fraud</li>
<li>Ouija boards</li>
<li>Emotional lives of plants</li>
<li>Water memory</li>
<li>Character reading from facial features or bumps on the head</li>
<li>The hundredth monkey confusion</li>
<li>Spontaneous human combustion</li>
<li>Biorhythms</li>
<li>Perpetual motion machines</li>
<li>Gene Dixon’s failed predictions</li>
<li>Jehovah’s Witnesses’ failed prophecy</li>
<li>Dianetics and Scientology</li>
<li>Carlos Castaneda’s sorcery claims</li>
<li>Noah’s Ark remains</li>
<li>Amityville Horror and other hauntings</li>
<li>Brontosaurus sighting in the Congo</li>
</ul></li>
<li><strong>Source for in-depth discussion</strong>: Encyclopedia of the Paranormal, Gordon Stein (editor), Buffalo, Prometheus Books, 1996.</li>
<li><strong>Religious Rejection of Pseudoscience</strong>:
<ul>
<li>Fundamentalist Christians and Jews reject many pseudoscientific doctrines based on biblical prohibitions (Deuteronomy 18:10-11).</li>
<li>Apostle Paul advises to “prove all things.”</li>
<li>Moses Maimonides (12th-century Jewish philosopher) argues that these pseudosciences are ineffective (Mishnah Torah, Avodah Zarah, Chapter 11).</li>
</ul></li>
<li><strong>Testing Pseudoscientific Claims</strong>:
<ul>
<li>Some claims are difficult to test due to the “absence of evidence is not evidence of absence” principle.</li>
<li>Others are easier to test, such as flatworm learning and the efficacy of prayer on bacteria growth.</li>
<li>Perpetual motion machines can be excluded based on the laws of physics.</li>
</ul></li>
<li><strong>Burden of Proof</strong>: Rests on those who advance pseudoscientific claims.</li>
<li><strong>Skepticism’s Role in Science</strong>:
<ul>
<li>Some proponents of pseudoscience view skepticism as a hindrance, arguing that true science is inquiry without skepticism.</li>
<li>This view is flawed, as skepticism is crucial for evaluating evidence.</li>
</ul></li>
</ul>
</section>
<section id="susan-blackmores-journey-to-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="susan-blackmores-journey-to-skepticism">Susan Blackmore’s Journey to Skepticism</h3>
<ul>
<li><strong>Example of Failed Psychic Claim</strong>: Mother and daughter claiming telepathic abilities with playing cards.</li>
<li><strong>Blackmore’s Realization</strong>: “I began to see how easy it is to be fooled by your own desire to believe.”</li>
<li><strong>Other Failed Claims</strong>: Dowsers, psychokinesis, telepathy.</li>
<li><strong>Unsuccessful Out-of-Body Experiment</strong>: Young man attempting to view objects in Blackmore’s kitchen remotely.</li>
<li><strong>Telepathy</strong>:
<ul>
<li>Literal meaning: “to feel at a distance.”</li>
<li>Suggests communication of emotions rather than thoughts.</li>
<li>Approximately 25% of Americans believe they’ve experienced telepathy.</li>
<li><strong>Possible Explanation</strong>: Close relationships and familiarity can lead to accurate anticipation of a partner’s thoughts and feelings, mistakenly perceived as telepathy.</li>
</ul></li>
<li><strong>Potential for Physical Causes</strong>: If telepathy were proven, it would likely have discernible physical explanations, such as electrical currents in the brain.</li>
<li><strong>Pseudoscience vs.&nbsp;Supernatural</strong>: Pseudoscience is not synonymous with the supernatural, which, by definition, exists outside the natural world.</li>
</ul>
</section>
<section id="the-carlos-hoax" class="level3">
<h3 class="anchored" data-anchor-id="the-carlos-hoax">The Carlos Hoax</h3>
<ul>
<li><strong>Introduction of Carlos</strong>: A purported wise man, healer, and ascended master in the South Seas.</li>
<li><strong>Australian Media Blitz</strong>: Press kits and videotapes promoting Carlos’s arrival in Australia.</li>
<li><strong>Carlos’s Claim</strong>: Channeling through Jose Luis Alvarez, a young artist.</li>
<li><strong>“Physical Proof”</strong>: Alleged changes in Alvarez’s pulse during channeling, presented as evidence of a mysterious transformation.</li>
<li><strong>Catastrophe Predictions</strong>: Carlos predicted catastrophes in 1988, including the deaths of two world leaders and the rising of a significant star in Australia.</li>
<li><strong>Alvarez’s Backstory</strong>:
<ul>
<li>Motorcycle accident leading to a mild concussion.</li>
<li>Subsequent personality changes and a different voice.</li>
<li>Psychiatrist’s diagnosis: channeling a distinct entity named Carlos.</li>
</ul></li>
<li><strong>Carlos’s Identity</strong>:
<ul>
<li>A 2,000-year-old disincarnate spirit.</li>
<li>Previously inhabited a body in Caracas, Venezuela, which died at age 12.</li>
</ul></li>
<li><strong>Channeling Process</strong>: Carlos enters Alvarez’s body during a trance, facilitated by a crystal.</li>
<li><strong>Supporting “Evidence”</strong>: Articles about extended appearances and a television special on Carlos.</li>
<li><strong>Alvarez and Manager’s Arrival</strong>: First-class travel, limousine, presidential suite, white gown with golden medallion.</li>
<li><strong>Press Conference</strong>: Carlos emerged as a forceful and commanding presence.</li>
<li><strong>Television Appearances</strong>:
<ul>
<li>Interview on Australia’s Today Show with George Negus.</li>
<li>Carlos cursed Negus and his manager doused him with water after skeptical questioning.</li>
<li>Tabloid sensation and widespread discussion.</li>
</ul></li>
<li><strong>A Current Affair Interview</strong>:
<ul>
<li>Skeptic explained a magician’s trick to stop the pulse.</li>
<li>Carlos terminated the interview in outrage.</li>
</ul></li>
<li><strong>Sydney Opera House Channeling</strong>:
<ul>
<li>Nearly full theater with an excited audience.</li>
<li>Alvarez’s pulse stopped, followed by guttural noises and a confident posture.</li>
<li>Carlos emerged and delivered a “spiritual” message.</li>
<li>Positive audience response.</li>
</ul></li>
<li><strong>60 Minutes Exposé</strong>: Revealed the Carlos affair as a hoax orchestrated by magician James Randi.</li>
<li><strong>Purpose of the Hoax</strong>: To demonstrate how easily a faith healer or guru can deceive the public and the media.</li>
</ul>
</section>
<section id="james-randi-and-the-exposure-of-fraud" class="level3">
<h3 class="anchored" data-anchor-id="james-randi-and-the-exposure-of-fraud">James Randi and the Exposure of Fraud</h3>
<ul>
<li><strong>Benjamin Franklin’s Observation on Medical Delusions</strong>: Highlighted the human tendency for self-deception and the cyclical nature of medical fads.</li>
<li><strong>Scientists’ Role in Exposing Pseudoscience</strong>: Most scientists do not consider it their primary responsibility to debunk pseudoscientific claims.</li>
<li><strong>Magicians and Deception</strong>: Magicians are skilled in deception and can be effective in exposing fraudulent paranormal claims.</li>
<li><strong>James Randi</strong>:
<ul>
<li>“The Amazing Randy,” a magician dedicated to exposing charlatans.</li>
<li>Motivated by the harm caused by uncritical acceptance of pseudoscience.</li>
<li>Criticized for his sometimes intolerant and condescending approach.</li>
<li>Received the MacArthur Foundation “Genius Prize” Fellowship.</li>
<li><strong>“Obsessed with reality.”</strong></li>
</ul></li>
<li><strong>Randi’s Work in Exposing Faith Healers</strong>:
<ul>
<li>Investigates and reveals deceptive techniques used by faith healers.</li>
<li>Challenges faith healers to provide medical evidence for their claims.</li>
<li>Calls for government enforcement of fraud and medical malpractice laws.</li>
<li>Criticizes the media’s reluctance to address the issue.</li>
</ul></li>
<li><strong>Comparison of Charlatans in Faith Healing and Science</strong>:
<ul>
<li><strong>Key Differences</strong>:
<ul>
<li>Science has proven efficacy, while the effectiveness of faith healing beyond the placebo effect is questionable.</li>
<li>Science polices itself and exposes fraud internally, while faith healing rarely addresses internal deception.</li>
</ul></li>
</ul></li>
<li><strong>The Placebo Effect</strong>:
<ul>
<li><strong>Placebos</strong>: Dummy drugs (often sugar pills) used in drug trials to compare the effectiveness of real drugs.</li>
<li><strong>Effectiveness</strong>: Placebos can be surprisingly effective, particularly for psychogenic illnesses like colds, anxiety, depression, and pain.</li>
<li><strong>Mechanism</strong>: Belief in the placebo’s effectiveness triggers the release of endorphins, brain proteins with morphine-like effects.</li>
</ul></li>
<li><strong>The Toll of Unanswered Prayers</strong>:
<ul>
<li>Patients may blame themselves for lack of healing, believing they didn’t have enough faith.</li>
<li>Skepticism, while essential for critical thinking, is often seen as an obstacle to both faith and the placebo effect.</li>
</ul></li>
</ul>
</section>
<section id="examples-of-faith-healing-and-its-limitations" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-faith-healing-and-its-limitations">Examples of Faith Healing and its Limitations</h3>
<ul>
<li><strong>Prevalence of Belief in Psychic Healing</strong>: Nearly half of Americans believe in psychic or spiritual healing.</li>
<li><strong>Historical Examples</strong>:
<ul>
<li><strong>King’s Evil</strong>: Scrofula (tuberculosis) believed to be curable only by the king’s touch.</li>
<li><strong>Valentin Great-Rax</strong>: 17th-century Irish faith healer who claimed to cast out demons causing diseases.
<ul>
<li><strong>Observation</strong>: Many patients experienced temporary relief due to the power of suggestion and imagination.</li>
</ul></li>
</ul></li>
<li><strong>Anthropological Evidence</strong>:
<ul>
<li>Reports of both cures and deaths attributed to faith healers and sorcerers in various cultures.</li>
<li><strong>Cabeza de Vaca’s Experience</strong>:
<ul>
<li>Spanish explorers mistakenly perceived as healers by Native Americans.</li>
<li>Performed “cures” using the sign of the cross and prayer.</li>
<li>Fear of the explorers’ perceived power caused illness and death in some Native Americans.</li>
</ul></li>
</ul></li>
<li><strong>Lourdes</strong>:
<ul>
<li>Apparition of the Virgin Mary in 1858.</li>
<li>Millions have visited seeking cures.</li>
<li><strong>Church-Recognized Cures</strong>: 65 out of millions over nearly 150 years, mostly women.</li>
<li><strong>Odds of a Miraculous Cure</strong>: Roughly 1 in a million.</li>
<li><strong>Spontaneous Remission Rate</strong>: Lower at Lourdes than the general rate for cancer.</li>
</ul></li>
<li><strong>Dr.&nbsp;William Nolan’s Investigation</strong>:
<ul>
<li>Studied alleged faith healing cases.</li>
<li>Found no evidence of cures for serious organic diseases.</li>
<li><strong>Conclusion</strong>: Faith healers treating serious organic diseases cause anguish and can be indirectly responsible for deaths.</li>
</ul></li>
<li><strong>Larry Dossey’s Healing Words</strong>:
<ul>
<li>Advocates for the efficacy of prayer in treating disease.</li>
<li><strong>Challenges</strong>:
<ul>
<li>Why can’t prayer cure all diseases, including cancer and severed limbs?</li>
<li>Why is prayer necessary if God is omniscient?</li>
</ul></li>
<li><strong>Limited Evidence</strong>: “The research data on distant, prayer-based healing are promising but too sparse to allow any firm conclusion to be drawn.” (Stanley Krippner, M.D.)</li>
</ul></li>
<li><strong>The Mind’s Influence on Disease</strong>:
<ul>
<li>Cabeza de Vaca’s experience suggests that the mind can induce illness, even fatally.</li>
<li><strong>Psychogenic Dermatitis</strong>: Blindfolded patients develop rashes when tricked into believing they’re being touched by poison ivy or oak.</li>
</ul></li>
<li><strong>Mind-Mediated Diseases</strong>:
<ul>
<li>Faith healing may be effective for conditions influenced by the mind, such as back pain, headaches, stuttering, ulcers, stress, hay fever, asthma, hysterical paralysis, blindness, and false pregnancy.</li>
<li><strong>Medieval Cures</strong>: Apparitions of the Virgin Mary often associated with cures of psychogenic paralysis, primarily in devout believers.</li>
</ul></li>
<li><strong>The Harvest Moon Effect</strong>:
<ul>
<li>Death rate in Chinese American communities falls by 35% before the Harvest Moon Festival and rises by 35% after.</li>
<li>Primarily affects women 75 years and older, who hold ceremonial responsibilities.</li>
<li>Suggests the mind can postpone death to fulfill social obligations.</li>
</ul></li>
<li><strong>Passover Effect</strong>: Similar fluctuation in death rate observed among Jewish men around Passover.</li>
<li><strong>Birthday and Graduation Effects</strong>: Similar trends found around significant life events globally.</li>
<li><strong>Stanford Study on Metastatic Breast Cancer</strong>:
<ul>
<li>Support group experienced less pain and lived an average of 18 months longer.</li>
<li><strong>Possible Explanation</strong>: Reduced stress hormones (cortisol) may strengthen the immune system.</li>
</ul></li>
<li><strong>Mark Twain on the Power of Imagination</strong>:
<ul>
<li>Highlighted the inherent human capacity for the mind to influence the body, both positively and negatively.</li>
<li>Acknowledged the potential benefits of Christian Science despite its rejection of medical treatment.</li>
</ul></li>
</ul>
</section>
<section id="the-jfk-and-elvis-phenomena" class="level3">
<h3 class="anchored" data-anchor-id="the-jfk-and-elvis-phenomena">The JFK and Elvis Phenomena</h3>
<ul>
<li><strong>Post-Assassination Cures</strong>:
<ul>
<li>Americans reported contact with JFK’s ghost and miraculous cures at home shrines.</li>
<li><strong>Explanation</strong>: Kennedy’s perceived sacrifice and charisma led to his elevation to a god-like status.</li>
</ul></li>
<li><strong>Elvis Presley</strong>: Similar phenomenon of belief in the continued existence and power of Elvis Presley.</li>
<li><strong>Implication</strong>: If belief systems can arise spontaneously around historical figures, imagine the potential for manipulation through organized campaigns.</li>
</ul>
</section>
<section id="the-carlos-hoax-creation-and-execution" class="level3">
<h3 class="anchored" data-anchor-id="the-carlos-hoax-creation-and-execution">The Carlos Hoax: Creation and Execution</h3>
<ul>
<li><strong>Randi’s Proposal</strong>: Create a fake guru to expose media gullibility.</li>
<li><strong>Jose Luis Alvarez</strong>: Randy’s tenant, a performance sculptor, recruited for the role of Carlos.</li>
<li><strong>Training</strong>: Alvarez received intensive training, including mock TV appearances and press conferences.</li>
<li><strong>Radio Prompting</strong>: Randy used a hidden radio receiver to guide Alvarez’s responses.</li>
<li><strong>Faked Documentation</strong>: Supporting materials for Carlos’s background were fabricated.</li>
<li><strong>Media Attention Tactics</strong>: The curse, water throwing, and other stunts were orchestrated to attract media coverage.</li>
<li><strong>Sydney Opera House Event</strong>:
<ul>
<li>Many attendees were drawn by the media buzz.</li>
<li>Alvarez faked a near-death experience and pulse-stopping trick.</li>
<li>Carlos persona emerged and delivered a “spiritual” message.</li>
</ul></li>
<li><strong>60 Minutes Revelation</strong>: The hoax was exposed, revealing the ease with which the public and media can be deceived.</li>
</ul>
</section>
<section id="media-response-and-aftermath" class="level3">
<h3 class="anchored" data-anchor-id="media-response-and-aftermath">Media Response and Aftermath</h3>
<ul>
<li><strong>Media Outrage</strong>: Australian media felt betrayed by 60 Minutes’ exposé.</li>
<li><strong>Criticism of the Hoax</strong>: Some questioned the ethics and purpose of the deception.</li>
<li><strong>Defense of the Exposé</strong>: Supporters argued it highlighted the need for critical thinking and fact-checking.</li>
<li><strong>Alvarez and Randy’s Accomplishment</strong>: Demonstrated the vulnerability of belief systems and the ease of manipulating public opinion.</li>
<li><strong>Potential for Harm</strong>: A charismatic figure like Carlos could exploit public trust for more sinister purposes than selling crystals and tears.</li>
<li><strong>The Wizard of Oz Analogy</strong>: James Randi acts as a “Toto,” pulling back the curtain to reveal the deceptive mechanisms behind the “Great Oz” of pseudoscience and charismatic figures.</li>
<li><strong>Importance of Individual Skepticism</strong>: We cannot solely rely on others to expose deception; we must develop critical thinking skills ourselves.</li>
</ul>
</section>
<section id="the-persistence-of-bamboozles" class="level3">
<h3 class="anchored" data-anchor-id="the-persistence-of-bamboozles">The Persistence of Bamboozles</h3>
<ul>
<li><strong>Historical Lesson</strong>: Prolonged exposure to deception can lead to a resistance to evidence that contradicts the established belief.</li>
<li><strong>Examples</strong>:
<ul>
<li><strong>Séances</strong>: Spirits vanish when the lights are turned up, yet believers accept the excuse that they are shy.</li>
<li><strong>Observer Effect</strong>: Psychic abilities diminish or disappear in the presence of skeptics or conjurers.</li>
</ul></li>
<li><strong>Spirit Rapping</strong>:
<ul>
<li>19th-century hoax exposed by a former participant who confessed to cracking her big toe joint.</li>
<li><strong>Public Reaction</strong>: The confession was largely ignored or dismissed as coerced.</li>
</ul></li>
<li><strong>Crop Circles</strong>:
<ul>
<li>British hoaxers confessed and demonstrated their methods.</li>
<li><strong>Believers’ Response</strong>: Claimed that some crop circles might be hoaxes, but others were too complex to be human-made.</li>
<li><strong>Copycat Confessions</strong>: Similar confessions from other countries did not dissuade believers.</li>
</ul></li>
<li><strong>Alien Abduction Psychiatrist</strong>:
<ul>
<li>When a woman posing as an abductee reveals the hoax, the psychiatrist either denies it, claims she was truly abducted subconsciously, or accuses her of being crazy.</li>
</ul></li>
<li><strong>Horoscope Experiment</strong>:
<ul>
<li>A scientist sent the same horoscope (based on a serial killer) to 150 people.</li>
<li>94% found it accurate, demonstrating the power of suggestion and confirmation bias.</li>
</ul></li>
<li><strong>Techniques of Fortune Tellers</strong>:
<ul>
<li>Observation of body language, clothing, and responses to questions.</li>
<li><strong>Cold Reads</strong>: Statements that are vague and universally applicable, allowing anyone to find a grain of truth.</li>
<li><strong>Computer Networks</strong>: Professional psychics may share information about clients.</li>
</ul></li>
<li><strong>Repressed Memory Therapy</strong>:
<ul>
<li><strong>Broad and Vague Symptoms</strong>: Lists of “symptoms” of repressed childhood sexual abuse are so general that they apply to almost everyone.</li>
<li><strong>Example</strong>: Sleep disorders, overeating, sexual dysfunction, anxiety, and even lack of memory of abuse are cited as evidence.</li>
</ul></li>
<li><strong>Dysfunctional Families</strong>: Similar broad diagnostic criteria are used to identify “dysfunctional families.”</li>
<li><strong>Implications for Society</strong>: The same techniques used by charlatans can be employed in political, social, religious, and economic contexts to manipulate and exploit vulnerable populations.</li>
</ul>
</section>
<section id="conclusion-3" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-3">Conclusion</h3>
<ul>
<li><strong>The Carlos Hoax</strong>: Demonstrates the ease with which the public and media can be deceived, highlighting the importance of skepticism and critical thinking.</li>
<li><strong>The Placebo Effect</strong>: While faith healing may offer temporary relief for some conditions, it’s crucial to distinguish it from genuine cures for organic diseases.</li>
<li><strong>The Dangers of Uncritical Belief</strong>: Charismatic figures can exploit public trust for harmful purposes, emphasizing the need for vigilance and independent scrutiny.</li>
<li><strong>The Importance of Skepticism</strong>: Protecting ourselves from deception requires developing our own critical thinking skills and resisting the temptation to blindly accept appealing but unsubstantiated claims.</li>
<li><strong>The Persistence of Bamboozles</strong>: Even when confronted with strong evidence, people may cling to their beliefs, demonstrating the powerful psychological forces that maintain deception.</li>
</ul>
</section>
</section>
<section id="chapter-14-anti-science-notes" class="level2">
<h2 class="anchored" data-anchor-id="chapter-14-anti-science-notes">Chapter 14: Anti-Science Notes</h2>
<section id="introduction-the-allure-of-anti-science" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-allure-of-anti-science">Introduction: The Allure of Anti-Science</h3>
<ul>
<li><strong>Anti-science</strong>: A line of attack against science that claims it is subjective, arbitrary, or no more valid than other ways of knowing.</li>
<li><strong>Appeal of Anti-Science</strong>:
<ul>
<li><strong>Simplicity</strong>: Offers an escape from the perceived complexity and counterintuitive nature of science.</li>
<li><strong>Empowerment</strong>: Suggests individuals can create their own truth and reality.</li>
<li><strong>Validation</strong>: Provides a sense of legitimacy to beliefs that science may scorn or reject.</li>
<li><strong>Resistance to Change</strong>: Counters the rapid pace of scientific advancements and challenges to established beliefs.</li>
<li><strong>Social Critique</strong>: Questions the motives and potential dangers of science and scientists.</li>
</ul></li>
</ul>
</section>
<section id="the-case-of-edward-u.-condon-and-the-dangers-of-politicized-science" class="level3">
<h3 class="anchored" data-anchor-id="the-case-of-edward-u.-condon-and-the-dangers-of-politicized-science">The Case of Edward U. Condon and the Dangers of Politicized Science</h3>
<ul>
<li><strong>Edward U. Condon</strong>: A distinguished American physicist who faced accusations of disloyalty during the McCarthy era due to his involvement in quantum mechanics and UFO research.</li>
<li><strong>House Committee on Un-American Activities (HCUA)</strong>: A congressional committee that investigated suspected communist and subversive activities.</li>
<li><strong>Condon’s Accusation</strong>: Accused of being a revolutionary and a security risk because of his work in quantum mechanics.</li>
<li><strong>Condon’s Defense</strong>: Highlighted his belief in established scientific principles to demonstrate his non-revolutionary stance.</li>
<li><strong>Outcome</strong>: Condon’s security clearance was eventually restored, but the incident highlights the dangers of politicizing science and suppressing scientific inquiry based on ideology.</li>
</ul>
</section>
<section id="the-challenge-of-understanding-and-communicating-quantum-mechanics" class="level3">
<h3 class="anchored" data-anchor-id="the-challenge-of-understanding-and-communicating-quantum-mechanics">The Challenge of Understanding and Communicating Quantum Mechanics</h3>
<ul>
<li><strong>Quantum Mechanics</strong>: A branch of physics that deals with the behavior of matter and energy at the atomic and subatomic level.</li>
<li><strong>Complexity</strong>: Requires extensive mathematical background (arithmetic, geometry, calculus, etc.) to fully grasp.</li>
<li><strong>Counterintuitive Nature</strong>: Defies common sense and intuitive understanding.</li>
<li><strong>Popularization Challenges</strong>: Difficult to explain to a general audience without the necessary mathematical foundation.</li>
<li><strong>Verification through Experiments</strong>: Despite its complexity, quantum mechanics can be verified through experiments that confirm its predictions.</li>
</ul>
</section>
<section id="science-vs.-shamanism-verification-and-openness" class="level3">
<h3 class="anchored" data-anchor-id="science-vs.-shamanism-verification-and-openness">Science vs.&nbsp;Shamanism: Verification and Openness</h3>
<ul>
<li><strong>Shamanism</strong>: A practice that involves a practitioner reaching altered states of consciousness in order to interact with a spirit world and channel these transcendental energies into this world.</li>
<li><strong>Claim of Efficacy</strong>: Shamans often claim their practices work because they can cure illnesses.</li>
<li><strong>Verification through Testing</strong>: Scientific methods can be used to test the efficacy of shamanistic cures (e.g., comparing them to placebos).</li>
<li><strong>Openness to Scrutiny</strong>: Science invites scrutiny and encourages others to study its methods and suggest improvements.</li>
<li><strong>Authoritarianism in Non-Rational Systems</strong>: Non-rational systems often view questioning their beliefs as a sign of disloyalty or lack of faith.</li>
</ul>
</section>
<section id="folk-knowledge-value-and-limitations" class="level3">
<h3 class="anchored" data-anchor-id="folk-knowledge-value-and-limitations">Folk Knowledge: Value and Limitations</h3>
<ul>
<li><strong>Folk Knowledge</strong>: Traditional beliefs and practices passed down through generations within a culture.</li>
<li><strong>Explanatory and Mnemonic Value</strong>: Can encode information about the environment and serve as psychological projective tests.</li>
<li><strong>Ethnopharmacology</strong>: The study of traditional medicine derived from plants and other natural sources.</li>
<li><strong>Value of Ethnopharmacology</strong>: Holds valuable knowledge about medicinal properties of plants discovered through trial and error over generations.</li>
<li><strong>Limitations of Folk Knowledge</strong>: While valuable in certain contexts (e.g., ethnomedicine, local weather prediction), it may not be applicable to other areas (e.g., astrophysics).</li>
</ul>
</section>
<section id="the-subjectivity-of-history-and-the-pursuit-of-objectivity" class="level3">
<h3 class="anchored" data-anchor-id="the-subjectivity-of-history-and-the-pursuit-of-objectivity">The Subjectivity of History and the Pursuit of Objectivity</h3>
<ul>
<li><strong>Historical Bias</strong>: History is often written by the victors and can be biased, reflecting nationalistic or ideological perspectives.</li>
<li><strong>Examples of Historical Bias</strong>:
<ul>
<li>English vs.&nbsp;French historical accounts.</li>
<li>U.S. historical treatment of Native Americans.</li>
<li>Japanese accounts of World War II.</li>
<li>Nazi and Soviet historical revisions.</li>
</ul></li>
<li><strong>The Illusion of History</strong>: Some argue that historical bias is so pervasive that there is no possibility of reconstructing actual events.</li>
<li><strong>The Pursuit of Historical Objectivity</strong>: Despite challenges, historians strive to reconstruct events accurately by examining diverse sources, acknowledging biases, and engaging in critical analysis.</li>
</ul>
</section>
<section id="sciences-advantage-experimentation-and-error-correction" class="level3">
<h3 class="anchored" data-anchor-id="sciences-advantage-experimentation-and-error-correction">Science’s Advantage: Experimentation and Error Correction</h3>
<ul>
<li><strong>Bias in Science</strong>: Scientists are also subject to biases, prejudices, and human limitations.</li>
<li><strong>Science’s Error-Correction Machinery</strong>:
<ul>
<li><strong>Experimentation</strong>: Allows scientists to test hypotheses and verify claims through repeatable experiments.</li>
<li><strong>Peer Review</strong>: Subjects research to scrutiny by other experts in the field.</li>
<li><strong>Open Debate</strong>: Encourages discussion and challenges to established ideas.</li>
<li><strong>Self-Correction</strong>: Science is a self-correcting process where errors are identified and corrected over time.</li>
</ul></li>
<li><strong>Advantages Over History</strong>: Science’s ability to conduct experiments provides a significant advantage in the pursuit of objective truth compared to history, where “rerunning” events is impossible.</li>
</ul>
</section>
<section id="addressing-the-claims-of-anti-science" class="level3">
<h3 class="anchored" data-anchor-id="addressing-the-claims-of-anti-science">Addressing the Claims of Anti-Science</h3>
<ul>
<li><strong>Claim: Science is Arbitrary and Irrational</strong>:
<ul>
<li><strong>Ethan Allen’s Argument</strong>: Points out the self-contradictory nature of arguing against reason.</li>
<li><strong>Science’s Foundation in Reason</strong>: Science relies on logic, evidence, and rational inquiry.</li>
</ul></li>
<li><strong>Claim: Science is Subjective</strong>:
<ul>
<li><strong>The Role of Bias</strong>: While scientists have biases, the scientific method aims to minimize their influence through experimentation and peer review.</li>
<li><strong>Objectivity in Mathematics</strong>: Mathematics, which underpins much of science, is universally true and independent of cultural biases.</li>
<li><strong>Science’s Position on the Subjectivity Continuum</strong>: Science lies closer to mathematics than to subjective fields like art or cultural preferences.</li>
</ul></li>
</ul>
</section>
<section id="the-human-element-in-science-biases-mistakes-and-progress" class="level3">
<h3 class="anchored" data-anchor-id="the-human-element-in-science-biases-mistakes-and-progress">The Human Element in Science: Biases, Mistakes, and Progress</h3>
<ul>
<li><strong>Scientists as Humans</strong>: Scientists are influenced by their culture, make mistakes, and can be motivated by personal ambitions.</li>
<li><strong>Harold C. Urey’s “Fastest Gun in the West”</strong>: Describes how younger scientists challenge established figures, contributing to scientific progress even through competition.</li>
<li><strong>Fred Hoyle’s Provocative Style</strong>: Demonstrates how even incorrect or outrageous ideas can stimulate research and advance knowledge.</li>
<li><strong>The Value of Mistakes</strong>: Scientists learn from mistakes and use them to refine their understanding.</li>
<li><strong>Examples of Scientific Mistakes</strong>: Even prominent scientists like Kepler, Newton, Darwin, Mendel, and Einstein made errors.</li>
<li><strong>Teamwork in Science</strong>: Science is a collaborative enterprise where errors are identified and corrected through the collective efforts of the scientific community.</li>
</ul>
</section>
<section id="examples-of-sagans-mistakes" class="level3">
<h3 class="anchored" data-anchor-id="examples-of-sagans-mistakes">Examples of Sagan’s Mistakes</h3>
<ul>
<li><strong>Venus</strong>:
<ul>
<li>Initially overestimated atmospheric pressure.</li>
<li>Incorrectly assumed clouds were primarily water.</li>
</ul></li>
<li><strong>Mars</strong>: Mistakenly believed in the presence of plate tectonics.</li>
<li><strong>Titan</strong>: Misattributed the cause of high infrared temperatures.</li>
<li><strong>Kuwaiti Oil Fires</strong>: Overestimated the potential impact of smoke on South Asian agriculture.</li>
<li><strong>Learning from Mistakes</strong>: These examples demonstrate how scientific understanding evolves as new data becomes available.</li>
</ul>
</section>
<section id="postmodernist-criticisms-of-science" class="level3">
<h3 class="anchored" data-anchor-id="postmodernist-criticisms-of-science">Postmodernist Criticisms of Science</h3>
<ul>
<li><strong>Postmodernism</strong>: A philosophical movement that questions the foundations of knowledge and truth claims.</li>
<li><strong>Criticisms of Kepler and Darwin</strong>: Postmodernists have criticized these scientists for being influenced by their religious or social biases.</li>
<li><strong>Irrelevance of Personal Biases</strong>: The validity of scientific findings is not dependent on the personal biases of the scientists who made them, as long as their work is rigorously tested and verified.</li>
</ul>
</section>
<section id="science-and-censorship-the-dangers-of-suppressing-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="science-and-censorship-the-dangers-of-suppressing-knowledge">Science and Censorship: The Dangers of Suppressing Knowledge</h3>
<ul>
<li><strong>Misuse of Darwinian Ideas</strong>: Social Darwinism and racist ideologies have misused Darwin’s theory to justify harmful practices.</li>
<li><strong>Separating Ideas from Their Misuse</strong>: The validity of scientific ideas should be judged independently of how they have been misused or misinterpreted.</li>
<li><strong>The Dangers of Censorship</strong>: Restricting access to knowledge hinders scientific progress and can lead to uninformed decision-making.</li>
</ul>
</section>
<section id="science-vs.-ideology-the-lysenko-affair" class="level3">
<h3 class="anchored" data-anchor-id="science-vs.-ideology-the-lysenko-affair">Science vs.&nbsp;Ideology: The Lysenko Affair</h3>
<ul>
<li><strong>Lysenkoism</strong>: A pseudoscientific movement in the Soviet Union that rejected Mendelian genetics in favor of politically aligned theories.</li>
<li><strong>Trofim Lysenko</strong>: A Soviet biologist who gained Stalin’s support by promoting his ideologically compatible but scientifically flawed ideas.</li>
<li><strong>Herman J. Mueller</strong>: An American geneticist who initially supported the Soviet Union but later criticized Lysenkoism and its suppression of legitimate genetics.</li>
<li><strong>Consequences of Lysenkoism</strong>: Led to the persecution of legitimate scientists, the decline of Soviet agriculture, and a setback for Soviet biology.</li>
<li><strong>Lessons from Lysenkoism</strong>: Highlights the dangers of allowing ideology to dictate scientific research and suppress dissenting views.</li>
</ul>
</section>
<section id="the-persistence-of-pseudoscience-in-the-united-states" class="level3">
<h3 class="anchored" data-anchor-id="the-persistence-of-pseudoscience-in-the-united-states">The Persistence of Pseudoscience in the United States</h3>
<ul>
<li><strong>American Pragmatism and Pseudoscience</strong>: Despite a reputation for practicality, pseudoscientific beliefs have persisted in the United States.</li>
<li><strong>Examples</strong>:
<ul>
<li><strong>Racial pseudoscience</strong>.</li>
<li><strong>Creationism</strong>: An attempt to prevent the teaching of evolution in schools.</li>
</ul></li>
<li><strong>The Importance of Scientific Literacy</strong>: Combating pseudoscience requires promoting scientific understanding and critical thinking.</li>
</ul>
</section>
<section id="the-distinguishing-features-of-science" class="level3">
<h3 class="anchored" data-anchor-id="the-distinguishing-features-of-science">The Distinguishing Features of Science</h3>
<ul>
<li><strong>Testable Hypotheses</strong>: Science focuses on developing hypotheses that can be tested through observation and experimentation.</li>
<li><strong>Definitive Experiments</strong>: Seeks to design experiments that can confirm or deny hypotheses.</li>
<li><strong>Substantive Debate</strong>: Encourages rigorous debate and discussion among scientists.</li>
<li><strong>Abandonment of Inadequate Ideas</strong>: Is willing to discard ideas that are not supported by evidence.</li>
<li><strong>The Importance of Evidence and Critical Thinking</strong>: Science’s commitment to evidence, experimentation, and self-correction makes it a powerful tool for understanding the natural world.</li>
</ul>
</section>
<section id="conclusion-the-value-of-science-in-a-world-of-uncertainty" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-the-value-of-science-in-a-world-of-uncertainty">Conclusion: The Value of Science in a World of Uncertainty</h3>
<ul>
<li><strong>Science’s Strengths</strong>:
<ul>
<li><strong>Self-Awareness</strong>: Acknowledges its limitations and biases.</li>
<li><strong>Pursuit of Evidence</strong>: Actively seeks new data and refines its understanding.</li>
<li><strong>Openness to Experimentation</strong>: Employs controlled experiments to test hypotheses.</li>
<li><strong>Respect for Evidence</strong>: Bases its conclusions on evidence rather than ideology or prejudice.</li>
</ul></li>
<li><strong>Science as a Bulwark Against Ideological Manipulation</strong>: These characteristics enable science to withstand ideological pressures and provide a reliable path towards truth.</li>
<li><strong>The Importance of Supporting Science</strong>: Fostering a culture that values scientific inquiry, critical thinking, and evidence-based decision-making is crucial for navigating the complexities of the modern world.</li>
</ul>
</section>
</section>
<section id="chapter-15-newtons-sleep" class="level2">
<h2 class="anchored" data-anchor-id="chapter-15-newtons-sleep">Chapter 15: Newton’s Sleep</h2>
<section id="introduction-newtons-sleep-and-criticisms-of-science" class="level3">
<h3 class="anchored" data-anchor-id="introduction-newtons-sleep-and-criticisms-of-science">Introduction: Newton’s Sleep and Criticisms of Science</h3>
<ul>
<li><strong>Epigraph</strong>: “May God keep us from single vision and Newton’s sleep.” - William Blake (1802)</li>
<li><strong>Newton’s Sleep</strong>: Refers to a narrow, limited perspective attributed to Isaac Newton’s physics and his incomplete separation from mysticism, according to Blake.</li>
<li><strong>Blake’s Critique</strong>:
<ul>
<li>Found the idea of atoms and particles of light amusing.</li>
<li>Viewed Newton’s influence as detrimental (“satanic”).</li>
</ul></li>
<li><strong>Common Critique of Science</strong>:
<ul>
<li><strong>Too Narrow</strong>: Excludes phenomena deemed “uplifting,” “playful,” “mystical,” or “wondrous” due to a lack of physical evidence.</li>
<li><strong>Examples of Excluded Phenomena</strong>: Spirits, souls, angels, devils, Dharma bodies of the Buddha, and alien visitors.</li>
</ul></li>
<li><strong>Charles Tartt’s Perspective</strong>:
<ul>
<li>American psychologist who believes in extrasensory perception (ESP).</li>
<li>Attributes the rise of New Age ideas to a reaction against <strong>scientism</strong>.</li>
<li><strong>Scientism Definition</strong>: “The philosophical belief, masquerading as objective science and held with the emotional tenacity of born-again fundamentalism, that we are nothing but material beings.”</li>
</ul></li>
<li><strong>Caution Against Uncritical Acceptance</strong>:
<ul>
<li>Acknowledges that not all spiritual, psychic, or New Age ideas are factually accurate.</li>
<li>Recognizes the legitimacy of human experiences that appear psychic or spiritual.</li>
</ul></li>
</ul>
</section>
<section id="the-material-vs.-non-material-debate" class="level3">
<h3 class="anchored" data-anchor-id="the-material-vs.-non-material-debate">The Material vs.&nbsp;Non-Material Debate</h3>
<ul>
<li><strong>Question</strong>: Why should psychic experiences challenge the idea that humans are solely composed of matter?</li>
<li><strong>Evidence for Matter and Energy</strong>: Abundant and readily observable in the everyday world.</li>
<li><strong>Evidence for Non-Material Entities (Spirit/Soul)</strong>: Highly doubtful.</li>
<li><strong>Human Internal Life</strong>: Rich and complex, but potentially explainable by the complexity of matter.</li>
<li><strong>Limitations of Current Understanding</strong>:
<ul>
<li>Acknowledges that human consciousness is not fully understood in terms of neurobiology.</li>
<li>Scientists recognize human limitations.</li>
</ul></li>
<li><strong>Past “Miracles” Explained</strong>: Many phenomena once considered miraculous are now understood through physics and chemistry.</li>
<li><strong>Future Understanding</strong>: Mysteries of today may be solved by future generations.</li>
<li><strong>Example</strong>:
<ul>
<li>Inability to explain altered states of consciousness through brain chemistry does not imply a spirit world.</li>
<li>Similar to how a sunflower following the sun was not considered a miracle once phototropism and plant hormones were understood.</li>
</ul></li>
</ul>
</section>
<section id="science-dehumanization-and-the-question-of-fairness" class="level3">
<h3 class="anchored" data-anchor-id="science-dehumanization-and-the-question-of-fairness">Science, Dehumanization, and the Question of Fairness</h3>
<ul>
<li><strong>Question</strong>: If the world doesn’t meet our wishes, is science to blame, or those who impose their wishes on it?</li>
<li><strong>Emotions in Humans and Animals</strong>:
<ul>
<li>All mammals, and many other animals, experience a range of emotions (fear, lust, hope, pain, love, hate, etc.).</li>
<li>Humans may brood about the future more, but emotions are not unique to our species.</li>
</ul></li>
<li><strong>Science as a Uniquely Human Endeavor</strong>: No other species engages in science to the extent that humans do.</li>
<li><strong>Counterargument to Dehumanization Claim</strong>: How can science be dehumanizing if it’s a uniquely human activity?</li>
<li><strong>The Unfairness of Life</strong>:
<ul>
<li>Highlights the disparity and suffering inherent in human existence (starvation, opulence, abuse, deformity, death).</li>
<li><strong>Question of Justice</strong>: Where is the fairness in a seemingly meaningless and finite existence?</li>
</ul></li>
<li><strong>Desire for a Second Chance or Afterlife</strong>:
<ul>
<li>Explores the human longing for a system of reward and punishment based on actions in this life.</li>
<li><strong>Hypothetical Scenarios</strong>:
<ul>
<li>Reincarnation with circumstances reflecting past life performance.</li>
<li>Post-mortem judgment leading to eternal reward for the virtuous.</li>
</ul></li>
</ul></li>
<li><strong>Social Implications of Afterlife Beliefs</strong>:
<ul>
<li>Societies promoting contentment with the present in anticipation of an afterlife are less prone to revolution.</li>
<li>Fear of death, while evolutionarily adaptive, is maladaptive in warfare.</li>
<li>Cultures promising afterlife rewards for heroes or obedient individuals may gain a competitive advantage.</li>
</ul></li>
</ul>
</section>
<section id="the-appeal-and-evidence-for-an-afterlife" class="level3">
<h3 class="anchored" data-anchor-id="the-appeal-and-evidence-for-an-afterlife">The Appeal and Evidence for an Afterlife</h3>
<ul>
<li><strong>The Marketability of Afterlife Beliefs</strong>:
<ul>
<li>The concept of a surviving spiritual component and an afterlife is easily promoted by religions and nations.</li>
<li>Widespread skepticism on this issue is unlikely, as people are inclined to believe, even with minimal evidence.</li>
</ul></li>
<li><strong>Brain and Personality</strong>:
<ul>
<li><strong>Evidence for Material Basis of Personality</strong>: Brain lesions can cause memory loss or personality changes, and altered brain chemistry can lead to delusions or hallucinations.</li>
<li><strong>Evasion of Evidence</strong>: Despite compelling evidence pointing to the brain as the seat of personality and soul, it’s easy to ignore or dismiss it.</li>
</ul></li>
<li><strong>Influence of Social Institutions</strong>:
<ul>
<li>Powerful institutions that insist on an afterlife suppress dissent, leading to few who openly question the belief.</li>
</ul></li>
<li><strong>Alternative Views on Reality</strong>:
<ul>
<li>Some Eastern, Christian, and New Age religions, along with Platonism, consider the world and suffering as illusions, with only the mind being real.</li>
</ul></li>
<li><strong>Scientific View of the Mind</strong>: The mind is viewed as a product of brain activity, specifically the interactions of neural connections.</li>
<li><strong>Academic Relativism</strong>: A growing opinion (originating in the 1960s) holds that all views are equally valid, potentially as a response to scientists’ claims of subjectivity in fields like literary criticism, religion, aesthetics, etc.</li>
</ul>
</section>
<section id="the-desire-for-unlimited-possibilities-and-solipsism" class="level3">
<h3 class="anchored" data-anchor-id="the-desire-for-unlimited-possibilities-and-solipsism">The Desire for Unlimited Possibilities and Solipsism</h3>
<ul>
<li><strong>The Appeal of Unlimited Possibilities</strong>: Some individuals desire a reality unconstrained by scientific limitations, feeling that science restricts imagination and human needs.</li>
<li><strong>New Age Solipsism</strong>:
<ul>
<li>Certain New Age figures, including Shirley MacLaine, embrace <strong>solipsism</strong>, the belief that only their own thoughts are real.</li>
<li><strong>“I am God” Assertion</strong>: This viewpoint implies that individuals create their own reality.</li>
</ul></li>
<li><strong>Shirley MacLaine’s Perspective</strong>:
<ul>
<li>Believes in creating one’s own reality.</li>
<li>Questions the authority of scientists to dismiss personal experiences (e.g., dreaming of deceased loved ones, visions of floating in space).</li>
</ul></li>
<li><strong>Conflict with Scientific Findings</strong>:
<ul>
<li>If a religion claims a young Earth based on divine authority, scientific claims of a billion-year-old universe are seen as offensive and impious.</li>
</ul></li>
<li><strong>Challenging Scientific Limitations</strong>:
<ul>
<li><strong>Examples</strong>:
<ul>
<li>Questioning the speed of light as an absolute limit.</li>
<li>Challenging the Heisenberg Uncertainty Principle (simultaneous measurement of position and momentum).</li>
<li>Seeking to build perpetual motion machines that violate laws of thermodynamics.</li>
</ul></li>
<li><strong>Underlying Belief</strong>: A belief in limitless human ingenuity.</li>
</ul></li>
</ul>
</section>
<section id="the-laws-of-nature-as-constraints" class="level3">
<h3 class="anchored" data-anchor-id="the-laws-of-nature-as-constraints">The Laws of Nature as Constraints</h3>
<ul>
<li><strong>Nature’s Constraints</strong>: Nature itself imposes limitations, and the laws of nature define these prohibited actions.</li>
<li><strong>Pseudoscience and Superstition</strong>:
<ul>
<li>Typically disregard limitations imposed by nature.</li>
<li>Operate under the assumption that all things are possible.</li>
<li>Continue to promise limitless possibilities despite repeated disappointments.</li>
</ul></li>
<li><strong>Critique of Reductionism</strong>:
<ul>
<li>Science is accused of being overly simplistic and <strong>reductionist</strong>.</li>
<li><strong>Reductionism</strong>: The belief that complex phenomena can be ultimately explained by a few simple, fundamental laws.</li>
<li><strong>Concerns</strong>: Reductionism may not adequately respect the complexity of the universe and might be perceived as arrogant and intellectually lazy.</li>
</ul></li>
<li><strong>Newton’s “Clockwork Universe”</strong>:
<ul>
<li>Critics often associate Newton with a mechanistic view of the universe, like a clock.</li>
<li><strong>Examples</strong>: Planetary orbits, pendulum swings, and spring oscillations described by similar differential equations.</li>
</ul></li>
</ul>
</section>
<section id="the-success-of-reductionism-in-physics-and-astronomy" class="level3">
<h3 class="anchored" data-anchor-id="the-success-of-reductionism-in-physics-and-astronomy">The Success of Reductionism in Physics and Astronomy</h3>
<ul>
<li><strong>Modern View of Newton</strong>:
<ul>
<li>We tend to view Newton’s perspective as limited compared to our own.</li>
<li><strong>However</strong>: Within reasonable boundaries, the same equations describing clockwork do accurately describe the motions of celestial objects.</li>
</ul></li>
<li><strong>Significance of Mathematical Parallelism</strong>: The applicability of similar mathematics to both planets and clocks is a profound discovery, not a trivial one.</li>
<li><strong>Limitations of the Clockwork Model</strong>:
<ul>
<li>No physical gears in the solar system, and components don’t touch.</li>
<li>Planetary motions are generally more complex.</li>
<li><strong>Chaotic Motion</strong>:
<ul>
<li>The model breaks down in specific situations (e.g., long-term gravitational influences, excessive pendulum displacement).</li>
<li>Similar chaotic behavior can occur in both planetary systems and pendulum clocks.</li>
</ul></li>
</ul></li>
<li><strong>Accuracy of the Solar System</strong>: The solar system functions with greater precision than any mechanical clock, and the concept of timekeeping originates from observing celestial motions.</li>
<li><strong>The Universe’s Inherent Order</strong>: The fact that similar mathematics applies to planets and clocks is not imposed by us; it’s an inherent property of the universe.</li>
<li><strong>Justification of Reductionism</strong>: If this is reductionism, it’s a valid approach given its success.</li>
</ul>
</section>
<section id="reductionism-in-biology-and-the-vital-force" class="level3">
<h3 class="anchored" data-anchor-id="reductionism-in-biology-and-the-vital-force">Reductionism in Biology and the “Vital Force”</h3>
<ul>
<li><strong>Historical Belief in a “Vital Force”</strong>:
<ul>
<li>Until the mid-20th century, many theologians, philosophers, and biologists believed that life could not be reduced to physics and chemistry.</li>
<li><strong>Vital Force Concepts</strong>: Entelechy, Tao, or a life-animating principle.</li>
<li><strong>Rationale</strong>: The complexity and elegance of living things seemed inexplicable by mere atoms and molecules.</li>
</ul></li>
<li><strong>Religious Explanations</strong>:
<ul>
<li>Religions often attributed the origin of life to a divine act (e.g., God or gods breathing life into inanimate matter).</li>
</ul></li>
<li><strong>Joseph Priestley’s Experiment</strong>:
<ul>
<li>Attempted to measure the vital force by weighing a mouse before and after death.</li>
<li><strong>Result</strong>: No weight change, suggesting the vital force (if it exists) has no mass.</li>
</ul></li>
<li><strong>Reservations of Biological Materialists</strong>:
<ul>
<li>Even those who believed in the material basis of life considered the possibility of undiscovered scientific principles needed to understand it.</li>
</ul></li>
<li><strong>J.S. Haldane’s Concerns</strong>:
<ul>
<li>Questioned the ability of mechanistic theories to explain phenomena like recovery from disease and reproduction.</li>
<li>Highlighted the complexity of these processes and our inability to understand them at the time.</li>
</ul></li>
<li><strong>Advances in Molecular Biology</strong>:
<ul>
<li><strong>DNA and the Genetic Code</strong>: The elucidation of DNA’s structure and the genetic code in the mid-20th century revolutionized biology.</li>
<li><strong>Initial Resistance</strong>: Biologists studying whole organisms accused molecular biologists of reductionism, believing DNA alone could not explain complex life.</li>
</ul></li>
<li><strong>Universality of the Genetic Code</strong>: All life on Earth uses nucleic acids to encode genetic information and employs the same fundamental codebook.</li>
<li><strong>Reading the Code</strong>: We have learned to decipher the genetic code.</li>
<li><strong>Molecular Building Blocks</strong>: A limited set of organic molecules is used repeatedly for diverse biological functions.</li>
<li><strong>Genetic Basis of Diseases</strong>: Genes linked to diseases like cystic fibrosis and breast cancer have been identified.</li>
<li><strong>Genome Sequencing</strong>:
<ul>
<li>The complete genome of the bacterium <em>Haemophilus influenzae</em> has been sequenced, detailing the functions of its genes.</li>
<li>Genomes of other organisms, including the roundworm <em>Caenorhabditis elegans</em>, are being mapped.</li>
<li><strong>Human Genome Project</strong>: Efforts are underway to sequence the entire human genome.</li>
</ul></li>
<li><strong>Establishing Continuity</strong>: The connection between atomic physics, molecular chemistry, reproduction, and heredity is now established, without needing to invoke new scientific principles.</li>
<li><strong>Power of Simple Facts</strong>: A small set of simple facts can explain the vast complexity and diversity of life.</li>
<li><strong>Individuality Within Reductionism</strong>: Molecular genetics also reveals the unique characteristics of each organism.</li>
</ul>
</section>
<section id="reductionism-in-physics-and-chemistry-unification-and-universality" class="level3">
<h3 class="anchored" data-anchor-id="reductionism-in-physics-and-chemistry-unification-and-universality">Reductionism in Physics and Chemistry: Unification and Universality</h3>
<ul>
<li><strong>Stronger Foundation in Physics and Chemistry</strong>: Reductionism is even more firmly established in these fields.</li>
<li><strong>Unification of Forces</strong>:
<ul>
<li>Electricity, magnetism, light, and relativity have been unified into a single framework.</li>
</ul></li>
<li><strong>Predictive Power of Simple Laws</strong>: A few simple laws can explain and accurately predict a wide range of phenomena on Earth and throughout the universe.</li>
<li><strong>Langdon Gilkey’s Critique</strong>:
<ul>
<li>The theologian argued that the universality of laws of nature is a preconception imposed by scientists.</li>
<li>He advocated for other forms of knowledge as valid as science.</li>
</ul></li>
<li><strong>Observed Order of the Universe</strong>:
<ul>
<li>The order of the universe is not an assumption but an observed fact.</li>
<li><strong>Examples</strong>:
<ul>
<li>Light from distant quasars is detected because the laws of electromagnetism are consistent across vast distances.</li>
<li>Quasar spectra are recognizable because the same chemical elements and quantum mechanics apply throughout the universe.</li>
<li>Galaxy motions follow Newtonian gravity.</li>
<li>Gravitational lenses and binary pulsars demonstrate general relativity in deep space.</li>
</ul></li>
</ul></li>
<li><strong>Potential for a Different Universe</strong>: We could have existed in a universe with varying laws, but the evidence shows otherwise.</li>
<li><strong>Reverence and Awe</strong>: The observed order elicits feelings of awe and reverence.</li>
<li><strong>Alternative Universes</strong>:
<ul>
<li>We could have inhabited a universe too complex to understand, with laws varying across locations (e.g., Earth vs.&nbsp;Mars vs.&nbsp;distant quasars).</li>
<li>But evidence contradicts this possibility.</li>
</ul></li>
<li><strong>Benefits of a Reducible Universe</strong>: Our ability to comprehend the world is facilitated by the fact that much of it can be reduced to simple laws.</li>
<li><strong>Potential Limitations of Reductionism</strong>:
<ul>
<li>It’s possible that some aspects of the universe may not be reducible.</li>
<li>However, given past successes, it’s unwise to dismiss reductionism.</li>
</ul></li>
<li><strong>Triumph of Science</strong>: Reductionism is a major achievement of science, and its findings can be compatible with many religions, though not proving their validity.</li>
</ul>
</section>
<section id="reductionism-and-the-creator" class="level3">
<h3 class="anchored" data-anchor-id="reductionism-and-the-creator">Reductionism and the Creator</h3>
<ul>
<li><strong>Question</strong>: Why should simple laws explain so much and hold true throughout the universe?</li>
<li><strong>Possible Explanation</strong>: This could be expected from a creator of the universe.</li>
<li><strong>Questioning Opposition to Reductionism</strong>: Why would some religious individuals oppose reductionism, except perhaps due to a misplaced fondness for mysticism?</li>
</ul>
</section>
<section id="reconciliation-of-religion-and-science-historical-and-ongoing-efforts" class="level3">
<h3 class="anchored" data-anchor-id="reconciliation-of-religion-and-science-historical-and-ongoing-efforts">Reconciliation of Religion and Science: Historical and Ongoing Efforts</h3>
<ul>
<li><strong>Historical Attempts</strong>: Efforts to reconcile religion and science have been ongoing for centuries, especially among those who don’t insist on literal interpretations of religious texts.</li>
<li><strong>Thomas Aquinas’s Summa Theologica</strong>:
<ul>
<li>Aimed to reconcile 631 questions between Christian and classical (primarily Aristotelian) sources.</li>
<li><strong>Approach</strong>: Often relied on common sense and the natural world (science as an error-correcting tool).</li>
<li><strong>Outcome</strong>: While claiming to reconcile all issues, ultimately prioritized faith over reason when conflicts arose.</li>
</ul></li>
<li><strong>Similar Efforts in Other Traditions</strong>: Reconciliation attempts are also found in Talmudic and post-Talmudic Jewish literature and medieval Islamic philosophy.</li>
</ul>
</section>
<section id="scientific-testing-of-religious-tenets" class="level3">
<h3 class="anchored" data-anchor-id="scientific-testing-of-religious-tenets">Scientific Testing of Religious Tenets</h3>
<ul>
<li><strong>Testability of Religious Claims</strong>:
<ul>
<li>Some core religious beliefs can be subjected to scientific scrutiny.</li>
<li>This makes some religious authorities and believers wary of science.</li>
</ul></li>
<li><strong>Examples of Testable Claims</strong>:
<ul>
<li><strong>The Eucharist</strong>: Is it literally the flesh of Jesus Christ or just a wafer?</li>
<li><strong>Human Sacrifice</strong>: Will the world end without human sacrifices to appease gods?</li>
<li><strong>Circumcision</strong>: Do uncircumcised Jewish men fare worse than circumcised ones?</li>
<li><strong>Extraterrestrial Life</strong>: Are there humans on other planets (Latter-day Saints belief)?</li>
<li><strong>Racial Origins</strong>: Were whites created from blacks by a mad scientist (Nation of Islam belief)?</li>
<li><strong>Hindu Rituals</strong>: Will the sun fail to rise if a specific rite is omitted?</li>
</ul></li>
<li><strong>Understanding Prayer Through Cross-Cultural Analysis</strong>: Examining prayer in unfamiliar religions can shed light on its origins.</li>
<li><strong>Example of Babylonian Prayer</strong>:
<ul>
<li>A cuneiform inscription on a cylinder seal pleads with the goddess Ninlil to intercede with the god Enlil.</li>
<li><strong>Question</strong>: Was this prayer directed towards fictional deities, products of the individual’s imagination? If so, what does this imply about prayers in other cultures?</li>
</ul></li>
<li><strong>Effectiveness of Prayer</strong>:
<ul>
<li><strong>Intercessory Prayer</strong>: Prayers requesting divine intervention in human affairs or natural events raise questions about God’s awareness and limitations.</li>
<li><strong>Example</strong>: A bishop praying for an end to a drought implies limitations on God’s omnipotence and omniscience.</li>
<li><strong>Collective Prayer</strong>: Does the number of people praying influence God’s likelihood to intervene?</li>
<li><strong>Example</strong>: A request to pray for the destruction of a Planned Parenthood clinic raises ethical and theological questions.</li>
</ul></li>
<li><strong>Prayer and Longevity</strong>:
<ul>
<li><strong>Francis Galton’s Analysis</strong>: Examined the lifespans of British monarchs, who were the subject of daily prayers for their well-being.</li>
<li><strong>Findings</strong>: Monarchs did not live longer than other wealthy individuals, contradicting the expected effect of widespread prayer.</li>
<li><strong>Other Examples</strong>: Collective wishes for Mao Zedong’s longevity and prayers for pharaohs’ eternal life also failed.</li>
</ul></li>
<li><strong>Religious Claims and Scientific Inquiry</strong>:
<ul>
<li>By making testable claims, religions enter the realm of science, even if unintentionally.</li>
<li>Religions can no longer make unchallenged assertions about reality if they operate within secular societies and cannot enforce belief.</li>
</ul></li>
</ul>
</section>
<section id="reactions-to-scientific-challenges-and-the-importance-of-truth" class="level3">
<h3 class="anchored" data-anchor-id="reactions-to-scientific-challenges-and-the-importance-of-truth">Reactions to Scientific Challenges and the Importance of Truth</h3>
<ul>
<li><strong>Negative Reactions</strong>: Some religious adherents react with anger to scientific challenges and may threaten skeptics.</li>
<li><strong>William Blake’s Warning</strong>: “He who shall teach the child to doubt the rotting grave shall ne’er get out. He who respects the infant’s faith triumphs over hell and death.” - <em>Auguries of Innocence</em></li>
<li><strong>Compatibility of Religion and Science</strong>:
<ul>
<li>Many religions focused on positive values (reverence, ethics, community, etc.) are not threatened but potentially enhanced by scientific findings.</li>
<li>There’s no inherent conflict between science and religion.</li>
</ul></li>
<li><strong>Shared Roles</strong>: Religion and science can play complementary roles, and each benefits from the other.</li>
<li><strong>Christian Tradition of Debate and Doubt</strong>: Open debate and questioning of established beliefs are part of the Christian tradition, dating back to John Milton’s <em>Areopagitica</em>.</li>
<li><strong>Mainstream vs.&nbsp;Fundamentalist Religions</strong>:
<ul>
<li>Some mainstream Christian and Jewish denominations embrace humility, self-criticism, and reasoned inquiry, aligning with the scientific spirit.</li>
<li><strong>Fundamentalist Sects</strong>: Tend to hold onto disprovable claims and thus feel threatened by science.</li>
</ul></li>
<li><strong>Opportunities for Renewal and Revision</strong>: The diversity within religious traditions allows for adaptation and reinterpretation, particularly when sacred texts are viewed metaphorically or allegorically.</li>
<li><strong>Acknowledging Past Errors</strong>:
<ul>
<li>The Roman Catholic Church’s 1992 admission of Galileo’s correctness regarding the Earth’s revolution around the Sun is an example of acknowledging past errors.</li>
</ul></li>
<li><strong>Modern Religious Acceptance of Science</strong>:
<ul>
<li>Modern Roman Catholicism generally accepts the Big Bang, the age of the universe, the origin of life from pre-biological molecules, and human evolution.</li>
<li>Most mainstream Protestant and Jewish faiths hold similar positions.</li>
</ul></li>
</ul>
</section>
<section id="the-dalai-lamas-perspective-on-scientific-disproof" class="level3">
<h3 class="anchored" data-anchor-id="the-dalai-lamas-perspective-on-scientific-disproof">The Dalai Lama’s Perspective on Scientific Disproof</h3>
<ul>
<li><strong>Hypothetical Question</strong>: Sagan frequently asks religious leaders how they would respond if a central tenet of their faith were disproved by science.</li>
<li><strong>The Dalai Lama’s Response</strong>:
<ul>
<li>Unlike conservative or fundamentalist leaders, the Dalai Lama stated that Tibetan Buddhism would have to change if faced with scientific disproof.</li>
<li>This applied even to a core belief like reincarnation.</li>
</ul></li>
<li><strong>Difficulty of Disproving Reincarnation</strong>: The Dalai Lama acknowledged the challenge of scientifically disproving reincarnation.</li>
<li><strong>Implications</strong>: Religious doctrines that are not shielded from disproof have reason to be concerned about scientific advancements.</li>
</ul>
</section>
<section id="doctrines-beyond-scientific-disproof" class="level3">
<h3 class="anchored" data-anchor-id="doctrines-beyond-scientific-disproof">Doctrines Beyond Scientific Disproof</h3>
<ul>
<li><strong>The Creator as an Example</strong>:
<ul>
<li>The concept of a creator of the universe, common to many faiths, is difficult to prove or disprove scientifically.</li>
</ul></li>
<li><strong>Maimonides’s View</strong>:
<ul>
<li>Moses Maimonides, in <em>Guide for the Perplexed</em>, argued that true knowledge of God requires free and open study of both physics and theology.</li>
</ul></li>
<li><strong>Implications of an Infinitely Old Universe</strong>:
<ul>
<li>If science demonstrated an infinitely old universe, theological views would need significant revision.</li>
<li><strong>Reason</strong>: An infinitely old universe would never have been created, challenging the idea of a creator.</li>
</ul></li>
</ul>
</section>
<section id="concerns-about-the-consequences-of-scientific-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="concerns-about-the-consequences-of-scientific-knowledge">Concerns about the Consequences of Scientific Knowledge</h3>
<ul>
<li><strong>Arguments Against Knowing</strong>: Some suggest that certain knowledge might be better left undiscovered.</li>
<li><strong>Examples of Concerns</strong>:
<ul>
<li><strong>Gender Differences</strong>: If men and women have different inherent propensities, could this be used to justify oppression?</li>
<li><strong>Genetic Basis of Violence</strong>: Could findings about a genetic component of violence lead to the repression or preemptive incarceration of specific groups?</li>
<li><strong>Mental Illness as Brain Chemistry</strong>: Does this undermine our sense of responsibility for our actions and our ability to maintain a grip on reality?</li>
<li><strong>Lack of Special Creation</strong>: If humans are not divinely created and moral laws are human inventions, does this weaken the foundations of social order?</li>
</ul></li>
<li><strong>The Value of Truth</strong>:
<ul>
<li>Sagan argues that in all these cases, knowing the closest approximation to the truth is preferable.</li>
<li>We should be aware of past errors in our belief systems or interest groups.</li>
<li><strong>Exaggerated Fears</strong>: The perceived negative consequences of knowing the truth are often overstated.</li>
<li><strong>Limitations of Human Wisdom</strong>: We lack the wisdom to determine which lies or distortions of truth will ultimately serve a greater good, especially in the long term.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-16-when-scientists-know-sin" class="level2">
<h2 class="anchored" data-anchor-id="chapter-16-when-scientists-know-sin">Chapter 16: When Scientists Know Sin</h2>
<section id="introduction-5" class="level3">
<h3 class="anchored" data-anchor-id="introduction-5">Introduction</h3>
<ul>
<li><p><strong>Quote:</strong> Euripides’ quote from Hippolytus (428 BC) highlights the potential for human wickedness to grow, suggesting the need for more space to accommodate sinners.</p>
<blockquote class="blockquote">
<p>The mind of man, how far will it advance? Where will its daring impudence find limits? If human villainy and human life shall wax in due proportion, if the son shall always grow in wickedness past his father, the gods must add another world to this, that all the sinners may have space enough. Euripides, Hippolytus, 428 BC</p>
</blockquote></li>
<li><p><strong>Oppenheimer’s Encounter with Truman:</strong></p>
<ul>
<li>J. Robert Oppenheimer, the scientific director of the Manhattan Project, expressed remorse to President Truman, stating that scientists “had bloody hands” and “had now known sin” after the development of the atomic bomb.</li>
<li>Truman was displeased and refused further meetings with Oppenheimer.</li>
</ul></li>
<li><p><strong>Science and Morality:</strong></p>
<ul>
<li>Science is often criticized for being morally neutral, capable of serving both good and evil purposes.</li>
<li>This critique is ancient, dating back to early technologies like stone tools and fire.</li>
</ul></li>
<li><p><strong>Human Nature and Technology:</strong></p>
<ul>
<li>Sagan argues the problem is less about science itself and more about human nature, as humans are inherently a technological species.</li>
</ul></li>
<li><p><strong>Responsibility of Science:</strong></p>
<ul>
<li>Science bears a significant responsibility for the misuse of its discoveries, especially with increasingly powerful technologies.</li>
<li>Caution and prudence are essential when dealing with technologies that can alter the global environment.</li>
</ul></li>
<li><p><strong>New Ethic Required:</strong></p>
<ul>
<li>Sagan calls for a new, globally established ethic to address the unprecedented potential for harm posed by modern technologies combined with inherent human weaknesses.</li>
</ul></li>
</ul>
</section>
<section id="scientists-and-responsibility" class="level3">
<h3 class="anchored" data-anchor-id="scientists-and-responsibility">Scientists and Responsibility</h3>
<ul>
<li><strong>Selective Credit and Blame:</strong>
<ul>
<li>Scientists sometimes attempt to claim credit for positive applications of science while distancing themselves from negative consequences.</li>
</ul></li>
<li><strong>John Passmore’s Analogy:</strong>
<ul>
<li>Sagan uses the analogy of the Spanish Inquisition handing over heretics to the secular arm to avoid direct responsibility for their execution.</li>
<li>Passmore argues that scientists cannot claim ignorance or lack of responsibility when the technological applications of their work are clear, especially when they receive funding from entities like the military.</li>
</ul></li>
<li><strong>Edward Teller: A Case Study</strong></li>
</ul>
</section>
<section id="edward-teller-and-the-hydrogen-bomb" class="level3">
<h3 class="anchored" data-anchor-id="edward-teller-and-the-hydrogen-bomb">Edward Teller and the Hydrogen Bomb</h3>
<section id="early-life-and-influences" class="level4">
<h4 class="anchored" data-anchor-id="early-life-and-influences">Early Life and Influences</h4>
<ul>
<li><strong>Early Trauma:</strong> Teller’s early life was marked by the Béla Kun Communist Revolution in Hungary (which resulted in his family’s property being seized) and a streetcar accident that left him with a permanent leg injury and chronic pain.</li>
<li><strong>Scientific Contributions:</strong> Teller made significant contributions to various fields, including quantum mechanics, solid-state physics, and cosmology.</li>
<li><strong>Role in Initiating the Manhattan Project:</strong>
<ul>
<li>Teller drove Leo Szilard to meet with Albert Einstein, leading to Einstein’s letter to President Roosevelt urging the U.S. to develop an atomic bomb due to concerns about Nazi Germany’s progress.</li>
</ul></li>
</ul>
</section>
<section id="tellers-focus-on-the-hydrogen-bomb" class="level4">
<h4 class="anchored" data-anchor-id="tellers-focus-on-the-hydrogen-bomb">Teller’s Focus on the Hydrogen Bomb</h4>
<ul>
<li><strong>Refusal to Cooperate at Los Alamos:</strong>
<ul>
<li>Teller joined the Manhattan Project but refused to work on the atomic bomb, wanting to focus on the more powerful hydrogen bomb (fusion bomb).</li>
</ul></li>
<li><strong>Advocacy for the “Super”:</strong>
<ul>
<li>Teller persistently advocated for the development of the hydrogen bomb (“Super”) after the war, primarily to intimidate the Soviet Union.</li>
</ul></li>
<li><strong>Role in Oppenheimer’s Downfall:</strong>
<ul>
<li>Teller testified against Oppenheimer, questioning his loyalty and contributing to the revocation of Oppenheimer’s security clearance, thus paving the way for Teller’s hydrogen bomb project.</li>
</ul></li>
</ul>
</section>
<section id="development-and-implications-of-the-hydrogen-bomb" class="level4">
<h4 class="anchored" data-anchor-id="development-and-implications-of-the-hydrogen-bomb">Development and Implications of the Hydrogen Bomb</h4>
<ul>
<li><strong>Development of the Hydrogen Bomb:</strong>
<ul>
<li>The hydrogen bomb design is generally attributed to Teller and Stanislas Ulam, though Hans Bethe (who headed the theoretical division at the Manhattan Project) claims Teller’s initial idea was flawed and required contributions from many others, including Richard Garwin.</li>
</ul></li>
<li><strong>First Hydrogen Bomb Tests:</strong>
<ul>
<li>The first U.S. thermonuclear device was tested in 1952 (too large for practical deployment).</li>
<li>The first true hydrogen bomb was a Soviet invention, tested in 1953.</li>
</ul></li>
<li><strong>Debate on Necessity:</strong>
<ul>
<li>There’s debate on whether the Soviet Union would have developed a hydrogen bomb without the U.S. doing so, and whether a U.S. hydrogen bomb was necessary to deter the Soviets.</li>
</ul></li>
<li><strong>Evidence of Soviet Progress:</strong>
<ul>
<li>Evidence suggests the USSR had a workable hydrogen bomb design even before its first fission bomb test.</li>
<li>Soviet fission weapon development benefited from espionage revealing the U.S. efforts.</li>
</ul></li>
</ul>
</section>
<section id="nuclear-winter-and-its-strategic-implications" class="level4">
<h4 class="anchored" data-anchor-id="nuclear-winter-and-its-strategic-implications">Nuclear Winter and its Strategic Implications</h4>
<ul>
<li><strong>Increased Danger of Global Nuclear War:</strong>
<ul>
<li>Sagan argues that the hydrogen bomb significantly increased the danger of global nuclear war due to the potential for nuclear winter caused by widespread fires and smoke from airbursts.</li>
</ul></li>
<li><strong>Nuclear Winter Debate:</strong>
<ul>
<li>Sagan was involved in a controversial debate about nuclear winter (1983-1990), largely driven by political agendas.</li>
</ul></li>
<li><strong>Strategic Implications:</strong>
<ul>
<li>Nuclear winter challenged the strategic doctrine of massive retaliation and first-strike options, as it demonstrated the potential for self-destruction even without retaliation.</li>
</ul></li>
<li><strong>Temperature Decline Estimates:</strong>
<ul>
<li>The original 1983 paper predicted a global temperature decline of 15-20 degrees Celsius after a nuclear war.</li>
<li>Current estimates are 10-15 degrees Celsius, still significantly greater than the difference between current temperatures and the last ice age.</li>
</ul></li>
<li><strong>Long-Term Consequences:</strong>
<ul>
<li>A study by 200 scientists estimated that nuclear winter from a large-scale nuclear war could threaten global civilization and most of humanity, primarily through starvation.</li>
</ul></li>
</ul>
</section>
<section id="tellers-response-to-nuclear-winter" class="level4">
<h4 class="anchored" data-anchor-id="tellers-response-to-nuclear-winter">Teller’s Response to Nuclear Winter</h4>
<ul>
<li><strong>Teller’s Claims:</strong>
<ul>
<li>Teller disputed the physics of nuclear winter and claimed it had been discovered earlier under his guidance at the Lawrence Livermore National Laboratory.</li>
</ul></li>
<li><strong>Lack of Evidence for Prior Discovery:</strong>
<ul>
<li>There’s no evidence supporting Teller’s claim, and evidence suggests that experts in various nations had overlooked the potential for nuclear winter.</li>
</ul></li>
<li><strong>Ethical Concerns:</strong>
<ul>
<li>Sagan argues that if Teller’s claim were true, it would have been unethical to withhold such a crucial discovery from the public and world leaders.</li>
</ul></li>
</ul>
</section>
<section id="tellers-attempts-to-justify-the-hydrogen-bomb" class="level4">
<h4 class="anchored" data-anchor-id="tellers-attempts-to-justify-the-hydrogen-bomb">Teller’s Attempts to Justify the Hydrogen Bomb</h4>
<ul>
<li><strong>Psychological Impact:</strong>
<ul>
<li>Sagan speculates on the potential psychological stress experienced by those responsible for creating such a devastating weapon.</li>
</ul></li>
<li><strong>“Father of the Hydrogen Bomb”:</strong>
<ul>
<li>Teller is often called the “father of the hydrogen bomb,” a title reflecting his “almost fanatic determination” to build it (as described by Life magazine in 1954).</li>
</ul></li>
<li><strong>Justification Attempts:</strong>
<ul>
<li>Sagan believes much of Teller’s subsequent career can be interpreted as an attempt to justify the hydrogen bomb’s existence.</li>
</ul></li>
<li><strong>Deterrence Argument:</strong>
<ul>
<li>Teller argued that hydrogen bombs maintain peace by making the consequences of nuclear war too dangerous.</li>
</ul></li>
<li><strong>Assumption of Rationality:</strong>
<ul>
<li>This argument relies on the assumption that nuclear-armed nations will always act rationally, ignoring the possibility of irrationality or madness in leadership.</li>
</ul></li>
</ul>
</section>
<section id="tellers-opposition-to-nuclear-test-bans-and-advocacy-for-other-uses" class="level4">
<h4 class="anchored" data-anchor-id="tellers-opposition-to-nuclear-test-bans-and-advocacy-for-other-uses">Teller’s Opposition to Nuclear Test Bans and Advocacy for Other Uses</h4>
<ul>
<li><strong>Opposition to Test Ban Treaties:</strong>
<ul>
<li>Teller hindered efforts to achieve a comprehensive nuclear test ban treaty, arguing that above-ground testing was crucial for maintaining and improving arsenals.</li>
<li>His arguments proved to be unfounded.</li>
</ul></li>
<li><strong>Advocacy for Fission Power:</strong>
<ul>
<li>Teller promoted the safety and cost-effectiveness of fission power plants, claiming to be the only casualty of the Three Mile Island accident (due to a heart attack during a debate on the issue).</li>
</ul></li>
</ul>
</section>
<section id="tellers-controversial-proposals" class="level4">
<h4 class="anchored" data-anchor-id="tellers-controversial-proposals">Teller’s Controversial Proposals</h4>
<ul>
<li><strong>Peaceful Nuclear Explosions:</strong>
<ul>
<li>Teller proposed using nuclear explosions for various purposes, including dredging harbors, obliterating mountains, and heavy earth-moving.</li>
</ul></li>
<li><strong>Queen Frederica’s Response:</strong>
<ul>
<li>Queen Frederica of Greece reportedly rejected Teller’s proposal for such projects in Greece, stating they had enough ruins already.</li>
</ul></li>
<li><strong>Scientific Experiments with Nuclear Weapons:</strong>
<ul>
<li>Teller suggested using nuclear explosions for scientific experiments, such as testing Einstein’s general relativity by exploding a bomb on the far side of the Sun or analyzing the Moon’s composition by exploding a hydrogen bomb on its surface.</li>
</ul></li>
</ul>
</section>
<section id="teller-and-the-strategic-defense-initiative-sdi" class="level4">
<h4 class="anchored" data-anchor-id="teller-and-the-strategic-defense-initiative-sdi">Teller and the Strategic Defense Initiative (SDI)</h4>
<ul>
<li><strong>Star Wars Proposal:</strong>
<ul>
<li>Teller promoted the Strategic Defense Initiative (SDI or “Star Wars”) to President Reagan, claiming the possibility of a space-based X-ray laser powered by hydrogen bombs to destroy Soviet missiles in flight.</li>
</ul></li>
<li><strong>Reagan’s Belief and Apologists’ Claims:</strong>
<ul>
<li>Reagan seemingly believed Teller’s claims, and some argue that SDI, despite its exaggerations, led to the collapse of the Soviet Union.</li>
</ul></li>
<li><strong>Lack of Evidence for SDI’s Role in Soviet Collapse:</strong>
<ul>
<li>There’s no substantial evidence supporting the claim that SDI caused the Soviet Union’s downfall.</li>
</ul></li>
<li><strong>Soviet Response to SDI:</strong>
<ul>
<li>Soviet scientists advised Gorbachev that the best response to SDI would be to increase their nuclear arsenal and delivery systems, potentially escalating the risk of war.</li>
</ul></li>
<li><strong>True Reasons for Soviet Collapse:</strong>
<ul>
<li>The Soviet Union’s collapse is more likely attributed to the failure of its command economy, increasing awareness of Western living standards, disillusionment with communist ideology, and Gorbachev’s policies of openness (glasnost).</li>
</ul></li>
</ul>
</section>
<section id="scientists-opposition-to-star-wars" class="level4">
<h4 class="anchored" data-anchor-id="scientists-opposition-to-star-wars">Scientists’ Opposition to Star Wars</h4>
<ul>
<li><strong>Non-Cooperation with SDI:</strong>
<ul>
<li>10,000 American scientists and engineers publicly pledged not to work on Star Wars or accept funding from the SDI organization, demonstrating courageous non-cooperation with a government policy they deemed misguided.</li>
</ul></li>
</ul>
</section>
<section id="tellers-further-controversial-ideas" class="level4">
<h4 class="anchored" data-anchor-id="tellers-further-controversial-ideas">Teller’s Further Controversial Ideas</h4>
<ul>
<li><strong>Burrowing Nuclear Warheads:</strong>
<ul>
<li>Teller advocated for burrowing nuclear warheads to target underground command centers and shelters.</li>
</ul></li>
<li><strong>“Humane” Nuclear War:</strong>
<ul>
<li>He proposed using low-yield nuclear weapons to destroy infrastructure without casualties, claiming civilians would be alerted in advance, making nuclear war “humane.”</li>
</ul></li>
</ul>
</section>
<section id="tellers-late-career-advocacy-for-asteroid-defense" class="level4">
<h4 class="anchored" data-anchor-id="tellers-late-career-advocacy-for-asteroid-defense">Teller’s Late-Career Advocacy for Asteroid Defense</h4>
<ul>
<li><strong>Asteroid Deflection with Nuclear Weapons:</strong>
<ul>
<li>In his late 80s, Teller collaborated with former Soviet nuclear weapons scientists to propose using high-yield thermonuclear weapons in space to destroy or deflect asteroids that might threaten Earth.</li>
</ul></li>
<li><strong>Concerns about Premature Experimentation:</strong>
<ul>
<li>Sagan expresses concern that premature asteroid deflection experiments could pose significant risks to humanity.</li>
</ul></li>
</ul>
</section>
<section id="sagans-perspective-on-teller" class="level4">
<h4 class="anchored" data-anchor-id="sagans-perspective-on-teller">Sagan’s Perspective on Teller</h4>
<ul>
<li><strong>Disagreements and Personal Bias:</strong>
<ul>
<li>Sagan acknowledges his strong disagreements with Teller on various issues, including SDI, nuclear winter, and asteroid defense, and admits this may have biased his perspective.</li>
</ul></li>
<li><strong>Teller’s Motivation:</strong>
<ul>
<li>Sagan sees Teller’s persistent attempts to justify the hydrogen bomb as a desire to believe it can be used for good purposes, such as defense, science, and planetary protection, ultimately seeking to be seen as a savior rather than a destroyer.</li>
</ul></li>
</ul>
</section>
</section>
<section id="the-moral-ambiguity-of-science-and-humanity" class="level3">
<h3 class="anchored" data-anchor-id="the-moral-ambiguity-of-science-and-humanity">The Moral Ambiguity of Science and Humanity</h3>
<section id="dangers-of-power-and-secrecy" class="level4">
<h4 class="anchored" data-anchor-id="dangers-of-power-and-secrecy">Dangers of Power and Secrecy</h4>
<ul>
<li><strong>Moral Ambiguity of Scientists:</strong>
<ul>
<li>Sagan argues that when scientific research grants immense power to fallible nations and leaders, it creates potential dangers, including the loss of objectivity among scientists due to the corrupting influence of power.</li>
</ul></li>
<li><strong>Perniciousness of Secrecy:</strong>
<ul>
<li>Secrecy is particularly harmful in this context, as it hinders open debate and scrutiny.</li>
</ul></li>
<li><strong>Importance of Checks and Balances and Open Debate:</strong>
<ul>
<li>Democratic checks and balances and open debate are crucial safeguards against the misuse of technology.</li>
</ul></li>
<li><strong>CIA Inspector General’s Comment:</strong>
<ul>
<li>Sagan quotes the CIA Inspector General’s 1995 statement: “Absolute secrecy corrupts absolutely.”</li>
</ul></li>
<li><strong>Value of Open Debate:</strong>
<ul>
<li>Open and vigorous debate can prevent dangerous applications of technology by allowing for diverse perspectives and critical scrutiny, even from less prominent individuals who might be excluded in a secretive environment.</li>
</ul></li>
</ul>
</section>
<section id="moral-ambiguity-in-other-realms" class="level4">
<h4 class="anchored" data-anchor-id="moral-ambiguity-in-other-realms">Moral Ambiguity in Other Realms</h4>
<ul>
<li><strong>Aphorisms and Contradictory Advice:</strong>
<ul>
<li>Sagan points out the moral ambiguity inherent in aphorisms, which often offer contradictory advice (e.g., “haste makes waste” vs.&nbsp;“a stitch in time saves nine”).</li>
</ul></li>
<li><strong>Moral Responsibility of Advice-Givers:</strong>
<ul>
<li>Sagan questions the moral responsibility of those who offer guidance based on such ambiguous or contradictory principles.</li>
</ul></li>
<li><strong>Religions and Moral Contradictions:</strong>
<ul>
<li>Sagan examines moral ambiguity within mainstream religions, citing examples of contradictory messages in religious texts.</li>
<li>Micah advocates for justice and mercy, Exodus forbids murder, Leviticus commands loving one’s neighbor, and the Gospels urge loving one’s enemies.</li>
<li>However, religious texts also contain stories of violence and mass murder, such as the Old Testament accounts of the Israelites’ conquest of Canaan.</li>
</ul></li>
<li><strong>Justification for Violence in Scripture:</strong>
<ul>
<li>Sagan criticizes the lack of moral reflection or remorse in the biblical accounts of mass killings, which are often justified based on divine promises or commands.</li>
</ul></li>
<li><strong>Selective Interpretation of Scripture:</strong>
<ul>
<li>Sagan notes that religious texts contain a wide range of moral narratives, allowing for selective interpretation to justify various actions.</li>
</ul></li>
<li><strong>Moral Ambiguity Across Religions:</strong>
<ul>
<li>This moral ambiguity is not unique to Judaism and Christianity but can be found in many other religions.</li>
</ul></li>
</ul>
</section>
<section id="scientists-prophetic-role" class="level4">
<h4 class="anchored" data-anchor-id="scientists-prophetic-role">Scientists’ Prophetic Role</h4>
<ul>
<li><strong>Scientists’ Ethical Responsibility:</strong>
<ul>
<li>Sagan concludes that moral ambiguity is inherent in humanity, not just scientists.</li>
<li>However, scientists have a specific responsibility to warn the public about potential dangers, especially those arising from science.</li>
</ul></li>
<li><strong>Judicious Warnings and Safety:</strong>
<ul>
<li>Warnings should be well-founded and proportionate to the risks but err on the side of caution when the stakes are high.</li>
</ul></li>
<li><strong>Analogy of the !Kung San:</strong>
<ul>
<li>Sagan draws an analogy to the !Kung San hunter-gatherers, where women would remove poison arrows during arguments to prevent harm.</li>
<li>Today, humanity possesses “poison arrows” capable of destroying civilization, highlighting the need to address the potential for harm.</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-4" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-4">Conclusion</h3>
<ul>
<li><strong>High Ethical Responsibility of Scientists:</strong>
<ul>
<li>Sagan emphasizes the unprecedentedly high ethical responsibility of scientists due to the potentially devastating consequences of modern technologies.</li>
</ul></li>
<li><strong>Call for Ethical Training:</strong>
<ul>
<li>Sagan advocates for the inclusion of explicit and systematic ethical training in graduate science programs.</li>
</ul></li>
<li><strong>Hope for a Safer Future:</strong>
<ul>
<li>Sagan expresses hope that, like the !Kung San women, humanity will find ways to remove the “poison arrows” and create a safer future.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-17-the-marriage-of-skepticism-and-wonder" class="level2">
<h2 class="anchored" data-anchor-id="chapter-17-the-marriage-of-skepticism-and-wonder">Chapter 17: The Marriage of Skepticism and Wonder</h2>
<section id="introduction-the-limits-of-truth-and-the-need-for-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-limits-of-truth-and-the-need-for-skepticism">Introduction: The Limits of Truth and the Need for Skepticism</h3>
<ul>
<li><strong>Epigraphs highlight the central theme</strong>:
<ul>
<li>Michael Faraday: “Nothing is too wonderful to be true” (openness to possibilities).</li>
<li>Bertrand Russell: “Insight, untested and unsupported, is an insufficient guarantee of truth” (need for rigorous testing).</li>
</ul></li>
<li><strong>Human limitations in achieving absolute truth</strong>:
<ul>
<li>Our memories are fallible.</li>
<li>Scientific truth is an approximation.</li>
<li>We are largely ignorant about the universe.</li>
</ul></li>
<li><strong>Legal systems demand an impossible standard of truth</strong>:
<ul>
<li>“The whole truth, and nothing but the truth” is beyond our capabilities.</li>
<li>This standard is necessary for justice, even though unattainable.</li>
</ul></li>
<li><strong>Jury selection demonstrates the legal system’s awareness of bias</strong>:
<ul>
<li>Courts attempt to weed out potential juror bias through extensive questioning.</li>
<li><strong>Examples of potential biases</strong>:
<ul>
<li>Personal relationships with legal professionals involved in the case.</li>
<li>Pre-trial publicity influencing opinions.</li>
<li>Weighting evidence from police officers differently than defense witnesses.</li>
<li>Bias against the defendant’s ethnic group.</li>
<li>Living in the neighborhood where the crime occurred.</li>
<li>Having a scientific background (often seen as a disadvantage).</li>
<li>Relatives or close family members in law enforcement or criminal law.</li>
<li>Personal experiences with law enforcement.</li>
<li>Experiences of friends or relatives with similar charges.</li>
</ul></li>
</ul></li>
<li><strong>The legal system’s efforts to safeguard objectivity are not always successful</strong>.</li>
<li><strong>The need for a similar level of scrutiny in other areas</strong>: Politics, economics, religion, and ethics should be subjected to the same rigorous standards as legal proceedings when making decisions.</li>
</ul>
</section>
<section id="the-burden-and-benefits-of-scientific-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="the-burden-and-benefits-of-scientific-skepticism">The Burden and Benefits of Scientific Skepticism</h3>
<ul>
<li><strong>Science demands a commitment to critical thinking</strong>:
<ul>
<li>We must question what we are told.</li>
<li>We must challenge our own beliefs, hopes, and biases.</li>
<li>We must strive to see ourselves and our institutions objectively.</li>
</ul></li>
<li><strong>Consistency in applying scientific thinking</strong>:
<ul>
<li>We cannot selectively apply science only where it feels comfortable.</li>
<li><strong>Example</strong>: We cannot embrace technologies based on scientific principles (airplanes, radio, antibiotics) while rejecting other scientific findings (age of the Earth, evolutionary biology).</li>
</ul></li>
<li><strong>Acknowledging the potential downsides of skepticism</strong>:
<ul>
<li>Skepticism can be perceived as arrogant, dogmatic, heartless, and dismissive.</li>
<li>Some skeptics may apply it insensitively.</li>
<li>Challenging deeply held beliefs can feel like a personal attack.</li>
</ul></li>
<li><strong>Skepticism as a tool for finding truth, not an end in itself</strong>:
<ul>
<li>René Descartes: “I did not imitate the skeptics, who doubt only for doubting’s sake… my whole intention was to arrive at a certainty.”</li>
</ul></li>
<li><strong>The importance of empathy in skepticism</strong>:
<ul>
<li>Supporters of pseudoscience are also seeking to understand the world, even if their methods are flawed.</li>
<li>We should temper criticism with kindness and recognize that everyone’s understanding is incomplete.</li>
</ul></li>
<li><strong>The limits of skepticism</strong>:
<ul>
<li>A cost-benefit analysis may be necessary.</li>
<li>If the comfort provided by mystical or superstitious beliefs outweighs the potential harm, should we remain silent?</li>
</ul></li>
<li><strong>The danger of silent assent</strong>:
<ul>
<li><strong>Taxi driver analogy</strong>: Failing to challenge prejudice reinforces it.</li>
<li>Similarly, not challenging pseudoscientific beliefs can create a climate where skepticism is seen as impolite and critical thinking is discouraged.</li>
</ul></li>
<li><strong>Finding a balance between skepticism and tolerance requires wisdom</strong>.</li>
</ul>
</section>
<section id="the-role-of-organized-skepticism-the-committee-for-the-scientific-investigation-of-claims-of-the-paranormal-csicop" class="level3">
<h3 class="anchored" data-anchor-id="the-role-of-organized-skepticism-the-committee-for-the-scientific-investigation-of-claims-of-the-paranormal-csicop">The Role of Organized Skepticism: The Committee for the Scientific Investigation of Claims of the Paranormal (CSICOP)</h3>
<ul>
<li><strong>CSICOP’s mission</strong>:
<ul>
<li>Founded in 1976 by Paul Kurtz.</li>
<li>Dedicated to skeptical scrutiny of pseudoscience.</li>
<li>Composed of scientists, academics, magicians, and others.</li>
</ul></li>
<li><strong>CSICOP’s role as a media counterbalance</strong>:
<ul>
<li>Provides an alternative perspective to uncritical coverage of paranormal claims.</li>
<li>Offers institutional memory of past scams and hoaxes.</li>
</ul></li>
<li><strong>Criticisms of CSICOP</strong>:
<ul>
<li>Accusations of hostility to new ideas, knee-jerk debunking, and acting as a vigilante organization or inquisition.</li>
</ul></li>
<li><strong>Sagan’s perspective on CSICOP</strong>:
<ul>
<li>Acknowledges imperfections but sees it as serving an important social function.</li>
<li>Provides a voice of reason in a media often prone to sensationalism.</li>
</ul></li>
<li><strong>The Skeptical Inquirer</strong>:
<ul>
<li>CSICOP’s bimonthly periodical.</li>
<li>Exposes a wide range of pseudoscientific claims.</li>
<li><strong>Examples</strong>: Crop circles, cattle mutilations.</li>
<li>Reveals the lack of imagination and the reliance on stale ideas and fears in many pseudoscientific narratives.</li>
</ul></li>
<li><strong>The need for a more compassionate approach to skepticism</strong>:
<ul>
<li>The “us vs.&nbsp;them” mentality is unproductive and limits the reach of skepticism.</li>
<li>Recognizing the human motivations behind pseudoscientific beliefs could lead to wider acceptance of skepticism.</li>
<li>Compassion and understanding can make science and the scientific method less intimidating.</li>
</ul></li>
</ul>
</section>
<section id="skepticism-pseudoscience-and-the-new-age" class="level3">
<h3 class="anchored" data-anchor-id="skepticism-pseudoscience-and-the-new-age">Skepticism, Pseudoscience, and the New Age</h3>
<ul>
<li><strong>Pseudoscience and New Age beliefs often arise from dissatisfaction with conventional views</strong>:
<ul>
<li>They represent a form of skepticism themselves, questioning established norms.</li>
<li>This is also true for the origins of many religions.</li>
</ul></li>
<li><strong>David Hess’s perspective (Science and the New Age)</strong>:
<ul>
<li>The paranormal cannot be reduced to cranks and charlatans; many sincere people are seeking alternative explanations.</li>
<li>Debunking is unlikely to be effective in changing their minds.</li>
<li>Skeptics should try to understand these belief systems from the perspective of those who hold them, considering their historical, social, and cultural contexts.</li>
<li>This approach can reveal the underlying conflicts, dilemmas, and identities expressed through paranormal beliefs.</li>
<li>Hess criticizes simplistic skeptical explanations that attribute paranormal beliefs solely to comfort-seeking or media irresponsibility.</li>
<li>However, Hess also makes unsubstantiated claims about skeptics ruining careers and exhibiting religious zeal in defending materialism and atheism.</li>
</ul></li>
<li><strong>Sagan’s response to Hess</strong>:
<ul>
<li>We have substantial evidence for the existence and properties of matter.</li>
<li>If a phenomenon can be explained by known physical principles, there’s no need to invoke unproven entities.</li>
<li><strong>“Invisible fire-breathing dragon” analogy</strong>: Illustrates the flawed logic of attributing skepticism to atheism or materialism.</li>
<li>Science in the New Age discusses skepticism but fails to understand or practice it.</li>
<li>It focuses on the subjective experiences and biases of believers without offering methods to evaluate the validity of paranormal claims.</li>
</ul></li>
<li><strong>Robert Anton Wilson’s perspective (The New Inquisition)</strong>:
<ul>
<li>Describes skeptics as the new inquisition.</li>
<li><strong>Sagan’s counter-argument</strong>: Skeptics do not compel belief. They are often marginalized in the media. Criticism in publications like the Skeptical Inquirer does not constitute persecution.</li>
</ul></li>
<li><strong>The importance of testing beliefs</strong>:
<ul>
<li>Believers in the paranormal should welcome scrutiny to see how well their claims hold up.</li>
</ul></li>
</ul>
</section>
<section id="the-potential-for-unexpected-discoveries-and-the-importance-of-openness" class="level3">
<h3 class="anchored" data-anchor-id="the-potential-for-unexpected-discoveries-and-the-importance-of-openness">The Potential for Unexpected Discoveries and the Importance of Openness</h3>
<ul>
<li><strong>Acknowledging the possibility of rare but valid pseudoscientific claims</strong>:
<ul>
<li><strong>Examples</strong>: A surviving Cretaceous reptile in Loch Ness, artifacts of an extraterrestrial civilization.</li>
</ul></li>
<li><strong>Potentially promising claims in the ESP field (as of the time of writing)</strong>:
<ul>
<li>Humans influencing random number generators with their thoughts.</li>
<li>Telepathic reception of thoughts or images under sensory deprivation.</li>
<li>Young children accurately reporting details of past lives, suggesting reincarnation.</li>
<li><strong>Sagan’s stance</strong>: These claims are unlikely to be true, but they deserve further investigation due to some experimental support.</li>
</ul></li>
<li><strong>Sagan’s experience with “Objections to Astrology”</strong>:
<ul>
<li>Refused to endorse the manifesto due to its authoritarian tone.</li>
<li>Criticizing astrology’s origins in superstition is irrelevant; the focus should be on its present validity.</li>
<li>Speculating on the psychological motivations of believers does not address whether astrology works.</li>
<li>The lack of a known mechanism for astrology is not conclusive evidence against it (continental drift analogy).</li>
<li><strong>Valid criticisms of astrology</strong>:
<ul>
<li>Inconsistent treatment of the precession of the equinoxes.</li>
<li>Neglect of atmospheric refraction.</li>
<li>Limited list of celestial objects considered significant.</li>
<li>Inconsistent requirements for birth information.</li>
<li>Failure to pass the identical twin test.</li>
<li>Discrepancies between horoscopes cast by different astrologers.</li>
<li>Lack of correlation with psychological tests.</li>
</ul></li>
<li><strong>A more effective approach</strong>: A statement describing and refuting the main tenets of astrology would be more persuasive.</li>
</ul></li>
<li><strong>The enduring popularity of astrology despite its lack of scientific validity</strong>:
<ul>
<li>Indicates that it fulfills social needs that science does not address.</li>
</ul></li>
</ul>
</section>
<section id="the-essential-balance-skepticism-and-wonder" class="level3">
<h3 class="anchored" data-anchor-id="the-essential-balance-skepticism-and-wonder">The Essential Balance: Skepticism and Wonder</h3>
<ul>
<li><strong>Science requires a balance between two seemingly contradictory attitudes</strong>:
<ul>
<li>Openness to new ideas, no matter how strange.</li>
<li>Ruthless skeptical scrutiny of all ideas.</li>
<li>This process distinguishes deep truths from nonsense.</li>
</ul></li>
<li><strong>The tension between openness and skepticism</strong>:
<ul>
<li><strong>Examples of counterintuitive but true scientific concepts</strong>:
<ul>
<li>Time dilation, length contraction, and mass increase in special relativity.</li>
<li>Matter-antimatter creation from nothing in quantum mechanics.</li>
<li>Quantum tunneling.</li>
</ul></li>
<li>These concepts seem absurd but are supported by evidence.</li>
</ul></li>
<li><strong>The dangers of extreme skepticism</strong>:
<ul>
<li>Missing or rejecting groundbreaking discoveries.</li>
<li>Becoming a cynical misanthrope who sees only nonsense.</li>
</ul></li>
<li><strong>The dangers of extreme openness (gullibility)</strong>:
<ul>
<li>Inability to distinguish valid ideas from worthless ones.</li>
<li>Accepting contradictory ideas without critical evaluation.</li>
</ul></li>
<li><strong>Good scientists practice both openness and skepticism</strong>:
<ul>
<li>They generate many ideas and subject them to rigorous self-criticism.</li>
<li>Only the most promising ideas are shared with the scientific community for further scrutiny.</li>
</ul></li>
<li><strong>The importance of expressing wonder in science</strong>:
<ul>
<li>Many scientists are hesitant to express their excitement about new ideas.</li>
<li>Sharing this sense of wonder can make science more accessible and human.</li>
</ul></li>
</ul>
</section>
<section id="finding-the-right-balance" class="level3">
<h3 class="anchored" data-anchor-id="finding-the-right-balance">Finding the Right Balance</h3>
<ul>
<li><strong>The need to draw a line between openness and skepticism</strong>:
<ul>
<li>No one can be completely open or completely skeptical.</li>
</ul></li>
<li><strong>An ancient Chinese proverb</strong>: “Better to be too credulous than too skeptical.”
<ul>
<li>Reflects a conservative society prioritizing stability over challenge.</li>
</ul></li>
<li><strong>Sagan’s perspective</strong>: “Better to be too skeptical than too credulous.”
<ul>
<li>Both require practice and training.</li>
</ul></li>
<li><strong>Understanding is crucial for openness</strong>:
<ul>
<li>We cannot be open to ideas we do not comprehend.</li>
</ul></li>
<li><strong>The importance of educating for skepticism and wonder</strong>:
<ul>
<li>Public education should aim to cultivate both skills in every student.</li>
</ul></li>
<li><strong>A vision for a skeptical and wondrous society</strong>:
<ul>
<li>A community embracing curiosity, open to new ideas, demanding rigorous evidence, and applying these standards equally to cherished beliefs and those they are inclined to reject.</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-18-the-wind-makes-dust" class="level2">
<h2 class="anchored" data-anchor-id="chapter-18-the-wind-makes-dust">Chapter 18: The Wind Makes Dust</h2>
<section id="introduction-6" class="level3">
<h3 class="anchored" data-anchor-id="introduction-6">Introduction</h3>
<ul>
<li><strong>Source Material:</strong>
<ul>
<li>“The wind makes dust because it intends to blow, taking away our footprints.” - Specimens of Bushman Folklore, W.H.I. Bleak and L.C. Lloyd Collectors, L.C. Lloyd, Editor, 1911.</li>
<li>Excerpts from “From Mr.&nbsp;Darwin’s Critics” (1871) by Thomas H. Huxley, Collected Essays, Volume 2, Darwiniana, Essays, London Macmillan, 1907, Pages 175 and 176.</li>
</ul></li>
<li><strong>Central Theme:</strong> Exploring the origins and development of scientific thinking, challenging the notion that it’s a recent or culturally specific phenomenon.</li>
</ul>
</section>
<section id="the-difficulty-of-science" class="level3">
<h3 class="anchored" data-anchor-id="the-difficulty-of-science">The Difficulty of Science</h3>
<ul>
<li><strong>Common Perception:</strong> Science is often considered difficult to learn and teach.</li>
<li><strong>Reasons for Difficulty (Surface Level):</strong>
<ul>
<li>Precision and rigor</li>
<li>Counterintuitive concepts</li>
<li>Potential for misuse</li>
<li>Rejection of authority</li>
</ul></li>
<li><strong>Alan Cromer’s Hypothesis (Uncommon Sense, The Heretical Nature of Science, 1993):</strong>
<ul>
<li><strong>Science is difficult because it’s relatively new.</strong> Humanity has only practiced it for a few centuries.</li>
<li>Like writing (a few millennia old), we haven’t fully mastered it yet.</li>
<li>Science may be a historical fluke, not an inevitable outcome of human development.</li>
<li><strong>Evidence:</strong>
<ul>
<li><strong>Hostility towards science</strong> despite its achievements suggests it’s not a natural part of human development.</li>
<li><strong>Other civilizations (Chinese, Indian, Aztec) made significant technological advancements</strong> (movable type, gunpowder, the zero, advanced calendars) but didn’t develop the scientific method.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="ancient-greece-and-the-origins-of-science" class="level3">
<h3 class="anchored" data-anchor-id="ancient-greece-and-the-origins-of-science">Ancient Greece and the Origins of Science</h3>
<ul>
<li><strong>Cromer’s Argument:</strong> Scientific thinking originated in ancient Greece due to a unique confluence of cultural factors.</li>
<li><strong>Factors Contributing to Objective Thinking in Greece:</strong>
<ol type="1">
<li><strong>The Assembly:</strong> Fostered rational debate and persuasion.</li>
<li><strong>Maritime Economy:</strong> Prevented isolation and promoted interaction with diverse perspectives.</li>
<li><strong>Widespread Greek-Speaking World:</strong> Facilitated travel and exchange of ideas among scholars.</li>
<li><strong>Independent Merchant Class:</strong> Supported education and independent teachers.</li>
<li><strong>The Iliad and the Odyssey:</strong> Exemplified liberal and rational thought.</li>
<li><strong>Literary Religion:</strong> Not dominated by a priestly class that might suppress dissenting views.</li>
<li><strong>Persistence of these Factors for 1,000 Years:</strong> Allowed for sustained development of ideas.</li>
</ol></li>
<li><strong>Uniqueness of Greek Science:</strong> Cromer argues this combination of factors was unique and didn’t occur elsewhere.</li>
</ul>
</section>
<section id="the-ionian-philosophers" class="level3">
<h3 class="anchored" data-anchor-id="the-ionian-philosophers">The Ionian Philosophers</h3>
<ul>
<li><p><strong>Significance:</strong> Sagan acknowledges the Ionians as the first to systematically attribute the world’s order to natural laws instead of gods.</p></li>
<li><p><strong>Lucretius’ Summary of Ionian Views:</strong></p>
<blockquote class="blockquote">
<p>Nature, free at once and rid of her haughty lords, is seen to do all things spontaneously of herself without the meddling of the gods.</p>
</blockquote></li>
<li><p><strong>Forgotten Legacy:</strong> Despite their importance, the Ionians are largely forgotten, possibly because societies tend to suppress those who challenge religious authority.</p></li>
<li><p><strong>Possibility of Recurrence:</strong> Sagan questions whether science would have emerged elsewhere if the Ionians hadn’t existed. Given diverse cultures and historical trajectories, it’s plausible that the right conditions might have arisen elsewhere.</p></li>
<li><p><strong>Potential Alternative Locations for Scientific Development:</strong></p>
<ul>
<li>Islands of Indonesia</li>
<li>Caribbean, near a Mesoamerican civilization untouched by conquistadors</li>
<li>Norse colonies on the Black Sea</li>
</ul></li>
</ul>
</section>
<section id="impediments-to-scientific-thinking" class="level3">
<h3 class="anchored" data-anchor-id="impediments-to-scientific-thinking">Impediments to Scientific Thinking</h3>
<ul>
<li><strong>Political and Hierarchical Structures:</strong> Sagan argues that the primary obstacle to scientific thinking is not intellectual capacity but political and social structures that suppress new ideas.</li>
<li><strong>Rigidity vs.&nbsp;Openness:</strong>
<ul>
<li>In stable societies, challenging established norms might be seen as unnecessary or dangerous.</li>
<li>In changing environments, new ideas become essential for adaptation and survival.</li>
</ul></li>
<li><strong>Rewarding Openness:</strong> Societies facing challenges benefit from individuals who are open to learning from the universe rather than imposing their beliefs onto it.</li>
</ul>
</section>
<section id="early-greek-science-progress-and-limitations" class="level3">
<h3 class="anchored" data-anchor-id="early-greek-science-progress-and-limitations">Early Greek Science: Progress and Limitations</h3>
<ul>
<li><strong>Mathematical Advancements:</strong> Greek mathematics made significant strides.</li>
<li><strong>Early Scientific Errors:</strong> Early Greek science, often lacking experimentation, was prone to errors.
<ul>
<li><strong>Examples:</strong>
<ul>
<li>Believed vision relied on emanations from the eye.</li>
<li>Attributed heredity solely to semen.</li>
<li>Misunderstood projectile motion.</li>
<li>Believed in the perfection of circles and celestial bodies, leading to the incorrect assumption of circular planetary orbits.</li>
</ul></li>
</ul></li>
<li><strong>Importance of Experimentation:</strong> Freedom from superstition is not enough for science to flourish; active interrogation of nature through experimentation is crucial.</li>
<li><strong>Examples of Greek Experimentation:</strong>
<ul>
<li>Eratosthenes’ measurement of Earth’s diameter.</li>
<li>Empedocles’ Clipsydra experiment demonstrating the material nature of air.</li>
</ul></li>
<li><strong>Social Barriers to Experimentation:</strong> In societies where manual labor is devalued, experimental methods are less likely to thrive.</li>
</ul>
</section>
<section id="the-role-of-superstition-and-injustice" class="level3">
<h3 class="anchored" data-anchor-id="the-role-of-superstition-and-injustice">The Role of Superstition and Injustice</h3>
<ul>
<li><strong>Intertwined Obstacles:</strong> Superstition and injustice often stem from the same sources (religious and secular authorities).</li>
<li><strong>Revolution and Science:</strong> Political revolutions, religious skepticism, and the rise of science are often linked.</li>
<li><strong>Necessary but Insufficient Condition:</strong> Freedom from superstition is essential but not enough for science to develop.</li>
</ul>
</section>
<section id="monotheism-and-science" class="level3">
<h3 class="anchored" data-anchor-id="monotheism-and-science">Monotheism and Science</h3>
<ul>
<li><strong>Influence of Monotheism:</strong> Some argue that monotheism played a crucial role in the development of modern science.
<ul>
<li><strong>Johannes Kepler:</strong> Viewed his scientific pursuits as a way to understand the mind of God.</li>
<li><strong>Albert Einstein and Stephen Hawking:</strong> Expressed similar sentiments about seeking to understand the universe’s design.</li>
<li><strong>Alfred North Whitehead and Joseph Needham:</strong> Suggested that the lack of monotheism hindered scientific development in non-Western cultures.</li>
</ul></li>
<li><strong>Contrary Evidence:</strong> Sagan believes there’s strong evidence against this thesis.</li>
</ul>
</section>
<section id="hunter-gatherer-societies-and-scientific-thinking" class="level3">
<h3 class="anchored" data-anchor-id="hunter-gatherer-societies-and-scientific-thinking">Hunter-Gatherer Societies and Scientific Thinking</h3>
<ul>
<li><strong>The !Kung San of the Kalahari Desert:</strong> Sagan uses the example of the !Kung San people to illustrate scientific thinking in hunter-gatherer societies.</li>
<li><strong>Tracking Skills:</strong> The !Kung San possess exceptional tracking abilities, deducing detailed information about animals from their tracks.</li>
<li><strong>Tracking as Science:</strong> Sagan considers these tracking skills a form of science in action.</li>
<li><strong>Examples of Deductions from Tracks:</strong>
<ul>
<li>Speed of the animal</li>
<li>Presence of injuries</li>
<li>Weight and size</li>
<li>Age and sex</li>
<li>Time since the animal passed</li>
<li>Presence of other hunters</li>
</ul></li>
<li><strong>Methods of Track Analysis:</strong>
<ul>
<li>Shape of depressions</li>
<li>Degree of erosion</li>
<li>Presence of debris or other tracks</li>
<li>Subsurface moisture content and drying rate</li>
</ul></li>
<li><strong>Astronomical Awareness:</strong> The !Kung San use the position of the sun and the direction of shadows to estimate the time animals passed.</li>
<li><strong>Human Track Recognition:</strong> They can identify individual members of their band by their footprints.</li>
<li><strong>Learning Process:</strong> Tracking skills are learned through observation, imitation, and experience, similar to how modern scientists build upon previous knowledge.</li>
<li><strong>Absence of Magic:</strong> The !Kung San’s tracking methods rely on observation and deduction, not magical practices.</li>
<li><strong>Practicality and Cheerfulness:</strong> Hunter-gatherers tend to be pragmatic and focused on survival, exhibiting scientific thinking in their daily lives.</li>
</ul>
</section>
<section id="origins-of-tracking-protocols" class="level3">
<h3 class="anchored" data-anchor-id="origins-of-tracking-protocols">Origins of Tracking Protocols</h3>
<ul>
<li><strong>Innovation and Transmission:</strong> Someone had to develop these tracking methods initially, likely through a process of trial and error and passed down through generations.</li>
<li><strong>Parallel with Modern Science:</strong> The way hunter-gatherers refine and adapt their tracking knowledge mirrors how scientists build upon established methods and incorporate new data.</li>
</ul>
</section>
<section id="foraging-and-plant-knowledge" class="level3">
<h3 class="anchored" data-anchor-id="foraging-and-plant-knowledge">Foraging and Plant Knowledge</h3>
<ul>
<li><strong>Botanical Expertise:</strong> Hunter-gatherers also possess extensive knowledge of plants, essential for foraging.</li>
<li><strong>Taxonomic Precision:</strong> They often classify plants with accuracy comparable to Western botanists.</li>
<li><strong>Mental Mapping:</strong> They have detailed mental maps of their territories.</li>
<li><strong>Survival Importance:</strong> Botanical knowledge is crucial for survival, demonstrating the intellectual capabilities of hunter-gatherer societies.</li>
</ul>
</section>
<section id="challenging-colonialist-and-racist-views" class="level3">
<h3 class="anchored" data-anchor-id="challenging-colonialist-and-racist-views">Challenging Colonialist and Racist Views</h3>
<ul>
<li><strong>Refuting the “Primitive Mind” Notion:</strong> Sagan rejects the idea that hunter-gatherers lack the intellectual capacity for science, viewing it as a vestige of colonialism and racism.</li>
<li><strong>Evidence of Scientific Thinking:</strong> Their everyday activities, especially tracking and foraging, demonstrate a clear aptitude for scientific reasoning.</li>
</ul>
</section>
<section id="hunter-gatherer-societies-and-cromers-criteria" class="level3">
<h3 class="anchored" data-anchor-id="hunter-gatherer-societies-and-cromers-criteria">Hunter-Gatherer Societies and Cromer’s Criteria</h3>
<ul>
<li><strong>Meeting Cromer’s Criteria:</strong> Hunter-gatherer societies exhibit many of the characteristics Cromer identified as conducive to objective thinking:
<ul>
<li>Debate and discussion</li>
<li>Travel and interaction</li>
<li>Absence of a dominant priestly class</li>
<li>Persistence of these factors over a vast period (300,000+ years).</li>
</ul></li>
<li><strong>Conclusion:</strong> Based on Cromer’s own criteria, hunter-gatherers should possess scientific thinking, and Sagan argues that they do.</li>
</ul>
</section>
<section id="the-legacy-of-ancient-greece" class="level3">
<h3 class="anchored" data-anchor-id="the-legacy-of-ancient-greece">The Legacy of Ancient Greece</h3>
<ul>
<li><strong>Contribution of Ionia:</strong> Ancient Greece, particularly Ionia, contributed the concept of systematic inquiry and the idea that natural laws, not gods, govern the world.</li>
<li><strong>Early Attempts at Natural Explanations:</strong> Pre-Socratic philosophers explored various natural explanations for the universe’s origins, although their specific theories were often flawed.</li>
<li><strong>Shift in Historical Causality:</strong> Greek historical narratives transitioned from attributing events to divine intervention to emphasizing human agency.</li>
<li><strong>Suppression of Ionian Thought:</strong> The scientific approach of the pre-Socratics was largely suppressed by Plato, Aristotle, and later Christian theologians.</li>
</ul>
</section>
<section id="a-hypothetical-alternative-history" class="level3">
<h3 class="anchored" data-anchor-id="a-hypothetical-alternative-history">A Hypothetical Alternative History</h3>
<ul>
<li><strong>What If?:</strong> Sagan speculates on how the world might be different if the Ionian approach had been embraced and developed further.
<ul>
<li>Building upon the atomists’ insights about matter, the plurality of worlds, and the vastness of space and time.</li>
<li>Developing Archimedes’ technological innovations.</li>
<li>Promoting the concept of unchanging laws of nature that humans can discover and understand.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-science-as-a-human-birthright" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-science-as-a-human-birthright">Conclusion: Science as a Human Birthright</h3>
<ul>
<li><strong>Rejecting Limitations:</strong> Sagan dismisses the idea that science is inherently difficult to teach or that humans lack the capacity for it.</li>
<li><strong>Innate Proclivity for Science:</strong>
<ul>
<li>Children’s natural curiosity and enthusiasm for science.</li>
<li>The example of hunter-gatherers.</li>
<li>Both suggest a deep-seated human predisposition for scientific thinking.</li>
</ul></li>
<li><strong>Science as a Survival Tool:</strong> Scientific thinking has been essential for human survival throughout history.</li>
<li><strong>Disenfranchisement through Discouragement:</strong> When we discourage children from pursuing science, we deprive them of crucial tools for navigating the future.</li>
<li><strong>Emphasis on Importance:</strong> Science is not a specialized field but a fundamental way of understanding the world, a birthright that should be nurtured and encouraged.</li>
</ul>
</section>
</section>
<section id="chapter-19-no-such-thing-as-a-dumb-question" class="level2">
<h2 class="anchored" data-anchor-id="chapter-19-no-such-thing-as-a-dumb-question">Chapter 19: No Such Thing as a Dumb Question</h2>
<section id="introduction-the-importance-of-questions" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-importance-of-questions">Introduction: The Importance of Questions</h3>
<ul>
<li><strong>Epigraph:</strong> “So we keep asking, over and over, until a handful of earth stops our mouths. But is that an answer?” - Heinrich Heine, Lazarus, 1854</li>
<li><strong>Early Education:</strong>
<ul>
<li>Evidence of toolmaking dating back 2 million years suggests early humans had systems of education (apprenticeships) to pass down essential skills.</li>
<li>These systems remained stable for long periods, indicating effective knowledge transfer.</li>
</ul></li>
<li><strong>Challenges in a Changing World:</strong>
<ul>
<li>Rapid societal and technological change makes it difficult to determine what to teach and how to teach it.</li>
<li>This leads to:
<ul>
<li>Students questioning the relevance of education.</li>
<li>Decreased respect for elders and authority.</li>
<li>Teachers lamenting declining educational standards and student motivation.</li>
</ul></li>
</ul></li>
<li><strong>The Need for Adaptability:</strong>
<ul>
<li>In a rapidly changing world, both students and teachers need to develop the crucial skill of <strong>learning how to learn</strong>.</li>
</ul></li>
</ul>
</section>
<section id="the-innate-curiosity-of-children" class="level3">
<h3 class="anchored" data-anchor-id="the-innate-curiosity-of-children">The Innate Curiosity of Children</h3>
<ul>
<li><strong>Natural-Born Scientists:</strong> Young children often possess a natural scientific curiosity, driven by wonder and a desire to understand the world around them.</li>
<li><strong>Examples of Children’s Questions:</strong>
<ul>
<li>Why is the moon round?</li>
<li>Why is grass green?</li>
<li>What is a dream?</li>
<li>How deep can you dig a hole?</li>
<li>When is the world’s birthday?</li>
<li>Why do we have toes?</li>
</ul></li>
<li><strong>The Impact of Adult Responses:</strong>
<ul>
<li>Negative responses from adults (irritation, ridicule, dismissal) can discourage children’s natural curiosity and drive them away from science.</li>
<li><strong>Importance of Honesty:</strong> Adults should not be afraid to admit when they don’t know the answer to a question.</li>
<li><strong>Encouraging Further Exploration:</strong> Suggesting resources like encyclopedias or libraries, or even framing the question as a future challenge for the child, can foster continued curiosity.</li>
</ul></li>
</ul>
</section>
<section id="the-decline-of-scientific-curiosity" class="level3">
<h3 class="anchored" data-anchor-id="the-decline-of-scientific-curiosity">The Decline of Scientific Curiosity</h3>
<ul>
<li><strong>High School vs.&nbsp;Elementary School:</strong> A noticeable shift occurs between elementary and high school.
<ul>
<li><strong>High School Students:</strong>
<ul>
<li>Focus on memorizing facts rather than understanding concepts.</li>
<li>Loss of wonder and limited development of skepticism.</li>
<li>Fear of asking “dumb” questions.</li>
<li>Acceptance of inadequate answers.</li>
<li>Lack of follow-up questions.</li>
<li>Preoccupation with peer approval.</li>
</ul></li>
<li><strong>Factors Contributing to Decline:</strong>
<ul>
<li>Peer pressure to conform and not excel academically.</li>
<li>Societal emphasis on short-term gratification.</li>
<li>Perception that science and math are not pathways to success or material wealth.</li>
<li>Low expectations placed on students.</li>
<li>Lack of positive role models and rewards for intellectual engagement.</li>
<li>Negative stereotypes associated with academic achievement (“nerds,” “geeks”).</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="addressing-the-dumb-question-myth" class="level3">
<h3 class="anchored" data-anchor-id="addressing-the-dumb-question-myth">Addressing the “Dumb Question” Myth</h3>
<ul>
<li><strong>Every Question is a Learning Opportunity:</strong> All questions, regardless of how they may seem, represent a desire to understand the world.</li>
<li><strong>Nurturing Curiosity:</strong> Bright, curious children are a valuable resource that needs to be nurtured and encouraged.</li>
<li><strong>Providing Tools for Thought:</strong> Encouragement alone is insufficient; children also need to be equipped with the necessary tools for critical thinking and scientific inquiry.</li>
</ul>
</section>
<section id="the-state-of-science-education-in-the-united-states" class="level3">
<h3 class="anchored" data-anchor-id="the-state-of-science-education-in-the-united-states">The State of Science Education in the United States</h3>
<ul>
<li><strong>Poor Performance in International Comparisons:</strong>
<ul>
<li>U.S. students consistently rank poorly in international tests of science and math.</li>
<li>Examples:
<ul>
<li><strong>Algebra:</strong> U.S. 17-year-olds averaged 43% (failing grade) compared to 78% (C+ or B-) in Japan.</li>
<li><strong>Chemistry:</strong> U.S. students outperformed only two other nations out of 13.</li>
<li><strong>Fifth Grade Science:</strong> Top Minneapolis classrooms were outperformed by all classrooms in Sendai, Japan and 19 out of 20 in Taipei, Taiwan.</li>
<li><strong>General Science and Math:</strong> South Korean and Canadian students consistently outperformed their U.S. counterparts.</li>
</ul></li>
</ul></li>
<li><strong>Attitudes Towards School:</strong>
<ul>
<li>22% of U.S. students dislike school compared to 8% of Korean students.</li>
<li>66% of U.S. students believe they are good at math compared to 25% of Korean students, despite the performance gap.</li>
</ul></li>
<li><strong>Exceptional Students:</strong> The U.S. has produced some outstanding students in science and math competitions, like the International Mathematical Olympiad.</li>
<li><strong>Scientific Literacy Among Adults:</strong>
<ul>
<li><strong>Low Levels of Understanding:</strong> A significant portion of American adults demonstrate a lack of basic scientific knowledge.</li>
<li>Examples:
<ul>
<li>63% unaware that dinosaurs died out before humans appeared.</li>
<li>75% unaware that antibiotics don’t kill viruses.</li>
<li>57% unaware that electrons are smaller than atoms.</li>
<li>~50% unaware that the Earth orbits the Sun annually.</li>
</ul></li>
<li><strong>Global Issue:</strong> Similar lack of understanding exists in other countries, including China, regarding the Earth’s orbit around the Sun.</li>
</ul></li>
<li><strong>The Problem with Current Assessments:</strong>
<ul>
<li>Existing tests often measure rote memorization rather than genuine understanding.</li>
<li><strong>Focus on How We Know:</strong> Assessments should focus on the process of scientific inquiry and how we arrive at conclusions.</li>
</ul></li>
</ul>
</section>
<section id="the-conflict-between-science-and-belief" class="level3">
<h3 class="anchored" data-anchor-id="the-conflict-between-science-and-belief">The Conflict Between Science and Belief</h3>
<ul>
<li><strong>Literal Interpretations:</strong> Literal interpretations of religious texts (e.g., the Bible, Quran) often conflict with scientific findings, such as the shape of the Earth or the age of the universe.</li>
<li><strong>Flat Earth Beliefs:</strong> Some religious authorities, like Sheikh Abdelaziz Ibn Baz in Saudi Arabia, have issued decrees that the Earth is flat and that believing otherwise is heresy.</li>
<li><strong>Evolution vs.&nbsp;Creationism:</strong>
<ul>
<li>Many people find the concept of evolution offensive, preferring to believe in divine creation.</li>
<li><strong>Rejection of Evidence:</strong> Often, those who reject evolution do so despite overwhelming scientific evidence.</li>
<li><strong>Low Acceptance in the U.S.:</strong> Only 9% of Americans fully accept the theory of evolution, compared to 45% who simply say they “accept” it and 70% in China.</li>
<li><strong>Conflicts with Religious Doctrine:</strong> Some religious leaders, like Orthodox rabbis in Israel, have condemned the movie Jurassic Park for its depiction of evolution and the age of dinosaurs.</li>
</ul></li>
<li><strong>Genetic Evidence:</strong> The clearest evidence for evolution lies in our genes, yet it continues to be challenged by some, ironically, whose own DNA supports it.</li>
</ul>
</section>
<section id="challenges-in-science-education" class="level3">
<h3 class="anchored" data-anchor-id="challenges-in-science-education">Challenges in Science Education</h3>
<ul>
<li><strong>Decline in Teaching Profession:</strong>
<ul>
<li><strong>Loss of Status and Benefits:</strong> The teaching profession has lost much of its former status, security, and respect, unlike during the Great Depression when it was seen as a path out of poverty.</li>
<li><strong>Incompetent and Uninspiring Teaching:</strong> As a result, science (and other subjects) are often taught poorly, lacking in both competence and inspiration.</li>
<li><strong>Lack of Teacher Training:</strong> Teachers frequently lack adequate training in their subjects and struggle to distinguish science from pseudoscience.</li>
<li><strong>Brain Drain:</strong> Well-trained teachers often leave for higher-paying jobs in other fields.</li>
</ul></li>
<li><strong>The Need for Hands-On Experience:</strong>
<ul>
<li><strong>Importance of Experimentation:</strong> Students need hands-on experience with the scientific method to truly understand scientific concepts.</li>
<li><strong>Examples:</strong>
<ul>
<li>Observing a candle burning in a bell jar to understand oxidation and the role of oxygen.</li>
<li>Viewing mitochondria under a microscope.</li>
<li>Testing the effects of oxygen deprivation on different organisms.</li>
</ul></li>
</ul></li>
<li><strong>Applying the Scientific Method Beyond Science:</strong>
<ul>
<li><strong>Daniel Kunitz’s Constitutional Convention:</strong>
<ul>
<li>An innovative approach to teaching the U.S. Constitution by having students simulate the Constitutional Convention.</li>
<li>Students are assigned roles representing different states and their interests, then tasked with drafting their own constitution.</li>
<li>By comparing their version to the actual Constitution, students gain a deeper understanding of the compromises and decisions made by the Founding Fathers.</li>
</ul></li>
</ul></li>
<li><strong>Funding Challenges:</strong>
<ul>
<li><strong>Lack of Public Support:</strong> School bond issues for improvements in education are often voted down.</li>
<li><strong>Disparity in Funding Priorities:</strong> Education is often not prioritized for funding compared to other areas like the military, agriculture, or environmental cleanup.</li>
<li><strong>Alternative Funding Mechanisms:</strong> Exploring alternative funding sources like special taxes on industries that require technically trained workers could be considered.</li>
</ul></li>
<li><strong>Insufficient Study Time:</strong>
<ul>
<li><strong>Shorter School Year:</strong> The U.S. school year is shorter than in many other high-performing countries (180 days vs.&nbsp;220+ in South Korea, Germany, and Japan).</li>
<li><strong>Limited Homework:</strong> American students spend less time on homework compared to their counterparts in other countries.</li>
<li><strong>Total Study Time:</strong> American students dedicate significantly less time to studying overall (20 hours/week) compared to students in countries like Japan (33 hours/week for fifth graders).</li>
<li><strong>Consequences:</strong> This disparity in study time contributes to the lower output of scientists and engineers in the U.S. compared to countries like Japan, which produces twice as many despite having half the population.</li>
</ul></li>
<li><strong>Curriculum Overload:</strong>
<ul>
<li><strong>“New Work of Schools”:</strong> The school day now needs to accommodate various non-academic subjects like personal safety, consumer affairs, AIDS education, environmental awareness, family life, and driver’s ed.</li>
<li><strong>Reduced Time for Core Subjects:</strong> Consequently, only around three hours per day are spent on core academic subjects in U.S. high schools.</li>
</ul></li>
<li><strong>The “Science is Too Hard” Perception:</strong>
<ul>
<li><strong>Low Physics Enrollment:</strong> Only about 10% of U.S. high school students choose to take physics, reflecting a widespread belief that science is too difficult.</li>
<li><strong>Counter-Examples:</strong> This perception is challenged by the success of students in other countries where science education is more rigorous and widespread.</li>
</ul></li>
<li><strong>Decline in American Innovation:</strong>
<ul>
<li><strong>Past Achievements:</strong> The U.S. historically prided itself on its inventors and technological advancements.</li>
<li><strong>Shifting Landscape:</strong> This trend seems to have slowed down, with the exception of computers, raising concerns about the future of American innovation.</li>
</ul></li>
<li><strong>Lack of Tangible Benefits for Studying:</strong>
<ul>
<li><strong>Diminishing Returns:</strong> For average young Americans, especially those in service jobs, academic competency does not necessarily translate to higher earnings in the early years after high school.</li>
<li><strong>Impact on Industry:</strong> However, in the productive sectors, the lack of basic skills in math and literacy has serious consequences, impacting productivity and competitiveness.</li>
<li><strong>Examples:</strong>
<ul>
<li>Furniture factories struggling due to a lack of workers with basic math skills.</li>
<li>Electronics company reporting that 80% of job applicants fail a fifth-grade math test.</li>
</ul></li>
<li><strong>Economic Costs:</strong> The U.S. economy suffers billions of dollars in losses annually due to workforce illiteracy and innumeracy.</li>
</ul></li>
<li><strong>Factors Contributing to R&amp;D Decline:</strong>
<ul>
<li>A U.S. National Science Board survey of high-tech companies identified several factors contributing to the decline in research and development:
<ul>
<li>Lack of a long-term national strategy.</li>
<li>Insufficient attention to training future scientists and engineers.</li>
<li>Overemphasis on defense spending at the expense of civilian R&amp;D.</li>
<li>Neglect of pre-college education.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="addressing-the-challenges-promoting-scientific-literacy" class="level3">
<h3 class="anchored" data-anchor-id="addressing-the-challenges-promoting-scientific-literacy">Addressing the Challenges: Promoting Scientific Literacy</h3>
<ul>
<li><strong>Breaking the Cycle of Ignorance:</strong> Science phobia is contagious, and a scientifically illiterate public perpetuates this cycle.</li>
<li><strong>Engaging Diverse Demographics:</strong>
<ul>
<li><strong>Future Workforce:</strong> The majority of new American workers in the coming years will be women, minorities, and immigrants.</li>
<li><strong>Importance of Inclusion:</strong> Failing to engage and support these groups is not only unjust but also detrimental to the economy, as it deprives the nation of a skilled workforce.</li>
</ul></li>
<li><strong>Positive Trends and Persistent Gaps:</strong>
<ul>
<li>African-American and Hispanic students have shown improvement in science test scores since the late 1960s, but they are the only groups to do so.</li>
<li>Significant math achievement gaps persist between white and black students, but the gap between white U.S. students and students in other developed nations is even larger.</li>
</ul></li>
<li><strong>The Role of Socioeconomic Factors:</strong>
<ul>
<li>Motivation and Education: Lack of motivation and poor education are key factors contributing to low levels of scientific literacy.</li>
<li><strong>Equal Opportunities:</strong> When provided with equal opportunities and resources, students from diverse backgrounds perform equally well.</li>
<li><strong>Impact of Early Intervention Programs:</strong> Programs like Head Start and Upward Bound have demonstrated positive effects on educational attainment and employment prospects for disadvantaged children.</li>
</ul></li>
</ul>
</section>
<section id="strategies-for-improvement-college-and-university-level" class="level3">
<h3 class="anchored" data-anchor-id="strategies-for-improvement-college-and-university-level">Strategies for Improvement: College and University Level</h3>
<ul>
<li><strong>Improving Teacher Status and Incentives:</strong>
<ul>
<li><strong>Performance-Based Recognition:</strong> Promote teachers based on their teaching effectiveness and the performance of their students in standardized tests.</li>
<li><strong>Competitive Salaries:</strong> Offer salaries that are competitive with those in industry to attract and retain talented educators.</li>
</ul></li>
<li><strong>Investing in Resources:</strong>
<ul>
<li>Increase funding for scholarships, fellowships, and laboratory equipment.</li>
</ul></li>
<li><strong>Developing Engaging Curricula:</strong>
<ul>
<li>Create inspiring and imaginative curricula and textbooks with the involvement of leading faculty members.</li>
</ul></li>
<li><strong>Hands-On Learning for All:</strong>
<ul>
<li>Make laboratory courses a requirement for graduation.</li>
</ul></li>
<li><strong>Promoting Inclusivity:</strong>
<ul>
<li>Pay special attention to groups traditionally underrepresented in science to ensure equal opportunities.</li>
</ul></li>
<li><strong>Engaging Scientists in Public Education:</strong>
<ul>
<li>Encourage leading scientists to actively participate in public education through various channels (textbooks, lectures, media appearances, etc.).</li>
</ul></li>
<li><strong>Critical Thinking Skills:</strong>
<ul>
<li>Implement mandatory courses in critical thinking and the scientific method for all college students.</li>
</ul></li>
</ul>
</section>
<section id="the-wonder-of-science-a-personal-perspective" class="level3">
<h3 class="anchored" data-anchor-id="the-wonder-of-science-a-personal-perspective">The Wonder of Science: A Personal Perspective</h3>
<ul>
<li><strong>Science vs.&nbsp;Mysticism:</strong>
<ul>
<li>William Blake saw angels on the sun, while others saw a golden coin.</li>
<li><strong>The Power of Scientific Understanding:</strong> Modern science reveals a far more awe-inspiring reality of the sun’s nature, surpassing any mystical interpretation.</li>
</ul></li>
<li><strong>Examples of Scientific Marvels:</strong>
<ul>
<li>The vastness and energy of the Sun.</li>
<li>The complexity of the human genome.</li>
<li>The immense distances and timescales of quasars.</li>
<li>The shared ancestry of all humans.</li>
</ul></li>
<li><strong>The Emotional Impact of Scientific Discoveries:</strong>
<ul>
<li>Scientific discoveries can evoke a sense of wonder, exhilaration, and awe.</li>
<li><strong>The Elegance of Nature:</strong> Nature consistently surpasses our expectations in its complexity and beauty.</li>
<li><strong>Reverential Astonishment:</strong> Scientists often experience a profound sense of astonishment and reverence when making discoveries or gaining new understanding.</li>
<li><strong>The Joy of Inquiry:</strong> The process of scientific inquiry, posing questions, exploring explanations, and potentially contributing to new discoveries, is deeply fulfilling.</li>
</ul></li>
</ul>
</section>
<section id="engaging-with-scientific-questions" class="level3">
<h3 class="anchored" data-anchor-id="engaging-with-scientific-questions">Engaging with Scientific Questions</h3>
<ul>
<li><strong>Examples of Thought-Provoking Questions:</strong>
<ul>
<li>Can there be an undiscovered integer between 6 and 7?</li>
<li>Can there be an undiscovered element between carbon (atomic number 6) and nitrogen (atomic number 7)?</li>
<li>How do we assess the risks and benefits of a new food preservative that causes cancer in rats but requires large doses to do so in humans?</li>
<li>How do we interpret the presence of carbon isotopes characteristic of life in ancient rocks?</li>
<li>Can our thoughts, memories, and emotions be explained solely by brain circuitry? Could we ever simulate or manipulate this circuitry?</li>
<li>How do we evaluate a theory of solar system formation that predicts discs of gas and dust when we find evidence of different types of discs?</li>
<li>How do cancer cells communicate with blood vessels to obtain nutrients? Can we intercept this communication?</li>
<li>Why do mixing paints and mixing light of the same colors produce different results?</li>
<li>Could segments of “nonsense” DNA be rogue elements acting independently within organisms?</li>
<li>How do animals sense impending earthquakes?</li>
<li>Are similarities between ancient words for God in different cultures evidence of contact, chance, or some innate linguistic structure?</li>
<li>Could the Second Law of Thermodynamics be reversed in a contracting universe?</li>
<li>Why doesn’t stomach acid dissolve the stomach itself?</li>
<li>How do we reconcile the apparent age of some stars being older than the estimated age of the universe?</li>
<li>What are the future implications of nanotechnology, including the ability to manipulate individual atoms and create molecular machines?</li>
<li>What can we learn about the origin of life from the evolution of self-replicating molecules in the lab?</li>
<li>Why is glacial ice blue while ordinary ice is white?</li>
<li>How deep below the Earth’s surface does life extend?</li>
<li>How do we evaluate claims that the Dogon people had knowledge of a companion star to Sirius before it was scientifically discovered?</li>
</ul></li>
<li><strong>These questions encourage critical thinking, exploration of evidence, and a deeper understanding of the scientific process.</strong></li>
</ul>
</section>
<section id="the-art-of-science-communication" class="level3">
<h3 class="anchored" data-anchor-id="the-art-of-science-communication">The Art of Science Communication</h3>
<ul>
<li><strong>Challenges Faced by Scientists:</strong>
<ul>
<li>Some scientists, even those who are highly skilled in their field, may feel they lack the talent or skills to effectively communicate science to a wider audience.</li>
</ul></li>
<li><strong>The Key to Effective Popularization:</strong>
<ul>
<li><strong>Audience Awareness:</strong> The most important factor is to avoid speaking to a general audience in the same way you would to scientific colleagues.</li>
<li><strong>Simple Language:</strong> Use clear and accessible language, avoiding technical jargon that may confuse non-specialists.</li>
<li><strong>Empathy for the Learner:</strong> Remember what it was like before you understood the concepts you are explaining, and acknowledge potential points of confusion.</li>
<li><strong>Step-by-Step Explanation:</strong> Recapitulate the fundamental steps that led to scientific understanding, guiding the audience through the process of discovery.</li>
<li><strong>Respect for Audience Intelligence:</strong> Recognize that intelligence is widely distributed and that everyone has the capacity to learn.</li>
</ul></li>
<li><strong>Benefits of Effective Communication:</strong>
<ul>
<li>The effort required to communicate science effectively is minimal compared to the potential benefits of fostering public understanding and appreciation of science.</li>
</ul></li>
<li><strong>Potential Pitfalls:</strong>
<ul>
<li><strong>Oversimplification:</strong> While simplifying complex ideas is necessary, it’s important to avoid distorting the science.</li>
<li><strong>Lack of Nuance:</strong> Be mindful of the need to provide context and qualifications, even when aiming for clarity.</li>
<li><strong>Credit and Collaboration:</strong> Acknowledge the contributions of multiple scientists involved in discoveries, avoiding a singular focus.</li>
<li><strong>Analogy vs.&nbsp;Reality:</strong> Use analogies carefully, ensuring the audience understands the limitations of the comparison.</li>
</ul></li>
<li><strong>Learning from Experience:</strong> The more experience you gain in science communication, the better you’ll become at identifying effective approaches and avoiding pitfalls.</li>
<li><strong>The Importance of Feedback:</strong> Seeking feedback from audiences can help you refine your communication techniques.</li>
</ul>
</section>
<section id="overcoming-resistance-to-science-popularization" class="level3">
<h3 class="anchored" data-anchor-id="overcoming-resistance-to-science-popularization">Overcoming Resistance to Science Popularization</h3>
<ul>
<li><strong>Misconceptions about the Public:</strong>
<ul>
<li>Some scientists and media professionals hold the misguided belief that the public is too ignorant or uninterested to understand science.</li>
<li><strong>Self-Fulfilling Prophecy:</strong> This attitude can become a self-fulfilling prophecy, hindering efforts to improve scientific literacy.</li>
<li><strong>Counter-Examples:</strong> Numerous successful examples of science popularization demonstrate that the public can engage with and appreciate science when it’s presented effectively.</li>
</ul></li>
<li><strong>The Importance of Public Support for Science:</strong>
<ul>
<li><strong>Funding Dependence:</strong> Government funding for science relies on public support.</li>
<li><strong>Promoting Understanding:</strong> By communicating science effectively, scientists can build public understanding and appreciation, which in turn increases the likelihood of continued support for scientific research.</li>
</ul></li>
<li><strong>Broadening the Reach of Science Communication:</strong>
<ul>
<li><strong>Beyond Specialized Audiences:</strong> Science communication should extend beyond scientific journals and academic lectures to reach a wider public through various media (newspapers, magazines, radio, television, books, online resources, etc.).</li>
</ul></li>
<li><strong>Striking a Balance:</strong>
<ul>
<li><strong>Avoiding Mystification and Patronization:</strong> Effective science communication requires finding a balance between presenting information accurately and making it accessible without condescending to the audience.</li>
</ul></li>
<li><strong>The Temptation of Religious Interpretations:</strong>
<ul>
<li><strong>Overreaching Conclusions:</strong> Some scientists have made the mistake of drawing unjustified religious conclusions from scientific discoveries, potentially alienating audiences and misrepresenting the nature of science.</li>
<li><strong>Examples:</strong>
<ul>
<li>George Smoot’s “seeing God face-to-face” comment about Big Bang findings.</li>
<li>Leon Lederman’s “God particle” reference to the Higgs boson.</li>
<li>Frank Tipler’s claims about computers proving God’s existence and facilitating resurrection.</li>
</ul></li>
</ul></li>
<li><strong>The Power of Text-Based Resources:</strong>
<ul>
<li><strong>Deep Engagement:</strong> While lectures and media snippets can spark interest, in-depth learning is best facilitated through textbooks, popular science books, and interactive multimedia resources.</li>
<li><strong>Benefits of Text:</strong> These resources allow readers to absorb information at their own pace, revisit challenging concepts, compare different perspectives, and delve deeper into specific topics.</li>
</ul></li>
</ul>
</section>
<section id="improving-science-education-in-schools" class="level3">
<h3 class="anchored" data-anchor-id="improving-science-education-in-schools">Improving Science Education in Schools</h3>
<ul>
<li><strong>The Problem with Current Approaches:</strong>
<ul>
<li><strong>Emphasis on Rote Learning:</strong> Science education in schools often focuses on memorizing principles and applying them through routine procedures, rather than fostering genuine understanding and inquiry.</li>
<li><strong>Lack of Exposure to Great Minds:</strong> Students are often not exposed to the works of great scientists or the excitement of ongoing scientific discoveries.</li>
<li><strong>Attracting the Wrong Students:</strong> This approach can inadvertently attract students who prefer routine and lack imagination, rather than those who are naturally curious and driven to explore.</li>
</ul></li>
<li><strong>The Power of Wonder:</strong>
<ul>
<li><strong>Sparking Curiosity:</strong> Even a glimpse of scientific findings, without a detailed explanation of the methodology, can ignite a sense of wonder and inspire further exploration.</li>
<li><strong>Destination vs.&nbsp;Journey:</strong> While it’s easier to focus on the end results of science, showcasing the process of discovery, including the challenges, mistakes, and dead ends, can be even more engaging.</li>
<li><strong>Presenting Evidence:</strong> Whenever possible, provide the audience with the evidence and allow them to draw their own conclusions, fostering a sense of personal discovery.</li>
</ul></li>
<li><strong>The Influence of Science Popularizers:</strong>
<ul>
<li><strong>Inspiring Role Models:</strong> As a young person, Sagan was deeply inspired by the works of scientist-writers like George Gamow, James Jeans, Arthur Eddington, J.B.S. Haldane, Julian Huxley, Rachel Carson, and Arthur C. Clarke.</li>
<li><strong>A Growing Trend:</strong> The popularity of well-written and imaginative science books has increased in recent years, with a greater diversity of scientists contributing to this genre.</li>
<li><strong>Contemporary Examples:</strong> Notable contemporary science popularizers include Stephen Jay Gould, E.O. Wilson, Lewis Thomas, Richard Dawkins, Stephen Weinberg, Alan Lightman, Kip Thorne, Roald Hoffman, Fred Hoyle, and Isaac Asimov.</li>
<li><strong>Richard Feynman’s Lectures:</strong> Richard Feynman’s introductory physics lectures are considered a particularly inspiring and thought-provoking example of science popularization, though they require some mathematical background.</li>
</ul></li>
<li><strong>The Need for Greater Effort:</strong>
<ul>
<li>Despite the progress made, current efforts in science popularization are still inadequate to meet the needs of society.</li>
<li><strong>Literacy is Essential:</strong> Effective science communication requires a literate population capable of engaging with text-based resources.</li>
</ul></li>
</ul>
</section>
<section id="conclusion-a-call-to-action" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-a-call-to-action">Conclusion: A Call to Action</h3>
<ul>
<li><strong>Rescuing Scientific Literacy:</strong>
<ul>
<li>We need to address the widespread scientific illiteracy exemplified by individuals like “Mr.&nbsp;Buckley” who lack basic understanding of scientific concepts.</li>
<li>We must also stop producing high school graduates who are uninspired, uncritical, and lacking in curiosity.</li>
</ul></li>
<li><strong>The Importance of an Informed Citizenry:</strong>
<ul>
<li>Humanity needs and deserves a citizenry that is intellectually engaged and possesses a fundamental understanding of how the world works.</li>
</ul></li>
<li><strong>Science as a Survival Tool:</strong>
<ul>
<li>Science is not just a specialized field but an essential tool for any society that hopes to thrive in the future and uphold its core values.</li>
<li>This requires not only the advancement of science by its practitioners but also its widespread understanding and acceptance by the entire human community.</li>
</ul></li>
<li><strong>The Role of Scientists:</strong>
<ul>
<li>Scientists have a responsibility to engage in effective science communication and promote scientific literacy.</li>
<li>If scientists do not take on this challenge, who will?</li>
</ul></li>
</ul>
</section>
</section>
<section id="chapter-20-house-on-fire" class="level2">
<h2 class="anchored" data-anchor-id="chapter-20-house-on-fire">Chapter 20: House on Fire</h2>
<section id="introduction-the-parable-of-the-burning-house" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-parable-of-the-burning-house">Introduction: The Parable of the Burning House</h3>
<ul>
<li><strong>Source</strong>: <em>The Saddharma Pundarika in Buddhist Scriptures</em></li>
<li><strong>Analogy</strong>: The burning house represents the world consumed by the fires of suffering (aging, sickness, death).</li>
<li><strong>Householder</strong>: Represents a parent, teacher, or leader.</li>
<li><strong>Children</strong>: Represent those unaware of the dangers (ignorance).</li>
<li><strong>Message</strong>: The parable emphasizes the importance of recognizing and escaping from suffering, and the responsibility of those who are aware to help others do the same.</li>
</ul>
</section>
<section id="feedback-on-a-nation-at-risk" class="level3">
<h3 class="anchored" data-anchor-id="feedback-on-a-nation-at-risk">Feedback on “A Nation at Risk”</h3>
<section id="overview" class="level4">
<h4 class="anchored" data-anchor-id="overview">Overview</h4>
<ul>
<li><strong>Source</strong>: Carl Sagan’s article published in <em>Parade</em> magazine (abbreviated version of Chapter 19).</li>
<li><strong>Focus</strong>: Student and teacher performance in science education.</li>
<li><strong>Feedback</strong>: Wide range of responses from 80 million readers.
<ul>
<li>Denial of the problem.</li>
<li>Concern about the loss of intelligence and know-how.</li>
<li>Belief in easy solutions or deeply ingrained problems.</li>
</ul></li>
</ul>
</section>
<section id="student-responses" class="level4">
<h4 class="anchored" data-anchor-id="student-responses">Student Responses</h4>
<ul>
<li><strong>Source</strong>: 10th-grade students in Minnesota.</li>
<li><strong>General Themes</strong>:
<ul>
<li><strong>Apathy and Lack of Concern</strong>: Many students didn’t see the issue as significant or relevant to their lives.
<ul>
<li>“Not all Americans are stupid. We just rank lower in school. Big deal.”</li>
<li>“Maybe that’s good that we are not as smart as other countries.”</li>
</ul></li>
<li><strong>Focus on Other Fields</strong>: Some students prioritized other career paths, like law, over science.
<ul>
<li>“I’m studying to be a lawyer and frankly I do agree with my parents when they say I have an attitude problem towards science.”</li>
</ul></li>
<li><strong>Blaming External Factors</strong>: Some students blamed the school system or society for the lack of interest in science.
<ul>
<li>“I don’t believe it is the school system’s fault. I think the whole country is brought up with not enough emphasis on school.”</li>
<li>“Most of the kids I know could care less about making sure they’re doing their work right.”</li>
</ul></li>
<li><strong>Stereotypes and Misconceptions</strong>: Some students held stereotypical views about other nationalities and their abilities in science.
<ul>
<li>“Lots of people said that Asian people are smarter than American and they are good at everything. But that’s not true. They’re not good at sports.”</li>
</ul></li>
</ul></li>
<li><strong>Specific Comments</strong>:
<ul>
<li>Boredom with science classes and homework.</li>
<li>Belief that American students could be smarter if they tried harder.</li>
<li>Concerns about excessive homework time (33 hours for 5th graders).</li>
<li>Criticism of Sagan’s tone and perceived lack of national pride.</li>
<li>Suggestions for making science more engaging and fun.</li>
<li>Skepticism about the severity of the problem based on anecdotal evidence (Gorbachev visiting the US for technology).</li>
</ul></li>
</ul>
</section>
<section id="parent-responses" class="level4">
<h4 class="anchored" data-anchor-id="parent-responses">Parent Responses</h4>
<ul>
<li><strong>General Themes</strong>:
<ul>
<li><strong>Parental Responsibility</strong>: Many parents emphasized the importance of parental involvement in fostering a love of learning.
<ul>
<li>“Do parents understand that you can’t be a full human being if you’re ignorant?”</li>
<li>“Parents have to teach patience and perseverance. The most important gift they can give their children is the ethos of hard work.”</li>
</ul></li>
<li><strong>Lack of Resources</strong>: Some parents highlighted the lack of resources for science education, both at school and in the community.
<ul>
<li>“My child is fascinated by science. But she doesn’t get any in school or on TV.”</li>
<li>“My child is identified as gifted but the school has no program for science enrichment.”</li>
</ul></li>
<li><strong>Peer Pressure</strong>: Some parents expressed concern about peer pressure discouraging academic achievement.
<ul>
<li>“There’s enormous peer pressure. Shy children don’t want to stand out by doing well in science.”</li>
<li>“When my daughter reached 13 and 14 her lifelong interest in science seemed to disappear.”</li>
</ul></li>
</ul></li>
<li><strong>Specific Comments</strong>:
<ul>
<li>Importance of providing books, magnifying glasses, encyclopedias, and other learning tools at home.</li>
<li>Leading by example and demonstrating hard work.</li>
<li>Frustration with inadequate school programs for gifted students.</li>
<li>Financial barriers to private education.</li>
</ul></li>
</ul>
</section>
<section id="teacher-and-education-system-responses" class="level4">
<h4 class="anchored" data-anchor-id="teacher-and-education-system-responses">Teacher and Education System Responses</h4>
<ul>
<li><strong>General Themes</strong>:
<ul>
<li><strong>Teacher Training</strong>: Concerns about teachers being trained how to teach but not what to teach.</li>
<li><strong>Lack of Expertise</strong>: Many physics and chemistry teachers lack degrees in their subjects, leading to discomfort and incompetence in teaching.</li>
<li><strong>Teacher Attitudes</strong>:
<ul>
<li>Science and math anxiety among teachers.</li>
<li>Resistance to student questions or dismissive answers.</li>
</ul></li>
<li><strong>Curriculum Issues</strong>:
<ul>
<li>“Dumbing down” of curricula to the lowest common denominator.</li>
<li>Excessive focus on discipline and social curricula.</li>
<li>Lack of emphasis on critical thinking and higher-order skills.</li>
</ul></li>
<li><strong>Administrative Issues</strong>:
<ul>
<li>Lack of autonomy for teachers.</li>
<li>Ineffective principals and administrators.</li>
<li>Tenure system protecting underperforming teachers.</li>
</ul></li>
</ul></li>
<li><strong>Specific Comments</strong>:
<ul>
<li>Concerns about unqualified teachers (e.g., basketball coaches teaching chemistry).</li>
<li>Lack of incentives for teachers to use their own judgment.</li>
<li>Calls to abandon tenure and improve teacher evaluation based on performance.</li>
<li>Criticism of teachers discouraging students from pursuing science careers.</li>
<li>Social promotion of students who are academically behind.</li>
<li>Importance of coordinating science and math curricula.</li>
<li>Criticism of “busy work” homework assignments.</li>
</ul></li>
<li><strong>Anti-Academic Ethos (Diane Ravitch, <em>New Republic</em>):</strong>
<ul>
<li>Peer pressure against academic achievement, especially among girls.</li>
<li>Popularity and coolness being valued over intelligence and accomplishment.</li>
<li>“Acting white” accusations against students who excel academically.</li>
</ul></li>
<li><strong>Lack of Recognition for Science and Math Achievement</strong>:
<ul>
<li>Schools failing to adequately recognize and reward students who excel in science and math.</li>
<li>Suggestions for awards, recognition in assemblies and school newspapers, and involvement of local industry and organizations.</li>
</ul></li>
<li><strong>Importance of Early Childhood Education</strong>: Head Start programs are identified as highly effective in improving children’s understanding of science and other subjects.</li>
</ul>
</section>
</section>
<section id="controversial-opinions" class="level3">
<h3 class="anchored" data-anchor-id="controversial-opinions">Controversial Opinions</h3>
<ul>
<li><strong>Focus on Materialism</strong>: “All the smart kids are looking for the fast buck these days. So they become lawyers, not scientists.”</li>
<li><strong>Anti-Intellectualism</strong>: “I don’t want you to improve education, then there’d be nobody to drive the cabs.”</li>
<li><strong>Religious Influence</strong>:
<ul>
<li>“The problem in science education is that God isn’t sufficiently honored.”</li>
<li>“The fundamentalist teaching that science is humanism and is to be mistrusted is the reason nobody understands science.”</li>
<li>“Religions are afraid of the skeptical thinking at the heart of science.”</li>
</ul></li>
<li><strong>Distrust of Science</strong>:
<ul>
<li>“Science has discredited itself. It works for politicians. It makes weapons. It lies about marijuana hazards. It ignores the dangers of Agent Orange, etc.”</li>
</ul></li>
<li><strong>Advocacy for Private Schools</strong>: “The public schools don’t work. Abandon them. Let’s have private schools only.”</li>
<li><strong>Blame on Permissiveness and Socialism</strong>: “We have let the advocates of permissiveness, fuzzy thinking, and rampant socialism destroy what was once a great educational system.”</li>
<li><strong>Criticism of School Leadership</strong>: “The school system has enough money. The problem is that the white males, usually coaches, who run the schools would never, and I mean never, hire an intellectual. They care more about the football team than the curriculum and hire only sub-mediocre, flag-waving, God-loving robots to teach.”</li>
<li><strong>Suppression of Logical Thinking</strong>: “What kind of students can emerge from schools that oppress, punish, and neglect logical thinking?”</li>
<li><strong>Opposition to Civil Liberties Organizations</strong>: “Release schools from the stranglehold of the ACLU, NEA, and others engaged in the breakdown of the discipline and competence in the schools.”</li>
<li><strong>Pessimism about Societal Change</strong>: “I’m afraid you have no understanding of the country in which you live. The people are incredibly ignorant and fearful. They will not tolerate listening to any new idea. Don’t you get it? The system survives only because it has an ignorant, God-fearing population.”</li>
<li><strong>Confirmation of the Problem</strong>: “I’m sometimes required to explain technological issues to congressional staffers. Believe me, there’s a problem in science education in this country.”</li>
</ul>
</section>
<section id="the-shared-responsibility-for-science-education" class="level3">
<h3 class="anchored" data-anchor-id="the-shared-responsibility-for-science-education">The Shared Responsibility for Science Education</h3>
<ul>
<li><strong>Stakeholders</strong>:
<ul>
<li>Parents and the voting public.</li>
<li>Local school boards.</li>
<li>The media.</li>
<li>Teachers and administrators.</li>
<li>Federal, state, and local governments.</li>
<li>Students themselves.</li>
</ul></li>
<li><strong>Interconnectedness of Issues</strong>: Teachers point to problems in earlier grades, while early childhood educators face challenges related to malnutrition, lack of resources at home, and societal issues.</li>
<li><strong>Intergenerational Impact</strong>: Improvements in one generation’s education can lead to larger improvements in the next.</li>
<li><strong>Dorothy Rich’s Key Skills</strong>: Focus on developing confidence, perseverance, caring, teamwork, common sense, problem-solving, skeptical thinking, and an aptitude for wonder.</li>
<li><strong>Nurturing Gifted Students</strong>: Recognizing and supporting children with special abilities and skills is crucial.</li>
<li><strong>Double Standard in Elitism</strong>: Challenging programs for gifted students are sometimes criticized as elitist, while intensive athletic training is not.</li>
</ul>
</section>
<section id="hope-for-the-future-science-museums-and-community-action" class="level3">
<h3 class="anchored" data-anchor-id="hope-for-the-future-science-museums-and-community-action">Hope for the Future: Science Museums and Community Action</h3>
<section id="the-power-of-science-museums" class="level4">
<h4 class="anchored" data-anchor-id="the-power-of-science-museums">The Power of Science Museums</h4>
<ul>
<li><strong>Engaging Exhibits</strong>:
<ul>
<li>Hands-on, interactive exhibits that awaken curiosity and spark interest in science.</li>
<li>Examples:
<ul>
<li>Meteorite exhibit prompting questions about space and Earth’s history.</li>
<li>Cholera epidemic map demonstrating the importance of sanitation.</li>
<li>Dark tunnel encouraging exploration through touch.</li>
<li>Reconstructions of ancient civilizations fostering perspective and understanding of different cultures.</li>
<li>Microscope revealing the hidden world of pond water.</li>
<li>Interactive computer simulations allowing exploration of climate change scenarios.</li>
</ul></li>
</ul></li>
<li><strong>Impact on Learning</strong>:
<ul>
<li>Museums complement school and home instruction by providing engaging experiences.</li>
<li>They inspire further exploration through reading, taking courses, and returning for more discovery.</li>
<li>They promote the development of scientific thinking.</li>
</ul></li>
<li><strong>IMAX and OMNIMAX Films</strong>:
<ul>
<li>Large-format films provide immersive experiences that deepen understanding and inspire awe.</li>
<li>Examples:
<ul>
<li>“To Fly” evokes a sense of wonder about flight.</li>
<li>“Blue Planet” promotes environmental awareness.</li>
</ul></li>
</ul></li>
<li><strong>Areas for Improvement</strong>:
<ul>
<li>Avoiding commercialization and product promotion.</li>
<li>Addressing the lack of focus on evolution in biology exhibits.</li>
<li>Incorporating content about the origins of life and the connection between humans and other primates.</li>
<li>Modernizing planetarium shows to focus on space exploration and the evolution of the universe.</li>
</ul></li>
<li><strong>Example of an Effective Exhibit</strong>: The Smithsonian’s Natural History Museum’s roach exhibit demonstrating the principles of evolution.</li>
<li><strong>The Awad Universe Model</strong>:
<ul>
<li>A meticulously detailed, scale model of the universe demonstrating the vastness of space and the interconnectedness of cosmic objects.</li>
<li>Praised by Isaac Asimov for its imaginative representation.</li>
<li>Currently unavailable for public display due to lack of space in major science museums.</li>
</ul></li>
</ul>
</section>
<section id="the-ithaca-sciencenter-a-community-success-story" class="level4">
<h4 class="anchored" data-anchor-id="the-ithaca-sciencenter-a-community-success-story">The Ithaca Sciencenter: A Community Success Story</h4>
<ul>
<li><strong>Vision</strong>: Debbie Levin and Ilma Levine, volunteer science teachers, aimed to make science accessible to all children, regardless of socioeconomic background.</li>
<li><strong>Community Support</strong>:
<ul>
<li>Initial community meeting generated enthusiasm and a board of directors.</li>
<li>Donations of space, materials, and labor from local businesses and individuals.</li>
<li>Bob Leathers, architect, donated plans for a permanent science center.</li>
<li>Charles Troutman, Cornell engineer, served as executive director.</li>
<li>National Association of Home Builders provided building materials.</li>
<li>Cornell fraternity members volunteered for demolition work.</li>
<li>2,200 townspeople donated 40,000 hours of construction labor.</li>
<li>Inmates contributed to construction as community service.</li>
</ul></li>
<li><strong>The Sciencenter</strong>:
<ul>
<li>The world’s only community-built science museum.</li>
<li>Features 75 interactive exhibits emphasizing scientific processes and principles.</li>
<li>Examples:
<ul>
<li>Magicam microscope.</li>
<li>National Lightning Detection Network connection.</li>
<li>Walk-in camera.</li>
<li>Fossil pit.</li>
<li>Boa constrictor exhibit.</li>
</ul></li>
</ul></li>
<li><strong>Impact</strong>:
<ul>
<li>Attracted 55,000 visitors from all 50 states and 60 countries in its first year.</li>
<li>Demonstrates the power of community collaboration to improve science education.</li>
</ul></li>
<li><strong>Youth Alive Program</strong>:
<ul>
<li>Funded by the DeWitt Wallace Reader’s Digest Fund.</li>
<li>Provides mentoring for teenagers in science, conflict resolution, and employment skills.</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-5" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-5">Conclusion</h3>
<ul>
<li>The problems in science education are complex and multifaceted, but not insurmountable.</li>
<li>Solutions require collaborative efforts from parents, educators, policymakers, communities, and students themselves.</li>
<li>Science museums and community initiatives like the Ithaca Sciencenter offer hope for the future by sparking curiosity, inspiring exploration, and fostering a love of learning.</li>
<li>By working together, we can build a better future for our children and equip them with the scientific literacy they need to thrive in the 21st century.</li>
</ul>
</section>
</section>
<section id="chapter-21-the-path-to-freedom" class="level2">
<h2 class="anchored" data-anchor-id="chapter-21-the-path-to-freedom">Chapter 21: The Path to Freedom</h2>
<section id="introduction-the-power-of-education" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-power-of-education">Introduction: The Power of Education</h3>
<ul>
<li><strong>Epigraph</strong>: “We must not believe the many who say that only free people ought to be educated, but we should rather believe the philosophers who say that only the educated are free.” - Epictetus, Roman philosopher and former slave, <em>Discourses</em>.</li>
<li><strong>Central Theme</strong>: Literacy and education are fundamental to achieving freedom, both literally and metaphorically.</li>
</ul>
</section>
<section id="frederick-douglasss-journey-to-literacy" class="level3">
<h3 class="anchored" data-anchor-id="frederick-douglasss-journey-to-literacy">Frederick Douglass’s Journey to Literacy</h3>
<section id="early-life-and-enslavement" class="level4">
<h4 class="anchored" data-anchor-id="early-life-and-enslavement">Early Life and Enslavement</h4>
<ul>
<li><strong>Frederick Bailey</strong>: Born into slavery in Maryland in the 1820s.</li>
<li><strong>Family Separation</strong>: Common practice to separate children from mothers before their first birthday. Douglass experienced this separation.</li>
<li><strong>Brutal Reality of Slavery</strong>:
<ul>
<li>Witnessed horrific abuse of slaves, including his own aunt.</li>
<li>Slaves indoctrinated with the idea of their inherent inferiority, supported by religious and societal institutions.</li>
<li><strong>Illiteracy as a Tool of Control</strong>: Whites punished for teaching slaves to read.</li>
<li><strong>Douglass’s Reflection</strong>: “To make a contented slave, it is necessary to make a thoughtless one. It is necessary to darken his moral and mental vision and, as far as possible, to annihilate the power of reason.”</li>
</ul></li>
<li><strong>Baltimore</strong>: At age 10, sold to Hugh and Sophia Auld in Baltimore.</li>
</ul>
</section>
<section id="discovering-the-mystery-of-reading" class="level4">
<h4 class="anchored" data-anchor-id="discovering-the-mystery-of-reading">Discovering the “Mystery of Reading”</h4>
<ul>
<li><strong>Exposure to Literacy</strong>: In Baltimore, Douglass encountered books, letters, and people who could read.</li>
<li><strong>Decoding the Connection</strong>: Observed the relationship between written letters and spoken sounds.</li>
<li><strong>Self-Education</strong>: Began studying <em>Webster’s Spelling Book</em> belonging to young Tommy Auld.</li>
<li><strong>Sophia Auld’s Assistance</strong>: Initially helped Douglass learn to read.</li>
</ul>
</section>
<section id="the-revelation-of-literacys-power" class="level4">
<h4 class="anchored" data-anchor-id="the-revelation-of-literacys-power">The Revelation of Literacy’s Power</h4>
<ul>
<li><strong>Hugh Auld’s Intervention</strong>:
<ul>
<li>Discovered Sophia teaching Douglass and became enraged.</li>
<li><strong>Auld’s Belief</strong>: Literacy would make Douglass unfit for slavery and impossible to control.</li>
</ul></li>
<li><strong>Douglass’s Realization</strong>: “I now understood the white man’s power to enslave the black man. From that moment, I understood the pathway from slavery to freedom.”</li>
<li><strong>Continued Pursuit of Literacy</strong>:
<ul>
<li>Douglass continued learning independently, including by engaging with white schoolchildren.</li>
<li>Began teaching other slaves to read.</li>
</ul></li>
</ul>
</section>
<section id="escape-and-advocacy" class="level4">
<h4 class="anchored" data-anchor-id="escape-and-advocacy">Escape and Advocacy</h4>
<ul>
<li><strong>Escape to Freedom</strong>: Literacy played a crucial role in Douglass’s escape to New England.</li>
<li><strong>Name Change</strong>: Adopted the name Frederick Douglass.</li>
<li><strong>Abolitionist Leader</strong>: Became a renowned orator, writer, and political leader, advocating for human rights and the end of slavery.</li>
</ul>
</section>
</section>
<section id="the-importance-of-literacy" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-literacy">The Importance of Literacy</h3>
<section id="historical-context" class="level4">
<h4 class="anchored" data-anchor-id="historical-context">Historical Context</h4>
<ul>
<li><strong>Oral Tradition</strong>: For most of human history, knowledge was transmitted orally, leading to distortion and loss over time.</li>
<li><strong>Revolution of Books</strong>: Books allowed for accurate preservation and transmission of information.</li>
</ul>
</section>
<section id="benefits-of-literacy" class="level4">
<h4 class="anchored" data-anchor-id="benefits-of-literacy">Benefits of Literacy</h4>
<ul>
<li><strong>Access to Knowledge</strong>: Allows interrogation of the past, understanding diverse perspectives, and learning from great minds.</li>
<li><strong>Personal Growth</strong>: Fosters contemplation and critical thinking.</li>
<li><strong>Democratic Participation</strong>: Enables informed engagement in a democratic society.</li>
</ul>
</section>
</section>
<section id="literacy-and-african-americans" class="level3">
<h3 class="anchored" data-anchor-id="literacy-and-african-americans">Literacy and African Americans</h3>
<section id="progress-since-emancipation" class="level4">
<h4 class="anchored" data-anchor-id="progress-since-emancipation">Progress Since Emancipation</h4>
<ul>
<li><strong>Significant Increase in Literacy Rates</strong>:
<ul>
<li>1860: ~5%</li>
<li>1890: 39%</li>
<li>1969: 96%</li>
</ul></li>
<li><strong>High School Graduation Rates</strong>: Increased from 7% in 1940 to 82% in 1992.</li>
</ul>
</section>
<section id="challenges-and-concerns" class="level4">
<h4 class="anchored" data-anchor-id="challenges-and-concerns">Challenges and Concerns</h4>
<ul>
<li><strong>Quality of Education</strong>: Questions remain about the quality of education and literacy standards for all ethnic groups.</li>
<li><strong>Adult Literacy</strong>: National surveys indicate millions of barely literate adults in the U.S.</li>
<li><strong>Declining Literacy Among Young Adults</strong>: Recent studies show a significant decline.</li>
<li><strong>Correlation with Poverty and Incarceration</strong>:
<ul>
<li>Low literacy levels correlate with poverty and higher rates of imprisonment.</li>
<li>Illiteracy hinders understanding of ballot initiatives and participation in voting.</li>
</ul></li>
</ul>
</section>
</section>
<section id="barriers-to-literacy" class="level3">
<h3 class="anchored" data-anchor-id="barriers-to-literacy">Barriers to Literacy</h3>
<section id="environmental-factors" class="level4">
<h4 class="anchored" data-anchor-id="environmental-factors">Environmental Factors</h4>
<ul>
<li><strong>Lack of Exposure to Reading</strong>: Growing up in households without books or a culture of reading can hinder literacy development.</li>
<li><strong>Inadequate Education</strong>: Rote learning and culturally irrelevant materials can make learning to read difficult.</li>
<li><strong>Social and Emotional Challenges</strong>: Poverty, neglect, and negative messages about learning ability can create significant obstacles.</li>
</ul>
</section>
<section id="nutritional-deficiencies" class="level4">
<h4 class="anchored" data-anchor-id="nutritional-deficiencies">Nutritional Deficiencies</h4>
<ul>
<li><strong>Cognitive Impairment</strong>:
<ul>
<li>Research shows that undernutrition, even mild, can lead to diminished cognitive abilities.</li>
<li>The body prioritizes survival over growth and learning in cases of food scarcity.</li>
</ul></li>
<li><strong>Iron Deficiency Anemia</strong>:
<ul>
<li>Affects attention span and memory, potentially impacting learning into adulthood.</li>
<li>Common among low-income children.</li>
</ul></li>
<li><strong>Lead Poisoning</strong>: Endemic in inner cities and also causes learning deficits.</li>
<li><strong>Prevalence of Childhood Poverty</strong>:
<ul>
<li>Increasing poverty rates in the U.S. contribute to undernutrition and its consequences.</li>
<li>U.S. has the highest rate of childhood poverty among industrialized nations.</li>
</ul></li>
</ul>
</section>
<section id="addressing-malnutrition" class="level4">
<h4 class="anchored" data-anchor-id="addressing-malnutrition">Addressing Malnutrition</h4>
<ul>
<li><strong>Effective Programs</strong>: WIC, School Breakfast and Lunch Programs, and Summer Food Service Program have shown positive results.</li>
<li><strong>Reversible and Irreversible Damage</strong>: Some effects of undernutrition can be reversed with interventions like iron repletion therapy, but not all.</li>
</ul>
</section>
<section id="dyslexia" class="level4">
<h4 class="anchored" data-anchor-id="dyslexia">Dyslexia</h4>
<ul>
<li><strong>Prevalence</strong>: Affects a significant portion of the population, regardless of socioeconomic status.</li>
<li><strong>Causes</strong>: Can be biological, psychological, or environmental.</li>
<li><strong>Intervention</strong>: Effective methods exist to help individuals with dyslexia learn to read.</li>
</ul>
</section>
</section>
<section id="improving-literacy" class="level3">
<h3 class="anchored" data-anchor-id="improving-literacy">Improving Literacy</h3>
<section id="educational-reform" class="level4">
<h4 class="anchored" data-anchor-id="educational-reform">Educational Reform</h4>
<ul>
<li><strong>Engaging Curriculum</strong>: Move away from rote memorization and towards critical thinking and culturally relevant materials.</li>
<li><strong>Access to Books and Resources</strong>: Ensure classrooms have adequate books and resources.</li>
<li><strong>Adult Literacy Programs</strong>: Increase the availability and quality of adult literacy classes.</li>
</ul>
</section>
<section id="early-childhood-education" class="level4">
<h4 class="anchored" data-anchor-id="early-childhood-education">Early Childhood Education</h4>
<ul>
<li><strong>Head Start</strong>:
<ul>
<li>Highly effective in preparing children for reading but only reaches a fraction of eligible preschoolers.</li>
<li>Faces funding cuts and political opposition.</li>
</ul></li>
<li><strong>The Bell Curve Controversy</strong>: Critics argue that Head Start’s limited success is due to inherent intellectual inferiority, while others argue that inadequate funding is the primary issue.</li>
<li><strong>Family Literacy Programs</strong>:
<ul>
<li>Programs like the National Center for Family Literacy involve both children and parents in learning to read together.</li>
<li>Have shown significant positive impacts on children’s academic performance and parents’ self-confidence and life outcomes.</li>
</ul></li>
</ul>
</section>
</section>
<section id="literacy-and-social-justice" class="level3">
<h3 class="anchored" data-anchor-id="literacy-and-social-justice">Literacy and Social Justice</h3>
<section id="historical-perspective" class="level4">
<h4 class="anchored" data-anchor-id="historical-perspective">Historical Perspective</h4>
<ul>
<li><strong>Tyrants and Literacy</strong>: Throughout history, oppressive regimes have recognized the power of literacy to inspire dissent.</li>
<li><strong>Early American Literacy</strong>: The U.S. historically had high literacy rates, contributing to its democratic development and economic growth.</li>
</ul>
</section>
<section id="current-challenges" class="level4">
<h4 class="anchored" data-anchor-id="current-challenges">Current Challenges</h4>
<ul>
<li><strong>Declining Literacy Standards</strong>: U.S. literacy rates have fallen behind other nations, with many individuals struggling to comprehend basic materials.</li>
<li><strong>The Cycle of Poverty and Illiteracy</strong>: Illiteracy contributes to a cycle of poverty, hindering social mobility and perpetuating inequality.</li>
</ul>
</section>
<section id="the-cost-of-illiteracy" class="level4">
<h4 class="anchored" data-anchor-id="the-cost-of-illiteracy">The Cost of Illiteracy</h4>
<ul>
<li><strong>Societal Burden</strong>: Illiteracy leads to increased healthcare costs, crime rates, and the need for special education services.</li>
<li><strong>Lost Potential</strong>: Limits economic productivity and prevents individuals from reaching their full potential.</li>
</ul>
</section>
</section>
<section id="frederick-douglasss-legacy" class="level3">
<h3 class="anchored" data-anchor-id="frederick-douglasss-legacy">Frederick Douglass’s Legacy</h3>
<section id="early-advocacy" class="level4">
<h4 class="anchored" data-anchor-id="early-advocacy">Early Advocacy</h4>
<ul>
<li><strong>Nantucket Address</strong>: Douglass’s powerful speech in 1841 challenged the prevailing view of enslaved people as less than human.</li>
<li><strong>William Lloyd Garrison’s Support</strong>: Garrison, a leading abolitionist, recognized Douglass’s eloquence and humanity.</li>
</ul>
</section>
<section id="continued-activism" class="level4">
<h4 class="anchored" data-anchor-id="continued-activism">Continued Activism</h4>
<ul>
<li><strong>Author, Editor, and Publisher</strong>: Douglass used his writing and publishing to advocate for human rights.</li>
<li><strong>International Speaker</strong>: Spoke out against slavery and injustice both in the U.S. and abroad.</li>
<li><strong>Government Advisor</strong>: Served as the first African American in a high advisory position in the U.S. government.</li>
</ul>
</section>
<section id="civil-war-and-reconstruction" class="level4">
<h4 class="anchored" data-anchor-id="civil-war-and-reconstruction">Civil War and Reconstruction</h4>
<ul>
<li><strong>Advisor to Lincoln</strong>: Consulted with President Lincoln on issues related to slavery and the war.</li>
<li><strong>Advocacy for Black Soldiers</strong>: Successfully advocated for the arming of ex-slaves and for equal treatment of African American soldiers.</li>
<li><strong>Critique of Southern Religion</strong>: Condemned the role of religion in justifying slavery.</li>
</ul>
</section>
<section id="social-justice-advocacy" class="level4">
<h4 class="anchored" data-anchor-id="social-justice-advocacy">Social Justice Advocacy</h4>
<ul>
<li><strong>Opposition to Native American Genocide</strong>: Spoke out against the mistreatment of Native Americans.</li>
<li><strong>Support for Women’s Suffrage</strong>: Was the only man to publicly support women’s right to vote at the Seneca Falls Convention in 1848.</li>
</ul>
</section>
<section id="death-and-enduring-impact" class="level4">
<h4 class="anchored" data-anchor-id="death-and-enduring-impact">Death and Enduring Impact</h4>
<ul>
<li><strong>Death in 1895</strong>: Died after a lifetime of advocating for human rights.</li>
<li><strong>Lasting Legacy</strong>: Douglass’s life and work demonstrate the transformative power of literacy and the importance of education in achieving freedom and equality.</li>
</ul>
</section>
</section>
<section id="conclusion-6" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-6">Conclusion</h3>
<ul>
<li><strong>Literacy as a Pathway to Freedom</strong>: Douglass’s life serves as a powerful reminder that literacy is essential for individual and societal progress.</li>
<li><strong>Multiple Forms of Slavery and Freedom</strong>: Literacy can liberate individuals from various forms of oppression and empower them to participate fully in society.</li>
<li><strong>Continuing Relevance</strong>: Douglass’s message about the importance of literacy remains relevant today, as societies continue to grapple with issues of inequality and access to education.</li>
</ul>
</section>
</section>
<section id="chapter-22-significance-junkies" class="level2">
<h2 class="anchored" data-anchor-id="chapter-22-significance-junkies">Chapter 22: Significance Junkies</h2>
<section id="introduction-the-state-of-science-on-television" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-state-of-science-on-television">Introduction: The State of Science on Television</h3>
<section id="the-commercialization-of-television" class="level4">
<h4 class="anchored" data-anchor-id="the-commercialization-of-television">The Commercialization of Television</h4>
<ul>
<li><strong>Money as the Driving Force:</strong> A primary model for understanding commercial and public television programming is that “Money is everything.” (Quote from source material)</li>
<li><strong>Impact on Programming:</strong> The focus on profit has led to:
<ul>
<li>Decline in network news and news specials.</li>
<li>Evasion of FCC mandates for quality children’s programming.
<ul>
<li>Example: Cartoon series misrepresenting Pleistocene era and portraying dinosaurs as pets to claim educational value.</li>
</ul></li>
</ul></li>
<li><strong>Dumbing Down of Content:</strong> Public television faces funding cuts, and commercial programming exhibits a trend of decreasing intellectual quality.</li>
</ul>
</section>
<section id="hope-for-science-programming" class="level4">
<h4 class="anchored" data-anchor-id="hope-for-science-programming">Hope for Science Programming</h4>
<ul>
<li><strong>Network Owners’ Responsibility:</strong> Network owners and producers, concerned about the future, may feel a responsibility for their nation’s well-being and their children’s education.</li>
<li><strong>Evidence of Public Interest:</strong> There is evidence that successful science programming exists and that audiences desire more.</li>
<li><strong>Optimism for the Future:</strong> Sagan expresses hope for the future of skillfully and appealingly presented science content on major networks worldwide.</li>
</ul>
</section>
</section>
<section id="basketball-as-a-tool-for-teaching-science" class="level3">
<h3 class="anchored" data-anchor-id="basketball-as-a-tool-for-teaching-science">Basketball as a Tool for Teaching Science</h3>
<section id="the-evolution-of-basketball" class="level4">
<h4 class="anchored" data-anchor-id="the-evolution-of-basketball">The Evolution of Basketball</h4>
<ul>
<li><strong>A Relatively New Sport:</strong> Basketball is a recent invention compared to sports with ancient origins (baseball, soccer, football, lacrosse, hockey).
<ul>
<li>Initially, baskets lacked holes, requiring retrieval by climbing stairs.</li>
</ul></li>
<li><strong>Synthesis of Athleticism and Intellect:</strong> In the hands of predominantly African-American players, basketball has evolved into a sport that combines:
<ul>
<li>Intelligence</li>
<li>Precision</li>
<li>Courage</li>
<li>Audacity</li>
<li>Anticipation</li>
<li>Artifice</li>
<li>Teamwork</li>
<li>Elegance</li>
<li>Grace</li>
</ul></li>
<li><strong>Examples of Skill and Finesse:</strong>
<ul>
<li>Muggsy Bogues maneuvering among taller players.</li>
<li>Michael Jordan’s powerful moves.</li>
<li>Larry Bird’s precise passes.</li>
<li>Kareem Abdul-Jabbar’s signature skyhook.</li>
</ul></li>
</ul>
</section>
<section id="scientific-concepts-in-basketball" class="level4">
<h4 class="anchored" data-anchor-id="scientific-concepts-in-basketball">Scientific Concepts in Basketball</h4>
<ul>
<li><strong>Understanding Statistics:</strong> Free throw averages require knowledge of converting fractions to decimals.</li>
<li><strong>Newton’s Laws of Motion:</strong> Layups demonstrate Newton’s First Law.</li>
<li><strong>Projectile Motion:</strong> Every shot follows a parabolic arc governed by the same physics as:
<ul>
<li>Ballistic missiles</li>
<li>Earth’s orbit</li>
<li>Spacecraft trajectories</li>
</ul></li>
<li><strong>Orbital Mechanics:</strong> During a slam dunk, the player’s center of mass briefly orbits the Earth’s center.</li>
<li><strong>Precision and Gravity:</strong> Accurate shooting requires precise speed; a 1% error significantly impacts the shot’s trajectory.</li>
<li><strong>Aerodynamics:</strong> Three-point shooters, consciously or not, compensate for air resistance.</li>
<li><strong>Thermodynamics:</strong> Bouncing basketballs demonstrate the Second Law of Thermodynamics (energy dissipation).</li>
<li><strong>Shockwaves:</strong> Shattering backboards illustrate shockwave propagation.</li>
<li><strong>Conservation of Angular Momentum:</strong> Spin shots off the backboard demonstrate this principle.</li>
<li><strong>Higher-Dimensional Geometry:</strong> The rule against touching the ball within the cylinder above the basket introduces concepts of n-dimensional objects.</li>
</ul>
</section>
<section id="the-untapped-potential-of-sports-in-education" class="level4">
<h4 class="anchored" data-anchor-id="the-untapped-potential-of-sports-in-education">The Untapped Potential of Sports in Education</h4>
<ul>
<li><strong>Motivation Through Sports Statistics:</strong> Sagan’s personal experience with baseball statistics demonstrates how interest in sports can facilitate learning (decimals).
<ul>
<li>Critique of the common error of saying someone is batting 1,000 instead of 1.000 or 1.</li>
</ul></li>
<li><strong>Comparison with Financial Pages:</strong> Financial pages, dense with statistics and lacking introductory explanations, are readily read by those motivated by financial interests.</li>
<li><strong>Call for Application to Science:</strong> Sagan advocates for using sports to teach math, science, and technology, leveraging the inherent motivation associated with sports.</li>
</ul>
</section>
</section>
<section id="the-hot-hand-fallacy-in-basketball" class="level3">
<h3 class="anchored" data-anchor-id="the-hot-hand-fallacy-in-basketball">The “Hot Hand” Fallacy in Basketball</h3>
<section id="the-myth-of-the-streak" class="level4">
<h4 class="anchored" data-anchor-id="the-myth-of-the-streak">The Myth of the Streak</h4>
<ul>
<li><strong>The Hot Hand Belief:</strong> The widespread belief that players experience streaks of exceptional performance (“hot hand”) or periods of poor performance (“cold hand”).</li>
<li><strong>Michael Jordan Example:</strong> Anecdote of Jordan’s remarkable streak of three-point shots.</li>
<li><strong>Magical Thinking vs.&nbsp;Scientific Thinking:</strong> Attributing streaks to mysterious powers or jinxes is magical, not scientific thinking.</li>
</ul>
</section>
<section id="statistical-explanation-of-streaks" class="level4">
<h4 class="anchored" data-anchor-id="statistical-explanation-of-streaks">Statistical Explanation of Streaks</h4>
<ul>
<li><strong>Streakiness as an Expected Outcome:</strong> Streakiness is a normal characteristic of random events; the absence of streaks would be more surprising.</li>
<li><strong>Coin Flip Analogy:</strong> A sequence of coin flips demonstrating a seemingly non-random streak (8 heads out of 10) is explained by considering the larger, less notable sequence in which it’s embedded.</li>
<li><strong>Enumeration of Favorable Circumstances (Baloney Detection Kit Fallacy):</strong> Selectively focusing on favorable outcomes while ignoring others creates a false impression of significance.</li>
<li><strong>Probability and the Hot Hand:</strong> If a player’s shooting percentage is 50% and cannot be consciously improved, the likelihood of a “hot hand” is equivalent to the likelihood of getting a streak of heads in coin flips.</li>
</ul>
</section>
<section id="research-on-the-hot-hand" class="level4">
<h4 class="anchored" data-anchor-id="research-on-the-hot-hand">Research on the Hot Hand</h4>
<ul>
<li><strong>Tom Gilovich’s Study:</strong> Research by Cornell psychology professor Tom Gilovich demonstrates that basketball streaks do not occur more frequently than expected by chance.
<ul>
<li>Analysis of NBA players’ shots showed that success after making baskets was no more likely than after misses.</li>
<li>This held true for both field goals and free throws (where defense is not a factor).</li>
</ul></li>
<li><strong>Possible Attenuation by Defense:</strong> Some reduction in streaks might be attributed to increased defensive attention on “hot” players.</li>
</ul>
</section>
<section id="the-due-for-a-hit-myth-in-baseball" class="level4">
<h4 class="anchored" data-anchor-id="the-due-for-a-hit-myth-in-baseball">The “Due for a Hit” Myth in Baseball</h4>
<ul>
<li><strong>Contrary Belief in Baseball:</strong> The idea that a player batting below their average is “due for a hit” is another misconception related to the hot hand fallacy.</li>
<li><strong>Statistical Reality:</strong> This is as inaccurate as believing that a series of heads in coin flips increases the chance of tails on the next flip.</li>
<li><strong>Difficulty Finding Non-Random Streaks:</strong> Streaks exceeding statistical expectations are rare and difficult to prove.</li>
</ul>
</section>
<section id="the-human-need-for-significance" class="level4">
<h4 class="anchored" data-anchor-id="the-human-need-for-significance">The Human Need for Significance</h4>
<ul>
<li><strong>Discomfort with Statistical Explanations:</strong> Despite statistical evidence, the notion of random streaks doesn’t always feel intuitively true. Players, coaches, and fans often believe in the hot hand.</li>
<li><strong>Red Auerbach’s Response:</strong> Anecdote illustrating the resistance to statistical explanations of streaks.</li>
<li><strong>Seeking Meaning in Randomness:</strong> Humans are inherently inclined to seek meaning, even in random patterns (we are “significance junkies”).</li>
</ul>
</section>
<section id="implications-beyond-sports" class="level4">
<h4 class="anchored" data-anchor-id="implications-beyond-sports">Implications Beyond Sports</h4>
<ul>
<li><strong>No Diminishment of Skill:</strong> The absence of magical streaks doesn’t reduce players to mere puppets of chance; their average performance reflects their skill. The discussion is solely about streak frequency and duration.</li>
<li><strong>The Appeal of Mystification:</strong> Attributing streaks to external forces is more entertaining than statistical analysis, but this type of thinking can be problematic in other areas of life.</li>
<li><strong>Potential for Harm:</strong> While harmless in sports, habitually seeking meaning in random events can lead to flawed reasoning and poor decisions in more consequential domains.</li>
</ul>
</section>
</section>
<section id="the-portrayal-of-science-and-scientists-on-television" class="level3">
<h3 class="anchored" data-anchor-id="the-portrayal-of-science-and-scientists-on-television">The Portrayal of Science and Scientists on Television</h3>
<section id="negative-stereotypes-of-scientists" class="level4">
<h4 class="anchored" data-anchor-id="negative-stereotypes-of-scientists">Negative Stereotypes of Scientists</h4>
<ul>
<li><strong>Mad Scientist Trope:</strong> Examples from Gilligan’s Island and other media illustrate the common portrayal of scientists as “mad” or morally compromised.
<ul>
<li>“Scientist yes, mad no,” giggles the mad scientist in Gilligan’s Island.</li>
<li>Cartoon superheroes often lecture “scientists” about ethics.</li>
</ul></li>
<li><strong>Common Characteristics of “Scientists” in Children’s TV:</strong>
<ul>
<li>Lust for power.</li>
<li>Insensitivity to others.</li>
<li>Craziness.</li>
</ul></li>
<li><strong>Message Conveyed:</strong> The message conveyed is that science is inherently dangerous and scientists are eccentric and potentially harmful.</li>
</ul>
</section>
<section id="the-ethical-ambiguity-of-science-and-technology" class="level4">
<h4 class="anchored" data-anchor-id="the-ethical-ambiguity-of-science-and-technology">The Ethical Ambiguity of Science and Technology</h4>
<ul>
<li><strong>Acknowledging Potential Dangers:</strong> Sagan acknowledges that scientific applications can be dangerous and that most technological advancements have ethical implications (e.g., stone tools, fire).</li>
<li><strong>Dual Nature of Technology:</strong> Advances can be used for good or ill, but children’s programming often focuses only on the negative potential.</li>
</ul>
</section>
<section id="the-missing-positive-aspects-of-science" class="level4">
<h4 class="anchored" data-anchor-id="the-missing-positive-aspects-of-science">The Missing Positive Aspects of Science</h4>
<ul>
<li><strong>Lack of Representation of Joy and Wonder:</strong> Television rarely portrays the joy of scientific discovery, the excitement of understanding the universe, or the intellectual fulfillment of scientific knowledge.</li>
<li><strong>Ignoring the Benefits of Science:</strong> The immense contributions of science and technology to human welfare (e.g., medicine, agriculture) are often overlooked.
<ul>
<li>Exception: The Professor in Gilligan’s Island occasionally uses science to solve practical problems.</li>
</ul></li>
</ul>
</section>
<section id="the-need-for-scientific-literacy" class="level4">
<h4 class="anchored" data-anchor-id="the-need-for-scientific-literacy">The Need for Scientific Literacy</h4>
<ul>
<li><strong>Importance of Science in Solving Modern Problems:</strong> Sagan emphasizes the importance of scientific understanding in addressing complex contemporary challenges.</li>
<li><strong>Discouraging Effect of Negative Portrayals:</strong> The negative depictions of science on television are unlikely to inspire young people to pursue careers in science or engineering.</li>
</ul>
</section>
</section>
<section id="pseudoscience-and-uncritical-inquiry-on-television" class="level3">
<h3 class="anchored" data-anchor-id="pseudoscience-and-uncritical-inquiry-on-television">Pseudoscience and Uncritical Inquiry on Television</h3>
<section id="prevalence-of-pseudoscientific-programming" class="level4">
<h4 class="anchored" data-anchor-id="prevalence-of-pseudoscientific-programming">Prevalence of Pseudoscientific Programming</h4>
<ul>
<li><strong>Credulous TV Series and Specials:</strong> Numerous television programs promote uncritical acceptance of paranormal and pseudoscientific claims:
<ul>
<li>ESP</li>
<li>Channeling</li>
<li>Bermuda Triangle</li>
<li>UFOs</li>
<li>Ancient astronauts</li>
<li>Bigfoot</li>
</ul></li>
<li><strong>“In Search Of” as an Example:</strong> This series, despite its disclaimer about balanced views, often presents paranormal claims as fact without exploring alternative explanations.
<ul>
<li>The program assumes that statements made on camera are true.</li>
<li>Consideration of evidence-based decision-making is absent.</li>
</ul></li>
</ul>
</section>
<section id="distortion-of-evidence-and-lack-of-skepticism" class="level4">
<h4 class="anchored" data-anchor-id="distortion-of-evidence-and-lack-of-skepticism">Distortion of Evidence and Lack of Skepticism</h4>
<ul>
<li><strong>“Sightings and Unsolved Mysteries” and Similar Shows:</strong> These programs actively discourage rational explanations, favoring sensationalism over skepticism.</li>
<li><strong>“In Search Of” and Biased Presentations:</strong> This series often selects the most outlandish paranormal explanation over mundane scientific ones, even when the latter are more plausible.
<ul>
<li>Example: An author promoting the existence of a planet beyond Pluto based on ancient Sumerian seals is presented without mentioning the lack of astronomical evidence.</li>
</ul></li>
<li><strong>Inaccurate Visuals:</strong> The program uses visuals indiscriminately, often mismatching images with the narration.
<ul>
<li>Examples: Showing a mammoth while discussing dinosaurs, a shuttle liftoff while describing a hovercraft, mountains while talking about lakes.</li>
</ul></li>
</ul>
</section>
<section id="the-x-files-and-the-skeptical-facade" class="level4">
<h4 class="anchored" data-anchor-id="the-x-files-and-the-skeptical-facade">“The X-Files” and the Skeptical Facade</h4>
<ul>
<li><strong>Skepticism as a Superficial Element:</strong> “The X-Files,” despite claiming to investigate paranormal claims skeptically, heavily favors the reality of aliens, strange powers, and government cover-ups.</li>
<li><strong>Rare Debunking of Paranormal Claims:</strong> Hoaxes, psychological explanations, or natural phenomena are rarely presented as solutions.</li>
</ul>
</section>
<section id="a-proposal-for-a-skeptical-investigative-series" class="level4">
<h4 class="anchored" data-anchor-id="a-proposal-for-a-skeptical-investigative-series">A Proposal for a Skeptical Investigative Series</h4>
<ul>
<li><strong>“Scooby-Doo” Model for Adults:</strong> Sagan suggests a series similar to the children’s cartoon “Scooby-Doo,” where paranormal claims are investigated and consistently debunked with rational explanations.</li>
<li><strong>Dramatic Tension through Unmasking Deception:</strong> The series could focus on revealing how misperceptions and hoaxes create the illusion of paranormal events.</li>
<li><strong>Maintaining a Skeptical Perspective:</strong> One investigator could consistently hope for a genuine paranormal case, but always be disappointed by the eventual mundane explanation.</li>
</ul>
</section>
</section>
<section id="scientific-inaccuracies-in-science-fiction" class="level3">
<h3 class="anchored" data-anchor-id="scientific-inaccuracies-in-science-fiction">Scientific Inaccuracies in Science Fiction</h3>
<section id="star-trek-and-biological-implausibility" class="level4">
<h4 class="anchored" data-anchor-id="star-trek-and-biological-implausibility">“Star Trek” and Biological Implausibility</h4>
<ul>
<li><strong>Vulcan-Human Hybrid:</strong> The concept of Spock as a hybrid of human and Vulcan species is genetically improbable.</li>
<li><strong>Precedent for Alien-Human Hybrids:</strong> This idea in popular culture may have influenced the later prevalence of alien-human hybrids in abduction stories.</li>
</ul>
</section>
<section id="limited-alien-diversity" class="level4">
<h4 class="anchored" data-anchor-id="limited-alien-diversity">Limited Alien Diversity</h4>
<ul>
<li><strong>Humanoid Aliens:</strong> Despite numerous alien species in “Star Trek,” most are visually similar to humans, likely due to budget constraints (actors and latex masks).</li>
<li><strong>Contradiction of Evolutionary Principles:</strong> This portrayal contradicts the randomness of evolution, which would likely produce vastly different alien forms and technological levels.</li>
</ul>
</section>
<section id="incompetent-science-in-other-programs" class="level4">
<h4 class="anchored" data-anchor-id="incompetent-science-in-other-programs">Incompetent Science in Other Programs</h4>
<ul>
<li><strong>Casual Science Errors:</strong> Even minor scientific details in non-science-focused programs are often inaccurate.</li>
<li><strong>Example: “Star Wars” and Parsecs:</strong> The film “Star Wars” incorrectly uses “parsec” as a unit of speed instead of distance.</li>
</ul>
</section>
<section id="simple-solutions-for-accuracy" class="level4">
<h4 class="anchored" data-anchor-id="simple-solutions-for-accuracy">Simple Solutions for Accuracy</h4>
<ul>
<li><strong>Hiring Scientific Consultants:</strong> Sagan suggests that hiring graduate students to review scripts for scientific accuracy would be a cost-effective way to improve the portrayal of science.</li>
<li><strong>Potential Benefits:</strong> Improved scientific accuracy could enhance plots and educate audiences.</li>
</ul>
</section>
</section>
<section id="the-scarcity-of-real-science-on-television" class="level3">
<h3 class="anchored" data-anchor-id="the-scarcity-of-real-science-on-television">The Scarcity of Real Science on Television</h3>
<section id="dominance-of-pseudoscience-and-technology" class="level4">
<h4 class="anchored" data-anchor-id="dominance-of-pseudoscience-and-technology">Dominance of Pseudoscience and Technology</h4>
<ul>
<li><strong>Abundance of Pseudoscience:</strong> Television caters to the gullible with ample pseudoscientific content.</li>
<li><strong>Focus on Medicine and Technology:</strong> Medicine and technology are frequently covered, but genuine science is rare, especially on major commercial networks.</li>
</ul>
</section>
<section id="network-executives-misconceptions" class="level4">
<h4 class="anchored" data-anchor-id="network-executives-misconceptions">Network Executives’ Misconceptions</h4>
<ul>
<li><strong>Fear of Low Ratings:</strong> Network executives often believe that science programming will lead to lower ratings and reduced profits, prioritizing profit over educational value.</li>
</ul>
</section>
<section id="lack-of-dedicated-science-staff" class="level4">
<h4 class="anchored" data-anchor-id="lack-of-dedicated-science-staff">Lack of Dedicated Science Staff</h4>
<ul>
<li><strong>“Science Correspondents” Covering Non-Science:</strong> Network employees with “Science Correspondent” titles primarily report on medicine and technology, not scientific discoveries.</li>
<li><strong>Absence of Science Journal Monitoring:</strong> Networks likely lack dedicated staff to track scientific journals (e.g., Nature, Science) for newsworthy findings.</li>
</ul>
</section>
<section id="missed-opportunities-for-science-reporting" class="level4">
<h4 class="anchored" data-anchor-id="missed-opportunities-for-science-reporting">Missed Opportunities for Science Reporting</h4>
<ul>
<li><strong>Nobel Prize Announcements:</strong> Nobel Prize announcements offer excellent opportunities to explain significant scientific achievements, but coverage often reduces them to potential medical applications (“may one day lead to a cure for cancer”).</li>
</ul>
</section>
<section id="absence-of-science-in-other-tv-formats" class="level4">
<h4 class="anchored" data-anchor-id="absence-of-science-in-other-tv-formats">Absence of Science in Other TV Formats</h4>
<ul>
<li><strong>Talk Shows and News Programs:</strong> Science is largely absent from radio and television talk shows, including Sunday morning news programs.</li>
<li><strong>Lack of Presidential Engagement with Science:</strong> Intelligent commentary on science from U.S. presidents is rare.</li>
</ul>
</section>
<section id="the-need-for-science-focused-drama" class="level4">
<h4 class="anchored" data-anchor-id="the-need-for-science-focused-drama">The Need for Science-Focused Drama</h4>
<ul>
<li><strong>Absence of Scientist Heroes:</strong> Sagan laments the lack of TV dramas featuring scientists as heroes dedicated to understanding the universe.</li>
</ul>
</section>
<section id="missed-educational-opportunities" class="level4">
<h4 class="anchored" data-anchor-id="missed-educational-opportunities">Missed Educational Opportunities</h4>
<ul>
<li><strong>DNA Testing in the Media:</strong> The widespread discussion of DNA testing during high-profile trials offers a prime opportunity for educational programs on genetics and heredity, yet such programs are lacking.</li>
<li><strong>Even Television Technology Unexplained:</strong> Sagan points out that even the workings of television itself are rarely explained accurately and comprehensibly on television.</li>
</ul>
</section>
</section>
<section id="televisions-potential-and-failure-in-science-education" class="level3">
<h3 class="anchored" data-anchor-id="televisions-potential-and-failure-in-science-education">Television’s Potential and Failure in Science Education</h3>
<section id="televisions-power-and-unfulfilled-potential" class="level4">
<h4 class="anchored" data-anchor-id="televisions-power-and-unfulfilled-potential">Television’s Power and Unfulfilled Potential</h4>
<ul>
<li><strong>Television as the Most Effective Medium:</strong> Television is the most powerful medium for promoting interest in science, but it’s currently underutilized for this purpose.</li>
<li><strong>Perpetuating Negative Stereotypes:</strong> Television continues to reinforce the “mad scientist” trope while failing to convey the positive aspects of science.</li>
</ul>
</section>
<section id="public-ignorance-and-entertainment-focus" class="level4">
<h4 class="anchored" data-anchor-id="public-ignorance-and-entertainment-focus">Public Ignorance and Entertainment Focus</h4>
<ul>
<li><strong>American Polls on Public Knowledge:</strong> Polls from the early 1990s reveal widespread ignorance about basic scientific and historical facts, while awareness of celebrity scandals is extremely high.</li>
<li><strong>The Price of Entertainment:</strong> Sagan suggests that the United States’ focus on entertainment comes at the cost of public knowledge and understanding.</li>
</ul>
</section>
<section id="positive-signs-and-remaining-challenges" class="level4">
<h4 class="anchored" data-anchor-id="positive-signs-and-remaining-challenges">Positive Signs and Remaining Challenges</h4>
<ul>
<li><strong>Public Desire for Science Programming:</strong> Surveys in Canada and the United States indicate a public desire for more science programming.</li>
<li><strong>Examples of Good Science Programming:</strong>
<ul>
<li>PBS’s “Nova” series.</li>
<li>Discovery and Learning channels.</li>
<li>Canadian Broadcasting Company.</li>
<li>Bill Nye’s “The Science Guy” (PBS).</li>
</ul></li>
<li><strong>Inadequate Network Response:</strong> Despite public interest and the potential benefits of increased scientific literacy, network programming has not adequately reflected this demand.</li>
</ul>
</section>
</section>
<section id="proposals-for-increasing-science-on-television" class="level3">
<h3 class="anchored" data-anchor-id="proposals-for-increasing-science-on-television">Proposals for Increasing Science on Television</h3>
<section id="integrating-science-into-existing-formats" class="level4">
<h4 class="anchored" data-anchor-id="integrating-science-into-existing-formats">Integrating Science into Existing Formats</h4>
<ul>
<li><strong>Science on News and Talk Shows:</strong> Incorporate discussions of scientific wonders and the process of discovery into news and talk programs, highlighting the human drama inherent in scientific endeavors.</li>
<li><strong>“Solved Mysteries” with Rational Explanations:</strong> Create a series similar to “Unsolved Mysteries” but focused on providing scientific and rational solutions to puzzling cases, including those in forensic medicine and epidemiology.</li>
</ul>
</section>
<section id="exposing-deception-and-misinformation" class="level4">
<h4 class="anchored" data-anchor-id="exposing-deception-and-misinformation">Exposing Deception and Misinformation</h4>
<ul>
<li><strong>“Ring My Bells Again”:</strong> A series revisiting historical instances of government deception and media complicity, promoting critical thinking and media literacy.
<ul>
<li>Suggested episodes: The Gulf of Tonkin incident and the post-1945 irradiation of American citizens and military personnel.</li>
</ul></li>
<li><strong>Series on Mistakes by Authority Figures:</strong> A series examining errors made by prominent scientists, national leaders, and religious figures, highlighting the importance of skepticism and critical evaluation.</li>
</ul>
</section>
<section id="demystifying-pseudoscience" class="level4">
<h4 class="anchored" data-anchor-id="demystifying-pseudoscience">Demystifying Pseudoscience</h4>
<ul>
<li><strong>Exposing Paranormal Claims:</strong> Regular programs debunking pseudoscientific claims and demonstrating how seemingly paranormal phenomena can be explained through misperception, trickery, or natural occurrences.
<ul>
<li>“How-to” segments on bending spoons, reading minds, appearing to predict the future, performing fake psychic surgery, doing “cold reads,” and manipulating audiences.</li>
<li>Emphasis on “learning by doing” to expose the methods behind these illusions.</li>
</ul></li>
</ul>
</section>
<section id="enhancing-visual-resources-and-promoting-debate" class="level4">
<h4 class="anchored" data-anchor-id="enhancing-visual-resources-and-promoting-debate">Enhancing Visual Resources and Promoting Debate</h4>
<ul>
<li><strong>Computer Graphics Facility:</strong> Establish a state-of-the-art facility to create high-quality scientific visuals for news and educational programming.</li>
<li><strong>Televised Debates on Scientific Topics:</strong> Produce a series of televised debates on a wide range of scientific issues:
<ul>
<li>Topics where scientific consensus is strong (e.g., the Earth’s shape).</li>
<li>Controversial topics with less clear answers (e.g., survival of personality after death, abortion, animal rights, genetic engineering, various pseudosciences).</li>
<li>Debates would feature computer graphics, rigorous standards of evidence, and a neutral moderator.</li>
</ul></li>
</ul>
</section>
</section>
<section id="conclusion-the-urgency-of-science-education" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-the-urgency-of-science-education">Conclusion: The Urgency of Science Education</h3>
<section id="addressing-the-national-need-for-scientific-literacy" class="level4">
<h4 class="anchored" data-anchor-id="addressing-the-national-need-for-scientific-literacy">Addressing the National Need for Scientific Literacy</h4>
<ul>
<li><strong>Multiple Approaches Required:</strong> Television alone cannot solve the problem of scientific illiteracy, but it’s a crucial starting point.</li>
<li><strong>Television as a Catalyst for Change:</strong> If we aim to improve public understanding of science in the near term, television is the most effective platform to leverage.</li>
</ul>
</section>
<section id="final-call-to-action" class="level4">
<h4 class="anchored" data-anchor-id="final-call-to-action">Final Call to Action</h4>
<ul>
<li>Sagan reiterates the urgent need for increased and improved science programming on television to foster a more scientifically literate society.</li>
</ul>
</section>
</section>
</section>
<section id="chapter-23-maxwell-and-the-nerds" class="level2">
<h2 class="anchored" data-anchor-id="chapter-23-maxwell-and-the-nerds">Chapter 23: Maxwell and the Nerds</h2>
<section id="introduction-the-value-of-intellectual-curiosity" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-value-of-intellectual-curiosity">Introduction: The Value of Intellectual Curiosity</h3>
<ul>
<li><strong>Central Theme</strong>: The importance of supporting basic research, even if it appears “nerdish” or without immediate practical applications, as it often leads to significant advancements and benefits for society.</li>
<li><strong>Opening Question</strong>: “Why should we subsidize intellectual curiosity?” (Ronald Reagan, 1980)</li>
<li><strong>Counterpoint</strong>: George Washington’s 1790 address to Congress advocating for the promotion of science and literature as the surest basis of public happiness.</li>
</ul>
</section>
<section id="the-problem-of-stereotypes" class="level3">
<h3 class="anchored" data-anchor-id="the-problem-of-stereotypes">The Problem of Stereotypes</h3>
<ul>
<li><strong>Definition</strong>: Stereotypes are generalizations about groups of people, often based on limited information and leading to inaccurate and unjust judgments.</li>
<li><strong>Prevalence</strong>: Stereotypes are widespread and affect various groups based on ethnicity, nationality, religion, gender, sexual preference, even birth month and occupation.</li>
<li><strong>Cause</strong>: Often attributed to intellectual laziness, as stereotyping simplifies complex realities and avoids the effort of individual assessment.</li>
<li><strong>Consequences</strong>:
<ul>
<li>Injustice towards individuals who do not fit the stereotype.</li>
<li>Limits exposure to the diversity of human experience.</li>
<li><strong>Bell Curve Analogy</strong>: Even if stereotypes hold true on average, individual variation ensures they will fail in many cases, as human traits often follow a bell curve distribution with extremes on either side of the average.</li>
</ul></li>
<li><strong>Example: Women in Science</strong>:
<ul>
<li>Past stereotype: Women lacked the intellectual capacity for science.</li>
<li><strong>Confusing Cause and Effect</strong>: The lack of women in science was due to societal barriers, not inherent inability.</li>
<li>Present reality: Women are making significant contributions across scientific disciplines.</li>
</ul></li>
</ul>
</section>
<section id="the-nerd-stereotype-and-science" class="level3">
<h3 class="anchored" data-anchor-id="the-nerd-stereotype-and-science">The Nerd Stereotype and Science</h3>
<ul>
<li><strong>Skepticism and Gender</strong>:
<ul>
<li>Observation: More men in skeptic organizations and more women in pseudoscience.</li>
<li>Stereotype: Men are more skeptical, women more accepting.</li>
<li>Counterargument: Women scientists display strong skepticism, essential for scientific inquiry.</li>
<li><strong>Cause and Effect</strong>: The apparent gender difference in skepticism is likely due to societal barriers and lack of encouragement for women in skepticism, not inherent differences.</li>
</ul></li>
<li><strong>The Scientist as Nerd</strong>:
<ul>
<li><strong>Stereotype Description</strong>: (Based on an expert on 11-year-olds)
<ul>
<li>High-belted, pocket-protected, calculator-toting individuals with broken glasses.</li>
<li>Lacking social skills, snorting laughter, speaking in jargon.</li>
<li>Dedicated to academic pursuits, avoiding physical activity.</li>
<li>Names like Norman.</li>
<li>Not cool, don’t date.</li>
</ul></li>
<li><strong>Reality</strong>: While some scientists fit the stereotype, many do not.</li>
<li><strong>Possible Explanations for Nerdishness in Science</strong>:
<ul>
<li>Refuge for the socially inept.</li>
<li>Intense dedication to study leaves little time for social development.</li>
<li>A combination of both.</li>
</ul></li>
</ul></li>
<li><strong>Consequences of the Nerd Stereotype</strong>:
<ul>
<li>Decreased public support for science.</li>
<li>Reluctance to fund research deemed “geeky” or impractical.</li>
</ul></li>
</ul>
</section>
<section id="the-importance-of-curiosity-driven-research" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-curiosity-driven-research">The Importance of Curiosity-Driven Research</h3>
<ul>
<li><strong>Benefits of Science</strong>: Science provides widespread societal benefits (as argued earlier in the book).</li>
<li><strong>The Dilemma</strong>: People desire the products of science but dislike the perceived “nerdiness” of scientists.</li>
<li><strong>Proposed Solution</strong>: Direct scientific research towards specific, practical goals instead of funding “curiosity.”</li>
<li><strong>Problems with Directed Research</strong>:
<ul>
<li><strong>Lack of Foundational Knowledge</strong>: Directed inventions often fail because the necessary scientific groundwork hasn’t been laid.</li>
<li><strong>Unpredictability of Discoveries</strong>: Fundamental discoveries often come from unexpected sources and “idle musings.”</li>
<li><strong>Historical Examples</strong>: Major scientific breakthroughs often arise from seemingly unrelated, curiosity-driven research.</li>
</ul></li>
<li><strong>Counterproductive Nature</strong>: Discouraging curiosity-driven research while demanding specific inventions would hinder scientific progress.</li>
</ul>
</section>
<section id="queen-victorias-hypothetical-challenge" class="level3">
<h3 class="anchored" data-anchor-id="queen-victorias-hypothetical-challenge">Queen Victoria’s Hypothetical Challenge</h3>
<ul>
<li><strong>Scenario</strong>: Queen Victoria in 1860, at the height of the British Empire, desires a device to transmit voice and moving pictures wirelessly to every home.</li>
<li><strong>The Westminster Project</strong>: She convenes experts and allocates significant funds to achieve this goal.</li>
<li><strong>Likely Outcome</strong>: Failure, because the underlying scientific principles of radio and television had not yet been discovered.</li>
<li><strong>Lesson</strong>: Directed research without the necessary foundational knowledge is likely to be unsuccessful.</li>
</ul>
</section>
<section id="james-clerk-maxwell-the-unsung-hero" class="level3">
<h3 class="anchored" data-anchor-id="james-clerk-maxwell-the-unsung-hero">James Clerk Maxwell: The Unsung Hero</h3>
<ul>
<li><strong>Early Life</strong>:
<ul>
<li>Born in Edinburgh, Scotland (1831).</li>
<li>Childhood fascination with the natural world and mechanics.</li>
<li>Nicknamed “Dafty” due to his inquisitive nature and perceived social awkwardness.</li>
<li>Experienced ridicule from peers and teachers.</li>
</ul></li>
<li><strong>The Nerd Stereotype</strong>: Maxwell’s experiences reflect the common stereotype of the socially inept scientist.</li>
<li><strong>Academic Career</strong>:
<ul>
<li>Became Professor of Experimental Physics at Cambridge University.</li>
<li>Acknowledged the negative stereotypes surrounding scientists in his inaugural lecture (1872).</li>
<li>Observed a shift in perception towards scientists as being aligned with the “material spirit of the age.”</li>
</ul></li>
<li><strong>Scientific Contributions</strong>:
<ul>
<li><strong>Saturn’s Rings</strong>: Demonstrated they are composed of small particles.</li>
<li><strong>Elastic Properties of Solids</strong>.</li>
<li><strong>Kinetic Theory of Gases and Statistical Mechanics</strong>: Explained the predictable behavior of gases based on the random motion of molecules.</li>
<li><strong>Maxwell-Boltzmann Distribution</strong>: Describes the speed distribution of molecules in a gas.</li>
<li><strong>Maxwell’s Demon</strong>: A thought experiment exploring the second law of thermodynamics.</li>
<li><strong>Electromagnetism</strong>: His greatest contribution, unifying electricity, magnetism, and light.</li>
</ul></li>
</ul>
</section>
<section id="maxwells-groundbreaking-work-on-electromagnetism" class="level3">
<h3 class="anchored" data-anchor-id="maxwells-groundbreaking-work-on-electromagnetism">Maxwell’s Groundbreaking Work on Electromagnetism</h3>
<ul>
<li><strong>Prior Understanding</strong>:
<ul>
<li>Mesmer’s erroneous belief in magnetic and electric fluids.</li>
<li>Ørsted’s experiment showing the connection between electricity and magnetism (current in a wire affecting a compass needle).</li>
<li>Faraday’s experiment demonstrating electromagnetic induction (changing magnetic field generating current).</li>
<li><strong>Fields of Force</strong>: Faraday’s concept of invisible fields extending from magnets and charged objects.</li>
</ul></li>
<li><strong>Maxwell’s Equations</strong>:
<ul>
<li>A set of four equations summarizing the behavior of electricity and magnetism based on previous experiments.</li>
<li><strong>Equation 1</strong>: Describes the relationship between electric field and charge density.</li>
<li><strong>Equation 2</strong>: States the absence of magnetic monopoles.</li>
<li><strong>Equation 3</strong>: Explains how a changing magnetic field induces an electric field.</li>
<li><strong>Equation 4</strong>: Describes how a changing electric field or current induces a magnetic field.</li>
</ul></li>
<li><strong>Maxwell’s Question</strong>: What happens to these equations in a vacuum (no charges or currents)?</li>
<li><strong>Maxwell’s Insight</strong>:
<ul>
<li>Instead of zero fields, he proposed that changing magnetic fields generate electric fields and vice versa, even in a vacuum.</li>
<li>This implied that electromagnetic fields could propagate through empty space as waves.</li>
<li>He calculated the speed of these waves and found it to be remarkably close to the speed of light.</li>
</ul></li>
<li><strong>The Electromagnetic Nature of Light</strong>:
<ul>
<li>Maxwell’s realization that light is an electromagnetic wave, unifying electricity, magnetism, and optics.</li>
<li>His work explained the electromagnetic spectrum from gamma rays to radio waves.</li>
</ul></li>
<li><strong>The Ether</strong>:
<ul>
<li>Maxwell, influenced by the mechanical thinking of his time, proposed the existence of the <strong>ether</strong>, a substance filling space and supporting electromagnetic waves.</li>
<li>The ether had to be extremely thin and insubstantial yet stiff enough to allow light to travel at its immense speed.</li>
<li>The concept of the ether was later disproven by Einstein’s theory of relativity.</li>
</ul></li>
</ul>
</section>
<section id="beyond-the-ether-understanding-electromagnetic-waves" class="level3">
<h3 class="anchored" data-anchor-id="beyond-the-ether-understanding-electromagnetic-waves">Beyond the Ether: Understanding Electromagnetic Waves</h3>
<ul>
<li><strong>The Demise of the Ether</strong>: Relativity showed that electromagnetic waves do not require a medium to propagate.</li>
<li><strong>Self-Propagating Waves</strong>: Changing electric and magnetic fields generate each other, allowing the wave to travel through empty space.</li>
<li><strong>The Importance of Equations</strong>: Richard Feynman emphasized that the mathematical equations describing nature are more important than the mechanical models used to derive them.</li>
<li><strong>The Counterintuitive Nature of Fields</strong>:
<ul>
<li>Humans tend to prefer explanations based on physical contact, but even seemingly direct contact involves the interaction of electric fields.</li>
<li><strong>Feynman’s Example</strong>: Picking up a knife involves the interaction of electric fields, not actual physical contact.</li>
</ul></li>
<li><strong>Common Sense vs.&nbsp;Scientific Reality</strong>:
<ul>
<li>Our common sense understanding of the world is based on our evolutionary history as hunter-gatherers.</li>
<li>It often fails when dealing with phenomena outside our everyday experience, such as electromagnetism.</li>
</ul></li>
</ul>
</section>
<section id="maxwells-legacy-from-radio-to-seti" class="level3">
<h3 class="anchored" data-anchor-id="maxwells-legacy-from-radio-to-seti">Maxwell’s Legacy: From Radio to SETI</h3>
<ul>
<li><strong>Heinrich Hertz’s Confirmation</strong>: In 1888, Hertz experimentally generated and detected radio waves, confirming Maxwell’s prediction.</li>
<li><strong>Rapid Technological Development</strong>:
<ul>
<li>Radio communication across the Atlantic by Marconi (1901).</li>
<li>Development of television, radar, and various communication technologies.</li>
<li>Maxwell’s work also influenced fields like nuclear physics and quantum mechanics.</li>
</ul></li>
<li><strong>Unification of Physics</strong>: Maxwell’s unification of electricity, magnetism, and light inspired efforts to create a unified theory encompassing all physical forces.</li>
<li><strong>The Pervasiveness of Electromagnetic Fields</strong>:
<ul>
<li>Feynman’s description of the complex electromagnetic environment around us, filled with waves from various sources, including radio, television, light, and even distant galaxies.</li>
</ul></li>
<li><strong>The Unforeseen Consequences of Curiosity</strong>: Maxwell’s purely theoretical work, driven by curiosity, led to a vast array of practical applications that transformed the world.</li>
<li><strong>Queen Victoria’s Challenge Revisited</strong>: If tasked with inventing radio and television, it’s unlikely that anyone in 1860 would have conceived of Maxwell’s approach.</li>
<li><strong>Maxwell’s Lack of Recognition</strong>:
<ul>
<li>Despite his immense contributions, Maxwell remains largely unknown in popular culture.</li>
<li>He was never knighted, possibly due to his perceived social awkwardness.</li>
<li><strong>Maxwell Montes</strong>: The highest mountain range on Venus is named in his honor.</li>
</ul></li>
</ul>
</section>
<section id="the-search-for-extraterrestrial-intelligence-seti-1" class="level3">
<h3 class="anchored" data-anchor-id="the-search-for-extraterrestrial-intelligence-seti-1">The Search for Extraterrestrial Intelligence (SETI)</h3>
<ul>
<li><strong>The Significance of Maxwell’s Equations</strong>: Maxwell’s work laid the foundation for radio astronomy and the search for extraterrestrial intelligence.</li>
<li><strong>NASA’s SETI Program</strong>:
<ul>
<li>Launched in 1992, aiming to search the entire sky for radio signals from other civilizations.</li>
<li>Cancelled by Congress in 1993 due to concerns about cost and lack of immediate practical benefits.</li>
</ul></li>
<li><strong>The Importance of SETI</strong>:
<ul>
<li>Addresses a fundamental question about humanity’s place in the universe.</li>
<li>Potential for transformative knowledge and practical benefits from contact with an advanced civilization.</li>
<li>Wide public interest and cultural significance.</li>
</ul></li>
<li><strong>Project Phoenix</strong>: Privately funded revival of SETI in 1995.</li>
</ul>
</section>
<section id="concerns-about-the-future-of-basic-research" class="level3">
<h3 class="anchored" data-anchor-id="concerns-about-the-future-of-basic-research">Concerns about the Future of Basic Research</h3>
<ul>
<li><strong>Exponential Growth of Science</strong>: David Goodstein’s observation that science has been growing exponentially, which cannot continue indefinitely.</li>
<li><strong>Slowdown in Funding</strong>: Goodstein suggests that the slowdown in science funding may be due to this inherent limit, but there are concerns about shifting priorities.</li>
<li><strong>Shifting Priorities</strong>:
<ul>
<li>Pressure on the National Science Foundation to prioritize applied research over basic science.</li>
<li>Threats to the U.S. Geological Survey and environmental research.</li>
<li>Reduced funding for data analysis at NASA.</li>
<li>Difficulties for young scientists in securing grants and jobs.</li>
<li>Decline in industrial research and development.</li>
<li>Increased focus on military research.</li>
</ul></li>
<li><strong>The Value of Basic Research</strong>:
<ul>
<li><strong>Definition</strong>: Research driven by curiosity, seeking knowledge for its own sake without immediate practical goals.</li>
<li><strong>Benefits</strong>: Often leads to unexpected discoveries with significant long-term applications.</li>
</ul></li>
<li><strong>The Free Market Approach to Research</strong>:
<ul>
<li>The idea that basic research should compete for funding without government support.</li>
<li><strong>Criticisms</strong>:
<ul>
<li>Short-sighted focus on immediate profits.</li>
<li>Likely to stifle basic research due to its long-term and unpredictable nature.</li>
<li><strong>Example</strong>: Underfunding of medical research compared to spending on quack medicine.</li>
</ul></li>
</ul></li>
<li><strong>The Importance of Seed Corn</strong>: Cutting funding for basic research is like eating the seed corn – it provides short-term gain but jeopardizes future progress.</li>
</ul>
</section>
<section id="the-superconducting-supercollider-ssc" class="level3">
<h3 class="anchored" data-anchor-id="the-superconducting-supercollider-ssc">The Superconducting Supercollider (SSC)</h3>
<ul>
<li><strong>Purpose</strong>: A massive particle accelerator designed to investigate the fundamental structure of matter and the early universe.</li>
<li><strong>Cost</strong>: $10-15 billion.</li>
<li><strong>Cancellation</strong>: Cancelled by Congress in 1993 after $2 billion had been spent.</li>
<li><strong>Reasons for Failure</strong>:
<ul>
<li>Lack of public understanding of the project’s goals.</li>
<li>Physicists failed to effectively communicate the significance of the SSC to non-scientists.</li>
<li>The “nerds gone wild” perception surrounding the project.</li>
</ul></li>
</ul>
</section>
<section id="the-need-for-continued-support-of-basic-science" class="level3">
<h3 class="anchored" data-anchor-id="the-need-for-continued-support-of-basic-science">The Need for Continued Support of Basic Science</h3>
<ul>
<li><strong>Scientists’ Obligation</strong>: To clearly and honestly explain the goals and significance of their research, especially when requesting public funding.</li>
<li><strong>The Importance of Communication</strong>: Scientists need to effectively communicate the value of basic research to the public and policymakers.</li>
<li><strong>Balancing Priorities</strong>: While acknowledging other pressing societal needs, it is crucial to continue supporting basic research for long-term progress and well-being.</li>
<li><strong>A Failure of Vision</strong>: Cutting back on fundamental research represents a lack of foresight and imagination.</li>
<li><strong>Investing in the Future</strong>: Supporting the “Maxwells” of our time is essential for ensuring a brighter future for humanity.</li>
</ul>
</section>
<section id="conclusion-7" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-7">Conclusion</h3>
<ul>
<li><strong>Symbolic Example</strong>: Can we afford to prioritize military spending over a relatively small investment in SETI, a program with the potential to transform our understanding of the universe?</li>
<li><strong>The Need for Balance</strong>: A thriving society requires addressing various needs, including education, healthcare, defense, and environmental protection, but it should also prioritize investing in basic scientific research as a crucial foundation for future progress.</li>
<li><strong>A Message to Extraterrestrials</strong>: Cutting back on basic research might signal to any hypothetical extraterrestrial observers that we are a short-sighted species with little regard for our long-term future.</li>
</ul>
</section>
</section>
<section id="chapter-24-science-and-witchcraft" class="level2">
<h2 class="anchored" data-anchor-id="chapter-24-science-and-witchcraft">Chapter 24: Science and Witchcraft</h2>
<section id="introduction-7" class="level3">
<h3 class="anchored" data-anchor-id="introduction-7">Introduction</h3>
<ul>
<li>This chapter and the following one have a stronger political focus compared to other parts of the book.</li>
<li><strong>Advocacy of science and skepticism does not automatically lead to specific political or social conclusions.</strong></li>
<li>While valuable in politics, politics is not a science itself.</li>
<li><strong>“Ubi dubium ibi libertas” (Latin Proverb): “Where there is doubt, there is freedom.”</strong></li>
</ul>
</section>
<section id="the-1939-new-york-worlds-fair-and-the-promise-of-science" class="level3">
<h3 class="anchored" data-anchor-id="the-1939-new-york-worlds-fair-and-the-promise-of-science">The 1939 New York World’s Fair and the Promise of Science</h3>
<ul>
<li>The 1939 New York World’s Fair focused on “the world of tomorrow,” promising a better future driven by science.</li>
<li>This message resonated deeply with people, especially on the eve of World War II.</li>
<li><strong>Science was presented as the means to achieve this brighter future.</strong></li>
</ul>
<section id="behind-the-scenes-a-struggle-for-the-fairs-vision" class="level4">
<h4 class="anchored" data-anchor-id="behind-the-scenes-a-struggle-for-the-fairs-vision">Behind the Scenes: A Struggle for the Fair’s Vision</h4>
<ul>
<li><strong>Grover Whalen</strong>:
<ul>
<li>President and chief spokesman of the fair.</li>
<li>Former corporate executive and NYC police chief.</li>
<li>Championed a commercial and industrial focus, emphasizing consumer products.</li>
<li>Secured participation from Stalin and Mussolini.</li>
</ul></li>
<li><strong>Scientists’ Vision</strong>:
<ul>
<li>Prominent scientists, including Harold Urey and Albert Einstein, argued for presenting science for its own sake.</li>
<li><strong>Emphasis on scientific thinking, not just products.</strong></li>
<li>Belief that understanding science combats superstition and bigotry.</li>
<li><strong>Watson Davis</strong>: “The scientific way is the democratic way.”</li>
<li>One scientist suggested science could conquer stupidity.</li>
</ul></li>
<li><strong>Outcome</strong>:
<ul>
<li><strong>Little real science was incorporated into the fair, despite scientists’ protests.</strong></li>
<li>The corporate and consumer focus dominated.</li>
<li><strong>Science as a way of thinking and a pillar of a free society was largely absent.</strong></li>
</ul></li>
</ul>
</section>
</section>
<section id="freedom-and-prosperity-a-soviet-perspective" class="level3">
<h3 class="anchored" data-anchor-id="freedom-and-prosperity-a-soviet-perspective">Freedom and Prosperity: A Soviet Perspective</h3>
<ul>
<li><strong>Dinner in Perel de Kino, USSR (late 1980s):</strong>
<ul>
<li>Atmosphere charged with anticipation of new freedoms, especially free speech.</li>
<li><strong>“Revolution of rising expectations”</strong> was underway.</li>
<li>Doubts lingered about the government’s commitment to these freedoms.</li>
</ul></li>
<li><strong>Soviet Citizens’ Admiration for American Freedoms:</strong>
<ul>
<li>Some attendees had fought for decades for freedoms enjoyed by Americans.</li>
<li>They saw the US as proof that multicultural nations could thrive with such freedoms.</li>
<li><strong>Proposed link between prosperity and freedom, particularly in a technologically advanced era.</strong></li>
<li><strong>Openness of science and democracy viewed as interconnected.</strong></li>
</ul></li>
<li><strong>Toast by a Soviet Novelist:</strong>
<ul>
<li>“To the Americans, they have a little freedom.”</li>
<li>“And they know how to keep it.”</li>
</ul></li>
<li><strong>The Question:</strong> Do we (Americans) know how to keep our freedom?</li>
</ul>
</section>
<section id="the-alien-and-sedition-acts-an-early-test-of-american-freedoms" class="level3">
<h3 class="anchored" data-anchor-id="the-alien-and-sedition-acts-an-early-test-of-american-freedoms">The Alien and Sedition Acts: An Early Test of American Freedoms</h3>
<ul>
<li><strong>Federalist Party’s Exploitation of Fear and Prejudice (1798):</strong>
<ul>
<li>Targeted French and Irish immigrants, who typically voted for the opposing party.</li>
</ul></li>
<li><strong>Alien Act:</strong>
<ul>
<li>Increased residency requirement for citizenship from 5 to 14 years.</li>
<li><strong>Granted President John Adams power to deport any suspicious foreigner.</strong></li>
<li>Jefferson believed it aimed to expel intellectuals like C.F. Volney, Pierre Samuel Dupont de Namur, and Joseph Priestley.</li>
</ul></li>
<li><strong>Sedition Act:</strong>
<ul>
<li><strong>Criminalized publishing false or malicious criticism of the government or inspiring opposition to its actions.</strong></li>
<li>Resulted in arrests, convictions, censorship, and intimidation.</li>
<li>Jefferson: The act aimed to “crush all political opposition.”</li>
</ul></li>
<li><strong>Jefferson’s Actions (1801):</strong>
<ul>
<li>Pardoned victims of the Sedition Act upon becoming president.</li>
<li>Deemed it contrary to American freedoms.</li>
</ul></li>
<li><strong>Repeal:</strong> By 1802, all Alien and Sedition Acts were repealed.</li>
</ul>
</section>
<section id="the-recurring-threat-to-freedom" class="level3">
<h3 class="anchored" data-anchor-id="the-recurring-threat-to-freedom">The Recurring Threat to Freedom</h3>
<ul>
<li><strong>The Pattern of Exploiting Fear:</strong>
<ul>
<li>Those seeking power identify societal fears and use them to gain office.</li>
<li>Examples: ethnic differences, skin color, philosophies, religions, drug use, crime, economic crises, school prayer, flag desecration.</li>
<li><strong>The “quick fix” often involves sacrificing freedoms guaranteed by the Bill of Rights.</strong></li>
</ul></li>
<li><strong>Historical Examples:</strong>
<ul>
<li>Japanese American internment during World War II.</li>
<li>Erosion of search and seizure protections in the “war on drugs.”</li>
<li>Restrictions on freedom of speech in the name of national security.</li>
</ul></li>
<li><strong>The Consequences:</strong>
<ul>
<li><strong>Concentration of power in fewer hands.</strong></li>
<li><strong>Suppression of diverse opinions.</strong></li>
<li><strong>Increased risk of repeating past mistakes due to the erasure of historical lessons.</strong></li>
</ul></li>
</ul>
</section>
<section id="the-witch-mania-a-window-into-human-fallibility" class="level3">
<h3 class="anchored" data-anchor-id="the-witch-mania-a-window-into-human-fallibility">The Witch Mania: A Window into Human Fallibility</h3>
<ul>
<li><strong>The European Witch Hunts (15th-17th Centuries):</strong>
<ul>
<li>Examining the “evidence” and trial procedures reveals the need for safeguards enshrined in the US Constitution and Bill of Rights.</li>
<li>Examples: trial by jury, protection against self-incrimination and cruel and unusual punishment, freedom of speech and the press, due process, balance of powers, separation of church and state.</li>
</ul></li>
<li><strong>Friedrich von Spee’s <em>Cautio Criminalis</em> (1631):</strong>
<ul>
<li>Jesuit priest who heard confessions of accused witches in Würzburg, Germany.</li>
<li>Exposed the church-state terror against innocent people.</li>
<li><strong>Key Points from <em>Cautio Criminalis</em></strong>:
<ul>
<li><strong>Popular superstitions and rumors fueled accusations of witchcraft.</strong></li>
<li><strong>Princes pressured judges to prosecute witches.</strong></li>
<li><strong>Lack of evidence did not prevent trials.</strong></li>
<li><strong>Investigating agents profited from convictions.</strong></li>
<li><strong>Helpless old women were often the first targets.</strong></li>
<li><strong>Accused were trapped in logical dilemmas designed to prove guilt regardless of their actions or answers.</strong></li>
<li><strong>Defense was denied, and lawyers were suspected of witchcraft.</strong></li>
<li><strong>Torture was used to extract confessions, even from priests.</strong></li>
<li><strong>Confessions were considered “voluntary” even when obtained under duress.</strong></li>
<li><strong>Execution was inevitable, regardless of confession.</strong></li>
<li><strong>Accused were forced to implicate others, creating a chain reaction of accusations.</strong></li>
<li><strong>Von Spee questioned how anyone, innocent or not, could escape conviction.</strong></li>
</ul></li>
</ul></li>
</ul>
<section id="the-horrors-of-torture" class="level4">
<h4 class="anchored" data-anchor-id="the-horrors-of-torture">The Horrors of Torture</h4>
<ul>
<li><strong>Russell Hope Robbins’s <em>The Encyclopedia of Witchcraft and Demonology</em> (1959) details torture methods:</strong>
<ul>
<li><strong>Force-feeding salted herrings and denying water.</strong></li>
<li><strong>Immersion in scalding water with lime.</strong></li>
<li><strong>The wooden horse, racks, heated iron chair, leg visors, Spanish boots, and boots filled with boiling water or molten lead.</strong></li>
<li><strong>Water torture (question de l’eau):</strong> Water and cloth forced down the throat to induce choking, then the cloth ripped out to tear the entrails.</li>
<li><strong>Thumbscrews (recillons):</strong> Vise to crush thumbs or big toes.</li>
<li><strong>Strapado and squashation.</strong></li>
</ul></li>
<li><strong>Forced Confessions:</strong> Victims were made to sign statements after torture, which were then presented as voluntary confessions.</li>
</ul>
</section>
<section id="voices-against-the-witch-mania" class="level4">
<h4 class="anchored" data-anchor-id="voices-against-the-witch-mania">Voices Against the Witch Mania</h4>
<ul>
<li><strong>Opponents of the witch hunts, primarily clergy who witnessed the atrocities:</strong>
<ul>
<li>Gianfrancesco Ponzinibbio (Italy)</li>
<li>Cornelius Loos (Germany)</li>
<li>Reginald Scott (Britain, 16th century)</li>
<li>Johann Mayfurth (Germany)</li>
<li>Alonso Salazar de Frias (Spain, 17th century)</li>
</ul></li>
<li><strong>Thomas Ady’s <em>A Candle in the Dark</em> (1656):</strong>
<ul>
<li>Addressed the issue of confessions obtained under torture.</li>
<li>Argued that even Adam and Eve were tempted to sin in their innocence, so how much more could tortured individuals be coerced into false confessions?</li>
</ul></li>
<li><strong>Bishop Francis Hutchinson’s <em>An Historical Essay Concerning Witchcraft</em> (1718):</strong>
<ul>
<li><strong>Introduced the concept of hallucination as a factor in witch accusations.</strong></li>
<li>“Many a man hath verily believed he hath seen a spirit externally before him, when it hath been only an internal image dancing in his own brain.”</li>
</ul></li>
</ul>
</section>
</section>
<section id="the-decline-of-witch-hunts" class="level3">
<h3 class="anchored" data-anchor-id="the-decline-of-witch-hunts">The Decline of Witch Hunts</h3>
<ul>
<li><strong>Factors contributing to the end of witch burnings:</strong>
<ul>
<li>Courageous opponents of the mania.</li>
<li>Extension of accusations to the privileged classes.</li>
<li>Threat to the emerging capitalist system.</li>
<li><strong>Spread of Enlightenment ideas.</strong></li>
</ul></li>
<li><strong>Last Executions for Witchcraft:</strong>
<ul>
<li>Holland: 1610</li>
<li>England: 1684</li>
<li>America: 1692</li>
<li>France: 1745</li>
<li>Germany: 1775</li>
<li>Poland: 1793</li>
</ul></li>
<li><strong>Inquisition:</strong>
<ul>
<li>Continued condemning people to death in Italy until the late 18th century.</li>
<li>Inquisitorial torture abolished by the Catholic Church in 1816.</li>
</ul></li>
<li><strong>Christian Churches:</strong> Remained the last bastion of support for the reality of witchcraft and its punishment.</li>
</ul>
</section>
<section id="lessons-from-the-witch-mania" class="level3">
<h3 class="anchored" data-anchor-id="lessons-from-the-witch-mania">Lessons from the Witch Mania</h3>
<ul>
<li><strong>Questions for Reflection:</strong>
<ul>
<li>How could such atrocities occur in supposedly advanced and civilized nations?</li>
<li>Why did conservatives, monarchists, and religious fundamentalists support the witch hunts?</li>
<li>Why did liberals, Quakers, and Enlightenment followers oppose them?</li>
</ul></li>
<li><strong>The Danger of Absolute Certainty:</strong>
<ul>
<li><strong>The witch mania will recur if we believe our beliefs are absolutely right and others’ are wrong.</strong></li>
<li>This applies to beliefs about motivations, divine communication, the importance of unquestioning obedience, and the wickedness of challenging established doctrines.</li>
</ul></li>
<li><strong>Von Spee’s Insight:</strong> Improved public understanding of superstition and skepticism could have helped prevent the witch hunts.</li>
<li><strong>Understanding the Past to Prevent the Future:</strong> We must learn how the witch mania worked to recognize and prevent its resurgence in different forms.</li>
</ul>
</section>
<section id="rewriting-history-controlling-public-memory" class="level3">
<h3 class="anchored" data-anchor-id="rewriting-history-controlling-public-memory">Rewriting History: Controlling Public Memory</h3>
<ul>
<li><strong>Josef Goebbels (Nazi Propaganda Minister):</strong> “It is the absolute right of the state to supervise the formation of public opinion.”</li>
<li><strong>George Orwell’s <em>1984</em></strong>:
<ul>
<li>Depicts a totalitarian state where the past is constantly rewritten to serve the ruling party’s interests.</li>
<li>Based on the Stalinist Soviet Union.</li>
</ul></li>
<li><strong>Stalin’s Eradication of Trotsky from History:</strong>
<ul>
<li>Images of Trotsky, a key figure in the Russian Revolution, were systematically removed and replaced with images of Stalin and Lenin.</li>
<li>This created a false historical narrative for new generations.</li>
<li><strong>“Doublethink”</strong>: Accepting the rewritten history despite real memories.</li>
<li>Those who remembered Trotsky’s importance were persecuted and eliminated.</li>
</ul></li>
<li><strong>The Power of Media Control:</strong>
<ul>
<li><strong>Absolute control over media and police allows for the manipulation of collective memory within a generation.</strong></li>
<li>This is often done to maintain power, serve the ego of leaders, or cover up past mistakes.</li>
<li><strong>Consequences:</strong> Disrupts error correction mechanisms, erases public memory of political errors, increases the likelihood of repeating them.</li>
</ul></li>
</ul>
<section id="the-potential-for-memory-manipulation-in-the-modern-age" class="level4">
<h4 class="anchored" data-anchor-id="the-potential-for-memory-manipulation-in-the-modern-age">The Potential for Memory Manipulation in the Modern Age</h4>
<ul>
<li><strong>Technological Advances:</strong>
<ul>
<li>Creation of realistic fabricated images, videos, and audio is now possible.</li>
<li>Television and widespread media access make dissemination of manipulated information easier.</li>
<li>Decline in critical thinking makes people more susceptible.</li>
</ul></li>
<li><strong>Restructuring Societal Memories:</strong> Small groups with control over news, history books, and powerful images can significantly alter collective attitudes.</li>
<li><strong>Example: Saddam Hussein’s Transformation in American Media (1990-1991):</strong>
<ul>
<li>From obscure near-ally to the embodiment of evil.</li>
<li>Demonstrates the power of media to shape public perception.</li>
</ul></li>
<li><strong>The War on Drugs:</strong>
<ul>
<li>Example of systematic distortion and fabrication of scientific evidence.</li>
<li>Open discussion of alternative perspectives is suppressed.</li>
</ul></li>
</ul>
</section>
<section id="the-resilience-of-historical-truth" class="level4">
<h4 class="anchored" data-anchor-id="the-resilience-of-historical-truth">The Resilience of Historical Truth</h4>
<ul>
<li><strong>Challenges to Memory Manipulation:</strong>
<ul>
<li>Discovery of new historical data.</li>
<li>Emergence of less ideologically driven historians.</li>
<li>Example: Smuggling of Trotsky’s <em>History of the Russian Revolution</em> into the USSR.</li>
<li><strong>Rehabilitation of Trotsky in Soviet Media (50th anniversary of his murder):</strong>
<ul>
<li><em>Izvestia</em> acknowledged him as a great revolutionary.</li>
<li>German communist publication praised him as a defender of human civilization.</li>
</ul></li>
</ul></li>
<li><strong>Countervailing Trends:</strong>
<ul>
<li>Cable television, internet, fax machines, computer networks, self-publishing, and liberal arts education can challenge centralized media control.</li>
<li>The outcome of this struggle is uncertain.</li>
</ul></li>
</ul>
</section>
</section>
<section id="the-dangers-of-skepticism" class="level3">
<h3 class="anchored" data-anchor-id="the-dangers-of-skepticism">The Dangers of Skepticism</h3>
<ul>
<li><strong>Skepticism as a Threat to Established Institutions:</strong>
<ul>
<li>Teaching skeptical thinking may lead people to question not just UFOs and pseudoscience, but also economic, social, political, and religious institutions.</li>
<li>This could result in challenges to authority and power.</li>
</ul></li>
<li><strong>The Resurgence of Nationalism and Repression:</strong>
<ul>
<li>Ethnocentrism, xenophobia, and nationalism are on the rise globally.</li>
<li>Governments continue to suppress dissenting views.</li>
<li>False memories are instilled.</li>
</ul></li>
<li><strong>Science as a Transnational Force:</strong>
<ul>
<li>Science offers access to truths that transcend cultural biases.</li>
<li>It is a universal language that unites scientists across borders.</li>
<li><strong>Anton Chekhov:</strong> “There is no national science, just as there is no national multiplication table.”</li>
</ul></li>
<li><strong>Scientists as Dissidents:</strong>
<ul>
<li>Scientists are often found among social critics and dissidents who challenge national policies and myths.</li>
<li>Examples: Andrei Sakharov (USSR), Albert Einstein and Leo Szilard (US), Fang Lizhi (China).</li>
<li><strong>Risks:</strong> Scientists who speak out may face persecution and even death.</li>
</ul></li>
</ul>
</section>
<section id="scientists-and-social-responsibility-the-case-of-linus-pauling" class="level3">
<h3 class="anchored" data-anchor-id="scientists-and-social-responsibility-the-case-of-linus-pauling">Scientists and Social Responsibility: The Case of Linus Pauling</h3>
<ul>
<li><strong>Linus Pauling (1901-1994):</strong>
<ul>
<li><strong>Key role in the Limited Test Ban Treaty of 1963.</strong></li>
<li>Campaigned against above-ground nuclear testing using scientific data and moral arguments.</li>
<li>Faced criticism and vilification in the US press.</li>
<li>Passport revoked for insufficient anti-communism.</li>
</ul></li>
<li><strong>Pauling’s Scientific Contributions:</strong>
<ul>
<li><strong>Nobel Prize in Chemistry (1954):</strong> For work on the chemical bond using quantum mechanics.</li>
<li>Research on anesthetics, sickle cell anemia, and the evolutionary history of life using DNA comparisons.</li>
<li>Contributed to understanding DNA structure.</li>
</ul></li>
<li><strong>Soviet Denunciation:</strong> Pauling’s work on structural chemistry was deemed incompatible with dialectical materialism.</li>
<li><strong>Continued Dedication to Peace and Social Issues:</strong>
<ul>
<li><strong>Albert Einstein:</strong> “That man is a real genius.”</li>
<li><strong>Motivation for social activism:</strong> “I did it to be worthy of the respect of my wife, Helen Ava Pauling.”</li>
<li><strong>Nobel Peace Prize (1962):</strong> For his work on the nuclear test ban.</li>
<li><strong>The only person to win two unshared Nobel Prizes.</strong></li>
</ul></li>
</ul>
</section>
<section id="science-and-social-criticism-balancing-progress-and-dissent" class="level3">
<h3 class="anchored" data-anchor-id="science-and-social-criticism-balancing-progress-and-dissent">Science and Social Criticism: Balancing Progress and Dissent</h3>
<ul>
<li><strong>Suspicion of Pure Science:</strong>
<ul>
<li>Some may view technology as safe and controllable, but see pure science as potentially dangerous due to its unpredictable nature and potential to challenge established ideas.</li>
</ul></li>
<li><strong>The Importance of Pure Science:</strong>
<ul>
<li><strong>Pure science is essential for future technological advancements.</strong></li>
<li>The skeptical and questioning attitude of science can be beneficial to society.</li>
</ul></li>
<li><strong>Societal Pressures on Scientists:</strong>
<ul>
<li>Societies often try to steer scientists away from social criticism and towards technological progress through funding, social pressure, and rewards.</li>
</ul></li>
<li><strong>Differing Views on Scientists’ Role in Society:</strong>
<ul>
<li>Some scientists believe their sole responsibility is to conduct research, while others see a duty to engage in social and political issues.</li>
</ul></li>
<li><strong>The Manhattan Project and the Debate over Nuclear Weapons:</strong>
<ul>
<li>Scientists like Leo Szilard, James Frank, Harold Urey, and Robert R. Wilson warned about the dangers of nuclear weapons and the arms race.</li>
<li><strong>Enrico Fermi:</strong> “I was put on Earth to make certain discoveries, and what the political leaders do with them is not my business.”</li>
<li><strong>Fermi’s Opposition to the H-Bomb:</strong> Despite his stance, Fermi was so concerned about the H-bomb that he co-authored a document calling it evil and urging the US not to build it.</li>
</ul></li>
</ul>
</section>
<section id="edward-teller-and-the-h-bomb-a-case-study-in-scientific-influence" class="level3">
<h3 class="anchored" data-anchor-id="edward-teller-and-the-h-bomb-a-case-study-in-scientific-influence">Edward Teller and the H-Bomb: A Case Study in Scientific Influence</h3>
<ul>
<li><strong>Jeremy Stone (Federation of American Scientists) on Edward Teller:</strong>
<ul>
<li>Teller pushed for the development of the H-bomb for personal and geopolitical reasons.</li>
<li>Used exaggeration and smear tactics to manipulate policy decisions for decades.</li>
<li>Opposed arms control measures and promoted arms race escalation.</li>
<li><strong>Teller’s actions directly contributed to the Soviet Union building its own H-bomb.</strong></li>
<li><strong>Stone’s Conclusion:</strong> “If so, no scientist has ever had more influence on the risks that humanity has run than Edward Teller.”</li>
</ul></li>
<li><strong>Teller’s Reprehensible Behavior:</strong> Teller’s actions throughout the arms race were considered ethically questionable.</li>
<li><strong>The Power of Scientific Expertise:</strong> Teller’s case highlights how a single scientist with strong political skills can influence global risks.</li>
<li><strong>The Need for Ethical Awareness:</strong> The immense power of science demands a heightened sense of ethical responsibility from the scientific community.</li>
</ul>
</section>
<section id="conclusion-the-imperative-of-science-and-democracy" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-the-imperative-of-science-and-democracy">Conclusion: The Imperative of Science and Democracy</h3>
<ul>
<li><strong>Science’s Power and Responsibility:</strong> The unprecedented power of science requires a corresponding level of ethical focus and public education.</li>
<li><strong>Broad-Based Education:</strong> Public understanding of science and democracy is crucial.</li>
<li><strong>Trends Shaping the Future:</strong> The struggle between forces promoting narrow viewpoints and those advocating for open access to information and critical thinking will determine the future.</li>
<li><strong>The Role of Skepticism:</strong> Skepticism is inherently challenging to established institutions and power structures, but it is essential for a free and democratic society.</li>
</ul>
</section>
</section>
<section id="chapter-25-real-patriots-ask-questions" class="level2">
<h2 class="anchored" data-anchor-id="chapter-25-real-patriots-ask-questions">Chapter 25: Real Patriots Ask Questions</h2>
<section id="introduction-the-importance-of-error-correction" class="level3">
<h3 class="anchored" data-anchor-id="introduction-the-importance-of-error-correction">Introduction: The Importance of Error Correction</h3>
<ul>
<li><strong>Error Correction in Government:</strong>
<ul>
<li><strong>Quote:</strong> “It is not the function of our government to keep the citizen from falling into error; it is the function of the citizen to keep the government from falling into error.” - U.S. Supreme Court Justice Robert H. Jackson, 1950</li>
<li><strong>Tyranny vs.&nbsp;Democracy:</strong> Tyrannical governments are more likely to engage in widespread torture, famine, and criminal irresponsibility than democratic governments because their rulers are less accountable to the people.</li>
<li><strong>Error-correcting machinery in politics:</strong> Democratic systems provide mechanisms for removing leaders who engage in wrongdoing, thus correcting errors in governance.</li>
</ul></li>
<li><strong>Science and Social Systems:</strong>
<ul>
<li><strong>The scientific method</strong>, despite its imperfections, can be used to improve social, political, and economic systems, regardless of the chosen criteria for improvement.</li>
<li><strong>Social Experiments:</strong> Every government action, policy change, or even inaction is an experiment that can be analyzed to assess its effects.
<ul>
<li>Examples:
<ul>
<li>Acts of Congress, Supreme Court decisions, Presidential directives</li>
<li>Economic policy shifts, funding changes for social programs, criminal sentencing adjustments</li>
<li>Public health interventions (needle exchanges, condom distribution, drug decriminalization)</li>
<li>Foreign policy decisions (non-intervention in historical conflicts)</li>
<li>Political and economic systems (Communism, privatization)</li>
<li>Gun control policies (comparing Seattle and Vancouver)</li>
</ul></li>
</ul></li>
<li><strong>Limitations of Social Experiments:</strong> Adequate control experiments are often lacking, and variables are not always well-separated.</li>
<li><strong>Value of Social Experiments:</strong> Despite limitations, social experiments provide valuable data that should not be ignored due to ideological biases.</li>
</ul></li>
</ul>
</section>
<section id="the-need-for-experimentation-and-adaptability" class="level3">
<h3 class="anchored" data-anchor-id="the-need-for-experimentation-and-adaptability">The Need for Experimentation and Adaptability</h3>
<ul>
<li><strong>Challenges of the 21st Century:</strong> No nation is currently optimized for the complex problems of the mid-21st century, requiring subtle and complex solutions.</li>
<li><strong>Scientific Experimentation as a Solution:</strong> Due to the lack of a deductive theory of social organization, <strong>scientific experimentation</strong> is crucial for finding effective solutions.
<ul>
<li><strong>Small-Scale Experiments:</strong> Trying out different approaches on smaller scales (community, city, state levels) allows for testing and refinement.</li>
<li><strong>Historical Example:</strong> Confucius’ desire to construct a model state illustrates the historical recognition of the value of social experimentation.</li>
</ul></li>
</ul>
</section>
<section id="understanding-human-fallibility-and-the-role-of-the-constitution" class="level3">
<h3 class="anchored" data-anchor-id="understanding-human-fallibility-and-the-role-of-the-constitution">Understanding Human Fallibility and the Role of the Constitution</h3>
<ul>
<li><strong>Recurring Human Mistakes:</strong> History demonstrates humanity’s tendency to repeat mistakes: fear of strangers, resorting to violence, susceptibility to manipulation by leaders.</li>
<li><strong>The Framers’ Wisdom:</strong> The framers of the U.S. Constitution were aware of human fallibility and designed a system to safeguard freedom despite these weaknesses.</li>
<li><strong>Challenges and Skepticism:</strong>
<ul>
<li>Opponents of the Constitution believed a republican form of government across a diverse land was impossible, citing historical experience.</li>
<li><strong>The Experiment Proceeds:</strong> Despite doubts, the American experiment with a republican government was initiated.</li>
</ul></li>
<li><strong>Scientific Influence on the Founding Fathers:</strong>
<ul>
<li>The founders were influenced by scientific findings and attitudes of the European Enlightenment.</li>
<li><strong>Emphasis on Natural Law:</strong> The Declaration of Independence highlights “the laws of nature and of nature’s God” as the supreme authority.</li>
<li><strong>Examples of Scientific Thinking:</strong>
<ul>
<li>Benjamin Franklin’s contributions to electrical physics</li>
<li>John Adams’ use of mechanical analogies</li>
<li>References to William Harvey’s discovery of blood circulation</li>
<li>John Adams’ view of the universe as a chemical experiment</li>
<li>James Madison’s use of scientific metaphors</li>
</ul></li>
</ul></li>
<li><strong>The Enlightenment and American Revolution:</strong> The American Revolutionaries were deeply influenced by the European Enlightenment, which emphasized reason, science, and individual liberty.
<ul>
<li><strong>Connection Between Science and Democracy:</strong> Free inquiry, information exchange, optimism, self-criticism, pragmatism, and objectivity, all hallmarks of science, were also integral to the emerging American republic.</li>
</ul></li>
</ul>
</section>
<section id="thomas-jefferson-scientist-and-champion-of-democracy" class="level3">
<h3 class="anchored" data-anchor-id="thomas-jefferson-scientist-and-champion-of-democracy">Thomas Jefferson: Scientist and Champion of Democracy</h3>
<ul>
<li><strong>Jefferson’s Scientific Pursuits:</strong>
<ul>
<li><strong>Self-Identification as a Scientist:</strong> Jefferson considered himself a scientist.</li>
<li><strong>Evidence of Scientific Interests:</strong> Monticello, Jefferson’s home, displays numerous scientific instruments and inventions, reflecting his broad interests.</li>
<li><strong>Scientific Activities:</strong> Jefferson compared flora and fauna, uncovered fossils, applied calculus to plow design, and mastered Newtonian physics.</li>
<li><strong>Obstacles to a Scientific Career:</strong> Lack of opportunities in pre-revolutionary Virginia led Jefferson to prioritize political involvement.</li>
<li><strong>Vision for Future Generations:</strong> Jefferson believed future generations could focus on science and scholarship once independence was achieved.</li>
</ul></li>
<li><strong>Jefferson’s Legacy as a Champion of Democracy:</strong>
<ul>
<li><strong>Sagan’s Admiration:</strong> Carl Sagan admires Jefferson for his role in spreading democracy.</li>
<li><strong>The Radical Idea of Popular Rule:</strong> Jefferson advocated for the revolutionary concept of rule by ordinary people, challenging traditional power structures.</li>
<li><strong>Theoretical and Practical Contributions:</strong> Jefferson was both a theorist and a practitioner of democracy, contributing to the American experiment that inspired others worldwide.</li>
<li><strong>Death and the Declaration of Independence:</strong> Jefferson died on July 4th, 1826, the 50th anniversary of the Declaration of Independence, a document he authored and that was denounced by conservatives globally for its challenge to established power.</li>
<li><strong>The Power of Science and Equality:</strong> Jefferson believed science demonstrated the inherent equality of all people, refuting the notion of divinely ordained social hierarchies.</li>
<li><strong>Expanding the Definition of “All”:</strong> While the Declaration’s definition of “all” was incomplete in 1776, its spirit has allowed for a more inclusive understanding over time.</li>
</ul></li>
<li><strong>Jefferson’s Understanding of History and Power:</strong>
<ul>
<li><strong>Student of History:</strong> Jefferson studied history, including its less flattering aspects, recognizing human weaknesses and the potential for abuse of power.</li>
<li><strong>Observations on European Governments:</strong> Jefferson witnessed firsthand the oppressive nature of European governments, characterizing them as dividing society into “wolves and sheep.”</li>
<li><strong>The Dangers of Unchecked Power:</strong> Jefferson believed all governments degenerate when left solely to rulers, as power inevitably leads to corruption.</li>
<li><strong>The People as the Safeguard:</strong> He advocated for the people as the ultimate repository of power but recognized their susceptibility to manipulation.</li>
</ul></li>
</ul>
</section>
<section id="safeguards-against-tyranny-separation-of-powers-and-education" class="level3">
<h3 class="anchored" data-anchor-id="safeguards-against-tyranny-separation-of-powers-and-education">Safeguards Against Tyranny: Separation of Powers and Education</h3>
<ul>
<li><p><strong>Safeguards and Insurance Policies:</strong> Jefferson proposed safeguards to protect against the potential for abuse of power by the people or the government.</p></li>
<li><p><strong>Separation of Powers:</strong> Dividing power among different branches and levels of government (executive, legislative, judicial; House and Senate; states and federal government) creates checks and balances, preventing any single entity from dominating.</p></li>
<li><p><strong>Importance of Education and Citizen Engagement:</strong> Jefferson emphasized the crucial role of educating the public about the workings of government and encouraging their active participation in the political process to prevent tyranny.</p>
<ul>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>“In every government on earth is some trace of human weakness, some germ of corruption and degeneracy, which cunning will discover, and wickedness insensibly open, cultivate, and improve. Every government degenerates when trusted to the rulers of the people alone. The people themselves, therefore, are its only safe depositories. And to render even them safe, their minds must be improved.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Jefferson’s Critique of the Constitution:</strong></p>
<ul>
<li><strong>Absence of Term Limits:</strong> Jefferson criticized the lack of presidential term limits, fearing it could lead to a de facto monarchy.</li>
<li><strong>Lack of a Bill of Rights:</strong> He also lamented the absence of a Bill of Rights, believing it failed to adequately protect individual citizens from government overreach.</li>
</ul></li>
<li><p><strong>Advocacy for Free Speech:</strong> Jefferson championed freedom of speech, even for unpopular views, as essential for challenging conventional wisdom and holding power accountable.</p></li>
</ul>
</section>
<section id="the-importance-of-skepticism-and-tolerance" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-skepticism-and-tolerance">The Importance of Skepticism and Tolerance</h3>
<ul>
<li><strong>Jefferson’s Personal Character and Political Philosophy:</strong> Despite being personally amiable, Jefferson believed <strong>skepticism</strong> was crucial for responsible citizenship.</li>
<li><strong>Education as an Investment:</strong> He argued that the cost of education is far less than the cost of ignorance and allowing the government to be controlled by the “wolves.”</li>
<li><strong>The Importance of Questioning Authority:</strong> Jefferson believed a safe and just society requires citizens who are educated, form their own opinions, and actively participate in governance.
<ul>
<li><strong>Proposed Additions to Oaths and Pledges:</strong> Sagan suggests incorporating a commitment to questioning authority into oaths of citizenship and student pledges, aligning with Jefferson’s emphasis on critical thinking.</li>
<li><strong>Focusing Allegiance on Principles:</strong> He also proposes directing the Pledge of Allegiance towards the Constitution and Bill of Rights, emphasizing the foundational principles of the nation.</li>
</ul></li>
<li><strong>Reflecting on the Founding Fathers:</strong> Sagan highlights the qualities of the Founding Fathers: well-educated, influenced by the Enlightenment, students of history, aware of human fallibility, skilled communicators, principled yet pragmatic, capable of long-term vision, self-sufficient, and interested in science.
<ul>
<li><strong>Their Legacy:</strong> They established a system (the Constitution and Bill of Rights) designed to self-correct and adapt over time.</li>
</ul></li>
<li><strong>The Scarcity of Modern Leaders:</strong> Sagan observes that while the U.S. population has grown significantly since the founding era, there seems to be a dearth of leaders comparable to the Founding Fathers, questioning their absence in modern society.</li>
</ul>
</section>
<section id="the-constitutions-adaptability-and-the-importance-of-diverse-views" class="level3">
<h3 class="anchored" data-anchor-id="the-constitutions-adaptability-and-the-importance-of-diverse-views">The Constitution’s Adaptability and the Importance of Diverse Views</h3>
<ul>
<li><strong>Provision for Change:</strong> The Constitution’s strength lies in its capacity for change, even of the government itself, reflecting the understanding that unforeseen challenges may require innovative solutions.</li>
<li><strong>Guaranteeing Free Expression:</strong> The Constitution prioritizes the broadest possible expression of views, recognizing the value of diverse perspectives.</li>
<li><strong>The Price of Free Speech:</strong> While most support free speech for themselves, there’s often less enthusiasm for protecting the speech of those with opposing or unpopular views.</li>
<li><strong>Limits on Free Speech:</strong> Freedom of expression is not absolute and has narrowly defined limitations, such as inciting panic (e.g., falsely shouting “fire” in a crowded theater).</li>
<li><strong>Examples of Protected Expression:</strong> The Constitution protects even highly offensive or controversial forms of expression, including using images of public officials for target practice, burning the President in effigy, and practicing unconventional religions.</li>
<li><strong>Countering Bad Ideas with Better Ones:</strong> The remedy for harmful or false ideas is not censorship but engaging with and refuting them through reason and evidence.</li>
<li><strong>Protecting Even Detestable Opinions:</strong> Even hateful ideologies, such as those promoting conspiracy theories or praising mass murderers, are entitled to be heard under the Bill of Rights.</li>
<li><strong>The Paradox of Protecting Those Who Would Abolish Rights:</strong> The Constitution protects the right of individuals and groups who, if given power, would likely abolish the very freedoms that protect them.
<ul>
<li><strong>Example:</strong> Attorney General Tom Clark’s 1948 suggestion that those who don’t believe in U.S. ideology should be deported contradicts the core American principle of ideological freedom.</li>
<li><strong>Further Examples:</strong>
<ul>
<li>John Brokhoft, convicted of bombing an abortion clinic, advocating for “narrow-mindedness” as a national virtue</li>
<li>Randall Terry, founder of Operation Rescue, promoting intolerance and a desire for a theocratic state</li>
</ul></li>
</ul></li>
<li><strong>The Importance of Defending the Bill of Rights:</strong> The protection against such extremist views lies in using the Bill of Rights to educate citizens about its importance and actively defending it.</li>
<li><strong>Evaluating Alternative Systems:</strong> Sagan challenges those who advocate for alternative systems to demonstrate how they would protect against human fallibility and provide error correction mechanisms superior to those offered by the Constitution and Bill of Rights.</li>
</ul>
</section>
<section id="the-value-of-open-debate-and-the-power-of-changing-minds" class="level3">
<h3 class="anchored" data-anchor-id="the-value-of-open-debate-and-the-power-of-changing-minds">The Value of Open Debate and the Power of Changing Minds</h3>
<ul>
<li><strong>John Stuart Mill’s Defense of Free Speech:</strong>
<ul>
<li><strong>Silencing Opinions as Evil:</strong> Philosopher John Stuart Mill argued that suppressing opinions is harmful, regardless of their validity.</li>
<li><strong>Losing Opportunities for Truth and Understanding:</strong> If an opinion is correct, silencing it prevents us from correcting errors. If it’s wrong, it deprives us of a deeper understanding of truth through its confrontation with falsehood.</li>
<li><strong>The Importance of Engaging with Opposing Views:</strong> Knowing only one side of an argument weakens our understanding, making it stale and untested.</li>
<li><strong>Society’s Responsibility for Citizen Development:</strong> Mill asserted that society is responsible for fostering critical thinking and rational decision-making in its members.</li>
</ul></li>
<li><strong>Jefferson’s Warning Against Ignorance and Complacency:</strong>
<ul>
<li><strong>Quote:</strong> “If a nation expects to be both ignorant and free, in a state of civilization, it expects what never was and never will be.”</li>
<li><strong>The Danger of Trading Liberty for Order:</strong> “A society that will trade a little liberty for a little order will lose both, and deserve neither.”</li>
</ul></li>
<li><strong>The Potential for Transformation Through Debate:</strong> Engaging with alternative viewpoints and participating in meaningful debate can lead to individuals changing their minds.
<ul>
<li><strong>Example: Hugo Black’s Evolution:</strong> Supreme Court Justice Hugo Black, a former Ku Klux Klan member, became a champion of civil rights, demonstrating the power of personal transformation.</li>
</ul></li>
<li><strong>Error Correction in Criminal Justice:</strong>
<ul>
<li><strong>Protecting Against Abuse:</strong> The Bill of Rights safeguards against potential abuses of power within the criminal justice system, recognizing the fallibility of police, prosecutors, and judges.</li>
<li><strong>Balancing Justice and Protecting the Innocent:</strong> The system prioritizes protecting the innocent, even if it means occasionally allowing the guilty to go free. This acts as a deterrent against the misuse of the justice system for political repression.</li>
</ul></li>
</ul>
</section>
<section id="the-interplay-between-freedom-and-science" class="level3">
<h3 class="anchored" data-anchor-id="the-interplay-between-freedom-and-science">The Interplay Between Freedom and Science</h3>
<ul>
<li><strong>Freedom as a Catalyst for Innovation:</strong> New ideas, inventions, and creativity thrive in environments that encourage freedom and challenge constraints.</li>
<li><strong>Freedom and Scientific Progress:</strong> Freedom is essential for the advancement of science, as demonstrated by the Soviet Union’s inability to compete technologically due to its totalitarian system.</li>
<li><strong>Science and the Preservation of Freedom:</strong> Conversely, science, with its emphasis on openness, skepticism, diversity, and debate, is crucial for maintaining freedom in a technologically advanced society.</li>
<li><strong>The Erosion of Authoritarianism:</strong> Questioning established dogma, whether religious or political, through scientific inquiry can weaken authoritarian power structures.</li>
<li><strong>Shifting Attitudes Towards Dissent:</strong> The willingness to punish dissent through torture and violence diminished as scientific thinking and skepticism gained ground.</li>
</ul>
</section>
<section id="the-separation-of-church-and-state-fostering-tolerance-and-protecting-freedom" class="level3">
<h3 class="anchored" data-anchor-id="the-separation-of-church-and-state-fostering-tolerance-and-protecting-freedom">The Separation of Church and State: Fostering Tolerance and Protecting Freedom</h3>
<ul>
<li><strong>The Evolution of Christianity in America:</strong> The American environment fostered a more humanistic, tolerant, liberal, and experimental form of Christianity, influenced by the rise of science and democracy.</li>
<li><strong>Growing Secularism and Skepticism:</strong> Increasingly, colonists adopted a more secular and skeptical outlook, challenging traditional religious authority.</li>
<li><strong>Rationale for Separation of Church and State:</strong> The Bill of Rights established the separation of church and state to protect freedom and prevent religious persecution, recognizing the dangers of intertwining government with any single religion.
<ul>
<li><strong>Justice Black’s View:</strong> Justice Hugo Black argued that uniting government and religion harms both institutions.</li>
</ul></li>
<li><strong>Benefits of Religious Pluralism:</strong> The separation of powers extends to religion, with competition among different sects and cults serving as a check on each other’s power, promoting a healthier religious landscape.</li>
<li><strong>The Cost of Religious Competition:</strong> However, this competition can hinder the ability of religious groups to work together for the common good.</li>
<li><strong>The Significance of Separation and Liberty of Conscience:</strong> The separation of church and state and the freedom of individual conscience are considered fundamental to American democracy and a major contribution to Western liberty.</li>
</ul>
</section>
<section id="the-importance-of-exercising-rights-and-safeguarding-freedoms" class="level3">
<h3 class="anchored" data-anchor-id="the-importance-of-exercising-rights-and-safeguarding-freedoms">The Importance of Exercising Rights and Safeguarding Freedoms</h3>
<ul>
<li><p><strong>Use It or Lose It:</strong> Constitutional rights are meaningless if not actively exercised. Freedom of speech, press, assembly, and religion, as well as the separation of powers, must be vigilantly protected and utilized.</p></li>
<li><p><strong>The Resilience of Free Speech:</strong> Despite occasional attempts at suppression by various entities, free speech in America tends to prevail due to the Constitution’s protections and the efforts of activists and the courts.</p></li>
<li><p><strong>Threats to Freedom:</strong> However, liberties can be eroded through declining educational standards, intellectual incompetence, a lack of engagement in meaningful debate, and social pressures that discourage skepticism.</p></li>
<li><p><strong>Jefferson’s Warning About Future Decline:</strong> Jefferson anticipated a potential decline in civic virtue and a disregard for individual rights over time, emphasizing the importance of vigilance in protecting freedoms.</p>
<ul>
<li><p><strong>Quote:</strong></p>
<blockquote class="blockquote">
<p>“The time for fixing every essential right on a legal basis is while our rulers are honest and ourselves united. From the conclusion of this revolutionary war, we shall be going downhill. It will not then be necessary to resort every moment to the people for support. They will be forgotten, therefore, and their rights disregarded. They will forget themselves, but in the sole faculty of making money, and will never think of uniting to effect a due respect for their rights. The shackles, therefore, which shall not be knocked off at the conclusion of this war, will remain on us long, will be made heavier and heavier, till our rights shall revive or expire in a convulsion.”</p>
</blockquote></li>
</ul></li>
<li><p><strong>Education as a Bulwark Against Tyranny:</strong> Education about the value of free speech and other fundamental rights, the consequences of their absence, and how to exercise and protect them is essential for responsible citizenship in any nation.</p></li>
<li><p><strong>Empowering Citizens Through Critical Thinking:</strong> When citizens are educated and capable of independent thought, they can hold those in power accountable. Conversely, a lack of critical thinking makes citizens vulnerable to manipulation.</p></li>
</ul>
</section>
<section id="conclusion-science-the-bill-of-rights-and-the-fight-against-darkness" class="level3">
<h3 class="anchored" data-anchor-id="conclusion-science-the-bill-of-rights-and-the-fight-against-darkness">Conclusion: Science, the Bill of Rights, and the Fight Against Darkness</h3>
<ul>
<li><strong>Universal Importance of Science and Rights Education:</strong> Sagan advocates for teaching the scientific method and the rationale for a Bill of Rights in every country, fostering decency, humility, and community spirit.</li>
<li><strong>The Role of Reason and Rights in a Complex World:</strong> In a world prone to irrationality and fear, science and the Bill of Rights may be the best defenses against darkness and oppression.</li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>book</category>
  <category>notes</category>
  <category>history</category>
  <guid>https://christianjmills.com/posts/the-demon-haunted-world-book-notes/</guid>
  <pubDate>Thu, 26 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Getting Started with Intel’s PyTorch Extension for Arc GPUs on Ubuntu</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-ubuntu/</link>
  <description><![CDATA[ 




<ul>
<li>Introduction</li>
<li>Enable Resizable BAR in BIOS</li>
<li>Install Ubuntu</li>
<li>Verify Resizable BAR</li>
<li>Install Drivers<br>
</li>
<li>Set Up a Python Environment<br>
</li>
<li>Modify PyTorch Code<br>
</li>
<li>Local LLM Inference with <code>IPEX-LLM</code><br>
</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this tutorial, I’ll guide you through setting up Intel’s <a href="https://github.com/intel/intel-extension-for-pytorch">PyTorch extension</a> on <a href="https://ubuntu.com/download/desktop">Ubuntu</a> to train models with their <a href="https://www.intel.com/content/www/us/en/products/docs/discrete-gpus/arc/desktop/a-series/overview.html">Arc GPUs</a>. The extension provides Intel’s latest feature optimizations and hardware support before they get added to PyTorch. Most importantly for our case, it includes support for Intel’s Arc GPUs and optimizations to take advantage of their Xe Matrix Extensions (XMX).</p>
<p>The XMX engines are dedicated hardware for performing matrix operations like those in deep-learning workloads. Intel’s PyTorch extension allows us to leverage this hardware with minimal changes to existing PyTorch code.</p>
<p>To illustrate this, we will walk through two use cases. First, we’ll adapt the training code from my beginner-level PyTorch tutorial, where we fine-tune an image classification model from the <a href="https://github.com/huggingface/pytorch-image-models">timm library</a> for hand gesture recognition. Second, we will use the <a href="https://github.com/intel-analytics/ipex-llm"><code>ipex-llm</code></a> library, which builds on Intel’s PyTorch extension, to perform inference with the <a href="https://huggingface.co/meta-llama/Meta-Llama-3.1-8B-Instruct">LLaMA 3.1 8B Instruct</a> model.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The current setup process is for version <a href="https://intel.github.io/intel-extension-for-pytorch/xpu/2.3.110+xpu/"><code>2.3.110+xpu</code></a> of Intel’s PyTorch extension.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="WSL">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
WSL
</div>
</div>
<div class="callout-body-container callout-body">
<p>The following setup process also works for WSL (Windows Subsystem for Linux). If you are working in WSL, skip to the following section after enabling Resizable BAR:</p>
<ul>
<li>Install Drivers</li>
</ul>
<p>Follow the steps in the linked section below to deactivate the Integrated Graphics. This step is required to use the extension on Windows.</p>
<ul>
<li><a href="../../../posts/intel-pytorch-extension-tutorial/native-windows/#disable-integrated-graphics">Getting Started with Intel’s PyTorch Extension for Arc GPUs on Windows - Disable Integrated Graphics</a></li>
</ul>
</div>
</div>
</section>
<section id="enable-resizable-bar-in-bios" class="level2">
<h2 class="anchored" data-anchor-id="enable-resizable-bar-in-bios">Enable Resizable BAR in BIOS</h2>
<p>If you have an Arc GPU, one of the first things you should do is enable Resizable BAR. Resizable BAR allows a computer’s processor to access the graphics card’s entire memory instead of in small chunks. The Arc GPUs currently require this feature to perform as intended. You can enable the feature in your motherboard’s BIOS.</p>
<p>Here are links on how to do this for some of the popular motherboard manufacturers:</p>
<ul>
<li><a href="https://www.asrock.com/support/faq.asp?id=498">ASRock</a></li>
<li><a href="https://www.asus.com/support/FAQ/1046107/">Asus</a></li>
<li><a href="https://www.evga.com/support/faq/FAQdetails.aspx?faqid=59772">EVGA</a></li>
<li><a href="https://www.gigabyte.com/WebPage/785/NVIDIA_resizable_bar.html">Gigabyte</a></li>
<li><a href="https://www.msi.com/blog/unlock-system-performance-to-extreme-resizable-bar">MSI</a></li>
</ul>
</section>
<section id="install-ubuntu" class="level2">
<h2 class="anchored" data-anchor-id="install-ubuntu">Install Ubuntu</h2>
<p>Intel’s <a href="https://dgpu-docs.intel.com/driver/client/overview.html#client-install-options">documentation</a> recommends Ubuntu 22.04 LTS or newer. I verified the following steps in both Ubuntu 22.04 and 24.04. If you already have Ubuntu 22.04 LTS or newer installed, ensure it’s fully updated.</p>
<ul>
<li><a href="https://ubuntu.com/download/desktop">Download Ubuntu Desktop Download Page</a></li>
</ul>
<p>The Ubuntu website provides <a href="https://ubuntu.com/tutorials/install-ubuntu-desktop#1-overview">a step-by-step guide</a> to installing Ubuntu on your PC, and you can install it alongside an existing operating system.</p>
<ul>
<li><strong>Tutorial:</strong> <a href="https://ubuntu.com/tutorials/install-ubuntu-desktop#1-overview">Install Ubuntu with a Bootable USB Stick</a></li>
</ul>
<p>That tutorial calls for at least 25GB of free storage space, but I recommend at least 80 GB for our case.</p>
</section>
<section id="verify-resizable-bar" class="level2">
<h2 class="anchored" data-anchor-id="verify-resizable-bar">Verify Resizable BAR</h2>
<p>Once you log into Ubuntu, you can verify Resizable BAR is active by opening a terminal (<code>Ctrl+Alt+T</code>) and running the following command:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lspci</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-A8</span> VGA</span></code></pre></div>
<p>Here is the output for the Arc A770 16GB card:</p>
<pre class="text"><code>$ lspci -v |grep -A8 VGA
00:02.0 VGA compatible controller: Intel Corporation RocketLake-S GT1 [UHD Graphics 750] (rev 04) (prog-if 00 [VGA controller])
    Subsystem: ASRock Incorporation RocketLake-S GT1 [UHD Graphics 750]
    Flags: bus master, fast devsel, latency 0, IRQ 172
    Memory at 6401000000 (64-bit, non-prefetchable) [size=16M]
    Memory at 4000000000 (64-bit, prefetchable) [size=256M]
    I/O ports at 3000 [size=64]
    Expansion ROM at 000c0000 [virtual] [disabled] [size=128K]
    Capabilities: &lt;access denied&gt;
    Kernel driver in use: i915
--
03:00.0 VGA compatible controller: Intel Corporation DG2 [Arc A770] (rev 08) (prog-if 00 [VGA controller])
    Subsystem: Intel Corporation DG2 [Arc A770]
    Flags: bus master, fast devsel, latency 0, IRQ 173
    Memory at a1000000 (64-bit, non-prefetchable) [size=16M]
    Memory at 6000000000 (64-bit, prefetchable) [size=16G]
    Expansion ROM at a2000000 [disabled] [size=2M]
    Capabilities: &lt;access denied&gt;
    Kernel driver in use: i915
    Kernel modules: i915</code></pre>
<hr>
<p>Note that the <code>[size=16G]</code> matches the total memory for the GPU. If you have the A750 8GB variant, it should read <code>[size=8G]</code> for your GPU.</p>
</section>
<section id="install-drivers" class="level2">
<h2 class="anchored" data-anchor-id="install-drivers">Install Drivers</h2>
<p>Next, we will install the compute, media, and display runtimes.</p>
<section id="add-intel-graphics-drivers-repository" class="level3">
<h3 class="anchored" data-anchor-id="add-intel-graphics-drivers-repository">Add Intel Graphics drivers Repository</h3>
<p>Run the following bash commands to add the Intel Graphics drivers repository:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-qO</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> https://repositories.intel.com/gpu/intel-graphics.key <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> gpg <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--yes</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dearmor</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output</span> /usr/share/keyrings/intel-graphics.gpg</span>
<span id="cb3-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/gpu/ubuntu jammy/lts/2350 unified"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/intel-gpu-jammy.list</span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt update</span></code></pre></div>
<p>The above bash commands perform the following steps:</p>
<ol type="1">
<li>Download the Intel graphics repository’s public key.</li>
<li>Convert the downloaded key to binary and save it.</li>
<li>Add the Intel graphics repository to the APT’s list of package sources.</li>
<li>Update the package list from all configured repositories, including the newly added Intel repository.</li>
</ol>
</section>
<section id="install-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-packages">Install packages</h3>
<p>Now we can install the required packages.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-2">    intel-opencl-icd intel-level-zero-gpu level-zero <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-3">    intel-media-va-driver-non-free libmfx1 libmfxgen1 libvpl2 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-4">    libegl-mesa0 libegl1-mesa libegl1-mesa-dev libgbm1 libgl1-mesa-dev libgl1-mesa-dri <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5">    libglapi-mesa libgles2-mesa-dev libglx-mesa0 libigdgmm12 libxatracker2 mesa-va-drivers <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-6">    mesa-vdpau-drivers mesa-vulkan-drivers va-driver-all vainfo hwinfo clinfo</span></code></pre></div>
</section>
</section>
<section id="set-up-a-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="set-up-a-python-environment">Set Up a Python Environment</h2>
<p>Next, we can create a Python environment to run the training code. We’ll install a patched version of PyTorch needed for Intel’s extension, the extension itself, and the other dependencies for the training code.</p>
<section id="install-mamba-package-manager" class="level3">
<h3 class="anchored" data-anchor-id="install-mamba-package-manager">Install Mamba Package Manager</h3>
<p>We’ll use the <a href="https://mamba.readthedocs.io/en/latest/">Mamba</a> package manager to create the Python environment. You can learn more about it in my <a href="../../../posts/mamba-getting-started-tutorial-windows/">getting started</a> tutorial.</p>
<p>The following bash commands will download the latest release, install it, and relaunch the current bash shell to apply the relevant changes:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download the latest Miniforge3 installer for the current OS and architecture</span></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.sh"</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the Miniforge3 installer silently (-b flag for batch mode)</span></span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span> Miniforge3-<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>-<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uname</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span>.sh <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize mamba for shell usage</span></span>
<span id="cb5-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">~/miniforge3/bin/mamba</span> init</span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Restart the shell to apply changes</span></span>
<span id="cb5-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bash</span></span></code></pre></div>
</section>
<section id="create-a-python-environment" class="level3">
<h3 class="anchored" data-anchor-id="create-a-python-environment">Create a Python Environment</h3>
<p>Next, we’ll create a Python environment and activate it. The current version of the extension supports Python 3.11, so we’ll use that.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> pytorch-arc python=3.11 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb6-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> activate pytorch-arc</span></code></pre></div>
</section>
<section id="install-pytorch-and-intels-pytorch-extension" class="level3">
<h3 class="anchored" data-anchor-id="install-pytorch-and-intels-pytorch-extension">Install PyTorch and Intel’s PyTorch extension</h3>
<p>The following command will install the required versions of PyTorch and torchvision, along with the extension itself:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install torch==2.3.1+cxx11.abi torchvision==0.18.1+cxx11.abi torchaudio==2.3.1+cxx11.abi intel-extension-for-pytorch==2.3.110+xpu oneccl_bind_pt==2.3.100+xpu <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extra-index-url</span> https://pytorch-extension.intel.com/release-whl/stable/xpu/us/</span></code></pre></div>
</section>
<section id="install-additional-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="install-additional-dependencies">Install additional dependencies</h3>
<p>Lastly, we’ll install the other training code dependencies. You can learn about these dependencies (<a href="../../../posts/pytorch-train-image-classifier-timm-hf-tutorial/#installing-additional-libraries">here</a>).</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install jupyter matplotlib pandas pillow timm torcheval torchtnt tqdm</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install cjm_pandas_utils cjm_psl_utils cjm_pil_utils cjm_pytorch_utils cjm_torchvision_tfms</span></code></pre></div>
<div class="callout callout-style-default callout-important callout-titled" title="oneDNN Memory Layout">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
oneDNN Memory Layout
</div>
</div>
<div class="callout-body-container callout-body">
<p>The previous version of this tutorial set an environment variable for the oneDNN memory layout to improve training speed. The performance improvement from this step is no longer significant and even prevents successful training for other model types.</p>
<p>If you followed the previous version of this tutorial, run the following command to remove the environment variable from the <code>.bashrc</code> file and apply the changes to the current shell:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sed</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/export IPEX_XPU_ONEDNN_LAYOUT=1/d'</span> ~/.bashrc <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">&amp;&amp;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> ~/.bashrc</span></code></pre></div>
</div>
</div>
</section>
</section>
<section id="modify-pytorch-code" class="level2">
<h2 class="anchored" data-anchor-id="modify-pytorch-code">Modify PyTorch Code</h2>
<p>It’s finally time to train a model. The Jupyter Notebooks with the original and modified training code are available on GitHub at the links below.</p>
<ul>
<li><a href="https://github.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/pytorch-timm-image-classifier-training.ipynb">pytorch-timm-image-classifier-training.ipynb</a></li>
<li><a href="https://github.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/intel-arc-pytorch-timm-image-classifier-training.ipynb">intel-arc-pytorch-timm-image-classifier-training.ipynb</a></li>
</ul>
<p>You can also download the notebooks to the current directory by running the following commands:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> https://raw.githubusercontent.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/main/notebooks/pytorch-timm-image-classifier-training.ipynb <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-2">wget https://raw.githubusercontent.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/main/notebooks/intel-arc-pytorch-timm-image-classifier-training.ipynb</span></code></pre></div>
<p>Once downloaded, run the following command to launch the Jupyter Notebook Environment:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> notebook</span></code></pre></div>
<section id="set-environment-variables" class="level3">
<h3 class="anchored" data-anchor-id="set-environment-variables">Set Environment Variables</h3>
<p>First, we need to set the following environment variables:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb12-2">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OCL_ICD_VENDORS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/etc/OpenCL/vendors'</span></span>
<span id="cb12-3">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CCL_ROOT'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CONDA_PREFIX'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span></code></pre></div>
</section>
<section id="import-pytorch-extension" class="level3">
<h3 class="anchored" data-anchor-id="import-pytorch-extension">Import PyTorch Extension</h3>
<p>Next, we import Intel’s PyTorch extension with the following code:</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">import</span> intel_extension_for_pytorch as ipex</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">print</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PyTorch Version: {torch.__version__}'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb13-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">print</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Intel PyTorch Extension Version: {ipex.__version__}'</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<p>Note that we need to import PyTorch before the extension. Also, if you get the following user warning, don’t worry. It’s normal.</p>
<pre class="text"><code>PyTorch Version: 2.3.1+cxx11.abi
Intel PyTorch Extension Version: 2.3.110+xpu

/home/innom-dt/mambaforge/envs/pytorch-arc/lib/python3.11/site-packages/intel_extension_for_pytorch/llm/__init__.py:9: UserWarning: failed to use huggingface generation fuctions due to: No module named 'transformers'.
  warnings.warn(f"failed to use huggingface generation fuctions due to: {e}.")</code></pre>
<hr>
</section>
<section id="update-pytorch-imports" class="level3">
<h3 class="anchored" data-anchor-id="update-pytorch-imports">Update PyTorch Imports</h3>
<p>We don’t want to re-import <code>torch</code> after the extension, so we’ll remove that line from the <code>Import PyTorch dependencies</code> section.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb15-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> autocast</span>
<span id="cb15-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.cuda.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GradScaler</span>
<span id="cb15-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, DataLoader</span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb16-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> autocast</span>
<span id="cb16-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.cuda.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GradScaler</span>
<span id="cb16-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, DataLoader</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="verify-arc-gpu-availability" class="level3">
<h3 class="anchored" data-anchor-id="verify-arc-gpu-availability">Verify Arc GPU Availability</h3>
<p>We can double-check that the extension can use the Arc GPU by getting the properties of the available <code>xpu</code> devices.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_public_properties(obj):</span>
<span id="cb17-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Extract all public properties from an object.</span></span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    obj: The object to extract properties from.</span></span>
<span id="cb17-9"></span>
<span id="cb17-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    dict: A dictionary containing the object's public properties and their values.</span></span>
<span id="cb17-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb17-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb17-14">        prop: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(obj, prop)</span>
<span id="cb17-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> prop <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>(obj)</span>
<span id="cb17-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> prop.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">callable</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(obj, prop))</span>
<span id="cb17-17">    }</span>
<span id="cb17-18"></span>
<span id="cb17-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the number of available XPU devices</span></span>
<span id="cb17-20">xpu_device_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.xpu.device_count()</span>
<span id="cb17-21"></span>
<span id="cb17-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list of dictionaries containing properties for each XPU device</span></span>
<span id="cb17-23">dict_properties_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb17-24">    get_public_properties(torch.xpu.get_device_properties(i))</span>
<span id="cb17-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(xpu_device_count)</span>
<span id="cb17-26">]</span>
<span id="cb17-27"></span>
<span id="cb17-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the list of dictionaries to a pandas DataFrame for easy viewing</span></span>
<span id="cb17-29">pd.DataFrame(dict_properties_list)</span></code></pre></div>
<div style="overflow-x:auto;">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
driver_version
</th>
<th>
gpu_eu_count
</th>
<th>
gpu_subslice_count
</th>
<th>
has_atomic64
</th>
<th>
has_fp16
</th>
<th>
has_fp64
</th>
<th>
max_compute_units
</th>
<th>
max_num_sub_groups
</th>
<th>
max_work_group_size
</th>
<th>
name
</th>
<th>
platform_name
</th>
<th>
sub_group_sizes
</th>
<th>
total_memory
</th>
<th>
type
</th>
<th>
vendor
</th>
<th>
version
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
1.3.27642
</td>
<td>
512
</td>
<td>
32
</td>
<td>
True
</td>
<td>
True
</td>
<td>
False
</td>
<td>
512
</td>
<td>
128
</td>
<td>
1024
</td>
<td>
Intel(R) Arc(TM) A770 Graphics
</td>
<td>
Intel(R) Level-Zero
</td>
<td>
[8, 16, 32]
</td>
<td>
16225243136
</td>
<td>
gpu
</td>
<td>
Intel(R) Corporation
</td>
<td>
1.3
</td>
</tr>
<tr>
<th>
1
</th>
<td>
1.3.27642
</td>
<td>
32
</td>
<td>
2
</td>
<td>
True
</td>
<td>
True
</td>
<td>
False
</td>
<td>
32
</td>
<td>
64
</td>
<td>
512
</td>
<td>
Intel(R) UHD Graphics 750
</td>
<td>
Intel(R) Level-Zero
</td>
<td>
[8, 16, 32]
</td>
<td>
30791524352
</td>
<td>
gpu
</td>
<td>
Intel(R) Corporation
</td>
<td>
1.3
</td>
</tr>
</tbody>
</table>
</div>
<p>In this case, the A770 is the default device, and the integrated graphics on the CPU is available as the second device. The <code>total_memory</code> value for the integrated graphics is higher because it uses system memory.</p>
</section>
<section id="update-the-device-name" class="level3">
<h3 class="anchored" data-anchor-id="update-the-device-name">Update the Device Name</h3>
<p>Next, we’ll manually set the device name to <code>xpu</code>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xpu'</span></span>
<span id="cb18-2">dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.float32</span>
<span id="cb18-3">device, dtype</span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_torch_device()</span>
<span id="cb19-2">dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.float32</span>
<span id="cb19-3">device, dtype</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="optimize-the-model-and-optimizer-objects" class="level3">
<h3 class="anchored" data-anchor-id="optimize-the-model-and-optimizer-objects">Optimize the <code>model</code> and <code>optimizer</code> Objects</h3>
<p>Before we run the <code>train_loop</code> function, we’ll use Intel’s PyTorch extension to apply optimizations to the model and optimizer objects. We’ll also cast the model to the <code>bfloat16</code> data type, so we can train using mixed precision.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate for the model</span></span>
<span id="cb20-2">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of training epochs</span></span>
<span id="cb20-5">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AdamW optimizer; includes weight decay for regularization</span></span>
<span id="cb20-8">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.AdamW(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, eps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimize the model and optimizer objects</span></span>
<span id="cb20-11">model, optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ipex.optimize(model, optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>optimizer, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16)</span>
<span id="cb20-12"></span>
<span id="cb20-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate scheduler; adjusts the learning rate during training</span></span>
<span id="cb20-14">lr_scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.lr_scheduler.OneCycleLR(optimizer, </span>
<span id="cb20-15">                                                   max_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, </span>
<span id="cb20-16">                                                   total_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_dataloader))</span>
<span id="cb20-17"></span>
<span id="cb20-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Performance metric: Multiclass Accuracy</span></span>
<span id="cb20-19">metric <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MulticlassAccuracy()</span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate for the model</span></span>
<span id="cb21-2">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of training epochs</span></span>
<span id="cb21-5">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AdamW optimizer; includes weight decay for regularization</span></span>
<span id="cb21-8">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.AdamW(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, eps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate scheduler; adjusts the learning rate during training</span></span>
<span id="cb21-11">lr_scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.lr_scheduler.OneCycleLR(optimizer, </span>
<span id="cb21-12">                                                   max_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, </span>
<span id="cb21-13">                                                   total_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_dataloader))</span>
<span id="cb21-14"></span>
<span id="cb21-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Performance metric: Multiclass Accuracy</span></span>
<span id="cb21-16">metric <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MulticlassAccuracy()</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="train-the-model" class="level3">
<h3 class="anchored" data-anchor-id="train-the-model">Train the Model</h3>
<p>That’s it for the required changes to the training code. We can now run the <code>train_loop</code> function.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Current</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">Previous</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<pre class="text"><code>Epochs: 100% |█████████| 3/3 [18:31&lt;00:00, 369.74s/it]
Train: 100% |█████████| 4324/4324 [05:56&lt;00:00, 12.48it/s, accuracy=0.843, avg_loss=0.542, loss=0.592, lr=0.000994]
Eval: 100% |█████████| 481/481 [00:19&lt;00:00, 43.79it/s, accuracy=0.957, avg_loss=0.147, loss=0.133, lr=]
Train: 100% |█████████| 4324/4324 [05:53&lt;00:00, 12.37it/s, accuracy=0.905, avg_loss=0.309, loss=0.321, lr=0.000462]
Eval: 100% |█████████| 481/481 [00:13&lt;00:00, 44.92it/s, accuracy=0.97, avg_loss=0.092, loss=0.0842, lr=]
Train: 100% |█████████| 4324/4324 [05:54&lt;00:00, 12.62it/s, accuracy=0.953, avg_loss=0.151, loss=0.0595, lr=4.03e-9]
Eval: 100% |█████████| 481/481 [00:13&lt;00:00, 43.28it/s, accuracy=0.988, avg_loss=0.0389, loss=0.0422, lr=]</code></pre>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-ubuntu/images/arc-a770-pytorch-training-session-ubuntu.png" class="img-fluid"></p>
</div>
</div>
</div>
<p>In my testing, the training speed is significantly slower with this extension than the one used for the previous version of this tutorial, with the total run taking 18 minutes 31 seconds versus 12 minutes 46 seconds.</p>
</section>
<section id="update-the-inference-code" class="level3">
<h3 class="anchored" data-anchor-id="update-the-inference-code">Update the Inference Code</h3>
<p>Since we cast the model to <code>bloat16</code>, we must ensure input data use the same type. We can update the inference code using the auto-cast context manager as shown below:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb23-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad(), autocast(torch.device(device).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>):</span>
<span id="cb23-3">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(img_tensor)</span></code></pre></div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb24-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb24-3">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(img_tensor)</span></code></pre></div>
</div>
</div>
</div>
</section>
</section>
<section id="local-llm-inference-with-ipex-llm" class="level2">
<h2 class="anchored" data-anchor-id="local-llm-inference-with-ipex-llm">Local LLM Inference with <code>IPEX-LLM</code></h2>
<p>To close out this tutorial, we will cover how to perform local LLM inference using Intel’s <a href="https://github.com/intel-analytics/ipex-llm"><code>ipex-llm</code></a> library. This library allows us to run many popular LLMs in INT4 precision on our Arc GPU.</p>
<section id="install-oneapi-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-oneapi-packages">Install oneAPI Packages</h3>
<p>The <code>ipex-llm</code> library requires packages from the oneAPI toolkit. Run the following commands to install them:</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Refresh sudo credentials without running a command</span></span>
<span id="cb25-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-v</span></span>
<span id="cb25-3"></span>
<span id="cb25-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Download Intel's GPG key, convert it to a format for the package manager, and save it</span></span>
<span id="cb25-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-O-</span> https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">gpg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dearmor</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /usr/share/keyrings/oneapi-archive-keyring.gpg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /dev/null</span>
<span id="cb25-6"></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add Intel's repository to the system's package sources</span></span>
<span id="cb25-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/apt/sources.list.d/oneAPI.list</span>
<span id="cb25-9"></span>
<span id="cb25-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the package list to include Intel's repository</span></span>
<span id="cb25-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt update</span>
<span id="cb25-12"></span>
<span id="cb25-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Install specific versions of Intel oneAPI components</span></span>
<span id="cb25-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> apt install intel-oneapi-common-vars=2024.0.0-49406 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-15">  intel-oneapi-common-oneapi-vars=2024.0.0-49406 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-16">  intel-oneapi-diagnostics-utility=2024.0.0-49093 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-17">  intel-oneapi-compiler-dpcpp-cpp=2024.0.2-49895 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-18">  intel-oneapi-dpcpp-ct=2024.0.0-49381 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-19">  intel-oneapi-mkl=2024.0.0-49656 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-20">  intel-oneapi-mkl-devel=2024.0.0-49656 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-21">  intel-oneapi-mpi=2021.11.0-49493 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-22">  intel-oneapi-mpi-devel=2021.11.0-49493 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-23">  intel-oneapi-dal=2024.0.1-25 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-24">  intel-oneapi-dal-devel=2024.0.1-25 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-25">  intel-oneapi-ippcp=2021.9.1-5 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-26">  intel-oneapi-ippcp-devel=2021.9.1-5 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-27">  intel-oneapi-ipp=2021.10.1-13 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-28">  intel-oneapi-ipp-devel=2021.10.1-13 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-29">  intel-oneapi-tlt=2024.0.0-352 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-30">  intel-oneapi-ccl=2021.11.2-5 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-31">  intel-oneapi-ccl-devel=2021.11.2-5 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-32">  intel-oneapi-dnnl-devel=2024.0.0-49521 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-33">  intel-oneapi-dnnl=2024.0.0-49521 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb25-34">  intel-oneapi-tcm-1.0=1.0.0-435</span></code></pre></div>
<section id="set-the-oneapi-environment-variables" class="level4">
<h4 class="anchored" data-anchor-id="set-the-oneapi-environment-variables">Set the oneAPI Environment Variables</h4>
<p>You will need to run the following command to activate the oneAPI environment variables after starting a new shell:</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up the oneAPI environment variables for the current shell session</span></span>
<span id="cb26-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /opt/intel/oneapi/setvars.sh</span></code></pre></div>
<p>Alternatively, you can run the following command to add it to the <code>.bashrc</code> file:</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb27-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'source /opt/intel/oneapi/setvars.sh &gt; /dev/null 2&gt;&amp;1'</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> ~/.bashrc</span></code></pre></div>
</section>
</section>
<section id="create-a-new-python-environment" class="level3">
<h3 class="anchored" data-anchor-id="create-a-new-python-environment">Create a New Python Environment</h3>
<p>Each library version depends on specific versions of Intel’s PyTorch extension. The most recent release of <code>ipex-llm</code> still depends on version <code>2.1.10+xpu</code> of the extension.</p>
<p>We can create a dedicated mamba environment for this library to avoid dependency conflicts:</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> ipex-llm-env python=3.11 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb28-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">mamba</span> activate ipex-llm-env</span></code></pre></div>
</section>
<section id="install-pip-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-pip-packages">Install PIP Packages</h3>
<p>We will use the LLaMA 3.1 8B Instruct model for demonstration purposes, which requires <a href="https://github.com/huggingface/transformers"><code>transformers</code></a> <code>4.43.1</code> or newer. We also need the <a href="https://huggingface.co/docs/trl/en/index"><code>trl</code></a> (Transformer Reinforcement Learning) package.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Installs intel_extension_for_pytorch==2.1.10+xpu as default</span></span>
<span id="cb29-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--pre</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> ipex-llm<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">xpu</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--extra-index-url</span> https://pytorch-extension.intel.com/release-whl/stable/xpu/us/</span>
<span id="cb29-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install jupyter transformers==4.43.1 trl</span></code></pre></div>
<p>We can launch a new Jupyter Notebook environment once the dependencies finish installing.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb30-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">jupyter</span> notebook</span></code></pre></div>
</section>
<section id="set-environment-variables-1" class="level3">
<h3 class="anchored" data-anchor-id="set-environment-variables-1">Set Environment Variables</h3>
<p>With our environment set up, we can dive into the code. First, we need to set the following environment variables:</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb31-2">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OCL_ICD_VENDORS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/etc/OpenCL/vendors'</span></span>
<span id="cb31-3">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CCL_ROOT'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.environ.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CONDA_PREFIX'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb31-4">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'USE_XETLA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'OFF'</span></span>
<span id="cb31-5">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SYCL_CACHE_PERSISTENT'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span></span>
<span id="cb31-6">os.environ[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SYCL_PI_LEVEL_ZERO_USE_IMMEDIATE_COMMANDLISTS'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'1'</span></span></code></pre></div>
</section>
<section id="import-the-required-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="import-the-required-dependencies">Import the Required Dependencies</h3>
<p>Next, we will import the necessary Python packages into our Jupyter Notebook.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb32-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> time</span>
<span id="cb32-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> argparse</span>
<span id="cb32-4"></span>
<span id="cb32-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ipex_llm.transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoModelForCausalLM</span>
<span id="cb32-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> transformers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutoTokenizer</span>
<span id="cb32-7"></span>
<span id="cb32-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Markdown</span></code></pre></div>
<p>We can use the <code>Markdown</code> class from IPython to render Markdown output from the model inside the notebook.</p>
</section>
<section id="define-a-function-to-prepare-the-prompt" class="level3">
<h3 class="anchored" data-anchor-id="define-a-function-to-prepare-the-prompt">Define a Function to Prepare the Prompt</h3>
<p>We can use the following function from this <a href="https://github.com/intel-analytics/ipex-llm/blob/main/python/llm/example/GPU/HuggingFace/LLM/llama3.1/generate.py">example script</a> to prepare prompts for the LLama 3.1 model:</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_prompt(user_input: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, chat_history: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">tuple</span>[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>]], system_prompt: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>:</span>
<span id="cb33-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb33-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generate a formatted prompt for a LLaMA 3.1 chatbot conversation.</span></span>
<span id="cb33-4"></span>
<span id="cb33-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function takes the user's input, chat history, and system prompt,</span></span>
<span id="cb33-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    and combines them into a single formatted string for use in a LLaMA 3.1 chatbot system.</span></span>
<span id="cb33-7"></span>
<span id="cb33-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb33-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    user_input (str): The current input from the user.</span></span>
<span id="cb33-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    chat_history (list[tuple[str, str]]): A list of tuples containing previous </span></span>
<span id="cb33-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                          (user_input, assistant_response) pairs.</span></span>
<span id="cb33-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    system_prompt (str): Initial instructions or context for the LLaMA 3.1 chatbot.</span></span>
<span id="cb33-13"></span>
<span id="cb33-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb33-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    str: A formatted string containing the entire conversation history and current input.</span></span>
<span id="cb33-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb33-17">    </span>
<span id="cb33-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start the prompt with a special token</span></span>
<span id="cb33-19">    prompt_texts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;|begin_of_text|&gt;'</span>]</span>
<span id="cb33-20"></span>
<span id="cb33-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add system prompt if it's not empty</span></span>
<span id="cb33-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> system_prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>:</span>
<span id="cb33-23">        prompt_texts.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'&lt;|start_header_id|&gt;system&lt;|end_header_id|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>system_prompt<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|eot_id|&gt;'</span>)</span>
<span id="cb33-24"></span>
<span id="cb33-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add each pair of user input and assistant response from the chat history</span></span>
<span id="cb33-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> history_input, history_response <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> chat_history:</span>
<span id="cb33-27">        prompt_texts.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>history_input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>strip()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|eot_id|&gt;'</span>)</span>
<span id="cb33-28">        prompt_texts.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>history_response<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>strip()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|eot_id|&gt;'</span>)</span>
<span id="cb33-29"></span>
<span id="cb33-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the current user input and prepare for assistant's response</span></span>
<span id="cb33-31">    prompt_texts.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>user_input<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>strip()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">&lt;|eot_id|&gt;&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb33-32">    </span>
<span id="cb33-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Join all parts of the prompt into a single string</span></span>
<span id="cb33-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>.join(prompt_texts)</span></code></pre></div>
</section>
<section id="load-the-model-in-int4" class="level3">
<h3 class="anchored" data-anchor-id="load-the-model-in-int4">Load the Model in INT4</h3>
<p>Next, we can load the LLaMA 3.1 8B Instruct model in 4-bit precision.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>You will need to accept Meta’s license agreement through the model’s HuggingFace Hub page to access the model:</p>
<ul>
<li><a href="https://huggingface.co/meta-llama/Meta-Llama-3.1-8B-Instruct">meta-llama/Meta-Llama-3.1-8B-Instruct</a></li>
</ul>
</div>
</div>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">model_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"meta-llama/Meta-Llama-3.1-8B-Instruct"</span></span>
<span id="cb34-2"></span>
<span id="cb34-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load model in 4 bit, which converts the relevant layers in the model into INT4 format</span></span>
<span id="cb34-4">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoModelForCausalLM.from_pretrained(model_path,</span>
<span id="cb34-5">                                             load_in_4bit<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb34-6">                                             optimize_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb34-7">                                             trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb34-8">                                             use_cache<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb34-9">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.half().to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xpu'</span>)</span>
<span id="cb34-10"></span>
<span id="cb34-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load tokenizer</span></span>
<span id="cb34-12">tokenizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AutoTokenizer.from_pretrained(model_path, trust_remote_code<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
</section>
<section id="define-inference-parameters" class="level3">
<h3 class="anchored" data-anchor-id="define-inference-parameters">Define Inference Parameters</h3>
<p>Before running the model, we must define our prompts and the maximum number of tokens the model should generate.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">DEFAULT_SYSTEM_PROMPT <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb35-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb35-3"></span>
<span id="cb35-4">prompt_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Provide a clear, concise, and intuitive description of AI for beginners."</span></span>
<span id="cb35-5">max_new_tokens <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span></span></code></pre></div>
</section>
<section id="perform-inference" class="level3">
<h3 class="anchored" data-anchor-id="perform-inference">Perform Inference</h3>
<p>Finally, we can run the model.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Disable gradient computation for inference</span></span>
<span id="cb36-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.inference_mode():</span>
<span id="cb36-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate the input prompt using a custom function</span></span>
<span id="cb36-4">    prompt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_prompt(prompt_str, [], system_prompt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>DEFAULT_SYSTEM_PROMPT)</span>
<span id="cb36-5">    </span>
<span id="cb36-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Encode the prompt into token IDs and move to the XPU (Intel's GPU)</span></span>
<span id="cb36-7">    input_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer.encode(prompt, return_tensors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pt"</span>).to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xpu'</span>)</span>
<span id="cb36-8">    </span>
<span id="cb36-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Perform a warmup run to optimize the model</span></span>
<span id="cb36-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This run's output is discarded</span></span>
<span id="cb36-11">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(input_ids, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_new_tokens)</span>
<span id="cb36-12"></span>
<span id="cb36-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Start the actual inference</span></span>
<span id="cb36-14">    st <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Record the start time</span></span>
<span id="cb36-15">    </span>
<span id="cb36-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate the output using the language model</span></span>
<span id="cb36-17">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.generate(input_ids, max_new_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>max_new_tokens)</span>
<span id="cb36-18">    </span>
<span id="cb36-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure all XPU operations are completed before recording end time</span></span>
<span id="cb36-20">    torch.xpu.synchronize()</span>
<span id="cb36-21">    </span>
<span id="cb36-22">    end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time.time()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Record the end time</span></span>
<span id="cb36-23">    </span>
<span id="cb36-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Move the output back to CPU for further processing</span></span>
<span id="cb36-25">    output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output.cpu()</span>
<span id="cb36-26">    </span>
<span id="cb36-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Decode the output tokens into a human-readable string</span></span>
<span id="cb36-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># skip_special_tokens=False means we keep all special tokens in the output</span></span>
<span id="cb36-29">    output_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tokenizer.decode(output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], skip_special_tokens<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb36-30">    </span>
<span id="cb36-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the inference time</span></span>
<span id="cb36-32">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Inference time: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>st<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> seconds'</span>)</span>
<span id="cb36-33">    </span>
<span id="cb36-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the original prompt</span></span>
<span id="cb36-35">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Prompt'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb36-36">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(prompt)</span>
<span id="cb36-37"></span>
<span id="cb36-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the model's response</span></span>
<span id="cb36-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Response (skip_special_tokens=False)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb36-40"></span>
<span id="cb36-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the actual response from the output string</span></span>
<span id="cb36-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This assumes the response is between the last '&lt;|end_header_id|&gt;\n\n' and '&lt;|eot_id|&gt;'</span></span>
<span id="cb36-43">response <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_str.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;|end_header_id|&gt;</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'&lt;|eot_id|&gt;'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb36-44"></span>
<span id="cb36-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the response using Markdown formatting</span></span>
<span id="cb36-46">Markdown(response)</span></code></pre></div>
<pre class="text"><code>Inference time: 51.17 seconds
-------------------- Prompt --------------------
&lt;|begin_of_text|&gt;&lt;|start_header_id|&gt;user&lt;|end_header_id|&gt;

Provide a clear, concise, and intuitive description of AI for beginners.&lt;|eot_id|&gt;&lt;|start_header_id|&gt;assistant&lt;|end_header_id|&gt;


-------------------- Response (skip_special_tokens=False) --------------------</code></pre>
<div class="callout callout-style-default callout-note callout-titled" title="Model Response:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Model Response:
</div>
</div>
<div class="callout-body-container callout-body">
<p>Here’s a clear, concise, and intuitive description of AI for beginners:</p>
<p><strong>What is AI?</strong></p>
<p>Artificial Intelligence (AI) is a type of computer technology that allows machines to think and learn like humans. It’s a way to create intelligent systems that can perform tasks that typically require human intelligence, such as:</p>
<ul>
<li>Recognizing images and objects</li>
<li>Understanding natural language</li>
<li>Making decisions</li>
<li>Solving problems</li>
<li>Learning from data</li>
</ul>
<p><strong>How does AI work?</strong></p>
<p>AI uses a combination of algorithms, data, and computer power to mimic human thought processes. Here’s a simplified overview:</p>
<ol type="1">
<li><strong>Data collection</strong>: Large amounts of data are gathered from various sources, such as images, text, or sensor readings.</li>
<li><strong>Pattern recognition</strong>: AI algorithms analyze the data to identify patterns, relationships, and trends.</li>
<li><strong>Machine learning</strong>: The AI system uses this analysis to make predictions, classify data, or make decisions.</li>
<li><strong>Improvement</strong>: The AI system learns from its experiences and adjusts its performance over time.</li>
</ol>
<p><strong>Types of AI</strong></p>
<p>There are several types of AI, including:</p>
<ul>
<li><strong>Narrow or Weak AI</strong>: Designed to perform a specific task, like facial recognition or language translation.</li>
<li><strong>Strong or General AI</strong>: A hypothetical AI that can perform any intellectual task that humans can.</li>
<li><strong>Superintelligence</strong>: A hypothetical AI that surpasses human intelligence in all domains.</li>
</ul>
<p><strong>Key benefits of AI</strong></p>
<p>AI has many benefits, including:</p>
<ul>
<li><strong>Improved efficiency</strong>: AI can automate repetitive tasks, freeing up human time for more complex and creative work.</li>
<li><strong>Enhanced decision-making</strong>: AI can analyze vast amounts of data to make informed decisions.</li>
<li><strong>Personalization</strong>: AI can tailor experiences to individual preferences and needs.</li>
</ul>
<p><strong>Key concepts</strong></p>
<p>Some key concepts to keep in mind:</p>
<ul>
<li><strong>Machine learning</strong>: A type of AI that improves over time based on data experience.</li>
<li><strong>Deep learning</strong>: A type of machine learning that uses neural networks to analyze complex data.</li>
<li><strong>Natural language processing</strong>: A type of AI that enables computers to understand and generate human-like language.</li>
</ul>
<p>That’s a basic introduction to AI for beginners! I hope this helps you understand the basics of this exciting and rapidly evolving field.</p>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this tutorial, we set up Intel’s PyTorch extension on Ubuntu to train an image classification model and run a local Large Language Model using an Arc GPU. The exact setup steps may change with new versions, so check the <a href="https://intel.github.io/intel-extension-for-pytorch/index.html#installation?platform=gpu&amp;version=v2.3.110%2bxpu&amp;os=linux%2fwsl2&amp;package=pip">documentation</a> for the latest version to see if there are any changes. I’ll try to keep this tutorial updated with any significant changes to the process.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="Questions:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Questions:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Feel free to post questions or problems related to this tutorial in the comments below. I try to make time to address them on Thursdays and Fridays.</li>
</ul>
</div>
</div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>pytorch</category>
  <category>ubuntu</category>
  <category>image-classification</category>
  <category>arc-gpu</category>
  <category>getting-started</category>
  <guid>https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-ubuntu/</guid>
  <pubDate>Sun, 22 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Getting Started with Intel’s PyTorch Extension for Arc GPUs on Windows</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/</link>
  <description><![CDATA[ 




<ul>
<li>Introduction</li>
<li>Enable Resizable BAR in BIOS</li>
<li>Install Drivers</li>
<li>Install Microsoft Visual C++ Redistributable</li>
<li>Disable Integrated Graphics</li>
<li>Set Up a Python Environment<br>
</li>
<li>Modify PyTorch Code<br>
</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this tutorial, I’ll guide you through setting up Intel’s <a href="https://github.com/intel/intel-extension-for-pytorch">PyTorch extension</a> on <a href="https://www.microsoft.com/en-us/windows">Windows</a> to train models with their <a href="https://www.intel.com/content/www/us/en/products/docs/discrete-gpus/arc/desktop/a-series/overview.html">Arc GPUs</a>. The extension provides Intel’s latest feature optimizations and hardware support before they get added to PyTorch. Most importantly for our case, it includes support for Intel’s Arc GPUs and optimizations to take advantage of their Xe Matrix Extensions (XMX).</p>
<p>The XMX engines are dedicated hardware for performing matrix operations like those in deep-learning workloads. Intel’s PyTorch extension allows us to leverage this hardware with minimal changes to existing PyTorch code.</p>
<p>To illustrate this, we’ll adapt the training code from my <a href="https://christianjmills.com/posts/pytorch-train-image-classifier-timm-hf-tutorial/">beginner-level PyTorch tutorial</a>, where we fine-tune an image classification model from the <a href="https://github.com/huggingface/pytorch-image-models">timm library</a> for hand gesture recognition. By the end of this tutorial, you’ll know all steps required to set up Windows for training PyTorch models using Arc GPUs.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The current setup process is for version <a href="https://intel.github.io/intel-extension-for-pytorch/xpu/2.3.110+xpu/"><code>2.3.110+xpu</code></a> of Intel’s PyTorch extension.</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled" title="WSL">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
WSL
</div>
</div>
<div class="callout-body-container callout-body">
<p>To use the extension in WSL (Windows Subsystem for Linux), follow the Ubuntu version of this tutorial starting from the section linked below after enabling Resizable BAR:</p>
<ul>
<li><a href="../../../posts/intel-pytorch-extension-tutorial/native-ubuntu/#install-drivers">Getting Started with Intel’s PyTorch Extension for Arc GPUs on Ubuntu - Install Drivers</a></li>
</ul>
<p>Follow the steps in the linked section below to deactivate the Integrated Graphics. This step is still required to use the extension in WSL.</p>
<ul>
<li>Disable Integrated Graphics</li>
</ul>
</div>
</div>
</section>
<section id="enable-resizable-bar-in-bios" class="level2">
<h2 class="anchored" data-anchor-id="enable-resizable-bar-in-bios">Enable Resizable BAR in BIOS</h2>
<p>If you have an Arc GPU, one of the first things you should do is enable Resizable BAR. Resizable BAR allows a computer’s processor to access the graphics card’s entire memory instead of in small chunks. The Arc GPUs currently require this feature to perform as intended. You can enable the feature in your motherboard’s BIOS.</p>
<p>Here are links on how to do this for some of the popular motherboard manufacturers:</p>
<ul>
<li><a href="https://www.asrock.com/support/faq.asp?id=498">ASRock</a></li>
<li><a href="https://www.asus.com/support/FAQ/1046107/">Asus</a></li>
<li><a href="https://www.evga.com/support/faq/FAQdetails.aspx?faqid=59772">EVGA</a></li>
<li><a href="https://www.gigabyte.com/WebPage/785/NVIDIA_resizable_bar.html">Gigabyte</a></li>
<li><a href="https://www.msi.com/blog/unlock-system-performance-to-extreme-resizable-bar">MSI</a></li>
</ul>
<p>With Resizable BAR enabled, let’s ensure we have the latest drivers for our Arc GPU.</p>
</section>
<section id="install-drivers" class="level2">
<h2 class="anchored" data-anchor-id="install-drivers">Install Drivers</h2>
<p>We can download the latest Arc GPU drivers from Intel’s website at the link below:</p>
<ul>
<li><a href="https://www.intel.com/content/www/us/en/download/785597/intel-arc-iris-xe-graphics-windows.html?">Intel® Arc™ &amp; Iris® Xe Graphics - Windows</a></li>
</ul>
<p>The latest driver version available was <code>32.0.101.6078</code> at the time of writing. Click the <code>Download</code> button under <code>Available Downloads</code> to download the installer.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/download-intel-graphics-driver-installer-windows.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Once downloaded, double-click the installer executable and follow the prompts to install the drivers.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/intel-graphics-driver-installer-begin-installation.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>You don’t need to agree to join the Intel Computing Improvement program to install the drivers.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/intel-graphics-driver-installer-intel-computing-improvement-program.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Once the installation completes, click the <code>Reboot Recommended</code> button to reboot the computer.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/intel-graphics-driver-installer-installation-complete-reboot.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>We can continue with the next step once we’re back in Windows.</p>
</section>
<section id="install-microsoft-visual-c-redistributable" class="level2">
<h2 class="anchored" data-anchor-id="install-microsoft-visual-c-redistributable">Install Microsoft Visual C++ Redistributable</h2>
<p>Intel’s documentation also lists the Microsoft Visual C++ Redistributable as a dependency for this extension version, so make sure to install it as well. You can download the latest version at the link below:</p>
<ul>
<li><a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#latest-microsoft-visual-c-redistributable-version">Latest Microsoft Visual C++ Redistributable Version</a></li>
</ul>
</section>
<section id="disable-integrated-graphics" class="level2">
<h2 class="anchored" data-anchor-id="disable-integrated-graphics">Disable Integrated Graphics</h2>
<p>I encountered the following error when I attempted to use this version of Intel’s PyTorch extension on Windows:</p>
<pre class="text"><code>RuntimeError: Can't add devices across platforms to a single context. -33 (PI_ERROR_INVALID_DEVICE)</code></pre>
<p>I could only resolve the issue by deactivating the iGPU in the Windows Device Manager. Future versions of the extension may eliminate this bug, but I’ll include the steps to turn off the iGPU for now.</p>
<p>Type Device Manager into the Windows search bar and click Open.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/windows-search-device-manager.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>You will see the following popup message if you are not using an Administrator account. Click <code>OK</code> to continue.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/windows-device-manager-standard-user-warning.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>In the Device Manager window, open the <code>Display adapters</code> dropdown. There should be at least two options: the Arc GPU and the iGPU included with the CPU. Double-click the iGPU listing to open its properties window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/windows-device-manager-select-integrated-graphics.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Non-Administrator users must click the <code>Change settings</code> button to enable changes to the iGPU device properties.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/windows-device-manager-integrated-graphics-properties-change-settings.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Next, select the <code>Driver</code> tab and click the <code>Disable Device</code> button.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/windows-device-manager-integrated-graphics-properties-disable-device.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<p>Click <code>Yes</code> in the popup window to confirm the changes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/windows-device-manager-integrated-graphics-properties-disable-device-confirm.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You will need to repeat this step when you install new graphics drivers in the future, assuming future releases of Intel’s extension do not resolve the issue.</p>
</div>
</div>
</section>
<section id="set-up-a-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="set-up-a-python-environment">Set Up a Python Environment</h2>
<p>Now, we can create a Python environment to run the training code. We’ll install a patched version of PyTorch needed for Intel’s extension, the extension itself, and the other dependencies for the training code.</p>
<section id="install-mamba-package-manager" class="level3">
<h3 class="anchored" data-anchor-id="install-mamba-package-manager">Install Mamba Package Manager</h3>
<p>We’ll use the <a href="https://mamba.readthedocs.io/en/latest/">Mamba</a> package manager to create the Python environment. I have a dedicated tutorial for setting up Mamba on Windows:</p>
<ul>
<li><a href="../../../posts/mamba-getting-started-tutorial-windows/"><strong>Setting Up a Local Python Environment with Mamba for Machine Learning Projects on Windows</strong></a></li>
</ul>
<p>Open a command prompt window with the mamba environment active and navigate to a folder to store the training notebooks. For convenience, here is the command to activate the mamba environment from any command prompt window:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb2-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">USERPROFILE</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">%</span>\mambaforge\Scripts\activate</span></code></pre></div>
</section>
<section id="create-a-python-environment" class="level3">
<h3 class="anchored" data-anchor-id="create-a-python-environment">Create a Python Environment</h3>
<p>Next, we’ll create a Python environment and activate it. The current version of the extension supports Python 3.11, so we’ll use that.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb3-1">mamba create -<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-name</span> pytorch<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-arc</span> python=3.11 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span>
<span id="cb3-2">mamba activate pytorch<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-arc</span></span></code></pre></div>
</section>
<section id="install-prerequisite-packages" class="level3">
<h3 class="anchored" data-anchor-id="install-prerequisite-packages">Install Prerequisite Packages</h3>
<p>The package for Intel’s PyTorch extension requires the <a href="https://anaconda.org/conda-forge/libuv">libuv</a> conda package:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb4-1">mamba install libuv <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-y</span></span></code></pre></div>
</section>
<section id="install-pytorch-and-intels-pytorch-extension" class="level3">
<h3 class="anchored" data-anchor-id="install-pytorch-and-intels-pytorch-extension">Install PyTorch and Intel’s PyTorch extension</h3>
<p>The following command will install the patched version of PyTorch and the extension itself:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb5-1">pip install torch==2.3.1+cxx11.abi torchvision==0.18.1+cxx11.abi torchaudio==2.3.1+cxx11.abi intel<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-extension-for-pytorch</span>==2.3.110+xpu -<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-extra-index-url</span> https:/<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/pytorch-extension</span>.intel.com<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/release-whl/stable/xpu/us</span>/</span></code></pre></div>
</section>
<section id="install-training-code-dependencies" class="level3">
<h3 class="anchored" data-anchor-id="install-training-code-dependencies">Install Training Code Dependencies</h3>
<p>After that, we’ll install the training code dependencies. You can learn about these dependencies (<a href="../../../posts/pytorch-train-image-classifier-timm-hf-tutorial/#installing-additional-libraries">here</a>).</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb6-1">pip install jupyter matplotlib pandas pillow timm torcheval torchtnt tqdm</span>
<span id="cb6-2">pip install cjm_pandas_utils cjm_psl_utils cjm_pil_utils cjm_pytorch_utils cjm_torchvision_tfms</span></code></pre></div>
<div class="callout callout-style-default callout-important callout-titled" title="oneDNN Memory Layout">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
oneDNN Memory Layout
</div>
</div>
<div class="callout-body-container callout-body">
<p>The previous version of this tutorial set an environment variable for the oneDNN memory layout to improve training speed. The performance improvement from this step is no longer significant and even prevents successful training for other model types.</p>
<p>If you followed the previous version of this tutorial, run the following commands to deactivate this environment variable:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb7-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">IPEX_XPU_ONEDNN_LAYOUT</span>=0</span>
<span id="cb7-2">setx IPEX_XPU_ONEDNN_LAYOUT 0</span></code></pre></div>
</div>
</div>
</section>
</section>
<section id="modify-pytorch-code" class="level2">
<h2 class="anchored" data-anchor-id="modify-pytorch-code">Modify PyTorch Code</h2>
<p>It’s finally time to train a model. The Jupyter Notebooks with the original and modified training code are available on GitHub at the links below.</p>
<ul>
<li><a href="https://github.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/pytorch-timm-image-classifier-training-windows.ipynb">notebooks/pytorch-timm-image-classifier-training-windows.ipynb</a></li>
<li><a href="https://github.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/intel-arc-pytorch-timm-image-classifier-training-windows.ipynb">notebooks/intel-arc-pytorch-timm-image-classifier-training-windows.ipynb</a></li>
<li><a href="https://github.com/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/windows_utils.py">notebooks/windows_utils.py</a></li>
</ul>
<p>You can also download the notebooks to the current directory by running the following commands:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb8-1">curl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> pytorch<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-timm-image-classifier-training-windows</span>.ipynb https:/<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/github</span>.com<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/pytorch-timm-image-classifier-training-windows</span>.ipynb</span></code></pre></div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb9-1">curl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> intel<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-arc-pytorch-timm-image-classifier-training-windows-without-hf-datasets</span>.ipynb https:/<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/raw</span>.githubusercontent.com<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/main/notebooks/intel-arc-pytorch-timm-image-classifier-training-windows</span>.ipynb</span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb10-1">curl <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> windows_utils.py https:/<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/github</span>.com<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">/cj-mills/pytorch-timm-gesture-recognition-tutorial-code/blob/main/notebooks/windows_utils</span>.py</span></code></pre></div>
<p>Once downloaded, run the following command to launch the Jupyter Notebook Environment:</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb11-1">jupyter notebook</span></code></pre></div>
<section id="import-pytorch-extension" class="level3">
<h3 class="anchored" data-anchor-id="import-pytorch-extension">Import PyTorch Extension</h3>
<p>We import Intel’s PyTorch extension with the following code:</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode cmd code-with-copy"><code class="sourceCode dosbat"><span id="cb12-1">import torch</span>
<span id="cb12-2">import intel_extension_for_pytorch as ipex</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">print</span>(f'PyTorch Version: {torch.__version__}'<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">print</span>(f'Intel PyTorch Extension Version: {ipex.__version__}'<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
<pre class="text"><code>C:\Users\Personal\mambaforge\envs\pytorch-arc\Lib\site-packages\torchvision\io\image.py:13: UserWarning: Failed to load image Python extension: 'Could not find module 'C:\Users\Personal\mambaforge\envs\pytorch-arc\Lib\site-packages\torchvision\image.pyd' (or one of its dependencies). Try using the full path with constructor syntax.'If you don't plan on using image functionality from `torchvision.io`, you can ignore this warning. Otherwise, there might be something wrong with your environment. Did you have `libjpeg` or `libpng` installed before building `torchvision` from source?
  warn(

PyTorch Version: 2.3.1+cxx11.abi
Intel PyTorch Extension Version: 2.3.110+xpu

C:\Users\Personal\mambaforge\envs\pytorch-arc\Lib\site-packages\intel_extension_for_pytorch\llm\__init__.py:9: UserWarning: failed to use huggingface generation fuctions due to: No module named 'transformers'.
  warnings.warn(f"failed to use huggingface generation fuctions due to: {e}.")</code></pre>
</section>
<section id="update-pytorch-imports" class="level3">
<h3 class="anchored" data-anchor-id="update-pytorch-imports">Update PyTorch Imports</h3>
<p>We don’t want to re-import <code>torch</code> after the extension, so we’ll remove that line from the <code>Import PyTorch dependencies</code> section.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb14-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb14-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> autocast</span>
<span id="cb14-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.cuda.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GradScaler</span>
<span id="cb14-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, DataLoader</span></code></pre></div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb15-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb15-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> autocast</span>
<span id="cb15-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.cuda.amp <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> GradScaler</span>
<span id="cb15-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, DataLoader</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="verify-arc-gpu-availability" class="level3">
<h3 class="anchored" data-anchor-id="verify-arc-gpu-availability">Verify Arc GPU Availability</h3>
<p>We can double-check that the extension can use the Arc GPU by getting the properties of the available <code>xpu</code> devices.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> get_public_properties(obj):</span>
<span id="cb16-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Extract all public properties from an object.</span></span>
<span id="cb16-6"></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    obj: The object to extract properties from.</span></span>
<span id="cb16-9"></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    dict: A dictionary containing the object's public properties and their values.</span></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb16-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> {</span>
<span id="cb16-14">        prop: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(obj, prop)</span>
<span id="cb16-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> prop <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dir</span>(obj)</span>
<span id="cb16-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> prop.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__"</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">callable</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">getattr</span>(obj, prop))</span>
<span id="cb16-17">    }</span>
<span id="cb16-18"></span>
<span id="cb16-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the number of available XPU devices</span></span>
<span id="cb16-20">xpu_device_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.xpu.device_count()</span>
<span id="cb16-21"></span>
<span id="cb16-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list of dictionaries containing properties for each XPU device</span></span>
<span id="cb16-23">dict_properties_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb16-24">    get_public_properties(torch.xpu.get_device_properties(i))</span>
<span id="cb16-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(xpu_device_count)</span>
<span id="cb16-26">]</span>
<span id="cb16-27"></span>
<span id="cb16-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the list of dictionaries to a pandas DataFrame for easy viewing</span></span>
<span id="cb16-29">pd.DataFrame(dict_properties_list)</span></code></pre></div>
<div style="overflow-x:auto;">
<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
driver_version
</th>
<th>
gpu_eu_count
</th>
<th>
gpu_subslice_count
</th>
<th>
has_atomic64
</th>
<th>
has_fp16
</th>
<th>
has_fp64
</th>
<th>
max_compute_units
</th>
<th>
max_num_sub_groups
</th>
<th>
max_work_group_size
</th>
<th>
name
</th>
<th>
platform_name
</th>
<th>
sub_group_sizes
</th>
<th>
total_memory
</th>
<th>
type
</th>
<th>
vendor
</th>
<th>
version
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
1.3.30714
</td>
<td>
512
</td>
<td>
64
</td>
<td>
True
</td>
<td>
True
</td>
<td>
False
</td>
<td>
512
</td>
<td>
128
</td>
<td>
1024
</td>
<td>
Intel(R) Arc(TM) A770 Graphics
</td>
<td>
Intel(R) Level-Zero
</td>
<td>
[8, 16, 32]
</td>
<td>
16704737280
</td>
<td>
gpu
</td>
<td>
Intel(R) Corporation
</td>
<td>
1.5
</td>
</tr>
</tbody>
</table>
</div>
<p>In this case, the A770 is the only device listed since we deactivated the integrated graphics on the CPU.</p>
</section>
<section id="update-the-device-name" class="level3">
<h3 class="anchored" data-anchor-id="update-the-device-name">Update the Device Name</h3>
<p>Next, we’ll manually set the device name to <code>xpu</code>.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'xpu'</span></span>
<span id="cb17-2">dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.float32</span>
<span id="cb17-3">device, dtype</span></code></pre></div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_torch_device()</span>
<span id="cb18-2">dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.float32</span>
<span id="cb18-3">device, dtype</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="optimize-the-model-and-optimizer-objects" class="level3">
<h3 class="anchored" data-anchor-id="optimize-the-model-and-optimizer-objects">Optimize the <code>model</code> and <code>optimizer</code> Objects</h3>
<p>Before we run the <code>train_loop</code> function, we’ll use Intel’s PyTorch extension to apply optimizations to the model and optimizer objects. We’ll also cast the model to the <code>bfloat16</code> data type, so we can train using mixed precision.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate for the model</span></span>
<span id="cb19-2">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of training epochs</span></span>
<span id="cb19-5">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb19-6"></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AdamW optimizer; includes weight decay for regularization</span></span>
<span id="cb19-8">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.AdamW(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, eps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span>
<span id="cb19-9"></span>
<span id="cb19-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimize the model and optimizer objects</span></span>
<span id="cb19-11">model, optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ipex.optimize(model, optimizer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>optimizer, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.bfloat16)</span>
<span id="cb19-12"></span>
<span id="cb19-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate scheduler; adjusts the learning rate during training</span></span>
<span id="cb19-14">lr_scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.lr_scheduler.OneCycleLR(optimizer, </span>
<span id="cb19-15">                                                   max_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, </span>
<span id="cb19-16">                                                   total_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_dataloader))</span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Performance metric: Multiclass Accuracy</span></span>
<span id="cb19-19">metric <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MulticlassAccuracy()</span></code></pre></div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate for the model</span></span>
<span id="cb20-2">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of training epochs</span></span>
<span id="cb20-5">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AdamW optimizer; includes weight decay for regularization</span></span>
<span id="cb20-8">optimizer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.AdamW(model.parameters(), lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, eps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Learning rate scheduler; adjusts the learning rate during training</span></span>
<span id="cb20-11">lr_scheduler <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.optim.lr_scheduler.OneCycleLR(optimizer, </span>
<span id="cb20-12">                                                   max_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, </span>
<span id="cb20-13">                                                   total_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_dataloader))</span>
<span id="cb20-14"></span>
<span id="cb20-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Performance metric: Multiclass Accuracy</span></span>
<span id="cb20-16">metric <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MulticlassAccuracy()</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="train-the-model" class="level3">
<h3 class="anchored" data-anchor-id="train-the-model">Train the Model</h3>
<p>That’s it for the required changes to the training code. We can now run the <code>train_loop</code> function.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">Current</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">Previous</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<pre class="text"><code>Epochs: 100% |█████████| 3/3 [24:21&lt;00:00, 478.44s/it]
Train: 100% |█████████| 4324/4324 [07:56&lt;00:00, 10.52it/s, accuracy=0.844, avg_loss=0.535, loss=0.572, lr=0.000994]
Eval: 100% |█████████| 481/481 [00:49&lt;00:00, 28.10it/s, accuracy=0.95, avg_loss=0.162, loss=0.0692, lr=]
Train: 100% |█████████| 4324/4324 [07:41&lt;00:00, 10.73it/s, accuracy=0.914, avg_loss=0.281, loss=0.412, lr=0.000462]
Eval: 100% |█████████| 481/481 [00:23&lt;00:00, 28.84it/s, accuracy=0.979, avg_loss=0.0653, loss=0.0793, lr=]
Train: 100% |█████████| 4324/4324 [07:09&lt;00:00, 11.16it/s, accuracy=0.96, avg_loss=0.124, loss=0.0497, lr=4.03e-9]
Eval: 100% |█████████| 481/481 [00:21&lt;00:00, 29.63it/s, accuracy=0.99, avg_loss=0.0314, loss=0.0783, lr=]</code></pre>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/images/arc-a770-pytorch-training-session-native-windows.png" class="img-fluid quarto-figure quarto-figure-center figure-img"></p>
</figure>
</div>
</div>
</div>
</div>
<p>The training speed is significantly slower with this extension version. Although, it seems to improve with each iteration through the dataset.</p>
</section>
<section id="update-the-inference-code" class="level3">
<h3 class="anchored" data-anchor-id="update-the-inference-code">Update the Inference Code</h3>
<p>Since we cast the model to <code>bloat16</code>, we must ensure input data use the same type. We can update the inference code using the auto-cast context manager as shown below:</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">Modified</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Original</a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb22-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad(), autocast(torch.device(device).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>):</span>
<span id="cb22-3">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(img_tensor)</span></code></pre></div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb23-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb23-3">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(img_tensor)</span></code></pre></div>
</div>
</div>
</div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>In this tutorial, we set up Intel’s PyTorch extension for the Windows OS and trained an image classification model using an Arc GPU. The exact setup steps may change with new versions, so check the <a href="https://intel.github.io/intel-extension-for-pytorch/index.html#installation?platform=gpu&amp;version=v2.3.110%2bxpu&amp;os=windows&amp;package=pip">documentation</a> for the latest version to see if there are any changes. I’ll try to keep this tutorial updated with any significant changes to the process.</p>
<div class="callout callout-style-default callout-tip callout-titled" title="Questions:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Questions:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Feel free to post questions or problems related to this tutorial in the comments below. I try to make time to address them on Thursdays and Fridays.</li>
</ul>
</div>
</div>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>pytorch</category>
  <category>windows</category>
  <category>image-classification</category>
  <category>arc-gpu</category>
  <category>getting-started</category>
  <guid>https://christianjmills.com/posts/intel-pytorch-extension-tutorial/native-windows/</guid>
  <pubDate>Sat, 21 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 12: Flash Attention</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-012/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Background: The Need for Optimization</li>
<li>Memory Hierarchy and Performance</li>
<li>Attention Mechanisms: A Brief Overview</li>
<li>Flash Attention: Tiling Strategy</li>
<li>The Softmax Challenge</li>
<li>Flash Attention 2: Advanced Techniques</li>
<li>Implementation Attempts and Challenges</li>
<li>CUDA C++ Implementation</li>
<li>Performance Evaluation and Future Directions</li>
<li>Conclusion</li>
<li>Q&amp;A Session</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=zEuwuCTEf_0">Lecture 12: Flash Attention</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<ul>
<li><strong>Presenter:</strong> Thomas Viehmann</li>
<li><strong>Topic:</strong> Flash Attention, a highly optimized CUDA kernel for attention mechanisms in AI models, specifically transformers.</li>
<li><strong>Focus:</strong> This lecture provides an introductory overview of Flash Attention, its underlying principles, and implementation challenges. It does not delve into live coding of the fastest kernels due to time constraints.</li>
</ul>
</section>
<section id="background-the-need-for-optimization" class="level2">
<h2 class="anchored" data-anchor-id="background-the-need-for-optimization">Background: The Need for Optimization</h2>
<ul>
<li><strong>Attention Mechanisms:</strong> Attention mechanisms are computationally intensive and memory-demanding operations in transformer models.</li>
<li><strong>Optimizing for Performance:</strong> Flash Attention aims to optimize attention calculations by:
<ul>
<li>Minimizing data transfers between DRAM (main memory) and SRAM (on-chip memory).</li>
<li>Leveraging the speed advantages of SRAM over DRAM (typically an order of magnitude faster).</li>
<li>Reducing memory allocation and holding times, addressing GPU memory limitations.</li>
</ul></li>
</ul>
</section>
<section id="memory-hierarchy-and-performance" class="level2">
<h2 class="anchored" data-anchor-id="memory-hierarchy-and-performance">Memory Hierarchy and Performance</h2>
<ul>
<li><strong>DRAM vs.&nbsp;SRAM:</strong>
<ul>
<li><strong>DRAM:</strong> Larger capacity but slower access times.</li>
<li><strong>SRAM (Shared Memory):</strong> Smaller capacity but significantly faster access times.</li>
</ul></li>
<li><strong>Minimizing DRAM Access:</strong> Flash Attention focuses on reducing the need to write intermediate results to DRAM and then reload them, aiming to keep computations within SRAM as much as possible.</li>
<li><strong>Changes in GPU Computing:</strong> GPU architectures and software have evolved, requiring more sophisticated optimization techniques compared to earlier approaches where simple kernel sequencing could saturate GPU utilization.</li>
</ul>
</section>
<section id="attention-mechanisms-a-brief-overview" class="level2">
<h2 class="anchored" data-anchor-id="attention-mechanisms-a-brief-overview">Attention Mechanisms: A Brief Overview</h2>
<ul>
<li><p><strong>Attention as Classification:</strong> Attention can be viewed as a classification process within a neural network.</p>
<ul>
<li><strong>Analogy to Classification Heads:</strong> Similar to a classification head in a network, attention involves:
<ul>
<li>Input activations (d-dimensional): <img src="https://latex.codecogs.com/png.latex?q"></li>
<li>A final layer (<img src="https://latex.codecogs.com/png.latex?K">) producing logits: <img src="https://latex.codecogs.com/png.latex?l%20=%20q%20K%5ET"></li>
<li>Softmax function to generate probabilities: <img src="https://latex.codecogs.com/png.latex?p_i%20=%20%5Cfrac%7B%5Cexp(l_i)%7D%7B%5Csum_j%20%5Cexp(l_j)%7D"></li>
</ul></li>
</ul></li>
<li><p><strong>Class Embeddings Perspective:</strong> The final linear layer (K) can be interpreted as class embeddings. Each row of the matrix represents an embedding of a target class.</p>
<ul>
<li>Input activations (d-dimensional): <img src="https://latex.codecogs.com/png.latex?q"></li>
<li>Class embeddings (d-dimensional): <img src="https://latex.codecogs.com/png.latex?K%20=%20(k_i)"></li>
<li>Logits: <img src="https://latex.codecogs.com/png.latex?l_i%20=%20q%20%5Ccdot%20k_i"></li>
<li>Class Probabilities: <img src="https://latex.codecogs.com/png.latex?p_i%20=%20%5Cfrac%7B%5Cexp(d%5E%7B-1/2%7D%20l_i)%7D%7B%5Csum_j%20%5Cexp(d%5E%7B-1/2%7D%20l_j)%7D"></li>
</ul></li>
<li><p><strong>Attention Weights:</strong> Attention weights are derived from scalar products of these embeddings, followed by a softmax operation to produce probabilities. <img src="https://latex.codecogs.com/png.latex?%0Aq_t%20=%20Qx_t,%20w_s%20=%20Kx_s%0A"></p></li>
<li><p><strong>Multi-Head Attention:</strong></p>
<ul>
<li><strong>Multiple Classifications:</strong> Multi-head attention performs multiple independent classifications simultaneously, each with a smaller dimension (d).</li>
<li><strong>Benefits:</strong>
<ul>
<li><strong>Representational Power:</strong> Allows the model to attend to information from different representation subspaces and positions (as stated in the “<a href="https://arxiv.org/abs/1706.03762">Attention is All You Need</a>” paper).</li>
<li><strong>Computational Simplification:</strong> Heads are independent, enabling easy parallelization across the batch dimension and multiple streaming multiprocessors (SMs).</li>
</ul></li>
</ul></li>
<li><p><strong>Mapping to GPU Hardware:</strong></p>
<ul>
<li><strong>One Head per Block:</strong> Flash Attention typically maps the computation of one attention head to a single block of threads on the GPU.</li>
<li><strong>Blocks and SMs:</strong> A block of threads is processed by one SM. The goal is to have enough blocks to utilize all available SMs on the GPU.</li>
<li><strong>Shared Memory:</strong> Threads within a block can share memory, making it efficient to store and access data needed for the attention head’s computation.</li>
</ul></li>
<li><p><strong>Head Dimension Constraint:</strong> The size of the head dimension (d) is a limiting factor as it affects the amount of shared memory and registers required per block. Flash Attention implementations often use small, fixed head dimensions (e.g., 128 or 256) to ensure computations fit within the resources of a single SM.</p></li>
</ul>
</section>
<section id="flash-attention-tiling-strategy" class="level2">
<h2 class="anchored" data-anchor-id="flash-attention-tiling-strategy">Flash Attention: Tiling Strategy</h2>
<ul>
<li><p><strong>Computing One Output Element:</strong> The core idea is to analyze the computation required for a single element of the output matrix. <img src="https://latex.codecogs.com/png.latex?%0AO%5Bt,%20d%5D%0A"></p></li>
<li><p><strong>Output Element Dependencies:</strong></p>
<ul>
<li><p>Requires values (V) for all sequence elements (s) and the hidden dimension (d). <img src="https://latex.codecogs.com/png.latex?%0AV%5Bs,%20d%5D%20%5Ctext%7B%20for%20all%20%7D%20s%0A"></p></li>
<li><p>Requires softmax probabilities (P) for the specific output sequence element (t) and all sequence elements (s). <img src="https://latex.codecogs.com/png.latex?%0A%5Ctext%7Bsoftmax%7D(I%5Bt,%20s%5D,%20%5Ctext%7Bdim%7D=-1)%20%5Ctext%7B%20for%20%7D%20t%20%5Crightarrow%20%5Ctext%7Bneed%20%7D%20I%5Bt,%20s%5D%20=%20%5Csum_d%20Q%5Bt,%20d%5D%20%5Ctext%7B%20%7D%20K%5Bs,%20d%5D%0A"></p></li>
</ul></li>
<li><p><strong>Softmax and Contraction Dimension Alignment:</strong> Crucially, the dimension over which the softmax is computed (s) is the same as the contraction dimension between the softmax output and the value matrix (V). This enables efficient tiling.</p></li>
<li><p><strong>Tiling Scheme:</strong></p>
<pre class="text"><code>for t_tile:
    load(Q[t_tile]) to shared, init O[t, d] = 0
    for s_tile:
        load(K[s_tile], V[s_tile]) to shared;
        compute I[t, s] = Q[t_tile] @ K^T[s_tile]  (compute p[t, s])
        O[t, d] += p[t_tile, s_tile] @ V[s_tile]
    write O[t, d]</code></pre>
<ul>
<li><strong>Tiling in Output Dimension (t):</strong> The output dimension is tiled into blocks.</li>
<li><strong>Loading Query Tile:</strong> A corresponding query tile (Q) is loaded into shared memory, covering the entire hidden dimension (d).</li>
<li><strong>Iterating over Sequence Tiles (s):</strong> An inner loop iterates over tiles in the sequence dimension (s).</li>
<li><strong>Loading Key and Value Tiles:</strong> For each s-tile, the corresponding key (K) and value (V) tiles are loaded into shared memory.</li>
<li><strong>Computing Logits and Probabilities:</strong> The logits (L) and probabilities (P) are computed for the Q-tile and K-tile using matrix multiplication.</li>
<li><strong>Updating Output:</strong> The output tile is updated by multiplying the computed probability matrix with the V-tile.</li>
<li><strong>Writing Output Tile:</strong> Once the inner loop is complete, the output tile is written back to memory.</li>
</ul></li>
<li><p><strong>HuggingFace <code>text-generation-inference</code> Docs:</strong> <a href="https://huggingface.co/docs/text-generation-inference/en/conceptual/flash_attention">Flash Attention</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-012/images/flash-attn.png" class="img-fluid figure-img"></p>
<figcaption><a href="https://cdn-lfs.huggingface.co/datasets/huggingface/documentation-images/7a59cb2f5b1c0ed0a00fe065f89e3f736aea3d5b10df95d90a7747fe543f3925?response-content-disposition=inline%3B+filename*%3DUTF-8%27%27flash-attn.png%3B+filename%3D%22flash-attn.png%22%3B&amp;response-content-type=image%2Fpng&amp;Expires=1726702524&amp;Policy=eyJTdGF0ZW1lbnQiOlt7IkNvbmRpdGlvbiI6eyJEYXRlTGVzc1RoYW4iOnsiQVdTOkVwb2NoVGltZSI6MTcyNjcwMjUyNH19LCJSZXNvdXJjZSI6Imh0dHBzOi8vY2RuLWxmcy5odWdnaW5nZmFjZS5jby9kYXRhc2V0cy9odWdnaW5nZmFjZS9kb2N1bWVudGF0aW9uLWltYWdlcy83YTU5Y2IyZjViMWMwZWQwYTAwZmUwNjVmODllM2Y3MzZhZWEzZDViMTBkZjk1ZDkwYTc3NDdmZTU0M2YzOTI1P3Jlc3BvbnNlLWNvbnRlbnQtZGlzcG9zaXRpb249KiZyZXNwb25zZS1jb250ZW50LXR5cGU9KiJ9XX0_&amp;Signature=Q4YZK%7Ep22EKRaDzKRHXvMiHLusgwlOz9tyGjY-iqvvkirvcXRFIQJnxgkCponnm%7ED--y8kqWOO4iePmt8o27tbGDn6XWq%7EiWh9eY7YKA0g1RE0S-JIzcnspFJInINeIo2mZ8FCAxUnACT1b1xGuJOO3ecrktWPd%7E4ZyqjDUZICQXcwdKXhTpYA3SbP2pvwf59wzpjTsBM94-sFIlewNKtRrJiMW5ic2LYvNq5OsRzrjHCsGDA9MCtIayQasmFStROB1boLAojLG8Y6FjVdcXZeySLBjdKZHIDQuT9W4CyE91ZUgxFzj28CUixEa53vOto7s8GeGbdR%7ERy95JwVF8OA__&amp;Key-Pair-Id=K3ESJI6DHPFC7">Standard Attention vs Flash Attention v1</a></figcaption>
</figure>
</div></li>
</ul>
</section>
<section id="the-softmax-challenge" class="level2">
<h2 class="anchored" data-anchor-id="the-softmax-challenge">The Softmax Challenge</h2>
<ul>
<li><strong>Softmax Formula:</strong>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?p_i%20=%20exp(l_i)%20/%20%5Csum_j(exp(l_j))"></li>
<li><img src="https://latex.codecogs.com/png.latex?p">: probabilities, <img src="https://latex.codecogs.com/png.latex?l">: logits</li>
</ul></li>
<li><strong>Numerical Stability:</strong> The exponential function can lead to very large or small values, causing numerical instability in the softmax calculation.
<ul>
<li><strong>PyTorch Dev Discussions:</strong> <a href="https://dev-discuss.pytorch.org/t/fmas-and-softmax-and-floating-point-considered-harmful/1953/1">FMAs (and softmax (and floating point)) considered harmful</a></li>
</ul></li>
<li><strong>Stabilized Softmax:</strong>
<ul>
<li><strong>Stabilization Technique:</strong> The softmax is stabilized by subtracting the maximum logit (m) from all logits before exponentiation.</li>
<li><img src="https://latex.codecogs.com/png.latex?p_i%20=%20exp(l_i%20-%20m)%20/%20%5Csum_j(exp(l_j%20-%20m))"></li>
<li><strong>Benefits:</strong> Ensures that the numerator values are between 0 and 1, improving numerical stability.</li>
</ul></li>
<li><strong><a href="https://arxiv.org/abs/1805.02867">Online Softmax</a>:</strong>
<ul>
<li><strong>Incremental Update:</strong> The stabilized softmax can be computed incrementally by adjusting the sum when the maximum logit (m) changes.</li>
<li><strong>Implementation:</strong> Flash Attention often implements this online softmax block-by-block.</li>
</ul></li>
</ul>
</section>
<section id="flash-attention-2-advanced-techniques" class="level2">
<h2 class="anchored" data-anchor-id="flash-attention-2-advanced-techniques">Flash Attention 2: Advanced Techniques</h2>
<ul>
<li><strong>Flash Attention 1 vs.&nbsp;2:</strong> Flash Attention 2 significantly improves performance over Flash Attention 1 by avoiding writing intermediate results (O, L, M) to DRAM.</li>
<li><strong>Key Features:</strong>
<ul>
<li><strong>Masking Support:</strong> Handles non-rectangular block layouts for masked attention.</li>
<li><strong>Optimized Tile Ordering:</strong> Rearranges tile processing order to minimize DRAM writes.</li>
<li><strong>CUTLASS Integration:</strong> Leverages the NVIDIA CUTLASS library for efficient tensor core utilization in matrix multiplications.</li>
</ul></li>
<li><strong>Compilation Challenges:</strong> The integration of CUTLASS makes Flash Attention 2 a complex C++ codebase, leading to significant compilation time and memory requirements.</li>
</ul>
</section>
<section id="implementation-attempts-and-challenges" class="level2">
<h2 class="anchored" data-anchor-id="implementation-attempts-and-challenges">Implementation Attempts and Challenges</h2>
<ul>
<li><p><strong>Triton Tutorial:</strong> <a href="https://triton-lang.org/main/getting-started/tutorials/06-fused-attention.html">Fused Attention</a></p></li>
<li><p><strong>Manual PyTorch Implementation:</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch, math</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># within one block.</span></span>
<span id="cb2-4">N_inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb2-5">N_out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span></span>
<span id="cb2-6">d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span></span>
<span id="cb2-7"></span>
<span id="cb2-8">Q <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(N_out, d)</span>
<span id="cb2-9">K <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(N_inp, d)</span>
<span id="cb2-10">V <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(N_inp, d)</span>
<span id="cb2-11">O <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(N_out, d)</span>
<span id="cb2-12">L <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(N_out, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-13"></span>
<span id="cb2-14">B_c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb2-15">B_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb2-16">T_c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (N_inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> B_c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> B_c</span>
<span id="cb2-17">T_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (N_out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> B_r <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> B_r</span>
<span id="cb2-18"></span>
<span id="cb2-19">scale_factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> math.sqrt(Q.size(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb2-20"></span>
<span id="cb2-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Q and O split into T_r; K, V in T_c blocks</span></span>
<span id="cb2-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(T_r):</span>
<span id="cb2-23">    Q_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Q[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r: (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r]</span>
<span id="cb2-24">    O_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(B_r, d)</span>
<span id="cb2-25">    L_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(B_r, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb2-26">    m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.full((B_r, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>math.inf)</span>
<span id="cb2-27">    last_m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m_i</span>
<span id="cb2-28"></span>
<span id="cb2-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(T_c):</span>
<span id="cb2-30">        K_j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> K[j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_c: (j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_c]</span>
<span id="cb2-31">        V_j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> V[j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_c: (j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_c]</span>
<span id="cb2-32">        S_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scale_factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (Q_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span> K_j.T)</span>
<span id="cb2-33">        m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.maximum(m_i, S_ij.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>).values)</span>
<span id="cb2-34">        P_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(S_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m_i)</span>
<span id="cb2-35">        P_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(last_m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m_i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> L_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> P_ij.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, keepdim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb2-36">        O_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.exp(last_m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m_i) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> O_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> P_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span> V_j</span>
<span id="cb2-37">        L_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> P_ij</span>
<span id="cb2-38"></span>
<span id="cb2-39">    last_m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m_i</span>
<span id="cb2-40">    O[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r: (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> O_i</span>
<span id="cb2-41">    L[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r: (i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L_i</span></code></pre></div></li>
<li><p><strong>Numba Implementation:</strong> Initial attempts to implement Flash Attention in Numba (a Python-based CUDA kernel compiler) encountered limitations with shared memory capacity, especially for larger tile sizes.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install numba</span></code></pre></div>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numba.cuda</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@numba.cuda.jit</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> attention(K, Q, V, scaling: numba.float32, L, O):</span>
<span id="cb4-5">    inp_dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> K.dtype</span>
<span id="cb4-6">    tid_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.threadIdx.x</span>
<span id="cb4-7">    tid_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.threadIdx.y</span>
<span id="cb4-8"></span>
<span id="cb4-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shared memory arrays</span></span>
<span id="cb4-10">    Q_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_r, d), inp_dtype)</span>
<span id="cb4-11">    K_j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_c, d), inp_dtype)</span>
<span id="cb4-12">    V_j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_c, d), inp_dtype)</span>
<span id="cb4-13">    O_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_r, d), inp_dtype)</span>
<span id="cb4-14">    L_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_r, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), inp_dtype)</span>
<span id="cb4-15">    m_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_r, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), inp_dtype)</span>
<span id="cb4-16">    S_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numba.cuda.shared.array((B_c,), inp_dtype)</span>
<span id="cb4-17"></span>
<span id="cb4-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(T_r):</span>
<span id="cb4-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ii <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_y, B_r, numba.cuda.blockDim.y):</span>
<span id="cb4-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_x, d, numba.cuda.blockDim.x):</span>
<span id="cb4-21">                Q_i[ii, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Q[ii <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r, dd]</span>
<span id="cb4-22">                O_i[ii, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-23">            L_i[ii] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-24">            m_i[ii] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>math.inf</span>
<span id="cb4-25">        numba.cuda.syncthreads()</span>
<span id="cb4-26"></span>
<span id="cb4-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(T_c):</span>
<span id="cb4-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> jj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_y, B_c, numba.cuda.blockDim.y):</span>
<span id="cb4-29">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_x, d, numba.cuda.blockDim.x):</span>
<span id="cb4-30">                    K_j[jj, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> K[jj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_c, dd]</span>
<span id="cb4-31">                    V_j[jj, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> V[jj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_c, dd]</span>
<span id="cb4-32">            numba.cuda.syncthreads()</span>
<span id="cb4-33"></span>
<span id="cb4-34">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># S_ij = scale_factor * (Q_i @ K_j.T)</span></span>
<span id="cb4-35">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ii <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_x, B_r, numba.cuda.blockDim.x):</span>
<span id="cb4-36">                numba.cuda.syncthreads()</span>
<span id="cb4-37"></span>
<span id="cb4-38">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> jj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_y, B_c, numba.cuda.blockDim.y):</span>
<span id="cb4-39">                    S_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb4-40">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(d):</span>
<span id="cb4-41">                        S_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> Q_i[ii, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> K_j[jj, dd]</span>
<span id="cb4-42">                    S_ij <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scale_factor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> S_ij</span>
<span id="cb4-43">                    S_ij_store[jj] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> S_ij</span>
<span id="cb4-44"></span>
<span id="cb4-45">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># m_i = torch.maximum(m_i, S_ij.max(dim=-1, keepdim=True).values)</span></span>
<span id="cb4-46">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This needs to use the parallel reduction pattern</span></span>
<span id="cb4-47">                numba.cuda.syncthreads()</span>
<span id="cb4-48"></span>
<span id="cb4-49">                m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m_i[ii]</span>
<span id="cb4-50">                last_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m</span>
<span id="cb4-51"></span>
<span id="cb4-52">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> jj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(B_c):</span>
<span id="cb4-53">                    m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(m, S_ij_store[jj])</span>
<span id="cb4-54">                m_i[ii] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> m</span>
<span id="cb4-55">                L_i[ii] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.exp(last_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> L_i[ii]</span>
<span id="cb4-56"></span>
<span id="cb4-57">                numba.cuda.syncthreads()</span>
<span id="cb4-58"></span>
<span id="cb4-59">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(d):</span>
<span id="cb4-60">                    O_i[ii, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> math.exp(last_m <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m)</span>
<span id="cb4-61"></span>
<span id="cb4-62">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> jj <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(B_c):</span>
<span id="cb4-63">                    S_ij_store[jj] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.exp(S_ij_store[jj] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> m)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cache the value</span></span>
<span id="cb4-64">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(d):</span>
<span id="cb4-65">                        O_i[ii, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> S_ij_store[jj] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> V_j[jj, dd]</span>
<span id="cb4-66"></span>
<span id="cb4-67">                L_i[ii] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L_i[ii]</span>
<span id="cb4-68"></span>
<span id="cb4-69">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ii <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_y, B_r, numba.cuda.blockDim.y):</span>
<span id="cb4-70">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> dd <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(tid_x, d, numba.cuda.blockDim.x):</span>
<span id="cb4-71">                O[ii <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> O_i[ii, dd] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> L_i[ii]</span>
<span id="cb4-72">            L[ii <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> B_r] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> L_i[ii]</span></code></pre></div>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialization code</span></span>
<span id="cb5-2">O2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(N_out, d, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb5-3">L2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(N_out, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb5-4">Kc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> K.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb5-5">Qc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Q.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb5-6">Vc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> V.to(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call to the attention kernel</span></span>
<span id="cb5-9">attention((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,))(Kc, Qc, Vc, scale_factor, L2, O2)</span></code></pre></div></li>
<li><p><strong>Shared Memory vs.&nbsp;Registers:</strong></p>
<ul>
<li><strong>Shared Memory:</strong> Typically used for Q, K, and V matrices.</li>
<li><strong>Registers:</strong> Ideally used for intermediate results like logits (L), probabilities (P), and outputs (O) to maximize speed.</li>
</ul></li>
<li><p><strong>Register Allocation in CUDA:</strong> CUDA can automatically allocate variables to registers if they are:</p>
<ul>
<li>Declared as local arrays with constant size.</li>
<li>Accessed using simple loop indices (not dynamic indices).</li>
</ul></li>
</ul>
</section>
<section id="cuda-c-implementation" class="level2">
<h2 class="anchored" data-anchor-id="cuda-c-implementation">CUDA C++ Implementation</h2>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install cuda-python</span></code></pre></div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cuda <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> cuda, nvrtc</span></code></pre></div>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">cuda_src <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r"""\</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">constexpr int B_r = 16;</span></span>
<span id="cb8-4"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">constexpr int B_c = 16;</span></span>
<span id="cb8-5"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">constexpr int d = 128;</span></span>
<span id="cb8-6"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">constexpr int o_per_thread_x = 1;</span></span>
<span id="cb8-7"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">constexpr int o_per_thread_y = 128 / 32;</span></span>
<span id="cb8-8"></span>
<span id="cb8-9"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">#define NEG_INFINITY __int_as_float(0xff800000)</span></span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">extern "C" __global__</span></span>
<span id="cb8-12"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">void silly_attn(float *out, float *out_l, float *K, float *Q, float *V, float scaling, int n, int T_r, int T_c) </span></span>
<span id="cb8-13"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-14"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    int tid_x = threadIdx.x;</span></span>
<span id="cb8-15"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    int tid_y = threadIdx.y;</span></span>
<span id="cb8-16"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    __shared__ float Q_i[B_r][d];</span></span>
<span id="cb8-17"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    __shared__ float K_j[B_c][d];</span></span>
<span id="cb8-18"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    __shared__ float V_j[B_c][d];</span></span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    __shared__ float S_i[B_r][B_c];</span></span>
<span id="cb8-21"></span>
<span id="cb8-22"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    float l_i[o_per_thread_x];</span></span>
<span id="cb8-23"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    float m_i[o_per_thread_x];</span></span>
<span id="cb8-24"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    float O_i[o_per_thread_x][o_per_thread_y];</span></span>
<span id="cb8-25"></span>
<span id="cb8-26"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    for (int i = 0; i &lt; T_r; i++) {</span></span>
<span id="cb8-27"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        for (int ii = 0; ii &lt; o_per_thread_x; ii++) {</span></span>
<span id="cb8-28"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            for (int dd = 0; dd &lt; o_per_thread_y; dd++) {</span></span>
<span id="cb8-29"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                O_i[ii][dd] = 0;</span></span>
<span id="cb8-30"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-31"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            l_i[ii] = 0.f;</span></span>
<span id="cb8-32"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            m_i[ii] = NEG_INFINITY;</span></span>
<span id="cb8-33"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-34"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb8-35"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        for (int ii = tid_y; ii &lt; B_r; ii += blockDim.y) {</span></span>
<span id="cb8-36"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            for (int dd = tid_x; dd &lt; d; dd += blockDim.x) {</span></span>
<span id="cb8-37"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                Q_i[ii][dd] = Q[(ii + i * B_r) * d + dd];</span></span>
<span id="cb8-38"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-39"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-40"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb8-41"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        for (int j = 0; j &lt; T_c; j++) {</span></span>
<span id="cb8-42"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            __syncthreads();</span></span>
<span id="cb8-43"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            for (int jj = tid_y; jj &lt; B_c; jj += blockDim.y) {</span></span>
<span id="cb8-44"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                for (int dd = tid_x; dd &lt; d; dd += blockDim.x) {</span></span>
<span id="cb8-45"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    K_j[jj][dd] = K[(jj + j * B_c) * d + dd];</span></span>
<span id="cb8-46"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    V_j[jj][dd] = V[(jj + j * B_c) * d + dd];</span></span>
<span id="cb8-47"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-48"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-49"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            __syncthreads();</span></span>
<span id="cb8-50"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            // S_i = scale_factor * (Q_i @ K_j.T);</span></span>
<span id="cb8-51"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            for (int ii = tid_x; ii &lt; B_r; ii += blockDim.x) {</span></span>
<span id="cb8-52"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                for (int jj = tid_y; jj &lt; B_c; jj += blockDim.y) {</span></span>
<span id="cb8-53"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    float S_ij = 0.f;</span></span>
<span id="cb8-54"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    for (int dd = 0; dd &lt; d; dd++) {</span></span>
<span id="cb8-55"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                        S_ij += Q_i[ii][dd] * K_j[jj][dd];</span></span>
<span id="cb8-56"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    }</span></span>
<span id="cb8-57"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    S_ij = scaling * S_ij;</span></span>
<span id="cb8-58"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    S_i[ii][jj] = S_ij;</span></span>
<span id="cb8-59"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-60"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-61"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            __syncthreads();</span></span>
<span id="cb8-62"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            for (int ii = 0; ii &lt; o_per_thread_x; ii++) {</span></span>
<span id="cb8-63"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                float m = m_i[ii];</span></span>
<span id="cb8-64"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                float last_m = m;</span></span>
<span id="cb8-65"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                for (int jj = 0; jj &lt; B_c; jj+=1) {</span></span>
<span id="cb8-66"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    if (m &lt; S_i[ii] * blockDim.x + tid_x[jj]) {</span></span>
<span id="cb8-67"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                        m = S_i[ii] * blockDim.x + tid_x[jj];</span></span>
<span id="cb8-68"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    }</span></span>
<span id="cb8-69"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-70"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                m_i[ii] = m;</span></span>
<span id="cb8-71"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                float l = exp(last_m - m) * l_i[ii];</span></span>
<span id="cb8-72"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                for (int dd = 0; dd &lt; o_per_thread_y; dd++) {</span></span>
<span id="cb8-73"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    O_i[ii][dd] *= exp(last_m - m);</span></span>
<span id="cb8-74"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-75"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            </span></span>
<span id="cb8-76"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                for (int jj = 0; jj &lt; B_c; jj++) {</span></span>
<span id="cb8-77"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    float S_ij = exp(S_i[ii] * blockDim.x + tid_x[jj] - m);</span></span>
<span id="cb8-78"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    l += S_ij;</span></span>
<span id="cb8-79"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    for (int dd = 0; dd &lt; o_per_thread_y; dd++) {</span></span>
<span id="cb8-80"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                        O_i[ii][dd] += S_ij * V_j[jj][dd + blockDim.y + tid_y];</span></span>
<span id="cb8-81"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                    }</span></span>
<span id="cb8-82"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                }</span></span>
<span id="cb8-83"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                l_i[ii] = l;</span></span>
<span id="cb8-84"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                </span></span>
<span id="cb8-85"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-86"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-87"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        for (int ii = 0; ii &lt; o_per_thread_x; ii++) {</span></span>
<span id="cb8-88"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            for (int dd = 0; dd &lt; o_per_thread_y; dd++) {</span></span>
<span id="cb8-89"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                out[(ii * blockDim.x + tid_x + i * B_r) * d + dd * blockDim.y + tid_y] = O_i[ii][dd] / l_i[ii];</span></span>
<span id="cb8-90"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">                out_l[ii * blockDim.x + tid_x + i * B_r] = l_i[ii];</span></span>
<span id="cb8-91"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">            }</span></span>
<span id="cb8-92"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">        }</span></span>
<span id="cb8-93"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">    }</span></span>
<span id="cb8-94"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-95"><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">"""</span></span></code></pre></div>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create program</span></span>
<span id="cb9-2">err, prog <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nvrtc.nvrtcCreateProgram(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>.encode(cuda_src), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"silly_attn.cu"</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, [], [])</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compile program</span></span>
<span id="cb9-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>, maj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.cuda.get_device_capability()</span>
<span id="cb9-6">opts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"--gpu-architecture=compute_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}{</span>maj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.encode()]</span>
<span id="cb9-7">err, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nvrtc.nvrtcCompileProgram(prog, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(opts), opts)</span>
<span id="cb9-8"></span>
<span id="cb9-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(err)</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get PTX from compilation</span></span>
<span id="cb9-12">err, ptxSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nvrtc.nvrtcGetPTXSize(prog)</span>
<span id="cb9-13">ptx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b" "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ptxSize</span>
<span id="cb9-14">err, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nvrtc.nvrtcGetPTX(prog, ptx)</span>
<span id="cb9-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(err)</span>
<span id="cb9-16"></span>
<span id="cb9-17">err, logSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nvrtc.nvrtcGetProgramLogSize(prog)</span>
<span id="cb9-18">log <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b" "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> logSize</span>
<span id="cb9-19">err, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nvrtc.nvrtcGetProgramLog(prog, log)</span>
<span id="cb9-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(log.decode())</span>
<span id="cb9-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print(ptx.decode())</span></span>
<span id="cb9-22"></span>
<span id="cb9-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load PTX as module data and retrieve function</span></span>
<span id="cb9-24">err, module <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cuda.cuModuleLoadData(ptx)</span>
<span id="cb9-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(err)</span>
<span id="cb9-26">err, kernel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cuda.cuModuleGetFunction(module, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">b"silly_attn"</span>)</span>
<span id="cb9-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(err, kernel)</span>
<span id="cb9-28"></span>
<span id="cb9-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Allocate tensors</span></span>
<span id="cb9-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># S3 = torch.zeros(N_out, N_out, device="cuda")</span></span>
<span id="cb9-31">O3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(N_out, d, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb9-32">L3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.zeros(N_out, device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cuda"</span>)</span>
<span id="cb9-33"></span>
<span id="cb9-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To quote the official tutorial: (https://nvidia.github.io/cuda-python/overview.html)</span></span>
<span id="cb9-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The following code example is not intuitive</span></span>
<span id="cb9-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Subject to change in a future release</span></span>
<span id="cb9-37"></span>
<span id="cb9-38">int_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, T_r, T_c], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.int32)</span>
<span id="cb9-39">float_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([scale_factor], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb9-40">ptr_args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([i.data_ptr() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> (O3, L3, Kc, Qc, Vc)], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.uint64)</span>
<span id="cb9-41"></span>
<span id="cb9-42">args <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([</span>
<span id="cb9-43">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(i.data_ptr() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ptr_args),</span>
<span id="cb9-44">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(i.data_ptr() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> float_args),</span>
<span id="cb9-45">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(i.data_ptr() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> int_args)], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.uint64)</span>
<span id="cb9-46"></span>
<span id="cb9-47">args</span></code></pre></div>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> fn():</span>
<span id="cb10-2">    err, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cuda.cuLaunchKernel(</span>
<span id="cb10-3">        kernel,</span>
<span id="cb10-4">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grid x dim</span></span>
<span id="cb10-5">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grid y dim</span></span>
<span id="cb10-6">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># grid z dim</span></span>
<span id="cb10-7">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># block x dim</span></span>
<span id="cb10-8">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># block y dim</span></span>
<span id="cb10-9">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># block z dim</span></span>
<span id="cb10-10">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dynamic shared memory</span></span>
<span id="cb10-11">        torch.cuda.current_stream().stream_id,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># stream</span></span>
<span id="cb10-12">        args.data_ptr(),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># kernel arguments</span></span>
<span id="cb10-13">        <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># extra (ignore)</span></span>
<span id="cb10-14">    )</span>
<span id="cb10-15"></span>
<span id="cb10-16">fn()</span>
<span id="cb10-17">(O3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> O2)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-18"></span>
<span id="cb10-19">(O3.cpu() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> expected).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span></code></pre></div>
<ul>
<li><strong>Register-Based Output:</strong> The Numba implementation was translated to CUDA C++ with modifications to store the output (O) in registers.</li>
<li><strong>Benefits:</strong> Leveraging the large register file (16k single-precision registers) on the SM can significantly improve performance compared to using shared memory for outputs.</li>
<li><strong>Register Spillover:</strong> Care must be taken to avoid register spillover, which occurs when the kernel requires more registers than available.
<ul>
<li><strong>Detection:</strong> Compiler flags and profiling tools (e.g., Nsight Compute) can help detect register spillover.
<ul>
<li><strong>Tool:</strong> <a href="https://godbolt.org/">godbolt</a></li>
</ul></li>
</ul></li>
<li><strong>Compilation with Python CUDA:</strong> The CUDA C++ kernel can be compiled directly within Python using the <code>nvrtc</code> runtime compiler provided by the <a href="https://nvidia.github.io/cuda-python/overview.html">CUDA Python library</a>.</li>
</ul>
<section id="thunder" class="level3">
<h3 class="anchored" data-anchor-id="thunder">Thunder</h3>
<ul>
<li><strong>Thunder Integration:</strong> <a href="https://github.com/Lightning-AI/lightning-thunder">Thunder</a>, a source-to-source compiler for PyTorch, can be used to seamlessly integrate custom kernels (like the Flash Attention implementation) into PyTorch models.
<ul>
<li><strong>Operator Registration:</strong> Custom kernels can be registered as operators within Thunder.</li>
<li><strong>Kernel Replacement:</strong> Thunder can automatically replace specific PyTorch operations (e.g., <code>torch.nn.functional.scaled_dot_product_attention</code>) with the registered custom kernel.</li>
<li><strong>Conditional Replacement:</strong> Checker functions allow defining conditions under which the replacement should occur (e.g., based on input shapes, presence of masks, etc.).</li>
</ul></li>
</ul>
</section>
</section>
<section id="performance-evaluation-and-future-directions" class="level2">
<h2 class="anchored" data-anchor-id="performance-evaluation-and-future-directions">Performance Evaluation and Future Directions</h2>
<ul>
<li><strong>Initial Performance:</strong> The custom CUDA C++ implementation, even with register-based output, is currently slower than the built-in <code>scaled_dot_product_attention</code> in PyTorch.</li>
<li><strong>Further Optimization:</strong>
<ul>
<li><strong>Improving Register Usage:</strong> Fine-tuning register allocation and minimizing spillover.</li>
<li><strong>Exploring Tile Sizes:</strong> Experimenting with different tile sizes to find optimal configurations for specific hardware and problem sizes.</li>
<li><strong>Implementing Advanced Features:</strong> Adding support for masks, multiple heads, and dropout.</li>
</ul></li>
<li><strong>Persistent Kernels:</strong> Future research directions include exploring persistent kernels, where a single CUDA kernel represents an entire neural network and remains resident on the GPU for processing multiple batches of data.</li>
</ul>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li><strong>Flash Attention Summary:</strong> Flash Attention is a powerful technique for optimizing attention calculations in transformer models. It achieves significant performance gains by minimizing DRAM access and leveraging the speed of SRAM.</li>
<li><strong>Implementation Challenges:</strong> Implementing Flash Attention efficiently requires careful consideration of tiling strategies, softmax stabilization,</li>
</ul>
</section>
<section id="qa-session" class="level2">
<h2 class="anchored" data-anchor-id="qa-session">Q&amp;A Session</h2>
<ul>
<li><p><strong>Q1: At what level does Thunder replace PyTorch operations? Is it at the ATen level or the ref level?</strong></p>
<ul>
<li><p><strong>A:</strong> Thunder operates similarly to the ATen level but not exactly the same. It provides operators that can replace PyTorch functions. However, it is flexible and can also replace user-defined functions within a model.</p></li>
<li><p><strong>Explanation:</strong> Thunder utilizes a Python interpreter to record PyTorch function calls and generates an intermediate representation (IR) as Python code. This allows for easy extensibility and customization of the replacement process.</p></li>
</ul></li>
<li><p><strong>Q2: Given that the kernel is written in pure PyTorch, would it be beneficial to see the Triton kernel generated by Torch Compile for comparison?</strong></p>
<ul>
<li><p><strong>A:</strong> While seeing the Triton kernel generated by Torch Compile would be interesting, it is expected that the automatic fusion capabilities of compilers like Dynamo might not be sufficient to fully recover the Flash Attention kernel’s optimizations. This is because Flash Attention involves complex tiling and memory access patterns that might be difficult for a general-purpose compiler to automatically infer and optimize.</p></li>
<li><p><strong>Explanation:</strong> The educational value of the custom kernel lies in its transparency and ability to showcase specific optimization techniques, which might not be evident in a compiler-generated kernel.</p></li>
</ul></li>
<li><p><strong>Q3: How do you detect register spillover when writing CUDA kernels, especially since you don’t explicitly control register allocation?</strong></p>
<ul>
<li><p><strong>A:</strong> Register spillover can be detected by:</p>
<ul>
<li><p><strong>Compiler Flags:</strong> Using compiler flags that provide information about register usage during compilation.</p></li>
<li><p><strong>Profiling Tools:</strong> Utilizing profiling tools like Nsight Compute, which can identify potential spillover issues.</p></li>
<li><p><strong>Examining PTX:</strong> Analyzing the PTX (parallel thread execution) code generated by the compiler to see the number of registers allocated and identify potential spillover.</p></li>
</ul></li>
<li><p><strong>Explanation:</strong> While CUDA automatically allocates registers based on variable usage, it is essential to monitor register usage and optimize the kernel to minimize spillover, as it can significantly impact performance.</p></li>
</ul></li>
<li><p><strong>Q4: In Flash Attention, Q, K, and V are computed from input tokens using matrix multiplications. Would it be sensible to fuse these multiplications into a single kernel, or would register limitations prevent this?</strong></p>
<ul>
<li><p><strong>A:</strong> Fusing the Q, K, and V matrix multiplications into a single kernel is a common optimization technique in Flash Attention implementations. However, fusing additional operations beyond this point might become challenging due to register limitations and the complexity of managing intermediate results within the kernel.</p></li>
<li><p><strong>Explanation:</strong> Flash Attention already pushes the boundaries of kernel complexity and resource utilization. While further fusion might be theoretically possible, it requires careful consideration of resource constraints and potential performance trade-offs.</p></li>
</ul></li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-012/</guid>
  <pubDate>Sun, 15 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 11: Sparsity</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-011/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction<br>
</li>
<li>The Performance Challenge of Sparsity<br>
</li>
<li>Unstructured Sparsity and Its Limitations on GPUs<br>
</li>
<li>Semi-structured Sparsity (2:4 Sparsity)<br>
</li>
<li>Block Sparsity<br>
</li>
<li>Composing Sparsity with Quantization<br>
</li>
<li>Sparse Training<br>
</li>
<li>Future Directions and Research Areas<br>
</li>
<li>Conclusion</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=mGDnOLcfE8g">Lecture 11: Sparsity</a></li>
<li><strong>Slides:</strong> <a href="https://github.com/cuda-mode/lectures/blob/main/lecture_011/sparsity.pptx">GPU Sparsity</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<ul>
<li><strong>Speaker:</strong> Jesse Cai</li>
</ul>
<section id="sparsity-and-pruning-core-concepts" class="level3">
<h3 class="anchored" data-anchor-id="sparsity-and-pruning-core-concepts">Sparsity and Pruning: Core Concepts</h3>
<ul>
<li><p><strong>Sparsity</strong> in neural networks refers to the presence of a significant number of zero-valued weights.</p></li>
<li><p><strong>Pruning</strong> is the process of intentionally removing these zero-valued or insignificant weights from the network.</p></li>
<li><p>The goal is to reduce computational cost and memory footprint without significantly impacting model accuracy.</p></li>
<li><p>This is achieved in two steps:</p>
<ol type="1">
<li><strong>Zeroing out weights:</strong> Identify and set insignificant weights to zero.</li>
<li><strong>Accelerating computation:</strong> Develop methods to efficiently perform calculations with zero-valued weights (e.g., skipping multiplication by zero).</li>
</ol></li>
</ul>
</section>
<section id="historical-context-and-renewed-interest" class="level3">
<h3 class="anchored" data-anchor-id="historical-context-and-renewed-interest">Historical Context and Renewed Interest</h3>
<ul>
<li>The concept of pruning dates back to the <a href="https://proceedings.neurips.cc/paper_files/paper/1989/file/6c9882bbac1c7093bd25041881277658-Paper.pdf">“Optimal Brain Damage” paper</a> from 1989.</li>
<li>Renewed interest emerged with the rise of deep learning and large models like AlexNet in 2012.</li>
<li>The increasing size of modern models, especially in the context of LLMs and Gen AI, has further intensified the need for sparsity and pruning techniques.</li>
</ul>
</section>
</section>
<section id="the-performance-challenge-of-sparsity" class="level2">
<h2 class="anchored" data-anchor-id="the-performance-challenge-of-sparsity">The Performance Challenge of Sparsity</h2>
<section id="multiplying-by-zero-the-ideal-vs.-reality" class="level3">
<h3 class="anchored" data-anchor-id="multiplying-by-zero-the-ideal-vs.-reality">Multiplying by Zero: The Ideal vs.&nbsp;Reality</h3>
<ul>
<li>The fundamental principle of sparsity relies on the fact that multiplying by zero is inherently faster than multiplying by non-zero values.</li>
<li>However, <strong>simply having zero-valued weights doesn’t guarantee speedups</strong>. The way computation is performed is crucial.</li>
<li><strong>Naive approaches:</strong> If multiplication by zero is treated the same as multiplication by any other number (e.g., performing the full multiplication steps), no significant performance gain is achieved.</li>
</ul>
</section>
<section id="sparsity-patterns-and-the-gpu-trade-off" class="level3">
<h3 class="anchored" data-anchor-id="sparsity-patterns-and-the-gpu-trade-off">Sparsity Patterns and the GPU Trade-off</h3>
<ul>
<li><strong>The challenge:</strong> Achieving optimal performance with sparse models on GPUs requires balancing two competing factors:
<ul>
<li><strong>Flexibility:</strong> Allowing for a wide range of sparsity patterns to minimize the impact on accuracy.</li>
<li><strong>Efficient Computation:</strong> Ensuring that the chosen sparsity pattern can be efficiently processed on the parallel architecture of GPUs.</li>
</ul></li>
<li><strong>Types of Sparsity:</strong>
<ul>
<li><strong>Unstructured Sparsity:</strong> No constraints on the location of zero-valued weights. Offers high flexibility but can be challenging to accelerate on GPUs.</li>
<li><strong>Structured Sparsity:</strong> Zeros are arranged in specific patterns (e.g., entire rows, columns, or filters). Easier to accelerate but may significantly impact accuracy.</li>
<li><strong>Semi-structured Sparsity (2:4 Sparsity):</strong> An intermediate approach where two out of every four elements are zero. Offers a balance between flexibility and performance. Well-supported on GPUs.</li>
<li><strong>Block Sparsity:</strong> Zeros are grouped into blocks (e.g., 32x32). Provides good performance but requires more complex algorithms for accuracy recovery.
<ul>
<li><strong>PyTorch:</strong> <a href="https://github.com/pytorch/ao/tree/main/torchao/sparsity/prototype/superblock">torchao/sparsity/prototype/superblock</a></li>
<li><strong>Paper:</strong> <a href="https://arxiv.org/abs/2207.00670">DRESS: Dynamic REal-time Sparse Subnets</a></li>
</ul></li>
</ul></li>
</ul>
</section>
</section>
<section id="unstructured-sparsity-and-its-limitations-on-gpus" class="level2">
<h2 class="anchored" data-anchor-id="unstructured-sparsity-and-its-limitations-on-gpus">Unstructured Sparsity and Its Limitations on GPUs</h2>
<section id="sparse-representations-and-kernels" class="level3">
<h3 class="anchored" data-anchor-id="sparse-representations-and-kernels">Sparse Representations and Kernels</h3>
<ul>
<li>To make unstructured sparsity efficient, data is stored in <strong>sparse representations</strong> (e.g., coordinate format).
<ul>
<li><strong>Documentation:</strong> <a href="https://pytorch.org/docs/stable/sparse.html">torch.sparse</a></li>
</ul></li>
<li><strong>Coordinate Format Example:</strong>
<ul>
<li><strong>Dense Matrix:</strong> Stored contiguously in memory.</li>
<li><strong>Sparse Matrix (Coordinate Format):</strong> Only non-zero elements are stored along with their indices. This reduces memory footprint when the matrix is sufficiently sparse.</li>
</ul></li>
<li><strong>Sparse kernels</strong> are used to perform computations directly on these sparse representations, skipping multiplications by zero.</li>
</ul>
</section>
<section id="challenges-on-gpus" class="level3">
<h3 class="anchored" data-anchor-id="challenges-on-gpus">Challenges on GPUs</h3>
<ul>
<li><strong>High Sparsity Requirement:</strong> CPU sparsity is generally only faster at extremely high sparsity levels (greater than 99%).</li>
<li><strong>GPU Limitations:</strong> Dense matrix multiplication is significantly faster on GPUs due to their parallel nature.
<ul>
<li>This makes it even harder for unstructured sparsity to achieve speedups on GPUs, as the parallelization benefits are lost with highly irregular sparsity patterns.</li>
</ul></li>
<li><strong>Need for Structure:</strong> To achieve performance gains on GPUs, some form of structure in the sparsity pattern is necessary to enable efficient parallelization.</li>
</ul>
</section>
</section>
<section id="semi-structured-sparsity-24-sparsity" class="level2">
<h2 class="anchored" data-anchor-id="semi-structured-sparsity-24-sparsity">Semi-structured Sparsity (2:4 Sparsity)</h2>
<section id="characteristics" class="level3">
<h3 class="anchored" data-anchor-id="characteristics">Characteristics</h3>
<ul>
<li><p><strong>Fixed Sparsity Level:</strong> 50% of the elements are zero.</p></li>
<li><p><strong>Pattern:</strong> Two out of every four elements within a block are zero.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-011/images/semi-structured-sparsity.png" class="img-fluid figure-img"></p>
<figcaption>Slide 9</figcaption>
</figure>
</div></li>
<li><p><strong>Accuracy Recovery:</strong> NVIDIA research suggests that accuracy can be effectively recovered with a simple “prune once, retrain” approach.</p></li>
</ul>
</section>
<section id="implementation-in-pytorch" class="level3">
<h3 class="anchored" data-anchor-id="implementation-in-pytorch">Implementation in PyTorch</h3>
<ul>
<li><p><strong>Integration:</strong> Semi-structured sparsity is supported in PyTorch.</p>
<ul>
<li><strong>Documentation:</strong> <a href="https://pytorch.org/docs/stable/sparse.html">torch.sparse</a></li>
</ul></li>
<li><p><strong>Backends:</strong></p>
<ul>
<li><p><strong><a href="https://github.com/NVIDIA/CUTLASS">CUTLASS</a>:</strong> NVIDIA’s CUDA Templates library provides native instructions for 2:4 sparse operations.</p></li>
<li><p><strong><a href="https://docs.nvidia.com/cuda/cusparselt/">cuSPARSELt</a>:</strong> NVIDIA’s library specifically designed for sparse linear algebra operations. Offers additional features and potential performance improvements.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-011/images/cusparselt-semi-structured-sparsity.png" class="img-fluid figure-img"></p>
<figcaption>Slide 10</figcaption>
</figure>
</div></li>
</ul></li>
<li><p><strong>Performance:</strong></p>
<ul>
<li><strong>Theoretical Maximum Speedup:</strong> 2x due to halving the number of non-zero elements.</li>
<li><strong>Practical Average Speedup:</strong> Around 1.6x due to overheads like loading metadata (bitmask) and matrix shape dependencies.</li>
</ul></li>
</ul>
</section>
<section id="example-usage-in-pytorch" class="level3">
<h3 class="anchored" data-anchor-id="example-usage-in-pytorch">Example Usage in PyTorch</h3>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb1-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.sparse <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> to_sparse_semi_structured, SparseSemiStructuredTensor</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sparsity helper functions</span></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> apply_fake_sparsity(model):</span>
<span id="cb1-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    This function simulates 2:4 sparsity on all linear layers in a model.</span></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    It uses the torch.ao.pruning flow.</span></span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># torch.ao.pruning flow</span></span>
<span id="cb1-11">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.ao.pruning <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> WeightNormSparsifier</span>
<span id="cb1-12">    sparse_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb1-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, mod <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> model.named_modules():</span>
<span id="cb1-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(mod, torch.nn.Linear):</span>
<span id="cb1-15">            sparse_config.append({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor_fqn"</span>: <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.weight"</span>})</span>
<span id="cb1-16"></span>
<span id="cb1-17">    sparsifier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WeightNormSparsifier(sparsity_level<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb1-18">                                      sparse_block_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>),</span>
<span id="cb1-19">                                      zeros_per_block<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb1-20">    sparsifier.prepare(model, sparse_config)</span>
<span id="cb1-21">    sparsifier.step()</span>
<span id="cb1-22"></span>
<span id="cb1-23">    sparsifier.step()</span>
<span id="cb1-24">    sparsifier.squash_mask()</span>
<span id="cb1-25"></span>
<span id="cb1-26"></span>
<span id="cb1-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> apply_sparse(model):</span>
<span id="cb1-28">    apply_fake_sparsity(model)</span>
<span id="cb1-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name, mod <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> model.named_modules():</span>
<span id="cb1-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">isinstance</span>(mod, torch.nn.Linear):</span>
<span id="cb1-31">            mod.weight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.nn.Parameter(to_sparse_semi_structured(mod.weight))</span></code></pre></div>
</section>
<section id="limitations-and-workarounds" class="level3">
<h3 class="anchored" data-anchor-id="limitations-and-workarounds">Limitations and Workarounds</h3>
<ul>
<li><strong>First Matrix Sparsity Only:</strong> Current implementations only support sparsity in the first matrix of a matrix multiplication, not the second.</li>
<li><strong>Impact on PyTorch Linear Layers:</strong> PyTorch linear layers are defined as XW<sup>T</sup>, requiring a transpose operation when using semi-structured sparsity.</li>
<li><strong>Transpose Overhead:</strong> The transpose can introduce performance overhead due to data copying.</li>
<li><strong>Torch.compile Mitigation:</strong> Torch.compile can fuse the transpose with subsequent operations (e.g., ReLU) to reduce overhead.</li>
<li><strong>Current Fusion Limitations:</strong> Torch.compile cannot currently fuse operations directly into the sparse matrix multiplication kernel (cuSPARSELt). This limits potential performance gains.</li>
</ul>
</section>
</section>
<section id="block-sparsity" class="level2">
<h2 class="anchored" data-anchor-id="block-sparsity">Block Sparsity</h2>
<ul>
<li><strong>PyTorch:</strong> <a href="https://github.com/pytorch/ao/tree/main/torchao/sparsity/prototype/superblock">torchao/sparsity/prototype/superblock</a></li>
</ul>
<section id="characteristics-1" class="level3">
<h3 class="anchored" data-anchor-id="characteristics-1">Characteristics</h3>
<ul>
<li><strong>Variable Sparsity Level:</strong> The sparsity level can be adjusted (e.g., 90%).</li>
<li><strong>Pattern:</strong> Zeros are grouped into blocks of a fixed size (e.g., 32x32).</li>
<li><strong>Accuracy Recovery:</strong> More complex algorithms are typically needed for accuracy recovery compared to 2:4 sparsity. Research in this area is ongoing.</li>
</ul>
</section>
<section id="advantages-for-vision-transformers" class="level3">
<h3 class="anchored" data-anchor-id="advantages-for-vision-transformers">Advantages for Vision Transformers</h3>
<ul>
<li><strong>Potential for Higher Speedups:</strong> Block sparsity can achieve speedups beyond 2x, especially at high sparsity levels.</li>
<li><strong>Example (Vision Transformers):</strong>
<ul>
<li>90% sparsity can lead to speedups of up to 3.4x.</li>
<li>1.4x speedup achieved on ImageNet with minimal accuracy loss (2 percentage points).</li>
</ul></li>
</ul>
</section>
<section id="challenges" class="level3">
<h3 class="anchored" data-anchor-id="challenges">Challenges</h3>
<ul>
<li><strong>Accuracy Recovery:</strong> Finding effective methods to recover accuracy after block sparsity pruning remains an active research area.</li>
<li><strong>Limited Research:</strong> Compared to 2:4 sparsity, block sparsity on GPUs has received less attention, and optimal solutions are still being explored.</li>
</ul>
</section>
</section>
<section id="composing-sparsity-with-quantization" class="level2">
<h2 class="anchored" data-anchor-id="composing-sparsity-with-quantization">Composing Sparsity with Quantization</h2>
<ul>
<li><strong>GitHub Repository:</strong> <a href="https://github.com/pytorch/ao">torchao</a></li>
</ul>
<section id="challenges-and-fusion-issues" class="level3">
<h3 class="anchored" data-anchor-id="challenges-and-fusion-issues">Challenges and Fusion Issues</h3>
<ul>
<li><strong>Combining sparsity and quantization can lead to performance bottlenecks</strong> due to limitations in operator fusion.</li>
<li><strong>Fusion Breakdown:</strong>
<ul>
<li><strong>Ideal Scenario:</strong> A fully fused kernel would handle sparsity, quantization, matrix multiplication, and dequantization in a single operation.</li>
<li><strong>Current Limitations:</strong> Existing implementations (especially with cuSPARSELt) often result in multiple separate kernels, introducing overhead.</li>
</ul></li>
<li><strong>Example:</strong>
<ul>
<li>Baseline (BF16): 1600ms</li>
<li>Sparsity: 1400ms</li>
<li>Quantization: 1400ms</li>
<li>Sparsity + Quantization (without optimal fusion): Marginal speedup (1420ms)</li>
<li>Sparsity + Quantization (with partial fusion using cuSPARSELt alpha vectors): 1278ms (significant improvement)</li>
</ul></li>
</ul>
</section>
<section id="potential-solutions" class="level3">
<h3 class="anchored" data-anchor-id="potential-solutions">Potential Solutions</h3>
<ul>
<li><strong>Fused Kernels:</strong> Developing custom fused kernels that handle sparsity and quantization together can significantly improve performance.</li>
<li><strong>CUTLASS vs.&nbsp;cuSPARSELt:</strong> CUTLASS offers more flexibility for creating custom fused kernels compared to the black-box nature of cuSPARSELt.</li>
<li><strong>Transpose Fusion:</strong> Integrating the transpose operation (needed for PyTorch linear layers) directly into the sparse kernel can further enhance performance.</li>
</ul>
</section>
<section id="accuracy-considerations" class="level3">
<h3 class="anchored" data-anchor-id="accuracy-considerations">Accuracy Considerations</h3>
<ul>
<li><strong>Accuracy Impact:</strong> Combining sparsity and quantization can lead to accuracy degradation.</li>
<li><strong>Research is ongoing</strong> to find the optimal balance between sparsity, quantization levels, and accuracy.</li>
<li><strong>Sparse GPT:</strong> One example of research in this area, exploring one-shot calibration methods to recover accuracy without retraining, which is particularly challenging for large LLMs due to memory constraints.</li>
</ul>
</section>
</section>
<section id="sparse-training" class="level2">
<h2 class="anchored" data-anchor-id="sparse-training">Sparse Training</h2>
<section id="accelerating-the-training-process" class="level3">
<h3 class="anchored" data-anchor-id="accelerating-the-training-process">Accelerating the Training Process</h3>
<ul>
<li>Sparsity can also be applied during training to speed up the process.</li>
<li><strong>Fast Sparsification:</strong> Efficient algorithms (e.g., based on weight magnitude without sorting or branching) are used to quickly sparsify the weights or activations before each matrix multiplication.</li>
<li><strong>Performance Gains:</strong> The time taken for sparsification and sparse matrix multiplication can be less than the time for a dense matrix multiplication, leading to overall training speedups.</li>
</ul>
</section>
<section id="example-xformers-and-imagenet" class="level3">
<h3 class="anchored" data-anchor-id="example-xformers-and-imagenet">Example: xFormers and ImageNet</h3>
<ul>
<li><strong>Collaboration with <a href="https://github.com/facebookresearch/xformers">xFormers</a>:</strong> PyTorch has been working with the xFormers team to develop fast sparsification kernels.</li>
<li><strong>Results:</strong>
<ul>
<li>10-20% speedup in end-to-end ImageNet training with minimal accuracy loss (81.6% to 80.5%).</li>
</ul></li>
<li><strong>Key Observations:</strong>
<ul>
<li><strong>Activation Sparsity:</strong> Applying sparsity to activations (after ReLU) often leads to better results than weight sparsity, as activations tend to be more naturally sparse.</li>
<li><strong>Matrix Shape Considerations:</strong> The effectiveness of sparsity can depend on the shapes of the matrices involved.</li>
</ul></li>
</ul>
</section>
<section id="differences-between-inference-and-training" class="level3">
<h3 class="anchored" data-anchor-id="differences-between-inference-and-training">Differences Between Inference and Training</h3>
<ul>
<li><strong>Transpose Handling:</strong>
<ul>
<li><strong>Inference:</strong> Only one representation (either W or W<sup>T</sup>) is needed.</li>
<li><strong>Training:</strong> Both W and W<sup>T</sup> are required for the forward and backward passes. This can lead to a slight memory penalty when using sparse representations during training.</li>
</ul></li>
<li><strong>Fused Transpose Requirement:</strong>
<ul>
<li><strong>Training:</strong> Fused transpose operations are crucial for performance. Currently, this functionality is only available in cuSPARSELt, making it essential for sparse training.</li>
<li><strong>Inference:</strong> Fused transpose is less critical as it can be handled by Torch.compile.</li>
</ul></li>
</ul>
</section>
</section>
<section id="future-directions-and-research-areas" class="level2">
<h2 class="anchored" data-anchor-id="future-directions-and-research-areas">Future Directions and Research Areas</h2>
<section id="combining-sparsity-patterns" class="level3">
<h3 class="anchored" data-anchor-id="combining-sparsity-patterns">Combining Sparsity Patterns</h3>
<ul>
<li><strong>Exploring combinations of different sparsity patterns</strong> (e.g., 2:4 sparsity within blocks) could lead to further performance improvements.</li>
<li><strong>Challenges:</strong> This requires developing efficient algorithms and kernels that can handle these more complex patterns.</li>
</ul>
</section>
<section id="flexible-sparsity-with-shuffling" class="level3">
<h3 class="anchored" data-anchor-id="flexible-sparsity-with-shuffling">Flexible Sparsity with Shuffling</h3>
<ul>
<li><strong>Introducing shuffles into blockwise sparsity</strong> can increase flexibility while maintaining performance benefits.</li>
<li><strong>Shuffle Overhead:</strong> The shuffle operation itself can introduce overhead.</li>
<li><strong>Torch.compile Mitigation:</strong> Torch.compile can be used to fuse the shuffle with other operations, minimizing its impact.</li>
</ul>
</section>
<section id="sparsity-for-dropout" class="level3">
<h3 class="anchored" data-anchor-id="sparsity-for-dropout">Sparsity for Dropout</h3>
<ul>
<li><strong>2:4 sparsity could potentially be used to implement dropout</strong> due to its inherent randomness and 50% sparsity level.</li>
<li><strong>Benefits:</strong> Achieving dropout-like regularization with the performance advantages of 2:4 sparsity.</li>
</ul>
</section>
<section id="cuda-specific-considerations" class="level3">
<h3 class="anchored" data-anchor-id="cuda-specific-considerations">CUDA-Specific Considerations</h3>
<ul>
<li><strong>Bridging the CUTLASS and cuSPARSELt Gap:</strong> Developing CUTLASS kernels with comparable functionality and performance to cuSPARSELt would offer greater flexibility and control over fusion and kernel optimization.</li>
<li><strong>Larger Fused Kernels:</strong> Exploring larger fused kernels that incorporate more operations (e.g., quantization, dequantization, transpose) within the sparse matrix multiplication can further enhance performance.</li>
<li><strong>Flexible Sparsity Patterns in CUTLASS:</strong> Implementing efficient shuffles or other techniques to enable more flexible sparsity patterns within CUTLASS kernels.</li>
<li><strong>Load as Sparse Kernels:</strong> For memory-bound workloads (e.g., LLMs), loading data in a sparse format and expanding to dense within the GPU could offer speedups by reducing memory transfer time.</li>
</ul>
</section>
<section id="hardware-support-for-sparsity" class="level3">
<h3 class="anchored" data-anchor-id="hardware-support-for-sparsity">Hardware Support for Sparsity</h3>
<ul>
<li><strong>Specialized hardware architectures</strong> could be designed to directly support sparse representations and operations, potentially leading to significant performance improvements.</li>
<li><strong>NVIDIA’s Tensor Cores:</strong> Semi-structured sparsity support in Tensor Cores suggests that hardware vendors are exploring such directions.</li>
</ul>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li><strong>Sparsity and pruning are promising techniques</strong> for improving the efficiency of large neural networks, especially in the context of LLMs and Gen AI.</li>
<li><strong>Accuracy remains a key challenge:</strong> Finding effective ways to recover accuracy after pruning is crucial for wider adoption.</li>
<li><strong>Performance gains are demonstrable:</strong> Especially with semi-structured and block sparsity on GPUs, significant speedups can be achieved.</li>
<li><strong>Ongoing research and development:</strong> The field is actively evolving, with new sparsity patterns, algorithms, and hardware support being explored.</li>
<li><strong>Potential for breakthroughs:</strong> As the research progresses and new tools become available, sparsity is likely to play an increasingly important role in making large models more practical and accessible.</li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-011/</guid>
  <pubDate>Sun, 15 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 10: Build a Prod Ready CUDA library</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-010/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction<br>
</li>
<li>Relevant CUDA Concepts</li>
<li>The CUDA Ninja’s Motivation: Why Create Libraries?</li>
<li>Automatic TV: Understanding the Application and its Challenges</li>
<li>Library Challenges: Abstraction vs.&nbsp;Performance</li>
<li>Use Case 1: GPU Communication Manager<br>
</li>
<li>Use Case 2: CUDA Layers for Image Preprocessing</li>
<li>Conclusion and Future Directions</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=FHsEW0HpuoU">Lecture 10: Build a Prod Ready CUDA library</a></li>
<li><strong>Slides:</strong> <a href="https://drive.google.com/drive/folders/158V8BzGj-IkdXXDAdHPNwUzDLNmr971_">Lecture 10: Building production ready CUDA libraries</a></li>
</ul>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<section id="speaker-introduction" class="level3">
<h3 class="anchored" data-anchor-id="speaker-introduction">Speaker Introduction</h3>
<ul>
<li><strong>Oscar Amoros Huguet</strong>: Professional CUDA developer and active community member.</li>
<li><strong>Background</strong>:
<ul>
<li>Started with OpenCL for processing 3D volumes (wave propagation simulation and medical imaging).</li>
<li>Worked with Barcelona Supercomputing Center on <a href="https://pm.bsc.es/ompss">OmpSs</a> (cluster programming abstraction).</li>
<li>Taught OpenSphere Encoder and computer science topics at the University of Barcelona.</li>
<li>Co-authored papers on OpenCL and related topics.</li>
<li>Created “Simple OpenCL” library (linked by Khronos Group).</li>
<li>Ported <a href="https://github.com/boostorg/compute">Boost Compute</a>’s OpenCL code to HSAIL (GPU assembly).</li>
<li>Currently works at Mediapro on <a href="https://automatic.tv/">Automatic TV</a>, a soft real-time C++ and CUDA-based application.</li>
</ul></li>
</ul>
</section>
<section id="lecture-structure" class="level3">
<h3 class="anchored" data-anchor-id="lecture-structure">Lecture Structure</h3>
<ul>
<li><strong>Review of Relevant CUDA Concepts</strong>: GPU communication, streams, latency hiding, kernel fusion.</li>
<li><strong>The CUDA Ninja’s Motivation for Library Creation</strong>: Addressing practical challenges in a production environment.</li>
<li><strong>Use Cases</strong>:
<ul>
<li><strong>GPU Communication Manager</strong>: Optimizing data transfer between different memory spaces.</li>
<li><strong>CUDA Layers for Image Preprocessing</strong>: Accelerating common image processing operations for tasks like neural network inference.</li>
</ul></li>
<li><strong>Open Source Project</strong>: Discussion of an open-source CUDA library project.</li>
</ul>
</section>
</section>
<section id="relevant-cuda-concepts" class="level2">
<h2 class="anchored" data-anchor-id="relevant-cuda-concepts">Relevant CUDA Concepts</h2>
<ul>
<li><strong>Focus</strong>: Host-side optimization for real-world applications.</li>
<li><strong>Tools</strong>: <strong>NVIDIA Nsight Systems</strong> for profiling and identifying bottlenecks.</li>
<li><strong>Key Concepts</strong>:
<ul>
<li><strong>GPU Memory Copies (<code>cudaMemcpyAsync</code>)</strong>: Data transfer between CPU and GPU or between GPUs.</li>
<li><strong>CUDA Streams</strong>: Enabling asynchronous execution of kernels and memory copies.</li>
<li><strong>Latencies and Latency Hiding</strong>: Overlapping computation and data transfer to minimize idle time.</li>
<li><strong>Kernel Fusion (Vertical and Horizontal)</strong>: Combining multiple kernels to reduce overhead.</li>
<li><strong>Memory-Bound Kernels</strong>: Performance limited by memory bandwidth.</li>
<li><strong>Compute-Bound Kernels</strong>: Performance limited by computational capacity.</li>
</ul></li>
</ul>
</section>
<section id="the-cuda-ninjas-motivation-why-create-libraries" class="level2">
<h2 class="anchored" data-anchor-id="the-cuda-ninjas-motivation-why-create-libraries">The CUDA Ninja’s Motivation: Why Create Libraries?</h2>
<ul>
<li><strong>Initial Expectations (Ideal Scenario)</strong>:
<ul>
<li>Bug-free, well-tested CPU code.</li>
<li>Unit tests for performance benchmarking and validation.</li>
</ul></li>
<li><strong>Reality in a Startup Environment</strong>:
<ul>
<li><strong>Collaboration with Non-CUDA Experts</strong>: Computer vision specialists, C++ application developers, etc.</li>
<li><strong>Need for Real-Time Prototyping</strong>: Enabling quick iteration and testing of computer vision algorithms.</li>
<li><strong>Performance Bottlenecks in Production</strong>: Handling larger datasets and multiple cameras demanded further optimization beyond initial prototypes.</li>
<li><strong>QA and Performance Measurement</strong>: Establishing performance benchmarks and cost goals.</li>
</ul></li>
<li><strong>The Need for Automation</strong>: Repetitive optimization tasks and the desire to empower non-CUDA programmers led to the idea of creating libraries and abstractions.</li>
</ul>
</section>
<section id="automatic-tv-understanding-the-application-and-its-challenges" class="level2">
<h2 class="anchored" data-anchor-id="automatic-tv-understanding-the-application-and-its-challenges">Automatic TV: Understanding the Application and its Challenges</h2>
<ul>
<li><strong>Automatic TV</strong>: A software for automated sports recording that tracks the game and provides dynamic camera views.</li>
<li><strong>Functionality</strong>:
<ul>
<li>Uses multiple fixed 4K cameras as input.</li>
<li>Stitches camera feeds to create a seamless panoramic view.</li>
<li>Employs AI (computer vision and neural networks) for player tracking, object detection, and camera switching.</li>
<li>Generates a Full HD output video with enhanced image quality and features (scoreboard overlays, etc.).</li>
</ul></li>
<li><strong>Performance Challenges</strong>:
<ul>
<li><strong>Real-time/Soft Real-time Processing</strong>: Maintaining a smooth output video with minimal delay.</li>
<li><strong>Multi-GPU Support</strong>: Distributing the processing workload across up to three GPUs for increased throughput.</li>
<li><strong>Efficient GPU Communication</strong>: Minimizing the overhead of data transfer between GPUs and the CPU.</li>
</ul></li>
</ul>
</section>
<section id="library-challenges-abstraction-vs.-performance" class="level2">
<h2 class="anchored" data-anchor-id="library-challenges-abstraction-vs.-performance">Library Challenges: Abstraction vs.&nbsp;Performance</h2>
<ul>
<li><strong>Key Challenges</strong>:
<ul>
<li><strong>Performance</strong>: Achieving optimal performance comparable to hand-tuned CUDA code.</li>
<li><strong>Abstraction</strong>: Hiding CUDA complexities and providing an easy-to-use interface for non-CUDA programmers.</li>
<li><strong>Balancing Abstraction and Performance</strong>: Finding the right level of abstraction that simplifies usage without significantly sacrificing performance.</li>
<li><strong>User Requirements</strong>: Understanding the target users’ needs and preferences (level of CUDA knowledge, performance expectations, etc.).</li>
<li><strong>API Design</strong>: Creating an intuitive and familiar API that integrates seamlessly with existing workflows.</li>
</ul></li>
</ul>
</section>
<section id="use-case-1-gpu-communication-manager" class="level2">
<h2 class="anchored" data-anchor-id="use-case-1-gpu-communication-manager">Use Case 1: GPU Communication Manager</h2>
<section id="problem-definition-efficient-data-transfer" class="level3">
<h3 class="anchored" data-anchor-id="problem-definition-efficient-data-transfer">Problem Definition: Efficient Data Transfer</h3>
<ul>
<li><strong>Goal</strong>: Create a system for efficient data transfer (e.g., images) between different memory spaces (CPU, GPU, CPU pinned memory).</li>
<li><strong>Memory Spaces</strong>:
<ul>
<li><strong>CPU Memory</strong>: Standard system RAM.</li>
<li><strong>GPU Memory</strong>: Dedicated memory on the graphics card.</li>
<li><strong>CPU Pinned Memory</strong>: A special type of CPU memory that can be directly accessed by the GPU, eliminating the need for an intermediate copy.</li>
</ul></li>
<li><strong>CUDA memcpy</strong>: The standard CUDA function for transferring data between memory spaces.</li>
</ul>
</section>
<section id="requirements-and-considerations" class="level3">
<h3 class="anchored" data-anchor-id="requirements-and-considerations">Requirements and Considerations</h3>
<ul>
<li><strong>Zero Allocation During Runtime</strong>: Allocate all necessary memory upfront to avoid blocking CPU threads during real-time processing.</li>
<li><strong>Handling Same Memory Space Transfers</strong>: Optimize for cases where the source and destination memory spaces are the same, avoiding unnecessary copies.</li>
<li><strong>Minimizing CPU Thread Blocking</strong>: Ensure the CPU thread responsible for scheduling CUDA work remains responsive and is not blocked by memory operations.</li>
</ul>
</section>
<section id="memory-space-combinations-and-copy-strategies" class="level3">
<h3 class="anchored" data-anchor-id="memory-space-combinations-and-copy-strategies">Memory Space Combinations and Copy Strategies</h3>
<table class="caption-top table">
<colgroup>
<col style="width: 14%">
<col style="width: 30%">
<col style="width: 10%">
<col style="width: 45%">
</colgroup>
<thead>
<tr class="header">
<th>Source Memory Space</th>
<th>Destination Memory Space</th>
<th>Desired Copies</th>
<th>CUDA memcpy Strategy</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>CPU</td>
<td>CPU</td>
<td>0</td>
<td>No copy</td>
</tr>
<tr class="even">
<td>CPU Pinned</td>
<td>CPU Pinned</td>
<td>0</td>
<td>No copy</td>
</tr>
<tr class="odd">
<td>GPU</td>
<td>GPU</td>
<td>0</td>
<td>No copy</td>
</tr>
<tr class="even">
<td>CPU</td>
<td>CPU Pinned</td>
<td>1</td>
<td><code>cudaMemcpyHostToHost</code></td>
</tr>
<tr class="odd">
<td>CPU Pinned</td>
<td>CPU</td>
<td>1</td>
<td><code>cudaMemcpyHostToHost</code></td>
</tr>
<tr class="even">
<td>CPU</td>
<td>GPU</td>
<td>2</td>
<td><code>cudaMemcpyHostToHost</code> (CPU to CPU Pinned) followed by <code>cudaMemcpyHostToDevice</code></td>
</tr>
<tr class="odd">
<td>GPU</td>
<td>CPU</td>
<td>2</td>
<td><code>cudaMemcpyDeviceToHost</code> followed by <code>cudaMemcpyHostToHost</code> (CPU Pinned to CPU)</td>
</tr>
<tr class="even">
<td>CPU Pinned</td>
<td>GPU</td>
<td>1</td>
<td><code>cudaMemcpyHostToDevice</code></td>
</tr>
<tr class="odd">
<td>GPU</td>
<td>CPU Pinned</td>
<td>1</td>
<td><code>cudaMemcpyDeviceToHost</code></td>
</tr>
<tr class="even">
<td>GPU</td>
<td>GPU (Same Device)</td>
<td>0</td>
<td>No copy</td>
</tr>
<tr class="odd">
<td>GPU</td>
<td>GPU (Different Devices, Peer-to-Peer)</td>
<td>1</td>
<td><code>cudaMemcpyPeerAsync</code> (if supported)</td>
</tr>
<tr class="even">
<td>GPU</td>
<td>GPU (Different Devices, No Peer-to-Peer)</td>
<td>2</td>
<td><code>cudaMemcpyDeviceToHost</code> followed by <code>cudaMemcpyHostToDevice</code></td>
</tr>
</tbody>
</table>
<ul>
<li><strong>Peer-to-Peer Communication</strong>: Direct data transfer between GPU memories without involving the CPU, achievable through NVLink or PCI Express (if supported by the hardware and drivers).</li>
<li><strong>Manual Pinned Memory Allocation</strong>: Bypassing CUDA runtime’s automatic pinned memory allocation to prevent CPU thread blocking.</li>
</ul>
</section>
<section id="overcoming-sequential-data-transfer-bottlenecks" class="level3">
<h3 class="anchored" data-anchor-id="overcoming-sequential-data-transfer-bottlenecks">Overcoming Sequential Data Transfer Bottlenecks</h3>
<ul>
<li><strong>Problem</strong>: Sequential memory copies and kernel launches introduce significant delays in a multi-GPU pipeline.</li>
<li><strong>Solution</strong>: Introduce <strong>delays (buffers)</strong> and utilize <strong>CUDA streams</strong> to enable <strong>parallel execution</strong> of kernels and memory transfers.</li>
</ul>
</section>
<section id="producer-consumer-model" class="level3">
<h3 class="anchored" data-anchor-id="producer-consumer-model">Producer-Consumer Model</h3>
<ul>
<li><strong>Traditional CPU-Based Model</strong>:
<ul>
<li><strong>Producer</strong>: A thread that generates data and writes it to a shared buffer.</li>
<li><strong>Consumer</strong>: A thread that reads and processes data from the shared buffer.</li>
<li><strong>Buffer</strong>: Manages access to the shared data, ensuring thread safety.</li>
</ul></li>
<li><strong>Key Features</strong>:
<ul>
<li><strong>Task Parallelism</strong>: Producer and consumer can operate concurrently.</li>
<li><strong>Variable Buffer Size</strong>: Adjusts to fluctuations in producer and consumer execution times.</li>
</ul></li>
</ul>
</section>
<section id="adapting-producer-consumer-for-gpu-communication" class="level3">
<h3 class="anchored" data-anchor-id="adapting-producer-consumer-for-gpu-communication">Adapting Producer-Consumer for GPU Communication</h3>
<ul>
<li><p><strong>Iterative Memory Manager</strong>: A specialized buffer designed for GPU communication in iterative applications.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-010/images/producer-consumer-gpu-diagram.png" class="img-fluid figure-img"></p>
<figcaption>Slide 24</figcaption>
</figure>
</div></li>
<li><p><strong>Key Features</strong>:</p>
<ul>
<li><strong>Iteration-Based Synchronization</strong>: All asynchronous operations (kernels and copies) are synchronized at the end of each iteration.</li>
<li><strong>Ping-Pong Buffers</strong>: Utilizes at least two pointers (memory regions) to enable concurrent reading and writing.</li>
</ul></li>
<li><p><strong>Example</strong>:</p>
<ul>
<li>A kernel writes its output to a pointer in the manager.</li>
<li>A copy operation transfers data from that pointer to another pointer in a different memory space.</li>
<li>Another kernel reads from the second pointer.</li>
<li>Pointers are swapped at the end of each iteration to ensure continuous data flow.</li>
</ul></li>
</ul>
</section>
<section id="delay-buffers-and-optimizing-memory-manager" class="level3">
<h3 class="anchored" data-anchor-id="delay-buffers-and-optimizing-memory-manager">Delay Buffers and Optimizing Memory Manager</h3>
<ul>
<li><strong>Delay Buffer</strong>: A buffer that introduces a fixed delay in the data flow.</li>
<li><strong>Optimization</strong>: When a delay buffer is used, the memory manager can directly access data from the delay buffer’s pointer, eliminating the need for an extra copy.</li>
<li><strong>Example</strong>:
<ul>
<li>A kernel writes to a delay buffer.</li>
<li>Instead of copying from the kernel’s output to the memory manager, the manager directly reads from the delay buffer after the specified delay.</li>
</ul></li>
</ul>
</section>
<section id="provider-taker-model-an-abstraction-for-memory-management" class="level3">
<h3 class="anchored" data-anchor-id="provider-taker-model-an-abstraction-for-memory-management">Provider-Taker Model: An Abstraction for Memory Management</h3>
<ul>
<li><strong>Motivation</strong>: Introduce a new abstraction to simplify the interaction with the memory manager.</li>
<li><strong>Key Concepts</strong>:
<ul>
<li><strong>Taking</strong>: Requesting a pointer from the memory manager (the manager allocates and owns the pointer).</li>
<li><strong>Providing</strong>: Supplying a pointer to the memory manager (the caller allocates and owns the pointer).</li>
</ul></li>
<li><strong>Ownership</strong>:
<ul>
<li>Taking: The memory manager owns the pointer.</li>
<li>Providing: The caller owns the pointer.</li>
</ul></li>
<li><strong>Difference from Producer-Consumer</strong>:
<ul>
<li>Producer-Consumer focuses on data movement.</li>
<li>Provider-Taker focuses on pointer ownership and allocation responsibility.</li>
</ul></li>
</ul>
</section>
<section id="iterative-memory-manager-interface" class="level3">
<h3 class="anchored" data-anchor-id="iterative-memory-manager-interface">Iterative Memory Manager Interface</h3>
<ul>
<li><p><strong>Data Structure</strong>: Define a class representing the data to be transferred.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">struct</span> DataInfo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-2">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numElements<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-3">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> elemSizeInBytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4">  MemorySpace memSpace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<ul>
<li>Includes information like width, height, and memory space.</li>
</ul></li>
<li><p><strong>Producer/Consumer Roles</strong>: Define an enum to specify whether the producer and consumer will take or provide pointers:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">enum</span> Actions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> ProducerProvides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ProducerTakes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ConsumerProvides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ConsumerTakes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div></li>
<li><p><strong>Memory Manager Initialization</strong>:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1">DataInfo producerDataInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> HostPageable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb3-2">DataInfo consumerDataInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Device_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">Data ptrToProduce<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>producerDataInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-5">Data ptrToConsume<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>consumerDataInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//Initialization</span></span>
<span id="cb3-8">MemoryManager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ProducerProvides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ConsumerProvides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> manager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>producerDataInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> consumerDataInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span></code></pre></div></li>
<li><p><strong>Managing Data Transfer</strong>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> delay <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> manager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>getTotalDelay<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Query delay generated by the manager</span></span>
<span id="cb4-2"></span>
<span id="cb4-3">manager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>manage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ptrToProduce<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ptrToConsume<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Usage</span></span></code></pre></div></li>
<li><p><strong>Understanding Provide and Take</strong>:</p>
<ul>
<li><strong>Provide</strong>: Pass data structures as arguments to <code>manage()</code>. The caller is responsible for allocating these data structures.</li>
<li><strong>Take</strong>: The <code>manage()</code> function returns pointers to data structures allocated by the manager.</li>
</ul></li>
</ul>
</section>
<section id="memory-manager-configurations" class="level3">
<h3 class="anchored" data-anchor-id="memory-manager-configurations">Memory Manager Configurations</h3>
<ul>
<li><strong>Four Possible Configurations</strong>:
<ul>
<li><strong>Take-Take</strong>: Producer and consumer both take pointers from the manager.</li>
<li><strong>Provide-Provide</strong>: Producer and consumer both provide pointers to the manager.</li>
<li><strong>Take-Provide</strong>: Producer takes a pointer, consumer provides a pointer.</li>
<li><strong>Provide-Take</strong>: Producer provides a pointer, consumer takes a pointer.</li>
</ul></li>
<li><strong>Memory Space Awareness</strong>: The memory manager automatically handles copies based on the specified memory spaces of the producer and consumer data.</li>
<li><strong>Zero-Copy Optimization</strong>: If the source and destination memory spaces are the same, the manager performs no copy and simply forwards the pointer.</li>
</ul>
</section>
<section id="example-memory-manager-with-a-delay-buffer" class="level3">
<h3 class="anchored" data-anchor-id="example-memory-manager-with-a-delay-buffer">Example: Memory Manager with a Delay Buffer</h3>
<ul>
<li><strong>Scenario</strong>:
<ul>
<li>A kernel writes to a buffer.</li>
<li>A delay buffer stores the kernel’s output.</li>
<li>Another kernel reads from the delay buffer after a fixed delay.</li>
</ul></li>
<li><strong>Memory Manager Configuration</strong>: Take-Provide (producer takes, consumer provides).</li>
<li><strong>Zero-Copy Optimization</strong>: If the delay buffer and the consumer kernel are in the same memory space, no copy is performed.</li>
</ul>
</section>
<section id="timeline-analysis-achieving-parallelism" class="level3">
<h3 class="anchored" data-anchor-id="timeline-analysis-achieving-parallelism">Timeline Analysis: Achieving Parallelism</h3>
<ul>
<li><strong>Multi-GPU Pipeline with Delay Buffers</strong>:
<ul>
<li>Kernels on different GPUs execute in parallel.</li>
<li>Memory transfers are overlapped with computation using CUDA streams.</li>
</ul></li>
<li><strong>Benefits</strong>:
<ul>
<li>Maximizes GPU utilization.</li>
<li>Reduces overall processing time.</li>
</ul></li>
</ul>
</section>
<section id="real-world-application-automatic-tvs-gpu-pipeline" class="level3">
<h3 class="anchored" data-anchor-id="real-world-application-automatic-tvs-gpu-pipeline">Real-World Application: Automatic TV’s GPU Pipeline</h3>
<ul>
<li><p><strong>Automatic TV’s Implementation</strong>:</p>
<ul>
<li><strong>GPU 0</strong>: Camera input processing, data transfer to CPU.</li>
<li><strong>GPU 1</strong>: AI processing (computer vision, neural networks).</li>
<li><strong>GPU 2</strong>: Output processing, data transfer to CPU for encoding.</li>
</ul></li>
<li><p><strong>NVIDIA Nsight Systems Analysis</strong>: Demonstrates efficient parallelism between compute and data transfer operations.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-010/images/nsight-system-analysis.png" class="img-fluid figure-img"></p>
<figcaption>Slide 45</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-010/images/gpu-usage-diagram.png" class="img-fluid figure-img"></p>
<figcaption>Slide 45</figcaption>
</figure>
</div></li>
</ul>
</section>
<section id="potential-application-multi-gpu-neural-network-training" class="level3">
<h3 class="anchored" data-anchor-id="potential-application-multi-gpu-neural-network-training">Potential Application: Multi-GPU Neural Network Training</h3>
<ul>
<li><strong>Proposed Idea</strong>: Apply the Iterative Memory Manager concept to multi-GPU neural network training.</li>
<li><strong>Potential Benefits</strong>:
<ul>
<li>Parallelize forward and backward passes across multiple GPUs.</li>
<li>Overlap computation with data transfer of intermediate results.</li>
</ul></li>
<li><strong>Challenges</strong>:
<ul>
<li>Requires sufficient GPU memory to store multiple copies of intermediate data.</li>
<li>Complexity of integrating with existing training frameworks.</li>
</ul></li>
</ul>
</section>
</section>
<section id="use-case-2-cuda-layers-for-image-preprocessing" class="level2">
<h2 class="anchored" data-anchor-id="use-case-2-cuda-layers-for-image-preprocessing">Use Case 2: CUDA Layers for Image Preprocessing</h2>
<ul>
<li><p><strong>Problem</strong>: Accelerate common image preprocessing operations for tasks like neural network inference.</p></li>
<li><p><strong>GitHub Project:</strong> <a href="https://github.com/morousg/cvGPUSpeedup">cvGPUSpeedup</a></p></li>
<li><p><strong>OpenCV CUDA vs.&nbsp;Custom CUDA Layer</strong>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// OpenCV version</span></span>
<span id="cb5-2">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cuda<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>crop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> d_up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetRes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>INTER_LINEAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv_stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-3">d_up<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>convertTo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> CV_32FC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv_stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-4"></span>
<span id="cb5-5">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cuda<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>subtract<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> val_sub<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_temp2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>noArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv_stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-6">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cuda<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>divide<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_temp2<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> val_div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv_stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-7"></span>
<span id="cb5-8">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cuda<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_temp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv_stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-9"></span>
<span id="cb5-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// cvGPUSpeedup version</span></span>
<span id="cb5-11">cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Scalar val_alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-12">cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>executeOperations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cv_stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb5-13">    cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CV_8UC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>INTER_LINEAR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>crop<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> targetRes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb5-14">    cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>convertTo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CV_8UC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> CV_32FC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(),</span></span>
<span id="cb5-15">    cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>multiply<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CV_32FC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>val_alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb5-16">    cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>subtract<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CV_32FC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>val_sub<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb5-17">    cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>divide<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CV_32FC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>val_div<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb5-18">    cvGS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>split<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>CV_32FC3<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span></code></pre></div>
<ul>
<li>OpenCV CUDA provides individual functions for operations like cropping, resizing, and color conversion.</li>
<li>The custom CUDA layer fuses these operations into a single kernel, reducing overhead and improving performance.</li>
</ul></li>
<li><p><strong>Performance Gains</strong>: Significant speedups (e.g., 167x) achieved by fusing operations and optimizing memory access.</p></li>
<li><p><strong>Section cut short due to time constraints for the live-stream.</strong></p></li>
</ul>
</section>
<section id="conclusion-and-future-directions" class="level2">
<h2 class="anchored" data-anchor-id="conclusion-and-future-directions">Conclusion and Future Directions</h2>
<ul>
<li><strong>Key Takeaways</strong>:
<ul>
<li>Libraries can significantly improve CUDA development by optimizing performance and providing abstractions for non-CUDA programmers.</li>
<li>The Iterative Memory Manager is a powerful tool for managing data transfer in multi-GPU pipelines.</li>
<li>CUDA layers can accelerate common image processing tasks, particularly beneficial for neural network inference.</li>
</ul></li>
<li><strong>Future Work</strong>:
<ul>
<li>Explore the application of the Iterative Memory Manager to multi-GPU neural network training.</li>
<li>Further develop and refine the open-source CUDA layer library for image preprocessing.</li>
<li>Improve the abstraction and usability of the libraries to make them more accessible to a wider audience.</li>
</ul></li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-010/</guid>
  <pubDate>Sun, 15 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>GPU MODE Lecture 9: Reductions</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/lecture-009/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Introduction</li>
<li>Examples of Reductions</li>
<li>Reductions in Machine Learning</li>
<li>Implementing Reductions in PyTorch</li>
<li>Serial Reduction</li>
<li>Parallel Reduction Algorithm</li>
<li>Non-Determinism in Floating-Point Reductions</li>
<li>Implementing Parallel Reduction in CUDA<br>
</li>
<li>Reductions in Machine Learning Frameworks<br>
</li>
<li>Conclusion</li>
<li>Call to Action</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Resource Links:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Resource Links:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube Recording:</strong> <a href="https://www.youtube.com/watch?v=09wntC6BT5o">Lecture 9: Reductions</a></li>
<li><strong>Slides:</strong> <a href="https://docs.google.com/presentation/d/1s8lRU8xuDn-R05p1aSP6P7T5kk9VYnDOCyN5bWKeg3U/edit#slide=id.p">Lecture 9: Reductions</a></li>
<li><strong>Code:</strong> <a href="https://github.com/cuda-mode/lectures/tree/main/lecture_009">lecture_009</a></li>
<li><strong>Lightning AI Studio:</strong> <a href="https://lightning.ai/msaroufim/studios/cuda-mode-lectures?section=featured&amp;query=cuda+mode">CUDA Mode Lectures</a></li>
</ul>
</div>
</div>
<div class="callout callout-style-default callout-warning callout-titled" title="[Local NCU Permissions](https://developer.nvidia.com/nvidia-development-tools-solutions-err_nvgpuctrperm-permission-issue-performance-counters)">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
<a href="https://developer.nvidia.com/nvidia-development-tools-solutions-err_nvgpuctrperm-permission-issue-performance-counters">Local NCU Permissions</a>
</div>
</div>
<div class="callout-body-container callout-body">
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Allow access for any user (restart required)</span></span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'options nvidia NVreg_RestrictProfilingToAdminUsers=0'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> tee /etc/modprobe.d/ncu-permissions.conf</span></code></pre></div>
</div>
</div>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<ul>
<li><p>This lecture covers <strong>reductions</strong>, a core concept in GPU programming and machine learning.</p></li>
<li><p>Previous lectures (1-8) provided the foundational knowledge to author, integrate, profile, and ship CUDA/Triton kernels in PyTorch.</p></li>
<li><p>This lecture aligns with Chapter 10 of the PMPP book and includes example kernels available on GitHub.</p></li>
<li><p><strong>Reductions</strong> are mathematical operations that reduce the size of input data, often producing a scalar from a vector in machine learning.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-009/images/basic-reduction-graphviz.png" class="img-fluid figure-img"></p>
<figcaption>Sum Reduction</figcaption>
</figure>
</div></li>
</ul>
</section>
<section id="examples-of-reductions" class="level2">
<h2 class="anchored" data-anchor-id="examples-of-reductions">Examples of Reductions</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span>(data, identity, op):</span>
<span id="cb2-2">    result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> identity</span>
<span id="cb2-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> element <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> data:</span>
<span id="cb2-4">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> op(result, element)</span>
<span id="cb2-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> result</span>
<span id="cb2-6"></span>
<span id="cb2-7">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
<ul>
<li><strong>Sum:</strong>
<ul>
<li><p>Iteratively adds elements of a list.</p></li>
<li><p>Identity element: 0 (for an empty list).</p></li>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Summation</span></span>
<span id="cb3-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span>(data, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> a, b: a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: 15</span></span></code></pre></div></li>
</ul></li>
<li><strong>Product:</strong>
<ul>
<li><p>Iteratively multiplies elements of a list.</p></li>
<li><p>Identity element: 1 (for an empty list).</p></li>
<li><p><strong>Example:</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Product</span></span>
<span id="cb4-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span>(data, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> a, b: a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> b))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: 120</span></span></code></pre></div></li>
</ul></li>
<li><strong>Min/Max:</strong>
<ul>
<li><p>Finds the minimum/maximum element in a list.</p></li>
<li><p>Identity element: <code>float('-inf')</code>/<code>float('inf')</code> (for an empty list).</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximum</span></span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span>(data, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-inf'</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: 5</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Minimum</span></span>
<span id="cb5-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reduce</span>(data, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inf'</span>), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output: 1</span></span></code></pre></div></li>
</ul></li>
<li>Other common reductions: argmax, argmin, norm, mean, number of unique elements.</li>
</ul>
</section>
<section id="reductions-in-machine-learning" class="level2">
<h2 class="anchored" data-anchor-id="reductions-in-machine-learning">Reductions in Machine Learning</h2>
<ul>
<li><strong>Ubiquitous</strong> in machine learning code:
<ul>
<li>Convolutional Neural Networks (CNNs): Mean/max pooling.</li>
<li>Classification: Argmax over probabilities.</li>
<li>Loss calculations: Scalar loss computed from target and prediction.</li>
<li>Softmax normalization: Summation of exponentiated elements.</li>
</ul></li>
</ul>
</section>
<section id="implementing-reductions-in-pytorch" class="level2">
<h2 class="anchored" data-anchor-id="implementing-reductions-in-pytorch">Implementing Reductions in PyTorch</h2>
<ul>
<li><strong>Reduction Implementations:</strong> <a href="https://github.com/pytorch/pytorch/blob/main/aten/src/ATen/native/cuda/ReduceOps.cpp">aten/src/ATen/native/cuda/ReduceOps.cpp</a></li>
<li>PyTorch provides built-in functions for common reductions (e.g., <code>torch.max</code>, <code>torch.min</code>, <code>torch.mean</code>).</li>
<li>These functions call optimized CUDA kernels when tensors are on a CUDA device.</li>
</ul>
</section>
<section id="serial-reduction" class="level2">
<h2 class="anchored" data-anchor-id="serial-reduction">Serial Reduction</h2>
<ul>
<li><p><strong>Serial reduction</strong> is a basic approach where a single thread iterates through the input data and updates the result sequentially.</p></li>
<li><p><strong>Example:</strong> Finding the maximum element in a list by iterating and comparing each element to the current maximum.</p>
<pre class="text"><code>+----------------------+
|    Initial Vector    |
+----------------------+
|  5  |  2  |  8  |  1 |
+----------------------+
           |
           v
+----------------------+
|     Iteration 1      |
+----------------------+
|  5  |     |     |    |
+----------------------+
           |
           v
+----------------------+
|     Iteration 2      |
+----------------------+
|  5  |  5  |     |    |
+----------------------+
           |
           v
+----------------------+
|     Iteration 3      |
+----------------------+
|  5  |  5  |  8  |    |
+----------------------+
           |
           v
+----------------------+
|     Iteration 4      |
+----------------------+
|  5  |  5  |  8  |  8 |
+----------------------+</code></pre></li>
<li><p><strong>Inefficient</strong> for parallel architectures like GPUs.</p></li>
</ul>
</section>
<section id="parallel-reduction-algorithm" class="level2">
<h2 class="anchored" data-anchor-id="parallel-reduction-algorithm">Parallel Reduction Algorithm</h2>
<ul>
<li><p><strong>Linked Video:</strong> <a href="https://www.youtube.com/watch?v=D4l1YMsGNlU&amp;t=1763s">05 Atomics Reductions Warp Shuffle</a></p></li>
<li><p><strong>Foundation</strong> for efficient GPU reduction implementations.</p></li>
<li><p><strong>Key Idea:</strong> Divide the input data into pairs, assign a thread to each pair, and have each thread perform the reduction operation on its pair.</p></li>
<li><p><strong>Iterative Process:</strong> Repeat the process on the reduced results until a single result remains.</p></li>
<li><p><strong>Max Reduction Visualization:</strong></p>
<pre class="text"><code>+-----------------------------------------------------------------------+
|                             Initial Vector                            |
+-----------------------------------------------------------------------+
|  5  |  2  |  8  |  1  |  1  |  9  |  3  |  7  |  7  |  4  |  6  |  0  |
+-----------------------------------------------------------------------+
                                    |
                                    v
+-----------------------------------------------------------------------+
|                            Reduction Step 1                           |
+-----------------------------------------------------------------------+
|  5  |  8  |  9  |  7  |  6                                            |
+-----------------------------------------------------------------------+
                                    |
                                    v
+-----------------------------------------------------------------------+
|                            Reduction Step 2                           |
+-----------------------------------------------------------------------+
|  8  |  9  |  7                                                        |
+-----------------------------------------------------------------------+
                                    |
                                    v
+-----------------------------------------------------------------------+
|                            Reduction Step 3                           |
+-----------------------------------------------------------------------+
|  9  |  9                                                              |
+-----------------------------------------------------------------------+
                                    |
                                    v
+-----------------------------------------------------------------------+
|                          Final Reduction Step                         |
+-----------------------------------------------------------------------+
|  9                                                                    |
+-----------------------------------------------------------------------+</code></pre></li>
<li><p><strong>Sum Reduction Tree:</strong> Visualizes the parallel reduction process as a tree, where each level represents a reduction step.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-009/images/parallel-sum-reduction-tree-graphviz.png" class="img-fluid figure-img"></p>
<figcaption>Parallel Sum Reduction Tree</figcaption>
</figure>
</div></li>
<li><p><strong>Logarithmic Complexity:</strong> Requires <code>log n</code> steps for an input of size <code>n</code>.</p></li>
</ul>
</section>
<section id="non-determinism-in-floating-point-reductions" class="level2">
<h2 class="anchored" data-anchor-id="non-determinism-in-floating-point-reductions">Non-Determinism in Floating-Point Reductions</h2>
<ul>
<li><p><strong>Floating-point operations are non-commutative</strong>, meaning <code>a + b</code> may not equal <code>b + a</code>.</p></li>
<li><p><strong>Parallel reductions can introduce non-determinism</strong> due to:</p>
<ul>
<li><strong>Weak memory consistency</strong> on GPUs: Different threads may execute operations in unpredictable order.</li>
<li><strong>Order of operations within threads:</strong> The order in which a thread performs operations can affect the result.</li>
</ul></li>
<li><p><strong>Deterministic algorithms</strong> can be enforced in PyTorch using <code>torch.use_deterministic_algorithms(True)</code>, but this can impact performance.</p></li>
<li><p><strong>Example:</strong> Summing a list with many small numbers and a few large numbers can produce different results depending on the order of operations.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We'll use several small numbers that, when added together first, could show a difference</span></span>
<span id="cb8-2">numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-20</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e20</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e20</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10 small numbers followed by a large positive and negative number</span></span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum the list from left to right</span></span>
<span id="cb8-5">sum_left_to_right_adjusted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(numbers)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sum the list from right to left</span></span>
<span id="cb8-8">sum_right_to_left_adjusted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">reversed</span>(numbers))</span>
<span id="cb8-9"></span>
<span id="cb8-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 0.0 9.999999999999997e-20</span></span>
<span id="cb8-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"sum_left_to_right_adjusted: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sum_left_to_right_adjusted<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"sum_right_to_left_adjusted: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sum_right_to_left_adjusted<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre class="text"><code>sum_left_to_right_adjusted: 0.0
sum_right_to_left_adjusted: 9.999999999999997e-20</code></pre></li>
<li><p><strong>Accuracy Implications:</strong> Accumulating many small values in low-precision floating-point formats (e.g., float16) can lead to loss of precision.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb10-2">large_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000.0</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Using float32 for initial value</span></span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a smaller value that is significant for float32 but not for float16</span></span>
<span id="cb10-5">small_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.tensor([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span>], dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Small value in float32</span></span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add small value to large value in float32</span></span>
<span id="cb10-8">result_float32 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> large_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> small_value</span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert large value to float16 and add the small value (also converted to float16)</span></span>
<span id="cb10-11">result_float16 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> large_value.to(torch.float16) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> small_value.to(torch.float16)</span>
<span id="cb10-12"></span>
<span id="cb10-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert results back to float32 for accurate comparison</span></span>
<span id="cb10-14">result_float32 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result_float32.item()</span>
<span id="cb10-15">result_float16_converted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result_float16.to(torch.float32).item()</span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print results</span></span>
<span id="cb10-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1000.0009765625 1000.0</span></span>
<span id="cb10-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"result_float32: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result_float32<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"result_float16_converted: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>result_float16_converted<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre class="text"><code>result_float32: 1000.0009765625
result_float16_converted: 1000.0</code></pre></li>
<li><p><strong>Solutions:</strong></p>
<ul>
<li>Use higher-precision formats (e.g., bfloat16) for accumulation.</li>
<li>Upcast the accumulator to a higher precision (e.g., float32) during the reduction.</li>
</ul></li>
</ul>
</section>
<section id="implementing-parallel-reduction-in-cuda" class="level2">
<h2 class="anchored" data-anchor-id="implementing-parallel-reduction-in-cuda">Implementing Parallel Reduction in CUDA</h2>
<section id="naive-approach-simple-reduce" class="level3">
<h3 class="anchored" data-anchor-id="naive-approach-simple-reduce">Naive Approach: Simple Reduce</h3>
<ul>
<li><p><strong>Thread Strategy:</strong> One thread per pair of elements.</p></li>
<li><p><strong>Implementation:</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include necessary header files</span></span>
<span id="cb12-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">  </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For standard input/output functions</span></span>
<span id="cb12-3"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;cuda.h&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For CUDA functions and data types</span></span>
<span id="cb12-4"></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb12-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * CUDA kernel function to perform sum reduction on an array of floats.</span></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> *</span></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * The kernel reduces the input array 'input' to a single sum and stores the result in 'output'.</span></span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * The reduction is performed in parallel using a binary tree reduction pattern.</span></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> *</span></span>
<span id="cb12-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * Key concepts:</span></span>
<span id="cb12-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - Each thread in a block processes elements of the array.</span></span>
<span id="cb12-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - The number of active threads decreases by half in each iteration.</span></span>
<span id="cb12-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - Synchronization is required between iterations to ensure correct results.</span></span>
<span id="cb12-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> *</span></span>
<span id="cb12-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * CUDA-specific keywords:</span></span>
<span id="cb12-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - __global__: Indicates a function that runs on the device (GPU) and is called from the host (CPU).</span></span>
<span id="cb12-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - threadIdx.x: The thread's index within its block in the x-dimension.</span></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - blockDim.x: The number of threads in a block in the x-dimension.</span></span>
<span id="cb12-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * - __syncthreads(): A barrier synchronization function that waits until all threads in the block reach this point.</span></span>
<span id="cb12-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> */</span></span>
<span id="cb12-22">__global__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> SimpleSumReductionKernel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the index for each thread.</span></span>
<span id="cb12-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread handles two elements starting at index 'i'.</span></span>
<span id="cb12-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-26"></span>
<span id="cb12-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start the reduction loop.</span></span>
<span id="cb12-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 'stride' controls the distance between elements to be added.</span></span>
<span id="cb12-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only threads where threadIdx.x is a multiple of 'stride' participate.</span></span>
<span id="cb12-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the element at 'i + stride' to the element at 'i'.</span></span>
<span id="cb12-33">            input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb12-34">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize threads to ensure all additions are completed before the next iteration.</span></span>
<span id="cb12-36">        __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb12-37">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-38"></span>
<span id="cb12-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// After the reduction, the total sum is stored in input[0].</span></span>
<span id="cb12-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Thread 0 writes the result to the output variable.</span></span>
<span id="cb12-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-42">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb12-43">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-44"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-45"></span>
<span id="cb12-46"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the size of the input array.</span></span>
<span id="cb12-48">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-49"></span>
<span id="cb12-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the total bytes needed for the input array.</span></span>
<span id="cb12-51">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-52"></span>
<span id="cb12-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory on the host (CPU) for input array and output variable.</span></span>
<span id="cb12-54">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host input array</span></span>
<span id="cb12-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host output variable</span></span>
<span id="cb12-56"></span>
<span id="cb12-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input array on the host.</span></span>
<span id="cb12-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For simplicity, set all elements to 1.0f.</span></span>
<span id="cb12-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-60">        h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize each element to 1</span></span>
<span id="cb12-61">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-62"></span>
<span id="cb12-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Declare pointers for device (GPU) memory.</span></span>
<span id="cb12-64">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device input array</span></span>
<span id="cb12-65">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device output variable</span></span>
<span id="cb12-66"></span>
<span id="cb12-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory on the device for input array and output variable.</span></span>
<span id="cb12-68">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for input array</span></span>
<span id="cb12-69">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for output variable</span></span>
<span id="cb12-70"></span>
<span id="cb12-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the input data from host memory to device memory.</span></span>
<span id="cb12-72">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cudaMemcpyHostToDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-73"></span>
<span id="cb12-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Determine the number of threads per block.</span></span>
<span id="cb12-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Since each thread handles two elements, we use half the size of the input array.</span></span>
<span id="cb12-76">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> threadsPerBlock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-77"></span>
<span id="cb12-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Launch the reduction kernel on the device.</span></span>
<span id="cb12-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The kernel configuration &lt;&lt;&lt;1, threadsPerBlock&gt;&gt;&gt; means:</span></span>
<span id="cb12-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// - 1 block</span></span>
<span id="cb12-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// - 'threadsPerBlock' threads per block</span></span>
<span id="cb12-82">    SimpleSumReductionKernel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> threadsPerBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-83"></span>
<span id="cb12-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result from device memory back to host memory.</span></span>
<span id="cb12-85">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> cudaMemcpyDeviceToHost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-86"></span>
<span id="cb12-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result to the console.</span></span>
<span id="cb12-88">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum is "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-89"></span>
<span id="cb12-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free the allocated memory on the host.</span></span>
<span id="cb12-91">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host input array</span></span>
<span id="cb12-92">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span> h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host output variable</span></span>
<span id="cb12-93"></span>
<span id="cb12-94">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free the allocated memory on the device.</span></span>
<span id="cb12-95">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free device input array</span></span>
<span id="cb12-96">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free device output variable</span></span>
<span id="cb12-97"></span>
<span id="cb12-98">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return success</span></span>
<span id="cb12-99"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li>Threads with even indices are active.</li>
<li>Stride starts at 1 and doubles at each iteration.</li>
<li>Each thread adds its current element and the element at <code>stride</code> distance.</li>
</ul></li>
<li><p><strong>Issues:</strong></p>
<ul>
<li><strong>High thread divergence:</strong> Many threads become inactive as the reduction progresses.</li>
<li><strong>Poor memory access patterns:</strong> Threads access data with increasing strides, leading to poor cache utilization.</li>
</ul></li>
<li><p><strong>Benchmark:</strong></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a binary called sum</span></span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> sum simple_reduce.cu</span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the binary</span></span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ncu</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> full sum</span></code></pre></div></li>
<li><p><strong>Results (RTX 4090):</strong></p>
<pre class="text"><code>Sum is 2048</code></pre>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Metric Name</th>
<th>Metric Unit</th>
<th>Metric Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Branch Instructions Ratio</td>
<td>%</td>
<td>0.12</td>
</tr>
<tr class="even">
<td>Branch Instructions</td>
<td>inst</td>
<td>1,312</td>
</tr>
<tr class="odd">
<td><strong>Branch Efficiency</strong></td>
<td>%</td>
<td><strong>74.05</strong></td>
</tr>
<tr class="even">
<td>Avg. Divergent Branches</td>
<td></td>
<td>0.37</td>
</tr>
</tbody>
</table></li>
</ul>
</section>
<section id="minimizing-control-divergence-control-divergence-reduction" class="level3">
<h3 class="anchored" data-anchor-id="minimizing-control-divergence-control-divergence-reduction">Minimizing Control Divergence: Control Divergence Reduction</h3>
<ul>
<li><p><strong>Thread Strategy:</strong> Threads are co-located, with stride starting at block dimension and halving at each iteration.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-009/images/control-divergence-reduce.png" class="img-fluid figure-img"></p>
<figcaption>Figure 10.8</figcaption>
</figure>
</div></li>
<li><p><strong>Implementation:</strong></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb15-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;"> </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include input/output stream library</span></span>
<span id="cb15-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;cuda.h&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">   </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include CUDA runtime API</span></span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// CUDA kernel function to perform parallel reduction (sum of array elements)</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This kernel adds elements in the input array in parallel to compute the total sum.</span></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// It uses a tree-based reduction pattern to sum the elements efficiently.</span></span>
<span id="cb15-7">__global__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> FixDivergenceKernel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread handles one element of the input array.</span></span>
<span id="cb15-9"></span>
<span id="cb15-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iteratively reduce the array elements.</span></span>
<span id="cb15-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At each step, 'stride' determines the distance between elements to be added.</span></span>
<span id="cb15-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ensure that threads with index less than 'stride' perform the computation.</span></span>
<span id="cb15-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the element from the distant index (i + stride) to the current index (i).</span></span>
<span id="cb15-16">            input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb15-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize threads to ensure all additions are completed before the next iteration.</span></span>
<span id="cb15-19">        __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb15-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-21"></span>
<span id="cb15-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// After the reduction, the first thread (threadIdx.x == 0) has the total sum in input[0].</span></span>
<span id="cb15-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Write the result to the output variable.</span></span>
<span id="cb15-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-27"></span>
<span id="cb15-28"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Size of the input data (number of elements in the array).</span></span>
<span id="cb15-30">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total size in bytes of the input data.</span></span>
<span id="cb15-32">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-33"></span>
<span id="cb15-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for input and output on the host (CPU).</span></span>
<span id="cb15-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host input array.</span></span>
<span id="cb15-36">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host output variable to store the result.</span></span>
<span id="cb15-37"></span>
<span id="cb15-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize input data on the host.</span></span>
<span id="cb15-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-40">        h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example initialization: set all elements to 1.</span></span>
<span id="cb15-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-42"></span>
<span id="cb15-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for input and output on the device (GPU).</span></span>
<span id="cb15-44">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device input array.</span></span>
<span id="cb15-45">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device output variable.</span></span>
<span id="cb15-46">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for input array on device.</span></span>
<span id="cb15-47">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for output variable on device.</span></span>
<span id="cb15-48"></span>
<span id="cb15-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy input data from host to device.</span></span>
<span id="cb15-50">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cudaMemcpyHostToDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-51"></span>
<span id="cb15-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Determine the number of threads per block.</span></span>
<span id="cb15-53">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> threadsPerBlock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Launch half as many threads as the input size.</span></span>
<span id="cb15-54"></span>
<span id="cb15-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Launch the kernel function on the GPU.</span></span>
<span id="cb15-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The syntax is &lt;&lt;&lt;number of blocks, threads per block&gt;&gt;&gt;</span></span>
<span id="cb15-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// We use 1 block and 'threadsPerBlock' threads.</span></span>
<span id="cb15-58">    FixDivergenceKernel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> threadsPerBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-59"></span>
<span id="cb15-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result back from device to host.</span></span>
<span id="cb15-61">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> cudaMemcpyDeviceToHost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-62"></span>
<span id="cb15-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result.</span></span>
<span id="cb15-64">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum is "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Expected output: Sum is 2048</span></span>
<span id="cb15-65"></span>
<span id="cb15-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clean up and free allocated memory.</span></span>
<span id="cb15-67">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host input array.</span></span>
<span id="cb15-68">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span> h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host output variable.</span></span>
<span id="cb15-69">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free device input array.</span></span>
<span id="cb15-70">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free device output variable.</span></span>
<span id="cb15-71"></span>
<span id="cb15-72">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-73"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li>All threads are initially active.</li>
<li>Stride starts at block dimension and is halved at each iteration.</li>
<li>Each thread adds its current element and the element at <code>stride</code> distance.</li>
</ul></li>
<li><p><strong>Benefits:</strong></p>
<ul>
<li><strong>Reduced thread divergence:</strong> Threads remain active for longer.</li>
<li><strong>Improved memory access patterns:</strong> Threads access contiguous chunks of memory, improving cache utilization.</li>
</ul></li>
<li><p><strong>Benchmark:</strong></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a binary called sum</span></span>
<span id="cb16-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> sum control_divergence_reduce.cu</span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the binary</span></span>
<span id="cb16-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ncu</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> full sum</span></code></pre></div></li>
<li><p><strong>Results (RTX 4090):</strong></p>
<pre class="text"><code>Sum is 2048</code></pre>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Metric Name</th>
<th>Metric Unit</th>
<th>Metric Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>DRAM Frequency</td>
<td>Ghz</td>
<td>10.28</td>
</tr>
<tr class="even">
<td>SM Frequency</td>
<td>Ghz</td>
<td>2.19</td>
</tr>
<tr class="odd">
<td>Elapsed Cycles</td>
<td>cycle</td>
<td>6,299</td>
</tr>
<tr class="even">
<td>Memory Throughput</td>
<td>%</td>
<td>0.68</td>
</tr>
<tr class="odd">
<td>DRAM Throughput</td>
<td>%</td>
<td>0.39</td>
</tr>
<tr class="even">
<td><strong>Duration</strong></td>
<td>us</td>
<td><strong>2.88</strong></td>
</tr>
<tr class="odd">
<td><strong>L1/TEX Cache Throughput</strong></td>
<td>%</td>
<td><strong>30.49</strong></td>
</tr>
<tr class="even">
<td>L2 Cache Throughput</td>
<td>%</td>
<td>0.68</td>
</tr>
<tr class="odd">
<td>SM Active Cycles</td>
<td>cycle</td>
<td>29.80</td>
</tr>
<tr class="even">
<td>Compute (SM) Throughput</td>
<td>%</td>
<td><strong>0.12</strong></td>
</tr>
</tbody>
</table>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Metric Name</th>
<th>Metric Unit</th>
<th>Metric Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Branch Instructions Ratio</td>
<td>%</td>
<td>0.31</td>
</tr>
<tr class="even">
<td>Branch Instructions</td>
<td>inst</td>
<td>1,126</td>
</tr>
<tr class="odd">
<td><strong>Branch Efficiency</strong></td>
<td>%</td>
<td><strong>99.32</strong></td>
</tr>
<tr class="even">
<td>Avg. Divergent Branches</td>
<td></td>
<td>0.01</td>
</tr>
</tbody>
</table></li>
</ul>
</section>
<section id="utilizing-shared-memory-shared-reduce" class="level3">
<h3 class="anchored" data-anchor-id="utilizing-shared-memory-shared-reduce">Utilizing Shared Memory: Shared Reduce</h3>
<ul>
<li><p><strong>Thread Strategy:</strong> Similar to control divergence reduction, but the first reduction step is performed in shared memory.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-009/images/shared-reduce.png" class="img-fluid figure-img"></p>
<figcaption>Figure 10.10</figcaption>
</figure>
</div></li>
<li><p><strong>Implementation:</strong></p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb18-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span></span>
<span id="cb18-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;cuda.h&gt;</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * This program demonstrates how to perform parallel reduction using CUDA.</span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * It computes the sum of an array of floating-point numbers.</span></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * The reduction is performed within a single block using shared memory for optimization.</span></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> */</span></span>
<span id="cb18-9"></span>
<span id="cb18-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the number of threads per block (must be a power of 2 for reduction)</span></span>
<span id="cb18-11"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define BLOCK_DIM </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb18-12"></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// CUDA kernel function to perform parallel reduction using shared memory</span></span>
<span id="cb18-14">__global__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> SharedMemoryReduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Declare shared memory array to hold partial sums</span></span>
<span id="cb18-16">    __shared__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-17"></span>
<span id="cb18-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the thread's index within the block</span></span>
<span id="cb18-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-20"></span>
<span id="cb18-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread processes two elements from the input array</span></span>
<span id="cb18-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute the global indices of the elements to be processed</span></span>
<span id="cb18-23">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> start_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> end_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-25"></span>
<span id="cb18-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load elements from global memory, add them, and store the result in shared memory</span></span>
<span id="cb18-27">    input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>end_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-28"></span>
<span id="cb18-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize threads to ensure all partial sums are loaded into shared memory</span></span>
<span id="cb18-30">    __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-31"></span>
<span id="cb18-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform the reduction in shared memory</span></span>
<span id="cb18-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At each step, the stride is halved and threads with indices less than the stride</span></span>
<span id="cb18-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// add their corresponding element with the element stride positions ahead</span></span>
<span id="cb18-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This effectively sums pairs of elements, then pairs of pairs, and so on</span></span>
<span id="cb18-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize threads before each reduction step to ensure all additions are complete</span></span>
<span id="cb18-38">        __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-39"></span>
<span id="cb18-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only threads with indices less than stride participate in this step</span></span>
<span id="cb18-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-42">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread adds its element with the element stride positions ahead</span></span>
<span id="cb18-43">            input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-44">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-45">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-46"></span>
<span id="cb18-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// After the reduction, the first element of shared memory contains the total sum</span></span>
<span id="cb18-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Thread 0 writes the result from shared memory to the output variable in global memory</span></span>
<span id="cb18-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-50">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb18-51">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-53"></span>
<span id="cb18-54"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total number of input elements (must be a multiple of 2 * BLOCK_DIM)</span></span>
<span id="cb18-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2048</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Note: This implementation assumes size is exactly 2 * BLOCK_DIM</span></span>
<span id="cb18-57"></span>
<span id="cb18-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total size in bytes of the input array</span></span>
<span id="cb18-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-60"></span>
<span id="cb18-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate host memory for input and output</span></span>
<span id="cb18-62">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host input array</span></span>
<span id="cb18-63">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>         <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host output value</span></span>
<span id="cb18-64"></span>
<span id="cb18-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize input data on the host</span></span>
<span id="cb18-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// For simplicity, we initialize all elements to 1.0f</span></span>
<span id="cb18-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The expected sum is size * 1.0f = 2048.0f</span></span>
<span id="cb18-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-69">        h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-70">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-71"></span>
<span id="cb18-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate device memory for input and output</span></span>
<span id="cb18-73">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-74">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-75">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>             <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device input array</span></span>
<span id="cb18-76">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device output value</span></span>
<span id="cb18-77"></span>
<span id="cb18-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy input data from host to device</span></span>
<span id="cb18-79">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cudaMemcpyHostToDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-80"></span>
<span id="cb18-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Launch the kernel with one block and size / 2 threads</span></span>
<span id="cb18-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread processes two elements</span></span>
<span id="cb18-83">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> threadsPerBlock <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// 2048 / 2 = 1024 threads</span></span>
<span id="cb18-84">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> blocksPerGrid <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-85">    SharedMemoryReduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span>blocksPerGrid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> threadsPerBlock<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-86"></span>
<span id="cb18-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result from device to host</span></span>
<span id="cb18-88">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> cudaMemcpyDeviceToHost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-89"></span>
<span id="cb18-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the final result</span></span>
<span id="cb18-91">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum is "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-92"></span>
<span id="cb18-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host and device memory</span></span>
<span id="cb18-94">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-95">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span> h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-96">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-97">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-98"></span>
<span id="cb18-99">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-100"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li>Input data is copied to shared memory in a block-wise manner.</li>
<li>Reduction is performed entirely in shared memory.</li>
<li>Final result is written to global memory using atomic operations.</li>
</ul></li>
<li><p><strong>Benefits:</strong></p>
<ul>
<li><strong>Reduced global memory accesses:</strong> Data is read from global memory only once.</li>
<li><strong>Improved memory access patterns:</strong> Shared memory access is faster and more predictable than global memory access.</li>
</ul></li>
<li><p><strong>Limitation:</strong> Assumes the entire input can fit into shared memory.</p></li>
<li><p><strong>Benchmark:</strong></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a binary called sum</span></span>
<span id="cb19-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> sum shared_reduce.cu</span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the binary</span></span>
<span id="cb19-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ncu</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> full sum</span></code></pre></div></li>
<li><p><strong>Results (RTX 4090):</strong></p>
<pre class="text"><code>Sum is 2048</code></pre>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Metric Name</th>
<th>Metric Unit</th>
<th>Metric Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>DRAM Frequency</td>
<td>Ghz</td>
<td>10.32</td>
</tr>
<tr class="even">
<td>SM Frequency</td>
<td>Ghz</td>
<td>2.19</td>
</tr>
<tr class="odd">
<td>Elapsed Cycles</td>
<td>cycle</td>
<td>7,006</td>
</tr>
<tr class="even">
<td>Memory Throughput</td>
<td>%</td>
<td>0.44</td>
</tr>
<tr class="odd">
<td>DRAM Throughput</td>
<td>%</td>
<td>0.44</td>
</tr>
<tr class="even">
<td><strong>Duration</strong></td>
<td>us</td>
<td><strong>3.20</strong></td>
</tr>
<tr class="odd">
<td><strong>L1/TEX Cache Throughput</strong></td>
<td>%</td>
<td><strong>48.27</strong></td>
</tr>
<tr class="even">
<td>L2 Cache Throughput</td>
<td>%</td>
<td>0.36</td>
</tr>
<tr class="odd">
<td>SM Active Cycles</td>
<td>cycle</td>
<td>35.28</td>
</tr>
<tr class="even">
<td>Compute (SM) Throughput</td>
<td>%</td>
<td>0.24</td>
</tr>
</tbody>
</table>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Metric Name</th>
<th>Metric Unit</th>
<th>Metric Value</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Branch Instructions Ratio</td>
<td>%</td>
<td>0.10</td>
</tr>
<tr class="even">
<td>Branch Instructions</td>
<td>inst</td>
<td>385</td>
</tr>
<tr class="odd">
<td><strong>Branch Efficiency</strong></td>
<td>%</td>
<td><strong>100</strong></td>
</tr>
<tr class="even">
<td>Avg. Divergent Branches</td>
<td></td>
<td>0</td>
</tr>
</tbody>
</table></li>
</ul>
</section>
<section id="segmented-multi-block-reduction-segmented-reduce" class="level3">
<h3 class="anchored" data-anchor-id="segmented-multi-block-reduction-segmented-reduce">Segmented Multi-Block Reduction: Segmented Reduce</h3>
<ul>
<li><p><strong>Thread Strategy:</strong> Uses multiple blocks to handle larger inputs. Each block performs a reduction on a segment of the input</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-009/images/segmented-multiblock.png" class="img-fluid figure-img"></p>
<figcaption>Figure 10.12</figcaption>
</figure>
</div></li>
<li><p><strong>Implementation:</strong></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/*</span></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * This program demonstrates how to perform a parallel reduction (sum) of an array using CUDA.</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * It sums up all elements of an input array using multiple threads and blocks on the GPU.</span></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * Each block computes a partial sum using shared memory and then adds it to a global output variable.</span></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> */</span></span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">  </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include standard input/output stream library</span></span>
<span id="cb21-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;cuda.h&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">    </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include CUDA library for GPU programming</span></span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define BLOCK_DIM </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">  </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the number of threads per block</span></span>
<span id="cb21-11"></span>
<span id="cb21-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/**</span></span>
<span id="cb21-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * CUDA kernel function to perform parallel reduction (sum) of an input array.</span></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * Each block reduces its portion of the array using shared memory, and the result is accumulated</span></span>
<span id="cb21-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * into a single output variable using atomic addition.</span></span>
<span id="cb21-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span></span>
<span id="cb21-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@param</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span><span class="cv" style="color: #5E5E5E;
background-color: null;
font-style: italic;">input</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Pointer to input array in device memory</span></span>
<span id="cb21-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@param</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span><span class="cv" style="color: #5E5E5E;
background-color: null;
font-style: italic;">output</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Pointer to output variable in device memory (the result of reduction)</span></span>
<span id="cb21-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@param</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span><span class="cv" style="color: #5E5E5E;
background-color: null;
font-style: italic;">n</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      Size of the input array</span></span>
<span id="cb21-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> */</span></span>
<span id="cb21-21">__global__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> SharedMemoryReduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Declare shared memory array for this block</span></span>
<span id="cb21-23">    __shared__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb21-24"></span>
<span id="cb21-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute global index for this thread</span></span>
<span id="cb21-26">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Global index</span></span>
<span id="cb21-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Thread index within the block</span></span>
<span id="cb21-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-29"></span>
<span id="cb21-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread loads one element from global memory to shared memory</span></span>
<span id="cb21-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-32">        input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load element from global memory</span></span>
<span id="cb21-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-34">        input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If index exceeds array size, initialize to zero</span></span>
<span id="cb21-35">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-36">    __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ensure all threads have loaded their data</span></span>
<span id="cb21-37"></span>
<span id="cb21-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform tree-based reduction in shared memory</span></span>
<span id="cb21-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// At each step, the stride halves, combining pairs of elements</span></span>
<span id="cb21-41">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-42">            input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the element with its pair</span></span>
<span id="cb21-43">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-44">        __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize threads before next iteration</span></span>
<span id="cb21-45">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-46"></span>
<span id="cb21-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// After reduction, the first thread of each block contains the block's partial sum</span></span>
<span id="cb21-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Atomically add block's partial sum to global output variable</span></span>
<span id="cb21-50">        atomicAdd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb21-51">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-53"></span>
<span id="cb21-54"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the size of the input data</span></span>
<span id="cb21-56">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total number of elements in the array</span></span>
<span id="cb21-57">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total size in bytes of the array</span></span>
<span id="cb21-58"></span>
<span id="cb21-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory on host (CPU)</span></span>
<span id="cb21-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host input array</span></span>
<span id="cb21-61">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Host output variable</span></span>
<span id="cb21-62"></span>
<span id="cb21-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize input data on host</span></span>
<span id="cb21-64">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-65">        h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example: Initialize all elements to 1</span></span>
<span id="cb21-66">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Since we initialized all elements to 1.0f, the expected sum is equal to 'size'</span></span>
<span id="cb21-68"></span>
<span id="cb21-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory on device (GPU)</span></span>
<span id="cb21-70">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device input array</span></span>
<span id="cb21-71">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Device output variable</span></span>
<span id="cb21-72"></span>
<span id="cb21-73">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate device memory for input array</span></span>
<span id="cb21-74">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate device memory for output variable</span></span>
<span id="cb21-75"></span>
<span id="cb21-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize output variable on device to zero</span></span>
<span id="cb21-77">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> zero <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-78">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>zero<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> cudaMemcpyHostToDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-79"></span>
<span id="cb21-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy input data from host to device</span></span>
<span id="cb21-81">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cudaMemcpyHostToDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-82"></span>
<span id="cb21-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Determine the number of blocks needed</span></span>
<span id="cb21-84">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numBlocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> BLOCK_DIM <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate number of blocks</span></span>
<span id="cb21-85"></span>
<span id="cb21-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Launch the kernel on the device</span></span>
<span id="cb21-87">    SharedMemoryReduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span>numBlocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-88"></span>
<span id="cb21-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result from device back to host</span></span>
<span id="cb21-90">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> cudaMemcpyDeviceToHost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-91"></span>
<span id="cb21-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the result</span></span>
<span id="cb21-93">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum is "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-94"></span>
<span id="cb21-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host and device memory</span></span>
<span id="cb21-96">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host input array</span></span>
<span id="cb21-97">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span> h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free host output variable</span></span>
<span id="cb21-98">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free device input array</span></span>
<span id="cb21-99">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free device output variable</span></span>
<span id="cb21-100"></span>
<span id="cb21-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-102"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li>Each block copies its segment of the input to shared memory.</li>
<li>Reduction is performed in shared memory within each block.</li>
<li>Each block writes its partial result to global memory using atomic operations.</li>
<li>A final reduction is performed on the partial results in global memory.</li>
</ul></li>
<li><p><strong>Benefits:</strong></p>
<ul>
<li><strong>Handles larger inputs:</strong> Shared memory limitations are overcome by using multiple blocks.</li>
<li><strong>Improved parallelism:</strong> Multiple blocks can execute concurrently.</li>
</ul></li>
<li><p><strong>Benchmark:</strong></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a binary called sum</span></span>
<span id="cb22-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> sum segment_reduce.cu</span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the binary</span></span>
<span id="cb22-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ncu</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> full sum</span></code></pre></div></li>
<li><p><strong>Results (RTX 4090):</strong></p>
<pre class="text"><code>Sum is 100000</code></pre></li>
</ul>
</section>
<section id="thread-coarsening-reduced-coarsening" class="level3">
<h3 class="anchored" data-anchor-id="thread-coarsening-reduced-coarsening">Thread Coarsening: Reduced Coarsening</h3>
<ul>
<li><p><strong>Thread Strategy:</strong> Each thread reduces multiple elements before synchronizing with other threads.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://christianjmills.com/posts/cuda-mode-notes/lecture-009/images/thread-coarsening-reduction.png" class="img-fluid figure-img"></p>
<figcaption>Figure 10.14</figcaption>
</figure>
</div></li>
<li><p><strong>Implementation:</strong></p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb24-1"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;iostream&gt;</span></span>
<span id="cb24-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;cuda.h&gt;</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">  </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include CUDA header for CUDA runtime functions</span></span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the number of threads per block (maximum is 1024 for most GPUs)</span></span>
<span id="cb24-5"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define BLOCK_DIM </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span>
<span id="cb24-6"></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the coarsening factor (number of elements each thread will process)</span></span>
<span id="cb24-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define COARSE_FACTOR </span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/**</span></span>
<span id="cb24-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * CUDA kernel function that performs parallel reduction (summing up an array of floats)</span></span>
<span id="cb24-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * using thread coarsening to have each thread process multiple elements,</span></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * and using shared memory for efficient intra-block reduction.</span></span>
<span id="cb24-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> *</span></span>
<span id="cb24-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@param</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span><span class="cv" style="color: #5E5E5E;
background-color: null;
font-style: italic;">input</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Pointer to the input array in device memory</span></span>
<span id="cb24-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@param</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span><span class="cv" style="color: #5E5E5E;
background-color: null;
font-style: italic;">output</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> Pointer to the output value in device memory</span></span>
<span id="cb24-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> * </span><span class="an" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@param</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span><span class="cv" style="color: #5E5E5E;
background-color: null;
font-style: italic;">size</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">   The size of the input array</span></span>
<span id="cb24-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> */</span></span>
<span id="cb24-19">__global__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> CoarsenedReduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate shared memory for partial sums within a block</span></span>
<span id="cb24-21">    __shared__ <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb24-22"></span>
<span id="cb24-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute the global index for each thread, adjusted for coarsening</span></span>
<span id="cb24-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> COARSE_FACTOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-25"></span>
<span id="cb24-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Thread index within the block</span></span>
<span id="cb24-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> threadIdx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-28"></span>
<span id="cb24-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a local sum for this thread</span></span>
<span id="cb24-30">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-31"></span>
<span id="cb24-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each thread processes COARSE_FACTOR elements</span></span>
<span id="cb24-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> tile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> tile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> COARSE_FACTOR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++</span>tile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-34">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute the index for the current element</span></span>
<span id="cb24-35"></span>
<span id="cb24-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if index is within bounds</span></span>
<span id="cb24-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-38">            sum <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Accumulate the sum</span></span>
<span id="cb24-39">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-41"></span>
<span id="cb24-42">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the partial sum in shared memory</span></span>
<span id="cb24-43">    input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sum<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-44"></span>
<span id="cb24-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize threads within the block to ensure all partial sums are stored</span></span>
<span id="cb24-46">    __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-47"></span>
<span id="cb24-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform reduction within the block using shared memory</span></span>
<span id="cb24-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unsigned</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> blockDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-51">            input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Accumulate sums from higher threads</span></span>
<span id="cb24-52">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Synchronize after each reduction step</span></span>
<span id="cb24-54">        __syncthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-55">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-56"></span>
<span id="cb24-57">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Thread 0 in each block adds the block's result to the global output atomically</span></span>
<span id="cb24-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>t <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-59">        atomicAdd<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb24-60">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-61"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-62"></span>
<span id="cb24-63"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> main<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total number of elements to sum</span></span>
<span id="cb24-65">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10000</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Total size in bytes for the input array</span></span>
<span id="cb24-67">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> bytes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-68"></span>
<span id="cb24-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory on the host (CPU) for input data and output result</span></span>
<span id="cb24-70">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Input array</span></span>
<span id="cb24-71">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output value</span></span>
<span id="cb24-72"></span>
<span id="cb24-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize input data on the host (e.g., set all elements to 1.0f)</span></span>
<span id="cb24-74">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-75">        h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Example initialization</span></span>
<span id="cb24-76">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-77"></span>
<span id="cb24-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory on the device (GPU) for input data and output result</span></span>
<span id="cb24-79">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-80">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-81">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span>          <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate device memory for input</span></span>
<span id="cb24-82">    cudaMalloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate device memory for output</span></span>
<span id="cb24-83"></span>
<span id="cb24-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy input data from host to device</span></span>
<span id="cb24-85">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bytes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cudaMemcpyHostToDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-86"></span>
<span id="cb24-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize output on the device to 0</span></span>
<span id="cb24-88">    cudaMemset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb24-89"></span>
<span id="cb24-90">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the number of blocks needed, considering coarsening</span></span>
<span id="cb24-91">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numBlocks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> BLOCK_DIM <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> COARSE_FACTOR <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BLOCK_DIM <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> COARSE_FACTOR<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-92"></span>
<span id="cb24-93">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Launch the kernel with the calculated number of blocks and threads per block</span></span>
<span id="cb24-94">    CoarsenedReduction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;&lt;</span>numBlocks<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BLOCK_DIM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;&gt;(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-95"></span>
<span id="cb24-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result from device back to host</span></span>
<span id="cb24-97">    cudaMemcpy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> cudaMemcpyDeviceToHost<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-98"></span>
<span id="cb24-99">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the final result</span></span>
<span id="cb24-100">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>cout <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Sum is "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>h_output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;&lt;</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>endl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-101"></span>
<span id="cb24-102">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free allocated memory on the host</span></span>
<span id="cb24-103">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> h_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-104">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">delete</span> h_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-105"></span>
<span id="cb24-106">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free allocated memory on the device</span></span>
<span id="cb24-107">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-108">    cudaFree<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>d_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-109"></span>
<span id="cb24-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-111"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<ul>
<li>Threads reduce multiple elements within their assigned segment.</li>
<li>Reduction is then performed within blocks and finally across blocks, similar to the segmented reduction.</li>
</ul></li>
<li><p><strong>Benefits:</strong></p>
<ul>
<li><strong>Reduced synchronization overhead:</strong> Threads synchronize less frequently.</li>
<li><strong>Improved memory access patterns:</strong> Threads access contiguous chunks of memory during the initial reduction.</li>
</ul></li>
<li><p><strong>Benchmark:</strong></p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a binary called sum</span></span>
<span id="cb25-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">nvcc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> sum reduce_coarsening.cu</span>
<span id="cb25-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the binary</span></span>
<span id="cb25-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ncu</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--set</span> full sum</span></code></pre></div></li>
<li><p><strong>Results (RTX 4090):</strong></p>
<pre class="text"><code>Sum is 10000</code></pre></li>
</ul>
</section>
</section>
<section id="reductions-in-machine-learning-frameworks" class="level2">
<h2 class="anchored" data-anchor-id="reductions-in-machine-learning-frameworks">Reductions in Machine Learning Frameworks</h2>
<section id="pytorch" class="level3">
<h3 class="anchored" data-anchor-id="pytorch">PyTorch</h3>
<ul>
<li><strong>Generic Reduction Kernel:</strong> PyTorch uses a single <a href="https://github.com/pytorch/pytorch/blob/main/aten/src/ATen/native/cuda/Reduce.cuh"><code>Reduce.cuh</code></a> kernel for various reduction operations (e.g., min, max, sum).</li>
<li><strong>Code Generation:</strong> The kernel is specialized at runtime based on the desired reduction operation, data type, and input size.</li>
<li><strong>Heuristics:</strong> PyTorch uses heuristics to determine optimal kernel launch parameters (e.g., block size, grid size).</li>
<li><strong><a href="https://github.com/pytorch/pytorch/blob/c64ae601ba9eb3ad2cd3402a14f6ac83c0ab7eba/aten/src/ATen/native/cuda/Reduce.cuh#L1205">ReduceConfig</a>:</strong> Defines various heuristics and parameters for different reduction scenarios.</li>
<li><strong>Examples:</strong>
<ul>
<li><a href="https://github.com/pytorch/pytorch/blob/main/aten/src/ATen/native/cuda/Reduce.cuh"><code>Reduce.cuh</code></a> handles different data types and accumulation strategies.</li>
<li><a href="https://github.com/pytorch/pytorch/blob/c64ae601ba9eb3ad2cd3402a14f6ac83c0ab7eba/aten/src/ATen/native/cuda/Reduce.cuh#L1205"><code>ReduceConfig</code></a> sets heuristics for block size, thread coarsening, and accumulation data type.</li>
</ul></li>
</ul>
</section>
<section id="torch-compile-triton" class="level3">
<h3 class="anchored" data-anchor-id="torch-compile-triton">Torch Compile (Triton)</h3>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch </span>
<span id="cb27-2"></span>
<span id="cb27-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@torch.compile</span></span>
<span id="cb27-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> f(a):</span>
<span id="cb27-5">    c <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(a)</span>
<span id="cb27-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> c</span>
<span id="cb27-7"></span>
<span id="cb27-8">f(torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>).cuda())</span></code></pre></div>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb28-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">TORCH_LOGS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output_code"</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> reduce_compile.py</span></code></pre></div>
<ul>
<li><p><strong>Trident Kernels:</strong> Torch Compile generates Trident kernels for reductions.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># AOT ID: ['0_inference']</span></span>
<span id="cb29-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> ctypes <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> c_void_p, c_long</span>
<span id="cb29-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb29-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb29-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb29-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb29-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tempfile</span>
<span id="cb29-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> inf, nan</span>
<span id="cb29-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.hooks <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> run_intermediate_hooks</span>
<span id="cb29-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> maybe_profile</span>
<span id="cb29-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.codegen.memory_planning <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _align <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> align</span>
<span id="cb29-12"></span>
<span id="cb29-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> device, empty_strided</span>
<span id="cb29-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.async_compile <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AsyncCompile</span>
<span id="cb29-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.select_algorithm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> extern_kernels</span>
<span id="cb29-16"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.codegen.multi_kernel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MultiKernelCall</span>
<span id="cb29-17"></span>
<span id="cb29-18">aten <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ops.aten</span>
<span id="cb29-19">inductor_ops <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ops.inductor</span>
<span id="cb29-20">_quantized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ops._quantized</span>
<span id="cb29-21">assert_size_stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch._C._dynamo.guards.assert_size_stride</span>
<span id="cb29-22">empty_strided_cpu <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch._C._dynamo.guards._empty_strided_cpu</span>
<span id="cb29-23">empty_strided_cuda <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch._C._dynamo.guards._empty_strided_cuda</span>
<span id="cb29-24">reinterpret_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch._C._dynamo.guards._reinterpret_tensor</span>
<span id="cb29-25">alloc_from_pool <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.ops.inductor._alloc_from_pool</span>
<span id="cb29-26">async_compile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AsyncCompile()</span>
<span id="cb29-27"></span>
<span id="cb29-28"></span>
<span id="cb29-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># kernel path: /tmp/torchinductor_innom-dt/xc/cxcl4refhjzcdxt6unhmqpirfzuwlll35zqbrgprj6lcwak26bfa.py</span></span>
<span id="cb29-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Source Nodes: [c], Original ATen: [aten.sum]</span></span>
<span id="cb29-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># c =&gt; sum_1</span></span>
<span id="cb29-32">triton_per_fused_sum_0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> async_compile.triton(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'triton_'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'''</span></span>
<span id="cb29-33"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">import triton</span></span>
<span id="cb29-34"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">import triton.language as tl</span></span>
<span id="cb29-35"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">from triton.compiler.compiler import AttrsDescriptor</span></span>
<span id="cb29-36"></span>
<span id="cb29-37"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">from torch._inductor.runtime import triton_helpers, triton_heuristics</span></span>
<span id="cb29-38"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math</span></span>
<span id="cb29-39"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties</span></span>
<span id="cb29-40"></span>
<span id="cb29-41"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">@triton_heuristics.persistent_reduction(</span></span>
<span id="cb29-42"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    size_hints=[1, 16],</span></span>
<span id="cb29-43"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    reduction_hint=ReductionHint.INNER,</span></span>
<span id="cb29-44"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    filename=__file__,</span></span>
<span id="cb29-45"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    triton_meta={'signature': {0: '*fp32', 1: '*fp32', 2: 'i32', 3: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=89, major=8, regs_per_multiprocessor=65536, max_threads_per_multi_processor=1536, multi_processor_count=128), 'constants': </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{2: 1}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1), equal_to_1=(2,))]},</span></span>
<span id="cb29-46"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_sum_0', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 1, 'backend_hash': '2A9CF09493B10CFF69FD04C0FEC21CD676E4FE3810C6D0938868EF378B24086E', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': False, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False}</span></span>
<span id="cb29-47"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-48"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb29-49"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">def triton_(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):</span></span>
<span id="cb29-50"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    xnumel = 1</span></span>
<span id="cb29-51"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    rnumel = 10</span></span>
<span id="cb29-52"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    RBLOCK: tl.constexpr = 16</span></span>
<span id="cb29-53"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    xoffset = tl.program_id(0) * XBLOCK</span></span>
<span id="cb29-54"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]</span></span>
<span id="cb29-55"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    xmask = xindex &lt; xnumel</span></span>
<span id="cb29-56"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    rindex = tl.arange(0, RBLOCK)[None, :]</span></span>
<span id="cb29-57"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    roffset = 0</span></span>
<span id="cb29-58"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    rmask = rindex &lt; rnumel</span></span>
<span id="cb29-59"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    r0 = rindex</span></span>
<span id="cb29-60"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    tmp0 = tl.load(in_ptr0 + (r0), rmask, other=0.0)</span></span>
<span id="cb29-61"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    tmp1 = tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])</span></span>
<span id="cb29-62"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    tmp3 = tl.where(rmask, tmp1, 0)</span></span>
<span id="cb29-63"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    tmp4 = tl.sum(tmp3, 1)[:, None]</span></span>
<span id="cb29-64"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">    tl.store(out_ptr0 + (tl.full([XBLOCK, 1], 0, tl.int32)), tmp4, None)</span></span>
<span id="cb29-65"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'''</span>, device_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>)</span>
<span id="cb29-66"></span>
<span id="cb29-67"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton</span>
<span id="cb29-68"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton.language <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl</span>
<span id="cb29-69"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.runtime.triton_heuristics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> grid, split_scan_grid, start_graph, end_graph</span>
<span id="cb29-70"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._C <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> _cuda_getCurrentRawStream <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> get_raw_stream</span>
<span id="cb29-71"></span>
<span id="cb29-72"></span>
<span id="cb29-73">async_compile.wait(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>())</span>
<span id="cb29-74"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> async_compile</span>
<span id="cb29-75"></span>
<span id="cb29-76"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> call(args):</span>
<span id="cb29-77">    arg0_1, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> args</span>
<span id="cb29-78">    args.clear()</span>
<span id="cb29-79">    assert_size_stride(arg0_1, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, ), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, ))</span>
<span id="cb29-80">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> torch.cuda._DeviceGuard(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>):</span>
<span id="cb29-81">        torch.cuda.set_device(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb29-82">        buf0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> empty_strided_cuda((), (), torch.float32)</span>
<span id="cb29-83">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Source Nodes: [c], Original ATen: [aten.sum]</span></span>
<span id="cb29-84">        stream0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_raw_stream(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb29-85">        triton_per_fused_sum_0.run(arg0_1, buf0, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>grid(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), stream<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stream0)</span>
<span id="cb29-86">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">del</span> arg0_1</span>
<span id="cb29-87">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> (buf0, )</span>
<span id="cb29-88"></span>
<span id="cb29-89"></span>
<span id="cb29-90"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> benchmark_compiled_module(times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, repeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>):</span>
<span id="cb29-91">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._dynamo.testing <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> rand_strided</span>
<span id="cb29-92">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.utils <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> print_performance</span>
<span id="cb29-93">    arg0_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rand_strided((<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, ), (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, ), device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda:0'</span>, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>torch.float32)</span>
<span id="cb29-94">    fn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span>: call([arg0_1])</span>
<span id="cb29-95">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> print_performance(fn, times<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>times, repeat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>repeat)</span>
<span id="cb29-96"></span>
<span id="cb29-97"></span>
<span id="cb29-98"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__main__"</span>:</span>
<span id="cb29-99">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.wrapper_benchmark <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> compiled_module_main</span>
<span id="cb29-100">    compiled_module_main(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'None'</span>, benchmark_compiled_module)</span></code></pre></div>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton</span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton.language <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl</span>
<span id="cb30-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> triton.compiler.compiler <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AttrsDescriptor</span>
<span id="cb30-4"></span>
<span id="cb30-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.runtime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> triton_helpers, triton_heuristics</span>
<span id="cb30-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.runtime.triton_helpers <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> libdevice, math <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> tl_math</span>
<span id="cb30-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch._inductor.runtime.hints <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties</span>
<span id="cb30-8"></span>
<span id="cb30-9"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton_heuristics.persistent_reduction</span>(</span>
<span id="cb30-10">    size_hints<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>],</span>
<span id="cb30-11">    reduction_hint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ReductionHint.INNER,</span>
<span id="cb30-12">    filename<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__file__</span>,</span>
<span id="cb30-13">    triton_meta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'signature'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*fp32'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*fp32'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i32'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'i32'</span>}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'device'</span>: DeviceProperties(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cuda'</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, cc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">89</span>, major<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, regs_per_multiprocessor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">65536</span>, max_threads_per_multi_processor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1536</span>, multi_processor_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">128</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'constants'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>}, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'configs'</span>: [AttrsDescriptor(divisible_by_16<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), equal_to_1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,))]},</span>
<span id="cb30-14">    inductor_meta<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'autotune_hints'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'kernel_name'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'triton_per_fused_sum_0'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mutated_arg_names'</span>: [], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'no_x_dim'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'num_load'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'num_reduction'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'backend_hash'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2A9CF09493B10CFF69FD04C0FEC21CD676E4FE3810C6D0938868EF378B24086E'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'are_deterministic_algorithms_enabled'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assert_indirect_indexing'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'autotune_local_cache'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'autotune_pointwise'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'autotune_remote_cache'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'force_disable_caches'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'dynamic_scale_rblock'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_autotune'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_autotune_pointwise'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'min_split_scan_rblock'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'spill_threshold'</span>: <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'store_cubin'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>}</span>
<span id="cb30-15">)</span>
<span id="cb30-16"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@triton.jit</span></span>
<span id="cb30-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> triton_(in_ptr0, out_ptr0, xnumel, rnumel, XBLOCK : tl.constexpr):</span>
<span id="cb30-18">    xnumel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb30-19">    rnumel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb30-20">    RBLOCK: tl.constexpr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span></span>
<span id="cb30-21">    xoffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.program_id(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> XBLOCK</span>
<span id="cb30-22">    xindex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xoffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, XBLOCK)[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb30-23">    xmask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xindex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> xnumel</span>
<span id="cb30-24">    rindex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.arange(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, RBLOCK)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, :]</span>
<span id="cb30-25">    roffset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb30-26">    rmask <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rindex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> rnumel</span>
<span id="cb30-27">    r0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rindex</span>
<span id="cb30-28">    tmp0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.load(in_ptr0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (r0), rmask, other<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>)</span>
<span id="cb30-29">    tmp1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.broadcast_to(tmp0, [XBLOCK, RBLOCK])</span>
<span id="cb30-30">    tmp3 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.where(rmask, tmp1, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb30-31">    tmp4 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tl.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(tmp3, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)[:, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb30-32">    tl.store(out_ptr0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (tl.full([XBLOCK, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, tl.int32)), tmp4, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span></code></pre></div></li>
<li><p><strong>Heuristics:</strong> Trident uses heuristics to determine optimal kernel launch parameters and optimizations.</p>
<ul>
<li><a href="https://github.com/pytorch/pytorch/blob/main/torch/_inductor/runtime/triton_heuristics.py">torch/_inductor/runtime/triton_heuristics.py</a></li>
</ul></li>
<li><p><strong>Examples:</strong></p>
<ul>
<li>Trident automatically detects reductions in PyTorch code.</li>
<li>Trident generates efficient kernels with appropriate block size and thread coarsening.</li>
<li>Trident provides hints for specific optimizations (e.g., reduction type, dimensions).</li>
</ul></li>
</ul>
</section>
<section id="triton" class="level3">
<h3 class="anchored" data-anchor-id="triton">Triton</h3>
<ul>
<li><strong>Hierarchical Reduction:</strong> Triton implements reductions using a hierarchical approach, similar to the CUDA implementations discussed.
<ul>
<li><a href="https://github.com/triton-lang/triton/blob/c99c2148f363e4806e02300d302ae0b52bb19388/lib/Conversion/TritonGPUToLLVM/ReduceOpToLLVM.cpp#L39">lib/Conversion/TritonGPUToLLVM/ReduceOpToLLVM.cpp</a></li>
</ul></li>
<li><strong>Examples:</strong>
<ul>
<li>Triton performs reduction within threads, within warps, within blocks, and finally across blocks.</li>
</ul></li>
<li><strong>Flexibility:</strong> Triton provides primitives for building custom reduction kernels with fine-grained control over the reduction process.</li>
</ul>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li><strong>Reductions are essential operations in GPU programming and machine learning.</strong></li>
<li><strong>Parallel reduction algorithms</strong> enable efficient implementation of reductions on GPUs.</li>
<li><strong>Thread strategies play a crucial role in optimizing parallel reductions.</strong></li>
<li><strong>Machine learning frameworks</strong> like PyTorch and Triton employ sophisticated techniques to generate optimized reduction kernels.</li>
<li><strong>Understanding reduction algorithms and implementation strategies is crucial for developing high-performance GPU code.</strong></li>
</ul>
</section>
<section id="call-to-action" class="level2">
<h2 class="anchored" data-anchor-id="call-to-action">Call to Action</h2>
<ul>
<li><strong>Start writing your own kernels!</strong> This is the best way to solidify your understanding and gain practical experience.</li>
<li><strong>Consider collaborating with others</strong> for motivation and support.</li>
<li><strong>Volunteer to give a lecture!</strong> Share your knowledge and experience with the community. Topics like Trident kernels, prefix sum, and NCCL are highly relevant.</li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/lecture-009/</guid>
  <pubDate>Sat, 14 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Notes on Trends in Deep Learning Hardware: Bill Dally (NVIDIA)</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>https://christianjmills.com/posts/cuda-mode-notes/trends-in-deep-learning-hardware-bill-dally-nvidia/</link>
  <description><![CDATA[ 




<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
This post is part of the following series:
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><a href="../../../series/notes/cuda-mode-notes.html"><strong>GPU MODE Lecture Notes</strong></a>: My notes from the <strong>GPU MODE</strong> reading group lectures run by <strong>Andreas Kopf</strong> and <strong>Mark Saroufim</strong>.</li>
</ul>
</div>
</div>
<ul>
<li>Motivation and History</li>
<li>GPU Performance Improvements: Huang’s Law</li>
<li>Complex Instructions and Their Importance</li>
<li>NVIDIA Hopper GPU: Current State (2023)</li>
<li>Scaling with Multiple GPUs</li>
<li>The Importance of Software</li>
<li>Future Directions</li>
<li>Number Representation: Choosing the Right System</li>
<li>Logarithmic Number Systems</li>
<li>Optimal Clipping</li>
<li>Scaling Granularity</li>
<li>Sparsity</li>
<li>Accelerators vs.&nbsp;GPUs</li>
<li>Magnetic BERT Accelerator</li>
<li>Conclusion</li>
<li>Q&amp;A Session</li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled" title="Source Material">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Source Material
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><strong>YouTube:</strong> <a href="https://www.youtube.com/watch?v=kLiwvnr4L80">Trends in Deep Learning Hardware: Bill Dally (NVIDIA)</a></li>
</ul>
</div>
</div>
<section id="motivation-and-history" class="level2">
<h2 class="anchored" data-anchor-id="motivation-and-history">Motivation and History</h2>
<ul>
<li><strong>Deep learning</strong> can be viewed as a process of distilling data into value.
<ul>
<li>Starting with massive datasets (e.g., 10<sup>12</sup> tokens, 10<sup>9</sup> images).</li>
<li>Aiming to extract valuable insights, applications, and functionalities.</li>
</ul></li>
<li><strong>Deep learning models</strong> require a training process analogous to education:
<ul>
<li><strong>Undergraduate School (General Training):</strong>
<ul>
<li>Input: Trillion-token dataset (now exceeding 10 trillion).</li>
<li>Process: Extensive training on GPUs (e.g., via AWS).</li>
<li>Output: A broadly trained model with a general understanding of the data.</li>
</ul></li>
<li><strong>Graduate School (Specialization):</strong>
<ul>
<li><strong>Pre-tuning:</strong> Continued training on domain-specific data (e.g., Chip Nemo trained on 24 billion tokens of NVIDIA hardware design documents).</li>
<li><strong>Fine-tuning with Human Feedback:</strong> Model generates responses, humans grade them, and feedback refines the model for better user experience.</li>
</ul></li>
<li><strong>Inference (Real-World Application):</strong>
<ul>
<li>The bulk of deep learning computation occurs in the inference stage.</li>
<li>Trained models are used for extended periods, performing inference on new data (e.g., answering queries, generating content).</li>
<li><strong>Retrieval Augmented Generation:</strong>
<ul>
<li>Recent approach to enhance inference accuracy and prevent “hallucinations.”</li>
<li>Queries a database (e.g., Chip Nemo’s document database) before running the LLM.</li>
<li>Relevant documents are fed into the transformer’s input window along with the original query.</li>
</ul></li>
</ul></li>
</ul></li>
<li><strong>Deep learning’s revolution</strong> was enabled by hardware:
<ul>
<li><strong>Algorithms (Fuel):</strong> Mostly established by the 1980s (e.g., deep neural networks, convolutional networks, stochastic gradient descent, backpropagation).</li>
<li><strong>Data (Air):</strong> Large labeled datasets emerged in the early 2000s (e.g., Pascal, ImageNet).</li>
<li><strong>Computing Power (Spark):</strong> Sufficient compute to train large models on large datasets in reasonable time was the catalyst (e.g., AlexNet trained on ImageNet in two weeks on a pair of Fermi GPUs).</li>
</ul></li>
<li><strong>Progress in deep learning</strong> is gated by available compute power:
<ul>
<li>Training time demands have increased dramatically:
<ul>
<li>AlexNet (2012): 10<sup>-2</sup> petaflop days.</li>
<li>ResNet (2016): ~1 petaflop day.</li>
<li>BERT (2018): ~10 petaflop days.</li>
<li>GPT-4 (2023, estimated): ~10<sup>6</sup> petaflop days.</li>
</ul></li>
<li>This represents a 10<sup>8</sup> increase in compute demand over a decade.</li>
<li>Improvements have come from:
<ul>
<li><strong>Increased individual GPU performance (~1000x).</strong></li>
<li><strong>Scaling up GPU numbers and training time (~10<sup>6</sup>x).</strong></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="gpu-performance-improvements-huangs-law" class="level2">
<h2 class="anchored" data-anchor-id="gpu-performance-improvements-huangs-law">GPU Performance Improvements: Huang’s Law</h2>
<ul>
<li><strong>Huang’s Law:</strong> Deep learning inference performance on NVIDIA GPUs has doubled annually for the last decade.
<ul>
<li>Kepler generation: ~4 int8 TOPS (Tera Operations Per Second) on single-chip inference.</li>
<li>Hopper generation: ~4000 int8 TOPS.</li>
<li>This represents a ~1000x increase over 10 years.</li>
</ul></li>
<li><strong>Key contributors to performance gains:</strong>
<ul>
<li><strong>Smaller numbers (biggest gain):</strong>
<ul>
<li>Shifting from FP32 (used in Kepler for scientific computing and graphics) to int8 for inference.</li>
<li>Reduced data size (4x) and quadratic reduction in multiply operations (16x).</li>
<li>Note: Google TPU V1’s efficiency advantage over Kepler stemmed primarily from using int8 vs.&nbsp;Kepler’s FP32.</li>
</ul></li>
<li><strong>Complex instructions:</strong>
<ul>
<li>GPUs have a simplified pipeline (no branch prediction, out-of-order execution), but instruction execution still has significant overhead (~20x the cost of arithmetic within the instruction).</li>
<li><strong>Complex instructions amortize this overhead by performing more work per instruction.</strong></li>
<li>Examples:
<ul>
<li><strong>FMA (Fuse Multiply Add) in Kepler.</strong></li>
<li><strong>DP4 (4-element Dot Product) in Pascal.</strong></li>
<li><strong>HMMA (Half-precision Matrix Multiply Accumulate) in Volta.</strong></li>
<li><strong>IMMA (Integer Matrix Multiply Accumulate) in Turing.</strong></li>
<li>These instructions offer efficiency comparable to hardwired accelerators (e.g., TPUs).</li>
</ul></li>
</ul></li>
<li><strong>Process technology:</strong>
<ul>
<li>Four generations of process technology advancements (28nm to 5nm) contributed ~2.5x improvement.</li>
<li><strong>Most gains have come from architectural improvements, not process technology.</strong></li>
</ul></li>
<li><strong>Sparsity:</strong>
<ul>
<li>Exploiting sparsity (currently 2:1 on weights only) yields performance improvements.</li>
<li>Future potential lies in exploiting higher levels of sparsity and sparsity in activations.</li>
</ul></li>
<li><strong>Algorithm improvements:</strong>
<ul>
<li>More efficient deep learning models have also contributed significantly to performance gains (estimated ~1000x).</li>
<li>Example: GoogleNet’s efficiency improvements over VGGNet in the ImageNet competition.</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="complex-instructions-and-their-importance" class="level2">
<h2 class="anchored" data-anchor-id="complex-instructions-and-their-importance">Complex Instructions and Their Importance</h2>
<table class="caption-top table">
<thead>
<tr class="header">
<th>Operation</th>
<th>Energy**</th>
<th>Overhead*</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>HFMA</td>
<td>1.5pJ</td>
<td>2000%</td>
</tr>
<tr class="even">
<td>HDP4A</td>
<td>6.0pJ</td>
<td>500%</td>
</tr>
<tr class="odd">
<td>HMMA</td>
<td>110pJ</td>
<td>22%</td>
</tr>
<tr class="even">
<td>IMMA</td>
<td>160pJ</td>
<td>16%</td>
</tr>
</tbody>
</table>
<ul>
<li>Even simplified GPU pipelines have an overhead factor of ~20 for instruction execution compared to the cost of arithmetic operations within the instruction.</li>
<li>Complex CPUs have even higher overhead (~1000x for FP16 operations).</li>
<li><strong>Complex instructions are crucial for amortizing instruction overhead:</strong>
<ul>
<li><strong>FMA:</strong> Two arithmetic operations, overhead dominates energy consumption.</li>
<li><strong>DP4:</strong> Eight operations (4 multiplies, 4 adds), overhead reduced to ~5x.</li>
<li><strong>Tensor Cores (HMMA, IMMA, QMMA):</strong> Matrix multiply instructions perform hundreds of operations per instruction, significantly reducing overhead to ~15-20%.
<ul>
<li><strong>HMMA (Volta):</strong> Two FP16 4x4 matrices, matrix multiply (64 multiplies), accumulate into an FP32 4x4 matrix (128 total operations).</li>
<li><strong>IMMA (Turing):</strong> Two int8 8x8 matrices, matrix multiply and accumulate.</li>
<li><strong>QMMA (Hopper):</strong> Quarter-precision (FP8) matrix multiply accumulate.</li>
</ul></li>
</ul></li>
<li><strong>Complex instructions make programmable GPUs as efficient as hardwired accelerators for deep learning while retaining programmability advantages.</strong></li>
</ul>
</section>
<section id="nvidia-hopper-gpu-current-state-2023" class="level2">
<h2 class="anchored" data-anchor-id="nvidia-hopper-gpu-current-state-2023">NVIDIA Hopper GPU: Current State (2023)</h2>
<ul>
<li><strong>Hopper H100:</strong>
<ul>
<li>1 petaflop TensorFloat32.</li>
<li>1-2 petaflops FP16/BFloat16 (dense/sparse).</li>
<li>2-4 petaflops FP8/int8 (dense/sparse).</li>
<li>3 TB/s memory bandwidth.</li>
<li>96 GB HBM3 memory.</li>
<li>18 NVLink ports (900 GB/s off-chip bandwidth).</li>
<li>700 watts power consumption.</li>
<li>9 teraOPS/watt (int8/FP8).</li>
<li>Includes dynamic programming instructions for bioinformatics.</li>
</ul></li>
<li><strong>Note:</strong> Export restrictions to China may be counterproductive, potentially driving Chinese developers to Huawei’s hardware.</li>
</ul>
</section>
<section id="scaling-with-multiple-gpus" class="level2">
<h2 class="anchored" data-anchor-id="scaling-with-multiple-gpus">Scaling with Multiple GPUs</h2>
<ul>
<li><strong>Model Parallelism:</strong>
<ul>
<li>Necessary because large models (e.g., GPT-4 with 1.2 trillion parameters) don’t fit on a single GPU.</li>
<li><strong>Tensor Parallelism:</strong> Dividing individual matrices (e.g., into column strips) and distributing operations across multiple GPUs.</li>
<li><strong>Pipeline Parallelism:</strong> Assigning different network layers to different GPUs, forwarding results sequentially. Earlier layers start processing the next batch of training data while later layers finish the current batch.</li>
</ul></li>
<li><strong>Data Parallelism:</strong>
<ul>
<li>Running multiple copies of the model.</li>
<li>Splitting a batch of training data across model copies.</li>
<li>Each copy trains on its portion, then weight updates are exchanged to ensure all copies have the same weights for the next iteration.</li>
</ul></li>
<li><strong>Hardware for Multi-GPU Scaling:</strong>
<ul>
<li><strong>HGX Server:</strong> 8 H100 GPUs, 4 NV switches, 32 petaflops compute, 11 kilowatts power, 900 GB/s bandwidth.</li>
<li><strong>NV Switch Pizza Box:</strong> Connects multiple HGX servers with active optical cables.</li>
<li><strong>DGX SuperPOD:</strong> Large-scale system comprised of multiple interconnected HGX servers.
<ul>
<li><strong>Pre-configured software for rapid deployment.</strong></li>
<li><strong>Network collectives (all-reduce) on NVLink and InfiniBand for efficient data parallel training.</strong></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="the-importance-of-software" class="level2">
<h2 class="anchored" data-anchor-id="the-importance-of-software">The Importance of Software</h2>
<ul>
<li>“Anybody can build a matrix multiplier, but software makes it useful.”</li>
<li><strong>NVIDIA’s Deep Learning Software History:</strong>
<ul>
<li>Started in 2010 with cuDNN, developed in collaboration with Andrew Ng (Stanford).</li>
<li>Has evolved into a comprehensive software stack:
<ul>
<li><strong>AI Stack:</strong> CUDA, cuDNN, TensorRT, etc.</li>
<li><strong>HPC Stack:</strong> Libraries and tools for high-performance computing.</li>
<li><strong>Graphics Stack (Omniverse):</strong> Platform for 3D design collaboration and simulation.</li>
<li><strong>Vertical Applications:</strong> Clara (medical), Modulus (physics), Drive (autonomous vehicles), etc.</li>
</ul></li>
<li>Represents tens of thousands of person-years of development effort.</li>
</ul></li>
<li><strong>MLPerf Benchmarks:</strong> Demonstrate the impact of software on performance.
<ul>
<li>NVIDIA GPUs consistently lead in these benchmarks, showcasing the strength of the software ecosystem.</li>
<li><strong>Significant performance gains are achieved through software optimizations even on existing hardware (e.g., Ampere’s performance increased 2.5x since its initial release).</strong></li>
</ul></li>
</ul>
</section>
<section id="future-directions" class="level2">
<h2 class="anchored" data-anchor-id="future-directions">Future Directions</h2>
<ul>
<li><strong>The challenge:</strong> Meeting the ever-increasing compute demand for deep learning (10<sup>8</sup> increase in 10 years).</li>
<li><strong>Energy breakdown in deep learning inference:</strong>
<ul>
<li>Math (Datapath and MAC): 47%.</li>
<li>Memories (accumulation buffer, input buffer, weight buffer, accumulation collector): 47%.</li>
<li>Data movement: 6%.</li>
</ul></li>
<li><strong>Strategies for future improvements:</strong>
<ul>
<li><strong>Number Representation:</strong>
<ul>
<li><strong>Use the cheapest representation that maintains sufficient accuracy.</strong></li>
<li><strong>Optimal scaling:</strong> Adjust the dynamic range of the number system to minimize error (e.g., minimize mean squared error).</li>
<li><strong>Logarithmic numbers:</strong> Offer better accuracy than integers or floats, especially for small values. Efficient addition methods exist.</li>
<li><strong>Sparsity:</strong> Exploit sparsity in both weights and activations, explore lower density sparsity patterns.</li>
</ul></li>
<li><strong>Data Movement:</strong>
<ul>
<li><strong>Better tiling:</strong> Optimize loop scheduling to minimize data movement and maximize reuse.</li>
</ul></li>
<li><strong>Circuits:</strong>
<ul>
<li><strong>More efficient memories:</strong>
<ul>
<li><strong>Write-once, read-many optimizations (e.g., bit line per cell).</strong> This reduces read energy significantly.</li>
</ul></li>
<li><strong>Better communication circuits:</strong> Reduce energy consumption in on-chip data transfer (e.g., using lower voltage signaling).</li>
<li><strong>3D memory:</strong> Stack DRAM directly on top of the GPU for higher bandwidth and lower energy (long-term goal with significant technical challenges).</li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="number-representation-choosing-the-right-system" class="level2">
<h2 class="anchored" data-anchor-id="number-representation-choosing-the-right-system">Number Representation: Choosing the Right System</h2>
<ul>
<li><strong>Evaluating a number system:</strong>
<ul>
<li><strong>Accuracy:</strong> Maximum error introduced when converting a real number to the number system’s representation (due to rounding).</li>
<li><strong>Dynamic Range:</strong> The range of numbers that can be represented.</li>
<li><strong>Cost:</strong>
<ul>
<li>Number of bits (affects storage and data movement).</li>
<li>Cost of arithmetic operations (e.g., multiply-accumulate).</li>
</ul></li>
</ul></li>
<li><strong>Comparison of number systems:</strong>
<ul>
<li><strong>Integer:</strong> Poor accuracy (error is independent of value), worst-case error of 33%.</li>
<li><strong>Floating Point:</strong> Better accuracy than integer, error scales with value but in blocks.</li>
<li><strong>Logarithmic:</strong> Even better accuracy, error scales continuously with value.
<ul>
<li>Example: Log 4.3 (8-bit representation) offers 50% higher worst-case accuracy than FP8 (E4M3) with the same dynamic range.</li>
</ul></li>
<li><strong>Symbolic:</strong> Optimal for a fixed number of representable values (e.g., codebook), but lookup and arithmetic costs can be high.</li>
<li><strong>Spiking:</strong> Extremely inefficient in terms of energy consumption due to high toggling activity.</li>
<li><strong>Analog:</strong> Advantages in individual operations are negated by the need for digital conversion for storage and movement.</li>
</ul></li>
</ul>
</section>
<section id="logarithmic-number-systems" class="level2">
<h2 class="anchored" data-anchor-id="logarithmic-number-systems">Logarithmic Number Systems</h2>
<ul>
<li><strong>Principle:</strong> Similar to slide rules, using logarithmic scales to turn multiplication into addition.</li>
<li><strong>Advantages:</strong>
<ul>
<li><strong>Cheap multiplications:</strong> Simple addition operation.</li>
<li><strong>High accuracy, especially for small values:</strong> Error scales continuously with value.</li>
</ul></li>
<li><strong>Challenges:</strong>
<ul>
<li><strong>Additions are traditionally expensive:</strong> Requires table lookups to convert between logarithmic and linear representations.</li>
</ul></li>
<li><strong>Efficient Addition in Logarithmic Systems:</strong>
<ul>
<li><strong>Factor out table lookups:</strong> Perform lookups once per tensor (e.g., 10,000 elements) instead of per element.</li>
<li><strong>Sort elements based on fractional exponent part (EF).</strong></li>
<li><strong>Add integer parts (EI) together efficiently.</strong></li>
<li><strong>Perform a single lookup (or use hardwired constants) for each EF value.</strong></li>
<li><strong>Multiply partial sums by the looked-up values.</strong></li>
<li><strong>Convert the final sum back to logarithmic form.</strong></li>
</ul></li>
</ul>
</section>
<section id="optimal-clipping" class="level2">
<h2 class="anchored" data-anchor-id="optimal-clipping">Optimal Clipping</h2>
<ul>
<li><p><strong>Goal:</strong> Minimize error by optimally centering the representable range of a number system on the distribution of values to be represented (e.g., weights or activations).</p></li>
<li><p><strong>Traditional Scaling:</strong></p>
<ul>
<li>Scale the number system to represent the minimum and maximum values without clipping.</li>
<li>No clipping noise, but high quantization noise due to large spacing between representable values.</li>
</ul></li>
<li><p><strong>Optimal Clipping:</strong></p>
<ul>
<li>Introduce clipping noise by saturating values outside a chosen range.</li>
<li><strong>Reduces quantization noise significantly.</strong></li>
<li><strong>Minimizes the overall error (e.g., mean squared error) by balancing clipping noise and quantization noise.</strong></li>
</ul></li>
<li><p><strong>Finding the optimal clipping point:</strong> <img src="https://latex.codecogs.com/png.latex?%0As_%7Bn+1%7D%20=%20%5Cfrac%7B%5Cmathbb%7BE%7D%5Cleft%5B%7CX%7C%20%5Ccdot%20%5Cmathbb%7B1%7D_%7B%5C%7B%7CX%7C%20%3E%20s_n%5C%7D%7D%5Cright%5D%7D%7B%5Cfrac%7B4%5E%7B-B%7D%7D%7B3%7D%20%5Cmathbb%7BE%7D%5Cleft%5B%5Cmathbb%7B1%7D_%7B%5C%7B%7CX%7C%20%5Cleq%20s_n%5C%7D%7D%5Cright%5D%20+%20%5Cmathbb%7BE%7D%5Cleft%5B%5Cmathbb%7B1%7D_%7B%5C%7B%7CX%7C%20%3E%20s_n%5C%7D%7D%5Cright%5D%7D%0A"></p>
<ul>
<li>An iterative equation approximates the integral that minimizes mean squared error.</li>
<li>A few iterations provide a good approximation of the optimal clipping range.</li>
</ul></li>
<li><p><strong>Benefits:</strong></p>
<ul>
<li><strong>Can be worth more than a bit of precision in terms of mean squared error.</strong></li>
<li><strong>Significantly improves accuracy, especially for lower-precision representations.</strong></li>
</ul></li>
<li><p><strong>Note:</strong> Clipping is typically done post-training, but training the clipping factor along with the model’s weights could potentially yield further improvements.</p></li>
</ul>
</section>
<section id="scaling-granularity" class="level2">
<h2 class="anchored" data-anchor-id="scaling-granularity">Scaling Granularity</h2>
<ul>
<li><strong>Layer-wise scaling:</strong> Initially used for both forward and backward propagation (separate scale factors).</li>
<li><strong>Finer granularity scaling (e.g., vector-wise):</strong> Improves accuracy by scaling smaller groups of elements independently.
<ul>
<li><strong>Example:</strong> In ConvNets, scaling each 32-element vector in the channel dimension independently.</li>
</ul></li>
<li><strong>Hardware support:</strong> Requires additional multipliers to apply activation and weight scale factors (SW and SA) after the MAC operation.</li>
<li><strong>Benefits:</strong> Tighter scaling for smaller groups of numbers leads to significantly reduced error, equivalent to gaining a couple of bits of precision.</li>
</ul>
</section>
<section id="sparsity" class="level2">
<h2 class="anchored" data-anchor-id="sparsity">Sparsity</h2>
<ul>
<li><strong>Pruning neural networks:</strong> Removing less important weights (e.g., based on magnitude or sensitivity) can significantly reduce the number of computations without significant accuracy loss.
<ul>
<li>Multi-layer perceptrons (MLPs): Can prune up to 90% of weights.</li>
<li>Convolutional neural networks (ConvNets): Can prune up to 60-70% of weights.</li>
</ul></li>
<li><strong>Challenges in implementing sparsity efficiently:</strong>
<ul>
<li><strong>Irregularity of sparsity patterns:</strong> Leads to high overhead for bookkeeping and data shuffling.</li>
<li><strong>Difficulty in parallelizing sparse computations efficiently.</strong></li>
</ul></li>
<li><strong>Structured Sparsity (Ampere and Hopper):</strong>
<ul>
<li><strong>Enforces a regular sparsity pattern (e.g., no more than 2 out of every 4 weights can be non-zero).</strong></li>
<li><strong>Dense training followed by structured pruning and retraining with a mask.</strong></li>
<li><strong>Compression by storing only non-zero weights and metadata indicating their positions.</strong></li>
<li><strong>Benefits:</strong> Predictable sparsity pattern enables efficient parallel computations, achieving ~2x speedup.</li>
</ul></li>
<li><strong>Future directions:</strong> Extending structured sparsity to activations and exploring other regular sparsity patterns.</li>
</ul>
</section>
<section id="accelerators-vs.-gpus" class="level2">
<h2 class="anchored" data-anchor-id="accelerators-vs.-gpus">Accelerators vs.&nbsp;GPUs</h2>
<ul>
<li><strong>NVIDIA’s accelerator projects:</strong> EIE, IRIS, SCNN, multi-chip module.</li>
<li><strong>How accelerators achieve performance:</strong>
<ul>
<li><strong>Special data types and operators:</strong> Similar to GPUs, using specialized data types (e.g., FP8) and complex instructions (e.g., matrix multiply).</li>
<li><strong>Massive parallelism:</strong> Exploiting parallelism to perform many operations concurrently.</li>
<li><strong>Optimized memory:</strong> Minimizing main memory accesses through hierarchical scratchpads and data reuse.</li>
<li><strong>Algorithm-architecture co-design:</strong> Adapting algorithms to the accelerator’s architecture for optimal performance (e.g., bioinformatics accelerator with efficient alignment engine).</li>
<li><strong>Reduced dramatized overhead:</strong> Simplifying control and data movement compared to CPUs.</li>
</ul></li>
<li><strong>Amortizing overhead:</strong> Crucial for efficiency.
<ul>
<li>Example: Simple ARM out-of-order core:
<ul>
<li>CPU instruction overhead: 250 picojoules.</li>
<li>16-bit integer add: 32 femtojoules.</li>
<li>Overhead dominates energy consumption (~99.99%).</li>
</ul></li>
</ul></li>
<li><strong>Memory access costs:</strong>
<ul>
<li>Local 8kB memory: 5 picojoules/word.</li>
<li>On-chip (hundreds of MB): 50 picojoules/word (45 picojoules for communication).</li>
<li>Off-chip LPDDR/HBM: 640 picojoules/word (32-bit).</li>
</ul></li>
</ul>
</section>
<section id="magnetic-bert-accelerator" class="level2">
<h2 class="anchored" data-anchor-id="magnetic-bert-accelerator">Magnetic BERT Accelerator</h2>
<ul>
<li><strong>Design:</strong>
<ul>
<li>Optimized for LLMs (BERT and BERT-large).</li>
<li>Incorporates optimal clipping and vector-level scaling (32-element vectors).</li>
<li>Achieves int4 (4-bit) inference with negligible accuracy loss.</li>
</ul></li>
<li><strong>Performance:</strong>
<ul>
<li><strong>95.6 teraOPS/watt for int8 operations (~10x more efficient than Hopper).</strong></li>
<li>Demonstrates the potential for further efficiency improvements in future GPU designs.</li>
</ul></li>
</ul>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<ul>
<li>Deep learning’s progress is heavily reliant on hardware advancements.</li>
<li>GPUs have provided significant performance gains (~1000x in 10 years) through architectural innovations (smaller numbers, complex instructions, sparsity).</li>
<li>Scaling with multiple GPUs and longer training times has enabled the training of increasingly large models.</li>
<li><strong>Future directions focus on:</strong>
<ul>
<li>Number representation (logarithmic numbers, optimal clipping, scaling granularity).</li>
<li>Sparsity (exploiting higher levels and activation sparsity).</li>
<li>Memory and circuit optimizations (efficient memories, communication circuits, 3D memory).</li>
<li>Algorithm-architecture co-design.</li>
</ul></li>
<li><strong>Accelerators like Magnetic BERT demonstrate the potential for further efficiency gains, paving the way for future GPU architectures.</strong></li>
</ul>
</section>
<section id="qa-session" class="level2">
<h2 class="anchored" data-anchor-id="qa-session">Q&amp;A Session</h2>
<section id="question-1-network-size-optimization-and-pruning-techniques" class="level4">
<h4 class="anchored" data-anchor-id="question-1-network-size-optimization-and-pruning-techniques">Question 1: Network Size Optimization and Pruning Techniques</h4>
<ul>
<li><strong>Question:</strong> What techniques are used for optimizing network size (pruning)?</li>
<li><strong>Answer:</strong>
<ul>
<li><strong>Neural Architecture Search:</strong> A team at NVIDIA uses neural architecture search to find optimal models based on various parameters (number of layers, channels per layer, layer sizes, etc.) given constraints on accuracy, execution time, or power.</li>
<li><strong>Pruning Techniques:</strong>
<ul>
<li><strong>Magnitude-based pruning (most common):</strong>
<ul>
<li>Scan weights in a layer and prune those with the smallest magnitudes based on a target density.</li>
<li>Essentially histograms the layer and sets weights below a threshold to zero.</li>
</ul></li>
<li><strong>Sensitivity-based pruning (more complex but potentially more effective):</strong>
<ul>
<li>Considers both the weight value and the sensitivity of the weight’s connections to the output.</li>
<li>Prunes weights with the least sensitivity, taking into account both the weight value and its impact on the output.</li>
</ul></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="question-2-energy-savings-breakdown-for-complex-instructions" class="level4">
<h4 class="anchored" data-anchor-id="question-2-energy-savings-breakdown-for-complex-instructions">Question 2: Energy Savings Breakdown for Complex Instructions</h4>
<ul>
<li><strong>Question:</strong> Regarding the energy savings from complex instructions, could you elaborate on the breakdown between fetch/decode savings and operand loading savings?</li>
<li><strong>Answer:</strong> While the exact breakdown isn’t readily available, Dally believes that the majority of energy savings come from reduced fetch and decode operations. However, more detailed analysis would be required to provide specific numbers.</li>
</ul>
</section>
<section id="question-3-systolic-array-architectures-vs.-nvidias-approach" class="level4">
<h4 class="anchored" data-anchor-id="question-3-systolic-array-architectures-vs.-nvidias-approach">Question 3: Systolic Array Architectures vs.&nbsp;NVIDIA’s Approach</h4>
<ul>
<li><strong>Question:</strong> Does NVIDIA use systolic arrays for matrix multiplications, like Google’s TPU?</li>
<li><strong>Answer:</strong>
<ul>
<li>NVIDIA uses smaller matrix multiplies (4x4 for FP16/BFloat16) compared to Google’s TPUs, which often use larger sizes (e.g., 128x128).</li>
<li>Smaller matrix sizes help avoid fragmentation issues that can arise when the natural matrix size isn’t a power of two. Large matrix multipliers can lead to significant rounding-up inefficiencies.</li>
<li>While NVIDIA’s approach isn’t systolic, the efficiency of the core matrix multiply operation is comparable. The energy cost is dominated by the math units themselves.</li>
<li>NVIDIA feeds matrix multipliers from register files, potentially incurring slightly higher shuffling overhead for smaller matrices compared to systolic arrays.</li>
<li>However, even this overhead is likely minimal (estimated around 10%) and comparable to the data movement costs in systolic arrays. Google’s TPUs still require data movement to feed the systolic array, and they also have control overhead.</li>
</ul></li>
</ul>
</section>
<section id="question-4-hardwaresoftware-implementation-of-clipping" class="level4">
<h4 class="anchored" data-anchor-id="question-4-hardwaresoftware-implementation-of-clipping">Question 4: Hardware/Software Implementation of Clipping</h4>
<ul>
<li><strong>Question:</strong> Is the clipping technique implemented in hardware, software, or programmable hardware like FPGAs?</li>
<li><strong>Answer:</strong>
<ul>
<li>Clipping is primarily implemented in software.</li>
<li>NVIDIA GPUs already have the capability to use scale factors for adjusting the dynamic range of number representations.</li>
<li>Clipping simply involves choosing a larger scale factor, causing some numbers to saturate to the maximum representable value.</li>
<li>The only hardware requirement is the presence of multipliers for applying activation and weight scale factors (SW and SA), which are already present in GPUs that support scaling.</li>
<li>The clipping itself and the granularity of scaling are software-controlled, allowing flexibility in implementation.</li>
</ul></li>
</ul>
<hr>
<div class="callout callout-style-default callout-tip callout-titled" title="About Me:">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
About Me:
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m Christian Mills, a deep learning consultant specializing in practical AI implementations. I help clients leverage cutting-edge AI technologies to solve real-world problems.</p>
<p>Interested in working together? Fill out my <a href="https://docs.google.com/forms/d/e/1FAIpQLScKDKPJF9Be47LA3nrEDXTVpzH2UMLz8SzHMHM9hWT5qlvjkw/viewform?usp=sf_link">Quick AI Project Assessment</a> form or learn more <a href="../../../about.html">about me</a>.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>notes</category>
  <category>cuda</category>
  <guid>https://christianjmills.com/posts/cuda-mode-notes/trends-in-deep-learning-hardware-bill-dally-nvidia/</guid>
  <pubDate>Wed, 11 Sep 2024 07:00:00 GMT</pubDate>
  <media:content url="https://christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
</channel>
</rss>
