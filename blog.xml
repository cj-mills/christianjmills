<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Christian Mills</title>
<link>christianjmills.com/blog.html</link>
<atom:link href="christianjmills.com/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is Christian Mills&#39; personal Blog.</description>
<image>
<url>christianjmills.com/images/logo.png</url>
<title>Christian Mills</title>
<link>christianjmills.com/blog.html</link>
<height>142</height>
<width>144</width>
</image>
<generator>quarto-1.3.340</generator>
<lastBuildDate>Sat, 06 May 2023 07:00:00 GMT</lastBuildDate>
<item>
  <title>Code Walkthrough: Unity Barracuda Inference YOLOX Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-barracuda-inference-yolox-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-barracuda-inference-yolox">Barracuda Inference YOLOX</a> package extends the functionality of <a href="https://github.com/cj-mills/unity-barracuda-inference-base"><code>unity-barracuda-inference-base</code></a> to perform object detection using <a href="https://github.com/Megvii-BaseDetection/YOLOX">YOLOX</a> models.</p>
<p>Object detection has numerous potential uses in Unity applications, including giving NPCs a more realistic perception of their environment, gesture-based controls, and augmented reality, to name a few. Here is a demo video from a project that uses this package to detect hand gestures.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-yolox-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-yolox-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains two C# scripts.</p>
<ol type="1">
<li><code>YOLOXObjectDetector.cs</code>: This script provides functionality to perform object detection with YOLOX models using the Barracuda inference engine.</li>
<li><code>PackageInstaller.cs</code>: An Editor utility script for automatically installing a list of dependency packages defined in a JSON file.</li>
</ol>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Barracuda Inference Base package by examining the purpose and functionality of each C# script.</p>
<section id="yoloxobjectdetector.cs" class="level3">
<h3 class="anchored" data-anchor-id="yoloxobjectdetector.cs"><code>YOLOXObjectDetector.cs</code></h3>
<p>This script defines the <code>YOLOXObjectDetector</code> class, which extends the <code>BarracudaModelRunner</code> class from the Barracuda Inference Base package to object detection using YOLOX models. This class also depends on the <a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit"><code>bounding-box-2d-toolkit</code></a> and <a href="https://github.com/cj-mills/unity-yolox-utils"><code>unity-yolox-utils</code></a> packages. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-barracuda-inference-yolox/blob/main/Runtime/Scripts/YOLOXObjectDetector.cs">YOLOXObjectDetector.cs</a></li>
</ul>
<section id="serialized-fields" class="level4">
<h4 class="anchored" data-anchor-id="serialized-fields">Serialized Fields</h4>
<p>The <code>YOLOXObjectDetector</code> class includes a field to add a color map from a JSON file.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output Processing configuration and variables</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// JSON file containing the color map for bounding boxes</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JSON file with bounding box colormaps"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextAsset colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>It also includes a field to control how often to unload memory assets when using Barracuda’s Pixel Shader backend. The Pixel Shader backend enables GPU inference on platforms that don’t support Compute Shaders. However, there seems to be a bug in the current version of Barracuda, which does not release unused assets when using this backend. Left unchecked, this can fill up both system and GPU memory. We can address this by manually freeing memory. Doing that every frame can hurt performance, so we’ll only do it at set intervals.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Settings"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Interval (in frames) for unloading unused assets with Pixel Shader backend"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb2-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> pixelShaderUnloadInterval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="serializable-classes" class="level4">
<h4 class="anchored" data-anchor-id="serializable-classes">Serializable Classes</h4>
<p>The <code>Colormap</code> and <code>ColormapList</code> classes help store color map information from a JSON file, which we then use for generating bounding boxes.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable classes to store color map information from JSON</span></span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Colormap</span>
<span id="cb3-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb3-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColormapList</span>
<span id="cb3-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Colormap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="private-variables" class="level4">
<h4 class="anchored" data-anchor-id="private-variables">Private Variables</h4>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A counter for the number of frames processed.</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> frameCounter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Indicates if the system supports asynchronous GPU readback</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> supportsAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stride values used by the YOLOX model</span></span>
<span id="cb4-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">readonly</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> Strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Number of fields in each bounding box</span></span>
<span id="cb4-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> NumBBoxFields <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Layer names for the Transpose, Flatten, and TransposeOutput operations</span></span>
<span id="cb4-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> TransposeLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transpose"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> FlattenLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"flatten"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> TransposeOutputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transposeOutput"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> defaultOutputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18"></span>
<span id="cb4-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Texture formats for output processing</span></span>
<span id="cb4-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextureFormat textureFormat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTextureFormat renderTextureFormat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22"></span>
<span id="cb4-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List to store label and color pairs for each class</span></span>
<span id="cb4-24"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;</span> colormapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)&gt;();</span></span>
<span id="cb4-25"></span>
<span id="cb4-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output textures for processing on CPU and GPU</span></span>
<span id="cb4-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTexture outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-29"></span>
<span id="cb4-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List to store grid and stride information for the YOLOX model</span></span>
<span id="cb4-31"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridCoordinateAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> gridCoordsAndStrides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridCoordinateAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb4-32"></span>
<span id="cb4-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Length of the proposal array for YOLOX output</span></span>
<span id="cb4-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> proposalLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="start" class="level4">
<h4 class="anchored" data-anchor-id="start"><code>Start</code></h4>
<p>This method runs at the start of the script. It performs several initializations, including checking for async GPU readback support, loading the color map list, and initializing the output texture.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Called at the start of the script</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb5-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CheckAsyncGPUReadbackSupport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if async GPU readback is supported</span></span>
<span id="cb5-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadColorMapList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load colormap information from JSON file</span></span>
<span id="cb5-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateOutputTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize output texture</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    proposalLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> NumBBoxFields<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate proposal length</span></span>
<span id="cb5-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="checkasyncgpureadbacksupport" class="level4">
<h4 class="anchored" data-anchor-id="checkasyncgpureadbacksupport"><code>CheckAsyncGPUReadbackSupport</code></h4>
<p>This method checks if the system supports asynchronous GPU readback</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the system supports async GPU readback</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CheckAsyncGPUReadbackSupport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-4">    supportsAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SystemInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">supportsAsyncGPUReadback</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> supportsAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> supportsAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadandpreparemodel" class="level4">
<h4 class="anchored" data-anchor-id="loadandpreparemodel"><code>LoadAndPrepareModel</code></h4>
<p>This method loads and prepares the YOLOX model by setting worker types and applying transpose and flatten operations.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load and prepare the YOLOX model</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAndPrepareModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAndPrepareModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-5"></span>
<span id="cb7-6">    defaultOutputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outputs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-7">    WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span> bestType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ValidateType</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> supportsComputeBackend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bestType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ComputePrecompiled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set worker type for WebGL</span></span>
<span id="cb7-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">platform</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> RuntimePlatform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebGLPlayer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-13">        workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PixelShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-15"></span>
<span id="cb7-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply transpose operation on the output layer</span></span>
<span id="cb7-17">    modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Transpose</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> defaultOutputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb7-18">    defaultOutputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-19"></span>
<span id="cb7-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply Flatten and TransposeOutput operations if supported</span></span>
<span id="cb7-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>supportsComputeBackend <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PixelShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb7-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-23">        modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Flatten</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>FlattenLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-24">        modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Transpose</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TransposeOutputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> FlattenLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb7-25">        modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Output</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-26">        defaultOutputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TransposeOutputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializeengine" class="level4">
<h4 class="anchored" data-anchor-id="initializeengine"><code>InitializeEngine</code></h4>
<p>This method initializes the Barracuda engine and checks if asynchronous GPU readback is supported.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the Barracuda engine</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeEngine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeEngine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb8-7"></span>
<span id="cb8-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if async GPU readback is supported by the engine</span></span>
<span id="cb8-9">    supportsAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Summary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unity.Barracuda.ComputeVarsWithSharedModel"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadcolormaplist" class="level4">
<h4 class="anchored" data-anchor-id="loadcolormaplist"><code>LoadColorMapList</code></h4>
<p>This method loads the color map list from a JSON file.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load the color map list from the JSON file</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadColorMapList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsColorMapListJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb9-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-8">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Class labels JSON is null or empty."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-11"></span>
<span id="cb9-12">    ColormapList colormapObj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeColorMapList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateColorMap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colormapObj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="iscolormaplistjsonnullorempty" class="level4">
<h4 class="anchored" data-anchor-id="iscolormaplistjsonnullorempty"><code>IsColorMapListJsonNullOrEmpty</code></h4>
<p>This method checks if the provided color map JSON file is null or empty.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Check if the color map JSON file is null or empty</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsColorMapListJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb10-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> colormapFile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsNullOrWhiteSpace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="deserializecolormaplist" class="level4">
<h4 class="anchored" data-anchor-id="deserializecolormaplist"><code>DeserializeColorMapList</code></h4>
<p>This method deserializes the provided color map JSON string to a <code>ColormapList</code> object.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Deserialize the color map list from the JSON string</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ColormapList <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeColorMapList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb11-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Exception ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-12">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to deserialize class labels JSON: {ex.Message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatecolormap" class="level4">
<h4 class="anchored" data-anchor-id="updatecolormap"><code>UpdateColorMap</code></h4>
<p>This method updates the <code>colormapList</code> array with the provided <code>ColormapList</code> object.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the color map list with deserialized data</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateColorMap</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ColormapList colormapObj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colormapObj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-10"></span>
<span id="cb12-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add label and color pairs to the colormap list</span></span>
<span id="cb12-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Colormap colormap <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> colormapObj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-14">        Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colormap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> colormap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> colormap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb12-15">        colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>colormap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb12-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="createoutputtexture" class="level4">
<h4 class="anchored" data-anchor-id="createoutputtexture"><code>CreateOutputTexture</code></h4>
<p>This method creates an output texture with the specified width and height.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Create an output texture with the specified width and height.</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateOutputTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-6">    outputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> textureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="executemodel" class="level4">
<h4 class="anchored" data-anchor-id="executemodel"><code>ExecuteModel</code></h4>
<p>This method executes the YOLOX model with a given input texture.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Execute the YOLOX model with the given input texture.</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ExecuteModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tensor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb14-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ExecuteModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-10"></span>
<span id="cb14-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update grid_strides if necessary</span></span>
<span id="cb14-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PeekOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>defaultOutputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> proposalLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> gridCoordsAndStrides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-14">        gridCoordsAndStrides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateGridCoordinatesWithStrides</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="processoutput" class="level4">
<h4 class="anchored" data-anchor-id="processoutput"><code>ProcessOutput</code></h4>
<p>This method processes the output array from the YOLOX model, applying Non-Maximum Suppression (NMS), and returns an array of BBox2DInfo objects with class labels and colors.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Process the output array from the YOLOX model, applying Non-Maximum Suppression (NMS) and</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// returning an array of BBox2DInfo objects with class labels and colors.</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"outputArray"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The output array from the YOLOX model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidenceThreshold"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The minimum confidence score for a bounding box to be considered</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"nms_threshold"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The threshold for Non-Maximum Suppression (NMS)</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of BBox2DInfo objects containing the filtered bounding boxes, class labels, and colors</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb15-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> BBox2DInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> confidenceThreshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> nms_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate bounding box proposals from the output array</span></span>
<span id="cb15-12">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BBox2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> YOLOXUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateBoundingBoxProposals</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> gridCoordsAndStrides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> NumBBoxFields<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-13"></span>
<span id="cb15-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply Non-Maximum Suppression (NMS) to the proposals</span></span>
<span id="cb15-15">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> BBox2DUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NMSSortedBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> nms_threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-16"></span>
<span id="cb15-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create an array of BBox2DInfo objects containing the filtered bounding boxes, class labels, and colors</span></span>
<span id="cb15-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> proposal_indices</span>
<span id="cb15-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb15-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bbox <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BBox2DInfo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Item1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Item2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb15-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="copyoutputtoarray" class="level4">
<h4 class="anchored" data-anchor-id="copyoutputtoarray"><code>CopyOutputToArray</code></h4>
<p>This method copies the model output to a float array.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Copy the model output to a float array.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb16-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PeekOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>defaultOutputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb16-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PixelShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-10">            frameCounter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb16-11">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>frameCounter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> pixelShaderUnloadInterval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-12">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-13">                Resources<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UnloadUnusedAssets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-14">                frameCounter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-15">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Download</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shape</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="copyoutputtotexture" class="level4">
<h4 class="anchored" data-anchor-id="copyoutputtotexture"><code>CopyOutputToTexture</code></h4>
<p>This method copies the model output to a texture.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Copy the model output to a texture.</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb17-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PeekOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb17-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-9">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-10">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateOutputTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-11">            outputTextureGPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> renderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-13">        output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="copyoutputwithasyncreadback" class="level4">
<h4 class="anchored" data-anchor-id="copyoutputwithasyncreadback"><code>CopyOutputWithAsyncReadback</code></h4>
<p>This method copies the model output using asynchronous GPU readback if the platform supports it.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Copy the model output using async GPU readback. If not supported, defaults to synchronous readback.</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb18-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputWithAsyncReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb18-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>supportsAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-8">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Async GPU Readback not supported. Defaulting to synchronous readback"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-11"></span>
<span id="cb18-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-13"></span>
<span id="cb18-14">    AsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Request</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> textureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> OnCompleteReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-15"></span>
<span id="cb18-16">    Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> outputColors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> outputArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputColors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reverse</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-18"></span>
<span id="cb18-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reverse the order of each proposal in the output array</span></span>
<span id="cb18-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> proposalLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-22">        Array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reverse</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> proposalLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-24"></span>
<span id="cb18-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> outputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="cropinputdims" class="level4">
<h4 class="anchored" data-anchor-id="cropinputdims"><code>CropInputDims</code></h4>
<p>This method crops input dimensions to be divisible by the maximum stride.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Crop input dimensions to be divisible by the maximum stride.</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2Int <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CropInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-6">    inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> Strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb19-7">    inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> Strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb19-8"></span>
<span id="cb19-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="oncompletereadback" class="level4">
<h4 class="anchored" data-anchor-id="oncompletereadback"><code>OnCompleteReadback</code></h4>
<p>This method handles the completion of an async GPU readback request.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb20-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Handle the completion of an async GPU readback request.</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb20-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnCompleteReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AsyncGPUReadbackRequest request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hasError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-8">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU readback error detected."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-11"></span>
<span id="cb20-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb20-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load readback data into the output texture and apply changes</span></span>
<span id="cb20-17">            outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb20-18">            outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UnityException ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-22">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Message</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LoadRawTextureData: not enough data provided (will result in overread)."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb20-23">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-24">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updating input data size to match the texture size."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-25">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-26">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb20-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-28">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unexpected UnityException: {ex.Message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-29">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-30">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ondisable" class="level4">
<h4 class="anchored" data-anchor-id="ondisable"><code>OnDisable</code></h4>
<p>This method cleans up resources when the script is disabled.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Clean up resources when the script is disabled.</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb21-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb21-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the temporary render texture</span></span>
<span id="cb21-8">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="packageinstaller.cs" class="level3">
<h3 class="anchored" data-anchor-id="packageinstaller.cs"><code>PackageInstaller.cs</code></h3>
<p>In this section, we will go through the <code>PackageInstaller.cs</code> script and explain how each part of the code works to install the required packages. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-barracuda-inference-yolox/blob/main/Editor/PackageInstaller.cs">PackageInstaller.cs</a></li>
</ul>
<section id="serializable-classes-1" class="level4">
<h4 class="anchored" data-anchor-id="serializable-classes-1">Serializable Classes</h4>
<p>The script defines two serializable classes to hold package data.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold package data</span></span>
<span id="cb22-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb22-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageData</span>
<span id="cb22-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageUrl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb22-8"></span>
<span id="cb22-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold a list of PackageData objects</span></span>
<span id="cb22-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb22-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageList</span>
<span id="cb22-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>These classes are for deserializing the JSON file containing the list of packages to install.</p>
</section>
<section id="packageinstaller-class-variables" class="level4">
<h4 class="anchored" data-anchor-id="packageinstaller-class-variables"><code>PackageInstaller</code> Class Variables</h4>
<p>The <code>PackageInstaller</code> class contains several private static fields.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the AddRequest object for the current package to install.</span></span>
<span id="cb23-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> AddRequest addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of PackageData objects to install.</span></span>
<span id="cb23-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The index of the current package to install.</span></span>
<span id="cb23-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-7"></span>
<span id="cb23-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUID of the JSON file containing the list of packages to install</span></span>
<span id="cb23-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> PackagesJSONGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"02aec9cd479b4b758a7afde0032230ec"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="installdependencies" class="level4">
<h4 class="anchored" data-anchor-id="installdependencies"><code>InstallDependencies</code></h4>
<p>The <code>InstallDependencies()</code> method executes when Unity loads without action from the user. It reads the package JSON file and calls the <code>InstallNextPackage()</code> method to install the packages.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method called on load to install packages from the JSON file</span></span>
<span id="cb24-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb24-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallDependencies</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb24-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the package JSON file</span></span>
<span id="cb24-6">    packagesToInstall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the current package index</span></span>
<span id="cb24-8">    currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start installing the packages</span></span>
<span id="cb24-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="installnextpackage" class="level4">
<h4 class="anchored" data-anchor-id="installnextpackage"><code>InstallNextPackage</code></h4>
<p>This method installs the next package in the list.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to install the next package in the list</span></span>
<span id="cb25-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb25-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through package list</span></span>
<span id="cb25-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb25-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-7">        PackageData packageData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb25-8"></span>
<span id="cb25-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb25-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb25-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to install package</span></span>
<span id="cb25-13">            addRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageUrl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-14">            EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb25-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb25-19">            currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb25-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Recursively call InstallNextPackage</span></span>
<span id="cb25-21">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="packageinstallationprogress" class="level4">
<h4 class="anchored" data-anchor-id="packageinstallationprogress"><code>PackageInstallationProgress</code></h4>
<p>This method monitors the progress of the package installation and logs whether it was successful. It then triggers the installation process for the next package in the list.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to monitor the progress of package installation</span></span>
<span id="cb26-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PackageInstallationProgress</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb26-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log whether the package installation was successful</span></span>
<span id="cb26-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-9">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully installed: {addRequest.Result.packageId}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Failure</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-13">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to install package: {addRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-15"></span>
<span id="cb26-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unregister the method from the EditorApplication.update </span></span>
<span id="cb26-17">        EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb26-19">        currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb26-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Install the next package in the list</span></span>
<span id="cb26-21">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb26-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ispackageinstalled" class="level4">
<h4 class="anchored" data-anchor-id="ispackageinstalled"><code>IsPackageInstalled</code></h4>
<p>This method verifies whether a package has already been installed or not.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to check if a package is already installed</span></span>
<span id="cb27-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb27-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List the installed packages</span></span>
<span id="cb27-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> listRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">List</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-7"></span>
<span id="cb27-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb27-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb27-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Any</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> package<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb27-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-15">        UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to list packages: {listRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-17"></span>
<span id="cb27-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="readpackagejson" class="level4">
<h4 class="anchored" data-anchor-id="readpackagejson"><code>ReadPackageJson</code></h4>
<p>This method reads the JSON file containing the list of packages to install and returns a <code>PackageList</code> object.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to read the JSON file and return a PackageList object</span></span>
<span id="cb28-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> PackageList <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb28-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the PackagesJSONGUID to an asset path</span></span>
<span id="cb28-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> assetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AssetDatabase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PackagesJSONGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the JSON file content as a string</span></span>
<span id="cb28-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> jsonString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadAllText</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>assetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Deserialize the JSON string into a PackageList object</span></span>
<span id="cb28-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>jsonString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Barracuda Inference YOLOX package. The package extends the functionality of <a href="https://github.com/cj-mills/unity-barracuda-inference-base"><code>unity-barracuda-inference-base</code></a> to perform object detection using YOLOX models.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-barracuda-inference-yolox">unity-barracuda-inference-yolox</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-barracuda-inference-yolox-walkthrough/index.html</guid>
  <pubDate>Sat, 06 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity Barracuda Inference Image Classification Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-barracuda-inference-image-classification-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-barracuda-inference-image-classification">Barracuda Inference Image Classification</a> package extends the functionality of <a href="https://github.com/cj-mills/unity-barracuda-inference-base"><code>unity-barracuda-inference-base</code></a> to perform image classification using computer vision models.</p>
<p>Image classification has numerous potential uses in Unity applications, from gesture recognition to analyzing user-generated content. This package makes it easy to add image classification functionality to Unity applications. Here is a demo video from a project that uses this package for gesture classification.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-image-classification-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-image-classification-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains two C# scripts.</p>
<ol type="1">
<li><code>MultiClassImageClassifier.cs</code>: This script provides functionality to perform image classification using the Barracuda inference engine.</li>
<li><code>PackageInstaller.cs</code>: An Editor utility script for automatically installing a list of dependency packages defined in a JSON file.</li>
</ol>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Barracuda Inference Base package by examining the purpose and functionality of each C# script.</p>
<section id="multiclassimageclassifier.cs" class="level3">
<h3 class="anchored" data-anchor-id="multiclassimageclassifier.cs"><code>MultiClassImageClassifier.cs</code></h3>
<p>This script defines the <code>MultiClassImageClassifier</code> class, which extends the <code>BarracudaModelRunner</code> class from the <a href="https://github.com/cj-mills/unity-barracuda-inference-base">Barracuda Inference Base</a> package to perform image classification. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-barracuda-inference-image-classification/blob/main/Runtime/Scripts/MultiClassImageClassifier.cs">MultiClassImageClassifier.cs</a></li>
</ul>
<section id="serialized-fields" class="level4">
<h4 class="anchored" data-anchor-id="serialized-fields">Serialized Fields</h4>
<p>The <code>MultiClassImageClassifier</code> class includes a field to add class labels with a JSON file.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JSON file with class labels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextAsset classLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>It also includes a field to control how often to unload memory assets when using Barracuda’s Pixel Shader backend. The Pixel Shader backend enables GPU inference on platforms that don’t support Compute Shaders. However, there seems to be a bug in the current version of Barracuda, which does not release unused assets when using this backend. Left unchecked, this can fill up both system and GPU memory. We can address this by manually freeing memory. Doing that every frame can hurt performance, so we’ll only do it at set intervals.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Interval (in frames) for unloading unused assets with Pixel Shader backend"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> pixelShaderUnloadInterval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="private-variables" class="level4">
<h4 class="anchored" data-anchor-id="private-variables">Private Variables</h4>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A counter for the number of frames processed.</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> frameCounter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Indicates if the system supports asynchronous GPU readback</span></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> supportsAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the transpose layer.</span></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> TransposeLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transpose"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The softmax layer.</span></span>
<span id="cb3-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> SoftmaxLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"softmaxLayer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the output layer.</span></span>
<span id="cb3-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> outputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13"></span>
<span id="cb3-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Helper class for deserializing class labels from the JSON file</span></span>
<span id="cb3-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ClassLabels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The class labels</span></span>
<span id="cb3-18"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Texture formats for output processing</span></span>
<span id="cb3-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextureFormat textureFormat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGBA32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTextureFormat renderTextureFormat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGB32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-23"></span>
<span id="cb3-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output textures for processing on CPU and GPU</span></span>
<span id="cb3-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTexture outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="start" class="level4">
<h4 class="anchored" data-anchor-id="start"><code>Start</code></h4>
<p>This method initializes necessary components at the start of the script, such as checking async GPU readback support, loading class labels, and creating output textures.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize necessary components during the start of the script.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb4-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CheckAsyncGPUReadbackSupport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if async GPU readback is supported</span></span>
<span id="cb4-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadClassLabels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load class labels from JSON file</span></span>
<span id="cb4-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateOutputTextures</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize output texture</span></span>
<span id="cb4-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="checkasyncgpureadbacksupport" class="level4">
<h4 class="anchored" data-anchor-id="checkasyncgpureadbacksupport"><code>CheckAsyncGPUReadbackSupport</code></h4>
<p>This method checks if the system supports asynchronous GPU readback</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the system supports async GPU readback</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CheckAsyncGPUReadbackSupport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-4">    supportsAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SystemInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">supportsAsyncGPUReadback</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> supportsAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> supportsAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadandpreparemodel" class="level4">
<h4 class="anchored" data-anchor-id="loadandpreparemodel"><code>LoadAndPrepareModel</code></h4>
<p>This method loads the model and prepares it for execution. It applies the softmax function to the output layer if it’s not already a softmax layer.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load the model and prepare it for execution by applying softmax to the output layer.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAndPrepareModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load and prepare the model with the base implementation</span></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAndPrepareModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-8"></span>
<span id="cb6-9">    outputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">outputs</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-10"></span>
<span id="cb6-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set worker type for WebGL</span></span>
<span id="cb6-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">platform</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> RuntimePlatform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebGLPlayer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-14">        workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PixelShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-16"></span>
<span id="cb6-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the last layer is a Softmax layer</span></span>
<span id="cb6-18">    Layer lastLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">layers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb6-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> lastLayerIsSoftmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lastLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">activation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> Layer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Activation</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Softmax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-20"></span>
<span id="cb6-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the Softmax layer if the last layer is not already a Softmax layer</span></span>
<span id="cb6-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>lastLayerIsSoftmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the Softmax layer</span></span>
<span id="cb6-25">        modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Softmax</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SoftmaxLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> outputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-26">        outputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SoftmaxLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-28"></span>
<span id="cb6-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply transpose operation on the output layer</span></span>
<span id="cb6-30">    modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Transpose</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> outputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb6-31">    outputLayer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TransposeLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-32"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializeengine" class="level4">
<h4 class="anchored" data-anchor-id="initializeengine"><code>InitializeEngine</code></h4>
<p>This method initializes the inference engine and checks if the model uses a Compute Shader backend.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the inference engine and check if the model is using a Compute Shader backend.</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeEngine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeEngine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-7"></span>
<span id="cb7-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if async GPU readback is supported by the engine</span></span>
<span id="cb7-9">    supportsAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Summary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unity.Barracuda.ComputeVarsWithSharedModel"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadclasslabels" class="level4">
<h4 class="anchored" data-anchor-id="loadclasslabels"><code>LoadClassLabels</code></h4>
<p>This method loads the class labels from the provided JSON file.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load the class labels from the provided JSON file.</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadClassLabels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsClassLabelsJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb8-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-8">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Class labels JSON is null or empty."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-11"></span>
<span id="cb8-12">    ClassLabels classLabelsObj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeClassLabels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>classLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateClassLabels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>classLabelsObj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="isclasslabelsjsonnullorempty" class="level4">
<h4 class="anchored" data-anchor-id="isclasslabelsjsonnullorempty"><code>IsClassLabelsJsonNullOrEmpty</code></h4>
<p>This method checks if the provided class labels JSON file is null or empty.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Check if the provided class labels JSON file is null or empty.</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">True if the file is null or empty, otherwise false.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb9-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsClassLabelsJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> classLabels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsNullOrWhiteSpace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>classLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="deserializeclasslabels" class="level4">
<h4 class="anchored" data-anchor-id="deserializeclasslabels"><code>DeserializeClassLabels</code></h4>
<p>This method deserializes the provided class labels JSON string to a <code>ClassLabels</code> object.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Deserialize the provided class labels JSON string to a ClassLabels object.</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"json"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The JSON string to deserialize.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A deserialized ClassLabels object.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb10-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ClassLabels <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeClassLabels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb10-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ClassLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Exception ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-14">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to deserialize class labels JSON: {ex.Message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updateclasslabels" class="level4">
<h4 class="anchored" data-anchor-id="updateclasslabels"><code>UpdateClassLabels</code></h4>
<p>This method updates the <code>classes</code> array with the provided <code>ClassLabels</code> object.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the classes array with the provided ClassLabels object.</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"classLabelsObj"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The ClassLabels object containing the class labels.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateClassLabels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ClassLabels classLabelsObj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>classLabelsObj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-11"></span>
<span id="cb11-12">    classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classLabelsObj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">classes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="createoutputtextures" class="level4">
<h4 class="anchored" data-anchor-id="createoutputtextures"><code>CreateOutputTextures</code></h4>
<p>This method creates the output textures that will store the model output.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Create the output textures that will store the model output.</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb12-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateOutputTextures</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb12-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-6">    outputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> textureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-7">    outputTextureGPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> renderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="executemodel" class="level4">
<h4 class="anchored" data-anchor-id="executemodel"><code>ExecuteModel</code></h4>
<p>This method executes the model on the provided input texture.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Execute the model on the provided input texture and return the output array.</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input texture for the model.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ExecuteModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor input <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tensor</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb13-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ExecuteModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="copyoutputtoarray" class="level4">
<h4 class="anchored" data-anchor-id="copyoutputtoarray"><code>CopyOutputToArray</code></h4>
<p>This method copies the model output to a float array.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Copy the model output to a float array.</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb14-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retrieve the output tensor from the engine</span></span>
<span id="cb14-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PeekOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb14-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PixelShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-11">            frameCounter<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb14-12">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>frameCounter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> pixelShaderUnloadInterval <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-13">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-14">                Resources<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UnloadUnusedAssets</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb14-15">                frameCounter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download the data from the tensor</span></span>
<span id="cb14-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Download</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">shape</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="copyoutputtotexture" class="level4">
<h4 class="anchored" data-anchor-id="copyoutputtotexture"><code>CopyOutputToTexture</code></h4>
<p>This method copies the model output to a texture.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Copy the model output to a texture.</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb15-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor output <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PeekOutput</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputLayer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb15-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store output tensor data in a RenderTexture</span></span>
<span id="cb15-9">        output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="copyoutputwithasyncreadback" class="level4">
<h4 class="anchored" data-anchor-id="copyoutputwithasyncreadback"><code>CopyOutputWithAsyncReadback</code></h4>
<p>This method copies the model output using asynchronous GPU readback if the platform supports it.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Copy the model output using async GPU readback. If not supported, defaults to synchronous readback.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputWithAsyncReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb16-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>supportsAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Async GPU Readback not supported. Defaulting to synchronous readback"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-11"></span>
<span id="cb16-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CopyOutputToTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-13"></span>
<span id="cb16-14">    AsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Request</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> textureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> OnCompleteReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-15"></span>
<span id="cb16-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the output tensor data from the texture</span></span>
<span id="cb16-17">    Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> outputColors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> outputColors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">r</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="getclassname" class="level4">
<h4 class="anchored" data-anchor-id="getclassname"><code>GetClassName</code></h4>
<p>This method gets the class name corresponding to the provided class index.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the class name corresponding to the provided class index.</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"classIndex"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The index of the class to retrieve.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The class name corresponding to the class index.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb17-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetClassName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> classIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>classIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb17-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="oncompletereadback" class="level4">
<h4 class="anchored" data-anchor-id="oncompletereadback"><code>OnCompleteReadback</code></h4>
<p>This callback method handles the completion of async GPU readback.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Callback method for handling the completion of async GPU readback.</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"request"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The async GPU readback request.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnCompleteReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AsyncGPUReadbackRequest request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hasError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-9">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU readback error detected."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-12"></span>
<span id="cb18-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb18-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-17">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load readback data into the output texture and apply changes</span></span>
<span id="cb18-18">            outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb18-19">            outputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb18-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UnityException ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-23">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Message</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LoadRawTextureData: not enough data provided (will result in overread)."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb18-24">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-25">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updating input data size to match the texture size."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-26">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-27">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb18-28">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-29">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unexpected UnityException: {ex.Message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-30">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-31">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-33"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ondisable" class="level4">
<h4 class="anchored" data-anchor-id="ondisable"><code>OnDisable</code></h4>
<p>This method cleans up resources when the script is disabled, such as releasing the temporary render texture.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Clean up resources when the script is disabled.</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">override</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb19-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">base</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb19-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the temporary render texture</span></span>
<span id="cb19-8">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>outputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="packageinstaller.cs" class="level3">
<h3 class="anchored" data-anchor-id="packageinstaller.cs"><code>PackageInstaller.cs</code></h3>
<p>In this section, we will go through the <code>PackageInstaller.cs</code> script and explain how each part of the code works to install the required packages. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-barracuda-inference-image-classification/blob/main/Editor/PackageInstaller.cs">PackageInstaller.cs</a></li>
</ul>
<section id="serializable-classes" class="level4">
<h4 class="anchored" data-anchor-id="serializable-classes">Serializable Classes</h4>
<p>The script defines two serializable classes to hold package data.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold package data</span></span>
<span id="cb20-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb20-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageData</span>
<span id="cb20-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageUrl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold a list of PackageData objects</span></span>
<span id="cb20-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb20-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageList</span>
<span id="cb20-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>These classes are for deserializing the JSON file containing the list of packages to install.</p>
</section>
<section id="packageinstaller-class-variables" class="level4">
<h4 class="anchored" data-anchor-id="packageinstaller-class-variables">PackageInstaller Class Variables</h4>
<p>The <code>PackageInstaller</code> class contains several private static fields.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the AddRequest object for the current package to install.</span></span>
<span id="cb21-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> AddRequest addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of PackageData objects to install.</span></span>
<span id="cb21-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The index of the current package to install.</span></span>
<span id="cb21-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-7"></span>
<span id="cb21-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUID of the JSON file containing the list of packages to install</span></span>
<span id="cb21-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> PackagesJSONGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4a3b2c83681748b49d28cb6ed4f587d9"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="installdependencies" class="level4">
<h4 class="anchored" data-anchor-id="installdependencies"><code>InstallDependencies</code></h4>
<p>The <code>InstallDependencies()</code> method executes when Unity loads without action from the user. It reads the package JSON file and calls the <code>InstallNextPackage()</code> method to install the packages.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method called on load to install packages from the JSON file</span></span>
<span id="cb22-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb22-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallDependencies</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb22-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the package JSON file</span></span>
<span id="cb22-6">    packagesToInstall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the current package index</span></span>
<span id="cb22-8">    currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start installing the packages</span></span>
<span id="cb22-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb22-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="installnextpackage" class="level4">
<h4 class="anchored" data-anchor-id="installnextpackage"><code>InstallNextPackage</code></h4>
<p>This method installs the next package in the list.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to install the next package in the list</span></span>
<span id="cb23-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb23-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through package list</span></span>
<span id="cb23-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-7">        PackageData packageData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-8"></span>
<span id="cb23-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb23-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb23-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to install package</span></span>
<span id="cb23-13">            addRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageUrl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-14">            EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb23-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb23-19">            currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb23-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Recursively call InstallNextPackage</span></span>
<span id="cb23-21">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb23-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="packageinstallationprogress" class="level4">
<h4 class="anchored" data-anchor-id="packageinstallationprogress"><code>PackageInstallationProgress</code></h4>
<p>This method monitors the progress of the package installation and logs whether it was successful. It then triggers the installation process for the next package in the list.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to monitor the progress of package installation</span></span>
<span id="cb24-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PackageInstallationProgress</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb24-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log whether the package installation was successful</span></span>
<span id="cb24-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb24-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-9">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully installed: {addRequest.Result.packageId}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Failure</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb24-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-13">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to install package: {addRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-15"></span>
<span id="cb24-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unregister the method from the EditorApplication.update </span></span>
<span id="cb24-17">        EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb24-19">        currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb24-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Install the next package in the list</span></span>
<span id="cb24-21">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ispackageinstalled" class="level4">
<h4 class="anchored" data-anchor-id="ispackageinstalled"><code>IsPackageInstalled</code></h4>
<p>This method verifies whether a package has already been installed or not.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to check if a package is already installed</span></span>
<span id="cb25-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb25-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List the installed packages</span></span>
<span id="cb25-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> listRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">List</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-7"></span>
<span id="cb25-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb25-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb25-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Any</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> package<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb25-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-15">        UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to list packages: {listRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-17"></span>
<span id="cb25-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="readpackagejson" class="level4">
<h4 class="anchored" data-anchor-id="readpackagejson"><code>ReadPackageJson</code></h4>
<p>This method reads the JSON file containing the list of packages to install and returns a <code>PackageList</code> object.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to read the JSON file and return a PackageList object</span></span>
<span id="cb26-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> PackageList <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb26-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the PackagesJSONGUID to an asset path</span></span>
<span id="cb26-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> assetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AssetDatabase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PackagesJSONGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the JSON file content as a string</span></span>
<span id="cb26-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> jsonString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadAllText</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>assetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Deserialize the JSON string into a PackageList object</span></span>
<span id="cb26-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>jsonString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Barracuda Inference Image Classification package. The package extends the functionality of <a href="https://github.com/cj-mills/unity-barracuda-inference-base"><code>unity-barracuda-inference-base</code></a> to perform image classification using computer vision models.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-barracuda-inference-image-classification">unity-barracuda-inference-image-classification</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-image-classification-demo">Barracuda Image Classification Demo</a>: A simple Unity project demonstrating how to perform image classification with the <code>barracuda-inference-image-classification</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-barracuda-inference-image-classification-walkthrough/index.html</guid>
  <pubDate>Sat, 06 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity YOLOX Utilities Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-yolox-utils-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-yolox-utils">Unity YOLOX Utilities</a> package provides utility functions to work with YOLOX object detection models in Unity.</p>
<p>I use YOLOX models in multiple tutorials. This package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content. Here is a demo video from a project that uses this package.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-yolox-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-yolox-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains three C# scripts.</p>
<ol type="1">
<li><code>YOLOXUtils.cs</code>: This script provides a utility class for YOLOX-related operations.</li>
<li><code>AddCustomDefineSymbol.cs</code>: An Editor script that automatically adds a custom scripting define symbol to the project after the package installs.</li>
<li><code>PackageInstaller.cs</code>: An Editor utility script for automatically installing a list of dependency packages defined in a JSON file.</li>
</ol>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Unity YOLOX Utilities package by examining the purpose and functionality of each C# script.</p>
<section id="yoloxutils.cs" class="level3">
<h3 class="anchored" data-anchor-id="yoloxutils.cs"><code>YOLOXUtils.cs</code></h3>
<p>This script utilizes the <a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit">Unity Bounding Box 2D Toolkit</a> package and contains two main components: the <code>GridCoordinateAndStride</code> struct and the <code>YOLOXUtility</code> class.</p>
<p>The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-yolox-utils/blob/main/Runtime/Scripts/YOLOXUtils.cs">YOLOXUtils.cs</a></li>
</ul>
<section id="gridcoordinateandstride-struct" class="level4">
<h4 class="anchored" data-anchor-id="gridcoordinateandstride-struct"><code>GridCoordinateAndStride</code> struct</h4>
<p>This struct represents the grid coordinates (x and y) and the stride of the grid cell.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// A struct for grid coordinates and stride information.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> GridCoordinateAndStride</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> xCoordinate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> yCoordinate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9"></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes a new instance of the GridCoordinateAndStride struct.</span></span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb1-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"xCoordinate"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The x-coordinate of the grid.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"yCoordinate"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The y-coordinate of the grid.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"stride"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The stride value for the grid.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GridCoordinateAndStride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> xCoordinate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> yCoordinate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xCoordinate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> xCoordinate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yCoordinate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> yCoordinate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="yoloxutility-class" class="level4">
<h4 class="anchored" data-anchor-id="yoloxutility-class"><code>YOLOXUtility</code> class</h4>
<p>This static utility class provides methods for YOLOX-related operations.</p>
<section id="generategridcoordinateswithstrides" class="level5">
<h5 class="anchored" data-anchor-id="generategridcoordinateswithstrides"><code>GenerateGridCoordinatesWithStrides</code></h5>
<p>This method generates a list of <code>GridCoordinateAndStride</code> objects based on the input strides, grid height, and grid width.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generates a list of GridCoordinateAndStride objects based on input strides, height, and width.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"strides"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of stride values.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"height"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The height of the grid.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"width"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The width of the grid.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of GridCoordinateAndStride objects.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb2-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridCoordinateAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateGridCoordinatesWithStrides</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate a list of GridCoordinateAndStride objects by iterating through possible grid positions and strides</span></span>
<span id="cb2-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SelectMany</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> Enumerable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-12">                                                   <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SelectMany</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> Enumerable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-13">                                                                                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GridCoordinateAndStride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="generateboundingboxproposals" class="level5">
<h5 class="anchored" data-anchor-id="generateboundingboxproposals"><code>GenerateBoundingBoxProposals</code></h5>
<p>This method generates a list of bounding box proposals based on the model output, grid strides, and other parameters.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generates a list of bounding box proposals based on the model output, grid strides, and other parameters.</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"modelOutput"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The output of the YOLOX model.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"gridCoordsAndStrides"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of GridCoordinateAndStride objects.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"numClasses"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The number of object classes.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"numBBoxFields"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The number of bounding box fields.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidenceThreshold"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The confidence threshold for filtering proposals.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of BBox2D objects representing the generated proposals.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb3-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BBox2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateBoundingBoxProposals</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridCoordinateAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> gridCoordsAndStrides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numClasses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numBBoxFields<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> proposalLength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numClasses <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numBBoxFields<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13"></span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Process the model output to generate a list of BBox2D objects</span></span>
<span id="cb3-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> gridCoordsAndStrides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Select</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> anchorIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span></span>
<span id="cb3-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> startIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> anchorIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposalLength<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-18"></span>
<span id="cb3-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate coordinates and dimensions of the bounding box</span></span>
<span id="cb3-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> centerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>startIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xCoordinate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> centerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>startIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yCoordinate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>startIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-23">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>startIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> grid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-24"></span>
<span id="cb3-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize BBox2D object</span></span>
<span id="cb3-26">        BBox2D obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BBox2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb3-27">            centerX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-28">            centerY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-29">            w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-30"></span>
<span id="cb3-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute objectness and class probabilities for each bounding box</span></span>
<span id="cb3-32">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>startIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb3-33"></span>
<span id="cb3-34">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> classIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> classIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> numClasses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> classIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb3-35">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-36">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> boxClassScore <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelOutput<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>startIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> numBBoxFields <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> classIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb3-37">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> boxProb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> boxClassScore<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-38"></span>
<span id="cb3-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the object with the highest probability and class label</span></span>
<span id="cb3-40">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxProb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-41">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-42">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-43">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boxProb<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-44">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-45">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-46"></span>
<span id="cb3-47">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-48">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">})</span></span>
<span id="cb3-49">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Where</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Filter by confidence threshold</span></span>
<span id="cb3-50">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OrderByDescending</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort by probability</span></span>
<span id="cb3-51">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
</section>
<section id="addcustomdefinesymbol.cs" class="level3">
<h3 class="anchored" data-anchor-id="addcustomdefinesymbol.cs"><code>AddCustomDefineSymbol.cs</code></h3>
<p>This Editor script contains a class that adds a custom define symbol to the project. We can use this custom symbol to prevent code that relies on this package from executing unless the YOLOX Utilities package is present. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-yolox-utils/blob/main/Editor/AddCustomDefineSymbol.cs">AddCustomDefineSymbol.cs</a></li>
</ul>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">YOLOXUtils</span></span>
<span id="cb4-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DependencyDefineSymbolAdder</span>
<span id="cb4-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> CustomDefineSymbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CJM_YOLOX_UTILS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9"></span>
<span id="cb4-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb4-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddCustomDefineSymbol</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-13">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the currently selected build target group</span></span>
<span id="cb4-14">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> buildTargetGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorUserBuildSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedBuildTargetGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retrieve the current scripting define symbols for the selected build target group</span></span>
<span id="cb4-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-17"></span>
<span id="cb4-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the CustomDefineSymbol is already present in the defines string</span></span>
<span id="cb4-19">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CustomDefineSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb4-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append the CustomDefineSymbol to the defines string, separated by a semicolon</span></span>
<span id="cb4-22">                defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";{CustomDefineSymbol}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-23">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the updated defines string as the new scripting define symbols for the selected build target group</span></span>
<span id="cb4-24">                PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-25">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log a message in the Unity console to inform the user that the custom define symbol has been added</span></span>
<span id="cb4-26">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Added custom define symbol '{CustomDefineSymbol}' to the project."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
<section id="packageinstaller.cs" class="level3">
<h3 class="anchored" data-anchor-id="packageinstaller.cs"><code>PackageInstaller.cs</code></h3>
<p>In this section, we will go through the <code>PackageInstaller.cs</code> script and explain how each part of the code works to install the required packages. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-yolox-utils/blob/main/Editor/PackageInstaller.cs">PackageInstaller.cs</a></li>
</ul>
<section id="serializable-classes" class="level4">
<h4 class="anchored" data-anchor-id="serializable-classes">Serializable Classes</h4>
<p>The script defines two serializable classes to hold package data.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold package data</span></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageData</span>
<span id="cb5-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageUrl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold a list of PackageData objects</span></span>
<span id="cb5-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageList</span>
<span id="cb5-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>These classes are for deserializing the JSON file containing the list of packages to install.</p>
</section>
<section id="packageinstaller-class-variables" class="level4">
<h4 class="anchored" data-anchor-id="packageinstaller-class-variables">PackageInstaller Class Variables</h4>
<p>The PackageInstaller class contains several private static fields.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the AddRequest object for the current package to install.</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> AddRequest addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of PackageData objects to install.</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The index of the current package to install.</span></span>
<span id="cb6-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUID of the JSON file containing the list of packages to install</span></span>
<span id="cb6-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> PackagesJSONGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"487301ab13cf457b9c2ed07a3ec5c004"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="installdependencies" class="level4">
<h4 class="anchored" data-anchor-id="installdependencies"><code>InstallDependencies</code></h4>
<p>The <code>InstallDependencies()</code> method executes when Unity loads without action from the user. It reads the package JSON file and calls the <code>InstallNextPackage()</code> method to install the packages.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method called on load to install packages from the JSON file</span></span>
<span id="cb7-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallDependencies</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the package JSON file</span></span>
<span id="cb7-6">    packagesToInstall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the current package index</span></span>
<span id="cb7-8">    currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start installing the packages</span></span>
<span id="cb7-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="installnextpackage" class="level4">
<h4 class="anchored" data-anchor-id="installnextpackage"><code>InstallNextPackage</code></h4>
<p>This method installs the next package in the list.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to install the next package in the list</span></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb8-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through package list</span></span>
<span id="cb8-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb8-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-7">        PackageData packageData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb8-8"></span>
<span id="cb8-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb8-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb8-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to install package</span></span>
<span id="cb8-13">            addRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageUrl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-14">            EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb8-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb8-19">            currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb8-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Recursively call InstallNextPackage</span></span>
<span id="cb8-21">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb8-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="packageinstallationprogress" class="level4">
<h4 class="anchored" data-anchor-id="packageinstallationprogress"><code>PackageInstallationProgress</code></h4>
<p>This method monitors the progress of the package installation and logs whether it was successful. It then triggers the installation process for the next package in the list.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to monitor the progress of package installation</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PackageInstallationProgress</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log whether the package installation was successful</span></span>
<span id="cb9-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-9">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully installed: {addRequest.Result.packageId}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Failure</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-13">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to install package: {addRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-15"></span>
<span id="cb9-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unregister the method from the EditorApplication.update </span></span>
<span id="cb9-17">        EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb9-19">        currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb9-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Install the next package in the list</span></span>
<span id="cb9-21">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb9-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ispackageinstalled" class="level4">
<h4 class="anchored" data-anchor-id="ispackageinstalled"><code>IsPackageInstalled</code></h4>
<p>This method verifies whether a package has already been installed or not.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to check if a package is already installed</span></span>
<span id="cb10-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List the installed packages</span></span>
<span id="cb10-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> listRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">List</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-7"></span>
<span id="cb10-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb10-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Any</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> package<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb10-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-15">        UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to list packages: {listRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-17"></span>
<span id="cb10-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="readpackagejson" class="level4">
<h4 class="anchored" data-anchor-id="readpackagejson"><code>ReadPackageJson</code></h4>
<p>This method reads the JSON file containing the list of packages to install and returns a <code>PackageList</code> object.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to read the JSON file and return a PackageList object</span></span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> PackageList <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb11-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the PackagesJSONGUID to an asset path</span></span>
<span id="cb11-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> assetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AssetDatabase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PackagesJSONGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the JSON file content as a string</span></span>
<span id="cb11-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> jsonString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadAllText</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>assetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Deserialize the JSON string into a PackageList object</span></span>
<span id="cb11-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>jsonString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Unity YOLOX Utilities package. The package provides utility functions to work with YOLOX object detection models in Unity.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-yolox-utils">unity-yolox-utils</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-yolox-utils-walkthrough/index.html</guid>
  <pubDate>Fri, 05 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity Human Pose 2D Toolkit Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-human-pose-2d-toolkit-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-human-pose-2d-toolkit">Unity Human Pose 2D Toolkit</a> provides an easy-to-use and customizable solution to work with and visualize 2D human poses on a Unity canvas.</p>
<p>Some of my tutorials involve using 2D pose estimation models in Unity applications. This package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content. Check out the demo video below to see this package in action.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-posenet-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-posenet-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains three C# scripts and prefabs to construct 2D human poses.</p>
<section id="c-scripts" class="level3">
<h3 class="anchored" data-anchor-id="c-scripts">C# Scripts</h3>
<ol type="1">
<li><code>HumanPose2DUtils.cs</code>: This script provides functionality to work with 2D pose skeletons for pose estimation tasks.</li>
<li><code>HumanPose2DVisualizer.cs</code>: This script displays 2D human pose skeletons on a Unity canvas.</li>
<li><code>AddCustomDefineSymbol.cs</code>: An Editor script that automatically adds a custom scripting define symbol to the project after the package installs.</li>
</ol>
</section>
<section id="prefabs" class="level3">
<h3 class="anchored" data-anchor-id="prefabs">Prefabs</h3>
<ol type="1">
<li><code>BonePrefab.prefab</code>: The HumanPose2DVisualizer.cs script uses this prefab to construct the bones connecting points in pose skeletons.</li>
<li><code>JointPrefab.prefab</code>: An Image prefab used to visualize the points in pose skeletons.</li>
<li><code>PoseContainerPrefab.prefab</code>: This prefab is for pose containers that hold the joints and bones for pose skeletons.</li>
<li><code>HumanPose2DVisualizer.prefab</code>: This prefab helps simplify adding 2D human pose visualization to a Unity scene. The prefab already has the HumanPose2DVisualizer script attached and has a child Canvas component.</li>
</ol>
</section>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Unity Human Pose 2D Toolkit package by examining the purpose and functionality of each C# script.</p>
<section id="humanpose2dutils.cs" class="level3">
<h3 class="anchored" data-anchor-id="humanpose2dutils.cs"><code>HumanPose2DUtils.cs</code></h3>
<p>The HumanPose2DUtils.cs script provides functionality to work with 2D pose skeletons for pose estimation tasks. It contains utility classes and structs for managing 2D human pose data. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-human-pose-2d-toolkit/blob/main/Runtime/Scripts/HumanPose2DUtils.cs">HumanPose2DUtils.cs</a></li>
</ul>
<section id="bodypart2d-struct" class="level4">
<h4 class="anchored" data-anchor-id="bodypart2d-struct"><code>BodyPart2D</code> struct</h4>
<p>This struct represents a single body part in 2D space with its index, coordinates, and probability.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Represents a single body part in 2D space with its index, coordinates, and probability.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> BodyPart2D</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The index of the body part</span></span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2 coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The 2D coordinates of the body part</span></span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The probability of the detected body part</span></span>
<span id="cb1-9"></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes a new instance of the BodyPart2D struct.</span></span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb1-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The index of the body part.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"coordinates"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The 2D coordinates of the body part.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"prob"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The probability of the detected body part.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BodyPart2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2 coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coordinates</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="humanpose2d-struct" class="level4">
<h4 class="anchored" data-anchor-id="humanpose2d-struct"><code>HumanPose2D</code> struct</h4>
<p>This struct represents a detected human pose in 2D space with its index and an array of body parts.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Represents a detected human pose in 2D space with its index and an array of body parts.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> HumanPose2D</span>
<span id="cb2-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The index of the detected human pose</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> BodyPart2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// An array of the body parts that make up the human pose</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb2-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes a new instance of the HumanPose2D struct.</span></span>
<span id="cb2-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb2-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The index of the detected human pose.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bodyParts"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of body parts that make up the human pose.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HumanPose2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BodyPart2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bodyParts</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="humanpose2dutility-static-class" class="level4">
<h4 class="anchored" data-anchor-id="humanpose2dutility-static-class"><code>HumanPose2DUtility</code> static class</h4>
<p>This class contains a single static method that scales and optionally mirrors the coordinates of a body part in a pose skeleton to match the in-game screen and display resolutions.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> HumanPose2DUtility</span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb3-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scales and optionally mirrors the coordinates of a body part in a pose skeleton to match the in-game screen and display resolutions.</span></span>
<span id="cb3-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb3-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"coordinates"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The (x,y) coordinates for a BodyPart object.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of the input image used for pose estimation.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of the in-game screen where the body part will be displayed.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"offset"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An offset to apply to the body part coordinates when scaling.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"mirrorScreen"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A boolean flag to indicate if the body part coordinates should be mirrored horizontally (default is false).</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> Vector2 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBodyPartCoords</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2 coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2 screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest dimension of the screen</span></span>
<span id="cb3-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest input dimension</span></span>
<span id="cb3-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> minInputDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and input dimensions</span></span>
<span id="cb3-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minImgScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> minInputDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and display</span></span>
<span id="cb3-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScaleX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScaleY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-23">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayScaleX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> displayScaleY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-24"></span>
<span id="cb3-25"></span>
<span id="cb3-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale body part coordinates to in-game screen resolution and flip the coordinates vertically</span></span>
<span id="cb3-27">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-28">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-29"></span>
<span id="cb3-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mirror bounding box across screen</span></span>
<span id="cb3-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mirrorScreen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-32">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-33">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-34">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-35"></span>
<span id="cb3-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale coordinates to display resolution</span></span>
<span id="cb3-37">        coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-38">        coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-39"></span>
<span id="cb3-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Offset the coordinates coordinates based on the difference between the in-game screen and display</span></span>
<span id="cb3-41">        coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-42">        coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-43"></span>
<span id="cb3-44">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> coordinates<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-45">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-46"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="humanpose2dvisualizer.cs" class="level3">
<h3 class="anchored" data-anchor-id="humanpose2dvisualizer.cs"><code>HumanPose2DVisualizer.cs</code></h3>
<p>The HumanPose2DVisualizer script is a Unity C# <code>MonoBehaviour</code> class that displays 2D human pose skeletons on a Unity canvas. It creates, updates, and manages UI elements for visualizing them based on the provided <code>HumanPose2D</code> array. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-human-pose-2d-toolkit/blob/main/Runtime/Scripts/HumanPose2DVisualizer.cs">HumanPose2DVisualizer.cs</a></li>
</ul>
<section id="serialized-fields" class="level4">
<h4 class="anchored" data-anchor-id="serialized-fields">Serialized Fields</h4>
<p>The script contains several fields for prefabs and configuring pose skeleton visualizations.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Main canvas to display poses</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UI Components"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The main canvas to display poses"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Canvas canvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prefabs for pose containers, joints, and bones</span></span>
<span id="cb4-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The prefab for the pose container, which holds the joints and bones"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RectTransform poseContainerPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The prefab for the joint image"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Image jointPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The prefab for the bone RectTransform"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RectTransform bonePrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-13"></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Configuration and styling</span></span>
<span id="cb4-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Configuration"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The JSON file containing body part connection information"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextAsset bodyPartConnectionsFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The color of the bones"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Color boneColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">green</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The color of the joints"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb4-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Color jointColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">green</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="serialized-classes" class="level4">
<h4 class="anchored" data-anchor-id="serialized-classes">Serialized Classes</h4>
<p>There are a couple of nested serialized classes to store body part connection information from a JSON file.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable classes to store body part connection information from JSON</span></span>
<span id="cb5-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> BodyPartConnection</span>
<span id="cb5-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> from<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Index of the starting body part</span></span>
<span id="cb5-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> to<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Index of the ending body part</span></span>
<span id="cb5-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-8"></span>
<span id="cb5-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> BodyPartConnectionList</span>
<span id="cb5-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BodyPartConnection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of body part connections</span></span>
<span id="cb5-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="private-variables" class="level4">
<h4 class="anchored" data-anchor-id="private-variables">Private Variables</h4>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Variables to store runtime instances and data</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BodyPartConnection<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of body part connections</span></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> poseContainers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of instantiated pose containers</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> joints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Nested list of instantiated joint images</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;</span> bones <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Nested list of instantiated bone RectTransforms</span></span>
<span id="cb6-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Confidence threshold for displaying poses</span></span></code></pre></div>
</section>
<section id="guid-constants" class="level4">
<h4 class="anchored" data-anchor-id="guid-constants">GUID Constants</h4>
<p>These are the GUIDs of the default assets.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUIDs of the default assets</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> PoseContainerPrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12c840be0a8d4adc879fc14fb79a316d"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> JointPrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"d90f7f2e5b8f4daa885f9441f0f33427"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> BonePrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ed947d23b5354617b130aa8ee0cc610b"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> BodyPartConnectionsFileGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0fc008c60a8e44589674b0f455384a5b"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="reset" class="level4">
<h4 class="anchored" data-anchor-id="reset"><code>Reset</code></h4>
<p>This method sets the default assets from the project using their GUIDs. It uses <code>AssetDatabase</code> to find them and set the default values. This method will only work in the Unity Editor, not in a build.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Reset is called when the user hits the Reset button in the Inspector's context menu</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// or when adding the component the first time. This function is only called in editor mode.</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb8-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load default assets only in the Unity Editor, not in a build</span></span>
<span id="cb8-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb8-9">    poseContainerPrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>PoseContainerPrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-10">    jointPrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>JointPrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-11">    bonePrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>BonePrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-12">    bodyPartConnectionsFile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>TextAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>BodyPartConnectionsFileGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb8-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loaddefaultasset" class="level4">
<h4 class="anchored" data-anchor-id="loaddefaultasset"><code>LoadDefaultAsset</code></h4>
<p>This method provides a generic way to load default assets for the specified fields using their GUIDs.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Loads the default asset for the specified type using its GUID.</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;typeparam</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"T"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The type of asset to be loaded.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/typeparam&gt;</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"guid"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GUID of the default asset.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The loaded asset of the specified type.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;remarks&gt;</span></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is only executed in the Unity Editor, not in builds.</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/remarks&gt;</span></span>
<span id="cb9-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> T LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> guid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> where T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span></span>
<span id="cb9-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb9-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the asset from the AssetDatabase using its GUID</span></span>
<span id="cb9-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssetDatabase</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAssetAtPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssetDatabase</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>guid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb9-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb9-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb9-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="start" class="level4">
<h4 class="anchored" data-anchor-id="start"><code>Start</code></h4>
<p>This method runs when the script initializes and loads the body part connection list from the JSON file.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb10-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadBodyPartConnectionList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb10-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadbodypartconnectionlist" class="level4">
<h4 class="anchored" data-anchor-id="loadbodypartconnectionlist"><code>LoadBodyPartConnectionList</code></h4>
<p>This method deserializes the JSON file specifying the body part connections for pose skeletons.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load the JSON file</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadBodyPartConnectionList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb11-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb11-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-8">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JSON file is null or empty."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-11"></span>
<span id="cb11-12">    bodyPartConnections <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeBodyPartConnectionsList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bodyPartConnectionsFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bodyPartConnections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="isjsonnullorempty" class="level4">
<h4 class="anchored" data-anchor-id="isjsonnullorempty"><code>IsJsonNullOrEmpty</code></h4>
<p>This method checks if the JSON file is null or empty.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Check if JSON file is null or empty</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb12-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> bodyPartConnectionsFile <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsNullOrWhiteSpace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bodyPartConnectionsFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="deserializebodypartconnectionslist" class="level4">
<h4 class="anchored" data-anchor-id="deserializebodypartconnectionslist"><code>DeserializeBodyPartConnectionsList</code></h4>
<p>This method deserializes the JSON string into a <code>BodyPartConnectionList</code>.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Deserialize the JSON string</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> BodyPartConnectionList <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeBodyPartConnectionsList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb13-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BodyPartConnectionList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Exception ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-12">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to deserialize class labels JSON: {ex.Message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-13">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updateposevisualizations" class="level4">
<h4 class="anchored" data-anchor-id="updateposevisualizations"><code>UpdatePoseVisualizations</code></h4>
<p>This method updates pose visualizations based on the provided human poses and a confidence threshold.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Updates the pose visualizations based on the provided human poses and a confidence threshold.</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"humanPoses"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of human poses to visualize</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"confidenceThreshold"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The minimum confidence required to display a pose (default is 0.5f)</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdatePoseVisualizations</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>HumanPose2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> humanPoses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> confidenceThreshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">confidenceThreshold</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-9"></span>
<span id="cb14-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Instantiate pose containers, joint images, and bone RectTransforms as needed to match the number of humanPoses</span></span>
<span id="cb14-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> humanPoses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-13">        RectTransform newPoseContainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>poseContainerPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> canvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-14">        poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newPoseContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-15">        joints<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb14-16">        bones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb14-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-18"></span>
<span id="cb14-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb14-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> humanPoses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-23">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get references to joint and bone containers for the current pose</span></span>
<span id="cb14-24">            RectTransform jointContainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JointContainer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb14-25">            RectTransform boneContainer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BoneContainer"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb14-26"></span>
<span id="cb14-27">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the joint positions and visibility</span></span>
<span id="cb14-28">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateJoints</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>humanPoses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bodyParts</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> jointContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> joints<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb14-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the bone positions, rotations, and visibility</span></span>
<span id="cb14-30">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBones</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>humanPoses<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bodyParts</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> boneContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> joints<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> bones<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb14-31"></span>
<span id="cb14-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the pose container active</span></span>
<span id="cb14-33">            poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-34">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-35">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb14-36">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-37">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the pose container inactive for unused containers</span></span>
<span id="cb14-38">            poseContainers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-39">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-41"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="screentocanvaspoint" class="level4">
<h4 class="anchored" data-anchor-id="screentocanvaspoint"><code>ScreenToCanvasPoint</code></h4>
<p>This method convert a screen point to a local one within the given canvas <code>RectTransform</code>.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Converts a screen point to a local point within the given canvas RectTransform.</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"canvas"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The canvas RectTransform to convert the point to</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenPoint"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The screen point to convert</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A Vector2 representing the local point within the canvas RectTransform</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb15-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RectTransform canvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2 screenPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-9">    RectTransformUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenPointToLocalPointInRectangle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>canvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">out</span> Vector2 localPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> localPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatejoints" class="level4">
<h4 class="anchored" data-anchor-id="updatejoints"><code>UpdateJoints</code></h4>
<p>This method updates joint visualizations based on the provided body parts, adjusting their positions and visibility.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Updates the joint visualizations based on the provided body parts, adjusting their positions and visibility.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bodyParts"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of body parts containing position and probability data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"jointContainer"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The RectTransform containing joint images</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"jointsList"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of instantiated joint images</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateJoints</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BodyPart2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RectTransform jointContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Instantiate joint images as needed to match the number of bodyParts</span></span>
<span id="cb16-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-12">        Image newJoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>jointPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> jointContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-13">        jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newJoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-15"></span>
<span id="cb16-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb16-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> confidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-19">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-20">            Image joint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-21">            RectTransform jointRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> joint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-22">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update joint position</span></span>
<span id="cb16-23">            jointRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchoredPosition</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>jointContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coordinates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update joint color</span></span>
<span id="cb16-25">            joint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jointColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-26">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the joint game object active</span></span>
<span id="cb16-27">            joint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-29">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb16-30">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-31">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the joint game object inactive if below the confidence threshold</span></span>
<span id="cb16-32">            jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-33">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatebones" class="level4">
<h4 class="anchored" data-anchor-id="updatebones"><code>UpdateBones</code></h4>
<p>This method updates bone visualizations based on the provided body parts and joint positions, adjusting their positions, rotations, and visibility.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Updates the bone visualizations based on the provided body parts and joint positions, adjusting their positions, rotations, and visibility.</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bodyParts"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of body parts containing position and probability data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"boneContainer"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The RectTransform containing bone RectTransforms</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"jointsList"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of instantiated joint images</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bonesList"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of instantiated bone RectTransforms</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBones</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BodyPart2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RectTransform boneContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bonesList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Instantiate bone RectTransforms as needed to match the number of bodyPartConnections</span></span>
<span id="cb17-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bonesList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-13">        RectTransform newBone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bonePrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> boneContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-14">        bonesList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newBone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-16"></span>
<span id="cb17-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bonesList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb17-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-19">        Image fromJoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb17-20">        Image toJoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> jointsList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb17-21"></span>
<span id="cb17-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If both connected joints are active, display the bone</span></span>
<span id="cb17-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fromJoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> toJoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb17-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-25">            RectTransform bone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bonesList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb17-26">            Vector2 fromJointPos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coordinates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-27">            Vector2 toJointPos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bodyParts<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>bodyPartConnections<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">to</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coordinates</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-28">            Vector2 direction <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> toJointPos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fromJointPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-29">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> distance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">magnitude</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-30">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> angle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Atan2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> direction<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rad2Deg</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-31"></span>
<span id="cb17-32">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update bone size based on the distance between joints</span></span>
<span id="cb17-33">            bone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>distance<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-34"></span>
<span id="cb17-35">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the bone position and update it</span></span>
<span id="cb17-36">            Vector2 bonePos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>fromJointPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> toJointPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fromJointPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> toJointPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-37">            bone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchoredPosition</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boneContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bonePos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-38"></span>
<span id="cb17-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update bone rotation based on the angle between joints</span></span>
<span id="cb17-40">            bone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localEulerAngles</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> angle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-41">            bone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boneColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-42">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the bone game object active</span></span>
<span id="cb17-43">            bone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-44">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-45">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb17-46">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-47">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the bone game object inactive if below the confidence threshold</span></span>
<span id="cb17-48">            bonesList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-49">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-50">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-51"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="addcustomdefinesymbol.cs" class="level3">
<h3 class="anchored" data-anchor-id="addcustomdefinesymbol.cs"><code>AddCustomDefineSymbol.cs</code></h3>
<p>This Editor script contains a class that adds a custom define symbol to the project. We can use this custom symbol to prevent code that relies on this package from executing unless the Human Pose 2D Toolkit package is present. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-human-pose-2d-toolkit/blob/main/Editor/AddCustomDefineSymbol.cs">AddCustomDefineSymbol.cs</a></li>
</ul>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HumanPose2DToolkit</span></span>
<span id="cb18-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DependencyDefineSymbolAdder</span>
<span id="cb18-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> CustomDefineSymbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CJM_HUMAN_POSE_2D_TOOLKIT"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-9"></span>
<span id="cb18-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb18-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddCustomDefineSymbol</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb18-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-13">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the currently selected build target group</span></span>
<span id="cb18-14">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> buildTargetGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorUserBuildSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedBuildTargetGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retrieve the current scripting define symbols for the selected build target group</span></span>
<span id="cb18-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-17"></span>
<span id="cb18-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the CustomDefineSymbol is already present in the defines string</span></span>
<span id="cb18-19">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CustomDefineSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb18-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append the CustomDefineSymbol to the defines string, separated by a semicolon</span></span>
<span id="cb18-22">                defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";{CustomDefineSymbol}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-23">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the updated defines string as the new scripting define symbols for the selected build target group</span></span>
<span id="cb18-24">                PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-25">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log a message in the Unity console to inform the user that the custom define symbol has been added</span></span>
<span id="cb18-26">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Added custom define symbol '{CustomDefineSymbol}' to the project."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Unity Human Pose 2D Toolkit package. The package provides an easy-to-use and customizable solution to work with and visualize 2D human poses on a Unity canvas.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-barracuda-inference-posenet">unity-human-pose-2d-toolkit</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-inference-posenet-demo">Barracuda Inference PoseNet Demo</a>: A simple Unity project demonstrating how to perform 2D human pose estimation with the <code>barracuda-inference-posenet</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-human-pose-2d-toolkit-walkthrough/index.html</guid>
  <pubDate>Fri, 05 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity Bounding Box 2D Toolkit Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-bounding-box-2d-toolkit-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit">Unity Bounding Box 2D Toolkit</a> package provides an easy-to-use and customizable solution to work with and visualize 2D bounding boxes on a Unity canvas.</p>
<p>Some of my tutorials involve using 2D object detection models in Unity applications. This package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content. Check out the demo video below to see this package in action.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-yolox-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-yolox-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains three C# scripts and prefabs to construct 2D bounding boxes.</p>
<section id="c-scripts" class="level3">
<h3 class="anchored" data-anchor-id="c-scripts">C# Scripts</h3>
<ol type="1">
<li><code>BBox2DUtils.cs</code>: This script provides functionality to work with 2D bounding boxes for object detection tasks.</li>
<li><code>BoundingBox2DVisualizer.cs</code>: This script creates, updates, and manages UI elements for visualizing 2D bounding boxes.</li>
<li><code>AddCustomDefineSymbol.cs</code>: An Editor script that automatically adds a custom scripting define symbol to the project after the package installs.</li>
</ol>
</section>
<section id="prefabs" class="level3">
<h3 class="anchored" data-anchor-id="prefabs">Prefabs</h3>
<ol type="1">
<li><code>BoundingBoxBorderPrefab.prefab</code>: The BoundingBox2DVisualizer script uses this prefab to construct the sides of bounding boxes.</li>
<li><code>DotPrefab.prefab</code>: An Image prefab used to display a dot at the center of bounding boxes</li>
<li><code>LabelPrefab.prefab</code>: A text prefab used to display the class label associated probability score for a bounding box.</li>
<li><code>LabelBackgroundPrefab.prefab</code>: An Image prefab used as the background for the LabelPrefab.</li>
<li><code>BBox2DVisualizer.prefab</code>: This prefab helps simplify adding 2D bounding box visualization to a Unity scene. The prefab already has the BoundingBox2DVisualizer script attached and has a child Canvas component.</li>
</ol>
</section>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Unity Bounding Box 2D Toolkit package by examining the purpose and functionality of each C# script.</p>
<section id="bbox2dutils.cs" class="level3">
<h3 class="anchored" data-anchor-id="bbox2dutils.cs"><code>BBox2DUtils.cs</code></h3>
<p>The BBox2DUtils.cs script provides functionality to work with 2D bounding boxes for object detection tasks. It contains two structs and a utility class. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit/blob/main/Runtime/Scripts/BBox2DUtils.cs">BBox2DUtils.cs</a></li>
</ul>
<section id="bbox2d-struct" class="level4">
<h4 class="anchored" data-anchor-id="bbox2d-struct"><code>BBox2D</code> struct</h4>
<p>This struct contains the coordinates (x0, y0), width, height, class index, and probability value for a 2D bounding box.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// A struct that represents a 2D bounding box.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb1-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> BBox2D</span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12"></span>
<span id="cb1-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb1-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes a new instance of the BBox2D struct.</span></span>
<span id="cb1-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb1-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"x0"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The x-coordinate of the top-left corner.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"y0"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The y-coordinate of the top-left corner.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"width"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The width of the bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"height"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The height of the bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The class index of the object.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"prob"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The probability of the object belonging to the given class.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb1-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BBox2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">index</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-29">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-30">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb1-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="bbox2dinfo-struct" class="level4">
<h4 class="anchored" data-anchor-id="bbox2dinfo-struct"><code>BBox2DInfo</code> struct</h4>
<p>This struct contains a BBox2D object, class label, and color.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// A struct for 2D bounding box information.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> BBox2DInfo</span>
<span id="cb2-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> BBox2D bbox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Color color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9"></span>
<span id="cb2-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb2-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes a new instance of the BBox2DInfo struct.</span></span>
<span id="cb2-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"boundingBox"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The 2D bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"label"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The class label.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"width"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The bounding box color.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb2-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BBox2DInfo</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BBox2D boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb2-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="bbox2dutility-class" class="level4">
<h4 class="anchored" data-anchor-id="bbox2dutility-class"><code>BBox2DUtility</code> class</h4>
<p>This class provides various utility methods for working with bounding boxes.</p>
<section id="calcunionarea" class="level5">
<h5 class="anchored" data-anchor-id="calcunionarea"><code>CalcUnionArea</code></h5>
<p>This method calculates the union area between two bounding boxes.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Calculates the union area between two bounding boxes.</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"a"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The first bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"b"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The second bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The union area between the two bounding boxes.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb3-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcUnionArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BBox2D a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BBox2D b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the coordinates and dimensions of the union area</span></span>
<span id="cb3-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-14"></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the union area of two bounding boxes</span></span>
<span id="cb3-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="calcinterarea" class="level5">
<h5 class="anchored" data-anchor-id="calcinterarea"><code>CalcInterArea</code></h5>
<p>This method calculates the intersection area between two bounding boxes.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Calculates the intersection area between two bounding boxes.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"a"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The first bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"b"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The second bounding box.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The intersection area between the two bounding boxes.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcInterArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BBox2D a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BBox2D b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the coordinates and dimensions of the intersection area</span></span>
<span id="cb4-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14"></span>
<span id="cb4-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the intersection area of two bounding boxes</span></span>
<span id="cb4-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="nmssortedboxes" class="level5">
<h5 class="anchored" data-anchor-id="nmssortedboxes"><code>NMSSortedBoxes</code></h5>
<p>This method performs Non-Maximum Suppression (NMS) on a sorted list of bounding box proposals, retaining only those with an intersection over union (IoU) value below the threshold.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Performs Non-Maximum Suppression (NMS) on a sorted list of bounding box proposals.</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"proposals"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A sorted list of BBox2D objects representing the bounding box proposals.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"nms_thresh"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The NMS threshold for filtering proposals (default is 0.45).</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A list of integers representing the indices of the retained proposals.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NMSSortedBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>BBox2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> nms_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through the proposals and perform non-maximum suppression</span></span>
<span id="cb5-10">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb5-11"></span>
<span id="cb5-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb5-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the intersection and union areas</span></span>
<span id="cb5-15">        BBox2D a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">All</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span></span>
<span id="cb5-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-18">            BBox2D b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb5-19">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcInterArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-20">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcUnionArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-21">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Keep the proposal if its IoU with all previous proposals is below the NMS threshold</span></span>
<span id="cb5-22">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> nms_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb5-24"></span>
<span id="cb5-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the proposal passes the NMS check, add its index to the list</span></span>
<span id="cb5-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>keep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-28"></span>
<span id="cb5-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="scaleboundingbox" class="level5">
<h5 class="anchored" data-anchor-id="scaleboundingbox"><code>ScaleBoundingBox</code></h5>
<p>This method scales and optionally mirrors the bounding box of a detected object to match the in-game screen and display resolutions.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scales and optionally mirrors the bounding box of a detected object to match the in-game screen and display resolutions.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"boundingBox"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A BBox2D object containing the bounding box information for a detected object.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"inputDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of the input image used for object detection.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of the in-game screen where the bounding boxes will be displayed.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"offset"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An offset to apply to the bounding box coordinates when scaling.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"mirrorScreen"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A boolean flag to indicate if the bounding boxes should be mirrored horizontally (default is false).</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb6-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> BBox2D <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BBox2D boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2 screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest dimension of the screen</span></span>
<span id="cb6-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest input dimension</span></span>
<span id="cb6-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> minInputDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and input dimensions</span></span>
<span id="cb6-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minImgScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> minInputDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and display</span></span>
<span id="cb6-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScaleX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScaleY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-20">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayScaleX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> displayScaleY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-21"></span>
<span id="cb6-22"></span>
<span id="cb6-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box to in-game screen resolution and flip the bbox coordinates vertically</span></span>
<span id="cb6-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-25">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-26">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-27">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-28"></span>
<span id="cb6-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mirror bounding box across screen</span></span>
<span id="cb6-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mirrorScreen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-32">        x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-34"></span>
<span id="cb6-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box to display resolution</span></span>
<span id="cb6-36">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-37">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-38">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-39">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-40"></span>
<span id="cb6-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Offset the bounding box coordinates based on the difference between the in-game screen and display</span></span>
<span id="cb6-42">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-43">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-44"></span>
<span id="cb6-45">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-46"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
</section>
<section id="boundingbox2dvisualizer.cs" class="level3">
<h3 class="anchored" data-anchor-id="boundingbox2dvisualizer.cs"><code>BoundingBox2DVisualizer.cs</code></h3>
<p>The <code>BoundingBox2DVisualizer</code> script is a Unity C# MonoBehaviour class that displays 2D bounding boxes and labels on a Unity canvas. It creates, updates, and manages UI elements for visualizing them based on the provided BBox2DInfo array. This class supports customizable settings such as bounding box transparency and the ability to toggle the display of bounding boxes. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit/blob/main/Runtime/Scripts/BoundingBox2DVisualizer.cs">BoundingBox2DVisualizer.cs</a></li>
</ul>
<section id="serialized-fields" class="level4">
<h4 class="anchored" data-anchor-id="serialized-fields">Serialized Fields</h4>
<p>The BoundingBox2DVisualizer class contains serialized fields referencing UI components, prefabs, and settings.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// UI components</span></span>
<span id="cb7-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Components"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Container for holding the bounding box UI elements"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RectTransform boundingBoxContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Container for holding the label UI elements"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RectTransform labelContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-7"></span>
<span id="cb7-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Prefabs for creating UI elements</span></span>
<span id="cb7-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prefabs"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prefab for the bounding box UI element"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RectTransform boundingBoxPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prefab for the label UI element"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TMP_Text labelPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prefab for the label background UI element"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Image labelBackgroundPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Prefab for the dot UI element"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Image dotPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-18"></span>
<span id="cb7-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Settings for customizing the bounding box visualizer</span></span>
<span id="cb7-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Settings"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flag to control whether bounding boxes should be displayed or not"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayBoundingBoxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transparency value for the bounding boxes, ranging from 0 (completely transparent) to 1 (completely opaque)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> bboxTransparency <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="guid-constants" class="level4">
<h4 class="anchored" data-anchor-id="guid-constants">GUID Constants</h4>
<p>These are the GUIDs of the default assets. They are used to set default values for the bounding box, label, label background, and dot prefabs in the Unity Editor.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUIDs of the default assets for the bounding box, label, label background, and dot prefabs</span></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> BoundingBoxPrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"be0edeacc0f249fab31ac75426ad8a2a"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> LabelPrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4e39b47d4b984862aeab14255855fcc9"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> LabelBackgroundPrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9074ea186151430084312ba891bad58e"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> DotPrefabGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3eb64b4f1a4e4e2595066ed269be9532"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="lists-for-ui-elements" class="level4">
<h4 class="anchored" data-anchor-id="lists-for-ui-elements">Lists for UI Elements</h4>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Lists for storing and managing instantiated UI elements</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> boundingBoxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of instantiated bounding box UI elements</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>TMP_Text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>TMP_Text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of instantiated label UI elements</span></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> labelBackgrounds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of instantiated label background UI elements</span></span>
<span id="cb9-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> dots <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of instantiated dot UI elements</span></span></code></pre></div>
</section>
<section id="reset" class="level4">
<h4 class="anchored" data-anchor-id="reset"><code>Reset</code></h4>
<p>This method sets the default assets from the project using their GUIDs. It uses <code>AssetDatabase</code> to find them and set the default values. This method will only work in the Unity Editor, not in a build.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Reset is called when the user hits the Reset button in the Inspector's context menu</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// or when adding the component the first time. This function is only called in editor mode.</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb10-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb10-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load default assets only in the Unity Editor, not in a build</span></span>
<span id="cb10-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb10-9">    boundingBoxPrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>BoundingBoxPrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-10">    labelPrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>TMP_Text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>LabelPrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-11">    labelBackgroundPrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>LabelBackgroundPrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-12">    dotPrefab <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>DotPrefabGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb10-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loaddefaultasset" class="level4">
<h4 class="anchored" data-anchor-id="loaddefaultasset"><code>LoadDefaultAsset</code></h4>
<p>This method provides a generic way to load default assets for the specified fields using their GUIDs.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Loads the default asset for the specified type using its GUID.</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;typeparam</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"T"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The type of asset to be loaded.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/typeparam&gt;</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"guid"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GUID of the default asset.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The loaded asset of the specified type.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;remarks&gt;</span></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is only executed in the Unity Editor, not in builds.</span></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/remarks&gt;</span></span>
<span id="cb11-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> T LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> guid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> where T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span></span>
<span id="cb11-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb11-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the asset from the AssetDatabase using its GUID</span></span>
<span id="cb11-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssetDatabase</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAssetAtPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssetDatabase</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>guid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb11-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb11-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb11-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updateboundingboxvisualizations" class="level4">
<h4 class="anchored" data-anchor-id="updateboundingboxvisualizations"><code>UpdateBoundingBoxVisualizations</code></h4>
<p>This method updates the visualization of bounding boxes based on the given <code>BBox2DInfo</code> array.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the visualization of bounding boxes based on the given BBox2DInfo array.</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bboxInfoArray"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of BBox2DInfo objects containing bounding box information</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBoxVisualizations</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BBox2DInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Depending on the displayBoundingBoxes flag, either update or disable bounding box UI elements</span></span>
<span id="cb12-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayBoundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb12-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Disable bounding boxes, labels, and label backgrounds for all existing UI elements</span></span>
<span id="cb12-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb12-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-17">            boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-18">            labelBackgrounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-19">            labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-20">            dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="screentocanvaspoint" class="level4">
<h4 class="anchored" data-anchor-id="screentocanvaspoint"><code>ScreenToCanvasPoint</code></h4>
<p>This method converts a screen point to a local one in the <code>RectTransform</code> space of the given canvas.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Convert a screen point to a local point in the RectTransform space of the given canvas.</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"canvas"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The RectTransform object of the canvas</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenPoint"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The screen point to be converted</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A Vector2 object representing the local point in the RectTransform space of the canvas</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb13-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RectTransform canvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2 screenPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-9">    RectTransformUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenPointToLocalPointInRectangle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>canvas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">out</span> Vector2 localPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> localPoint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updateboundingboxes" class="level4">
<h4 class="anchored" data-anchor-id="updateboundingboxes"><code>UpdateBoundingBoxes</code></h4>
<p>This method updates bounding box UI elements to match the provided <code>BBox2DInfo</code> array. It creates or removes bounding box UI elements to match the number of detected objects and updates bounding boxes, labels, and label backgrounds. It also disables UI elements if not needed.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update bounding box UI elements to match the provided BBox2DInfo array.</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bboxInfoArray"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An array of BBox2DInfo objects containing bounding box information</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BBox2DInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create or remove bounding box UI elements to match the number of detected objects</span></span>
<span id="cb14-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-10">        RectTransform newBoundingBox <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBoxPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> boundingBoxContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-11">        boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newBoundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-12"></span>
<span id="cb14-13">        Image newLabelBackground <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelBackgroundPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-14">        labelBackgrounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newLabelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-15"></span>
<span id="cb14-16">        TMP_Text newLabel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-17">        labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newLabel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-18"></span>
<span id="cb14-19">        Image newDot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dotPrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> boundingBoxContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-20">        dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>newDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-22"></span>
<span id="cb14-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update bounding boxes, labels, and label backgrounds for each detected object, or disable UI elements if not needed</span></span>
<span id="cb14-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb14-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-27">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-28">            BBox2DInfo bboxInfo <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bboxInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-29"></span>
<span id="cb14-30">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get UI elements for the current bounding box, label, and label background</span></span>
<span id="cb14-31">            RectTransform boundingBox <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-32">            TMP_Text label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-33">            Image labelBackground <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labelBackgrounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-34">            Image dot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-35"></span>
<span id="cb14-36">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-37">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateLabelAndBackground</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-38">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateDot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-39"></span>
<span id="cb14-40">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Enable bounding box, label, and label background UI elements</span></span>
<span id="cb14-41">            boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-42">            labelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-43">            label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-44">            dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-45">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-46">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb14-47">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-48">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Disable UI elements for extra bounding boxes, labels, and label backgrounds</span></span>
<span id="cb14-49">            boundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-50">            labelBackgrounds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-51">            labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-52">            dots<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-53">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-54">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-55"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updateboundingbox" class="level4">
<h4 class="anchored" data-anchor-id="updateboundingbox"><code>UpdateBoundingBox</code></h4>
<p>This method updates the bounding box UI element with the information from the given <code>BBox2DInfo</code> object. It converts the screen point to a local one in the <code>RectTransform</code> space of the bounding box container and sets the color of the bounding box with the specified transparency.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the bounding box UI element with the information from the given BBox2DInfo object.</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"boundingBox"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The RectTransform object representing the bounding box UI element</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bboxInfo"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The BBox2DInfo object containing the information for the bounding box</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateBoundingBox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RectTransform boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BBox2DInfo bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the screen point to a local point in the RectTransform space of the bounding box container</span></span>
<span id="cb15-9">    Vector2 localPosition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBoxContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb15-10">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchoredPosition</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> localPosition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-11">    boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-12"></span>
<span id="cb15-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the color of the bounding box with the specified transparency</span></span>
<span id="cb15-14">    Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetColorWithTransparency</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-15">    Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> sides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> boundingBox<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponentsInChildren</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb15-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Image side <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> sides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-18">        side<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatelabelandbackground" class="level4">
<h4 class="anchored" data-anchor-id="updatelabelandbackground"><code>UpdateLabelAndBackground</code></h4>
<p>This method updates the label and label background UI elements with the information from the provided <code>BBox2DInfo</code> object. It sets the label text, position, color, and the label’s background position, size, and color with the specified transparency.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the label and label background UI elements with the information from the given BBox2DInfo object.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"label"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The TMP_Text object representing the label UI element</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"labelBackground"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The Image object representing the label background UI element</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bboxInfo"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The BBox2DInfo object containing the information for the label and label background</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateLabelAndBackground</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>TMP_Text label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Image labelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BBox2DInfo bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the screen point to a local point in the RectTransform space of the bounding box container</span></span>
<span id="cb16-10">    Vector2 localPosition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBoxContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb16-11"></span>
<span id="cb16-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the label text and position</span></span>
<span id="cb16-13">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{bboxInfo.label}: {(bboxInfo.bbox.prob * 100).ToString("</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>##<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")}%"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-14">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchoredPosition</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>localPosition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> localPosition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preferredHeight</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-15"></span>
<span id="cb16-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the label color based on the grayscale value of the bounding box color</span></span>
<span id="cb16-17">    Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetColorWithTransparency</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-18">    label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grayscale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">black</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">white</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-19"></span>
<span id="cb16-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the label background position and size</span></span>
<span id="cb16-21">    labelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchoredPosition</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>localPosition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> localPosition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preferredHeight</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-22">    labelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preferredWidth</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preferredHeight</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-23"></span>
<span id="cb16-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the label background color with the specified transparency</span></span>
<span id="cb16-25">    labelBackground<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatedot" class="level4">
<h4 class="anchored" data-anchor-id="updatedot"><code>UpdateDot</code></h4>
<p>This method updates the dot UI element based on the provided BBox2DInfo object.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the dot UI element with the information from the given BBox2DInfo object.</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"dot"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The Image object representing the dot UI element</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"bboxInfo"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The BBox2DInfo object containing the information for the bounding box</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateDot</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Image dot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> BBox2DInfo bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the center of the bounding box</span></span>
<span id="cb17-9">    Vector2 center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bbox</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-10"></span>
<span id="cb17-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the screen point to a local point in the RectTransform space of the bounding box container</span></span>
<span id="cb17-12">    Vector2 localPosition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScreenToCanvasPoint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boundingBoxContainer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-13"></span>
<span id="cb17-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the dot position</span></span>
<span id="cb17-15">    dot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">anchoredPosition</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> localPosition<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-16"></span>
<span id="cb17-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the dot color with the specified transparency</span></span>
<span id="cb17-18">    Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetColorWithTransparency</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>bboxInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-19">    dot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="getcolorwithtransparency" class="level4">
<h4 class="anchored" data-anchor-id="getcolorwithtransparency"><code>GetColorWithTransparency</code></h4>
<p>This method is a utility function that returns a new color based on the input color with the adjusted transparency.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get a new color based on the input color with the adjusted transparency.</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"color"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input color to be modified</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A new color with the specified transparency</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Color <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetColorWithTransparency</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Color color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-8">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> bboxTransparency<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="addcustomdefinesymbol.cs" class="level3">
<h3 class="anchored" data-anchor-id="addcustomdefinesymbol.cs"><code>AddCustomDefineSymbol.cs</code></h3>
<p>This Editor script contains a class that adds a custom define symbol to the project. We can use this custom symbol to prevent code that relies on this package from executing unless the Bounding Box 2D Toolkit package is present. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit/blob/main/Editor/AddCustomDefineSymbol.cs">Editor/AddCustomDefineSymbol.cs</a></li>
</ul>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-3"></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BBox2DToolkit</span></span>
<span id="cb19-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DependencyDefineSymbolAdder</span>
<span id="cb19-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> CustomDefineSymbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CJM_BBOX_2D_TOOLKIT"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-9"></span>
<span id="cb19-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb19-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddCustomDefineSymbol</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb19-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-13">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the currently selected build target group</span></span>
<span id="cb19-14">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> buildTargetGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorUserBuildSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedBuildTargetGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retrieve the current scripting define symbols for the selected build target group</span></span>
<span id="cb19-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-17"></span>
<span id="cb19-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the CustomDefineSymbol is already present in the defines string</span></span>
<span id="cb19-19">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CustomDefineSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb19-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append the CustomDefineSymbol to the defines string, separated by a semicolon</span></span>
<span id="cb19-22">                defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";{CustomDefineSymbol}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-23">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the updated defines string as the new scripting define symbols for the selected build target group</span></span>
<span id="cb19-24">                PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-25">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log a message in the Unity console to inform the user that the custom define symbol has been added</span></span>
<span id="cb19-26">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Added custom define symbol '{CustomDefineSymbol}' to the project."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Unity Bounding Box 2D Toolkit package. The package provides an easy-to-use and customizable solution to work with and visualize 2D bounding boxes on a Unity canvas.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-bounding-box-2d-toolkit">unity-bounding-box-2d-toolkit</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-bounding-box-2d-toolkit-walkthrough/index.html</guid>
  <pubDate>Fri, 05 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity Barracuda Inference Base Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-barracuda-inference-base-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-barracuda-inference-base">Barracuda Inference Base</a> package provides a foundation for performing inference with the Barracuda inference library. It includes a flexible base class to extend with task-specific packages. <a href="https://docs.unity3d.com/Packages/com.unity.barracuda@3.0/manual/index.html">Barracuda</a> is a lightweight cross-platform <a href="https://en.wikipedia.org/wiki/Neural_network">neural network</a> inference library for Unity.</p>
<p>I use the Barracuda inference library in multiple tutorials. This package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content. Here are some demo videos from projects that extend this package.</p>
<p><strong>Image Classification</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-image-classification-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-image-classification-demo.mp4">Video</a></video></p>
</figure>
</div>
<p><strong>Object Detection</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-yolox-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-yolox-demo.mp4">Video</a></video></p>
</figure>
</div>
<p><strong>Pose Estimation</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/barracuda-inference-posenet-demo.mp4" class="img-fluid" controls=""><a href="./videos/barracuda-inference-posenet-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains two C# scripts.</p>
<ol type="1">
<li><code>BarracudaModelRunner.cs</code>: This script provides an abstract class for running Barracuda neural network models in Unity.</li>
<li><code>AddCustomDefineSymbol.cs</code>: An Editor script that automatically adds a custom scripting define symbol to the project after the package installs.</li>
</ol>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Barracuda Inference Base package by examining the purpose and functionality of each C# script.</p>
<section id="barracudamodelrunner.cs" class="level3">
<h3 class="anchored" data-anchor-id="barracudamodelrunner.cs"><code>BarracudaModelRunner.cs</code></h3>
<p>This script provides an abstract class for running Barracuda neural network models in Unity. This class serves as a base class for others that perform inference using Barracuda to inherit from.</p>
<p>The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-barracuda-inference-base/blob/main/Runtime/Scripts/BarracudaModelRunner.cs">BarracudaModelRunner.cs</a></li>
</ul>
<section id="model-assets" class="level4">
<h4 class="anchored" data-anchor-id="model-assets">Model Assets</h4>
<p>These are serialized fields for the neural network model, channel order preference, and the execution backend.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model Assets"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The neural network model"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> NNModel model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Option to order tensor data channels first (EXPERIMENTAL)"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useNCHW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Execution backend for the model"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span> workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Auto</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="modelbuilder-and-iworker" class="level4">
<h4 class="anchored" data-anchor-id="modelbuilder-and-iworker"><code>ModelBuilder</code> and <code>IWorker</code></h4>
<p>These are Instances of <code>ModelBuilder</code> and <code>IWorker</code> for creating and executing models.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> ModelBuilder modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> IWorker engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="start" class="level4">
<h4 class="anchored" data-anchor-id="start"><code>Start</code></h4>
<p>The <code>Start()</code> method runs when the script is enabled. It loads and prepares the model and initializes the engine.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAndPrepareModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeEngine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb3-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadandpreparemodel" class="level4">
<h4 class="anchored" data-anchor-id="loadandpreparemodel"><code>LoadAndPrepareModel</code></h4>
<p>This method loads and prepares the model for execution. Child classes can override this method to apply custom modifications to the model.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load and prepare the model for execution.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Override this method to apply custom modifications to the model.</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAndPrepareModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-7">    Model runtimeModel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ModelLoader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Load</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-8">    modelBuilder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelBuilder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>runtimeModel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializeworker" class="level4">
<h4 class="anchored" data-anchor-id="initializeworker"><code>InitializeWorker</code></h4>
<p>This method initializes the worker for executing the model with the specified backend and channel order.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the worker for executing the model with the specified backend and channel order.</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target model representation.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"workerType"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target compute backend.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb5-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"useNCHW"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The channel order for the compute backend (default is true).</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb5-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">An initialized worker instance.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb5-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> IWorker <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWorker</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Model model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Type</span> workerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useNCHW <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Validate worker type</span></span>
<span id="cb5-11">    workerType <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ValidateType</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>workerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-12"></span>
<span id="cb5-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set channel order if required</span></span>
<span id="cb5-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useNCHW<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-16">        ComputeInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">channelsOrder</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ComputeInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ChannelsOrder</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NCHW</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-18"></span>
<span id="cb5-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create and return the worker instance</span></span>
<span id="cb5-20">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateWorker</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>workerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializeengine" class="level4">
<h4 class="anchored" data-anchor-id="initializeengine"><code>InitializeEngine</code></h4>
<p>This method initializes the inference engine by creating a worker instance.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the inference engine.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeEngine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WorkerFactory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateWorker</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>workerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-7">    engine <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWorker</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelBuilder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> workerType<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useNCHW<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="executemodel" class="level4">
<h4 class="anchored" data-anchor-id="executemodel"><code>ExecuteModel</code></h4>
<p>These overloaded methods execute the model with the provided input Tensor(s). Child classes can override them to implement custom input and output processing.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Execute the model with the given input Tensor.</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Override this method to implement custom input and output processing.</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"input"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input Tensor for the model.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb7-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ExecuteModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Tensor input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-8">    engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Execute</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Execute the model with the given input Tensor.</span></span>
<span id="cb7-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Override this method to implement custom input and output processing.</span></span>
<span id="cb7-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"input"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input Tensor for the model.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb7-16"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ExecuteModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IDictionary<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-18">    engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Execute</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ondisable" class="level4">
<h4 class="anchored" data-anchor-id="ondisable"><code>OnDisable</code></h4>
<p>This method runs when the component is disabled. It cleans up resources by disposing of the engine.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Clean up resources when the component is disabled.</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6">    engine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Dispose</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb8-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="addcustomdefinesymbol.cs" class="level3">
<h3 class="anchored" data-anchor-id="addcustomdefinesymbol.cs"><code>AddCustomDefineSymbol.cs</code></h3>
<p>This Editor script contains a class that adds a custom define symbol to the project. We can use this custom symbol to prevent code that relies on this package from executing unless the Barracuda Inference Base package is present. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-barracuda-inference-base/blob/main/Editor/AddCustomDefineSymbol.cs">AddCustomDefineSymbol.cs</a></li>
</ul>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">namespace</span> CJM<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BarracudaInference</span></span>
<span id="cb9-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DependencyDefineSymbolAdder</span>
<span id="cb9-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> CustomDefineSymbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CJM_BARRACUDA_INFERENCE"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9"></span>
<span id="cb9-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb9-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddCustomDefineSymbol</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-13">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the currently selected build target group</span></span>
<span id="cb9-14">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> buildTargetGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorUserBuildSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedBuildTargetGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-15">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retrieve the current scripting define symbols for the selected build target group</span></span>
<span id="cb9-16">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-17"></span>
<span id="cb9-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the CustomDefineSymbol is already present in the defines string</span></span>
<span id="cb9-19">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CustomDefineSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb9-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append the CustomDefineSymbol to the defines string, separated by a semicolon</span></span>
<span id="cb9-22">                defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";{CustomDefineSymbol}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-23">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the updated defines string as the new scripting define symbols for the selected build target group</span></span>
<span id="cb9-24">                PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-25">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log a message in the Unity console to inform the user that the custom define symbol has been added</span></span>
<span id="cb9-26">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Added custom define symbol '{CustomDefineSymbol}' to the project."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Barracuda Inference Base package. The package provides a foundation for performing inference with the Barracuda inference library with a flexible base class to extend with task-specific packages.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-barracuda-inference-base">unity-barracuda-inference-base</a></li>
</ul>
<p>You can find the code for the demo projects shown in the videos at the beginning of this post linked below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-image-classification-demo">Barracuda Image Classification Demo</a>: A simple Unity project demonstrating how to perform image classification with the <code>barracuda-inference-image-classification</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-posenet-demo">Barracuda Inference PoseNet Demo</a>: A simple Unity project demonstrating how to perform 2D human pose estimation with the <code>barracuda-inference-posenet</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-barracuda-inference-base-walkthrough/index.html</guid>
  <pubDate>Fri, 05 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity Deep Learning Image Preprocessor Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-deep-learning-image-preprocessor-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-deep-learning-image-preprocessor">Deep Learning Image Preprocessor</a> package provides Shaders and Compute Shaders for various image processing tasks, such as cropping, normalizing, and flipping images in Unity.</p>
<p>Many of my tutorials involve using computer vision models in Unity applications. This package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content.</p>
<p>In this post, I walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains a C# script and various processing shaders.</p>
<section id="c-script" class="level3">
<h3 class="anchored" data-anchor-id="c-script">C# Script</h3>
<ul>
<li><code>ImageProcessor.cs</code>: This script provides utility functions to process images using compute shaders or materials.</li>
</ul>
</section>
<section id="shaders" class="level3">
<h3 class="anchored" data-anchor-id="shaders">Shaders</h3>
<ol type="1">
<li><code>CropImage.shader</code>: This shader is responsible for cropping images based on provided offset and size values.</li>
<li><code>NormalizeImage.shader</code>: This shader normalizes the color values of an input texture using the provided mean, standard deviation, and scaling values.</li>
<li><code>ProcessingShader.compute</code>: This compute shader offers various image processing functionality, including normalizing input images, cropping images based on the provided offset and size values, and flipping images around the x-axis.</li>
</ol>
</section>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Deep Learning Image Preprocessor package by examining the purpose and functionality of the C# script and shaders.</p>
<section id="imageprocessor.cs" class="level3">
<h3 class="anchored" data-anchor-id="imageprocessor.cs"><code>ImageProcessor.cs</code></h3>
<p>The script defines a public class <code>ImageProcessor</code> that inherits from <code>MonoBehaviour</code>. This class handles the processing of images using shaders. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-deep-learning-image-preprocessor/blob/main/Runtime/Scripts/ImageProcessor.cs">ImageProcessor.cs</a></li>
</ul>
<section id="serialized-fields" class="level4">
<h4 class="anchored" data-anchor-id="serialized-fields">Serialized Fields</h4>
<p>The <code>ImageProcessor</code> class contains a set of serialized fields for the shaders and normalization parameters.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processing Shaders"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The compute shader for image processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ComputeShader processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The shader for image normalization"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Shader normalizeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The shader for image cropping"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Shader cropShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8"></span>
<span id="cb1-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Normalization Parameters"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"JSON file with the mean and std values for normalization"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> TextAsset normStatsJson <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="private-fields-and-constants" class="level4">
<h4 class="anchored" data-anchor-id="private-fields-and-constants">Private Fields and Constants</h4>
<p>The script also defines several private fields and constants related to shaders and normalization parameters.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUIDs of the default assets used for shaders and normalization</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> ProcessingComputeShaderGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2c418cec15ae44419d94328d0e8dcea8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> NormalizeShaderGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"45d8405a4cc64ecfa477b712e0465c05"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> CropShaderGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0685d34a035b4cefa942d94390282c12"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> NormStatsJsonGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9c8f1a57cb884c9b8a4439cae327a2f8"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The material for image normalization</span></span>
<span id="cb2-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Material normalizeMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The material for image cropping</span></span>
<span id="cb2-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Material cropMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11"></span>
<span id="cb2-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb2-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> NormStats</span>
<span id="cb2-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb2-19"></span>
<span id="cb2-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The mean values for normalization</span></span>
<span id="cb2-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 0f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The standard deviation values for normalization</span></span>
<span id="cb2-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb2-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Value used to scale normalized input</span></span>
<span id="cb2-25"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-26"></span>
<span id="cb2-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Buffer for mean values used in compute shader</span></span>
<span id="cb2-28"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ComputeBuffer meanBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Buffer for standard deviation values used in compute shader</span></span>
<span id="cb2-30"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ComputeBuffer stdBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="reset" class="level4">
<h4 class="anchored" data-anchor-id="reset"><code>Reset</code></h4>
<p>This method sets the default assets from the project using their GUIDs. It uses <code>AssetDatabase</code> to find them and set the default values. This method will only work in the Unity Editor, not in a build.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Reset is called when the user hits the Reset button in the Inspector's context menu</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// or when adding the component the first time. This function is only called in editor mode.</span></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reset</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load default assets only in the Unity Editor, not in a build</span></span>
<span id="cb3-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb3-9">    processingComputeShader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>ProcessingComputeShaderGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-10">    normalizeShader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Shader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>NormalizeShaderGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-11">    cropShader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Shader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>CropShaderGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-12">    normStatsJson <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>TextAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>NormStatsJsonGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb3-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loaddefaultasset" class="level4">
<h4 class="anchored" data-anchor-id="loaddefaultasset"><code>LoadDefaultAsset</code></h4>
<p>This method provides a generic way to load default assets for the specified fields using their GUIDs.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Loads the default asset for the specified type using its GUID.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb4-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;typeparam</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"T"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The type of asset to be loaded.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/typeparam&gt;</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"guid"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GUID of the default asset.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The loaded asset of the specified type.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;remarks&gt;</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is only executed in the Unity Editor, not in builds.</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/remarks&gt;</span></span>
<span id="cb4-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> T LoadDefaultAsset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> guid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> where T <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span></span>
<span id="cb4-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb4-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the asset from the AssetDatabase using its GUID</span></span>
<span id="cb4-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssetDatabase</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAssetAtPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>T<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssetDatabase</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>guid<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb4-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#else</span></span>
<span id="cb4-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb4-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="start" class="level4">
<h4 class="anchored" data-anchor-id="start"><code>Start</code></h4>
<p>The script initializes the shaders and normalization parameters in the Start() method, which runs when the script initializes.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Called when the script is initialized.</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-6">    normalizeMaterial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normalizeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-7">    cropMaterial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cropShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadNormStats</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb5-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeProcessingShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb5-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="loadnormstats" class="level4">
<h4 class="anchored" data-anchor-id="loadnormstats"><code>LoadNormStats</code></h4>
<p>This method loads the normalization statistics from the provided JSON file by deserializing the JSON content and updating the normalization statistics.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load the normalization stats from the provided JSON file.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadNormStats</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsNormStatsJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb6-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-10"></span>
<span id="cb6-11">    NormStats normStats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeNormStats</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normStatsJson<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateNormalizationStats</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="isnormstatsjsonnullorempty" class="level4">
<h4 class="anchored" data-anchor-id="isnormstatsjsonnullorempty"><code>IsNormStatsJsonNullOrEmpty</code></h4>
<p>This method checks if the provided JSON file (normStatsJson) is null or empty.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Check if the provided JSON file is null or empty.</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">True if the file is null or empty, otherwise false.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsNormStatsJsonNullOrEmpty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> normStatsJson <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsNullOrWhiteSpace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normStatsJson<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="deserializenormstats" class="level4">
<h4 class="anchored" data-anchor-id="deserializenormstats"><code>DeserializeNormStats</code></h4>
<p>This method deserializes the provided JSON string into a <code>NormStats</code> object. It catches any exceptions that might occur during the deserialization process and logs an error message, if any.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Deserialize the provided JSON string to a NormStats object.</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"json"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The JSON string to deserialize.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A deserialized NormStats object.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb8-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> NormStats <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DeserializeNormStats</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb8-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span></span>
<span id="cb8-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>NormStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Exception ex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb8-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-14">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to deserialize normalization stats JSON: {ex.Message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatenormalizationstats" class="level4">
<h4 class="anchored" data-anchor-id="updatenormalizationstats"><code>UpdateNormalizationStats</code></h4>
<p>This method updates the mean and standard deviation arrays with the provided <code>NormStats</code> object.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the mean and standard deviation with the provided NormStats object.</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"normStats"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The NormStats object containing the mean and standard deviation.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb9-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateNormalizationStats</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>NormStats normStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normStats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-9">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-11"></span>
<span id="cb9-12">    mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> normStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-13">    std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> normStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">std</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Disable scaling if no scale value is provided</span></span>
<span id="cb9-15">    scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> normStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> 0f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> 1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> normStats<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializeprocessingshaders" class="level4">
<h4 class="anchored" data-anchor-id="initializeprocessingshaders"><code>InitializeProcessingShaders</code></h4>
<p>This method initializes the processing shaders by setting the mean and standard deviation values for normalization and creating compute buffers for those values.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes the processing shaders by setting the mean and standard deviation values.</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb10-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeProcessingShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb10-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-6">    normalizeMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetVector</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Mean"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb10-7">    normalizeMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetVector</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Std"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb10-8">    normalizeMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetFloat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Scale"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-9"></span>
<span id="cb10-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SystemInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">supportsComputeShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindKernel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NormalizeImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-13"></span>
<span id="cb10-14">        meanBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateComputeBuffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-15">        stdBuffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateComputeBuffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-16"></span>
<span id="cb10-17">        processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetBuffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Mean"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> meanBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-18">        processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetBuffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Std"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> stdBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-19">        processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetFloat</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Scale"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="createcomputebuffer" class="level4">
<h4 class="anchored" data-anchor-id="createcomputebuffer"><code>CreateComputeBuffer</code></h4>
<p>This method creates a <code>ComputeBuffer</code> and sets the provided data (a float array). It returns the created compute buffer.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Creates a compute buffer and sets the provided data.</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"data"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The data to set in the compute buffer.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A compute buffer with the provided data.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb11-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ComputeBuffer <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateComputeBuffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-8">    ComputeBuffer buffer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ComputeBuffer</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb11-9">    buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="processimagecomputeshader" class="level4">
<h4 class="anchored" data-anchor-id="processimagecomputeshader"><code>ProcessImageComputeShader</code></h4>
<p>This method prepares an image with a compute shader with the specified function name. It creates a temporary render texture, binds the source and destination textures to the compute shader, dispatches the shader, and blits the processed image back to the original image.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Processes an image using a compute shader with the specified function name.</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The image to be processed.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"functionName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the function in the compute shader to use for processing.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageComputeShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> functionName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelHandle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindKernel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>functionName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a temporary render texture</span></span>
<span id="cb12-10">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporaryRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-11"></span>
<span id="cb12-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Bind the source and destination textures to the compute shader</span></span>
<span id="cb12-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BindTextures</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Dispatche the shader</span></span>
<span id="cb12-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DispatchShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Blit the processed image back to the original image</span></span>
<span id="cb12-17">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-18"></span>
<span id="cb12-19">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="processimageshader" class="level4">
<h4 class="anchored" data-anchor-id="processimageshader"><code>ProcessImageShader</code></h4>
<p>This method processes an image using a material. It creates a temporary render texture, applies the normalization material to the input image, and copies the resulting image back to the original image.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Processes an image using a material.</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The image to be processed.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a temporary render texture</span></span>
<span id="cb13-8">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporaryRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-9">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply the normalization material to the input image</span></span>
<span id="cb13-11">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> normalizeMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result back to the original image</span></span>
<span id="cb13-13">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-14"></span>
<span id="cb13-15">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="gettemporaryrendertexture" class="level4">
<h4 class="anchored" data-anchor-id="gettemporaryrendertexture"><code>GetTemporaryRenderTexture</code></h4>
<p>This method creates a temporary render texture with identical dimensions to the image. It takes an optional boolean parameter enableRandomWrite to enable or disable random access write into the RenderTexture.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Creates a temporary render texture with the same dimensions as the given image.</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The image to match dimensions with.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"enableRandomWrite"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Enable random access write into the RenderTexture.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A temporary render texture.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb14-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTexture <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporaryRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> enableRandomWrite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a temporary render texture</span></span>
<span id="cb14-10">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set random write access</span></span>
<span id="cb14-12">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enableRandomWrite</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> enableRandomWrite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-13">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Create</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb14-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="bindtextures" class="level4">
<h4 class="anchored" data-anchor-id="bindtextures"><code>BindTextures</code></h4>
<p>This method binds the source and destination textures to the compute shader with the provided kernel handle. It sets the <code>_OutputImage</code> and <code>_InputImage</code> properties of the compute shader with the destination and source textures, respectively.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Binds the source and destination textures to the compute shader.</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"kernelHandle"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The kernel handle of the compute shader.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"source"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source texture to be processed.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"destination"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The destination texture for the processed result.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BindTextures</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTexture source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTexture destination<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-9">    processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_OutputImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> destination<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-10">    processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_InputImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> source<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="dispatchshader" class="level4">
<h4 class="anchored" data-anchor-id="dispatchshader"><code>DispatchShader</code></h4>
<p>This method dispatches the compute shader based on the dimensions of the <code>result</code> texture. It calculates the thread groups in the X and Y dimensions and runs the compute shader using the provided kernel handle.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Dispatches the compute shader based on the dimensions of the result texture.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"kernelHandle"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The kernel handle of the compute shader.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"result"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The result render texture.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DispatchShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTexture result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the thread groups in the X and Y dimensions</span></span>
<span id="cb16-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> threadGroupsX <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CeilToInt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> threadGroupsY <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CeilToInt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Execute the compute shader</span></span>
<span id="cb16-12">    processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Dispatch</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> threadGroupsX<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> threadGroupsY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="calculateinputdims" class="level4">
<h4 class="anchored" data-anchor-id="calculateinputdims"><code>CalculateInputDims</code></h4>
<p>This method calculates the input dimensions of the processed image based on the original image dimensions, given a target dimension.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Calculates the input dimensions of the processed image based on the original image dimensions.</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"imageDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of the original image.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The calculated input dimensions for the processed image.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb17-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2Int <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-8">    targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scaleFactor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> Vector2Int<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RoundToInt</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> scaleFactor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> scaleFactor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb17-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="cropimagecomputeshader" class="level4">
<h4 class="anchored" data-anchor-id="cropimagecomputeshader"><code>CropImageComputeShader</code></h4>
<p>This method crops an image using a compute shader. It binds the source and destination textures to the compute shader, sets the offset and size parameters, dispatches the shader, and copies the result to the cropped image.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Crops an image using a compute shader with the given offset and size.</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The original image to be cropped.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"croppedImage"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The cropped output image.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"offset"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The offset for the crop area in the original image.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"size"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The size of the crop area.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CropImageComputeShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTexture croppedImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb18-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelHandle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindKernel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CropImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-11">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporaryRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>croppedImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-12"></span>
<span id="cb18-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Bind the source and destination textures to the compute shader</span></span>
<span id="cb18-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">BindTextures</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the offset and size parameters</span></span>
<span id="cb18-16">    processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetInts</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_CropOffset"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb18-17">    processingComputeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetInts</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_CropSize"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb18-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Execute the compute shader</span></span>
<span id="cb18-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DispatchShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result to the cropped image texture</span></span>
<span id="cb18-21">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> croppedImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-22"></span>
<span id="cb18-23">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="cropimageshader" class="level4">
<h4 class="anchored" data-anchor-id="cropimageshader"><code>CropImageShader</code></h4>
<p>This method crops an image using a material. It sets the offset and size parameters on the crop material, creates a temporary render texture, applies the crop material to the input image, and blits the result back to the cropped image.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Crops an image using a shader with the given offset and size.</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The original image to be cropped.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"croppedImage"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The cropped output image.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb19-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"offset"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The offset for the crop area in the original image (float array with two elements).</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"size"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The size of the crop area (float array with two elements).</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb19-8"></span>
<span id="cb19-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CropImageShader</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTexture croppedImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the offset and size parameters on the crop material</span></span>
<span id="cb19-12">    cropMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetVector</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Offset"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb19-13">    cropMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetVector</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_Size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb19-14"></span>
<span id="cb19-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a temporary render texture</span></span>
<span id="cb19-16">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporaryRenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>croppedImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-17">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-18"></span>
<span id="cb19-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply the crop material to the input image</span></span>
<span id="cb19-20">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cropMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result to the cropped image texture</span></span>
<span id="cb19-22">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> croppedImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-23"></span>
<span id="cb19-24">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ondisable" class="level4">
<h4 class="anchored" data-anchor-id="ondisable"><code>OnDisable</code></h4>
<p>This method runs when the script is disabled. If the current platform supports compute shaders, it releases the compute buffers.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb20-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Called when the script is disabled.</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb20-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb20-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseComputeBuffers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="releasecomputebuffers" class="level4">
<h4 class="anchored" data-anchor-id="releasecomputebuffers"><code>ReleaseComputeBuffers</code></h4>
<p>This method releases the compute buffers when compute shaders are supported.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Releases the compute buffers if compute shaders are supported.</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb21-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseComputeBuffers</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb21-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>SystemInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">supportsComputeShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-8">        meanBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Release</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-9">        stdBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Release</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="cropimage.shader" class="level3">
<h3 class="anchored" data-anchor-id="cropimage.shader"><code>CropImage.shader</code></h3>
<p>This shader crops an input image based on the specified <code>offset</code> and <code>size</code> values. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-deep-learning-image-preprocessor/blob/main/Shaders/CropImage.shader">CropImage.shader</a></li>
</ul>
<section id="define-properties" class="level4">
<h4 class="anchored" data-anchor-id="define-properties">Define Properties</h4>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb22-1">Properties <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The input texture to crop</span></span>
<span id="cb22-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_MainTex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Texture"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> "white" <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span></span>
<span id="cb22-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A vector representing the x and y offsets for the cropping area</span></span>
<span id="cb22-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_Offset</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Offset"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A vector representing the width and height of the cropping area</span></span>
<span id="cb22-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_Size</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Size"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="subshader-configuration" class="level4">
<h4 class="anchored" data-anchor-id="subshader-configuration">SubShader Configuration</h4>
<p>In the SubShader block, culling and depth are disabled to ensure that the shader will always render regardless of the camera’s position and orientation.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No culling or depth</span></span>
<span id="cb23-2">Cull Off ZWrite Off ZTest Always</span></code></pre></div>
</section>
<section id="pass-block" class="level4">
<h4 class="anchored" data-anchor-id="pass-block">Pass Block</h4>
<p>The Pass block contains the vertex and fragment shaders that process the input texture and crops it based on the provided <code>_Offset</code> and <code>_Size</code> values.</p>
<p>The vertex shader receives the input vertex data and passes it through to the fragment shader. It is a simple pass-through shader that does not modify the input data.</p>
<p>The fragment shader is responsible for cropping the input texture based on the provided <code>_Offset</code> and <code>_Size</code> values.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb24-1">Pass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-2">    CGPROGRAM</span>
<span id="cb24-3">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#pragma vertex vert</span></span>
<span id="cb24-4">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#pragma fragment frag</span></span>
<span id="cb24-5"></span>
<span id="cb24-6">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include "UnityCG.cginc"</span></span>
<span id="cb24-7"></span>
<span id="cb24-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Uniform variables for the offset and size of the cropping area</span></span>
<span id="cb24-9">    float2 _Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-10">    float2 _Size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-11"></span>
<span id="cb24-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Contains the vertex position and texture coordinates</span></span>
<span id="cb24-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> appdata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-14">        float4 vertex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> POSITION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-15">        float2 uv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> TEXCOORD0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb24-17"></span>
<span id="cb24-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Contains the transformed vertex position and texture coordinates</span></span>
<span id="cb24-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> v2f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-20">        float2 uv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> TEXCOORD0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-21">        float4 vertex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_POSITION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb24-23"></span>
<span id="cb24-24">    v2f <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vert</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>appdata v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-25">        v2f o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-26">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Transform the input vertex position to clip space</span></span>
<span id="cb24-27">        o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vertex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UnityObjectToClipPos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vertex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the input texture coordinates to the output structure</span></span>
<span id="cb24-29">        o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-30">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-32"></span>
<span id="cb24-33">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">sampler2D</span> _MainTex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-34"></span>
<span id="cb24-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fragment shader function</span></span>
<span id="cb24-36">    fixed4 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frag</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v2f i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_Target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the input position based on the offset and size</span></span>
<span id="cb24-38">        float2 inputPos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> _Offset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sample the input image and return the cropped color values</span></span>
<span id="cb24-40">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tex2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_MainTex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-42">    ENDCG</span>
<span id="cb24-43"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="normalizeimage.shader" class="level3">
<h3 class="anchored" data-anchor-id="normalizeimage.shader"><code>NormalizeImage.shader</code></h3>
<p>This shader normalizes an input image’s color channels based on the specified mean, standard deviation, and scale values. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-deep-learning-image-preprocessor/blob/main/Shaders/NormalizeImage.shader">NormalizeImage.shader</a></li>
</ul>
<section id="define-properties-1" class="level4">
<h4 class="anchored" data-anchor-id="define-properties-1">Define Properties</h4>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb25-1">Properties</span>
<span id="cb25-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The input image texture</span></span>
<span id="cb25-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_MainTex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Texture"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> "white" <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{}</span></span>
<span id="cb25-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A vector representing the mean of the color channels (r, g, b, a).</span></span>
<span id="cb25-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_Mean</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Mean"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb25-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A vector representing the standard deviation of the color channels (r, g, b, a).</span></span>
<span id="cb25-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_Std</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Std"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb25-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A float range to control the scaling of the output color values.</span></span>
<span id="cb25-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">_Scale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>"Scale"<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb25-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="subshader-configuration-1" class="level4">
<h4 class="anchored" data-anchor-id="subshader-configuration-1">SubShader Configuration</h4>
<p>The shader disables culling and depth testing since it’s for 2D image processing.</p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// No culling or depth</span></span>
<span id="cb26-2">Cull Off ZWrite Off ZTest Always</span></code></pre></div>
</section>
<section id="pass-block-1" class="level4">
<h4 class="anchored" data-anchor-id="pass-block-1">Pass Block</h4>
<p>The Pass block contains the vertex and fragment shaders that process the input texture and normalizes it based on the provided <code>_Mean</code>, <code>_Std</code>, and <code>_Scale</code> values.</p>
<p>The vertex shader receives the input vertex data and passes it through to the fragment shader. It is a simple pass-through shader that does not modify the input data.</p>
<p>The fragment shader is responsible for cropping the input texture based on the provided <code>_Mean</code>, <code>_Std</code>, and <code>_Scale</code> values.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb27-1">Pass</span>
<span id="cb27-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-3">    CGPROGRAM</span>
<span id="cb27-4">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#pragma vertex vert</span></span>
<span id="cb27-5">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#pragma fragment frag</span></span>
<span id="cb27-6"></span>
<span id="cb27-7">    <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include "UnityCG.cginc"</span></span>
<span id="cb27-8"></span>
<span id="cb27-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Uniform variables to hold the mean and standard deviation values for each color channel (r, g, b)</span></span>
<span id="cb27-10">    float4 _Mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-11">    float4 _Std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> _Scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-13"></span>
<span id="cb27-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Contains the vertex position and texture coordinates</span></span>
<span id="cb27-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> appdata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-16">        float4 vertex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> POSITION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-17">        float2 uv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> TEXCOORD0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb27-19"></span>
<span id="cb27-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Contains the transformed vertex position and texture coordinates</span></span>
<span id="cb27-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> v2f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-22">        float2 uv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> TEXCOORD0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-23">        float4 vertex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_POSITION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb27-25"></span>
<span id="cb27-26">    v2f <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vert</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>appdata v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-27">        v2f o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Transform the input vertex position to clip space</span></span>
<span id="cb27-29">        o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vertex</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UnityObjectToClipPos</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vertex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the input texture coordinates to the output structure</span></span>
<span id="cb27-31">        o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uv</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> v<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-32">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-34"></span>
<span id="cb27-35">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">sampler2D</span> _MainTex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-36"></span>
<span id="cb27-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fragment shader function</span></span>
<span id="cb27-38">    float4 <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">frag</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>v2f i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_Target</span>
<span id="cb27-39">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-40">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sample the input image</span></span>
<span id="cb27-41">        float4 col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tex2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_MainTex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">uv</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-42">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Normalize each color channel (r, g, b) and scale</span></span>
<span id="cb27-43">        col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> _Mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> _Std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the normalized color values</span></span>
<span id="cb27-45">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-46">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb27-47">    ENDCG</span>
<span id="cb27-48"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="processingshader.compute" class="level3">
<h3 class="anchored" data-anchor-id="processingshader.compute"><code>ProcessingShader.compute</code></h3>
<p>This Compute Shader implements multiple image processing operations. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-deep-learning-image-preprocessor/blob/main/Shaders/ProcessingShader.compute">ProcessingShader.compute</a></li>
</ul>
<section id="resources" class="level4">
<h4 class="anchored" data-anchor-id="resources">Resources</h4>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Input image texture</span></span>
<span id="cb28-2">Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> _InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Output image texture</span></span>
<span id="cb28-5">RWTexture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> _OutputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-6"></span>
<span id="cb28-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Structured buffer to hold the mean values for each color channel (r, g, b)</span></span>
<span id="cb28-8">RWStructuredBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> _Mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-9"></span>
<span id="cb28-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Structured buffer to hold the standard deviation values for each color channel (r, g, b)</span></span>
<span id="cb28-11">RWStructuredBuffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> _Std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-12"></span>
<span id="cb28-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Float variable that represents the scaling factor to apply to the normalized pixel values</span></span>
<span id="cb28-14"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> _Scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-15"></span>
<span id="cb28-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The (x, y) coordinates of the top-left corner of the cropping region</span></span>
<span id="cb28-17">int2 _CropOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The size (width, height) of the cropping region</span></span>
<span id="cb28-19">int2 _CropSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="normalizeimage" class="level4">
<h4 class="anchored" data-anchor-id="normalizeimage"><code>NormalizeImage</code></h4>
<p>This kernel normalizes the input image by applying a mean and standard deviation to each color channel (red, green, blue). It also scales the normalized pixel values by a given scale factor.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Normalize the input image</span></span>
<span id="cb29-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb29-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NormalizeImage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-5">    float4 inputPixel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-6">    </span>
<span id="cb29-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create float4 variables for mean and standard deviation</span></span>
<span id="cb29-8">    float4 mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_Mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> _Mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> _Mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-9">    float4 std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>_Std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> _Std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> _Std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-10"></span>
<span id="cb29-11">    float4 normalizedPixel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputPixel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-12"></span>
<span id="cb29-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply scaling and leave the alpha channel unchanged</span></span>
<span id="cb29-14">    _OutputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>normalizedPixel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rgb</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> _Scale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputPixel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">a</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="cropimage" class="level4">
<h4 class="anchored" data-anchor-id="cropimage"><code>CropImage</code></h4>
<p>This kernel crops the input image by applying a given offset and size vector to produce a smaller image.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Crop the input image</span></span>
<span id="cb30-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb30-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CropImage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>_CropSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>_CropSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-7">        int2 inputPos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> _CropOffset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-8">        _OutputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>inputPos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb30-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="flipxaxis" class="level4">
<h4 class="anchored" data-anchor-id="flipxaxis"><code>FlipXAxis</code></h4>
<p>This kernel flips the input image along the x-axis, effectively mirroring it.</p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode glsl code-with-copy"><code class="sourceCode glsl"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the input image around the x-axis</span></span>
<span id="cb31-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb31-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FlipXAxis</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb31-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-7">    _InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDimensions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-8"></span>
<span id="cb31-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Compute the flipped pixel coordinates</span></span>
<span id="cb31-10">    int2 flippedCoords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-11">    _OutputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> _InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>flippedCoords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb31-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Deep Learning Image Preprocessor package. The package contains utility functions and shaders for preparing image input to perform inference with deep learning models in Unity.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-deep-learning-image-preprocessor">unity-deep-learning-image-preprocessor</a></li>
</ul>
<p>You can explore demo projects that use this package at the links below.</p>
<ul>
<li><a href="https://github.com/cj-mills/barracuda-image-classification-demo">Barracuda Image Classification Demo</a>: A simple Unity project demonstrating how to perform image classification with the <code>barracuda-inference-image-classification</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-posenet-demo">Barracuda Inference PoseNet Demo</a>: A simple Unity project demonstrating how to perform 2D human pose estimation with the <code>barracuda-inference-posenet</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-deep-learning-image-preprocessor-walkthrough/index.html</guid>
  <pubDate>Thu, 04 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity CV Image Gallery Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-cv-image-gallery-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-cv-image-gallery">Unity CV Image Gallery</a> package provides an interactive image gallery and <code>Scroll View</code> prefab to facilitate the testing of computer vision applications, such as image classification, object detection, and pose estimation in Unity.</p>
<p>Many of my tutorials involve using computer vision models in Unity applications. This package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content. Check out the demo video below to see this package in action.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/unity-media-display-demo.mp4" class="img-fluid" controls=""><a href="./videos/unity-media-display-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains two C# scripts and a <code>Scroll View</code> prefab. It is designed to be easily integrated into your existing Unity projects and can be customized to suit your needs.</p>
<section id="c-scripts" class="level3">
<h3 class="anchored" data-anchor-id="c-scripts">C# Scripts</h3>
<ol type="1">
<li><code>ImageGallery.cs</code>: This script creates and manages the interactive image gallery. It attaches to a <code>Scroll View -&gt; Viewport -&gt; Content</code> object in a Unity scene.</li>
<li><code>PackageInstaller.cs</code>: An Editor utility script for automatically installing a list of dependency packages defined in a JSON file.</li>
</ol>
</section>
<section id="scroll-view-prefab" class="level3">
<h3 class="anchored" data-anchor-id="scroll-view-prefab">Scroll View Prefab</h3>
<p>The Scroll View prefab helps simplify adding an image gallery to a Unity scene. The prefab contains an <code>ImagePrefab</code> object and already has the <code>ImageGallery.cs</code> script attached to the <code>Scroll View -&gt; Viewport -&gt; Content</code> object. This prefab can be easily added to your Unity project, allowing you to quickly set up an interactive image gallery for testing computer vision applications. You can customize the prefab by modifying the serialized fields in the <code>ImageGallery.cs</code> script.</p>
</section>
<section id="dependencies" class="level3">
<h3 class="anchored" data-anchor-id="dependencies">Dependencies</h3>
<p>The package depends on the Unity Media Display package. This package simplifies creating and managing demo screens for displaying test images, videos, and webcam streams in Unity projects.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-media-display"><strong>GitHub Repository</strong></a></li>
<li><a href="../unity-media-display-walkthrough/"><strong>Code Walkthrough</strong></a></li>
</ul>
</section>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Unity CV Image Gallery package by examining the purpose and functionality of each C# script.</p>
<section id="imagegallery.cs" class="level3">
<h3 class="anchored" data-anchor-id="imagegallery.cs"><code>ImageGallery.cs</code></h3>
<p>In this section, we will go through the <code>ImageGallery.cs</code> script and explain how each part of the code works to create and manage the interactive image gallery. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-cv-image-gallery/blob/main/Runtime/Scripts/ImageGallery.cs">ImageGallery.cs</a></li>
</ul>
<section id="class-variables" class="level4">
<h4 class="anchored" data-anchor-id="class-variables">Class Variables</h4>
<p>The <code>ImageGallery</code> class contains several serialized fields to configure the gallery.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The screen GameObject where the selected image will be displayed"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> GameObject screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The camera GameObject used to display the selected image"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> GameObject cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The content panel GameObject where the image gallery is located"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> GameObject contentPanel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The image prefab used to create each image in the gallery"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> GameObject imagePrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A list of sprites to populate the image gallery."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Sprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> imageSprites<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" The spacing between images in the gallery."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> spacing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 5f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The specified width for each image in the gallery."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> specifiedWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 100f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="start" class="level4">
<h4 class="anchored" data-anchor-id="start"><code>Start</code></h4>
<p>Start() runs when the script first executes. It calls several methods to initialize the gallery.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb2-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Configures the content panel with a VerticalLayoutGroup component.</span></span>
<span id="cb2-4">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetupContentPanel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Populates the gallery with images using the provided sprites.</span></span>
<span id="cb2-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PopulateImageGallery</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjusts the content panel height by summing the vertical dimensions of all gallery images and spacing.</span></span>
<span id="cb2-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AdjustContentHeight</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assigns click events to the images in the gallery to update the screen texture.</span></span>
<span id="cb2-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssignButtonClickEvents</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb2-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="setupcontentpanel" class="level4">
<h4 class="anchored" data-anchor-id="setupcontentpanel"><code>SetupContentPanel</code></h4>
<p>This method sets up the content panel with a <code>VerticalLayoutGroup</code> component. It configures the component’s properties, such as <code>spacing</code>, <code>childAlignment</code>, and <code>childControlHeight</code>, to arrange the images in the gallery with proper spacing and alignment.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Set up the content panel with a VerticalLayoutGroup component.</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetupContentPanel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-6">    VerticalLayoutGroup verticalLayoutGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> contentPanel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>VerticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb3-7">    verticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spacing</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> spacing<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8">    verticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childAlignment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextAnchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpperCenter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-9">    verticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childControlHeight</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-10">    verticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childControlWidth</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    verticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childForceExpandHeight</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    verticalLayoutGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childForceExpandWidth</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="populateimagegallery" class="level4">
<h4 class="anchored" data-anchor-id="populateimagegallery"><code>PopulateImageGallery</code></h4>
<p>This method populates the image gallery with the sprites in the <code>imageSprites</code> list.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb4-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Populate the image gallery with the sprites provided in imageSprites.</span></span>
<span id="cb4-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PopulateImageGallery</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Sprite sprite <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> imageSprites<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb4-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Instantiates a new GameObject using the imagePrefab</span></span>
<span id="cb4-9">        GameObject newImageObject <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Instantiate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imagePrefab<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> contentPanel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-10">        Image newImage <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> newImageObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb4-11">        newImageObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetActive</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assign the curent sprite</span></span>
<span id="cb4-13">        newImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprite</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Preserves the aspect ratio</span></span>
<span id="cb4-15">        newImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">preserveAspect</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Use  the sprite's name for easier identification</span></span>
<span id="cb4-17">        newImageObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-18"></span>
<span id="cb4-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the image size based on the specified width</span></span>
<span id="cb4-20">        RectTransform rectTransform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> newImageObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb4-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> aspectRatio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> sprite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22">        rectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>specifiedWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> specifiedWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> aspectRatio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb4-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="adjustcontentheight" class="level4">
<h4 class="anchored" data-anchor-id="adjustcontentheight"><code>AdjustContentHeight</code></h4>
<p>This method adjusts the content panel’s height based on the total vertical size of the images and spacing.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Adjust the content panel height based on the total height of the images and spacing.</span></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AdjustContentHeight</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-6">    RectTransform contentPanelRectTransform <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> contentPanel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb5-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> totalHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the total height of all the images in the gallery</span></span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> contentPanelRectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb5-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-12">        RectTransform childRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> contentPanelRectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetChild</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>RectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb5-13">        totalHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> childRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-15"></span>
<span id="cb5-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the spacing between the images to the total height</span></span>
<span id="cb5-17">    totalHeight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> spacing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>contentPanelRectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">childCount</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Updates the content panel to accommodate the total height</span></span>
<span id="cb5-19">    contentPanelRectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>contentPanelRectTransform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sizeDelta</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> totalHeight<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="assignbuttonclickevents" class="level4">
<h4 class="anchored" data-anchor-id="assignbuttonclickevents"><code>AssignButtonClickEvents</code></h4>
<p>This method assigns click events to the images in the gallery to update the screen texture to display the selected image.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb6-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Assigns click events to the images in the gallery to update the screen texture when clicked.</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AssignButtonClickEvents</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-6">    Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> images <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponentsInChildren</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb6-7"></span>
<span id="cb6-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Image image <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add a Button component if the image doesn't already have one</span></span>
<span id="cb6-11">        Button button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Button<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb6-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-14">            button <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Button<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb6-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-16"></span>
<span id="cb6-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add a listener to update the screen texture to display the selected image when clicked</span></span>
<span id="cb6-18">        button<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">onClick</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddListener</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> MediaDisplayManager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb6-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="packageinstaller.cs" class="level3">
<h3 class="anchored" data-anchor-id="packageinstaller.cs"><code>PackageInstaller.cs</code></h3>
<p>In this section, we will go through the <code>PackageInstaller.cs</code> script and explain how each part of the code works to install the required packages. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-cv-image-gallery/blob/main/Editor/PackageInstaller.cs">PackageInstaller.cs</a></li>
</ul>
<section id="serializable-classes" class="level4">
<h4 class="anchored" data-anchor-id="serializable-classes">Serializable Classes</h4>
<p>The script defines two serializable classes to hold package data.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold package data</span></span>
<span id="cb7-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageData</span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageUrl<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Serializable class to hold a list of PackageData objects</span></span>
<span id="cb7-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> PackageList</span>
<span id="cb7-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>These classes are for deserializing the JSON file containing the list of packages to install.</p>
</section>
<section id="packageinstaller-class-variables" class="level4">
<h4 class="anchored" data-anchor-id="packageinstaller-class-variables">PackageInstaller Class Variables</h4>
<p>The PackageInstaller class contains several private static fields.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the AddRequest object for the current package to install.</span></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> AddRequest addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of PackageData objects to install.</span></span>
<span id="cb8-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The index of the current package to install.</span></span>
<span id="cb8-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// GUID of the JSON file containing the list of packages to install</span></span>
<span id="cb8-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> PackagesJSONGUID <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"f0b282a4fbb4473584f52e3fd0ab3087"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="installdependencies" class="level4">
<h4 class="anchored" data-anchor-id="installdependencies"><code>InstallDependencies</code></h4>
<p>The <code>InstallDependencies()</code> method executes when Unity loads without action from the user. It reads the package JSON file and calls the <code>InstallNextPackage()</code> method to install the packages.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method called on load to install packages from the JSON file</span></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallDependencies</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the package JSON file</span></span>
<span id="cb9-6">    packagesToInstall <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packages</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the current package index</span></span>
<span id="cb9-8">    currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start installing the packages</span></span>
<span id="cb9-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb9-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="installnextpackage" class="level4">
<h4 class="anchored" data-anchor-id="installnextpackage"><code>InstallNextPackage</code></h4>
<p>This method installs the next package in the list.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to install the next package in the list</span></span>
<span id="cb10-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb10-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through package list</span></span>
<span id="cb10-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentPackageIndex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">        PackageData packageData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> packagesToInstall<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-8"></span>
<span id="cb10-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb10-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb10-11">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-12">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to install package</span></span>
<span id="cb10-13">            addRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>packageData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">packageUrl</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-14">            EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb10-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb10-19">            currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb10-20">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Recursively call InstallNextPackage</span></span>
<span id="cb10-21">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb10-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="packageinstallationprogress" class="level4">
<h4 class="anchored" data-anchor-id="packageinstallationprogress"><code>PackageInstallationProgress</code></h4>
<p>This method monitors the progress of the package installation and logs whether it was successful. It then triggers the installation process for the next package in the list.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to monitor the progress of package installation</span></span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PackageInstallationProgress</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb11-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-5">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log whether the package installation was successful</span></span>
<span id="cb11-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-8">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-9">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Successfully installed: {addRequest.Result.packageId}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-10">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>addRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Failure</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-12">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-13">            UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to install package: {addRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-14">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-15"></span>
<span id="cb11-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unregister the method from the EditorApplication.update </span></span>
<span id="cb11-17">        EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">update</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> PackageInstallationProgress<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Increment the current package index</span></span>
<span id="cb11-19">        currentPackageIndex<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++;</span></span>
<span id="cb11-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Install the next package in the list</span></span>
<span id="cb11-21">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InstallNextPackage</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb11-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ispackageinstalled" class="level4">
<h4 class="anchored" data-anchor-id="ispackageinstalled"><code>IsPackageInstalled</code></h4>
<p>This method verifies whether a package has already been installed or not.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to check if a package is already installed</span></span>
<span id="cb12-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsPackageInstalled</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List the installed packages</span></span>
<span id="cb12-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> listRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Client<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">List</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IsCompleted</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-7"></span>
<span id="cb12-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Status</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> StatusCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the package is already installed</span></span>
<span id="cb12-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> listRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Any</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>package <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> package<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> packageName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb12-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-15">        UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Debug</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to list packages: {listRequest.Error.message}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-17"></span>
<span id="cb12-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="readpackagejson" class="level4">
<h4 class="anchored" data-anchor-id="readpackagejson"><code>ReadPackageJson</code></h4>
<p>This method reads the JSON file containing the list of packages to install and returns a <code>PackageList</code> object.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to read the JSON file and return a PackageList object</span></span>
<span id="cb13-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> PackageList <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPackageJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb13-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert the PackagesJSONGUID to an asset path</span></span>
<span id="cb13-5">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> assetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AssetDatabase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIDToAssetPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>PackagesJSONGUID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Read the JSON file content as a string</span></span>
<span id="cb13-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> jsonString <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadAllText</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>assetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Deserialize the JSON string into a PackageList object</span></span>
<span id="cb13-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>PackageList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>jsonString<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Unity CV Image Gallery package. The package helps facilitate testing computer vision applications in Unity projects by providing an interactive image gallery.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-cv-image-gallery">unity-cv-image-gallery</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below, along with links for other demo projects that use the Unity CV Image Gallery package.</p>
<ul>
<li><a href="https://github.com/cj-mills/UnityMediaDisplay_Demo">Unity Media Display Demo</a>: A simple demo project demonstrating how to use <code>the unity-media-display</code> and <code>unity-cv-image-gallery</code> packages in Unity.</li>
<li><a href="https://github.com/cj-mills/barracuda-image-classification-demo">Barracuda Image Classification Demo</a>: A simple Unity project demonstrating how to perform image classification with the <code>barracuda-inference-image-classification</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-posenet-demo">Barracuda Inference PoseNet Demo</a>: A simple Unity project demonstrating how to perform 2D human pose estimation with the <code>barracuda-inference-posenet</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-cv-image-gallery-walkthrough/index.html</guid>
  <pubDate>Wed, 03 May 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Code Walkthrough: Unity Media Display Package</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/unity-media-display-walkthrough/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Package Overview</li>
<li>Code Explanation</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>The <a href="https://github.com/cj-mills/unity-media-display">Unity Media Display</a> package simplifies the creation and management of demo screens for displaying test images, videos, and webcam streams in Unity projects. As many of my tutorials use a demo screen, this package makes that shared functionality more modular and reusable, allowing me to streamline my tutorial content. Check out the demo video below to see this package in action.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/unity-media-display-demo.mp4" class="img-fluid" controls=""><a href="./videos/unity-media-display-demo.mp4">Video</a></video></p>
</figure>
</div>
<p>In this post, I’ll walk through the package code, providing a solid understanding of its components and their roles.</p>
</section>
<section id="package-overview" class="level2">
<h2 class="anchored" data-anchor-id="package-overview">Package Overview</h2>
<p>The package contains several C# scripts that work together to enable easy management of demo screens.</p>
<ol type="1">
<li><code>BaseScreenManager.cs</code>: This abstract class is the foundation for managing in-scene screen objects. It provides essential functionality and basic structure for derived classes, allowing you to create custom screen managers tailored to your project’s needs.</li>
<li><code>MediaDisplayManager.cs</code>: This script offers utility methods for setting up and managing a screen object in Unity. It handles initializing and updating screen textures, transformations, and webcam streams.</li>
<li><code>TextureChangeEvent.cs</code>: This script triggers when a material’s main texture changes, allowing for efficient texture updates and seamless transitions between different media sources.</li>
<li><code>AddCustomDefineSymbol.cs</code>: An Editor script that automatically adds a custom scripting define symbol to the project after the package installs.</li>
<li><code>ShaderIncludePostprocessor.cs</code>: This build postprocessor script includes the shader used by the screen material in the build process and only runs in the Unity Editor.</li>
</ol>
</section>
<section id="code-explanation" class="level2">
<h2 class="anchored" data-anchor-id="code-explanation">Code Explanation</h2>
<p>In this section, we will delve deeper into the Unity Media Display package by examining the purpose and functionality of each C# script. We’ll discuss how these scripts work together to enable seamless management of demo screens for displaying test images, videos, and webcam streams.</p>
<section id="basescreenmanager.cs" class="level3">
<h3 class="anchored" data-anchor-id="basescreenmanager.cs"><code>BaseScreenManager.cs</code></h3>
<p>This script provides an abstract class for managing in-scene screen objects, allowing you to create custom screen managers tailored to your project’s needs. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-media-display/blob/main/Runtime/Scripts/BaseScreenManager.cs">unity-media-display/Runtime/Scripts/BaseScreenManager.cs</a></li>
</ul>
<p>The <code>BaseScreenManager</code> class includes several serialized fields for configuring scene components and settings, webcam settings, and toggle-key settings.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scene components and settings</span></span>
<span id="cb1-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Screen object in the scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> GameObject screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Camera object in the scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> GameObject cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A test texture to display on the screen"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> Texture testTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A framerate cap to reduce lag"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> maxFrameRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Webcam settings</span></span>
<span id="cb1-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Option to use webcam as input"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Requested webcam dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> Vector2Int webcamDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1280</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Requested webcam framerate"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> webcamFrameRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-20"></span>
<span id="cb1-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Toggle key settings</span></span>
<span id="cb1-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Toggle Key"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Key to toggle between image and webcam feed"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-24"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>SerializeField<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> KeyCode toggleKey <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> KeyCode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Space</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>It also contains protected variables for managing the current texture, webcam devices, and the webcam texture.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> Texture currentTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> WebCamDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> WebCamTexture webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>Lastly, the script has some constant values for working with webcam devices.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The value to multiply the webcam frame rate by to determine the application's target framerate.</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> WebcamFrameRateMultiplier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The value for the width of an uninitialized webcam device</span></span>
<span id="cb3-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> UninitializedWebcamWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p>The script includes several methods:</p>
<section id="onenable" class="level4">
<h4 class="anchored" data-anchor-id="onenable"><code>OnEnable</code></h4>
<p>Subscribes to the <code>TextureChangeEvent</code> for handling changes in the <code>mainTexture</code> of a <code>Material</code>.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Subscribe to the texture change event</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnEnable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-4">    TextureChangeEvent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnMainTextureChanged</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> HandleMainTextureChanged<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initialize" class="level4">
<h4 class="anchored" data-anchor-id="initialize"><code>Initialize</code></h4>
<p>Sets the application’s target frame rate, configures the webcam devices, and initializes the current webcam if the <code>useWebcam</code> option is enabled.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initializes the application's target frame rate and configures the webcam devices.</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Initialize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Limit the application's target frame rate to reduce lag.</span></span>
<span id="cb5-5">    Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetFrameRate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> maxFrameRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the list of available webcam devices.</span></span>
<span id="cb5-7">    webcamDevices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebCamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If no webcam devices are available, disable the useWebcam option.</span></span>
<span id="cb5-9">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the current webcam device to the first available device, if any.</span></span>
<span id="cb5-11">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatedisplay" class="level4">
<h4 class="anchored" data-anchor-id="updatedisplay"><code>UpdateDisplay</code></h4>
<p>Updates the display with the current texture, sets up the webcam if necessary, and starts a coroutine to update the screen texture asynchronously.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Updates the display with the current texture (either a test texture or the webcam feed).</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateDisplay</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set up the webcam if necessary.</span></span>
<span id="cb6-5">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetupWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the current texture based on the useWebcam option.</span></span>
<span id="cb6-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateCurrentTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb6-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start a coroutine to asynchronously update the screen texture.</span></span>
<span id="cb6-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StartCoroutine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTextureAsync</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">());</span></span>
<span id="cb6-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="setupwebcam" class="level4">
<h4 class="anchored" data-anchor-id="setupwebcam"><code>SetupWebcam</code></h4>
<p>If the <code>useWebcam</code> option is enabled and there are available webcam devices, this method initializes the webcam device and stops it if the option is disabled.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sets up the webcam if the useWebcam option is enabled.</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetupWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If there are no webcam devices, return immediately.</span></span>
<span id="cb7-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6"></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the useWebcam option is enabled, initialize the webcam.</span></span>
<span id="cb7-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the webcam and check if it started playing.</span></span>
<span id="cb7-11">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> webcamPlaying <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MediaDisplayManager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ref</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamFrameRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the webcam failed to start playing, disable the useWebcam option.</span></span>
<span id="cb7-13">        useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamPlaying <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the useWebcam option is disabled and the webcam texture is playing, stop the webcam.</span></span>
<span id="cb7-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-18">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatecurrenttexture" class="level4">
<h4 class="anchored" data-anchor-id="updatecurrenttexture"><code>UpdateCurrentTexture</code></h4>
<p>This method updates the current texture and target frame rate based on the <code>useWebcam</code> option.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Updates the current texture and target frame rate based on the useWebcam option.</span></span>
<span id="cb8-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateCurrentTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb8-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the current texture to the webcam texture if useWebcam is enabled, otherwise use the test texture.</span></span>
<span id="cb8-5">    currentTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> testTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the target frame rate based on whether the webcam is being used or not.</span></span>
<span id="cb8-7">    Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">targetFrameRate</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamFrameRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> WebcamFrameRateMultiplier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> maxFrameRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatescreentextureasync" class="level4">
<h4 class="anchored" data-anchor-id="updatescreentextureasync"><code>UpdateScreenTextureAsync</code></h4>
<p>A coroutine that waits until the webcamTexture is ready (if <code>useWebcam</code> is enabled) and updates the screen texture with the current texture (either the test texture or the webcam feed).</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Coroutine to update the screen texture asynchronously.</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> IEnumerator <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTextureAsync</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wait until the webcamTexture is ready if useWebcam is enabled.</span></span>
<span id="cb9-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">while</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> UninitializedWebcamWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-7">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-9"></span>
<span id="cb9-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the screen texture with the current texture (image or webcam feed).</span></span>
<span id="cb9-11">    MediaDisplayManager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> currentTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb9-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="handlemaintexturechanged" class="level4">
<h4 class="anchored" data-anchor-id="handlemaintexturechanged"><code>HandleMainTextureChanged</code></h4>
<p>This method handles the <code>TextureChangeEvent</code>, updating the current texture and stopping the webcam if the new main texture differs from the webcam texture.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Handle the texture change event.</span></span>
<span id="cb10-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">HandleMainTextureChanged</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Material material<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the current texture.</span></span>
<span id="cb10-5">    currentTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> material<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the new main texture is different from the webcam texture and the webcam is playing, stop the webcam.</span></span>
<span id="cb10-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> material<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-9">        useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-10">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb10-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="ondisable" class="level4">
<h4 class="anchored" data-anchor-id="ondisable"><code>OnDisable</code></h4>
<p>Lastly, the <code>OnDisable()</code> method unsubscribes from the <code>TextureChangeEvent</code> when the script is disabled.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Unsubscribe from the texture change event when the script is disabled.</span></span>
<span id="cb11-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">protected</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">virtual</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb11-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-4">    TextureChangeEvent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnMainTextureChanged</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-=</span> HandleMainTextureChanged<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="mediadisplaymanager.cs" class="level3">
<h3 class="anchored" data-anchor-id="mediadisplaymanager.cs"><code>MediaDisplayManager.cs</code></h3>
<p>The <code>MediaDisplayManager</code> script contains a static utility class that provides various methods to set up and manage media displays in Unity. This script sets screen textures, updates screen transforms, and initializes camera and webcam configurations. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-media-display/blob/main/Runtime/Scripts/MediaDisplayManager.cs">unity-media-display/Runtime/Scripts/MediaDisplayManager.cs</a></li>
</ul>
<section id="setscreentexture" class="level4">
<h4 class="anchored" data-anchor-id="setscreentexture"><code>SetScreenTexture</code></h4>
<p>This method sets the texture for the screen object and raises a texture change event.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Sets the texture for the screen object and raises a texture change event.</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenObject"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GameObject to be used as the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"displayTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The Texture to display on the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScreenTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>GameObject screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Texture displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to get the MeshRenderer component from the screen object</span></span>
<span id="cb12-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TryGetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">out</span> MeshRenderer meshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new material with the Unlit/Texture shader and set its main texture</span></span>
<span id="cb12-12">        Material screenMaterial <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Shader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unlit/Texture"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb12-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-14">            mainTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayTexture</span>
<span id="cb12-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb12-16"></span>
<span id="cb12-17">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Assign the material to the mesh renderer</span></span>
<span id="cb12-18">        meshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenMaterial<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-19"></span>
<span id="cb12-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Raise a texture change event to inform other scripts</span></span>
<span id="cb12-21">        TextureChangeEvent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RaiseMainTextureChangedEvent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>meshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatescreentransform" class="level4">
<h4 class="anchored" data-anchor-id="updatescreentransform"><code>UpdateScreenTransform</code></h4>
<p>This method updates the screen object’s rotation, scale, and position based on the display texture and mirror settings.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Updates the screen object's rotation, scale, and position based on the display texture and mirror settings.</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenObject"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GameObject to be used as the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"displayTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The Texture displayed on the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"mirrorScreen"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Optional parameter to mirror the screen horizontally. Default is false.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb13-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>GameObject screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Texture displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the width and height of the display texture</span></span>
<span id="cb13-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-12"></span>
<span id="cb13-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the rotation, scale, and position of the screen object</span></span>
<span id="cb13-14">    screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Quaternion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Euler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> 180f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-15">    screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-16">    screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-17"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializecamera" class="level4">
<h4 class="anchored" data-anchor-id="initializecamera"><code>InitializeCamera</code></h4>
<p>This method initializes the camera used for displaying the screen.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes the camera used for displaying the screen.</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"cameraObject"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GameObject with a Camera component to be used for displaying the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDimensions"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>GameObject cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Attempt to get the Camera component from the camera object</span></span>
<span id="cb14-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">TryGetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">out</span> Camera camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb14-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the position of the camera object</span></span>
<span id="cb14-12">        Vector3 position <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>10f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-13">        cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-14"></span>
<span id="cb14-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Configure the camera for orthographic mode</span></span>
<span id="cb14-16">        camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographic</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-17"></span>
<span id="cb14-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the aspect ratios of the screen object and the camera's viewport</span></span>
<span id="cb14-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> screenAspectRatio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> cameraAspectRatio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pixelWidth</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pixelHeight</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-21"></span>
<span id="cb14-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the camera's orthographic size based on the aspect ratios</span></span>
<span id="cb14-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenAspectRatio <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> cameraAspectRatio<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb14-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-25">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wider screen object</span></span>
<span id="cb14-26">            camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographicSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aspect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-27">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb14-29">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-30">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Taller screen object</span></span>
<span id="cb14-31">            camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographicSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-32">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="initializewebcam" class="level4">
<h4 class="anchored" data-anchor-id="initializewebcam"><code>InitializeWebcam</code></h4>
<p>This method initializes and plays a webcam stream with the specified settings.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initializes and plays a webcam stream with the specified settings.</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"webcamTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A reference to the WebCamTexture instance to be initialized and played.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"deviceName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the webcam device to be used for streaming.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"webcamDimensions"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The desired resolution of the webcam stream.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"webcamFrameRate"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The desired frame rate of the webcam stream. Default is 60.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Returns true if the webcam stream has started playing, false otherwise.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb15-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ref</span> WebCamTexture webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Vector2Int webcamDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> webcamFrameRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// If the webcam texture is not null and it is playing, stop it</span></span>
<span id="cb15-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-14">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb15-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-16"></span>
<span id="cb15-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new WebCamTexture instance with the specified settings</span></span>
<span id="cb15-18">    webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebCamTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamFrameRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-19"></span>
<span id="cb15-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start playing the webcam stream</span></span>
<span id="cb15-21">    webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Play</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb15-22"></span>
<span id="cb15-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return true if the webcam stream has started playing, false otherwise</span></span>
<span id="cb15-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="updatescreentexture" class="level4">
<h4 class="anchored" data-anchor-id="updatescreentexture"><code>UpdateScreenTexture</code></h4>
<p>This method updates the texture, transform, and camera object.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Updates the texture, transform, and camera of the screen object.</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenObject"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GameObject to be used as the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"displayTexture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The Texture displayed on the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"cameraObject"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The GameObject with a Camera component to be used for displaying the screen.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"mirrorScreen"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">Optional parameter to mirror the screen horizontally. Default is false.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb16-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>GameObject screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Texture displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> GameObject cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the texture of the screen object</span></span>
<span id="cb16-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScreenTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-12"></span>
<span id="cb16-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the transform of the screen object based on the new texture dimensions and mirror settings</span></span>
<span id="cb16-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateScreenTransform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> mirrorScreen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-15"></span>
<span id="cb16-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the screen dimensions from the updated screen object</span></span>
<span id="cb16-17">    Vector2Int screenDimensions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> displayTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-18"></span>
<span id="cb16-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the camera for displaying the screen</span></span>
<span id="cb16-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cameraObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
</section>
<section id="texturechangeevent.cs" class="level3">
<h3 class="anchored" data-anchor-id="texturechangeevent.cs"><code>TextureChangeEvent.cs</code></h3>
<p>The <code>TextureChangeEvent</code> class defines and manages a custom event that triggers when the main texture of a Material object changes. This event allows other scripts to be notified and respond accordingly when the displayed texture updates. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-media-display/blob/main/Runtime/Scripts/TextureChangeEvent.cs">unity-media-display/Runtime/Scripts/TextureChangeEvent.cs</a></li>
</ul>
<ol type="1">
<li><code>OnMainTextureChangedDelegate</code>: This delegate defines the signature for the event handlers that get called when the main texture changes.</li>
<li><code>OnMainTextureChanged</code>: A static event of the <code>OnMainTextureChangedDelegate</code> type. It allows other scripts to subscribe and respond to texture change events.</li>
<li><code>RaiseMainTextureChangedEvent</code>: This static method gets called when the main texture of a Material object changes. The method invokes the <code>OnMainTextureChanged</code> event, calling any subscribed event handlers and passing the updated material as an argument.</li>
</ol>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> TextureChangeEvent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> MonoBehaviour</span>
<span id="cb17-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define a delegate with the desired signature</span></span>
<span id="cb17-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">delegate</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnMainTextureChangedDelegate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Material material<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-5"></span>
<span id="cb17-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a static event with the delegate type</span></span>
<span id="cb17-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">event</span> OnMainTextureChangedDelegate OnMainTextureChanged<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-8"></span>
<span id="cb17-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Method to call when the mainTexture has been changed</span></span>
<span id="cb17-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RaiseMainTextureChangedEvent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Material material<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-12">        OnMainTextureChanged<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Invoke</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>material<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
<section id="addcustomdefinesymbol.cs" class="level3">
<h3 class="anchored" data-anchor-id="addcustomdefinesymbol.cs"><code>AddCustomDefineSymbol.cs</code></h3>
<p>This Editor script contains a class that adds a custom define symbol to the project. We can use this custom symbol to prevent code that relies on this package from executing unless the Unity Media Display package is present. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-media-display/blob/main/Editor/AddCustomDefineSymbol.cs">unity-media-display/Editor/AddCustomDefineSymbol.cs</a></li>
</ul>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> DependencyDefineSymbolAdder</span>
<span id="cb18-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Constant string representing the custom define symbol.</span></span>
<span id="cb18-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> CustomDefineSymbol <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CJM_UNITY_MEDIA_DISPLAY"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-5"></span>
<span id="cb18-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This method is called on Unity editor load to ensure the custom define symbol is added.</span></span>
<span id="cb18-7">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoadMethod<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb18-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddCustomDefineSymbol</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb18-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the currently selected build target group.</span></span>
<span id="cb18-11">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> buildTargetGroup <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorUserBuildSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">selectedBuildTargetGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-12"></span>
<span id="cb18-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Retrieve the current scripting define symbols for the selected build target group.</span></span>
<span id="cb18-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-15"></span>
<span id="cb18-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the custom define symbol is already in the list of define symbols.</span></span>
<span id="cb18-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>CustomDefineSymbol<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb18-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-19">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Append the custom define symbol to the list of define symbols.</span></span>
<span id="cb18-20">            defines <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">";{CustomDefineSymbol}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-21"></span>
<span id="cb18-22">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the updated list of define symbols for the selected build target group.</span></span>
<span id="cb18-23">            PlayerSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetScriptingDefineSymbolsForGroup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>buildTargetGroup<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> defines<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-24"></span>
<span id="cb18-25">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Log the successful addition of the custom define symbol.</span></span>
<span id="cb18-26">            Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Added custom define symbol '{CustomDefineSymbol}' to the project."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-27">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-28">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<hr>
</section>
<section id="shaderincludepostprocessor.cs" class="level3">
<h3 class="anchored" data-anchor-id="shaderincludepostprocessor.cs"><code>ShaderIncludePostprocessor.cs</code></h3>
<p>The <code>ShaderIncludePostprocessor.cs</code> script includes the shader used by the screen material in the build by adding it to the list of <code>Always Included Shaders</code> in the Graphics Settings. This script implements the <code>IPostprocessBuildWithReport</code> interface and runs only in the Unity Editor. The complete code is available on GitHub at the link below.</p>
<ul>
<li><a href="https://github.com/cj-mills/unity-media-display/blob/main/Editor/ShaderIncludePostprocessor.cs">unity-media-display/Runtime/Editor/ShaderIncludePostprocessor.cs</a></li>
</ul>
<p>The <code>ShaderIncludePostprocessor</code> class includes a property to specify the order in which the build postprocessor gets called.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// The order in which this postprocessor is called.</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> callbackOrder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">get</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<section id="onpostprocessbuild" class="level4">
<h4 class="anchored" data-anchor-id="onpostprocessbuild"><code>OnPostprocessBuild</code></h4>
<p>This method gets called after the build completes. It calls the <code>AddShaderToAlwaysIncludedShaders</code> method with the <code>"Unlit/Texture"</code> shader name, ensuring the built project includes it.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb20-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Called after the build has been completed.</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"report"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The BuildReport object containing information about the build.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb20-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnPostprocessBuild</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>BuildReport report<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddShaderToAlwaysIncludedShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Unlit/Texture"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="addshadertoalwaysincludedshaders" class="level4">
<h4 class="anchored" data-anchor-id="addshadertoalwaysincludedshaders"><code>AddShaderToAlwaysIncludedShaders</code></h4>
<p>This method adds the specified shader to the <code>Always Included Shaders</code> list in the Graphics Settings.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Adds the specified shader to the list of always included shaders in GraphicsSettings.</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"shaderName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the shader to add to the always included shaders list.</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb21-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddShaderToAlwaysIncludedShaders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> shaderName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-7">    Shader shader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Shader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>shaderName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>shader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-10">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogWarning</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shader '{shaderName}' not found."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-13"></span>
<span id="cb21-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the GraphicsSettings asset</span></span>
<span id="cb21-15">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> graphicsSettings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> AssetDatabase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadAssetAtPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GraphicsSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ProjectSettings/GraphicsSettings.asset"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>graphicsSettings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">null</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-18">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogWarning</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GraphicsSettings.asset not found."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-19">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-21"></span>
<span id="cb21-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a serialized object from the GraphicsSettings asset</span></span>
<span id="cb21-23">    SerializedObject serializedGraphicsSettings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SerializedObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>graphicsSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find the "m_AlwaysIncludedShaders" property in the serialized object</span></span>
<span id="cb21-25">    SerializedProperty alwaysIncludedShadersProp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> serializedGraphicsSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindProperty</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"m_AlwaysIncludedShaders"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-26"></span>
<span id="cb21-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through the shaders in the Always Included Shaders list</span></span>
<span id="cb21-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> alwaysIncludedShadersProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arraySize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb21-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-30">        SerializedProperty shaderProp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alwaysIncludedShadersProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetArrayElementAtIndex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-31">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>shaderProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">objectReferenceValue</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> shader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-32">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-33">            Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shader '{shaderName}' is already in the Always Included Shaders list."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-34">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-35">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-36">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-37"></span>
<span id="cb21-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the specified shader to the Always Included Shaders list</span></span>
<span id="cb21-39">    alwaysIncludedShadersProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InsertArrayElementAtIndex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>alwaysIncludedShadersProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arraySize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-40">    SerializedProperty newShaderProp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> alwaysIncludedShadersProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetArrayElementAtIndex</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>alwaysIncludedShadersProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arraySize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-41">    newShaderProp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">objectReferenceValue</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> shader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-42">    serializedGraphicsSettings<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ApplyModifiedProperties</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-43"></span>
<span id="cb21-44">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Shader '{shaderName}' has been added to the Always Included Shaders list."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-45"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>This post provided an in-depth walkthrough of the code for the Unity Media Display package. The package helps simplify creating and managing demo screens for displaying test images, video, and webcam streams in Unity projects.</p>
<p>You can continue to explore the package by going to its GitHub repository linked below, where you will also find instructions for installing it using the Unity Package Manager.</p>
<ul>
<li>GitHub Repository: <a href="https://github.com/cj-mills/unity-media-display">unity-media-display</a></li>
</ul>
<p>You can find the code for the demo project shown in the video at the beginning of this post linked below, along with links for other demo projects that use the Unity Media Display package.</p>
<ul>
<li><a href="https://github.com/cj-mills/UnityMediaDisplay_Demo">Unity Media Display Demo</a>: A simple demo project demonstrating how to use <code>the unity-media-display</code> and <code>unity-cv-image-gallery</code> packages in Unity.</li>
<li><a href="https://github.com/cj-mills/barracuda-image-classification-demo">Barracuda Image Classification Demo</a>: A simple Unity project demonstrating how to perform image classification with the <code>barracuda-inference-image-classification</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-posenet-demo">Barracuda Inference PoseNet Demo</a>: A simple Unity project demonstrating how to perform 2D human pose estimation with the <code>barracuda-inference-posenet</code> package.</li>
<li><a href="https://github.com/cj-mills/barracuda-inference-yolox-demo">Barracuda Inference YOLOX Demo</a>: A simple Unity project demonstrating how to perform object detection with the <code>barracuda-inference-yolox</code> package.</li>
</ul>


</section>

 ]]></description>
  <category>unity</category>
  <category>walkthrough</category>
  <guid>christianjmills.com/posts/unity-media-display-walkthrough/index.html</guid>
  <pubDate>Tue, 25 Apr 2023 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Exploring the Impact of Different Image Augmentations on Hand Gesture Recognition</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Environment Setup</li>
<li>Dataset</li>
<li>Methodology</li>
<li>Results</li>
<li>Discussion</li>
<li>Conclusion</li>
</ul>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Computer vision models can learn to recognize complex patterns and objects in images. However, they often struggle to generalize to new input. One solution is data augmentation, a technique that expands the size and diversity of a dataset by creating variations of existing images. The model never sees the exact image twice, helping it learn general features versus memorizing specific examples.</p>
<p>In this post, I will explore how different augmentations can impact model performance using a hand gesture dataset. Hand gesture recognition has potential applications in human-computer interaction, robotics, and sign language interpretation. Hand gesture recognition is challenging due to the variability of hand poses, shapes, and lighting conditions, making it a good candidate for image augmentation. The results of these experiments should provide insights into the best practices for training deep learning models to handle diverse input.</p>
<p>You can find links to view the training code and run it on <a href="https://colab.research.google.com/?utm_source=scs-index">Google Colab</a> and <a href="https://www.kaggle.com/docs/notebooks">Kaggle</a> below.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Colab</th>
<th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kaggle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/fastai-2022p2-notes/blob/main/notebooks/miniai-data-augmentation-experiments.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/fastai-2022p2-notes/blob/main/notebooks/miniai-data-augmentation-experiments.ipynb">Open In Colab</a></td>
<td><a href="https://kaggle.com/kernels/welcome?src=https://github.com/cj-mills/fastai-2022p2-notes/blob/main/notebooks/miniai-data-augmentation-experiments-kaggle.ipynb">Kaggle</a></td>
</tr>
</tbody>
</table>
</section>
<section id="environment-setup" class="level2">
<h2 class="anchored" data-anchor-id="environment-setup">Environment Setup</h2>
<p>The experiment code depends on the <a href="https://github.com/fastai/course22p2/tree/master/miniai">miniai</a> library developed for the <a href="https://www.fast.ai/posts/part2-2022.html">Practical Deep Learning 2022 Part 2</a> course. First, we’ll check if we have the miniai package installed. If not, we clone the course repository from GitHub and install the miniai package.</p>
<p><strong>Install dependencies</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %%capture</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># try:</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     import miniai</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># except ImportError:</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     !git clone https://github.com/fastai/course22p2.git</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     !pip install -e ./course22p2</span></span></code></pre></div>
<p>Next, we need to install several pip packages.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %%capture</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install torch torchvision torchaudio torcheval</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install numpy pandas pillow wandb</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install cjm_pil_utils cjm_kaggle_utils cjm_pytorch_utils cjm_pandas_utils</span></span></code></pre></div>
<p>After installing the required dependencies, we can import them into our Jupyter notebook.</p>
<p><strong>Import dependencies</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> hashlib</span>
<span id="cb3-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb3-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> random</span>
<span id="cb3-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> multiprocessing</span>
<span id="cb3-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb3-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb3-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> functools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> partial</span>
<span id="cb3-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> copy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> copy</span>
<span id="cb3-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> glob <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb3-11"></span>
<span id="cb3-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Image</span>
<span id="cb3-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb3-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timm</span>
<span id="cb3-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> tqdm.auto <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> tqdm</span>
<span id="cb3-16"></span>
<span id="cb3-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import pandas module for data manipulation</span></span>
<span id="cb3-18"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-19"></span>
<span id="cb3-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set options for Pandas DataFrame display</span></span>
<span id="cb3-21">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_colwidth'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Do not truncate the contents of cells in the DataFrame</span></span>
<span id="cb3-22">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_rows'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display all rows in the DataFrame</span></span>
<span id="cb3-23">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display all columns in the DataFrame</span></span>
<span id="cb3-24"></span>
<span id="cb3-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import PyTorch dependencies</span></span>
<span id="cb3-26"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch</span>
<span id="cb3-27"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torch.nn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> nn</span>
<span id="cb3-28"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torchvision <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> transforms, models</span>
<span id="cb3-29"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> torchvision.transforms.functional <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> TF</span>
<span id="cb3-30"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torch.utils.data <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Dataset, DataLoader</span>
<span id="cb3-31"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torcheval.tools <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> get_module_summary</span>
<span id="cb3-32"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> torcheval.metrics <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MulticlassAccuracy</span>
<span id="cb3-33"></span>
<span id="cb3-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import miniai dependencies</span></span>
<span id="cb3-35"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> fastcore.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> fc</span>
<span id="cb3-36"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.datasets <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> DataLoaders</span>
<span id="cb3-37"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.conv <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> def_device</span>
<span id="cb3-38"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.learner <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span>
<span id="cb3-39"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.activations <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Hook, ActivationStats</span>
<span id="cb3-40"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.accel <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> MixedPrecision, AccelerateCB</span>
<span id="cb3-41"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.init <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BatchTransformCB, GeneralRelu, init_weights, set_seed, conv</span>
<span id="cb3-42"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.sgd <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> BatchSchedCB</span>
<span id="cb3-43"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> miniai.resnet <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ResBlock</span>
<span id="cb3-44"></span>
<span id="cb3-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import utility functions</span></span>
<span id="cb3-46"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_kaggle_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> save_kaggle_creds, dl_kaggle</span>
<span id="cb3-47"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pil_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resize_img, get_img_files, stack_imgs</span>
<span id="cb3-48"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pytorch_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pil_to_tensor, tensor_to_pil, tensor_stats_df, get_torch_device, denorm_img_tensor</span>
<span id="cb3-49"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> cjm_pandas_utils.core <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> markdown_to_pandas</span></code></pre></div>
</section>
<section id="dataset" class="level2">
<h2 class="anchored" data-anchor-id="dataset">Dataset</h2>
<p>The dataset contains images from <a href="https://github.com/hukenovs/hagrid">HaGRID</a> (HAnd Gesture Recognition Image Dataset) modified for image classification. It has 125,912 samples for 18 distinct hand gestures and 27,823 images containing no gestures. The dataset includes a wide range of people, environmental settings, illumination, and camera placement. You can access the dataset on <a href="https://www.kaggle.com/">Kaggle</a> at the link below.</p>
<ul>
<li><p><a href="https://www.kaggle.com/datasets/innominate817/hagrid-classification-512p-no-gesture-150k">HaGRID Classification 512p no_gesture 150k</a></p></li>
<li><div>
<details>
<summary>
<strong>Reference Images</strong>
</summary>
<br>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table>
<thead>
<tr>
<th>
Class
</th>
<th>
Image
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
call
</td>
<td>
<img alt="call" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/call.jpg">
</td>
</tr>
<tr>
<td>
dislike
</td>
<td>
<img alt="dislike" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/dislike.jpg">
</td>
</tr>
<tr>
<td>
fist
</td>
<td>
<img alt=" fist" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/fist.jpg">
</td>
</tr>
<tr>
<td>
four
</td>
<td>
<img alt="four" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/four.jpg">
</td>
</tr>
<tr>
<td>
like
</td>
<td>
<img alt=" like" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/like.jpg">
</td>
</tr>
<tr>
<td>
mute
</td>
<td>
<img alt=" mute" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/mute.jpg">
</td>
</tr>
<tr>
<td>
ok
</td>
<td>
<img alt=" ok" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/ok.jpg">
</td>
</tr>
<tr>
<td>
one
</td>
<td>
<img alt=" one" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/one.jpg">
</td>
</tr>
<tr>
<td>
palm
</td>
<td>
<img alt=" palm" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/palm.jpg">
</td>
</tr>
<tr>
<td>
peace
</td>
<td>
<img alt="peace" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/peace.jpg">
</td>
</tr>
<tr>
<td>
peace_inverted
</td>
<td>
<img alt="peace_inverted" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/peace_inverted.jpg">
</td>
</tr>
<tr>
<td>
rock
</td>
<td>
<img alt="rock" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/rock.jpg">
</td>
</tr>
<tr>
<td>
stop
</td>
<td>
<img alt="stop" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/stop.jpg">
</td>
</tr>
<tr>
<td>
stop_inverted
</td>
<td>
<img alt="stop_inverted" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/stop_inverted.jpg">
</td>
</tr>
<tr>
<td>
three
</td>
<td>
<img alt="three" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/three.jpg">
</td>
</tr>
<tr>
<td>
three2
</td>
<td>
<img alt="three2" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/three2.jpg">
</td>
</tr>
<tr>
<td>
two_up
</td>
<td>
<img alt=" two_up" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/two_up.jpg">
</td>
</tr>
<tr>
<td>
two_up_inverted
</td>
<td>
<img alt="two_up_inverted" src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/hagrid_samples/two_up_inverted.jpg">
</td>
</tr>
</tbody>

</table>
</div>
</details>
</div></li>
</ul>
<p>First, we set our Kaggle credentials by providing our Kaggle username and API token. We save the credentials to a file, which allows us to authenticate and download the dataset from Kaggle.</p>
<p><strong>Set Kaggle username and API token</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1">username <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb4-2">key <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span></code></pre></div>
<p><strong>Save Kaggle credentials to file</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">save_kaggle_creds(username, key, overwrite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<pre class="text"><code>Empty username.</code></pre>
<p>Next, we define the directories to store the archive files and datasets and create the directories if they don’t already exist.</p>
<p><strong>Set directory paths</strong></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store datasets</span></span>
<span id="cb7-2">dataset_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/mnt/980_1TB_2/Datasets/"</span>)</span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the dataset directory if it does not exist</span></span>
<span id="cb7-4">dataset_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Dataset Directory: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define path to store archive files</span></span>
<span id="cb7-8">archive_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../Archive'</span></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the archive directory if it does not exist</span></span>
<span id="cb7-10">archive_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Archive Directory: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre class="text"><code>Dataset Directory: /mnt/980_1TB_2/Datasets
Archive Directory: /mnt/980_1TB_2/Datasets/../Archive</code></pre>
<p>We use the Kaggle dataset name to construct the save paths for the archive file and the extracted dataset.</p>
<p><strong>Set Kaggle dataset</strong></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the name of the dataset</span></span>
<span id="cb9-2">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-classification-512p-no-gesture-150k'</span></span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the Kaggle dataset name by combining the username and dataset name</span></span>
<span id="cb9-5">kaggle_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'innominate817/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the zip file that contains the dataset</span></span>
<span id="cb9-8">archive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip'</span>)</span>
<span id="cb9-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Archive Path: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the path to the directory where the dataset will be extracted</span></span>
<span id="cb9-12">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb9-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Dataset Path: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre class="text"><code>Archive Path: /mnt/980_1TB_2/Datasets/../Archive/hagrid-classification-512p-no-gesture-150k.zip
Dataset Path: /mnt/980_1TB_2/Datasets/hagrid-classification-512p-no-gesture-150k</code></pre>
<p>Finally, we download the Kaggle dataset and extract it to the specified directory.</p>
<p><strong>Download Kaggle dataset</strong></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">dl_kaggle(kaggle_dataset, archive_path, dataset_path)</span></code></pre></div>
<pre class="text"><code>Dataset already downloaded</code></pre>
<p>The dataset organizes the images for different gesture types into separate subfolders.</p>
<p><strong>Get image classes</strong></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get all subfolders within the dataset_path</span></span>
<span id="cb13-2">folders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [folder <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> folder <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> dataset_path.glob(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'*/'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> folder.is_dir()]</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the folder names</span></span>
<span id="cb13-5">class_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f.name <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> folders]</span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the list of class names</span></span>
<span id="cb13-8">pd.DataFrame(class_names)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
call
</td>
</tr>
<tr>
<th>
1
</th>
<td>
dislike
</td>
</tr>
<tr>
<th>
2
</th>
<td>
fist
</td>
</tr>
<tr>
<th>
3
</th>
<td>
four
</td>
</tr>
<tr>
<th>
4
</th>
<td>
like
</td>
</tr>
<tr>
<th>
5
</th>
<td>
mute
</td>
</tr>
<tr>
<th>
6
</th>
<td>
no_gesture
</td>
</tr>
<tr>
<th>
7
</th>
<td>
ok
</td>
</tr>
<tr>
<th>
8
</th>
<td>
one
</td>
</tr>
<tr>
<th>
9
</th>
<td>
palm
</td>
</tr>
<tr>
<th>
10
</th>
<td>
peace
</td>
</tr>
<tr>
<th>
11
</th>
<td>
peace_inverted
</td>
</tr>
<tr>
<th>
12
</th>
<td>
rock
</td>
</tr>
<tr>
<th>
13
</th>
<td>
stop
</td>
</tr>
<tr>
<th>
14
</th>
<td>
stop_inverted
</td>
</tr>
<tr>
<th>
15
</th>
<td>
three
</td>
</tr>
<tr>
<th>
16
</th>
<td>
three2
</td>
</tr>
<tr>
<th>
17
</th>
<td>
two_up
</td>
</tr>
<tr>
<th>
18
</th>
<td>
two_up_inverted
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>After obtaining the class names for the dataset, we need to get the paths for all the images in the dataset.</p>
<p><strong>Get image paths</strong></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of all image file paths from the given folders</span></span>
<span id="cb14-2">img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [get_img_files(folder) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> folder <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> folders]</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Flatten the list of lists into a single list</span></span>
<span id="cb14-5">img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [path <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> class_paths <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> img_paths <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> class_paths]</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the number of image file paths</span></span>
<span id="cb14-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_paths)</span></code></pre></div>
<pre class="text"><code>153735</code></pre>
</section>
<section id="methodology" class="level2">
<h2 class="anchored" data-anchor-id="methodology">Methodology</h2>
<p>I tracked the experiment using <a href="https://wandb.ai">Weights &amp; Biases</a> and initialized all training runs with the same random seed to ensure the consistency and reproducibility of the results. I then reran the experiment with a few different seed values. You can view the Weights &amp; Biases projects at the links below.</p>
<ul>
<li><a href="https://wandb.ai/millscj/miniai_data_augmentation_seed-1">miniai_data_augmentation_seed-1</a></li>
<li><a href="https://wandb.ai/millscj/miniai_data_augmentation_seed-42">miniai_data_augmentation_seed-42</a></li>
<li><a href="https://wandb.ai/millscj/miniai_data_augmentation_seed-100">miniai_data_augmentation_seed-100</a></li>
<li><a href="https://wandb.ai/millscj/miniai_data_augmentation_seed-1234">miniai_data_augmentation_seed-1234</a></li>
</ul>
<p>You can view the projects without an account, but you will need one to create new projects.</p>
<p><strong>Log in to Weights &amp; Biases</strong></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> wandb</span>
<span id="cb16-2">wandb.login()</span></code></pre></div>
<pre class="text"><code>True</code></pre>
<p><strong>Set random number seed</strong></p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seed = 1</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seed = 42</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># seed = 100</span></span>
<span id="cb18-4">seed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1234</span></span>
<span id="cb18-5">set_seed(seed)</span></code></pre></div>
<p><strong>Set device and data type</strong></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_torch_device()</span>
<span id="cb19-2">dtype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.float32</span>
<span id="cb19-3">device, dtype</span></code></pre></div>
<pre class="text"><code>('cuda', torch.float32)</code></pre>
<section id="image-augmentations" class="level3">
<h3 class="anchored" data-anchor-id="image-augmentations">Image Augmentations</h3>
<p>For this experiment, I tested five different image augmentations. We can visualize each one using a sample image from the dataset.</p>
<p><strong>Display sample image</strong></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select a random image path from the list of image paths</span></span>
<span id="cb21-2">img_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(img_paths)</span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the name of the class of the image, which is the name of the parent folder</span></span>
<span id="cb21-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Class: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the image using the path</span></span>
<span id="cb21-8">sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_path)</span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb21-11">sample_img</span></code></pre></div>
<pre class="text"><code>Class: stop</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_40_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The first augmentation copies a square section from a random location on the image and pastes it in a random spot. I use random patch sizes ranging from 10-20% of the image dimensions to reduce the chance of obscuring the hand gestures.</p>
<section id="random-square-copy-transform" class="level5">
<h5 class="anchored" data-anchor-id="random-square-copy-transform"><strong>Random Square Copy Transform</strong></h5>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> rand_square_copy(img_tensor:torch.Tensor, pct:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>):</span>
<span id="cb23-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Copy data from a randomly selected square region to another randomly selected square region of an image tensor.</span></span>
<span id="cb23-4"></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb23-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    img_tensor (torch.Tensor): The input image tensor.</span></span>
<span id="cb23-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    pct (float): The percentage of the image tensor's size to be used as the side length of the square regions.</span></span>
<span id="cb23-8"></span>
<span id="cb23-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    torch.Tensor: The modified input image tensor.</span></span>
<span id="cb23-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb23-12">    </span>
<span id="cb23-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the shape of the tensor</span></span>
<span id="cb23-14">    h, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor.shape[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb23-15">    </span>
<span id="cb23-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the size of the square</span></span>
<span id="cb23-17">    szx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h)</span>
<span id="cb23-18">    szy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb23-19">    </span>
<span id="cb23-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the top-left coordinate of the first square</span></span>
<span id="cb23-21">    stx1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h)</span>
<span id="cb23-22">    sty1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb23-23">    </span>
<span id="cb23-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the top-left coordinate of the second square</span></span>
<span id="cb23-25">    stx2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h)</span>
<span id="cb23-26">    sty2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb23-27">    </span>
<span id="cb23-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy the data from the second square to the first square</span></span>
<span id="cb23-29">    img_tensor[..., stx1:stx1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szx, sty1:sty1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szy] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor[..., stx2:stx2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szx, sty2:sty2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szy]</span>
<span id="cb23-30">    </span>
<span id="cb23-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the modified input img_tensor</span></span>
<span id="cb23-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> img_tensor</span></code></pre></div>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> RandSquareCopy(nn.Module):</span>
<span id="cb24-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, min_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, max_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb24-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        A PyTorch module that applies the `rand_square_copy` function to an input tensor multiple times.</span></span>
<span id="cb24-5"></span>
<span id="cb24-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb24-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pct (float, optional): The percentage of the tensor's size to be used as the side length of </span></span>
<span id="cb24-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                               the square regions.</span></span>
<span id="cb24-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        min_num (int, optional): The minimum number of times to apply the `rand_square_copy` function.</span></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max_num (int, optional): The maximum number of times to apply the `rand_square_copy` function.</span></span>
<span id="cb24-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb24-12">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb24-13">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pct</span>
<span id="cb24-14">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_num</span>
<span id="cb24-15">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_num</span>
<span id="cb24-16">        </span>
<span id="cb24-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x): </span>
<span id="cb24-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the `rand_square_copy` function to the input tensor multiple times</span></span>
<span id="cb24-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(random.randint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_num, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_num)):</span>
<span id="cb24-20">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rand_square_copy(x, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,random.random()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pct))</span>
<span id="cb24-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span></code></pre></div>
<p><strong>Test the transform</strong></p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">rand_square_copy_tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandSquareCopy(pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, min_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, max_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-2"></span>
<span id="cb25-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the PIL image to a tensor</span></span>
<span id="cb25-4">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.PILToTensor()(sample_img)</span>
<span id="cb25-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(img_tensor.shape)</span>
<span id="cb25-6"></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the `rand_square_copy_tf` transform to the image tensor</span></span>
<span id="cb25-8">tensor_to_pil(rand_square_copy_tf(img_tensor))</span></code></pre></div>
<pre class="text"><code>torch.Size([3, 512, 512])</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_46_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The second augmentation copies random pixels and pastes them in different indices. I use random amounts ranging from 0.25-1.5% of the pixels.</p>
</section>
<section id="random-pixel-copy-transform" class="level5">
<h5 class="anchored" data-anchor-id="random-pixel-copy-transform"><strong>Random Pixel Copy Transform</strong></h5>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> rand_pixel_copy(img_tensor:torch.Tensor, pct:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>):</span>
<span id="cb27-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Copy data from a randomly selected set of pixels to another randomly selected set of pixels of a image tensor.</span></span>
<span id="cb27-4"></span>
<span id="cb27-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb27-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    img_tensor (torch.Tensor): The input image tensor.</span></span>
<span id="cb27-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    pct (float, optional): The percentage of the total number of pixels to be selected as the source and target sets</span></span>
<span id="cb27-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                           of pixels.</span></span>
<span id="cb27-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb27-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb27-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    torch.Tensor: The modified input image tensor.</span></span>
<span id="cb27-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb27-13">    </span>
<span id="cb27-14">    src_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor.dim()</span>
<span id="cb27-15">    </span>
<span id="cb27-16">    img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor.unsqueeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> src_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> img_tensor</span>
<span id="cb27-17">    </span>
<span id="cb27-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the shape of the img_tensor</span></span>
<span id="cb27-19">    b, c, h, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor.shape</span>
<span id="cb27-20">    </span>
<span id="cb27-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the number of pixels to be selected</span></span>
<span id="cb27-22">    num_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(img_tensor[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:].numel() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pct)</span>
<span id="cb27-23">    </span>
<span id="cb27-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select the source pixel indices</span></span>
<span id="cb27-25">    source_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.LongTensor(num_pixels, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).random_(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb27-26">    source_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> source_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> w</span>
<span id="cb27-27">    source_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> source_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> w</span>
<span id="cb27-28">    </span>
<span id="cb27-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select the target pixel indices</span></span>
<span id="cb27-30">    target_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.LongTensor(num_pixels, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>).random_(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb27-31">    target_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> w</span>
<span id="cb27-32">    target_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> w</span>
<span id="cb27-33">    </span>
<span id="cb27-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the indices of the channels</span></span>
<span id="cb27-35">    c_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.arange(c).repeat(num_pixels, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).t()</span>
<span id="cb27-36">    </span>
<span id="cb27-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy the pixels</span></span>
<span id="cb27-38">    source_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor[:, c_indices, source_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], source_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb27-39">    img_tensor[:, c_indices, target_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], target_indices[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> source_pixels</span>
<span id="cb27-40">    </span>
<span id="cb27-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> img_tensor.squeeze(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> src_dim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> img_tensor</span></code></pre></div>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> RandPixelCopy(nn.Module):</span>
<span id="cb28-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>):</span>
<span id="cb28-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb28-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        A PyTorch module that applies the `rand_pixel_copy` function to an input tensor.</span></span>
<span id="cb28-5"></span>
<span id="cb28-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb28-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pct (float, optional): The maximum percentage of the tensor's pixels to be copied.</span></span>
<span id="cb28-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb28-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb28-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pct</span>
<span id="cb28-11">        </span>
<span id="cb28-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb28-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the `rand_pixel_copy` function to the input tensor</span></span>
<span id="cb28-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> rand_pixel_copy(x, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0025</span>, random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pct))</span></code></pre></div>
<p><strong>Test the transform</strong></p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1">rand_pixel_copy_tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandPixelCopy(pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.015</span>)</span>
<span id="cb29-2"></span>
<span id="cb29-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the PIL image to a tensor</span></span>
<span id="cb29-4">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.PILToTensor()(sample_img)</span>
<span id="cb29-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(img_tensor.shape)</span>
<span id="cb29-6"></span>
<span id="cb29-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the `rand_pixel_copy_tf` transform to the image tensor</span></span>
<span id="cb29-8">tensor_to_pil(rand_pixel_copy_tf(img_tensor))</span></code></pre></div>
<pre class="text"><code>torch.Size([3, 512, 512])</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_52_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The third combines the first two approaches by copying random squares and then applying the pixel copy transform on those squares. I use the same patch size range as the first augmentation but copy up to 100% of the pixels.</p>
</section>
<section id="random-square-pixel-copy-transform" class="level5">
<h5 class="anchored" data-anchor-id="random-square-pixel-copy-transform"><strong>Random Square Pixel Copy Transform</strong></h5>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> rand_square_pixel_copy(img_tensor:torch.Tensor, square_pct:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>, pixel_pct:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>):</span>
<span id="cb31-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Copy data from a randomly selected set of pixels of a randomly selected square region to another randomly</span></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    selected square region of a tensor.</span></span>
<span id="cb31-5"></span>
<span id="cb31-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb31-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    img_tensor (torch.Tensor): The input tensor.</span></span>
<span id="cb31-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    square_pct (float): The percentage of the tensor's size to be used as the side length of the square regions.</span></span>
<span id="cb31-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    pixel_pct (float): The percentage of the pixels of the source square region to be copied.</span></span>
<span id="cb31-10"></span>
<span id="cb31-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb31-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    torch.Tensor: The modified input tensor.</span></span>
<span id="cb31-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb31-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the shape of the tensor</span></span>
<span id="cb31-15">    h, w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor.shape[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:]</span>
<span id="cb31-16">    </span>
<span id="cb31-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the size of the square</span></span>
<span id="cb31-18">    szx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(square_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h)</span>
<span id="cb31-19">    szy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(square_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb31-20">    </span>
<span id="cb31-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the top-left coordinate of the first square</span></span>
<span id="cb31-22">    stx1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h)</span>
<span id="cb31-23">    sty1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb31-24">    </span>
<span id="cb31-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the top-left coordinate of the second square</span></span>
<span id="cb31-26">    stx2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h)</span>
<span id="cb31-27">    sty2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(random.random() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_pct) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> w)</span>
<span id="cb31-28">    </span>
<span id="cb31-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Copy the data from the second square to the first square</span></span>
<span id="cb31-30">    source_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rand_pixel_copy(img_tensor[..., stx2:stx2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szx, sty2:sty2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szy].clone(), pixel_pct)</span>
<span id="cb31-31">    img_tensor[..., stx1:stx1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szx, sty1:sty1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> szy] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> source_pixels</span>
<span id="cb31-32">    </span>
<span id="cb31-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the modified input tensor</span></span>
<span id="cb31-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> img_tensor</span></code></pre></div>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> RandSquarePixelCopy(nn.Module):</span>
<span id="cb32-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, square_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, pixel_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, min_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, max_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>):</span>
<span id="cb32-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        A PyTorch module that applies the `rand_square_pixel_copy` function to an input tensor.</span></span>
<span id="cb32-5"></span>
<span id="cb32-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb32-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        square_pct (float, optional): The percentage of the tensor's size to be used as the side length of the</span></span>
<span id="cb32-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                      square regions.</span></span>
<span id="cb32-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        pixel_pct (float, optional): The maximum percentage of the pixels of the source square region to be copied.</span></span>
<span id="cb32-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        min_num (int, optional): The minimum number of times the `rand_square_pixel_copy` function is applied to</span></span>
<span id="cb32-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                 the input tensor.</span></span>
<span id="cb32-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max_num (int, optional): The maximum number of times the `rand_square_pixel_copy` function is applied to</span></span>
<span id="cb32-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">                                 the input tensor.</span></span>
<span id="cb32-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb32-15">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb32-16">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.square_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> square_pct</span>
<span id="cb32-17">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pixel_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pixel_pct</span>
<span id="cb32-18">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_num</span>
<span id="cb32-19">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_num <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_num</span>
<span id="cb32-20">        </span>
<span id="cb32-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb32-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the `rand_square_pixel_copy` function to the input tensor</span></span>
<span id="cb32-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(random.randint(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.min_num, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_num)):</span>
<span id="cb32-24">            x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rand_square_pixel_copy(x, </span>
<span id="cb32-25">                                       <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,random.random()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.square_pct), </span>
<span id="cb32-26">                                       <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0025</span>, random.random()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.pixel_pct))</span>
<span id="cb32-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span></code></pre></div>
<p><strong>Test the transform</strong></p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">rand_square_pixel_copy_tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandSquarePixelCopy(square_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, pixel_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>, min_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, max_num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb33-2"></span>
<span id="cb33-3">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.PILToTensor()(sample_img)</span>
<span id="cb33-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(img_tensor.shape)</span>
<span id="cb33-5"></span>
<span id="cb33-6">tensor_to_pil(rand_square_pixel_copy_tf(img_tensor))</span></code></pre></div>
<pre class="text"><code>torch.Size([3, 512, 512])</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_58_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>I also tested the <a href="https://pytorch.org/vision/main/auto_examples/plot_transforms.html#trivialaugmentwide">TrivialAugment</a> augmentation from the paper linked below. TrivialAugment applies a single randomly selected transform to each image. I stuck with the default parameters.</p>
<ul>
<li><a href="https://arxiv.org/abs/2103.10158">TrivialAugment: Tuning-free Yet State-of-the-Art Data Augmentation</a></li>
</ul>
</section>
<section id="trivial-augmentation" class="level5">
<h5 class="anchored" data-anchor-id="trivial-augmentation"><strong>Trivial Augmentation</strong></h5>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a TrivialAugmentWide object</span></span>
<span id="cb35-2">trivial_aug <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.TrivialAugmentWide()</span>
<span id="cb35-3"></span>
<span id="cb35-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a tensor</span></span>
<span id="cb35-5">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.PILToTensor()(sample_img)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb35-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(img_tensor.shape)</span>
<span id="cb35-7"></span>
<span id="cb35-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the TrivialAugmentWide to the tensor</span></span>
<span id="cb35-9">tensor_to_pil(trivial_aug(img_tensor))</span></code></pre></div>
<pre class="text"><code>torch.Size([1, 3, 512, 512])</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_61_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Finally, inspired by the TrivialAugment transform, I created a custom trivial augmentation that randomly applies the random square copy, random rand pixel copy, random square pixel copy, or no transform.</p>
</section>
<section id="custom-trivial-augmentation-transform" class="level5">
<h5 class="anchored" data-anchor-id="custom-trivial-augmentation-transform"><strong>Custom Trivial Augmentation Transform</strong></h5>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> CustomTrivAug(nn.Module):</span>
<span id="cb37-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, aug_list):</span>
<span id="cb37-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb37-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        A PyTorch module that applies a random image augmentation.</span></span>
<span id="cb37-5"></span>
<span id="cb37-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb37-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        aug_list (list): List of functions that implement the desired augmentations.</span></span>
<span id="cb37-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb37-9">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb37-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.aug_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> aug_list</span>
<span id="cb37-11">        </span>
<span id="cb37-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb37-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> random.choice(aug_list)(x)</span></code></pre></div>
<p><strong>Test the transform</strong></p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">aug_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb38-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identity transformation (no augmentation applied)</span></span>
<span id="cb38-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> x:x,</span>
<span id="cb38-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Random square copy transformation</span></span>
<span id="cb38-5">    rand_square_copy_tf,</span>
<span id="cb38-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Random pixel copy transformation</span></span>
<span id="cb38-7">    rand_pixel_copy_tf,</span>
<span id="cb38-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Random square pixel copy transformation</span></span>
<span id="cb38-9">    rand_square_pixel_copy_tf</span>
<span id="cb38-10">]</span>
<span id="cb38-11"></span>
<span id="cb38-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an instance of the CustomTrivAug module</span></span>
<span id="cb38-13">custom_triv_aug_tf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> CustomTrivAug(aug_list<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>aug_list)</span>
<span id="cb38-14"></span>
<span id="cb38-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert a sample image to a tensor</span></span>
<span id="cb38-16">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.PILToTensor()(sample_img)</span>
<span id="cb38-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(img_tensor.shape)</span>
<span id="cb38-18"></span>
<span id="cb38-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply a random augmentation and convert the tensor back to an image</span></span>
<span id="cb38-20">tensor_to_pil(custom_triv_aug_tf(img_tensor))</span></code></pre></div>
<pre class="text"><code>torch.Size([3, 512, 512])</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_66_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="model" class="level3">
<h3 class="anchored" data-anchor-id="model">Model</h3>
<p>I went with the pretrained <a href="https://github.com/huggingface/pytorch-image-models/blob/4b8cfa6c0a355a9b3cb2a77298b240213fb3b921/timm/models/resnet.py#L869">ResNet 18-D</a> model from the <a href="https://huggingface.co/docs/timm/index">timm library</a> for its balance of accuracy and speed.</p>
<p><strong>List available ResNet18 models</strong></p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1">pd.DataFrame(timm.list_models(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet18*'</span>, pretrained<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
resnet18
</td>
</tr>
<tr>
<th>
1
</th>
<td>
resnet18d
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Inspect config for ResNet18 model</strong></p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the resnet module</span></span>
<span id="cb41-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> timm.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resnet</span>
<span id="cb41-3"></span>
<span id="cb41-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Choose the resnet model</span></span>
<span id="cb41-5">resnet_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet18d'</span></span>
<span id="cb41-6"></span>
<span id="cb41-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the default configuration of the chosen model as a Pandas DataFrame</span></span>
<span id="cb41-8">pd.DataFrame.from_dict(resnet.default_cfgs[resnet_model], orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
url
</th>
<td>
https://github.com/rwightman/pytorch-image-models/releases/download/v0.1-weights/resnet18d_ra2-48a79e06.pth
</td>
</tr>
<tr>
<th>
num_classes
</th>
<td>
1000
</td>
</tr>
<tr>
<th>
input_size
</th>
<td>
(3, 224, 224)
</td>
</tr>
<tr>
<th>
pool_size
</th>
<td>
(7, 7)
</td>
</tr>
<tr>
<th>
crop_pct
</th>
<td>
0.875
</td>
</tr>
<tr>
<th>
interpolation
</th>
<td>
bicubic
</td>
</tr>
<tr>
<th>
mean
</th>
<td>
(0.485, 0.456, 0.406)
</td>
</tr>
<tr>
<th>
std
</th>
<td>
(0.229, 0.224, 0.225)
</td>
</tr>
<tr>
<th>
first_conv
</th>
<td>
conv1.0
</td>
</tr>
<tr>
<th>
classifier
</th>
<td>
fc
</td>
</tr>
</tbody>

</table>
</div>
<p>We first get the normalization stats used to pre-train the model. We get the mean and standard deviation values for the red, green, and blue color channels from the <code>default_cfgs</code> dictionary.</p>
<p><strong>Get normalization stats</strong></p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">norm_stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet.default_cfgs[resnet_model][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>], resnet.default_cfgs[resnet_model][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'std'</span>]</span>
<span id="cb42-2">norm_stats</span></code></pre></div>
<pre class="text"><code>((0.485, 0.456, 0.406), (0.229, 0.224, 0.225))</code></pre>
<p>Next, we load the pretrained model and set the number of output classes for the model head. We’ll also update the device and data type of the model to the ones specified earlier.</p>
<p><strong>Load ResNet18 model</strong></p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the resenet model</span></span>
<span id="cb44-2">resnet18 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> timm.create_model(resnet_model, pretrained<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(class_names))</span>
<span id="cb44-3"></span>
<span id="cb44-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the device, data type, and name</span></span>
<span id="cb44-5">resnet18 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet18.to(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dtype)</span>
<span id="cb44-6">resnet18.device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> device</span>
<span id="cb44-7">resnet18.name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet_model</span></code></pre></div>
<p><strong>Select model</strong></p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resnet18</span></code></pre></div>
<p><strong>Get model summary</strong></p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the input to the model</span></span>
<span id="cb46-2">test_inp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.randn(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>).to(device)</span>
<span id="cb46-3"></span>
<span id="cb46-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a summary of the model as a Pandas DataFrame</span></span>
<span id="cb46-5">summary_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> markdown_to_pandas(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>get_module_summary(model, [test_inp])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-6"></span>
<span id="cb46-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter the summary to only contain Conv2d layers and the model</span></span>
<span id="cb46-8">summary_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary_df[(summary_df.index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (summary_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Conv2d'</span>)]</span>
<span id="cb46-9"></span>
<span id="cb46-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove the column "Contains Uninitialized Parameters?"</span></span>
<span id="cb46-11">summary_df.drop(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Contains Uninitialized Parameters?'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px;">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
Type
</th>
<th>
# Parameters
</th>
<th>
# Trainable Parameters
</th>
<th>
Size (bytes)
</th>
<th>
Forward FLOPs
</th>
<th>
Backward FLOPs
</th>
<th>
In size
</th>
<th>
Out size
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
ResNet
</td>
<td>
11.2 M
</td>
<td>
11.2 M
</td>
<td>
44.9 M
</td>
<td>
2.7 G
</td>
<td>
5.3 G
</td>
<td>
[1, 3, 256, 256]
</td>
<td>
[1, 19]
</td>
</tr>
<tr>
<th>
2
</th>
<td>
Conv2d
</td>
<td>
864
</td>
<td>
864
</td>
<td>
3.5 K
</td>
<td>
14.2 M
</td>
<td>
14.2 M
</td>
<td>
[1, 3, 256, 256]
</td>
<td>
[1, 32, 128, 128]
</td>
</tr>
<tr>
<th>
5
</th>
<td>
Conv2d
</td>
<td>
9.2 K
</td>
<td>
9.2 K
</td>
<td>
36.9 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 32, 128, 128]
</td>
<td>
[1, 32, 128, 128]
</td>
</tr>
<tr>
<th>
8
</th>
<td>
Conv2d
</td>
<td>
18.4 K
</td>
<td>
18.4 K
</td>
<td>
73.7 K
</td>
<td>
301 M
</td>
<td>
603 M
</td>
<td>
[1, 32, 128, 128]
</td>
<td>
[1, 64, 128, 128]
</td>
</tr>
<tr>
<th>
14
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
19
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
23
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
28
</th>
<td>
Conv2d
</td>
<td>
36.9 K
</td>
<td>
36.9 K
</td>
<td>
147 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 64, 64, 64]
</td>
</tr>
<tr>
<th>
33
</th>
<td>
Conv2d
</td>
<td>
73.7 K
</td>
<td>
73.7 K
</td>
<td>
294 K
</td>
<td>
75.5 M
</td>
<td>
150 M
</td>
<td>
[1, 64, 64, 64]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
38
</th>
<td>
Conv2d
</td>
<td>
147 K
</td>
<td>
147 K
</td>
<td>
589 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
43
</th>
<td>
Conv2d
</td>
<td>
8.2 K
</td>
<td>
8.2 K
</td>
<td>
32.8 K
</td>
<td>
8.4 M
</td>
<td>
16.8 M
</td>
<td>
[1, 64, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
46
</th>
<td>
Conv2d
</td>
<td>
147 K
</td>
<td>
147 K
</td>
<td>
589 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
51
</th>
<td>
Conv2d
</td>
<td>
147 K
</td>
<td>
147 K
</td>
<td>
589 K
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 128, 32, 32]
</td>
</tr>
<tr>
<th>
56
</th>
<td>
Conv2d
</td>
<td>
294 K
</td>
<td>
294 K
</td>
<td>
1.2 M
</td>
<td>
75.5 M
</td>
<td>
150 M
</td>
<td>
[1, 128, 32, 32]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
61
</th>
<td>
Conv2d
</td>
<td>
589 K
</td>
<td>
589 K
</td>
<td>
2.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
66
</th>
<td>
Conv2d
</td>
<td>
32.8 K
</td>
<td>
32.8 K
</td>
<td>
131 K
</td>
<td>
8.4 M
</td>
<td>
16.8 M
</td>
<td>
[1, 128, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
69
</th>
<td>
Conv2d
</td>
<td>
589 K
</td>
<td>
589 K
</td>
<td>
2.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
74
</th>
<td>
Conv2d
</td>
<td>
589 K
</td>
<td>
589 K
</td>
<td>
2.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 256, 16, 16]
</td>
</tr>
<tr>
<th>
79
</th>
<td>
Conv2d
</td>
<td>
1.2 M
</td>
<td>
1.2 M
</td>
<td>
4.7 M
</td>
<td>
75.5 M
</td>
<td>
150 M
</td>
<td>
[1, 256, 16, 16]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
84
</th>
<td>
Conv2d
</td>
<td>
2.4 M
</td>
<td>
2.4 M
</td>
<td>
9.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 512, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
89
</th>
<td>
Conv2d
</td>
<td>
131 K
</td>
<td>
131 K
</td>
<td>
524 K
</td>
<td>
8.4 M
</td>
<td>
16.8 M
</td>
<td>
[1, 256, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
92
</th>
<td>
Conv2d
</td>
<td>
2.4 M
</td>
<td>
2.4 M
</td>
<td>
9.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 512, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
<tr>
<th>
97
</th>
<td>
Conv2d
</td>
<td>
2.4 M
</td>
<td>
2.4 M
</td>
<td>
9.4 M
</td>
<td>
150 M
</td>
<td>
301 M
</td>
<td>
[1, 512, 8, 8]
</td>
<td>
[1, 512, 8, 8]
</td>
</tr>
</tbody>

</table>
</div>
</section>
<section id="dataset-preparation" class="level3">
<h3 class="anchored" data-anchor-id="dataset-preparation">Dataset Preparation</h3>
<p>I split the dataset randomly into 90% for training and 10% for validation.</p>
<p><strong>Get training and validation sets</strong></p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Shuffle the image paths</span></span>
<span id="cb47-2">random.shuffle(img_paths)</span>
<span id="cb47-3"></span>
<span id="cb47-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the percentage of the images that should be used for training</span></span>
<span id="cb47-5">train_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span></span>
<span id="cb47-6">val_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb47-7"></span>
<span id="cb47-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the index at which to split the subset of image paths into training and validation sets</span></span>
<span id="cb47-9">train_split <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_paths)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>train_pct)</span>
<span id="cb47-10">val_split <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(img_paths)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>(train_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>val_pct))</span>
<span id="cb47-11"></span>
<span id="cb47-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Split the subset of image paths into training and validation sets</span></span>
<span id="cb47-13">train_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_paths[:train_split]</span>
<span id="cb47-14">val_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_paths[train_split:]</span>
<span id="cb47-15"></span>
<span id="cb47-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of images in the training and validation sets</span></span>
<span id="cb47-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_paths), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(val_paths)</span></code></pre></div>
<pre class="text"><code>(138361, 15374)</code></pre>
<p>The hand gestures in some images are hard to see at low resolutions, so I resized and padded the samples to <code>288x288</code> for training to balance computational efficiency and model performance.</p>
<p><strong>Set training image size</strong></p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">train_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">288</span>)</span></code></pre></div>
<p><strong>Resize Pad Transform</strong></p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ResizePad(nn.Module):</span>
<span id="cb50-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, max_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, padding_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'edge'</span>):</span>
<span id="cb50-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb50-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        A PyTorch module that resizes an image tensor and adds padding to make it a square tensor.</span></span>
<span id="cb50-5"></span>
<span id="cb50-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Args:</span></span>
<span id="cb50-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        max_sz (int, optional): The size of the square tensor.</span></span>
<span id="cb50-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        padding_mode (str, optional): The padding mode used when adding padding to the tensor.</span></span>
<span id="cb50-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb50-10">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>()</span>
<span id="cb50-11">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> max_sz</span>
<span id="cb50-12">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.padding_mode <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> padding_mode</span>
<span id="cb50-13">        </span>
<span id="cb50-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb50-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the width and height of the image tensor</span></span>
<span id="cb50-16">        w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TF.get_image_size(x)</span>
<span id="cb50-17">        </span>
<span id="cb50-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize the image tensor so that its minimum dimension is equal to `max_sz`</span></span>
<span id="cb50-19">        size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(w, h) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(w, h) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_sz))</span>
<span id="cb50-20">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TF.resize(x, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>size)</span>
<span id="cb50-21">        </span>
<span id="cb50-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add padding to make the image tensor a square</span></span>
<span id="cb50-23">        w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TF.get_image_size(x)</span>
<span id="cb50-24">        offset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(w, h)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb50-25">        padding <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, offset] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> w <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> [offset, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb50-26">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TF.pad(x, padding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>padding, padding_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.padding_mode)</span>
<span id="cb50-27">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TF.resize(x, size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.max_sz] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb50-28">        </span>
<span id="cb50-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> x</span></code></pre></div>
<p><strong>Test the transform</strong></p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Source image: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb51-2"></span>
<span id="cb51-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Crop the source image</span></span>
<span id="cb51-4">w, h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_img.size</span>
<span id="cb51-5">cropped_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_img.crop([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, w, h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb51-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cropped image: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cropped_img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb51-7"></span>
<span id="cb51-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a `ResizePad` object</span></span>
<span id="cb51-9">resize_pad <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ResizePad(max_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(train_sz))</span>
<span id="cb51-10"></span>
<span id="cb51-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the cropped image to a tensor</span></span>
<span id="cb51-12">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> transforms.PILToTensor()(cropped_img)[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>]</span>
<span id="cb51-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cropped tensor: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img_tensor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb51-14"></span>
<span id="cb51-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Resize and pad the tensor</span></span>
<span id="cb51-16">resized_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_pad(img_tensor)</span>
<span id="cb51-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Padded tensor: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>resized_tensor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb51-18"></span>
<span id="cb51-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply random pixel copy to the resized and padded tensor</span></span>
<span id="cb51-20">tensor_to_pil(resized_tensor)</span></code></pre></div>
<pre class="text"><code>Source image: (512, 512)
Cropped image: (512, 256)
Cropped tensor: torch.Size([1, 3, 256, 512])
Padded tensor: torch.Size([1, 3, 288, 288])</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_93_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The TrivialAugment transform requires PIL Images, so I applied all transforms per item rather than per batch for consistency.</p>
<p><strong>Set image transforms</strong></p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set transforms for training set</span></span>
<span id="cb53-2">train_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb53-3">    ResizePad(max_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(train_sz)),</span>
<span id="cb53-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     transforms.TrivialAugmentWide(),</span></span>
<span id="cb53-5">    transforms.ToTensor(),</span>
<span id="cb53-6">    transforms.Normalize(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats),</span>
<span id="cb53-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     rand_square_copy_tf,</span></span>
<span id="cb53-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     rand_pixel_copy_tf,</span></span>
<span id="cb53-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     rand_square_pixel_copy_tf</span></span>
<span id="cb53-10">    custom_triv_aug_tf,</span>
<span id="cb53-11">]</span>
<span id="cb53-12"></span>
<span id="cb53-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set transforms for validation set</span></span>
<span id="cb53-14">valid_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb53-15">    ResizePad(max_sz<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(train_sz)),</span>
<span id="cb53-16">    transforms.ToTensor(),</span>
<span id="cb53-17">    transforms.Normalize(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats),</span>
<span id="cb53-18">]</span></code></pre></div>
<p>We pass the list of transforms into a custom Dataset class along with the image paths and class names.</p>
<p><strong>Define training dataset class</strong></p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ImageDataset(Dataset):</span>
<span id="cb54-2">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, img_paths, classes, tfms):</span>
<span id="cb54-3">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store the arguments as instance variables</span></span>
<span id="cb54-4">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_paths</span>
<span id="cb54-5">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> classes</span>
<span id="cb54-6">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms</span>
<span id="cb54-7">        </span>
<span id="cb54-8">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a mapping from class names to class indices</span></span>
<span id="cb54-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.class_to_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {c: i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i, c <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.classes)}</span>
<span id="cb54-10"></span>
<span id="cb54-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__len__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb54-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the number of images in the dataset</span></span>
<span id="cb54-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_paths)</span>
<span id="cb54-14"></span>
<span id="cb54-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__getitem__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, index):</span>
<span id="cb54-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the path of the image at the given index</span></span>
<span id="cb54-17">        img_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_paths[index]</span>
<span id="cb54-18">        </span>
<span id="cb54-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the label of the image</span></span>
<span id="cb54-20">        label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.class_to_idx[img_path.parent.name]</span>
<span id="cb54-21">        </span>
<span id="cb54-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the image</span></span>
<span id="cb54-23">        image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_path).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>)</span>
<span id="cb54-24">        </span>
<span id="cb54-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.tfms(image), label</span></code></pre></div>
<p><strong>Initialize datasets</strong></p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the training dataset using the composed transformations</span></span>
<span id="cb55-2">train_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataset(img_paths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>train_paths, </span>
<span id="cb55-3">                             classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>class_names,</span>
<span id="cb55-4">                             tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transforms.Compose(train_tfms))</span>
<span id="cb55-5"></span>
<span id="cb55-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the validation dataset</span></span>
<span id="cb55-7">valid_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataset(img_paths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>val_paths, </span>
<span id="cb55-8">                             classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>class_names,</span>
<span id="cb55-9">                             tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>transforms.Compose(valid_tfms))</span>
<span id="cb55-10"></span>
<span id="cb55-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># print the length of the training and validation datasets</span></span>
<span id="cb55-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(train_dataset), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(valid_dataset)</span></code></pre></div>
<pre class="text"><code>(138361, 15374)</code></pre>
<p><strong>Inspect training set sample</strong></p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1">tensor_to_pil(denorm_img_tensor(train_dataset[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats))</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_103_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Inspect validation set sample</strong></p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1">tensor_to_pil(denorm_img_tensor(valid_dataset[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats))</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_105_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Set training batch size</strong></p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span></code></pre></div>
<p><strong>Initialzie dataloaders</strong></p>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1">train_dataloader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(train_dataset, </span>
<span id="cb60-2">                              batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs, </span>
<span id="cb60-3">                              shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, </span>
<span id="cb60-4">                              num_workers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>multiprocessing.cpu_count())</span>
<span id="cb60-5"></span>
<span id="cb60-6">valid_dataloader <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoader(valid_dataset, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs)</span>
<span id="cb60-7"></span>
<span id="cb60-8">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DataLoaders(train_dataloader, valid_dataloader)</span>
<span id="cb60-9"></span>
<span id="cb60-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the number of batches in the training and validation dataloaders</span></span>
<span id="cb60-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dls.train), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dls.valid)</span></code></pre></div>
<pre class="text"><code>(4324, 481)</code></pre>
</section>
<section id="training" class="level3">
<h3 class="anchored" data-anchor-id="training">Training</h3>
<p>We can define a custom callback to integrate W&amp;B with the miniai library. The one below tracks the loss and accuracy values for the training and validation sets.</p>
<p><strong>Define training callbacks</strong></p>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> WandBCB(MetricsCB):</span>
<span id="cb62-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A Callback class that integrates with the Weights and Biases (W&amp;B) platform to log training </span></span>
<span id="cb62-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    and validation metrics, as well as sample figures during training.</span></span>
<span id="cb62-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb62-6">    order<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb62-7">    </span>
<span id="cb62-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, config, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ms, project:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>, name:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>metrics):</span>
<span id="cb62-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Initialize the WandBCB class.</span></span>
<span id="cb62-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb62-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Parameters:</span></span>
<span id="cb62-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            config (dict): Configuration parameters for the W&amp;B run.</span></span>
<span id="cb62-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            ms (list): List of metrics to be logged.</span></span>
<span id="cb62-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            project (str): The name of the W&amp;B project.</span></span>
<span id="cb62-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            name (str, optional): The name of the W&amp;B run. Defaults to None.</span></span>
<span id="cb62-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            metrics (dict, optional): Additional metrics to be logged.</span></span>
<span id="cb62-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb62-19">        fc.store_attr()</span>
<span id="cb62-20">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb62-21">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb62-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>ms, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>metrics)</span>
<span id="cb62-23">        </span>
<span id="cb62-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> before_fit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, learn):</span>
<span id="cb62-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Initialize the W&amp;B run.</span></span>
<span id="cb62-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb62-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Parameters:</span></span>
<span id="cb62-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            learn (miniai.learner.Learner): The miniai Learner object.</span></span>
<span id="cb62-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb62-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If a name for the run is provided, use it, otherwise use the default name</span></span>
<span id="cb62-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name:</span>
<span id="cb62-33">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wandb.init(project<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.project, name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.name, config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config)</span>
<span id="cb62-34">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>:</span>
<span id="cb62-35">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.run <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wandb.init(project<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.project, config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.config)</span>
<span id="cb62-36">            </span>
<span id="cb62-37">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> after_fit(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, learn):</span>
<span id="cb62-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Finalize the W&amp;B run.</span></span>
<span id="cb62-40"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb62-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Parameters:</span></span>
<span id="cb62-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            learn (miniai.learner.Learner): The miniai Learner object.</span></span>
<span id="cb62-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb62-44">        wandb.finish()</span>
<span id="cb62-45"></span>
<span id="cb62-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> _log(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, d):</span>
<span id="cb62-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Log the metrics to W&amp;B.</span></span>
<span id="cb62-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        </span></span>
<span id="cb62-50"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Parameters:</span></span>
<span id="cb62-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            d (dict): Dictionary of metrics.</span></span>
<span id="cb62-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb62-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Log the metrics with a prefix of "train_" if in training mode, otherwise "val_"</span></span>
<span id="cb62-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.train: </span>
<span id="cb62-55">            wandb.log({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'train_'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>m:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(d[m]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_metrics})</span>
<span id="cb62-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>: </span>
<span id="cb62-57">            wandb.log({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'val_'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>m:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(d[m]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> m <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.all_metrics})</span>
<span id="cb62-58"></span>
<span id="cb62-59">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> after_batch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, learn):</span>
<span id="cb62-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-61"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Log the loss after a batch</span></span>
<span id="cb62-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb62-63">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().after_batch(learn)</span>
<span id="cb62-64">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Log the batch loss to W&amp;B</span></span>
<span id="cb62-65">        wandb.log({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss'</span>:learn.loss})</span>
<span id="cb62-66">        </span>
<span id="cb62-67">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> after_epoch(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, learn):</span>
<span id="cb62-68">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb62-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Update the training mode flag and call the parent class's `after_epoch` method.</span></span>
<span id="cb62-70"></span>
<span id="cb62-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Parameters:</span></span>
<span id="cb62-72"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">            learn (miniai.learner.Learner): The miniai Learner object.</span></span>
<span id="cb62-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb62-74">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update the training mode flag</span></span>
<span id="cb62-75">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.train <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.training</span>
<span id="cb62-76">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().after_epoch(learn)</span></code></pre></div>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> OutOfBoundsCB(Callback):</span>
<span id="cb63-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb63-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    A callback that exits the training session if the loss is not NaN or infinite.</span></span>
<span id="cb63-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb63-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, msg<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loss out of bounds"</span>):</span>
<span id="cb63-6">        fc.store_attr()</span>
<span id="cb63-7">        </span>
<span id="cb63-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> after_loss(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, learn):</span>
<span id="cb63-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb63-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        Check if the loss is NaN or infinite.</span></span>
<span id="cb63-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        """</span></span>
<span id="cb63-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> learn.loss.detach().isnan() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">or</span> learn.loss.detach().isinf(): </span>
<span id="cb63-13">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.msg)</span>
<span id="cb63-14">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> CancelFitException()</span></code></pre></div>
<p><strong>Initialize callbacks</strong></p>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1">metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> MetricsCB(accuracy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>MulticlassAccuracy())</span>
<span id="cb64-2"></span>
<span id="cb64-3">cbs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [MixedPrecision(), </span>
<span id="cb64-4">       OutOfBoundsCB(),</span>
<span id="cb64-5">       DeviceCB(), </span>
<span id="cb64-6">       metrics, </span>
<span id="cb64-7">       ProgressCB(plot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>),</span>
<span id="cb64-8">      ]</span></code></pre></div>
<p><strong>Set optimizer</strong></p>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">opt_func <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partial(torch.optim.AdamW, eps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-5</span>)</span></code></pre></div>
<p><strong>Set learning rate scheduler</strong></p>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb66-1">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span></span>
<span id="cb66-2">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb66-3"></span>
<span id="cb66-4">tmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(dls.train)</span>
<span id="cb66-5">sched <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> partial(torch.optim.lr_scheduler.OneCycleLR, max_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, total_steps<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tmax)</span>
<span id="cb66-6">cbs.append(BatchSchedCB(sched))</span></code></pre></div>
<p><strong>Configure Weights &amp; Biases project</strong></p>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1">project_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"miniai_data_augmentation_seed-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>seed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb67-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run_name = "baseline"</span></span>
<span id="cb67-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run_name = "rand-square-cp-1"</span></span>
<span id="cb67-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run_name = "rand-pixel-cp-1"</span></span>
<span id="cb67-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run_name = "rand-square-pixel-cp-1"</span></span>
<span id="cb67-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run_name = "trivial-aug-item-1"</span></span>
<span id="cb67-7">run_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"custom-trivial-aug-1"</span></span>
<span id="cb67-8"></span>
<span id="cb67-9">project_config <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lr'</span>:lr, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'epochs'</span>:epochs}</span>
<span id="cb67-10"></span>
<span id="cb67-11">wandbcb <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>  WandBCB(config<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>project_config, </span>
<span id="cb67-12">                   project<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>project_name,</span>
<span id="cb67-13">                   name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>run_name,</span>
<span id="cb67-14">                   accuracy<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>MulticlassAccuracy()</span>
<span id="cb67-15">                  )</span>
<span id="cb67-16">cbs.append(wandbcb)</span></code></pre></div>
<p><strong>Initialize learner</strong></p>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1">learn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TrainLearner(model, dls, torch.nn.functional.cross_entropy, lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, cbs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbs, opt_func<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opt_func)</span></code></pre></div>
<p><strong>Train model</strong></p>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1">learn.fit(epochs)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
accuracy
</th>
<th>
loss
</th>
<th>
epoch
</th>
<th>
train
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0.905
</td>
<td>
0.343
</td>
<td>
0
</td>
<td>
train
</td>
</tr>
<tr>
<td>
0.966
</td>
<td>
0.113
</td>
<td>
0
</td>
<td>
eval
</td>
</tr>
<tr>
<td>
0.976
</td>
<td>
0.077
</td>
<td>
1
</td>
<td>
train
</td>
</tr>
<tr>
<td>
0.989
</td>
<td>
0.038
</td>
<td>
1
</td>
<td>
eval
</td>
</tr>
<tr>
<td>
0.994
</td>
<td>
0.021
</td>
<td>
2
</td>
<td>
train
</td>
</tr>
<tr>
<td>
0.994
</td>
<td>
0.021
</td>
<td>
2
</td>
<td>
eval
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Set checkpoint directory</strong></p>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a directory to store the checkpoints if it does not already exist</span></span>
<span id="cb70-2">checkpoint_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>project_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span>)</span>
<span id="cb70-3">checkpoint_dir.mkdir(parents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb70-4"></span>
<span id="cb70-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the checkpoint path</span></span>
<span id="cb70-6">checkpoint_dir</span></code></pre></div>
<pre class="text"><code>Path('miniai_data_augmentation_seed-1234')</code></pre>
<p><strong>Save model checkpoint</strong></p>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb72-1">torch.save(learn.model.state_dict(), checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.pth"</span>)</span></code></pre></div>
<p><strong>Test model</strong></p>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1">infer_sz <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(train_sz)</span>
<span id="cb73-2"></span>
<span id="cb73-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Choose a random image from the list of image paths</span></span>
<span id="cb73-4">img_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> random.choice(img_paths)</span>
<span id="cb73-5"></span>
<span id="cb73-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the actual class of the chosen image</span></span>
<span id="cb73-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Class: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb73-8"></span>
<span id="cb73-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the image and resize it</span></span>
<span id="cb73-10">sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_path)</span>
<span id="cb73-11">inp_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(sample_img.copy(), infer_sz)</span>
<span id="cb73-12"></span>
<span id="cb73-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a tensor and move it to the device</span></span>
<span id="cb73-14">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pil_to_tensor(inp_img, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats).to(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device)</span>
<span id="cb73-15"></span>
<span id="cb73-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb73-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb73-18">    pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model(img_tensor)</span>
<span id="cb73-19"></span>
<span id="cb73-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the predicted class index and convert it to the class name</span></span>
<span id="cb73-21">pred_class <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_dataset.classes[torch.argmax(torch.softmax(pred, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))]</span>
<span id="cb73-22"></span>
<span id="cb73-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the predicted class</span></span>
<span id="cb73-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Predicted Class: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pred_class<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb73-25"></span>
<span id="cb73-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb73-27">sample_img</span></code></pre></div>
<pre class="text"><code>Class: rock
Predicted Class: rock</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/output_132_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="results" class="level2">
<h2 class="anchored" data-anchor-id="results">Results</h2>
<p>All training runs, including the baseline no augmentation run, ended with over 99% accuracy across all random seeds.</p>
<section id="validation-set" class="level3">
<h3 class="anchored" data-anchor-id="validation-set">Validation Set</h3>
<p>The <code>TrivialAugmentWide</code> transform had the highest validation accuracy across three of four random seeds, but the scores were too close to name a definitive winner.</p>
<p><strong>Seed: 1</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/val_accuracy_seed-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Seed: 42</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/val_accuracy_seed-42.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Seed: 100</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/val_accuracy_seed-100.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Seed: 1234</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/val_accuracy_seed-1234.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="test-set" class="level3">
<h3 class="anchored" data-anchor-id="test-set">Test Set</h3>
<p>I also ended each run by testing the models without augmentation on the entire dataset. I used a minimum resolution of 288p, as I did for training but did not enforce square aspect ratios. The results were quite different from the validation sets.</p>
<p><strong>Perform inference on dataset</strong></p>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a list to store the file paths of the images that were incorrectly classified</span></span>
<span id="cb75-2">wrong_imgs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb75-3"></span>
<span id="cb75-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate through the test image paths</span></span>
<span id="cb75-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> tqdm(img_paths):</span>
<span id="cb75-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the actual class of the image</span></span>
<span id="cb75-7">    target_cls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> path.parent.name</span>
<span id="cb75-8"></span>
<span id="cb75-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open and resize the image</span></span>
<span id="cb75-10">    sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(path)</span>
<span id="cb75-11">    sample_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> resize_img(sample_img, infer_sz)</span>
<span id="cb75-12"></span>
<span id="cb75-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to a tensor and move it to the device</span></span>
<span id="cb75-14">    img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pil_to_tensor(sample_img, <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>norm_stats).to(device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>device)</span>
<span id="cb75-15"></span>
<span id="cb75-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a prediction with the model</span></span>
<span id="cb75-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb75-18">        pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model(img_tensor)</span>
<span id="cb75-19"></span>
<span id="cb75-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the predicted class index and convert it to the class name</span></span>
<span id="cb75-21">    pred_cls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> train_dataset.classes[torch.argmax(torch.softmax(pred, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))]</span>
<span id="cb75-22"></span>
<span id="cb75-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the prediction is incorrect, add the file path to the list of wrong images</span></span>
<span id="cb75-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> pred_cls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> target_cls: </span>
<span id="cb75-25">        wrong_imgs.append(path)</span>
<span id="cb75-26"></span>
<span id="cb75-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(wrong_imgs)</span></code></pre></div>
<pre class="text"><code>251</code></pre>
<p><strong>Inspect the number of wrong predictions per class</strong></p>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame from the list of incorrectly classified images</span></span>
<span id="cb77-2">wrong_imgs_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(wrong_imgs)</span>
<span id="cb77-3"></span>
<span id="cb77-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a column to the DataFrame with the actual class of each image</span></span>
<span id="cb77-5">wrong_imgs_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wrong_imgs_df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> row: Path(row[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).parent.stem, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb77-6"></span>
<span id="cb77-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataFrame with the class distribution of the incorrectly classified images</span></span>
<span id="cb77-8">class_dist_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> wrong_imgs_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>].value_counts().to_frame().rename(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>:run_name})</span>
<span id="cb77-9"></span>
<span id="cb77-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the index name to "class"</span></span>
<span id="cb77-11">class_dist_df.rename_axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class"</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb77-12"></span>
<span id="cb77-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the class distribution DataFrame</span></span>
<span id="cb77-14">class_dist_df</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
custom-trivial-aug-1
</th>
</tr>
<tr>
<th>
class
</th>
<th>
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
peace
</th>
<td>
27
</td>
</tr>
<tr>
<th>
one
</th>
<td>
23
</td>
</tr>
<tr>
<th>
three
</th>
<td>
22
</td>
</tr>
<tr>
<th>
no_gesture
</th>
<td>
22
</td>
</tr>
<tr>
<th>
stop
</th>
<td>
19
</td>
</tr>
<tr>
<th>
four
</th>
<td>
17
</td>
</tr>
<tr>
<th>
two_up
</th>
<td>
15
</td>
</tr>
<tr>
<th>
call
</th>
<td>
15
</td>
</tr>
<tr>
<th>
stop_inverted
</th>
<td>
13
</td>
</tr>
<tr>
<th>
like
</th>
<td>
12
</td>
</tr>
<tr>
<th>
rock
</th>
<td>
12
</td>
</tr>
<tr>
<th>
fist
</th>
<td>
10
</td>
</tr>
<tr>
<th>
palm
</th>
<td>
9
</td>
</tr>
<tr>
<th>
ok
</th>
<td>
8
</td>
</tr>
<tr>
<th>
peace_inverted
</th>
<td>
7
</td>
</tr>
<tr>
<th>
two_up_inverted
</th>
<td>
6
</td>
</tr>
<tr>
<th>
mute
</th>
<td>
5
</td>
</tr>
<tr>
<th>
dislike
</th>
<td>
5
</td>
</tr>
<tr>
<th>
three2
</th>
<td>
4
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p><strong>Save DataFrame</strong></p>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb78-1">class_dist_df_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"class_dist_df-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>run_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.json"</span></span>
<span id="cb78-2">class_dist_df.to_json(class_dist_df_path)</span></code></pre></div>
<p>With this seed, the <code>TrivialAugmentWide</code> model missed the second-most number of predictions during inference, even though it had the highest validation accuracy.</p>
<p><strong>Load and concatenate DataFrames</strong></p>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb79-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> get_class_dist_agg_df(folder, ext<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'json'</span>):</span>
<span id="cb79-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of paths to `ext` files in the folder</span></span>
<span id="cb79-3">    df_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob(os.path.join(folder, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"*.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ext<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>))</span>
<span id="cb79-4">    </span>
<span id="cb79-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a generator that reads the class distribution data from each file in df_paths</span></span>
<span id="cb79-6">    class_dist_dfs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (pd.read_json(f).rename_axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'class'</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> df_paths)</span>
<span id="cb79-7"></span>
<span id="cb79-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate the class distribution data into a single DataFrame</span></span>
<span id="cb79-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> pd.concat(class_dist_dfs, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).fillna(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span></code></pre></div>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb80-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate the class distribution data into a single DataFrame</span></span>
<span id="cb80-2">class_dist_agg_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_class_dist_agg_df(checkpoint_dir)</span>
<span id="cb80-3"></span>
<span id="cb80-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the sum of the class distribution data for each run</span></span>
<span id="cb80-5">sums <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_dist_agg_df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb80-6"></span>
<span id="cb80-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a row to the DataFrame with the totals</span></span>
<span id="cb80-8">class_dist_agg_df.loc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sums</span>
<span id="cb80-9"></span>
<span id="cb80-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill any missing values with 0 and convert the values to integers</span></span>
<span id="cb80-11">class_dist_agg_df.sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Total'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
rand-square-pixel-cp-1
</th>
<th>
baseline
</th>
<th>
rand-square-cp-1
</th>
<th>
custom-trivial-aug-1
</th>
<th>
trivial-aug-item-1
</th>
<th>
rand-pixel-cp-1
</th>
</tr>
<tr>
<th>
class
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
call
</th>
<td>
6
</td>
<td>
15
</td>
<td>
9
</td>
<td>
15
</td>
<td>
16
</td>
<td>
13
</td>
</tr>
<tr>
<th>
dislike
</th>
<td>
8
</td>
<td>
5
</td>
<td>
5
</td>
<td>
5
</td>
<td>
6
</td>
<td>
10
</td>
</tr>
<tr>
<th>
fist
</th>
<td>
11
</td>
<td>
8
</td>
<td>
9
</td>
<td>
10
</td>
<td>
13
</td>
<td>
21
</td>
</tr>
<tr>
<th>
four
</th>
<td>
25
</td>
<td>
19
</td>
<td>
15
</td>
<td>
17
</td>
<td>
22
</td>
<td>
31
</td>
</tr>
<tr>
<th>
like
</th>
<td>
18
</td>
<td>
11
</td>
<td>
15
</td>
<td>
12
</td>
<td>
19
</td>
<td>
14
</td>
</tr>
<tr>
<th>
mute
</th>
<td>
5
</td>
<td>
3
</td>
<td>
6
</td>
<td>
5
</td>
<td>
4
</td>
<td>
10
</td>
</tr>
<tr>
<th>
no_gesture
</th>
<td>
18
</td>
<td>
23
</td>
<td>
23
</td>
<td>
22
</td>
<td>
44
</td>
<td>
25
</td>
</tr>
<tr>
<th>
ok
</th>
<td>
5
</td>
<td>
15
</td>
<td>
11
</td>
<td>
8
</td>
<td>
8
</td>
<td>
7
</td>
</tr>
<tr>
<th>
one
</th>
<td>
14
</td>
<td>
22
</td>
<td>
28
</td>
<td>
23
</td>
<td>
21
</td>
<td>
19
</td>
</tr>
<tr>
<th>
palm
</th>
<td>
11
</td>
<td>
10
</td>
<td>
7
</td>
<td>
9
</td>
<td>
23
</td>
<td>
12
</td>
</tr>
<tr>
<th>
peace
</th>
<td>
20
</td>
<td>
17
</td>
<td>
26
</td>
<td>
27
</td>
<td>
24
</td>
<td>
45
</td>
</tr>
<tr>
<th>
peace_inverted
</th>
<td>
1
</td>
<td>
9
</td>
<td>
7
</td>
<td>
7
</td>
<td>
6
</td>
<td>
7
</td>
</tr>
<tr>
<th>
rock
</th>
<td>
8
</td>
<td>
8
</td>
<td>
6
</td>
<td>
12
</td>
<td>
12
</td>
<td>
6
</td>
</tr>
<tr>
<th>
stop
</th>
<td>
14
</td>
<td>
18
</td>
<td>
11
</td>
<td>
19
</td>
<td>
15
</td>
<td>
23
</td>
</tr>
<tr>
<th>
stop_inverted
</th>
<td>
6
</td>
<td>
10
</td>
<td>
10
</td>
<td>
13
</td>
<td>
12
</td>
<td>
21
</td>
</tr>
<tr>
<th>
three
</th>
<td>
20
</td>
<td>
22
</td>
<td>
31
</td>
<td>
22
</td>
<td>
37
</td>
<td>
20
</td>
</tr>
<tr>
<th>
three2
</th>
<td>
5
</td>
<td>
11
</td>
<td>
7
</td>
<td>
4
</td>
<td>
8
</td>
<td>
4
</td>
</tr>
<tr>
<th>
two_up
</th>
<td>
10
</td>
<td>
11
</td>
<td>
12
</td>
<td>
15
</td>
<td>
16
</td>
<td>
18
</td>
</tr>
<tr>
<th>
two_up_inverted
</th>
<td>
8
</td>
<td>
6
</td>
<td>
8
</td>
<td>
6
</td>
<td>
6
</td>
<td>
11
</td>
</tr>
<tr>
<th>
Total
</th>
<td>
213
</td>
<td>
243
</td>
<td>
246
</td>
<td>
251
</td>
<td>
312
</td>
<td>
317
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>Even though the TrivialAugmentWide transform seemed like the winner across the validation sets, it performed the worst overall during inference. The custom trivial augmentation transform performed the best overall, with the random square copy transform a close second.</p>
<p><strong>Compare performance across random seeds</strong></p>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb81-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get project folders</span></span>
<span id="cb81-2">folder_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> project_name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb81-3">project_folders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [f <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> os.listdir(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"."</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> f.startswith(folder_prefix) <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">and</span> os.path.isdir(f)]</span>
<span id="cb81-4"></span>
<span id="cb81-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the class distribution data for each random seed</span></span>
<span id="cb81-6">df_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [get_class_dist_agg_df(f).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).rename(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(f.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> project_folders]</span>
<span id="cb81-7"></span>
<span id="cb81-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Concatenate the class distribution data across seeds into a single DataFrame</span></span>
<span id="cb81-9">missing_imgs_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(df_list, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).transpose().sort_index()</span>
<span id="cb81-10"></span>
<span id="cb81-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute the mean of the class distribution data for each run</span></span>
<span id="cb81-12">mean_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> missing_imgs_df.mean(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).rename(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean'</span>)</span>
<span id="cb81-13"></span>
<span id="cb81-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill any missing values with 0, convert the values to integers, and sort the columns</span></span>
<span id="cb81-15">mean_vals_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mean_vals.to_frame().transpose().fillna(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>)</span>
<span id="cb81-16"></span>
<span id="cb81-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Append mean values to DataFrame</span></span>
<span id="cb81-18">pd.concat([missing_imgs_df, mean_vals_df], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).sort_values(by<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean'</span>, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
custom-trivial-aug-1
</th>
<th>
rand-square-cp-1
</th>
<th>
rand-square-pixel-cp-1
</th>
<th>
baseline
</th>
<th>
rand-pixel-cp-1
</th>
<th>
trivial-aug-item-1
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
1
</th>
<td>
231
</td>
<td>
215
</td>
<td>
261
</td>
<td>
257
</td>
<td>
272
</td>
<td>
321
</td>
</tr>
<tr>
<th>
42
</th>
<td>
231
</td>
<td>
238
</td>
<td>
290
</td>
<td>
284
</td>
<td>
309
</td>
<td>
312
</td>
</tr>
<tr>
<th>
100
</th>
<td>
229
</td>
<td>
255
</td>
<td>
224
</td>
<td>
238
</td>
<td>
352
</td>
<td>
307
</td>
</tr>
<tr>
<th>
1234
</th>
<td>
251
</td>
<td>
246
</td>
<td>
213
</td>
<td>
243
</td>
<td>
317
</td>
<td>
312
</td>
</tr>
<tr>
<th>
Mean
</th>
<td>
235
</td>
<td>
238
</td>
<td>
247
</td>
<td>
255
</td>
<td>
312
</td>
<td>
313
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Sort runs for each random seed</strong></p>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb82-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a lambda function to sort the column names based on their values in each row and return a new DataFrame</span></span>
<span id="cb82-2">sort_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> row: pd.DataFrame({row.name: row.sort_values().index.tolist()}).transpose()</span>
<span id="cb82-3"></span>
<span id="cb82-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the lambda function to each row in the DataFrame and concatenate the results into a new DataFrame</span></span>
<span id="cb82-5">sorted_cols_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(missing_imgs_df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(sort_cols, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).tolist())</span>
<span id="cb82-6"></span>
<span id="cb82-7">sorted_cols_df</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
<th>
1
</th>
<th>
2
</th>
<th>
3
</th>
<th>
4
</th>
<th>
5
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
1
</th>
<td>
rand-square-cp-1
</td>
<td>
custom-trivial-aug-1
</td>
<td>
baseline
</td>
<td>
rand-square-pixel-cp-1
</td>
<td>
rand-pixel-cp-1
</td>
<td>
trivial-aug-item-1
</td>
</tr>
<tr>
<th>
42
</th>
<td>
custom-trivial-aug-1
</td>
<td>
rand-square-cp-1
</td>
<td>
baseline
</td>
<td>
rand-square-pixel-cp-1
</td>
<td>
rand-pixel-cp-1
</td>
<td>
trivial-aug-item-1
</td>
</tr>
<tr>
<th>
100
</th>
<td>
rand-square-pixel-cp-1
</td>
<td>
custom-trivial-aug-1
</td>
<td>
baseline
</td>
<td>
rand-square-cp-1
</td>
<td>
trivial-aug-item-1
</td>
<td>
rand-pixel-cp-1
</td>
</tr>
<tr>
<th>
1234
</th>
<td>
rand-square-pixel-cp-1
</td>
<td>
baseline
</td>
<td>
rand-square-cp-1
</td>
<td>
custom-trivial-aug-1
</td>
<td>
trivial-aug-item-1
</td>
<td>
rand-pixel-cp-1
</td>
</tr>
</tbody>

</table>
</div>
</section>
</section>
<section id="discussion" class="level2">
<h2 class="anchored" data-anchor-id="discussion">Discussion</h2>
<p>The random square copy augmentation performed consistently well throughout my initial testing and final set of experiments. I thought this one might not work well with the hand gesture dataset as it could copy or cover parts of a hand. I assumed that would be an issue if the result were too close to another gesture class.</p>
<p>The random pixel copy transform did much worse than I expected on the validation sets and during inference. I thought it would be one of the better-performing augmentations since it was unlikely to obscure a hand. I am curious if some of the training images were already so noisy that adding more was too much.</p>
<p>Given how poorly the pixel copy transform performed relative to the others, I was surprised my custom trivial augmentation transform did the best on average.</p>
<p>Something I found interesting is that the trivial augmentation models initially performed far better during inference than the others. However, it lost that lead as I cleaned up the dataset. I wonder if the more extreme augmentations included with that transform help with a dirty dataset? With the cleaned-up dataset, I believe some of the included transforms altered the images too much.</p>
<p>Looking to the future, recent improvements in fine-grained control for generative models like ControlNet for Stable Diffusion may make synthetic datasets more comparable to real-world images. I plan to explore this approach in future experiments to see if it can improve the performance of deep learning models trained on visual data.</p>
</section>
<section id="conclusion" class="level2">
<h2 class="anchored" data-anchor-id="conclusion">Conclusion</h2>
<p>My findings suggest that different datasets may require different augmentation strategies, and it’s important to test multiple augmentations to find the best one for a particular dataset. In addition, factors such as the complexity and quality of the dataset and the type of deep learning model may influence the performance of image augmentations.</p>
<p>However, the square-copy transform delivered the best bang for the buck in these experiments. It is nearly tied with the custom trivial augmentation for overall performance and is simple to implement.</p>
<p>Of course, experiments with a known dataset are no substitute for real-world testing. Therefore, I encourage you to try the in-browser demos I’ve provided to test the models trained with different augmentations using your webcam.</p>
<section id="live-demos" class="level5">
<h5 class="anchored" data-anchor-id="live-demos"><strong>Live Demos</strong></h5>
<table class="table">
<thead>
<tr class="header">
<th>Data Augmentation</th>
<th>Demo</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Baseline (no augmentation)</td>
<td><a href="https://cj-mills.github.io/miniai-resnet18d-baseline-demo/">https://cj-mills.github.io/miniai-resnet18d-baseline-demo/</a></td>
</tr>
<tr class="even">
<td>Random Square Copy</td>
<td><a href="https://cj-mills.github.io/miniai-resnet18d-rand-square-cp-demo/">https://cj-mills.github.io/miniai-resnet18d-rand-square-cp-demo/</a></td>
</tr>
<tr class="odd">
<td>Random Pixel Copy</td>
<td><a href="https://cj-mills.github.io/miniai-resnet18d-rand-pixel-cp-demo/">https://cj-mills.github.io/miniai-resnet18d-rand-pixel-cp-demo/</a></td>
</tr>
<tr class="even">
<td>Random Square Pixel Copy</td>
<td><a href="https://cj-mills.github.io/miniai-resnet18d-rand-square-pixel-cp-demo/">https://cj-mills.github.io/miniai-resnet18d-rand-square-pixel-cp-demo/</a></td>
</tr>
<tr class="odd">
<td>TrivialAugmentWide</td>
<td><a href="https://cj-mills.github.io/miniai-resnet18d-trivial-aug-demo/">https://cj-mills.github.io/miniai-resnet18d-trivial-aug-demo/</a></td>
</tr>
<tr class="even">
<td>Custom Trivial Augment</td>
<td><a href="https://cj-mills.github.io/miniai-resnet18d-custom-trivial-aug-demo/">https://cj-mills.github.io/miniai-resnet18d-custom-trivial-aug-demo/</a></td>
</tr>
</tbody>
</table>
<p>The models run locally in your browser using the <a href="https://docs.unity3d.com/Packages/com.unity.barracuda@3.0/manual/index.html">Barracuda</a> inference library for <a href="https://unity.com/">Unity</a>. I selected the best-performing runs for each image augmentation to give them their best shot. Let me know which one performs best for you in the comments below.</p>


</section>
</section>

 ]]></description>
  <category>miniai</category>
  <guid>christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/index.html</guid>
  <pubDate>Thu, 09 Mar 2023 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/posts/miniai-data-augmentation-experiments/part-1/images/img-aug-visualization-preview.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>Training a Mask R-CNN Model on a Custom Dataset With IceVision</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Setup Conda Environment</li>
<li>Import Dependencies</li>
<li>Download the Dataset</li>
<li>Inspect the Dataset</li>
<li>Create Dataset Parser</li>
<li>Define DataLoader Objects</li>
<li>Finetune the Model</li>
<li>Save Model Checkpoint</li>
<li>Perform Inference with Checkpoint</li>
<li>Inspect Raw Model Output</li>
<li>Export Model to ONNX</li>
<li>Verify ONNX Inference</li>
<li>Define Post-processing Steps</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../part-1/">Part 1</a>: Train a <a href="https://arxiv.org/abs/1703.06870">Mask R-CNN</a> model on a custom dataset using the <a href="https://airctic.com/0.11.0/">IceVision</a> library and perform inference with <a href="https://onnxruntime.ai/">ONNX Runtime</a>.</li>
<li><a href="https://github.com/cj-mills/icevision-mask-rcnn-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>This tutorial shows how to train a <a href="https://arxiv.org/abs/1703.06870">Mask R-CNN</a> model on a custom dataset using the <a href="https://airctic.com/0.11.0/">IceVision</a> library. It also demonstrates how to export the trained model to the <a href="https://onnx.ai/">ONNX</a> format and perform inference using <a href="https://onnxruntime.ai/">ONNX Runtime</a>.</p>
<p>We will use a pre-existing dataset of annotated student ID card images for training. I plan to show how to create a custom dataset from scratch in a future post, including how to annotate the images and prepare them for training.</p>
<ul>
<li><strong>Dataset Source:</strong> <a href="https://github.com/MbassiJaphet/pytorch-for-information-extraction">pytorch-for-information-extraction</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/student-id-sample-annotation.jpg" class="img-fluid figure-img"></p>
</figure>
</div>
<p>You can find links to view the training code and run it on <a href="https://colab.research.google.com/?utm_source=scs-index">Google Colab</a> and <a href="https://www.kaggle.com/docs/notebooks">Kaggle</a> below.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Colab</th>
<th>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Kaggle&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/icevision-mask-rcnn-tutorial/blob/main/notebooks/Icevision_Mask_RCNN_Student_ID.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/icevision-mask-rcnn-tutorial/blob/main/notebooks/Icevision_Mask_RCNN_Student_ID_Colab.ipynb">Open In Colab</a></td>
<td><a href="https://kaggle.com/kernels/welcome?src=https://github.com/cj-mills/icevision-mask-rcnn-tutorial/blob/main/notebooks/Icevision_Mask_RCNN_Student_ID_Kaggle.ipynb">Kaggle</a></td>
</tr>
</tbody>
</table>
</section>
<section id="setup-conda-environment" class="level2">
<h2 class="anchored" data-anchor-id="setup-conda-environment">Setup Conda Environment</h2>
<p>I recommend using a dedicated <a href="https://docs.python.org/3/tutorial/venv.html">virtual environment</a> when working with the IceVision library, as it has specific dependency requirements that can conflict with other libraries or versions. The easiest way to create a virtual environment for IceVision is using <a href="https://docs.conda.io/en/latest/">Conda</a>. Below are the steps to create a Conda environment and activate it. Be sure to follow these steps in the provided order to ensure the environment works for IceVision.</p>
<blockquote class="blockquote">
<p><strong>Important:</strong> IceVision currently only supports Linux/macOS. Try using <a href="https://docs.microsoft.com/en-us/windows/wsl/install">WSL</a> (Windows Subsystem for Linux) if training locally on Windows.</p>
</blockquote>
<p><strong>Install CUDA Toolkit</strong></p>
<p>If you plan to run the training code on your local machine, you might need to install the CUDA Toolkit. CUDA requires an Nvidia GPU, and version 11.1.0 of the toolkit is available at the link below. Google Colab and Kaggle Notebooks already have CUDA installed.</p>
<ul>
<li><a href="https://developer.nvidia.com/cuda-11.1.0-download-archive">CUDA Toolkit 11.1.0</a></li>
<li><a href="https://developer.nvidia.com/cuda-toolkit-archive">CUDA Toolkit Archive</a></li>
</ul>
<p><strong>Conda environment setup steps</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create a new conda environment</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> create <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--name</span> icevision python==3.8</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># activate the environment</span></span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">conda</span> activate icevision</span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install PyTorch and torchvision</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install torch==1.10.0+cu111 torchvision==0.11.1+cu111 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> https://download.pytorch.org/whl/torch_stable.html</span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install mmcv-full</span></span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install mmcv-full==1.3.17 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> https://download.openmmlab.com/mmcv/dist/cu111/torch1.10.0/index.html</span>
<span id="cb1-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install mmdet</span></span>
<span id="cb1-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install mmdet==2.17.0</span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install icevision</span></span>
<span id="cb1-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install icevision==0.11.0</span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install icedata</span></span>
<span id="cb1-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install icedata==0.5.1</span>
<span id="cb1-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install setuptools</span></span>
<span id="cb1-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install setuptools==59.5.0</span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install jupyter</span></span>
<span id="cb1-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install jupyter</span>
<span id="cb1-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install onnxruntime</span></span>
<span id="cb1-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install onnxruntime</span></code></pre></div>
<p>The <a href="https://pypi.org/project/icevision/"><code>icevision</code></a> package provides the necessary functionality for data curation, data transforms, and training loops that we will use to train the model. Additionally, the <a href="https://airctic.github.io/icedata/"><code>icedata</code></a> package provides the functionality we need to create a custom parser for reading the dataset.</p>
<p><strong>Colab and Kaggle Setup Requirements</strong></p>
<p>When running the training code on Google Colab and Kaggle Notebooks, it is necessary to uninstall specific packages to avoid conflicts with IceVision and its dependencies. The platform-specific setup steps are at the top of the notebooks linked above. Follow these instructions before running the code to ensure it runs smoothly on these platforms.</p>
</section>
<section id="import-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="import-dependencies">Import Dependencies</h2>
<p>We will start by importing the IceVision library and configuring Pandas. When you import the IceVision library for the first time, it will automatically download some additional resources that it needs to function correctly.</p>
<p><strong>Import IceVision library</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import all the necessary modules from the icevision package</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> icevision.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<p><strong>Import and configure Pandas</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the pandas package</span></span>
<span id="cb3-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the max column width to None</span></span>
<span id="cb3-5">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_colwidth'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the max number of rows and columns to None</span></span>
<span id="cb3-8">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_rows'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb3-9">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span></code></pre></div>
</section>
<section id="download-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="download-the-dataset">Download the Dataset</h2>
<p>The sample dataset we will use for training is available on GitHub, so all you need to do is clone the repository to access it.</p>
<p><strong>Clone dataset repository</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clone the dataset repository from GitHub</span></span>
<span id="cb4-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>git clone https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>github.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>MbassiJaphet<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>pytorch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>information<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>extraction.git</span></code></pre></div>
</section>
<section id="inspect-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="inspect-the-dataset">Inspect the Dataset</h2>
<p>After the dataset finishes downloading, you can inspect its contents by navigating to the <code>code/datasets/detection/student-id/</code> subfolder, where you will find the image and annotation files. In this step, we will get the file paths for the images and annotations and inspect one of the training images. That will give us a better understanding of the dataset and its structure.</p>
<p><strong>Define path to dataset</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the path to the dataset directory</span></span>
<span id="cb5-2">data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'./pytorch-for-information-extraction/code/datasets/detection/student-id'</span>)</span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the dataset name</span></span>
<span id="cb5-4">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data_dir.name</span></code></pre></div>
<p>Each image in the dataset has a corresponding JSON file that contains its annotation data.</p>
<p><strong>Inspect dataset contents</strong></p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of the files in the dataset directory and display them using a DataFrame</span></span>
<span id="cb6-2">pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(data_dir.ls())).head()</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10001.jpg
</td>
</tr>
<tr>
<th>
1
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10001.json
</td>
</tr>
<tr>
<th>
2
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10002.jpg
</td>
</tr>
<tr>
<th>
3
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10002.json
</td>
</tr>
<tr>
<th>
4
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10003.jpg
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Get image file paths</strong></p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the file paths for all the images in the dataset</span></span>
<span id="cb7-2">files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_image_files(data_dir)</span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Count the number of files</span></span>
<span id="cb7-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files)</span></code></pre></div>
<pre class="text"><code>150</code></pre>
<p><strong>Inspect one of the training images</strong></p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the PIL package</span></span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PIL</span>
<span id="cb9-3"></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the first image in the dataset</span></span>
<span id="cb9-5">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>)</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the dimensions of the image</span></span>
<span id="cb9-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Image Dims: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-9"></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the image</span></span>
<span id="cb9-11">img</span></code></pre></div>
<pre class="text"><code>    Image Dims: (480, 640)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_16_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>To make it easier to work with the dataset, we will create a dictionary that maps image names to file paths. The dictionary will allow us to retrieve the file path for a given image efficiently.</p>
<p><strong>Create a dictionary that maps image names to file paths</strong></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a dictionary that maps image names to file paths</span></span>
<span id="cb11-2">img_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span>.name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] : <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">file</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files}</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the first item in the dictionary as a DataFrame</span></span>
<span id="cb11-5">pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(img_dict.items())[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]).transpose()</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
<th>
1
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
10001
</td>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10001.jpg
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Get list of annotation file paths</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the os and glob modules</span></span>
<span id="cb12-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb12-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> glob <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get a list of the annotation file paths in the dataset directory</span></span>
<span id="cb13-2">annotation_paths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob(os.path.join(data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*.json"</span>))</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the list of annotation file paths as a DataFrame</span></span>
<span id="cb13-5">pd.DataFrame(annotation_paths).head()</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10001.json
</td>
</tr>
<tr>
<th>
1
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10002.json
</td>
</tr>
<tr>
<th>
2
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10003.json
</td>
</tr>
<tr>
<th>
3
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10004.json
</td>
</tr>
<tr>
<th>
4
</th>
<td>
pytorch-for-information-extraction/code/datasets/detection/student-id/10005.json
</td>
</tr>
</tbody>

</table>
</div>
<p>After getting the list of annotation file paths, we will create an annotation DataFrame that contains all of the annotation data for the dataset. This DataFrame will allow us to manipulate and query the annotations more easily.</p>
<p><strong>Create annotation dataframe</strong></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the JSON files using Pandas and concatenate the resulting dataframes</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># into a single dataframe</span></span>
<span id="cb14-3">cls_dataframes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (pd.read_json(f, orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>).transpose() <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> f <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> annotation_paths)</span>
<span id="cb14-4">annotation_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.concat(cls_dataframes, ignore_index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb14-5"></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Assign the image file name as the index for each row</span></span>
<span id="cb14-7">annotation_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotation_df.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">lambda</span> row: row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'imagePath'</span>].split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-8">annotation_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotation_df.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>)</span>
<span id="cb14-9"></span>
<span id="cb14-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep only the rows that have corresponding image files</span></span>
<span id="cb14-11">annotation_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotation_df.loc[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(img_dict.keys())]</span>
<span id="cb14-12"></span>
<span id="cb14-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the first few rows of the dataframe</span></span>
<span id="cb14-14">annotation_df.head()</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
version
</th>
<th>
flags
</th>
<th>
shapes
</th>
<th>
lineColor
</th>
<th>
fillColor
</th>
<th>
imagePath
</th>
<th>
imageData
</th>
<th>
imageHeight
</th>
<th>
imageWidth
</th>
</tr>
<tr>
<th>
index
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
10001
</th>
<td>
3.21.1
</td>
<td>
{}
</td>
<td>
[{‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[19.190476190476204, 244.76190476190476], [23.0, 233.33333333333331], [385.8571428571428, 132.38095238095238], [400.1428571428571, 135.23809523809524], [468.71428571428567, 353.3333333333333], [466.80952380952374, 362.85714285714283], [97.28571428571428, 478.0952380952381], [81.09523809523807, 474.2857142857143]], ‘shape_type’: ‘polygon’, ‘flags’: {}}]
</td>
<td>
[0, 255, 0, 128]
</td>
<td>
[255, 0, 0, 128]
</td>
<td>
10001.jpg
</td>
<td>
</td>
<td>
640
</td>
<td>
480
</td>
</tr>
<tr>
<th>
10002
</th>
<td>
3.21.1
</td>
<td>
{}
</td>
<td>
[{‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[21.095238095238102, 183.33333333333334], [231.41269841269843, 88.09523809523809], [450.46031746031747, 347.6190476190476], [475.06349206349205, 376.1904761904762], [478.2380952380952, 388.8888888888889], [301.25396825396825, 532.5396825396825], [271.0952380952381, 556.3492063492064], [255.22222222222223, 541.2698412698413], [242.52380952380952, 534.9206349206349], [25.85714285714286, 199.20634920634922]], ‘shape_type’: ‘polygon’, ‘flags’: {}}]
</td>
<td>
[0, 255, 0, 128]
</td>
<td>
[255, 0, 0, 128]
</td>
<td>
10002.jpg
</td>
<td>
</td>
<td>
640
</td>
<td>
480
</td>
</tr>
<tr>
<th>
10003
</th>
<td>
3.21.1
</td>
<td>
{}
</td>
<td>
[{‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[138.23809523809524, 71.42857142857143], [407.7619047619047, 31.428571428571427], [418.2380952380952, 39.047619047619044], [422.04761904761904, 539.047619047619], [407.7619047619047, 552.3809523809524], [112.52380952380952, 519.047619047619], [98.23809523809524, 505.71428571428567]], ‘shape_type’: ‘polygon’, ‘flags’: {}}]
</td>
<td>
[0, 255, 0, 128]
</td>
<td>
[255, 0, 0, 128]
</td>
<td>
10003.jpg
</td>
<td>
</td>
<td>
640
</td>
<td>
480
</td>
</tr>
<tr>
<th>
10004
</th>
<td>
3.21.1
</td>
<td>
{}
</td>
<td>
[{‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[119.20529801324503, 218.54304635761588], [440.3973509933775, 184.7682119205298], [445.0331125827814, 190.72847682119206], [391.3907284768212, 366.2251655629139], [384.7682119205298, 372.18543046357615], [250.33112582781456, 401.3245033112583], [82.11920529801324, 446.3576158940397], [76.82119205298014, 441.72185430463577], [49.66887417218544, 239.73509933774835], [107.28476821192052, 228.47682119205297]], ‘shape_type’: ‘polygon’, ‘flags’: {}}]
</td>
<td>
[0, 255, 0, 128]
</td>
<td>
[255, 0, 0, 128]
</td>
<td>
10004.jpg
</td>
<td>
</td>
<td>
640
</td>
<td>
480
</td>
</tr>
<tr>
<th>
10005
</th>
<td>
3.21.1
</td>
<td>
{}
</td>
<td>
[{‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[41.18840579710144, 218.8405797101449], [41.18840579710144, 209.42028985507244], [52.78260869565216, 201.44927536231882], [224.52173913043475, 142.75362318840578], [359.30434782608694, 89.85507246376811], [367.99999999999994, 92.02898550724638], [462.2028985507246, 275.3623188405797], [369.4492753623188, 348.5507246376811], [199.88405797101444, 472.463768115942], [191.91304347826082, 471.01449275362313]], ‘shape_type’: ‘polygon’, ‘flags’: {}}]
</td>
<td>
[0, 255, 0, 128]
</td>
<td>
[255, 0, 0, 128]
</td>
<td>
10005.jpg
</td>
<td>
</td>
<td>
640
</td>
<td>
480
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>We can retrieve the annotation data for a specific image file using its name.</p>
<p><strong>Inspect annotation data for sample image</strong></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the file ID for the image we want to inspect</span></span>
<span id="cb15-2">file_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">56</span>].name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the file ID</span></span>
<span id="cb15-5">file_id</span></code></pre></div>
<pre class="text"><code>'10057'</code></pre>
<p>The <code>shapes</code> entry contains the point coordinates to draw the image masks. We will also use this information to construct the associated bounding boxes. This particular entry has point coordinates for two image masks.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the annotation data for the specified image file</span></span>
<span id="cb17-2">annotation_df.loc[file_id].to_frame()</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
10057
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
version
</th>
<td>
3.21.1
</td>
</tr>
<tr>
<th>
flags
</th>
<td>
{}
</td>
</tr>
<tr>
<th>
shapes
</th>
<td>
[{‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[4.703296703296701, 186.8131868131868], [172.28571428571428, 91.20879120879121], [177.23076923076923, 89.56043956043956], [183.82417582417582, 92.85714285714285], [260.19780219780216, 161.53846153846152], [248.65934065934067, 173.07692307692307], [99.75824175824175, 273.6263736263736], [88.2197802197802, 280.7692307692308], [83.27472527472527, 280.7692307692308], [35.472527472527474, 225.82417582417582]], ‘shape_type’: ‘polygon’, ‘flags’: {}}, {‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[245.36263736263737, 134.06593406593407], [346.46153846153845, 100.0], [352.5054945054945, 101.64835164835165], [465.1428571428571, 248.9010989010989], [461.8461538461538, 252.1978021978022], [356.35164835164835, 300.5494505494505], [350.3076923076923, 297.8021978021978]], ‘shape_type’: ‘polygon’, ‘flags’: {}}, {‘label’: ‘student_id’, ‘line_color’: None, ‘fill_color’: None, ‘points’: [[33.27472527472527, 489.010989010989], [159.64835164835165, 281.3186813186813], [166.7912087912088, 271.97802197802196], [172.28571428571428, 270.3296703296703], [297.010989010989, 330.2197802197802], [300.3076923076923, 335.16483516483515], [299.2087912087912, 340.65934065934067], [223.38461538461536, 506.5934065934066], [192.6153846153846, 571.4285714285714], [184.9230769230769, 574.1758241758241], [172.28571428571428, 569.2307692307692], [47.56043956043956, 501.0989010989011], [36.021978021978015, 496.15384615384613]], ‘shape_type’: ‘polygon’, ‘flags’: {}}]
</td>
</tr>
<tr>
<th>
lineColor
</th>
<td>
[0, 255, 0, 128]
</td>
</tr>
<tr>
<th>
fillColor
</th>
<td>
[255, 0, 0, 128]
</td>
</tr>
<tr>
<th>
imagePath
</th>
<td>
10057.jpg
</td>
</tr>
<tr>
<th>
imageData
</th>
<td>
</td>
</tr>
<tr>
<th>
imageHeight
</th>
<td>
640
</td>
</tr>
<tr>
<th>
imageWidth
</th>
<td>
480
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>We need a font file to annotate the images with class labels. We can download one from <a href="https://fonts.google.com/">Google Fonts</a>.</p>
<p><strong>Download font file</strong></p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the font file name</span></span>
<span id="cb18-2">font_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'KFOlCnqEu92Fr1MmEU9vAw.ttf'</span></span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If the font file doesn't exist, download it</span></span>
<span id="cb18-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> os.path.exists(font_file): </span>
<span id="cb18-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>wget https:<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span>fonts.gstatic.com<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>roboto<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>v30<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>$font_file</span></code></pre></div>
<p><strong>Annotate sample image</strong></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the ImageDraw class from the PIL package</span></span>
<span id="cb19-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> PIL <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> ImageDraw</span></code></pre></div>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the image file</span></span>
<span id="cb20-2">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(img_dict[file_id]).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>)</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the dimensions of the image</span></span>
<span id="cb20-5">width, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img.size</span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a copy of the image to annotate</span></span>
<span id="cb20-8">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img.copy()</span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a blank image to store the mask</span></span>
<span id="cb20-11">mask_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span>, img.size, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb20-12"></span>
<span id="cb20-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a drawing object for the annotated image</span></span>
<span id="cb20-14">draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(annotated_img)</span>
<span id="cb20-15"></span>
<span id="cb20-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the font size for the object labels</span></span>
<span id="cb20-17">fnt_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb20-18"></span>
<span id="cb20-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the annotation data for the specified image</span></span>
<span id="cb20-20">annotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotation_df.loc[file_id]</span>
<span id="cb20-21"></span>
<span id="cb20-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate through annotations for sample image</span></span>
<span id="cb20-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(annotation[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shapes'</span>])):</span>
<span id="cb20-24">    </span>
<span id="cb20-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract mask polygon coords</span></span>
<span id="cb20-26">    points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(annotation[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shapes'</span>][i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'points'</span>])</span>
<span id="cb20-27">    </span>
<span id="cb20-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract bounding box coords</span></span>
<span id="cb20-29">    x_min, y_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> points.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb20-30">    x_max, y_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> points.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb20-31">    </span>
<span id="cb20-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw bounding box on sample image</span></span>
<span id="cb20-33">    shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x_min, y_min, x_max, y_max)</span>
<span id="cb20-34">    draw.rectangle(shape, outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb20-35"></span>
<span id="cb20-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw segmentation mask on sample image</span></span>
<span id="cb20-37">    xy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> points]</span>
<span id="cb20-38">    ImageDraw.Draw(annotated_img, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGBA'</span>).polygon(xy, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">125</span>), outline <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb20-39">    </span>
<span id="cb20-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw segmentation mask on blank image</span></span>
<span id="cb20-41">    ImageDraw.Draw(mask_img, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span>).polygon(xy, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>))</span>
<span id="cb20-42">    </span>
<span id="cb20-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw object label on sample image</span></span>
<span id="cb20-44">    fnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.ImageFont.truetype(font_file, fnt_size)</span>
<span id="cb20-45">    label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotation[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shapes'</span>][i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>]</span>
<span id="cb20-46">    draw.multiline_text((x_min, y_min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>fnt_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb20-47"></span>
<span id="cb20-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the dimensions of the annotated image</span></span>
<span id="cb20-49"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(annotated_img.size)</span>
<span id="cb20-50"></span>
<span id="cb20-51"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the annotated image</span></span>
<span id="cb20-52">annotated_img</span></code></pre></div>
<pre class="text"><code>(480, 640)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_30_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Display segmentation mask</strong></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1">mask_img</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_32_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We need to provide IceVision with a class map that maps index values to unique class names.</p>
<p><strong>Create a class map</strong></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Explode the 'shapes' column in the annotation_df dataframe</span></span>
<span id="cb23-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the resulting series to a dataframe and rename the 'shapes' column to 'shapes'</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply the pandas Series function to the 'shapes' column of the dataframe</span></span>
<span id="cb23-4">shapes_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotation_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shapes'</span>].explode().to_frame().shapes.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(pd.Series)</span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the first few rows of the resulting dataframe</span></span>
<span id="cb23-6">shapes_df.head()</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
label
</th>
<th>
line_color
</th>
<th>
fill_color
</th>
<th>
points
</th>
<th>
shape_type
</th>
<th>
flags
</th>
</tr>
<tr>
<th>
index
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
<th>
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
10001
</th>
<td>
student_id
</td>
<td>
None
</td>
<td>
None
</td>
<td>
[[19.190476190476204, 244.76190476190476], [23.0, 233.33333333333331], [385.8571428571428, 132.38095238095238], [400.1428571428571, 135.23809523809524], [468.71428571428567, 353.3333333333333], [466.80952380952374, 362.85714285714283], [97.28571428571428, 478.0952380952381], [81.09523809523807, 474.2857142857143]]
</td>
<td>
polygon
</td>
<td>
{}
</td>
</tr>
<tr>
<th>
10002
</th>
<td>
student_id
</td>
<td>
None
</td>
<td>
None
</td>
<td>
[[21.095238095238102, 183.33333333333334], [231.41269841269843, 88.09523809523809], [450.46031746031747, 347.6190476190476], [475.06349206349205, 376.1904761904762], [478.2380952380952, 388.8888888888889], [301.25396825396825, 532.5396825396825], [271.0952380952381, 556.3492063492064], [255.22222222222223, 541.2698412698413], [242.52380952380952, 534.9206349206349], [25.85714285714286, 199.20634920634922]]
</td>
<td>
polygon
</td>
<td>
{}
</td>
</tr>
<tr>
<th>
10003
</th>
<td>
student_id
</td>
<td>
None
</td>
<td>
None
</td>
<td>
[[138.23809523809524, 71.42857142857143], [407.7619047619047, 31.428571428571427], [418.2380952380952, 39.047619047619044], [422.04761904761904, 539.047619047619], [407.7619047619047, 552.3809523809524], [112.52380952380952, 519.047619047619], [98.23809523809524, 505.71428571428567]]
</td>
<td>
polygon
</td>
<td>
{}
</td>
</tr>
<tr>
<th>
10004
</th>
<td>
student_id
</td>
<td>
None
</td>
<td>
None
</td>
<td>
[[119.20529801324503, 218.54304635761588], [440.3973509933775, 184.7682119205298], [445.0331125827814, 190.72847682119206], [391.3907284768212, 366.2251655629139], [384.7682119205298, 372.18543046357615], [250.33112582781456, 401.3245033112583], [82.11920529801324, 446.3576158940397], [76.82119205298014, 441.72185430463577], [49.66887417218544, 239.73509933774835], [107.28476821192052, 228.47682119205297]]
</td>
<td>
polygon
</td>
<td>
{}
</td>
</tr>
<tr>
<th>
10005
</th>
<td>
student_id
</td>
<td>
None
</td>
<td>
None
</td>
<td>
[[41.18840579710144, 218.8405797101449], [41.18840579710144, 209.42028985507244], [52.78260869565216, 201.44927536231882], [224.52173913043475, 142.75362318840578], [359.30434782608694, 89.85507246376811], [367.99999999999994, 92.02898550724638], [462.2028985507246, 275.3623188405797], [369.4492753623188, 348.5507246376811], [199.88405797101444, 472.463768115942], [191.91304347826082, 471.01449275362313]]
</td>
<td>
polygon
</td>
<td>
{}
</td>
</tr>
</tbody>

</table>
</div>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a list of unique labels from the 'label' column of the shapes_df dataframe</span></span>
<span id="cb24-2">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> shapes_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>].unique().tolist()</span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the list of labels</span></span>
<span id="cb24-4">labels</span></code></pre></div>
<pre class="text"><code>['student_id']</code></pre>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a ClassMap object with the list of labels</span></span>
<span id="cb26-2">class_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ClassMap(labels)</span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the ClassMap object</span></span>
<span id="cb26-4">class_map</span></code></pre></div>
<pre class="text"><code>&lt;ClassMap: {'background': 0, 'student_id': 1}&gt;</code></pre>
</section>
<section id="create-dataset-parser" class="level2">
<h2 class="anchored" data-anchor-id="create-dataset-parser">Create Dataset Parser</h2>
<p>To create a custom dataset parser for instance segmentation, we can use the template for an instance segmentation record and the template for an instance segmentation parser.</p>
<p><strong>View template for an instance segmentation record</strong></p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an InstanceSegmentationRecord object</span></span>
<span id="cb28-2">template_record <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> InstanceSegmentationRecord()</span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the InstanceSegmentationRecord object</span></span>
<span id="cb28-4">template_record</span></code></pre></div>
<pre class="text"><code>BaseRecord

common: 
    - Image size None
    - Filepath: None
    - Img: None
    - Record ID: None
detection: 
    - Class Map: None
    - Labels: []
    - BBoxes: []
    - masks: []
    - mask_array: None</code></pre>
<p><strong>View template for an instance segmentation parser</strong></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate a template record for an instance segmentation dataset using the InstanceSegmentationRecord object</span></span>
<span id="cb30-2">Parser.generate_template(template_record)</span></code></pre></div>
<pre class="text"><code>class MyParser(Parser):
    def __init__(self, template_record):
        super().__init__(template_record=template_record)
    def __iter__(self) -&gt; Any:
    def __len__(self) -&gt; int:
    def record_id(self, o: Any) -&gt; Hashable:
    def parse_fields(self, o: Any, record: BaseRecord, is_new: bool):
        record.set_img_size(&lt;ImgSize&gt;)
        record.set_filepath(&lt;Union[str, Path]&gt;)
        record.detection.set_class_map(&lt;ClassMap&gt;)
        record.detection.add_labels(&lt;Sequence[Hashable]&gt;)
        record.detection.add_bboxes(&lt;Sequence[BBox]&gt;)
        record.detection.add_masks(&lt;Sequence[Mask]&gt;)</code></pre>
<p><strong>Define custom parser class</strong></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> StudentIDParser(Parser):</span>
<span id="cb32-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize a StudentIDParser object</span></span>
<span id="cb32-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, template_record, annotations_df, img_dict, class_map):</span>
<span id="cb32-4">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Call the __init__ method of the parent class</span></span>
<span id="cb32-5">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">super</span>().<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(template_record<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>template_record)</span>
<span id="cb32-6">        </span>
<span id="cb32-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the instance variables to the values of the corresponding arguments</span></span>
<span id="cb32-8">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_dict</span>
<span id="cb32-9">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> annotations_df</span>
<span id="cb32-10">        <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.class_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_map</span>
<span id="cb32-11"></span>
<span id="cb32-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return an iterator over the rows of the DataFrame</span></span>
<span id="cb32-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__iter__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb32-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> o <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.df.itertuples(): <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> o</span>
<span id="cb32-15"></span>
<span id="cb32-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the number of rows in the DataFrame</span></span>
<span id="cb32-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__len__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb32-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.df)</span>
<span id="cb32-19"></span>
<span id="cb32-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the index of the current row of the DataFrame</span></span>
<span id="cb32-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> record_id(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, o: Any) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Hashable:</span>
<span id="cb32-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> o.Index</span>
<span id="cb32-23"></span>
<span id="cb32-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the image width and height</span></span>
<span id="cb32-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> image_width_height(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, o) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> Tuple[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>]:</span>
<span id="cb32-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>._size[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb32-27"></span>
<span id="cb32-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse the data from the DataFrame and populate the record object</span></span>
<span id="cb32-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> parse_fields(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, o, record, is_new):</span>
<span id="cb32-30">        </span>
<span id="cb32-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the file path of the image from the img_dict dictionary</span></span>
<span id="cb32-32">        filepath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.img_dict[o.Index]</span>
<span id="cb32-33">        </span>
<span id="cb32-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the image and get its width and height</span></span>
<span id="cb32-35">        width, height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(filepath).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGB'</span>).size</span>
<span id="cb32-36">        </span>
<span id="cb32-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the image size and file path of the record object</span></span>
<span id="cb32-38">        record.set_img_size([width, height])</span>
<span id="cb32-39">        record.set_filepath(Path(filepath))</span>
<span id="cb32-40">        </span>
<span id="cb32-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the class map of the record object's detection attribute</span></span>
<span id="cb32-42">        record.detection.set_class_map(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.class_map)</span>
<span id="cb32-43">                </span>
<span id="cb32-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize empty lists for labels, bounding boxes, and masks</span></span>
<span id="cb32-45">        labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb32-46">        bbox_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb32-47">        mask_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb32-48">        </span>
<span id="cb32-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate over the shapes in the current row of the DataFrame</span></span>
<span id="cb32-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(o.shapes)):</span>
<span id="cb32-51">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the points of the shape</span></span>
<span id="cb32-52">            points <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(o.shapes[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'points'</span>])</span>
<span id="cb32-53"></span>
<span id="cb32-54">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the minimum and maximum x- and y-coordinates of the points</span></span>
<span id="cb32-55">            x_min, y_min <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> points.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb32-56">            x_max, y_max <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> points.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb32-57">            </span>
<span id="cb32-58">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the label to the labels list</span></span>
<span id="cb32-59">            labels.append(o.shapes[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>])</span>
<span id="cb32-60">            </span>
<span id="cb32-61">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a bounding box object from the coordinates and add it to the bbox_list</span></span>
<span id="cb32-62">            bbox_list.append(BBox.from_xyxy(x_min, y_min, x_max, y_max))</span>
<span id="cb32-63">            </span>
<span id="cb32-64">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a mask image and draw the shape on it</span></span>
<span id="cb32-65">            mask_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.new(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span>, (width, height), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb32-66">            xy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [(p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],p[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> p <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> points]</span>
<span id="cb32-67">            ImageDraw.Draw(mask_img, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'L'</span>).polygon(xy, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb32-68">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the mask image to a numpy array and add it to the mask_list</span></span>
<span id="cb32-69">            mask_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.array(mask_img).clip(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb32-70">            mask_list.append(MaskArray(mask_array))</span>
<span id="cb32-71">        </span>
<span id="cb32-72">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the labels, bounding boxes, and masks to the record object</span></span>
<span id="cb32-73">        record.detection.add_labels(labels)</span>
<span id="cb32-74">        record.detection.add_bboxes(bbox_list)</span>
<span id="cb32-75">        record.detection.add_masks(mask_list)</span></code></pre></div>
<p>We can then create a parser object using the custom parser class.</p>
<p><strong>Create a custom parser object</strong></p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a StudentIDParser object</span></span>
<span id="cb33-2">parser <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> StudentIDParser(template_record, annotation_df, img_dict, class_map)</span>
<span id="cb33-3"></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the length of the parser object, which is the number of rows in the DataFrame</span></span>
<span id="cb33-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(parser)</span></code></pre></div>
<pre class="text"><code>150</code></pre>
<p>We use the parser object to parse annotations and create records.</p>
<p><strong>Parse annotations to create records</strong></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a RandomSplitter object</span></span>
<span id="cb35-2">data_splitter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RandomSplitter([<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>])</span>
<span id="cb35-3"></span>
<span id="cb35-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the RandomSplitter to split the data into training and validation sets</span></span>
<span id="cb35-5">train_records, valid_records <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parser.parse(data_splitter)</span>
<span id="cb35-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># train_records, valid_records = parser.parse(data_splitter, cache_filepath=f'{dataset_name}-cache.pkl')</span></span></code></pre></div>
<p>Let’s save the class labels to use later during inference.</p>
<p><strong>Export class labels</strong></p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the json module</span></span>
<span id="cb36-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb36-3"></span>
<span id="cb36-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a dictionary containing the class labels</span></span>
<span id="cb36-5">class_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classes"</span>: parser.class_map.get_classes()}</span>
<span id="cb36-6"></span>
<span id="cb36-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate a file name for the class labels file</span></span>
<span id="cb36-8">class_labels_file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-classes.json"</span></span>
<span id="cb36-9"></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the class labels file for writing and write the class labels to it</span></span>
<span id="cb36-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> write_file:</span>
<span id="cb36-12">    json.dump(class_labels, write_file)</span>
<span id="cb36-13">    </span>
<span id="cb36-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the class labels and file name</span></span>
<span id="cb36-15">class_labels, class_labels_file_name</span></code></pre></div>
<pre class="text"><code>({'classes': ['background', 'student_id']}, 'student-id-classes.json')</code></pre>
<p>Finally, we can inspect the training records to ensure the parser works correctly.</p>
<p><strong>Inspect training records</strong></p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the first element of the train_records object</span></span>
<span id="cb38-2">train_records[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<pre class="text"><code>BaseRecord

common: 
    - Image size [640, 480]
    - Filepath: pytorch-for-information-extraction/code/datasets/detection/student-id/10115.jpg
    - Img: None
    - Record ID: 10115
detection: 
    - Class Map: &lt;ClassMap: {'background': 0, 'student_id': 1}&gt;
    - Labels: [1, 1]
    - BBoxes: [&lt;BBox (xmin:281.57142857142856, ymin:1.428571428571428, xmax:504.42857142857133, ymax:326.4285714285714)&gt;, &lt;BBox (xmin:185.1428571428571, ymin:124.28571428571428, xmax:382.99999999999994, ymax:448.57142857142856)&gt;]
    - masks: [&lt;icevision.core.mask.MaskArray object at 0x7f521f95df10&gt;, &lt;icevision.core.mask.MaskArray object at 0x7f521f95da90&gt;]
    - mask_array: None</code></pre>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate the first sample of the train_records object</span></span>
<span id="cb40-2">show_record(train_records[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], figsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), display_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span> )</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_51_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Annotate the second to fourth samples of the train_records list</span></span>
<span id="cb41-2">show_records(train_records[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>], ncols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,display_label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_52_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="define-dataloader-objects" class="level2">
<h2 class="anchored" data-anchor-id="define-dataloader-objects">Define DataLoader Objects</h2>
<p>To define DataLoader objects for our task, we must first set the desired input resolution for the model.</p>
<p><strong>Define input resolution</strong></p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the image size to 512</span></span>
<span id="cb42-2">image_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span></span>
<span id="cb42-3"></span>
<span id="cb42-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the presize to 1024</span></span>
<span id="cb42-5">presize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1024</span></span></code></pre></div>
<p>Next, we create a list of transformations to apply to the input images, such as resizing, padding, and normalization. IceVision also applies augmentations, such as horizontal flipping, to improve model performance.</p>
<p><strong>Define Transforms</strong></p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define the data transforms for the training and validation sets</span></span>
<span id="cb43-2">train_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms.A.Adapter([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tfms.A.aug_tfms(size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>image_size, presize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>presize), tfms.A.Normalize()])</span>
<span id="cb43-3">valid_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms.A.Adapter([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tfms.A.resize_and_pad(image_size), tfms.A.Normalize()])</span></code></pre></div>
<p>We then get the mean and standard deviation of the dataset used to train the original model to normalize the input images.</p>
<p><strong>Get normalization stats</strong></p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the mean of the Normalize() transformation</span></span>
<span id="cb44-2">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms.A.Normalize().mean</span>
<span id="cb44-3"></span>
<span id="cb44-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the standard deviation of the Normalize() transformation</span></span>
<span id="cb44-5">std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms.A.Normalize().std</span>
<span id="cb44-6"></span>
<span id="cb44-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the mean and standard deviation</span></span>
<span id="cb44-8">mean, std</span></code></pre></div>
<pre class="text"><code>((0.485, 0.456, 0.406), (0.229, 0.224, 0.225))</code></pre>
<p>Next, we create dataset objects for the training and validation datasets using the defined transforms and normalization stats.</p>
<p><strong>Define Datasets</strong></p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Dataset object for the training set</span></span>
<span id="cb46-2">train_ds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset(train_records, train_tfms)</span>
<span id="cb46-3"></span>
<span id="cb46-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Dataset object for the validation set</span></span>
<span id="cb46-5">valid_ds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset(valid_records, valid_tfms)</span>
<span id="cb46-6"></span>
<span id="cb46-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Return the Dataset objects</span></span>
<span id="cb46-8">train_ds, valid_ds</span></code></pre></div>
<pre class="text"><code>(&lt;Dataset with 120 items&gt;, &lt;Dataset with 30 items&gt;)</code></pre>
<p>We can apply the image augmentations to a sample training image to demonstrate the effects of data augmentation.</p>
<p><strong>Apply augmentations to a training sample</strong></p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get three samples from the training set</span></span>
<span id="cb48-2">samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [train_ds[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> _ <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]</span>
<span id="cb48-3"></span>
<span id="cb48-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the samples</span></span>
<span id="cb48-5">show_samples(samples, ncols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_62_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Once the datasets are defined, we can specify Mask R-CNN as the model type for training and inference.</p>
<p><strong>Define model type</strong></p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the model type to Mask R-CNN</span></span>
<span id="cb49-2">model_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models.torchvision.mask_rcnn</span></code></pre></div>
<p><strong>Define backbone</strong></p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a ResNet50-FPN backbone for the model</span></span>
<span id="cb50-2">backbone <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.backbones.resnet50_fpn()</span></code></pre></div>
<p><strong>Define batch size</strong></p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the batch size</span></span>
<span id="cb51-2">bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span></code></pre></div>
<blockquote class="blockquote">
<p><strong>Note:</strong> Adjust the batch size based on the available GPU memory.</p>
</blockquote>
<p>Finally, we create DataLoader objects for the training and validation datasets using the defined batch size. We use these objects to load batches of data for training and evaluation.</p>
<p><strong>Define DataLoaders</strong></p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataLoader for the training set</span></span>
<span id="cb52-2">train_dl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.train_dl(train_ds, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs, num_workers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb52-3"></span>
<span id="cb52-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a DataLoader for the validation set</span></span>
<span id="cb52-5">valid_dl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.valid_dl(valid_ds, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs, num_workers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<blockquote class="blockquote">
<p><strong>Note:</strong> Be careful when increasing the number of workers. There is a bug that significantly increases system memory usage with more workers.</p>
</blockquote>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the first mini-batch from the validation set</span></span>
<span id="cb53-2">valid_batch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> first(valid_dl)</span></code></pre></div>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Unpack the data from the first mini-batch of the validation set</span></span>
<span id="cb54-2">(valid_images, valid_labels), valid_records <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> valid_batch</span></code></pre></div>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show a mini-batch of data from the validation set</span></span>
<span id="cb55-2">model_type.show_batch(first(valid_dl), ncols<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_74_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="finetune-the-model" class="level2">
<h2 class="anchored" data-anchor-id="finetune-the-model">Finetune the Model</h2>
<p>To finetune the Mask-RCNN model, we must first instantiate the model and define metrics to track during training.</p>
<p><strong>Instantiate the model</strong></p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a Mask R-CNN model</span></span>
<span id="cb56-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.model(backbone<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>backbone, num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>parser.class_map.num_classes)</span></code></pre></div>
<p><strong>Define metrics</strong></p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a list of metrics to evaluate the model</span></span>
<span id="cb57-2">metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [COCOMetric(metric_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>COCOMetricType.mask)]</span></code></pre></div>
<p>We can then create a Learner object to find the learning rate and handle the training loop.</p>
<p><strong>Define Learner object</strong></p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a fastai learner object to train and evaluate the Mask R-CNN model</span></span>
<span id="cb58-2">learn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.fastai.learner(dls<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[train_dl, valid_dl], model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>model, metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>metrics)</span></code></pre></div>
<p><strong>Find learning rate</strong></p>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the learning rate finder to find a good learning rate for the Mask R-CNN model</span></span>
<span id="cb59-2">suggested_lrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.lr_find()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_82_3.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Define learning rate</strong></p>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb60-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the optimal learning rate identified by the learning rate finder</span></span>
<span id="cb60-2">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> suggested_lrs.valley<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb60-3">lr</span></code></pre></div>
<pre class="text"><code>    0.00039547700725961477</code></pre>
<p><strong>Define number of epochs</strong></p>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb62-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the number of epochs to train the Mask R-CNN model</span></span>
<span id="cb62-2">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span></span></code></pre></div>
<p>After defining the training parameters, we can finetune the model by training it on the training dataset and evaluating it on the validation dataset.</p>
<p><strong>Finetune model</strong></p>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train the Mask R-CNN model</span></span>
<span id="cb63-2">learn.fine_tune(epochs, lr, freeze_epochs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
epoch
</th>
<th>
train_loss
</th>
<th>
valid_loss
</th>
<th>
COCOMetric
</th>
<th>
time
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0
</td>
<td>
1.526101
</td>
<td>
1.136230
</td>
<td>
0.000000
</td>
<td>
00:05
</td>
</tr>
</tbody>

</table>
</div>
<div style="overflow-x:auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
epoch
</th>
<th>
train_loss
</th>
<th>
valid_loss
</th>
<th>
COCOMetric
</th>
<th>
time
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0
</td>
<td>
1.113099
</td>
<td>
0.948657
</td>
<td>
0.000000
</td>
<td>
00:10
</td>
</tr>
<tr>
<td>
1
</td>
<td>
0.879729
</td>
<td>
0.561887
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
2
</td>
<td>
0.661906
</td>
<td>
0.404916
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
3
</td>
<td>
0.528782
</td>
<td>
0.345191
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
4
</td>
<td>
0.464688
</td>
<td>
0.352018
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
5
</td>
<td>
0.418978
</td>
<td>
0.320372
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
6
</td>
<td>
0.376626
</td>
<td>
0.295002
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
7
</td>
<td>
0.340059
</td>
<td>
0.309611
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
8
</td>
<td>
0.316866
</td>
<td>
0.267806
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
9
</td>
<td>
0.295634
</td>
<td>
0.275406
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
10
</td>
<td>
0.282974
</td>
<td>
0.263774
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
11
</td>
<td>
0.275979
</td>
<td>
0.254877
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
12
</td>
<td>
0.266656
</td>
<td>
0.237095
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
13
</td>
<td>
0.260437
</td>
<td>
0.239515
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
14
</td>
<td>
0.245464
</td>
<td>
0.222481
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
15
</td>
<td>
0.237604
</td>
<td>
0.221115
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
16
</td>
<td>
0.233022
</td>
<td>
0.245855
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
17
</td>
<td>
0.224769
</td>
<td>
0.277205
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
18
</td>
<td>
0.214686
</td>
<td>
0.242116
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
19
</td>
<td>
0.207307
</td>
<td>
0.229408
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
20
</td>
<td>
0.202318
</td>
<td>
0.217142
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
21
</td>
<td>
0.190885
</td>
<td>
0.209915
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
22
</td>
<td>
0.190565
</td>
<td>
0.202563
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
23
</td>
<td>
0.189903
</td>
<td>
0.199876
</td>
<td>
0.000000
</td>
<td>
00:09
</td>
</tr>
<tr>
<td>
24
</td>
<td>
0.186624
</td>
<td>
0.213171
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
25
</td>
<td>
0.178527
</td>
<td>
0.207296
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
26
</td>
<td>
0.179156
</td>
<td>
0.246541
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
27
</td>
<td>
0.174455
</td>
<td>
0.186960
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
28
</td>
<td>
0.162381
</td>
<td>
0.183744
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
29
</td>
<td>
0.157665
</td>
<td>
0.181943
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
30
</td>
<td>
0.152987
</td>
<td>
0.181777
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
31
</td>
<td>
0.149362
</td>
<td>
0.163883
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
32
</td>
<td>
0.143986
</td>
<td>
0.185762
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
33
</td>
<td>
0.147537
</td>
<td>
0.170019
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
34
</td>
<td>
0.139731
</td>
<td>
0.165259
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
35
</td>
<td>
0.136252
</td>
<td>
0.166419
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
36
</td>
<td>
0.134750
</td>
<td>
0.165301
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
37
</td>
<td>
0.131968
</td>
<td>
0.157560
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
38
</td>
<td>
0.129044
</td>
<td>
0.162093
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
39
</td>
<td>
0.121755
</td>
<td>
0.159642
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
40
</td>
<td>
0.118404
</td>
<td>
0.154801
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
41
</td>
<td>
0.118744
</td>
<td>
0.157296
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
42
</td>
<td>
0.113328
</td>
<td>
0.156315
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
43
</td>
<td>
0.114840
</td>
<td>
0.153378
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
44
</td>
<td>
0.113884
</td>
<td>
0.146661
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
45
</td>
<td>
0.112758
</td>
<td>
0.162629
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
46
</td>
<td>
0.110688
</td>
<td>
0.157740
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
47
</td>
<td>
0.107804
</td>
<td>
0.156558
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
48
</td>
<td>
0.104166
</td>
<td>
0.155466
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
49
</td>
<td>
0.102735
</td>
<td>
0.159387
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
50
</td>
<td>
0.100563
</td>
<td>
0.157396
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
51
</td>
<td>
0.101158
</td>
<td>
0.151178
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
52
</td>
<td>
0.100735
</td>
<td>
0.148203
</td>
<td>
0.000000
</td>
<td>
00:08
</td>
</tr>
<tr>
<td>
53
</td>
<td>
0.098154
</td>
<td>
0.165008
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
<tr>
<td>
54
</td>
<td>
0.098391
</td>
<td>
0.163613
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
<tr>
<td>
55
</td>
<td>
0.100913
</td>
<td>
0.161389
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
<tr>
<td>
56
</td>
<td>
0.098609
</td>
<td>
0.155590
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
<tr>
<td>
57
</td>
<td>
0.098285
</td>
<td>
0.154783
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
<tr>
<td>
58
</td>
<td>
0.097906
</td>
<td>
0.156959
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
<tr>
<td>
59
</td>
<td>
0.097475
</td>
<td>
0.160197
</td>
<td>
0.000000
</td>
<td>
00:07
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>Finally, we can display the results of the finetuned model on the validation set.</p>
<p><strong>Show results on validation set</strong></p>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb64-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show the results of the predictions on the validation set</span></span>
<span id="cb64-2">model_type.show_results(model, valid_ds, detection_threshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_90_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="save-model-checkpoint" class="level2">
<h2 class="anchored" data-anchor-id="save-model-checkpoint">Save Model Checkpoint</h2>
<p>We can save the trained PyTorch model and use it to finetune the model further or perform inference using IceVision in the future.</p>
<p><strong>Define model checkpoint file path</strong></p>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define a path to save the trained model</span></span>
<span id="cb65-2">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>data_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(model)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.pth"</span></span>
<span id="cb65-3">checkpoint_path</span></code></pre></div>
<pre class="text"><code>'student-id-MaskRCNN.pth'</code></pre>
<p><strong>Save model checkpoint</strong></p>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the trained model to the specified path</span></span>
<span id="cb67-2">torch.save(model.state_dict(), checkpoint_path)</span></code></pre></div>
</section>
<section id="perform-inference-with-checkpoint" class="level2">
<h2 class="anchored" data-anchor-id="perform-inference-with-checkpoint">Perform Inference with Checkpoint</h2>
<p>We must first load the class labels and the model checkpoint to use the saved model for inference.</p>
<p><strong>Load class labels</strong></p>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb68-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the class labels file</span></span>
<span id="cb68-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"r"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> read_file:</span>
<span id="cb68-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the class labels from the file</span></span>
<span id="cb68-4">    classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.loads(read_file.read())</span>
<span id="cb68-5"></span>
<span id="cb68-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the list of class labels</span></span>
<span id="cb68-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(classes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classes'</span>])</span></code></pre></div>
<pre class="text"><code>['background', 'student_id']</code></pre>
<p><strong>Load model checkpoint</strong></p>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb70-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the model from the checkpoint file</span></span>
<span id="cb70-2">checkpoint_and_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models.model_from_checkpoint(</span>
<span id="cb70-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Path to the checkpoint file</span></span>
<span id="cb70-4">    checkpoint_path, </span>
<span id="cb70-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name of the model class</span></span>
<span id="cb70-6">    model_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'torchvision.mask_rcnn'</span>, </span>
<span id="cb70-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Name of the backbone to use for the model</span></span>
<span id="cb70-8">    backbone_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet50_fpn'</span>,</span>
<span id="cb70-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Image size for the model</span></span>
<span id="cb70-10">    img_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">512</span>, </span>
<span id="cb70-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of class labels for the model</span></span>
<span id="cb70-12">    classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>classes[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'classes'</span>],</span>
<span id="cb70-13">)</span></code></pre></div>
<p><strong>Verify class map</strong></p>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># View the class map for the model</span></span>
<span id="cb71-2">checkpoint_and_model[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"class_map"</span>]</span></code></pre></div>
<pre class="text"><code>    &lt;ClassMap: {'background': 0, 'student_id': 1}&gt;</code></pre>
<p><strong>Get model and device</strong></p>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the trained model from the dictionary</span></span>
<span id="cb73-2">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_and_model[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model"</span>]</span>
<span id="cb73-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Retrieve the inference device from the dictionary</span></span>
<span id="cb73-4">device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">next</span>(model.parameters()).device</span>
<span id="cb73-5">device</span></code></pre></div>
<pre class="text"><code>device(type='cpu')</code></pre>
<p>Then, we define the inference preprocessing steps and select a test image.</p>
<p><strong>Define inference preprocessing steps</strong></p>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the image size from the checkpoint dictionary</span></span>
<span id="cb75-2">img_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> checkpoint_and_model[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"img_size"</span>]</span>
<span id="cb75-3"></span>
<span id="cb75-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the validation transforms: resize and pad to match img_size, normalize</span></span>
<span id="cb75-5">valid_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms.A.Adapter([<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>tfms.A.resize_and_pad(img_size), tfms.A.Normalize()])</span></code></pre></div>
<p><strong>Select a test image</strong></p>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb76-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Open the 10th file in the files list</span></span>
<span id="cb76-2">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> open_img(files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>])</span>
<span id="cb76-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the test image</span></span>
<span id="cb76-4">test_img</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_106_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We create an inference DataLoader and use it to perform inference.</p>
<p><strong>Define inference dataloader</strong></p>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the inference transforms: normalize</span></span>
<span id="cb77-2">infer_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tfms.A.Adapter([tfms.A.Normalize()])</span>
<span id="cb77-3"></span>
<span id="cb77-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an inference dataset from the test image</span></span>
<span id="cb77-5">infer_ds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Dataset.from_images([test_img], infer_tfms)</span>
<span id="cb77-6"></span>
<span id="cb77-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a data loader for the inference dataset</span></span>
<span id="cb77-8">infer_dl <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.infer_dl(infer_ds, batch_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, shuffle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span></code></pre></div>
<p><strong>Perform inference</strong></p>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb78-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions on the test image using the model</span></span>
<span id="cb78-2">preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.predict_from_dl(model, infer_dl, keep_images<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span></code></pre></div>
<p>Once the inference is complete, we can inspect the source image information and the model prediction.</p>
<p><strong>Inspect source image</strong></p>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb79-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Access the ground truth information for the first prediction</span></span>
<span id="cb79-2">preds[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].ground_truth</span></code></pre></div>
<pre class="text"><code>    BaseRecord
    
    common: 
        - Record ID: 0
        - Img: 480x640x3 &lt;np.ndarray&gt; Image
        - Image size ImgSize(width=480, height=640)
    detection: 
        - Class Map: None</code></pre>
<p><strong>Inspect model prediction</strong></p>
<div class="sourceCode" id="cb81" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb81-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Access the predicted information for the first prediction</span></span>
<span id="cb81-2">preds[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].pred</span></code></pre></div>
<pre class="text"><code>    BaseRecord
    
    common: 
        - Record ID: 0
        - Img: 480x640x3 &lt;np.ndarray&gt; Image
        - Image size ImgSize(width=480, height=640)
    detection: 
        - Scores: [0.9997528 0.9996158]
        - BBoxes: [&lt;BBox (xmin:34.445037841796875, ymin:300.6217041015625, xmax:468.1103210449219, ymax:625.0744018554688)&gt;, &lt;BBox (xmin:13.5184326171875, ymin:21.899276733398438, xmax:405.33990478515625, ymax:296.6339111328125)&gt;]
        - masks: []
        - mask_array: &lt;icevision.core.mask.MaskArray object at 0x7f5115cc7280&gt;
        - Class Map: None
        - Labels: [1, 1]</code></pre>
<p>Finally, we annotate the image with the model prediction.</p>
<p><strong>Annotate image with model prediction</strong></p>
<div class="sourceCode" id="cb83" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb83-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the predictions for the test image</span></span>
<span id="cb83-2">show_preds(preds<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>preds)</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_116_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="inspect-raw-model-output" class="level2">
<h2 class="anchored" data-anchor-id="inspect-raw-model-output">Inspect Raw Model Output</h2>
<p>Next, we’ll inspect the raw model output to determine the required post-processing steps when using ONNX Runtime. We first define a method to convert a PIL Image to a normalized Pytorch Tensor.</p>
<p><strong>Define method to convert a PIL Image to a Pytorch Tensor</strong></p>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb84-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> img_to_tensor(img:PIL.Image, mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.485</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.456</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.406</span>], std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.229</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.224</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.225</span>]):</span>
<span id="cb84-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb84-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Converts a PIL image to a PyTorch tensor.</span></span>
<span id="cb84-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb84-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb84-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        img: The input PIL image.</span></span>
<span id="cb84-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        mean: The mean values for normalization.</span></span>
<span id="cb84-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        std: The standard deviation values for normalization.</span></span>
<span id="cb84-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb84-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb84-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        The normalized tensor.</span></span>
<span id="cb84-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb84-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert image to tensor</span></span>
<span id="cb84-14">    img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> torch.Tensor(np.array(img)).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb84-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale pixels values from [0,255] to [0,1]</span></span>
<span id="cb84-16">    scaled_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>().div_(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)</span>
<span id="cb84-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare normalization tensors</span></span>
<span id="cb84-18">    mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor(mean).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb84-19">    std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor(std).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb84-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize tensor    </span></span>
<span id="cb84-21">    normalized_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (scaled_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean_tensor) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> std_tensor</span>
<span id="cb84-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Batch tensor</span></span>
<span id="cb84-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> normalized_tensor.unsqueeze(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span></code></pre></div>
<p><strong>Convert image to a normalized tensor</strong></p>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb85-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the test image to a tensor</span></span>
<span id="cb85-2">input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_to_tensor(test_img)</span>
<span id="cb85-3"></span>
<span id="cb85-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the shape of the tensor</span></span>
<span id="cb85-5">input_tensor.shape</span></code></pre></div>
<pre class="text"><code>torch.Size([1, 3, 640, 480])</code></pre>
<p>Then, we’ll inspect the raw model output and benchmark PyTorch CPU inference to compare with ONNX Runtime.</p>
<p><strong>Inspect raw model output</strong></p>
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb87-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions on the test image using the model</span></span>
<span id="cb87-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb87-3">    preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model(input_tensor)</span>
<span id="cb87-4"></span>
<span id="cb87-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># display the predictions</span></span>
<span id="cb87-6">preds</span></code></pre></div>
<pre class="text"><code>    [{'boxes': tensor([[ 34.4450, 300.6217, 468.1104, 625.0743],
              [ 13.5184,  21.8993, 405.3399, 296.6339]]),
      'labels': tensor([1, 1]),
      'scores': tensor([0.9998, 0.9996]),
      'masks': tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
                [0., 0., 0.,  ..., 0., 0., 0.],
                [0., 0., 0.,  ..., 0., 0., 0.],
                ...,
                [0., 0., 0.,  ..., 0., 0., 0.],
                [0., 0., 0.,  ..., 0., 0., 0.],
                [0., 0., 0.,  ..., 0., 0., 0.]]],


​      
​              [[[0., 0., 0.,  ..., 0., 0., 0.],
​                [0., 0., 0.,  ..., 0., 0., 0.],
​                [0., 0., 0.,  ..., 0., 0., 0.],
​                ...,
​                [0., 0., 0.,  ..., 0., 0., 0.],
​                [0., 0., 0.,  ..., 0., 0., 0.],
​                [0., 0., 0.,  ..., 0., 0., 0.]]]])}]</code></pre>
<p>The model output stores predictions for bounding boxes, labels, confidence scores, and image masks in separate tensors.</p>
<p><strong>Benckmark PyTorch CPU inference</strong></p>
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb89-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>timeit</span>
<span id="cb89-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Measure the time it takes to make predictions on the input tensor</span></span>
<span id="cb89-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad(): model(input_tensor)</span></code></pre></div>
<pre class="text"><code>432 ms ± 845 µs per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
</section>
<section id="export-model-to-onnx" class="level2">
<h2 class="anchored" data-anchor-id="export-model-to-onnx">Export Model to ONNX</h2>
<p>To export the trained model to ONNX, we first need to define an ONNX file name. Then, we can use PyTorch’s built-in conversion method to export the trained model to ONNX. We can use the exported model with other applications or frameworks that support ONNX models.</p>
<p><strong>Define ONNX file name</strong></p>
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb91-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a filename for the ONNX model</span></span>
<span id="cb91-2">onnx_file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">type</span>(model)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">__name__</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.onnx"</span></span>
<span id="cb91-3"></span>
<span id="cb91-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the filename</span></span>
<span id="cb91-5">onnx_file_name</span></code></pre></div>
<pre class="text"><code>'student-id-MaskRCNN.onnx'</code></pre>
<p><strong>Export trained model to ONNX</strong></p>
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb93-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export the PyTorch model to ONNX format</span></span>
<span id="cb93-2">torch.onnx.export(model,</span>
<span id="cb93-3">                  input_tensor,</span>
<span id="cb93-4">                  onnx_file_name,</span>
<span id="cb93-5">                  export_params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb93-6">                  opset_version<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb93-7">                  do_constant_folding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb93-8">                  input_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>],</span>
<span id="cb93-9">                  output_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'boxes'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'labels'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'scores'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'masks'</span>],</span>
<span id="cb93-10">                  dynamic_axes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'width'</span>}}</span>
<span id="cb93-11">                 )</span></code></pre></div>
</section>
<section id="verify-onnx-inference" class="level2">
<h2 class="anchored" data-anchor-id="verify-onnx-inference">Verify ONNX Inference</h2>
<p>To verify ONNX inference, we first need to import ONNX Runtime.</p>
<p><strong>Import ONNX Runtime</strong></p>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb94-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Import the onnxruntime library</span></span>
<span id="cb94-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnxruntime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> ort</span></code></pre></div>
<p>Then, we can get the available ONNX Runtime <a href="https://onnxruntime.ai/docs/execution-providers/">execution providers</a> and select one to use. We did not install any additional execution providers, so only the default CPU provider is available.</p>
<p><strong>Get available ONNX Runtime execution providers</strong></p>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb95-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the list of available providers for onnxruntime</span></span>
<span id="cb95-2">available_providers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.get_available_providers()</span>
<span id="cb95-3"></span>
<span id="cb95-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the available providers</span></span>
<span id="cb95-5">available_providers</span></code></pre></div>
<pre class="text"><code>['CPUExecutionProvider']</code></pre>
<p><strong>Select execution provider</strong></p>
<div class="sourceCode" id="cb97" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb97-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the first available provider for onnxruntime</span></span>
<span id="cb97-2">providers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [available_providers[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]]</span>
<span id="cb97-3"></span>
<span id="cb97-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the selected provider</span></span>
<span id="cb97-5">providers</span></code></pre></div>
<pre class="text"><code>['CPUExecutionProvider']</code></pre>
<p>We initialize an inference session with the selected execution provider and perform inference using the ONNX model.</p>
<p><strong>Initialize inference session with selected execution provider</strong></p>
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb99-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create an inference session for the ONNX model</span></span>
<span id="cb99-2">ort_sess <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort.InferenceSession(onnx_file_name, providers<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>providers)</span></code></pre></div>
<p><strong>Perform inference using ONNX model</strong></p>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb100-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make predictions on the input tensor using the ONNX model</span></span>
<span id="cb100-2">outputs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ort_sess.run(output_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, input_feed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"input"</span>:input_tensor.numpy()})</span>
<span id="cb100-3"></span>
<span id="cb100-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the predictions</span></span>
<span id="cb100-5">outputs</span></code></pre></div>
<pre class="text"><code>    [array([[ 34.445053, 300.62167 , 468.11035 , 625.07434 ],
            [ 13.518433,  21.899261, 405.33997 , 296.6339  ]], dtype=float32),
     array([1, 1], dtype=int64),
     array([0.9997528, 0.9996158], dtype=float32),
     array([[[[0., 0., 0., ..., 0., 0., 0.],
              [0., 0., 0., ..., 0., 0., 0.],
              [0., 0., 0., ..., 0., 0., 0.],
              ...,
              [0., 0., 0., ..., 0., 0., 0.],
              [0., 0., 0., ..., 0., 0., 0.],
              [0., 0., 0., ..., 0., 0., 0.]]],


​     
​            [[[0., 0., 0., ..., 0., 0., 0.],
​              [0., 0., 0., ..., 0., 0., 0.],
​              [0., 0., 0., ..., 0., 0., 0.],
​              ...,
​              [0., 0., 0., ..., 0., 0., 0.],
​              [0., 0., 0., ..., 0., 0., 0.],
​              [0., 0., 0., ..., 0., 0., 0.]]]], dtype=float32)]</code></pre>
<p>Finally, we benchmark the ONNX Runtime CPU inference speed to measure its performance.</p>
<p><strong>Benchmark ONNX Runtime CPU inference speed</strong></p>
<div class="sourceCode" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb102-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>timeit</span>
<span id="cb102-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Measure the time it takes to make predictions on the input tensor</span></span>
<span id="cb102-3">ort_sess.run(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>, {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: input_tensor.numpy()})</span></code></pre></div>
<pre class="text"><code>320 ms ± 1.25 ms per loop (mean ± std. dev. of 7 runs, 1 loop each)</code></pre>
</section>
<section id="define-post-processing-steps" class="level2">
<h2 class="anchored" data-anchor-id="define-post-processing-steps">Define Post-processing Steps</h2>
<p>The Mask R-CNN model includes the object detection post-processing steps internally. However, there are a few extra steps to annotate the input image with the model predictions.</p>
<p>The predicted image masks have values in the range [0,1], representing shades of gray from black to white. To use them to annotate the input image, we need to binarize the masks by applying a threshold value to convert them to either 0 or 1.</p>
<p>We can convert the binarized masks to RGBA images, which allows us to paste them on top of the input image to show the predicted object locations and segmentations. That provides a visual representation of the model’s predictions.</p>
<p><strong>Define annotation values</strong></p>
<div class="sourceCode" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb104-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the mask threshold</span></span>
<span id="cb104-2">mask_threshold <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb104-3"></span>
<span id="cb104-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the mask color</span></span>
<span id="cb104-5">mask_rgba <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span></code></pre></div>
<p><strong>Annotate sample image</strong></p>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb105-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a copy of the test image</span></span>
<span id="cb105-2">annotated_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_img.copy()</span>
<span id="cb105-3"></span>
<span id="cb105-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert the image to RGBA format</span></span>
<span id="cb105-5">annotated_img.convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGBA'</span>)</span>
<span id="cb105-6"></span>
<span id="cb105-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a drawing context for the image</span></span>
<span id="cb105-8">draw <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDraw.Draw(annotated_img)</span>
<span id="cb105-9"></span>
<span id="cb105-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set the font size for the labels</span></span>
<span id="cb105-11">fnt_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span></span>
<span id="cb105-12"></span>
<span id="cb105-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate through annotations for sample image</span></span>
<span id="cb105-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])):</span>
<span id="cb105-15">    </span>
<span id="cb105-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract mask array</span></span>
<span id="cb105-17">    mask_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> outputs[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][i][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb105-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Binarize mask values</span></span>
<span id="cb105-19">    mask_array[mask_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mask_threshold] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span></span>
<span id="cb105-20">    mask_array[mask_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> mask_threshold] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span></span>
<span id="cb105-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale mask values</span></span>
<span id="cb105-22">    mask_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span>
<span id="cb105-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert mask from 1-channel to 4-channel</span></span>
<span id="cb105-24">    mask_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.tile(mask_array[:, :, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>])</span>
<span id="cb105-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update mask color</span></span>
<span id="cb105-26">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_rgba[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb105-27">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_rgba[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb105-28">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_rgba[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb105-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Update mask transparency</span></span>
<span id="cb105-30">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_rgba[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb105-31">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_rgba[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb105-32">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mask_rgba[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]</span>
<span id="cb105-33">    mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>][mask_array[:,:,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb105-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert mask array to PIL image</span></span>
<span id="cb105-35">    mask_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.fromarray(mask_array.astype(np.uint8)).convert(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RGBA'</span>)</span>
<span id="cb105-36">    </span>
<span id="cb105-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw segmentation mask on sample image</span></span>
<span id="cb105-38">    annotated_img.paste(mask_img, (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), mask<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>mask_img)</span>
<span id="cb105-39">    </span>
<span id="cb105-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw bounding box on sample image</span></span>
<span id="cb105-41">    shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][i])</span>
<span id="cb105-42">    draw.rectangle(shape, outline<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb105-43">    </span>
<span id="cb105-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw object label on sample image</span></span>
<span id="cb105-45">    fnt <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.ImageFont.truetype(font_file, fnt_size)</span>
<span id="cb105-46">    label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_map.get_classes()[outputs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][i]]</span>
<span id="cb105-47">    draw.multiline_text((shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>fnt_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>), <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>, font<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fnt, fill<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>)</span>
<span id="cb105-48">    </span>
<span id="cb105-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print the size of the annotated image</span></span>
<span id="cb105-50"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(annotated_img.size)</span>
<span id="cb105-51"></span>
<span id="cb105-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display the annotated image</span></span>
<span id="cb105-53">annotated_img</span></code></pre></div>
<pre class="text"><code>(480, 640)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/output_144_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>This tutorial demonstrated how to train a Mask R-CNN model on a custom dataset using the IceVision library. We showed how to create a custom dataset parser, train the model, and evaluate its performance. Additionally, we explained how to export the trained model to the ONNX format and perform inference using ONNX Runtime. You can follow the steps outlined in this tutorial to train a Mask R-CNN model on your custom dataset and use it for multiple applications.</p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/icevision-mask-rcnn-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>icevision</category>
  <category>mask-rcnn</category>
  <category>object-detection</category>
  <category>instance-segmentation</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/index.html</guid>
  <pubDate>Fri, 02 Dec 2022 08:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/posts/icevision-mask-rcnn-tutorial/part-1/images/student-id-sample-annotation.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Testing Intel’s Arc A770 GPU for Deep Learning Pt. 1</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/arc-a770-testing/part-1/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>OpenVINO Inference</li>
<li>ONNX-DirectML Inference</li>
<li>PyTorch-DirectML Training</li>
</ul>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>Last week, I received an Arc A770 GPU from Intel as part of their Graphics Innovator program. I am primarily interested in the card for its deep-learning performance, so I tested it with some of my tutorial projects and attempted to train some models using the <a href="https://pypi.org/project/pytorch-directml/">pytorch-directml</a> package.</p>
<p><strong>Desktop Specs:</strong></p>
<table class="table">
<thead>
<tr class="header">
<th>OS</th>
<th>CPU</th>
<th>Memory</th>
<th>GPU Driver</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Windows 10 Pro 21H2</td>
<td>i7-11700K</td>
<td>32 GB DDR4 3000MHz</td>
<td><a href="https://www.intel.com/content/www/us/en/download/726609/intel-arc-graphics-windows-dch-driver.html">31.0.101.3490</a></td>
</tr>
</tbody>
</table>
<p><strong>Library Versions:</strong></p>
<table class="table">
<thead>
<tr class="header">
<th>OpenVINO</th>
<th>ONNX-DirectML</th>
<th>pytorch-directml</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html">2022.1 and 2022.2</a></td>
<td><a href="https://www.nuget.org/packages/Microsoft.ML.OnnxRuntime.DirectML/1.12.1">1.12.1</a></td>
<td><a href="https://pypi.org/project/pytorch-directml/">1.8.0a0.dev220506</a></td>
</tr>
</tbody>
</table>
</section>
<section id="openvino-inference" class="level2">
<h2 class="anchored" data-anchor-id="openvino-inference">OpenVINO Inference</h2>
<p>I first tested the card’s performance in the Unity project from my <a href="../../icevision-openvino-unity-tutorial/part-1/">End-to-End Object Detection for Unity With IceVision and OpenVINO</a> tutorial. The project uses OpenVINO 2022.1, and I noticed an odd sensitivity to input resolution when using FP16 precision.</p>
<p>I use a default resolution of 398x224 (for a 16:9 aspect ratio), which translates to a 384x224 (divisible by 32) input resolution for the YOLOX tiny model. At this resolution, the model detects the same hand gestures with the Arc card as the CPU. However, the confidence scores are much lower, and the bounding box dimensions are slightly different (but still usable).</p>
<section id="cpu-fp16" class="level5">
<h5 class="anchored" data-anchor-id="cpu-fp16"><strong>CPU (FP16)</strong></h5>
<ul>
<li><strong>Objects Detected:</strong> Call 78.54%, No Gesture 83.2%</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/arc-a770-testing/part-1/images/cpu_unity-openvino-yolox_384x224.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="a770-fp16" class="level5">
<h5 class="anchored" data-anchor-id="a770-fp16"><strong>A770 (FP16)</strong></h5>
<ul>
<li><strong>Objects Detected:</strong> Call 23.25%, No Gesture 40.86%</li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/arc-a770-testing/part-1/images/arc_a770_unity-openvino-yolox_384x224.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Moving to a higher resolution brought inconsistent improvements in accuracy and occasional crashes. The below sample is with an input resolution of <code>896x512</code> at FP16 precision.</p>
<p><strong>Objects Detected:</strong> Call 78.06%</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/arc-a770-testing/part-1/images/arc_a770_unity-openvino-yolox_896x512.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>I later updated OpenVINO to the recent 2022.2 release, which resolved this issue.</p>
<p><strong>Objects Detected:</strong> Call 78.55%, No Gesture 83.23%</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/arc-a770-testing/part-1/images/arc_a770_unity-openvino-2022-2-yolox_384x224.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="onnx-directml-inference" class="level2">
<h2 class="anchored" data-anchor-id="onnx-directml-inference">ONNX-DirectML Inference</h2>
<p>I used the project from my <a href="../../onnx-directml-unity-tutorial/part-1/">Object Detection for Unity With ONNX Runtime and DirectML</a> tutorial to compare the inference speeds between the A770 and my Titan RTX. This project uses the same YOLOX tiny model and input resolution as the OpenVINO one but in FP32 precision.</p>
<p>The Titan RTX, essentially a 2080 Ti, hit around 145fps, while the A770 hovered around 120fps.</p>
<section id="a770" class="level5">
<h5 class="anchored" data-anchor-id="a770"><strong>A770</strong></h5>
<p><strong>Objects Detected:</strong> Call 78.64%, No Gesture 83.35%</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/arc-a770-testing/part-1/images/arc_a770_unity-onnx-directml-yolox_384x224.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
</section>
<section id="pytorch-directml-training" class="level2">
<h2 class="anchored" data-anchor-id="pytorch-directml-training">PyTorch-DirectML Training</h2>
<p>As far as I know, the only way to train models at the time of writing on an Arc card is with the <a href="https://pypi.org/project/pytorch-directml/">pytorch-directml</a> package (or <a href="https://pypi.org/project/tensorflow-directml/">tensorflow-directml</a> package).</p>
<p>To test this, I set up a conda environment in <a href="https://learn.microsoft.com/en-us/windows/wsl/about">WSL</a> with the pytorch-directml package and downloaded the <a href="https://github.com/microsoft/DirectML/tree/master/PyTorch">sample repo</a> provided by Microsoft. The pytorch-directml package requires python 3.8, and the sample repo uses torchvision 0.9.0.</p>
<p>I successfully trained a ResNet50 model on <a href="https://www.cs.toronto.edu/~kriz/cifar.html">CIFAR-10</a> with the sample training script. GPU memory usage was volatile when using a batch size higher than 4. The ResNet50 training script used less than 3.6 GB of GPU memory at a batch size of 4.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/arc-a770-testing/part-1/images/arc_a770_pytorch-dml-resnet50-resource-usage-bs-4.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>However, it spikes to using all 16 GB at a batch size of 8 and crashes the script. I was able to train at a batch size of 6, but barely.</p>
<p>I then attempted to train the style transfer model included with the <a href="https://github.com/pytorch/examples">pytorch examples repo</a> and hit the wall of unimplemented operators. Here is the <a href="https://github.com/microsoft/DirectML/wiki/PyTorch-DirectML-Operator-Roadmap">PyTorch DirectML Operator Roadmap</a>. Some of the missing operators are on the current roadmap, but not all of them.</p>
<p>The tensorflow-directml package recently received its first update since May, so hopefully, the PyTorch version will receive an update soon. I have no idea when the main PyTorch and TensorFlow libraries will gain support for Intel GPUs, but hopefully, that is not too far off either.</p>


</section>

 ]]></description>
  <category>directml</category>
  <category>openvino</category>
  <category>pytorch</category>
  <category>unity</category>
  <guid>christianjmills.com/posts/arc-a770-testing/part-1/index.html</guid>
  <pubDate>Tue, 18 Oct 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Using TensorFlow.js for In-Browser Object Detection in Unity</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/tfjs-yolox-unity-tutorial/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Convert Model to TFJS</li>
<li>Import Assets</li>
<li>Update JavaScript Utility File</li>
<li>Update jslib Plugin</li>
<li>Import Plugin Functions</li>
<li>Create Object Detector Script</li>
<li>Update Unity Scene</li>
<li>Test in Browser</li>
<li>Summary</li>
</ul>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>This follow-up post shows you how to modify an existing Unity project from a <a href="http://../tensorflow-js-unity-tutorial/part-1/">previous tutorial</a> to use <a href="https://www.tensorflow.org/js">TensorFlow.js</a> for in-browser object detection. We will begin by converting a pre-existing model to the TensorFlow.js format and importing it into <a href="https://unity.com/">Unity</a>. Next, we will update the JavaScript utility file and the jslib plugin from the original project. After setting up the plugin, we will create a script to implement the object detector in Unity and update our scene to use it. Finally, we will test the project in-browser to ensure it works properly.</p>
<p><strong>In-Browser Demo:</strong> <a href="https://cj-mills.github.io/hand-gesture-detector-webgl-demo/">Hand Gesture Detector</a></p>
<p><strong>Project Resources</strong></p>
<ul>
<li><a href="https://github.com/cj-mills/tfjs-yolox-unity-tutorial">GitHub Repository</a>: The final Unity project for this tutorial.</li>
<li><a href="https://drive.google.com/drive/folders/1sTU5fiG6mmq19fWzpmptBNJNN4qhN_yi?usp=sharing">Colormaps</a>: A JSON colormap file that maps each object class to a distinct color.</li>
<li><a href="https://drive.google.com/drive/folders/1kuSyQcW032Is1o1a3n8w9LGzdL_d44aC?usp=sharing">TFJSModels</a>: A YOLOX model in TensorFlow.js format.</li>
<li><a href="../tensorflow-js-unity-tutorial/part-1/">In-Browser Hand Gesture Recognition for Unity with Fastai and TensorFlow.js</a>: The previous tutorial.</li>
</ul>
</section>
<section id="convert-model-to-tfjs" class="level2">
<h2 class="anchored" data-anchor-id="convert-model-to-tfjs">Convert Model to TFJS</h2>
<p>We first need a YOLOX model in TensorFlow.js format. We can use the <a href="../tensorflow-js-unity-tutorial/part-1/#export-the-model">same steps</a> from the original tutorial to convert the YOLOX model from a <a href="../icevision-openvino-unity-tutorial/part-1/">previous tutorial</a>. The YOLOX model detects the same hand gestures as the image classifier from the original tutorial.</p>
<p>A link to the model conversion notebook is below, along with links for running the notebook on <a href="https://colab.research.google.com/?utm_source=scs-index">Google Colab</a> and <a href="https://www.kaggle.com/docs/notebooks">Kaggle</a>.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Colab</th>
<th>Kaggle</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/tfjs-yolox-unity-tutorial/blob/main/notebooks/ONNX-to-TF-to-TFJS.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/tfjs-yolox-unity-tutorial/blob/main/notebooks/ONNX-to-TF-to-TFJS-Colab.ipynb">Open In Colab</a></td>
<td><a href="https://kaggle.com/kernels/welcome?src=https://github.com/cj-mills/tfjs-yolox-unity-tutorial/blob/main/notebooks/ONNX-to-TF-to-TFJS-Kaggle.ipynb">Open in Kaggle</a></td>
</tr>
</tbody>
</table>
</section>
<section id="import-assets" class="level2">
<h2 class="anchored" data-anchor-id="import-assets">Import Assets</h2>
<p>Open the Unity project from the original tutorial in the Unity Editor. Alternatively, you can create a copy of the project and rename it to something more appropriate. We will first import the colormap and TensorFlow.js model into the <code>Assets</code> folder.</p>
<p><strong>Import color map</strong></p>
<p>We’ll store the colormap JSON file in a new folder called <code>Colormaps</code>. Drag and drop the JSON colormap file from the operating system’s file explorer into the <code>Colormaps</code> folder.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/drive/folders/1sTU5fiG6mmq19fWzpmptBNJNN4qhN_yi?usp=sharing">Colormaps</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-import-colormaps.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Import TFJS model</strong></p>
<p>We need to replace the existing TensorFlow.js models in the <code>StreamingAssets</code> folder with the YOLOX model.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/drive/folders/1kuSyQcW032Is1o1a3n8w9LGzdL_d44aC?usp=sharing">TFJSModels</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-update-tfjs-models-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="update-javascript-utility-file" class="level2">
<h2 class="anchored" data-anchor-id="update-javascript-utility-file">Update JavaScript Utility File</h2>
<p>We’ll update the function in the utils.js file in the <code>StreamingAssets</code> folder to return the raw model output.</p>
<p><strong>Update function to perform inference asynchronously with YOLOX model</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference with the provided model and input data</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInferenceAsync</span>(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> float32Data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shape) {</span>
<span id="cb1-3"></span>
<span id="cb1-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> outputData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb1-5">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tensor</span>(float32Data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float32'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-6">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make a prediction.</span></span>
<span id="cb1-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(input_tensor)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-8">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> outputData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">}</span></code></pre></div>
</section>
<section id="update-jslib-plugin" class="level2">
<h2 class="anchored" data-anchor-id="update-jslib-plugin">Update jslib Plugin</h2>
<p>We also need to make a few updates to the <code>WebGLPlugin.jslib</code> file.</p>
<p><strong>Update function to Initialize TFJS model</strong></p>
<p>We’ll update the <code>InitTFJSModel</code> function to take the path to the YOLOX <code>model.json</code> file and the normalization stats to the plugin.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load a TFJS YOLOX model</span></span>
<span id="cb2-2">InitTFJSModel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> (model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> std_dev) {</span>
<span id="cb2-3"></span>
<span id="cb2-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert bytes to the text</span></span>
<span id="cb2-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> model_path_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UTF8ToString</span>(model_path)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the TensorFlow.js model at the provided file path</span></span>
<span id="cb2-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadGraphModel</span>(model_path_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fromTFHub</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span> })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8"></span>
<span id="cb2-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check the model input shape</span></span>
<span id="cb2-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputs</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Input Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>input_shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store normalization stats</span></span>
<span id="cb2-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Float32Array</span>(buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">std_dev</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Float32Array</span>(buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> std_dev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-16">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p><strong>Define function to update output array</strong></p>
<p>The size of the raw model output depends on the input resolution. That means we need to update the output array each time we update the input resolution.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the array which stores the raw model output</span></span>
<span id="cb3-2">UpdateOutputArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> (array_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size) {</span>
<span id="cb3-3">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">delete</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_array</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Float32Array</span>(buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> array_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-5">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`New output size JS: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p><strong>Update inference function for YOLOX model</strong></p>
<p>Lastly, we need to update the <code>PerformInference</code> function to normalize the input data and fill the shared output array with the raw model output.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference with the provided image data</span></span>
<span id="cb4-2">PerformInference<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> (image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height) {</span>
<span id="cb4-3"></span>
<span id="cb4-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only perform inference after loading a model</span></span>
<span id="cb4-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typeof</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'undefined'</span>) {</span>
<span id="cb4-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model not defined yet"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-8">    }</span>
<span id="cb4-9"></span>
<span id="cb4-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize an array with the raw image data</span></span>
<span id="cb4-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> uintArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Uint8ClampedArray</span>(buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Channels-last order</span></span>
<span id="cb4-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> [input_array] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span>())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-15"></span>
<span id="cb4-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip input image from Unity</span></span>
<span id="cb4-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>) {</span>
<span id="cb4-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uintArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> slice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb4-20">            input_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(((slice[col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">std_dev</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-21">            input_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(((slice[col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">std_dev</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-22">            input_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(((slice[col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">std_dev</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-23">        }</span>
<span id="cb4-24">    }</span>
<span id="cb4-25"></span>
<span id="cb4-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input array with the preprocessed input data</span></span>
<span id="cb4-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> float32Data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Float32Array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span>(input_array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-29"></span>
<span id="cb4-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass preprocessed input to the model</span></span>
<span id="cb4-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInferenceAsync</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> float32Data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shape)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(output <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb4-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (output_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span>) {</span>
<span id="cb4-33">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set</span>(output)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-34">        }</span>
<span id="cb4-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> {</span>
<span id="cb4-36">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Model output size JS: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-37">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fill</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-38">        }</span>
<span id="cb4-39">    })</span>
<span id="cb4-40">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-41">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p>That’s it for the changes to the plugin code. Next, we need to update the script where we import the functions in Unity.</p>
</section>
<section id="import-plugin-functions" class="level2">
<h2 class="anchored" data-anchor-id="import-plugin-functions">Import Plugin Functions</h2>
<p>We need to update the import line for <code>InitTFJSModel</code> and import the new <code>UpdateOutputArray</code> function in the <code>WebGLPlugin.cs</code> script.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InteropServices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-2"></span>
<span id="cb5-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Class with JavaScript plugin functions for WebGL.</span></span>
<span id="cb5-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> WebGLPlugin</span>
<span id="cb5-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "GetExternalJS" plugin function</span></span>
<span id="cb5-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetExternalJS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb5-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "SetTFJSBackend" plugin function</span></span>
<span id="cb5-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb5-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> backend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "InitTFJSModel" plugin function</span></span>
<span id="cb5-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb5-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "UpdateOutputArray" plugin function</span></span>
<span id="cb5-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb5-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateOutputArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> output_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "PerformInference" plugin function</span></span>
<span id="cb5-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb5-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>Changing the import line for <code>InitTFJSModel</code> will cause an error in the <code>ImageClassifier</code> script, but we will resolve this in the next section.</p>
</section>
<section id="create-object-detector-script" class="level2">
<h2 class="anchored" data-anchor-id="create-object-detector-script">Create Object Detector Script</h2>
<p>We’ll replace the <code>ImageClassifier</code> script from the original tutorial with a new script called <code>ObjectDetector</code>. It will handle getting input images, sending them to the model, processing the model output, and drawing bounding boxes around detected objects. Delete the existing <code>ImageClassifier</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/create-object-detector-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Add required namespaces</strong></p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system?view=net-5.0">System</a>: Contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.UI.html">UnityEngine.UI</a>: Provides access to UI elements.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.render-pipelines.core@5.9/api/UnityEngine.Rendering.html">UnityEngine.Rendering</a>: Provides access to the elements of the rendering pipeline.</li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.io?view=net-7.0">System.IO</a>: Contains types that allow reading and writing to files and data streams, and types that provide basic file and directory support.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.multiplayer-hlapi@1.0/api/UnityEngine.Networking.html">UnityEngine.Networking</a>: Provides access to the <a href="https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.html">UnityWebRequest</a> module to communicate with http services.</li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.linq?view=net-7.0">System.Linq</a>: Provides classes and interfaces that support queries that use Language-Integrated Query (LINQ).</li>
</ul>
<hr>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Networking</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Linq</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Add code to create a list of available TFJS models</strong></p>
<p>We can use the <a href="../tensorflow-js-unity-tutorial/part-2/#create-image-classifier-script">same code</a> to create a list of available TFJS models used in the <code>ImageClassifier</code> script. This code will go right below the namespaces.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Startup</span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class that stores the name and file path for a TensorFlow.js model</span></span>
<span id="cb7-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelData</span>
<span id="cb7-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-13"></span>
<span id="cb7-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-16">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-17">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-20"></span>
<span id="cb7-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class that stores a list of TensorFlow.js model names and file paths</span></span>
<span id="cb7-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb7-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelList</span>
<span id="cb7-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-26"></span>
<span id="cb7-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-29">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">models</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-30">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-32"></span>
<span id="cb7-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Startup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-35">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> tfjsModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFJSModels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-36">        List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb7-37"></span>
<span id="cb7-38">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Available models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for each model folder</span></span>
<span id="cb7-40">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dir <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/{tfjsModelsDir}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb7-41">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-42">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dirStr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-43">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the model folder name</span></span>
<span id="cb7-44">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> splits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dirStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-45">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-46"></span>
<span id="cb7-47">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for the model.json file for each model</span></span>
<span id="cb7-48">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dirStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb7-49">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-50">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">EndsWith</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model.json"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb7-51">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-52">                    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> fileStr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">streamingAssetsPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-53">                    models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> fileStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb7-54">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-55">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-56">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-57"></span>
<span id="cb7-58">        ModelList modelList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Format the list of available models as a string in JSON format</span></span>
<span id="cb7-60">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-61">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model List JSON: {json}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Write the list of available TensorFlow.js models to a JSON file</span></span>
<span id="cb7-63">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> StreamWriter writer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StreamWriter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/models.json"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-64">        writer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Write</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-65">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-66"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span></code></pre></div>
<section id="define-public-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-public-variables">Define public variables</h3>
<p>The required public variables are mostly the same as the <a href="../tensorflow-js-unity-tutorial/part-2/#define-public-variables"><code>ImageClassifier</code> script</a>.</p>
<p><strong>Define scene object variables</strong></p>
<p>We’ll add a new variable to indicate whether to mirror the in-scene screen.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scene Objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Screen object for the scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Transform screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mirror the in-game screen."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define data processing variables</strong></p>
<p>We’ll increase the default target input resolution from <code>216</code> to <code>224</code>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The target minimum model input dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define output processing variables</strong></p>
<p>We’ll replace the <code>classLabels</code> <a href="https://docs.unity3d.com/ScriptReference/TextAsset.html">TextAsset</a> with a variable for the colormap JSON file.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A json file containing the colormaps for object classes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> TextAsset colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum confidence score for keeping predictions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for debugging (unchanged)</strong></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debugging"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Print debugging messages to the console"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> printDebugMessages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define webcam variables (unchanged)</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Use a webcam as input"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2Int webcamDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1280</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam framerate"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> webcamFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for user interface</strong></p>
<p>We’ll replace the <code>displayPredictedClass</code> GUI variable with two new variables that control displaying bounding boxes and the number of detected objects.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GUI"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display predicted class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayBoundingBoxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display number of detected objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayProposalCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display fps"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The on-screen text color"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Color textColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yellow</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The scale value for the on-screen font size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fontScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The number of seconds to wait between refreshing the fps value"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsRefreshRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The toggle for using a webcam as the input source"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Toggle useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available webcam devices"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available TFJS models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available TFJS backends"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define TensorFlow.js variables (unchanged)</strong></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb14-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the TFJS models folder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> tfjsModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFJSModels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="define-private-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-private-variables">Define private variables</h3>
<p>We’ll add the required private variables right below the public variables.</p>
<p><strong>Define private webcam variables (unchanged)</strong></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of available webcam devices</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Live video input from a webcam</span></span>
<span id="cb15-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamTexture webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the current webcam  device</span></span>
<span id="cb15-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define input variables (unchanged)</strong></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image dimensions</span></span>
<span id="cb16-2">Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image texture</span></span>
<span id="cb16-4">Texture imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current screen object dimensions</span></span>
<span id="cb16-6">Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model GPU input texture</span></span>
<span id="cb16-8">RenderTexture inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model CPU input texture</span></span>
<span id="cb16-10">Texture2D inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for colormap</strong></p>
<p>We’ll create a couple of classes to parse the JSON colormap content.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for parsing in colormaps from a JSON file</span></span>
<span id="cb17-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColorMap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for reading in a list of colormaps from a JSON file</span></span>
<span id="cb17-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb17-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColorMapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColorMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores a list of colormaps from a JSON file</span></span>
<span id="cb17-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ColorMapList colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of colors that map to class labels</span></span>
<span id="cb17-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of single pixel textures that map to class labels</span></span>
<span id="cb17-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variable to track whether a model is initialized (unchanged)</strong></p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores whether the TensorFlow.js model is ready for inference</span></span>
<span id="cb18-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> modelInitialized<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for tracking the framerate (unchanged)</strong></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current frame rate value</span></span>
<span id="cb19-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Controls when the frame rate value updates</span></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables to store values for GUI dropdowns (unchanged)</strong></p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// File paths for the available TFJS models</span></span>
<span id="cb20-2">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelPaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available TFJS models</span></span>
<span id="cb20-4">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available TFJS backends</span></span>
<span id="cb20-6">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tfjsBackends <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"webgl"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<p><strong>Define variables for reading the <code>models.json</code> file (unchanged)</strong></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class to store the name and file path of a TensorFlow.js model</span></span>
<span id="cb21-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb21-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class to store a read a list of available TensorFlow.js models from a JSON file</span></span>
<span id="cb21-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb21-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define variables for normalization stats</strong></p>
<p>The YOLOX model uses the standard ImageNet normalization stats from PyTorch.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The normalization stats for the YOLOX model</span></span>
<span id="cb22-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.485f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.456f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.406f</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb22-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.229f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.224f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.225f</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<p><strong>Define struct to store information for object predictions</strong></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb23-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Stores the information for a single object</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb23-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Object</span>
<span id="cb23-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The X coordinate for the top left bounding box corner</span></span>
<span id="cb23-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The Y coordinate for the top left bounding box cornder</span></span>
<span id="cb23-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The width of the bounding box</span></span>
<span id="cb23-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The height of the bounding box</span></span>
<span id="cb23-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The object class index for the detected object</span></span>
<span id="cb23-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model confidence score for the object</span></span>
<span id="cb23-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-18"></span>
<span id="cb23-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb23-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-22">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define struct to store grid offset and stride values</strong></p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store grid offset and stride values to decode a section of the model output</span></span>
<span id="cb24-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> GridAndStride</span>
<span id="cb24-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-6">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-7"></span>
<span id="cb24-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GridAndStride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb24-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid1</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb24-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define variables for processing model output</strong></p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores information for the current list of detected objects</span></span>
<span id="cb25-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the grid and stride values to navigate the raw model output</span></span>
<span id="cb25-4">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> grid_strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb25-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The stride values used to generate the gride_strides vector</span></span>
<span id="cb25-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the raw model output</span></span>
<span id="cb25-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> output_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The scale values used to adjust the model output to the source image resolution</span></span>
<span id="cb25-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb25-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the number of detected objects</span></span>
<span id="cb25-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="define-initialization-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-initialization-methods">Define Initialization Methods</h3>
<p>The initialization methods are identical to those from the <code>ImageClassifier</code> script except for <code>UpdateTFJSModel</code>.</p>
<p><strong>Define method to initialize a webcam device (unchanged)</strong></p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the selected webcam device</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"deviceName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the selected webcam device</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb26-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop any webcams already playing</span></span>
<span id="cb26-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-9"></span>
<span id="cb26-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new WebCamTexture</span></span>
<span id="cb26-11">    webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebCamTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-12"></span>
<span id="cb26-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start the webcam</span></span>
<span id="cb26-14">    webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Play</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if webcam is playing</span></span>
<span id="cb26-16">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update toggle value</span></span>
<span id="cb26-18">    useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetIsOnWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-19"></span>
<span id="cb26-20">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam is playing"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam not playing, option disabled"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene screen object (unchanged)</strong></p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb27-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position an in-scene screen object</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb27-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb27-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the texture for the screen object</span></span>
<span id="cb27-7">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the screen dimensions</span></span>
<span id="cb27-9">    screenDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-10"></span>
<span id="cb27-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the screen around the Y-Axis when using webcam</span></span>
<span id="cb27-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> yRotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> 180f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the scale value for the Z-Axis when using webcam</span></span>
<span id="cb27-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> zScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-15"></span>
<span id="cb27-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set screen rotation</span></span>
<span id="cb27-17">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Quaternion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Euler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> yRotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen dimensions</span></span>
<span id="cb27-19">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> zScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-20"></span>
<span id="cb27-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen position</span></span>
<span id="cb27-22">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to switch TensorFlow.js models</strong></p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb28-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load a TensorFlow.js model</span></span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb28-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb28-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load TensorFlow.js model in JavaScript plugin</span></span>
<span id="cb28-7">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> std<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to read the list of available TensorFlow.js models (unchanged)</strong></p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb29-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the names and paths of the available TensorFlow.js models</span></span>
<span id="cb29-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"json"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb29-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTFJSModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-7">    ModelList modelList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModelData model <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> modelList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">models</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//Debug.Log($"{model.name}: {model.path}");</span></span>
<span id="cb29-11">        modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}{model.path}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-13">        modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb29-16">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add TFJS model names to menu</span></span>
<span id="cb29-18">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb29-20">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to download the list of available TensorFlow.js models (unchanged)</strong></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Download the JSON file with the available TFJS model information</span></span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"uri"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb30-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb30-6">IEnumerator <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRequest</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> uri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UnityWebRequest webRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Get</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb30-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Request and wait for the desired page.</span></span>
<span id="cb30-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SendWebRequest</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-12"></span>
<span id="cb30-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> pages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-15"></span>
<span id="cb30-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">switch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-18">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ConnectionError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-19">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DataProcessingError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-20">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": Error: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-21">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-22">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProtocolError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-23">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": HTTP Error: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-24">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-25">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-26">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Received: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-27"></span>
<span id="cb30-28">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the available model names and file paths from the JSON string</span></span>
<span id="cb30-29">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTFJSModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-30">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize one of the available TensorFlow.js models</span></span>
<span id="cb30-31">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-32">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-33">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize GUI dropdown menu options (unchanged)</strong></p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the GUI dropdown list</span></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb31-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb31-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create list of webcam device names</span></span>
<span id="cb31-7">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> webcamNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb31-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-9"></span>
<span id="cb31-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb31-11">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add webcam device names to dropdown menu</span></span>
<span id="cb31-13">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the dropdown to the current webcam device</span></span>
<span id="cb31-15">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IndexOf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb31-16"></span>
<span id="cb31-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the available TensorFlow.js models</span></span>
<span id="cb31-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelListPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/models.json"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StartCoroutine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRequest</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelListPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb31-20"></span>
<span id="cb31-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb31-22">    backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add TFJS backend names to menu</span></span>
<span id="cb31-24">    backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tfjsBackends<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb31-26">    backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene camera object (unchanged)</strong></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position the main camera based on an in-scene screen object</span></span>
<span id="cb32-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of an in-scene screen object</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb32-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> cameraName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main Camera"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get a reference to the Main Camera GameObject</span></span>
<span id="cb32-8">    GameObject camera <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cameraName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera position to account for updates to the screenDims</span></span>
<span id="cb32-10">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>10f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render objects with no perspective (i.e. 2D)</span></span>
<span id="cb32-12">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographic</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera size to account for updates to the screenDims</span></span>
<span id="cb32-14">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographicSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-awake-method-unchanged" class="level3">
<h3 class="anchored" data-anchor-id="define-awake-method-unchanged">Define Awake method (unchanged)</h3>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Awake is called when the script instance is being loaded</span></span>
<span id="cb33-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Awake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb33-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-4">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetExternalJS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb33-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-start-method" class="level3">
<h3 class="anchored" data-anchor-id="define-start-method">Define Start method</h3>
<p>In the Start method, we need to initialize the color map variables with the JSON file.</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb34-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb34-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image texture</span></span>
<span id="cb34-5">    imageTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image dimensions as a Vector2Int</span></span>
<span id="cb34-7">    imageDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-8"></span>
<span id="cb34-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of available webcam devices</span></span>
<span id="cb34-10">    webcamDevices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebCamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-12">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-13">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam</span></span>
<span id="cb34-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-16"></span>
<span id="cb34-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb34-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb34-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-21"></span>
<span id="cb34-22"></span>
<span id="cb34-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of color maps from JSON file</span></span>
<span id="cb34-24">    colormapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColorMapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of colors</span></span>
<span id="cb34-26">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of color textures</span></span>
<span id="cb34-28">    colorTextures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-29"></span>
<span id="cb34-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Populate the color and color texture arrays</span></span>
<span id="cb34-31">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb34-32">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new color object</span></span>
<span id="cb34-34">        colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb34-35">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb34-36">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb34-37">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb34-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a single-pixel texture</span></span>
<span id="cb34-39">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-40">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetPixel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb34-41">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-42"></span>
<span id="cb34-43">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-44"></span>
<span id="cb34-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the webcam dropdown list</span></span>
<span id="cb34-46">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-47"></span>
<span id="cb34-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the current TensorFlow.js compute backend</span></span>
<span id="cb34-49">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tfjsBackends<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb34-50"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-processing-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-processing-methods">Define Processing Methods</h3>
<p>The preprocessing methods are identical to those from the <code>ImageClassifier</code> script. However, we need to add some post-processing methods to extract object predictions from the raw model output.</p>
<p><strong>Define method to calculate input resolution (unchanged)</strong></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb35-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the source image resolution to the target input dimensions</span></span>
<span id="cb35-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// while maintaing the source aspect ratio.</span></span>
<span id="cb35-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb35-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"imageDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb35-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"targetDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb35-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb35-8">Vector2Int <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clamp the minimum dimension value to 64px</span></span>
<span id="cb35-11">    targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-12"></span>
<span id="cb35-13">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-14"></span>
<span id="cb35-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the input dimensions using the target minimum dimension</span></span>
<span id="cb35-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-18">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb35-19">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb35-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-23">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-24">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb35-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-26"></span>
<span id="cb35-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to scale bounding boxes to the display resolution</strong></p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb36-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the latest bounding boxes to the display resolution</span></span>
<span id="cb36-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb36-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb36-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Process new detected objects</span></span>
<span id="cb36-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb36-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest dimension of the screen</span></span>
<span id="cb36-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest input dimension</span></span>
<span id="cb36-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> minInputDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and input dimensions</span></span>
<span id="cb36-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minImgScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> minInputDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and display</span></span>
<span id="cb36-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-17"></span>
<span id="cb36-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box to in-game screen resolution and flip the bbox coordinates vertically</span></span>
<span id="cb36-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-23"></span>
<span id="cb36-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mirror bounding box across screen</span></span>
<span id="cb36-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-26">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-27">            x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-29"></span>
<span id="cb36-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding boxes to display resolution</span></span>
<span id="cb36-31">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-32">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-33">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-34">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-35"></span>
<span id="cb36-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Offset the bounding box coordinates based on the difference between the in-game screen and display</span></span>
<span id="cb36-37">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-38">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-39"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to generate stride values to navigate the raw model output</strong></p>
<p>We’ll generate offset values based on the input dimensions and stride values, which we can use to traverse the output array.</p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb37-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generate offset values to navigate the raw model output</span></span>
<span id="cb37-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb37-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"height"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The model input height</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb37-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"width"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The model input width</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb37-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb37-7">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateGridStrides</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb37-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-9">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> grid_strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb37-10"></span>
<span id="cb37-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through each stride value</span></span>
<span id="cb37-12">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb37-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the grid dimensions</span></span>
<span id="cb37-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-17"></span>
<span id="cb37-18">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gride: {grid_height} x {grid_width}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb37-19"></span>
<span id="cb37-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store each combination of grid coordinates</span></span>
<span id="cb37-21">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb37-22">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-23"></span>
<span id="cb37-24">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb37-25">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-26">                grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GridAndStride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb37-27">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb37-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb37-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb37-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to generate object detection proposals from the raw model output</strong></p>
<p>Next, we define a method to iterate through the output array and decode the bounding box information for each object proposal. We only want to keep the ones with a high enough confidence score. The model predicts the center coordinates of a bounding box, but we store the coordinates for the top-left corner as we use this to draw the rectangles on the screen.</p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generate object detection proposals from the raw model output</span></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model_output"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The raw model output</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb38-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"proposal_length"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The length of a single proposal</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb38-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb38-7">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateYOLOXProposals</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> proposal_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb38-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-9">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb38-10"></span>
<span id="cb38-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Obtain the number of classes the model was trained to detect</span></span>
<span id="cb38-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposal_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-13"></span>
<span id="cb38-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb38-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the current grid and stride values</span></span>
<span id="cb38-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> grid0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> grid1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grid1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stride</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-20"></span>
<span id="cb38-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the starting index for the current proposal</span></span>
<span id="cb38-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposal_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-23"></span>
<span id="cb38-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the coordinates for the center of the predicted bounding box</span></span>
<span id="cb38-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-26">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> y_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-27"></span>
<span id="cb38-28">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the dimensions for the predicted bounding box</span></span>
<span id="cb38-29">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-30">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-31"></span>
<span id="cb38-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the coordinates for the upper left corner of the bounding box</span></span>
<span id="cb38-33">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-34">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-35"></span>
<span id="cb38-36">        x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-37">        y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-38">        w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-39">        h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/=</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-40"></span>
<span id="cb38-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the confidence score that an object is present</span></span>
<span id="cb38-42">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-43"></span>
<span id="cb38-44">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize object struct with bounding box information</span></span>
<span id="cb38-45">        Object obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-46"></span>
<span id="cb38-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find the object class with the highest confidence score</span></span>
<span id="cb38-48">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> class_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> class_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb38-49">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the confidence score for the current object class</span></span>
<span id="cb38-51">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> box_cls_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb38-52">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the final confidence score for the object proposal</span></span>
<span id="cb38-53">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> box_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-54"></span>
<span id="cb38-55">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check for the highest confidence score</span></span>
<span id="cb38-56">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>box_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb38-57">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-58">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-59">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-60">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-61">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-62"></span>
<span id="cb38-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only add object proposals with high enough confidence scores</span></span>
<span id="cb38-64">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-65">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb38-66"></span>
<span id="cb38-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the proposals based on the confidence score in descending order</span></span>
<span id="cb38-68">    proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OrderByDescending</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=&gt;</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb38-69"></span>
<span id="cb38-70">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-71"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define function to calculate the union area of two bounding boxes</strong></p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb39-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Calculate the union area of two bounding boxes</span></span>
<span id="cb39-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb39-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"a"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb39-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"b"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb39-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb39-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcUnionArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Object b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb39-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb39-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb39-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb39-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define function to calculate the intersection area of two bounding boxes</strong></p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb40-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Calculate the intersection area of two bounding boxes</span></span>
<span id="cb40-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb40-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"a"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb40-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"b"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb40-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb40-7"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcInterArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Object b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define function to sort bounding box proposals using Non-Maximum Suppression</strong></p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb41-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Sort bounding box proposals using Non-Maximum Suppression</span></span>
<span id="cb41-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb41-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"proposals"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb41-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"nms_thresh"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb41-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb41-7">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NMSSortedBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> nms_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb41-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-9">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb41-10"></span>
<span id="cb41-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb41-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb41-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-15"></span>
<span id="cb41-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the current object proposal overlaps any selected objects too much</span></span>
<span id="cb41-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb41-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-19">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb41-20"></span>
<span id="cb41-21">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the area where the two object bounding boxes overlap</span></span>
<span id="cb41-22">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcInterArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-23"></span>
<span id="cb41-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the union area of both bounding boxes</span></span>
<span id="cb41-25">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">var</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcUnionArea</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-26"></span>
<span id="cb41-27">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore object proposals that overlap selected objects too much</span></span>
<span id="cb41-28">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> nms_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-29">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-30"></span>
<span id="cb41-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Keep object proposals that do not overlap selected objects too much</span></span>
<span id="cb41-32">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>keep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-33">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-34"></span>
<span id="cb41-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-update-method" class="level3">
<h3 class="anchored" data-anchor-id="define-update-method">Define Update method</h3>
<p>Most of the Update method is identical to the one from the <code>ImageClassifier</code> script, besides the post-processing steps. Although, there is an odd quirk with part of the YOLOX model in TensorFlow.js.</p>
<p>The YOLOX model requires input dimensions that are multiples of 32. However, if we perform inference with such an input resolution, we get an error like the one below.</p>
<pre class="text"><code>Uncaught (in promise) Error: Error in concat4D: Shape of tensors[1] (1,3,111,112) does not match the shape of the rest (1,3,112,112) along the non-concatenated axis 1.</code></pre>
<p>I don’t know why this occurs in TensorFlow.js, but we can resolve it by adding 1 to each input dimension. So instead of an input resolution of <code>224x224</code>, we have <code>225x225</code>.</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb43-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update is called once per frame</span></span>
<span id="cb43-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb43-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb43-4">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb43-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb43-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb43-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-9"></span>
<span id="cb43-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip the rest of the method if the webcam is not initialized</span></span>
<span id="cb43-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-12"></span>
<span id="cb43-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure screen dimensions match webcam resolution when using webcam</span></span>
<span id="cb43-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb43-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb43-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb43-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb43-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb43-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb43-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb43-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb43-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb43-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop the current webcam</span></span>
<span id="cb43-25">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb43-26"></span>
<span id="cb43-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb43-28">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb43-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb43-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb43-32"></span>
<span id="cb43-33"></span>
<span id="cb43-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale the source image resolution</span></span>
<span id="cb43-35">    Vector2Int sourceDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-36">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-37">    inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-38">    inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-39">    scale_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb43-40">    scale_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>sourceDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb43-41"></span>
<span id="cb43-42"></span>
<span id="cb43-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input texture with the calculated input dimensions</span></span>
<span id="cb43-44">    inputTextureGPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGB32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-45"></span>
<span id="cb43-46">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb43-47">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb43-48">        inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGB24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-49">        grid_strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb43-50">        grid_strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateGridStrides</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb43-51"></span>
<span id="cb43-52">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> output_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-53">        output_array <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>output_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb43-54">        WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateOutputArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-55">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updating output array to {output_size}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-56">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims: {inputTextureCPU.width}x{inputTextureCPU.height}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-57">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb43-58"></span>
<span id="cb43-59">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims: {inputTextureGPU.width}x{inputTextureGPU.height}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-60"></span>
<span id="cb43-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the source texture into model input texture</span></span>
<span id="cb43-62">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-63"></span>
<span id="cb43-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download pixel data from GPU to CPU</span></span>
<span id="cb43-65">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-66">    inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-67">    inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb43-68"></span>
<span id="cb43-69">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the current input dimensions</span></span>
<span id="cb43-70">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-71">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-72">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-73"></span>
<span id="cb43-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass the input data to the plugin to perform inference</span></span>
<span id="cb43-75">    modelInitialized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-76"></span>
<span id="cb43-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the input texture</span></span>
<span id="cb43-78">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-79"></span>
<span id="cb43-80">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelInitialized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-81"></span>
<span id="cb43-82">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GenerateYOLOXProposals</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-83"></span>
<span id="cb43-84">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposal_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NMSSortedBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb43-85">    numObjects <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb43-86">    objectInfoArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb43-87">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb43-88">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb43-89">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]];</span></span>
<span id="cb43-90">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb43-91">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb43-92"></span>
<span id="cb43-93"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-gui-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-gui-methods">Define GUI Methods</h3>
<p><strong>Define method to update webcam usage from GUI (unchanged)</strong></p>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb44-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb44-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is called when the value for the webcam toggle changes</span></span>
<span id="cb44-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb44-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"useWebcam"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb44-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamToggle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb44-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb44-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useWebcam</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb44-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update webcam device from GUI (unchanged)</strong></p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb45-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb45-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// The method is called when the selected value for the webcam dropdown changes</span></span>
<span id="cb45-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb45-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamDevice</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb45-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb45-6">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb45-7">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Selected Webcam: {currentWebcam}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb45-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb45-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb45-10"></span>
<span id="cb45-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb45-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb45-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb45-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb45-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the TensorFlow.js backend (unchanged)</strong></p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb46-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the TensorFlow.js compute backend</span></span>
<span id="cb46-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb46-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb46-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb46-6">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tfjsBackends<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb46-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the confidence threshold (unchanged)</strong></p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb47-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb47-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the minimum confidence score for keeping predictions</span></span>
<span id="cb47-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb47-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"slider"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb47-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slider slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb47-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb47-7">    minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb47-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define OnGUI method</strong></p>
<p>We’ll display the predicted bounding boxes and current frame rate in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnGUI.html">OnGUI</a> method. We’ll show a different message while the model is still loading.</p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb48-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// OnGUI is called for rendering and handling GUI events.</span></span>
<span id="cb48-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnGUI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb48-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a rectangle for label text</span></span>
<span id="cb48-5">    Rect labelRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb48-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a rectangle for bounding boxes</span></span>
<span id="cb48-7">    Rect boxRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb48-8"></span>
<span id="cb48-9">    GUIStyle labelStyle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb48-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-11">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11e-3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb48-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb48-13">    labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alignment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextAnchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MiddleLeft</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-14"></span>
<span id="cb48-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object objectInfo <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb48-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>displayBoundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-18"></span>
<span id="cb48-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip object if label index is out of bounds</span></span>
<span id="cb48-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-21"></span>
<span id="cb48-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get color for current class index</span></span>
<span id="cb48-23">        Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb48-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get label for current class index</span></span>
<span id="cb48-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-26"></span>
<span id="cb48-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set bounding box coordinates</span></span>
<span id="cb48-28">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-29">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set bounding box dimensions</span></span>
<span id="cb48-31">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-32">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-33"></span>
<span id="cb48-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box line width based on display resolution</span></span>
<span id="cb48-35">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75e-3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render bounding box</span></span>
<span id="cb48-37">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DrawTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb48-38">            position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-39">            image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whiteTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-40">            scaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ScaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StretchToFill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-41">            alphaBlend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-42">            imageAspect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-43">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-44">            borderWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> lineWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-45">            borderRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-46"></span>
<span id="cb48-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include class label and confidence score in label text</span></span>
<span id="cb48-48">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> labelText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" {name}: {(objectInfo.prob * 100).ToString("</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>##<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")}%"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-49"></span>
<span id="cb48-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize label GUI content</span></span>
<span id="cb48-51">        GUIContent labelContent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelText<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-52"></span>
<span id="cb48-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the text size.</span></span>
<span id="cb48-54">        Vector2 textSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcSize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelContent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-55"></span>
<span id="cb48-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text coordinates</span></span>
<span id="cb48-57">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-58">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> lineWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-59"></span>
<span id="cb48-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text dimensions</span></span>
<span id="cb48-61">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-62">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text and backgound color</span></span>
<span id="cb48-64">        labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grayscale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">black</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">white</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-65">        labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb48-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render label</span></span>
<span id="cb48-67">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelContent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-68"></span>
<span id="cb48-69">        Rect objectDot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb48-70">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-71">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-72">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-73">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-74">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-75"></span>
<span id="cb48-76"></span>
<span id="cb48-77">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DrawTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb48-78">            position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-79">            image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whiteTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-80">            scaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ScaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StretchToFill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-81">            alphaBlend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-82">            imageAspect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-83">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-84">            borderWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb48-85">            borderRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-86"></span>
<span id="cb48-87">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-88"></span>
<span id="cb48-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define styling information for GUI elements</span></span>
<span id="cb48-90">    GUIStyle style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb48-91">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-92">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>100f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fontScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb48-93">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb48-94">    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-95"></span>
<span id="cb48-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define screen spaces for GUI elements</span></span>
<span id="cb48-97">    Rect slot1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-98">    Rect slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-99"></span>
<span id="cb48-100">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Objects Detected: {numObjects}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-101">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayProposalCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelInitialized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading Model..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-102"></span>
<span id="cb48-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update framerate value</span></span>
<span id="cb48-104">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> fpsTimer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb48-105">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb48-106">        fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledDeltaTime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-107">        fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fpsRefreshRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-108">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb48-109"></span>
<span id="cb48-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust screen position when not showing predicted class</span></span>
<span id="cb48-111">    Rect fpsRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayProposalCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb48-112">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fpsRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FPS: {fps}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb48-113"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>That’s it for the code updates.</p>
</section>
</section>
<section id="update-unity-scene" class="level2">
<h2 class="anchored" data-anchor-id="update-unity-scene">Update Unity Scene</h2>
<p>All that’s left is to swap out the <code>ImageClassifier</code> script in the Unity scene.</p>
<p><strong>Update Inference Manager object</strong></p>
<p>With the <code>InferenceManager</code> object selected, drag the <code>ObjectDetector</code> script into the Inspector tab.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-attach-object-detector-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Remove the empty script component left over from the <code>ImageClassifier</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-remove-empty-script-component.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can assign the Screen object and colormap file in the Inspector tab by dragging them into their respective fields.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-assign-object-detector-script-assets.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Toggle On Value Changed function</strong></p>
<p>Next, we need to pair the <code>WebcamToggle</code> with the <code>UpdateWebcamToggle</code> function in the <code>ObjectDetector</code> script. Expand the Canvas object and select the <code>WebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-select-webcamtoggle.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click and drag the <code>InferenceManager</code> into the <code>On Value Changed</code> field.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-webcamtoggle-update-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the dropdown menu and select <code>ObjectDetector → UpdateWebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-webcamtoggle-update-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Dropdown On Value Changed function</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-webcamdropdown-update-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>TFJSModelDropdown</code> On Value Changed function</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-update-tfjs-model-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>TFJSBackendDropdown</code> On Value Changed function</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-update-tfjs-backend-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>ConfidenceThresholdSlider</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-update-confidence-threshold-slider-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Assign GUI objects to Inference Manager</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-inference-manager-assign-gui-objects.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="test-in-browser" class="level2">
<h2 class="anchored" data-anchor-id="test-in-browser">Test in Browser</h2>
<p>Now, we can build the project and test it in a web browser. In the Unity project, select <code>File → Build Settings...</code> in the top menu bar to open the Build Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-open-build-settings.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select <code>WebGL</code> from the list of platforms and click <code>Switch Platform</code> if it is not already the target platform.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-build-settings-switch-to-webgl.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can test the WebGL build locally by clicking <code>Build and Run</code> in the Build Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-build-settings-build-and-run.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity will prompt us to select a folder to store the build files or default to the Build folder from the original tutorial. If it’s the former, create a new folder called <code>Build</code>. Open the folder and click <code>Select Folder</code> to start the build process.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/unity-select-build-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity caps the framerate to the default <a href="https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html">target framerate</a> for the platform. My desktop display maxes out at 60fps.</p>
<p><strong>Test YOLOX Tiny performance</strong></p>
<p>As with the image classifier models in the original tutorial, performance is far lower in WebGL with the YOLOX model than when using native inference options.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/in-browser-test-yolox.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Full-screen</strong></p>
<p>Performance seems slightly better when in full-screen mode.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tfjs-yolox-unity-tutorial/images/in-browser-test-yolox-fullscreen.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this follow-up tutorial, we showed you how to use TensorFlow.js for in-browser object detection in Unity. We began by converting our model to TFJS and importing the necessary assets. Next, we updated our JavaScript and jslib plugin files. We then created an object detector script and updated our Unity scene to use it. Finally, we tested everything in the browser to ensure that our project worked as expected. With this tutorial, you should now be able to use TensorFlow.js for in-browser object detection in your Unity projects.</p>


</section>

 ]]></description>
  <category>unity</category>
  <category>tensorflow</category>
  <category>webgl</category>
  <category>yolox</category>
  <category>object-detection</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/tfjs-yolox-unity-tutorial/index.html</guid>
  <pubDate>Sun, 16 Oct 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Using Fastai and TensorFlow.js for Hand Gesture Recognition in Unity Pt. 3</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Create GitHub Pages Repository</li>
<li>Add Unity Build Files</li>
<li>Test Live Demo</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../part-1/">Part 1</a>: Train a hand gesture classifier using fastai and export it to TensorFlow.js.</li>
<li><a href="../part-2/">Part 2</a>: Create a TensorFlow.js plugin for the Unity game engine.</li>
<li><a href="../part-3/">Part 3</a>: Build a Unity project as a WebGL application and host it using GitHub Pages.</li>
<li><a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In Part 3 of this tutorial series, we will create a <a href="https://pages.github.com/">GitHub Pages</a> repository to host our Unity project as a live demo. We will start by creating a repository and adding the Unity build files. Then, we will test the live demo to verify it works properly. By the end of this post, you will have a live demo of your hand gesture recognition system that you can share with others.</p>
</section>
<section id="create-github-pages-repository" class="level2">
<h2 class="anchored" data-anchor-id="create-github-pages-repository">Create GitHub Pages Repository</h2>
<p>We first need to create a <a href="https://github.com/new">new GitHub repository</a> to store the WebGL build. We can do this on GitHub or locally using Git, GitHub Desktop, or another tool.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-desktop-create-new-repository.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the Settings tab for the new repository on GitHub.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-new-repository.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>Pages</code> section. Switch the source branch to <code>main</code> and click the <code>Save</code> button to start the automated build process.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-pages-click-save.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can check the GitHub Pages build progress under the Actions tab for the repository.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-pages-check-build-progress.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The web page will be accessible once the <code>pages build and deployment</code> workflow completes. Although, we don’t have any web pages at the moment.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-pages-build-complete.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>GitHub will provide a URL for accessing the web demo in the GitHub Pages section once it finishes building.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-pages-get-url.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="add-unity-build-files" class="level2">
<h2 class="anchored" data-anchor-id="add-unity-build-files">Add Unity Build Files</h2>
<p>Now let’s add the WebGL build from the previous post. Open the <code>Build</code> folder from <a href="../part-2/#test-in-browser">part 2.</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/open-build-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Copy the folder content to the repository for the GitHub Pages demo.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/copy-webgl-build-to-demo-repo.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can push the local changes to GitHub, which will automatically trigger the <code>pages build and deployment</code> workflow.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-pages-check-webgl-build-progress.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="test-live-demo" class="level2">
<h2 class="anchored" data-anchor-id="test-live-demo">Test Live Demo</h2>
<p>We can test the web demo at the URL provided by GitHub once the build workflow completes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/images/github-pages-webgl-demo.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this tutorial series, we demonstrated how to use fastai and TensorFlow.js to create a hand gesture recognition system in Unity. In Part 1, we trained a hand gesture classifier using fastai and exported it to TensorFlow.js. In Part 2, we created a TensorFlow.js plugin for the Unity game engine. Finally, in this post, we hosted the Unity project as a live demo on GitHub Pages. With this tutorial series, you now have the tools and knowledge to use TensorFlow.js models in Unity applications.</p>
<p><strong>Previous:</strong> <a href="../part-2/">In-Browser Hand Gesture Recognition for Unity with Fastai and TensorFlow.js Pt. 2</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>fastai</category>
  <category>unity</category>
  <category>tensorflow</category>
  <category>webgl</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/tensorflow-js-unity-tutorial/part-3/index.html</guid>
  <pubDate>Thu, 06 Oct 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Using Fastai and TensorFlow.js for Hand Gesture Recognition in Unity Pt. 2</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Set Up Unity Hub</li>
<li>Install Unity Editor</li>
<li>Create New Project</li>
<li>Import Assets</li>
<li>Create JavaScript Utility File</li>
<li>Create jslib Plugin</li>
<li>Import Plugin Functions</li>
<li>Create Image Classifier Script</li>
<li>Set up Unity Scene</li>
<li>Test in Browser</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../part-1/">Part 1</a>: Train a hand gesture classifier using fastai and export it to TensorFlow.js.</li>
<li><a href="../part-2/">Part 2</a>: Create a TensorFlow.js plugin for the Unity game engine.</li>
<li><a href="../part-3/">Part 3</a>: Build a Unity project as a WebGL application and host it using GitHub Pages.</li>
<li><a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In Part 2 of this tutorial series, we first install Unity Hub, download a Unity Editor, and create a new Unity project. Next, we will import any required assets and add a JavaScript utility file and <a href="https://docs.unity3d.com/Manual/webgl-interactingwithbrowserscripting.html">jslib plugin</a>. We will then create an image classifier script to use our trained model in Unity and set up the Unity scene to use it. Finally, we will test our project in a browser. By the end of this post, you will have a working TensorFlow.js plugin for Unity that you can use to recognize hand gestures in your projects.</p>
</section>
<section id="set-up-unity-hub" class="level2">
<h2 class="anchored" data-anchor-id="set-up-unity-hub">Set Up Unity Hub</h2>
<p>Before creating a project, we must install <a href="https://unity3d.com/get-unity/download">Unity Hub</a>, create a <a href="https://id.unity.com/">UnityID account</a>, and activate a (free) Unity license. The beginner Unity tutorial at the link below covers all these steps and how to create a simple flappy bird-style game.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=8rdfcq-jePw&amp;t=113s">Make Your First Video Game - Ultimate Beginner Unity3D Tutorial</a></li>
</ul>
<p>The link opens to the part covering how to install Unity for the first time, but I recommend watching the entire tutorial for those new to Unity.</p>
</section>
<section id="install-unity-editor" class="level2">
<h2 class="anchored" data-anchor-id="install-unity-editor">Install Unity Editor</h2>
<p>After installing Unity Hub and activating a license, we must add a version of the Unity Editor. We will use the latest 2022.1+ release. The tutorial uses 2022.1.19, which you can install directly from the link below.</p>
<ul>
<li><strong>Unity download archive:</strong> <a href="unityhub://2022.1.19f1/2fd7b40534d1">Unity 2022.1.19</a></li>
</ul>
<p>Open Unity Hub and select the <code>Installs</code> section in the side panel. Then click the <code>Install Editor</code> button in the upper right-hand corner.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-installs.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click the <code>Install</code> button next to the latest <code>2022.1</code> version under <code>Other Versions</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-installs-select-2022-1-19.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Scroll down the <code>Add modules</code> selection menu and click the check box next to <code>WebGL Build Support</code>. Click the <code>Install</code> button after selecting all desired modules.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-install-2022-1-19-with-webgl.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity Hub will begin downloading and installing the selected editor version.</p>
</section>
<section id="create-new-project" class="level2">
<h2 class="anchored" data-anchor-id="create-new-project">Create New Project</h2>
<p>Go back to the <code>Projects</code> section after the editor finishes installing and click <code>New Project</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the target editor version from the <code>Editor Version</code> dropdown menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-new-project-select-unity-version.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the <code>2D Core</code> template.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-new-project-select-2D-template.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Pick a name for the project and a location for the project folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-new-project-name-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Finally, click <code>Create Project</code> in the lower right-hand corner.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-hub-new-project-click-create-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The Unity Editor may take a few minutes to open the new project.</p>
</section>
<section id="import-assets" class="level2">
<h2 class="anchored" data-anchor-id="import-assets">Import Assets</h2>
<p>Inside the editor window, we will first import any class labels, test images, and TensorFlow.js models into the <code>Assets</code> folder.</p>
<p><strong>Import class labels</strong></p>
<p>Right-click a space in the <code>Assets</code> section and select <code>Create → Folder</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the new folder <code>ClassLabels</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-classlabels-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Drag and drop any JSON class label files from the operating system’s file explorer into the <code>ClassLabels</code> folder. Sample files are available in the Google Drive link below.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/drive/folders/1PzdlGfKMScGKhvnIlSPZ1EQDbErkXxkR?usp=sharing">ClassLabels</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-import-classlabels.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Import sample images</strong></p>
<p>Next, create an <code>Images</code> folder and drop any test images into it. Sample files are available in the Google Drive link below.</p>
<p><strong>Google Drive:</strong> <a href="https://drive.google.com/drive/folders/1T8C_22m7Rwd6S1FlJG5NdZ2TVMMB_WpB?usp=sharing">Images</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-import-image-assets.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity automatically imports images as a Sprite (2D and UI) <a href="https://docs.unity3d.com/Manual/TextureTypes.html">texture type</a>. We don’t need to change it for our purposes.</p>
<p><strong>Import TFJS models</strong></p>
<p>We need to place the TensorFlow.js models in a <a href="https://docs.unity3d.com/Manual/StreamingAssets.html">StreamingAssets</a> folder to include them in the final application. Create a new folder named <code>StreamingAssets</code>. Let’s put the folders for each model in a new subfolder called <code>TFJSModels</code> to keep things organized.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/drive/folders/1H86x7jrS7Bj-4305NclBTHO7VANgm4PG?usp=sharing">TFJSModels</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-tfjs-models-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Inside each subfolder are the JSON and BIN files for a TensorFlow.js model.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-inspect-tfjs-models-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="create-javascript-utility-file" class="level2">
<h2 class="anchored" data-anchor-id="create-javascript-utility-file">Create JavaScript Utility File</h2>
<p>Before creating the jslib plugin, we’ll add a JavaScript file with a utility function to the <code>StreamingAssets</code> folder. Open the <code>StreamingAssets</code> folder in a code editor and create a new JavaScript file called <code>utils.js</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/vscode-create-javascript-utility-file.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Define function to perform inference asynchronously</strong></p>
<p>This function will take in the model, input data, and shape for the input tensor as input.</p>
<p>We can use the <a href="https://js.tensorflow.org/api/latest/#tidy"><code>tf. tidy()</code></a> method included with TensorFlow.js for automatic memory cleanup. TensorFlow.js also provides a built-in <a href="https://js.tensorflow.org/api/latest/#argMax">ArgMax</a> to extract the predicted class index.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference with the provided model and input data</span></span>
<span id="cb1-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInferenceAsync</span>(model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> float32Data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shape) {</span>
<span id="cb1-3"></span>
<span id="cb1-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> outputData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tidy</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb1-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input tensor</span></span>
<span id="cb1-6">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tensor</span>(float32Data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float32'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make a prediction.</span></span>
<span id="cb1-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">predict</span>(input_tensor)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-9">    })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass raw output through a SoftMax function</span></span>
<span id="cb1-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> outputData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the predicted class from the model output</span></span>
<span id="cb1-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">argMax</span>(results)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>()<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> [index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> results[index]]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-15">}</span></code></pre></div>
</section>
<section id="create-jslib-plugin" class="level2">
<h2 class="anchored" data-anchor-id="create-jslib-plugin">Create jslib Plugin</h2>
<p>Now we can create the jslib <a href="https://docs.unity3d.com/Manual/webgl-interactingwithbrowserscripting.html">plugin</a> to use the TensorFlow.js models. In the <code>Assets</code> section, create a new folder called <code>Plugins</code>. Then create a subfolder called <code>WebGL</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-webgl-plugins-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>WebGL</code> folder in a code editor and create a new file called <code>WebGLPlugin.jslib</code>. For formatting purposes, we can set the jslib file as JavaScript.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/vscode-create-jslib-file-and-set-language-format.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Basic plugin format</strong></p>
<p>Here is the basic format for the jslib plugin. We’ll place any functions we want accessible from Unity inside the <code>plugin</code> variable.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define plugin functions</span></span>
<span id="cb2-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> plugin <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb2-3">    </span>
<span id="cb2-4">}</span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add plugin functions</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mergeInto</span>(LibraryManager<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">library</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> plugin)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define function to add external JavaScript dependencies</strong></p>
<p>We first need to add the script tag for the TensorFlow.js <a href="https://www.npmjs.com/package/@tensorflow/tfjs">npm package</a> and the <code>utils.js</code> script in the <code>StreamingAssets</code> folder.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add additional JavaScript dependencies to the html page</span></span>
<span id="cb3-2">GetExternalJS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> () {</span>
<span id="cb3-3"></span>
<span id="cb3-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add base TensorFlow.js dependencies</span></span>
<span id="cb3-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> tfjs_script <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createElement</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"script"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6">    tfjs_script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@3.20.0/dist/tf.min.js"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">head</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">appendChild</span>(tfjs_script)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8"></span>
<span id="cb3-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add custom utility functions</span></span>
<span id="cb3-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> script <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">createElement</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"script"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-11">    script<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">src</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./StreamingAssets/utils.js"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-12">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">document</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">head</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">appendChild</span>(script)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-13">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p><strong>Define function to set the TensorFlow.js compute backend</strong></p>
<p>Next, we’ll add a function to update the compute backend. At the time of writing, I only recommend using the <a href="https://github.com/tensorflow/tfjs/tree/master/tfjs-backend-webgl">WebGL backend</a>. The base <a href="https://github.com/tensorflow/tfjs/tree/master/tfjs-backend-cpu">CPU backend</a> is not suitable for real-time applications. The <a href="https://github.com/tensorflow/tfjs/tree/master/tfjs-backend-wasm">WASM backend</a> enables multi-threaded CPU inference but does not have full operator support. Lastly, the <a href="https://github.com/tensorflow/tfjs/tree/master/tfjs-backend-webgpu">WebGPU backend</a> is not yet officially supported by browsers.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the TFJS inference backend</span></span>
<span id="cb4-2">SetTFJSBackend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> (backend) {</span>
<span id="cb4-3">  <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> backend_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UTF8ToString</span>(backend)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4">  <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span> {</span>
<span id="cb4-5">     tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setBackend</span>(backend_str)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(() <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> { })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6">     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Successfully set </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>backend_str<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;"> backend.`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> (error) {</span>
<span id="cb4-8">     <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error occurred. Falling back to WebGL backend."</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-9">     tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setBackend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'webgl'</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-10">  }</span>
<span id="cb4-11">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p><strong>Define function to Initialize a TensorFlow.js model</strong></p>
<p>We’ll pass a file path for a <code>model.json</code> file and an array to store the predicted class index and the corresponding confidence score. We’ll be able to access the updated array values in Unity.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load a TFJS model</span></span>
<span id="cb5-2">InitTFJSModel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">async</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> (model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_data) {</span>
<span id="cb5-3"></span>
<span id="cb5-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Convert bytes to the text</span></span>
<span id="cb5-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> model_path_str <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UTF8ToString</span>(model_path)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the TensorFlow.js model at the provided file path</span></span>
<span id="cb5-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">await</span> tf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">loadGraphModel</span>(model_path_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> { <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">fromTFHub</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span> })<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-8"></span>
<span id="cb5-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check the model input shape</span></span>
<span id="cb5-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> input_shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inputs</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`Input Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">${</span>input_shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-12"></span>
<span id="cb5-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize an array to store the predicted class index and confidence score</span></span>
<span id="cb5-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prediction</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Float32Array</span>(buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-15">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p><strong>Define function to perform inference with a input image</strong></p>
<p>Loading the model can take several seconds, depending on the user’s internet connection. We don’t want to perform inference until after it initializes.</p>
<p>Due to the way Unity reads texture data from the GPU to the CPU, we need to read the image data from the bottom up to make the image correctly oriented.</p>
<p>After populating the input array, we’ll wait for the asynchronous inference function to finish before updating the prediction array.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode javascript code-with-copy"><code class="sourceCode javascript"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference with the provided image data</span></span>
<span id="cb6-2">PerformInference<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span> (image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height) {</span>
<span id="cb6-3"></span>
<span id="cb6-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only perform inference after loading a model</span></span>
<span id="cb6-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">typeof</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'undefined'</span>) {</span>
<span id="cb6-6">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">console</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model not defined yet"</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-8">    }</span>
<span id="cb6-9"></span>
<span id="cb6-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize an array with the raw image data</span></span>
<span id="cb6-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> uintArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Uint8ClampedArray</span>(buffer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-12"></span>
<span id="cb6-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Channels-last order</span></span>
<span id="cb6-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> [input_array] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Array</span>())<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-15"></span>
<span id="cb6-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip input image from Unity</span></span>
<span id="cb6-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> row<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">--</span>) {</span>
<span id="cb6-18">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> slice <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uintArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice</span>(row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> (row <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> (width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale color values from [0,255] to [0,1]</span></span>
<span id="cb6-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">let</span> col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> slice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) {</span>
<span id="cb6-21">            input_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(slice[col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-22">            input_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(slice[col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-23">            input_array<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">push</span>(slice[col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span>)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-24">        }</span>
<span id="cb6-25">    }</span>
<span id="cb6-26"></span>
<span id="cb6-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input array with the preprocessed input data</span></span>
<span id="cb6-28">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> float32Data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">Float32Array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">from</span>(input_array)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-29">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">const</span> shape <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-30"></span>
<span id="cb6-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass preprocessed input to the model</span></span>
<span id="cb6-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInferenceAsync</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> float32Data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> shape)<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">then</span>(output <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">=&gt;</span> {</span>
<span id="cb6-33"></span>
<span id="cb6-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store class index and confidence value</span></span>
<span id="cb6-35">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prediction</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-36">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prediction</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-37">    })</span>
<span id="cb6-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-39">}<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span></code></pre></div>
<p>That’s it for the plugin code. Next, we need to import the functions in Unity.</p>
</section>
<section id="import-plugin-functions" class="level2">
<h2 class="anchored" data-anchor-id="import-plugin-functions">Import Plugin Functions</h2>
<p>We’ll import the plugin functions in a dedicated C# script and make them accessible as a static class. Right-click a space inside the <code>WebGL</code> folder and select <code>Create → C# Script</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-c-sharp-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the new script WebGLPlugin.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-webgl-plugin-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Default script code</strong></p>
<p>By default, C# scripts contain the following code. We don’t need any of it in this case.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ImageClassifier <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> MonoBehaviour</span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb7-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-10">        </span>
<span id="cb7-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-12"></span>
<span id="cb7-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update is called once per frame</span></span>
<span id="cb7-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb7-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-16">        </span>
<span id="cb7-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We need the <a href="https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices?view=net-5.0">System.Runtime.InteropServices</a> namespace to handle interactions with the jslib plugin.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InteropServices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Class with JavaScript plugin functions for WebGL.</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> WebGLPlugin</span>
<span id="cb8-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "GetExternalJS" plugin function</span></span>
<span id="cb8-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetExternalJS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb8-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "SetTFJSBackend" plugin function</span></span>
<span id="cb8-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> backend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "InitTFJSModel" plugin function</span></span>
<span id="cb8-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> output_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> output_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Import "PerformInference" plugin function</span></span>
<span id="cb8-18">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"__Internal"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="create-image-classifier-script" class="level2">
<h2 class="anchored" data-anchor-id="create-image-classifier-script">Create Image Classifier Script</h2>
<p>Now we can create the main script for the Unity project. This script will handle getting input images, sending them to the model, and using the returned predictions to update on-screen readouts. We’ll store it in a new <code>Scripts</code> folder and name it <code>ImageClassifier</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/create-image-classifier-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Add required namespaces</strong></p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system?view=net-5.0">System</a>: Contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.UI.html">UnityEngine.UI</a>: Provides access to UI elements.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.render-pipelines.core@5.9/api/UnityEngine.Rendering.html">UnityEngine.Rendering</a>: Provides access to the elements of the rendering pipeline.</li>
<li><a href="https://learn.microsoft.com/en-us/dotnet/api/system.io?view=net-7.0">System.IO</a>: Contains types that allow reading and writing to files and data streams, and types that provide basic file and directory support.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.multiplayer-hlapi@1.0/api/UnityEngine.Networking.html">UnityEngine.Networking</a>: Provides access to the <a href="https://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.html">UnityWebRequest</a> module to communicate with http services.</li>
</ul>
<hr>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Networking</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Add code to create a list of available TFJS models</strong></p>
<p>We can’t browse for available TFJS models while running the Unity application in the browser, so we need to create a list of model names and file paths to check at runtime. We can do this automatically within the Unity Editor.</p>
<p>Unity provides an <a href="https://docs.unity3d.com/Manual/RunningEditorCodeOnLaunch.html">InitializeOnLoad</a> attribute to run code in the Unity Editor without requiring action from the user. This attribute requires the <a href="https://docs.unity3d.com/ScriptReference/UnityEditor.html">UnityEditor</a> namespace. We can only use this while in the Editor, so we need to wrap the code in <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives#conditional-compilation">Conditional compilation</a> preprocessor directives. This code will go right below the namespaces.</p>
<p>We use the <code>UNITY_EDITOR</code> <a href="https://docs.unity3d.com/Manual/PlatformDependentCompilation.html">scripting symbol</a> to check whether we are in the Unity Editor. When we are in the Editor, it returns true, and the code executes.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb10-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Startup</span>
<span id="cb10-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class that stores the name and file path for a TensorFlow.js model</span></span>
<span id="cb10-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelData</span>
<span id="cb10-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-13"></span>
<span id="cb10-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-16">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-17">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">path</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-18">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-20"></span>
<span id="cb10-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class that stores a list of TensorFlow.js model names and file paths</span></span>
<span id="cb10-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb10-23">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelList</span>
<span id="cb10-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-26"></span>
<span id="cb10-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-28">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-29">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">models</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-30">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-32"></span>
<span id="cb10-33">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Startup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb10-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-35">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> tfjsModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFJSModels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-36">        List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb10-37"></span>
<span id="cb10-38">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Available models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-39">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for each model folder</span></span>
<span id="cb10-40">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dir <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/{tfjsModelsDir}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb10-41">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-42">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dirStr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-43">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the model folder name</span></span>
<span id="cb10-44">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> splits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dirStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-45">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>splits<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-46"></span>
<span id="cb10-47">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for the model.json file for each model</span></span>
<span id="cb10-48">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dirStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb10-49">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-50">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">EndsWith</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"model.json"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb10-51">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-52">                    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> fileStr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\\</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">streamingAssetsPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-53">                    models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> fileStr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb10-54">                <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-55">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-56">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-57"></span>
<span id="cb10-58">        ModelList modelList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ModelList</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Format the list of available models as a string in JSON format</span></span>
<span id="cb10-60">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-61">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model List JSON: {json}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-62">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Write the list of available TensorFlow.js models to a JSON file</span></span>
<span id="cb10-63">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> StreamWriter writer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StreamWriter</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/models.json"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-64">        writer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Write</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-65">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-66"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-67"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span></code></pre></div>
<p>This code runs after opening the project in the Unity Editor or saving changes to this script. We can verify the code works by saving the script and going to the <code>StreamingAssets</code> folder in the Editor. The <code>models.json</code> file should be present.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-verify-initializeonload.png" class="img-fluid figure-img"></p>
</figure>
</div>
<section id="define-public-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-public-variables">Define public variables</h3>
<p>We’ll add the required public variables above the Start method. We will be able to access these variables in the Inspector tab. We can add <a href="https://docs.unity3d.com/ScriptReference/HeaderAttribute.html">Header</a> attributes to organize the public variables in the Inspector tab and use <a href="https://docs.unity3d.com/ScriptReference/TooltipAttribute.html">Tooltip</a> attributes to provide information about variables.</p>
<p><strong>Define scene object variables</strong></p>
<p>First, we need a variable to access the screen object that displays either a test image or webcam input.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scene Objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Screen object for the scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Transform screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define data processing variables</strong></p>
<p>We can set the default target input resolution to 216 and use it to scale the source resolution while maintaining the original aspect ratio.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The target minimum model input dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">216</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define output processing variables</strong></p>
<p>We pass in the JSON file containing the class labels as a <a href="https://docs.unity3d.com/ScriptReference/TextAsset.html">TextAsset</a>.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A json file containing the class labels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> TextAsset classLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum confidence score for keeping predictions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for debugging</strong></p>
<p>Next, we’ll add a Boolean variable to toggle printing debug messages to the console. These messages get printed to the console in the browser as well.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debugging"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb14-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Print debugging messages to the console"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb14-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> printDebugMessages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define webcam variables</strong></p>
<p>We need to specify a desired resolution and framerate when using a webcam as input.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb15-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Use a webcam as input"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb15-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb15-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2Int webcamDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1280</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam framerate"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb15-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb15-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> webcamFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for user interface</strong></p>
<p>We’ll make a simple GUI that displays the predicted class, the current framerate, and controls for selecting webcam devices, models, and backends.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GUI"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display predicted class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayPredictedClass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display fps"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The on-screen text color"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Color textColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">yellow</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The scale value for the on-screen font size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fontScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The number of seconds to wait between refreshing the fps value"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsRefreshRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The toggle for using a webcam as the input source"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Toggle useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available webcam devices"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available TFJS models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available TFJS backends"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb16-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define TensorFlow.js variables</strong></p>
<p>We’ll store the path to the <code>StreamingAssets</code> sub-folder containing the TensorFlow.js models in a string variable.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFJS"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb17-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the TFJS models folder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> tfjsModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TFJSModels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="define-private-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-private-variables">Define private variables</h3>
<p>We’ll add the required private variables right below the public variables.</p>
<p><strong>Define private webcam variables</strong></p>
<p>We’ll keep a list of available webcam devices so users can switch between them. Unity renders webcam input to a <a href="https://docs.unity3d.com/ScriptReference/WebCamTexture.html">WebcamTexture</a>.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of available webcam devices</span></span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Live video input from a webcam</span></span>
<span id="cb18-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamTexture webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the current webcam  device</span></span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define input variables</strong></p>
<p>We’ll update the dimensions and content of the screen object based on the test image or webcam.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image dimensions</span></span>
<span id="cb19-2">Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image texture</span></span>
<span id="cb19-4">Texture imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current screen object dimensions</span></span>
<span id="cb19-6">Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model GPU input texture</span></span>
<span id="cb19-8">RenderTexture inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model CPU input texture</span></span>
<span id="cb19-10">Texture2D inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for class labels</strong></p>
<p>We need to create a little class that indicates the structure of the JSON content. Our JSON file only contains a single array of strings. We can store this array in a dedicated variable.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for reading in class labels from a JSON file</span></span>
<span id="cb20-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ClassLabels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The ordered list of class names</span></span>
<span id="cb20-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variable to track whether a model is initialized</strong></p>
<p>We’ll track whether a model is ready for inference so we can tell the user if a model is still loading.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores whether the TensorFlow.js model is ready for inference</span></span>
<span id="cb21-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> modelInitialized<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for tracking the framerate</strong></p>
<p>Lastly, we need to define a couple of variables for the custom fps counter.</p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current frame rate value</span></span>
<span id="cb22-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Controls when the frame rate value updates</span></span>
<span id="cb22-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables to store values for GUI dropdowns</strong></p>
<p>We’ll update the lists of model paths and names at runtime using the <code>models.json</code> file in the <code>StreamingAssets</code> folder.</p>
<p>As mentioned previously, I only recommend using the WebGL backend at the time of writing, so we’ll hardcode that option here. In the future, we can check if each backend type is available in the jslib plugin and update the list in Unity.</p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// File paths for the available TFJS models</span></span>
<span id="cb23-2">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelPaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available TFJS models</span></span>
<span id="cb23-4">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb23-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available TFJS backends</span></span>
<span id="cb23-6">List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> tfjsBackends <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"webgl"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<p><strong>Define variable to store the current inference output</strong></p>
<p>We’ll share the memory for this array with the jslib plugin. We’ll update the values in the plugin and access them in this script.</p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the latest model prediction and confidence score</span></span>
<span id="cb24-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> output_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span></code></pre></div>
<p><strong>Define variables for reading the <code>models.json</code> file</strong></p>
<p>We need to create a couple of helper classes that indicate the structure of the <code>models.json</code> file.</p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class to store the name and file path of a TensorFlow.js model</span></span>
<span id="cb25-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb25-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelData <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A helper class to store a read a list of available TensorFlow.js models from a JSON file</span></span>
<span id="cb25-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb25-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ModelList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> models<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-initialization-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-initialization-methods">Define Initialization Methods</h3>
<p>We first need to define some methods to initialize webcams, the screen object, any GUI dropdown menus, and the in-game camera.</p>
<p><strong>Define method to initialize a webcam device</strong></p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the selected webcam device</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"deviceName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the selected webcam device</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb26-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop any webcams already playing</span></span>
<span id="cb26-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-9"></span>
<span id="cb26-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new WebCamTexture</span></span>
<span id="cb26-11">    webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebCamTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-12"></span>
<span id="cb26-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start the webcam</span></span>
<span id="cb26-14">    webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Play</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if webcam is playing</span></span>
<span id="cb26-16">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update toggle value</span></span>
<span id="cb26-18">    useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetIsOnWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-19"></span>
<span id="cb26-20">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam is playing"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam not playing, option disabled"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene screen object</strong></p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb27-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position an in-scene screen object</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb27-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb27-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the texture for the screen object</span></span>
<span id="cb27-7">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the screen dimensions</span></span>
<span id="cb27-9">    screenDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-10"></span>
<span id="cb27-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the screen around the Y-Axis when using webcam</span></span>
<span id="cb27-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> yRotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> 180f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the scale value for the Z-Axis when using webcam</span></span>
<span id="cb27-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> zScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-15"></span>
<span id="cb27-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set screen rotation</span></span>
<span id="cb27-17">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Quaternion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Euler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> yRotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen dimensions</span></span>
<span id="cb27-19">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> zScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-20"></span>
<span id="cb27-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen position</span></span>
<span id="cb27-22">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to switch TensorFlow.js models</strong></p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb28-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load a TensorFlow.js model</span></span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb28-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb28-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load TensorFlow.js model in JavaScript plugin</span></span>
<span id="cb28-7">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> output_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to read the list of available TensorFlow.js models</strong></p>
<p>We can parse the raw JSON content from the <code>models.json</code> file using the <a href="https://docs.unity3d.com/ScriptReference/JsonUtility.FromJson.html"><code>JsonUtility.FromJson()</code></a> method. We’ll then update the associated GUI dropdown with the available model names.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb29-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the names and paths of the available TensorFlow.js models</span></span>
<span id="cb29-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"json"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb29-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTFJSModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-7">    ModelList modelList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ModelList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>json<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ModelData model <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> modelList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">models</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb29-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//Debug.Log($"{model.name}: {model.path}");</span></span>
<span id="cb29-11">        modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}{model.path}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-13">        modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb29-16">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add TFJS model names to menu</span></span>
<span id="cb29-18">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb29-20">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to download the list of available TensorFlow.js models</strong></p>
<p>At runtime, we must fetch the <code>models.json</code> file from the hosting server before parsing its content. Getting the file is an asynchronous operation, so we’ll use a <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.StartCoroutine.html">coroutine</a>. Once we have the file, we’ll pass it to the <code>GetTFJSModels</code> method.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Download the JSON file with the available TFJS model information</span></span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"uri"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb30-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb30-6">IEnumerator <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRequest</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> uri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>UnityWebRequest webRequest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Get</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb30-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Request and wait for the desired page.</span></span>
<span id="cb30-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">yield</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SendWebRequest</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-12"></span>
<span id="cb30-13">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> pages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> uri<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'/'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> page <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-15"></span>
<span id="cb30-16">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">switch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-17">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-18">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ConnectionError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-19">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DataProcessingError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-20">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": Error: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-21">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-22">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProtocolError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-23">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">": HTTP Error: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">error</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-24">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-25">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> UnityWebRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Result</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Success</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb30-26">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>pages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>page<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Received: "</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-27"></span>
<span id="cb30-28">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the available model names and file paths from the JSON string</span></span>
<span id="cb30-29">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTFJSModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webRequest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">downloadHandler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-30">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize one of the available TensorFlow.js models</span></span>
<span id="cb30-31">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateTFJSModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-32">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-33">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-34">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-35"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize GUI dropdown menu options</strong></p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the GUI dropdown list</span></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb31-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb31-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create list of webcam device names</span></span>
<span id="cb31-7">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> webcamNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb31-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-9"></span>
<span id="cb31-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb31-11">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add webcam device names to dropdown menu</span></span>
<span id="cb31-13">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the dropdown to the current webcam device</span></span>
<span id="cb31-15">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IndexOf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb31-16"></span>
<span id="cb31-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the available TensorFlow.js models</span></span>
<span id="cb31-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelListPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/models.json"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StartCoroutine</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRequest</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelListPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb31-20"></span>
<span id="cb31-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb31-22">    backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add TFJS backend names to menu</span></span>
<span id="cb31-24">    backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tfjsBackends<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb31-26">    backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene camera object</strong></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position the main camera based on an in-scene screen object</span></span>
<span id="cb32-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of an in-scene screen object</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb32-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> cameraName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main Camera"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get a reference to the Main Camera GameObject</span></span>
<span id="cb32-8">    GameObject camera <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cameraName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera position to account for updates to the screenDims</span></span>
<span id="cb32-10">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>10f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render objects with no perspective (i.e. 2D)</span></span>
<span id="cb32-12">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographic</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera size to account for updates to the screenDims</span></span>
<span id="cb32-14">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographicSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-awake-method" class="level3">
<h3 class="anchored" data-anchor-id="define-awake-method">Define Awake method</h3>
<p>We’ll call the <code>GetExternalJS</code> function from the jslib plugin in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Awake.html">Awake()</a> method.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Awake is called when the script instance is being loaded</span></span>
<span id="cb33-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Awake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb33-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-4">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetExternalJS</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb33-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-start-method" class="level3">
<h3 class="anchored" data-anchor-id="define-start-method">Define Start method</h3>
<p>The <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Start.html">Start</a> method is <a href="https://docs.unity3d.com/Manual/ExecutionOrder.html">called</a> once before the first frame update, so we’ll perform any required setup steps here.</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb34-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb34-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image texture</span></span>
<span id="cb34-5">    imageTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image dimensions as a Vector2Int</span></span>
<span id="cb34-7">    imageDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-8"></span>
<span id="cb34-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of available webcam devices</span></span>
<span id="cb34-10">    webcamDevices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebCamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-12">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-13">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam</span></span>
<span id="cb34-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-16"></span>
<span id="cb34-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb34-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb34-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-21"></span>
<span id="cb34-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of class labels from JSON file</span></span>
<span id="cb34-23">    classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ClassLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>classLabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">classes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-24"></span>
<span id="cb34-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the webcam dropdown list</span></span>
<span id="cb34-26">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb34-27"></span>
<span id="cb34-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the current TensorFlow.js compute backend</span></span>
<span id="cb34-29">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tfjsBackends<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb34-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-processing-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-processing-methods">Define Processing Methods</h3>
<p>Next, we need to define a preprocessing method to calculate the input resolution.</p>
<p><strong>Define method to calculate input resolution</strong></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb35-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the source image resolution to the target input dimensions</span></span>
<span id="cb35-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// while maintaing the source aspect ratio.</span></span>
<span id="cb35-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb35-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"imageDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb35-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"targetDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb35-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb35-8">Vector2Int <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Clamp the minimum dimension value to 64px</span></span>
<span id="cb35-11">    targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">64</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-12"></span>
<span id="cb35-13">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-14"></span>
<span id="cb35-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the input dimensions using the target minimum dimension</span></span>
<span id="cb35-16">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-18">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb35-19">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb35-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-23">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-24">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb35-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-26"></span>
<span id="cb35-27">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-update-method" class="level3">
<h3 class="anchored" data-anchor-id="define-update-method">Define Update method</h3>
<p>We’ll place anything we want to run every frame in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Update.html">Update</a> method.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update is called once per frame</span></span>
<span id="cb36-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb36-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-4">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb36-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-9"></span>
<span id="cb36-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip the rest of the method if the webcam is not initialized</span></span>
<span id="cb36-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-12"></span>
<span id="cb36-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure screen dimensions match webcam resolution when using webcam</span></span>
<span id="cb36-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb36-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb36-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop the current webcam</span></span>
<span id="cb36-25">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-26"></span>
<span id="cb36-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb36-28">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb36-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-32"></span>
<span id="cb36-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale the source image resolution</span></span>
<span id="cb36-34">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-35"></span>
<span id="cb36-36">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input texture with the calculated input dimensions</span></span>
<span id="cb36-37">    inputTextureGPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGB32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-38"></span>
<span id="cb36-39">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-40">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-41">        inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGB24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-42">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-43"></span>
<span id="cb36-44">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims: {inputTextureGPU.width}x{inputTextureGPU.height}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-45"></span>
<span id="cb36-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the source texture into model input texture</span></span>
<span id="cb36-47">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-48"></span>
<span id="cb36-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download pixel data from GPU to CPU</span></span>
<span id="cb36-50">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-51">    inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-52">    inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-53"></span>
<span id="cb36-54">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the current input dimensions</span></span>
<span id="cb36-55">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-56">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-57">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-58"></span>
<span id="cb36-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pass the input data to the plugin to perform inference</span></span>
<span id="cb36-60">    modelInitialized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-61"></span>
<span id="cb36-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if index is valid</span></span>
<span id="cb36-63">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelInitialized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class: {classes[(int)output_data[0]]}"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Not Initialized"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-64"></span>
<span id="cb36-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the input texture</span></span>
<span id="cb36-66">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-67"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-gui-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-gui-methods">Define GUI Methods</h3>
<p>We need some methods to handle user interactions with the GUI and display the predicted class and current framerate.</p>
<p><strong>Define method to update webcam usage from GUI</strong></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb37-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is called when the value for the webcam toggle changes</span></span>
<span id="cb37-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb37-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"useWebcam"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb37-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamToggle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb37-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useWebcam</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update webcam device from GUI</strong></p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// The method is called when the selected value for the webcam dropdown changes</span></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb38-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamDevice</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb38-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-6">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-7">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Selected Webcam: {currentWebcam}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb38-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-10"></span>
<span id="cb38-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb38-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb38-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb38-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the TensorFlow.js backend</strong></p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb39-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the TensorFlow.js compute backend</span></span>
<span id="cb39-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb39-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb39-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb39-6">    WebGLPlugin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTFJSBackend</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>tfjsBackends<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>backendDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb39-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the confidence threshold</strong></p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb40-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the minimum confidence score for keeping predictions</span></span>
<span id="cb40-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb40-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"slider"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb40-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slider slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-7">    minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define OnGUI method</strong></p>
<p>We’ll display the predicted class and current frame rate in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnGUI.html">OnGUI</a> method. We’ll show a different message while the model is still loading.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// OnGUI is called for rendering and handling GUI events.</span></span>
<span id="cb41-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnGUI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb41-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define styling information for GUI elements</span></span>
<span id="cb41-5">    GUIStyle style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb41-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-7">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>100f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fontScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb41-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb41-9">    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-10"></span>
<span id="cb41-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define screen spaces for GUI elements</span></span>
<span id="cb41-12">    Rect slot1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-13">    Rect slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-14"></span>
<span id="cb41-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Verify predicted class index is valid</span></span>
<span id="cb41-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> labelText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{classes[(int)output_data[0]]} {(output_data[1] * 100).ToString("</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>##<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")}%"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> labelText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"None"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> modelInitialized <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Predicted Class: {labelText}"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading Model..."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayPredictedClass<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-20"></span>
<span id="cb41-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update framerate value</span></span>
<span id="cb41-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> fpsTimer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb41-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-24">        fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledDeltaTime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-25">        fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fpsRefreshRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-26">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb41-27"></span>
<span id="cb41-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust screen position when not showing predicted class</span></span>
<span id="cb41-29">    Rect fpsRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayPredictedClass <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb41-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fpsRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FPS: {fps}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb41-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>That’s it for the code.</p>
</section>
</section>
<section id="set-up-unity-scene" class="level2">
<h2 class="anchored" data-anchor-id="set-up-unity-scene">Set up Unity Scene</h2>
<p>We can, at last, start setting up our Unity scene. We need a screen to display the webcam feed, an empty object to attach the <code>ImageClassifier</code> script, a dropdown menu for selecting webcam devices, and a toggle to switch between the test image and a webcam feed.</p>
<p><strong>Create Screen object</strong></p>
<p>Right-click a space in the Hierarchy tab and select <code>3D Object → Quad</code>. We can name the new object <code>Screen</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-quad.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Next, drag and drop a test image from the <code>Assets → Images</code> folder onto the <code>Screen</code> object in the Scene view. Note that the Screen looks a bit dim. We need to change the shader for the Screen’s Material so that it does not require an external light source.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-attach-image-to-screen.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the Screen in the Hierarchy tab and open the Shader dropdown menu in the Inspector tab. Type <code>Unlit/Texture</code> into the search box and press enter.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-update-screen-material-shader.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Create Inference Manager object</strong></p>
<p>Right-click a space in the Hierarchy tab and select Create Empty. Name the empty object <code>InferenceManager</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-create-empty-gameobject.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the <code>InferenceManager</code> object selected, drag the <code>ImageClassifier</code> script into the Inspector tab.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-attach-image-classifier-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can assign the Screen and class labels file in the Inspector tab by dragging them into their respective fields.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-assign-image-classifier-script-assets.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Add GUI prefab</strong></p>
<p>We still need to create the GUI toggle and dropdown menu. To save time, I made a <a href="https://docs.unity3d.com/Manual/Prefabs.html">Prefab</a> that we can drop into the Scene.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/drive/folders/1K3tgzMmNavqamlHPsrQn26K6A0n1uinb?usp=sharing">Prefabs folder</a></li>
</ul>
<p>Drag and drop the <code>Prefabs</code> folder into the <code>Assets</code> section.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-import-prefabs-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>Prefabs</code> folder and drag the Canvas prefab into the Hierarchy tab. We can see the GUI by switching to the Game view.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-add-canvas-to-hierarchy-tab.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Toggle On Value Changed function</strong></p>
<p>Next, we need to pair the <code>WebcamToggle</code> with the <code>UpdateWebcamToggle</code> function in the <code>ImageClassifier</code> script. Expand the Canvas object and select the <code>WebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-select-webcamtoggle.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click and drag the <code>InferenceManager</code> into the <code>On Value Changed</code> field.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-webcamtoggle-assign-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>No Function</code> dropdown menu and select <code>ImageClassifier → UpdateWebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-webcamtoggle-assign-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Dropdown On Value Changed function</strong></p>
<p>We can follow the same steps to pair the <code>WebcamDropdown</code> with the <code>UpdateWebcamDevice</code> function in the <code>ImageClassifier</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-webcamdropdown-assign-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>This time select <code>ImageClassifier → UpdateWebcamDevice</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-webcamdropdown-assign-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>TFJSModelDropdown</code> On Value Changed function</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-update-tfjs-model-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>TFJSBackendDropdown</code> On Value Changed function</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-update-tfjs-backend-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>ConfidenceThresholdSlider</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-update-confidence-threshold-slider-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Assign GUI objects to Inference Manager</strong></p>
<p>We can now assign the <code>WebcamToggle</code> and <code>WebcamDropdown</code> objects to their respective fields for the <code>ImageClassifier</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-inference-manager-assign-gui-objects.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Add Event System</strong></p>
<p>Before we can use the GUI, we need to add an Event System. Right-click a space in the Hierarchy tab and select <code>UI → Event System</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-add-eventsystem.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="test-in-browser" class="level2">
<h2 class="anchored" data-anchor-id="test-in-browser">Test in Browser</h2>
<p>Now, we can build the project and test it in a web browser. In the Unity project, select <code>File → Build Settings...</code> in the top menu bar to open the Build Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-open-build-settings.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select <code>WebGL</code> from the list of platforms and click Switch Platform.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-build-settings-switch-to-webgl.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity enables compression by default for WebGL builds, which GitHub Pages does not support. We can disable compression in the Player Settings. Click the <code>Player Settings...</code> button in the bottom-left corner of the Build Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-build-settings-open-player-settings.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select <code>Disabled</code> from the Compression Format dropdown menu and close the Project Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-player-settings-disable-webgl-compression.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can test the WebGL build locally by clicking <code>Build and Run</code> in the Build Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-build-settings-build-and-run.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity will prompt us to select a folder to store the build files. Create a new folder called <code>Build</code>. Open the folder and click <code>Select Folder</code> to start the build process.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/unity-select-build-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Unity caps the framerate to the default <a href="https://docs.unity3d.com/ScriptReference/Application-targetFrameRate.html">target framerate</a> for the platform. My desktop display maxes out at 60fps.</p>
<p><strong>Test ConvNeXt nano performance</strong></p>
<p>Performance for the ConvNeXt nano model fluctuates in the mid to high 50s. That is significantly lower than native inference options like OpenVINO or DirectML but still usable. GPU utilization seems to max out around 34% on my desktop.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/in-browser-test-convnext.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Test ResNet18 performance</strong></p>
<p>The smaller ResNet18 model reaches the display’s 60fps max refresh rate but likely also falls far short of native inference options.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/images/in-browser-test-resnet.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this post, we installed Unity Hub, downloaded a Unity Editor, and created a new Unity project. We then imported the required assets and added a JavaScript utility file and jslib plugin. Next, we created an image classifier script to use our trained model in Unity and set up the Unity scene to use it. Finally, we tested our project in a browser. With this completed, we are ready to move on to Part 3 of this tutorial series, where we will host our Unity project as a live demo on <a href="https://pages.github.com/">GitHub Pages</a>.</p>
<p><strong>Previous:</strong> <a href="../part-1/">In-Browser Hand Gesture Recognition for Unity with Fastai and TensorFlow.js Pt. 1</a></p>
<p><strong>Next:</strong> <a href="../part-3/">In-Browser Hand Gesture Recognition for Unity with Fastai and TensorFlow.js Pt. 3</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>fastai</category>
  <category>unity</category>
  <category>tensorflow</category>
  <category>webgl</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/tensorflow-js-unity-tutorial/part-2/index.html</guid>
  <pubDate>Wed, 05 Oct 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Using Fastai and TensorFlow.js for Hand Gesture Recognition in Unity Pt. 1</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Overview</li>
<li>Install Dependencies</li>
<li>Import Dependencies</li>
<li>Select a Model</li>
<li>Download the Dataset</li>
<li>Inspect the Dataset</li>
<li>Define DataLoaders</li>
<li>Finetune the Model</li>
<li>Clean Dataset (Optional)</li>
<li>Test the Model</li>
<li>Export the Model</li>
<li>Export Inference Data</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../part-1/">Part 1</a>: Train a hand gesture classifier using fastai and export it to TensorFlow.js.</li>
<li><a href="../part-2/">Part 2</a>: Create a TensorFlow.js plugin for the Unity game engine.</li>
<li><a href="../part-3/">Part 3</a>: Build a Unity project as a WebGL application and host it using GitHub Pages.</li>
<li><a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this three-part tutorial series, we will use <a href="https://docs.fast.ai/">fastai</a> and <a href="https://www.tensorflow.org/js/">TensorFlow.js</a> to create an in-browser hand gesture recognition system in <a href="https://unity.com/">Unity</a>. In Part 1, we will train a hand gesture classifier using fastai and export it to TensorFlow.js. In Part 2, we will create a TensorFlow.js plugin for the Unity game engine. Finally, in Part 3, we will host the Unity project as a live demo on GitHub Pages. By the end of this tutorial series, you will have a hand gesture recognition system that you can use in your Unity projects.</p>
<p><strong>In-Browser Demo:</strong> <a href="https://cj-mills.github.io/fastai-hand-gesture-classifier-webgl-demo/">Hand Gesture Classifier</a></p>
<p>The tutorial uses a downscaled version of <a href="https://github.com/hukenovs/hagrid">HaGRID</a> (HAnd Gesture Recognition Image Dataset) that I modified for image classification tasks. The dataset contains images for 18 distinct hand gestures and an additional <code>no_gesture</code> class to account for idle hands.</p>
<div>
<details>
<summary>
<strong>Reference Images</strong>
</summary>
<br>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table>
<thead>
<tr>
<th>
Class
</th>
<th>
Image
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
call
</td>
<td>
<img alt="call" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/call.jpg">
</td>
</tr>
<tr>
<td>
dislike
</td>
<td>
<img alt="dislike" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/dislike.jpg">
</td>
</tr>
<tr>
<td>
fist
</td>
<td>
<img alt=" fist" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/fist.jpg">
</td>
</tr>
<tr>
<td>
four
</td>
<td>
<img alt="four" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/four.jpg">
</td>
</tr>
<tr>
<td>
like
</td>
<td>
<img alt=" like" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/like.jpg">
</td>
</tr>
<tr>
<td>
mute
</td>
<td>
<img alt=" mute" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/mute.jpg">
</td>
</tr>
<tr>
<td>
ok
</td>
<td>
<img alt=" ok" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/ok.jpg">
</td>
</tr>
<tr>
<td>
one
</td>
<td>
<img alt=" one" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/one.jpg">
</td>
</tr>
<tr>
<td>
palm
</td>
<td>
<img alt=" palm" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/palm.jpg">
</td>
</tr>
<tr>
<td>
peace
</td>
<td>
<img alt="peace" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/peace.jpg">
</td>
</tr>
<tr>
<td>
peace_inverted
</td>
<td>
<img alt="peace_inverted" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/peace_inverted.jpg">
</td>
</tr>
<tr>
<td>
rock
</td>
<td>
<img alt="rock" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/rock.jpg">
</td>
</tr>
<tr>
<td>
stop
</td>
<td>
<img alt="stop" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/stop.jpg">
</td>
</tr>
<tr>
<td>
stop_inverted
</td>
<td>
<img alt="stop_inverted" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/stop_inverted.jpg">
</td>
</tr>
<tr>
<td>
three
</td>
<td>
<img alt="three" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/three.jpg">
</td>
</tr>
<tr>
<td>
three2
</td>
<td>
<img alt="three2" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/three2.jpg">
</td>
</tr>
<tr>
<td>
two_up
</td>
<td>
<img alt=" two_up" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/two_up.jpg">
</td>
</tr>
<tr>
<td>
two_up_inverted
</td>
<td>
<img alt="two_up_inverted" src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/two_up_inverted.jpg">
</td>
</tr>
</tbody>

</table>
</div>
</details>
</div>
<p>We can use a model trained on this dataset to map hand gestures to user input via a webcam in Unity.</p>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In Part 1 of this tutorial series, we finetune an image classifier from the <a href="https://github.com/rwightman/pytorch-image-models">timm library</a> using fastai and export it to TensorFlow.js. We will start by installing and importing the necessary dependencies. Then, we will select a model to use and download a dataset to train it. After inspecting the dataset, we will define data loaders to use for training. Finally, we will finetune and export the model. We also demonstrate how to clean the dataset to improve training. By the end of this post, you will have a trained hand gesture classifier that you can use in web applications.</p>
<p>You can find links to view the training code and run it on <a href="https://colab.research.google.com/?utm_source=scs-index">Google Colab</a> and <a href="https://www.kaggle.com/docs/notebooks">Kaggle</a> below.</p>
<table class="table">
<thead>
<tr class="header">
<th>Jupyter Notebook</th>
<th>Colab</th>
<th>Kaggle</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial/blob/main/notebooks/Fastai-timm-HaGRID-classification-TFJS.ipynb">GitHub Repository</a></td>
<td><a href="https://colab.research.google.com/github/cj-mills/tensorflow-js-unity-tutorial/blob/main/notebooks/Fastai-timm-HaGRID-classification-TFJS-Colab.ipynb">Open In Colab</a></td>
<td><a href="https://kaggle.com/kernels/welcome?src=https://github.com/cj-mills/tensorflow-js-unity-tutorial/blob/main/notebooks/Fastai-timm-HaGRID-classification-TFJS-Kaggle.ipynb">Open in Kaggle</a></td>
</tr>
</tbody>
</table>
</section>
<section id="install-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="install-dependencies">Install Dependencies</h2>
<p>The training code requires <a href="https://pytorch.org/">PyTorch</a> for the fastai library, the fastai library itself for training, and the <a href="https://github.com/Kaggle/kaggle-api">Kaggle API Python package</a> for downloading the dataset. The <a href="https://github.com/rwightman/pytorch-image-models">timm</a> library provides access to a wide range of pretrained image models.</p>
<p><strong>Install model training dependencies</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %%capture</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U torch torchvision torchaudio</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U fastai==2.7.9</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U kaggle</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U Pillow</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U timm</span></span></code></pre></div>
<p>The model conversion process involves exporting the PyTorch model to <a href="https://onnx.ai/">ONNX</a>, converting the ONNX model to a TensorFlow <a href="https://www.tensorflow.org/guide/saved_model">SavedModel</a>, then converting the SavedModel to TensorFlow.js <a href="https://www.tensorflow.org/js/tutorials/conversion/import_saved_model#step_1_convert_an_existing_tensorflow_model_to_the_tensorflowjs_web_format">web format</a>.</p>
<p><strong>Install Tensorflow.js conversion dependencies</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># %%capture</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U onnxruntime</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install onnx-tf</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install tensorflowjs</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install tensorflow_probability</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install onnx-simplifier</span></span>
<span id="cb2-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install simple-onnx-processing-tools</span></span>
<span id="cb2-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># !pip install -U onnx_graphsurgeon --index-url https://pypi.ngc.nvidia.com</span></span></code></pre></div>
</section>
<section id="import-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="import-dependencies">Import Dependencies</h2>
<p><strong>Import all fastai computer vision functionality</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> fastai.vision.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
<p><strong>Import pandas and disable column and row limits</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb4-2">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'max_colwidth'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb4-3">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_rows'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span>
<span id="cb4-4">pd.set_option(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'display.max_columns'</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>)</span></code></pre></div>
<p><strong>Import timm library</strong></p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> timm</span></code></pre></div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">timm.__version__</span></code></pre></div>
<pre class="text"><code>'0.6.7'</code></pre>
</section>
<section id="select-a-model" class="level2">
<h2 class="anchored" data-anchor-id="select-a-model">Select a Model</h2>
<p>Timm provides many pretrained models, but not all are fast enough for real-time applications. We can filter through the available models using the <code>timm.list_models()</code> function.</p>
<p><strong>View available ResNet models</strong></p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">pd.DataFrame(timm.list_models(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet*'</span>, pretrained<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
resnet10t
</td>
</tr>
<tr>
<th>
1
</th>
<td>
resnet14t
</td>
</tr>
<tr>
<th>
2
</th>
<td>
resnet18
</td>
</tr>
<tr>
<th>
3
</th>
<td>
resnet18d
</td>
</tr>
<tr>
<th>
4
</th>
<td>
resnet26
</td>
</tr>
<tr>
<th>
5
</th>
<td>
resnet26d
</td>
</tr>
<tr>
<th>
6
</th>
<td>
resnet26t
</td>
</tr>
<tr>
<th>
7
</th>
<td>
resnet32ts
</td>
</tr>
<tr>
<th>
8
</th>
<td>
resnet33ts
</td>
</tr>
<tr>
<th>
9
</th>
<td>
resnet34
</td>
</tr>
<tr>
<th>
10
</th>
<td>
resnet34d
</td>
</tr>
<tr>
<th>
11
</th>
<td>
resnet50
</td>
</tr>
<tr>
<th>
12
</th>
<td>
resnet50_gn
</td>
</tr>
<tr>
<th>
13
</th>
<td>
resnet50d
</td>
</tr>
<tr>
<th>
14
</th>
<td>
resnet51q
</td>
</tr>
<tr>
<th>
15
</th>
<td>
resnet61q
</td>
</tr>
<tr>
<th>
16
</th>
<td>
resnet101
</td>
</tr>
<tr>
<th>
17
</th>
<td>
resnet101d
</td>
</tr>
<tr>
<th>
18
</th>
<td>
resnet152
</td>
</tr>
<tr>
<th>
19
</th>
<td>
resnet152d
</td>
</tr>
<tr>
<th>
20
</th>
<td>
resnet200d
</td>
</tr>
<tr>
<th>
21
</th>
<td>
resnetaa50
</td>
</tr>
<tr>
<th>
22
</th>
<td>
resnetblur50
</td>
</tr>
<tr>
<th>
23
</th>
<td>
resnetrs50
</td>
</tr>
<tr>
<th>
24
</th>
<td>
resnetrs101
</td>
</tr>
<tr>
<th>
25
</th>
<td>
resnetrs152
</td>
</tr>
<tr>
<th>
26
</th>
<td>
resnetrs200
</td>
</tr>
<tr>
<th>
27
</th>
<td>
resnetrs270
</td>
</tr>
<tr>
<th>
28
</th>
<td>
resnetrs350
</td>
</tr>
<tr>
<th>
29
</th>
<td>
resnetrs420
</td>
</tr>
<tr>
<th>
30
</th>
<td>
resnetv2_50
</td>
</tr>
<tr>
<th>
31
</th>
<td>
resnetv2_50d_evos
</td>
</tr>
<tr>
<th>
32
</th>
<td>
resnetv2_50d_gn
</td>
</tr>
<tr>
<th>
33
</th>
<td>
resnetv2_50x1_bit_distilled
</td>
</tr>
<tr>
<th>
34
</th>
<td>
resnetv2_50x1_bitm
</td>
</tr>
<tr>
<th>
35
</th>
<td>
resnetv2_50x1_bitm_in21k
</td>
</tr>
<tr>
<th>
36
</th>
<td>
resnetv2_50x3_bitm
</td>
</tr>
<tr>
<th>
37
</th>
<td>
resnetv2_50x3_bitm_in21k
</td>
</tr>
<tr>
<th>
38
</th>
<td>
resnetv2_101
</td>
</tr>
<tr>
<th>
39
</th>
<td>
resnetv2_101x1_bitm
</td>
</tr>
<tr>
<th>
40
</th>
<td>
resnetv2_101x1_bitm_in21k
</td>
</tr>
<tr>
<th>
41
</th>
<td>
resnetv2_101x3_bitm
</td>
</tr>
<tr>
<th>
42
</th>
<td>
resnetv2_101x3_bitm_in21k
</td>
</tr>
<tr>
<th>
43
</th>
<td>
resnetv2_152x2_bit_teacher
</td>
</tr>
<tr>
<th>
44
</th>
<td>
resnetv2_152x2_bit_teacher_384
</td>
</tr>
<tr>
<th>
45
</th>
<td>
resnetv2_152x2_bitm
</td>
</tr>
<tr>
<th>
46
</th>
<td>
resnetv2_152x2_bitm_in21k
</td>
</tr>
<tr>
<th>
47
</th>
<td>
resnetv2_152x4_bitm
</td>
</tr>
<tr>
<th>
48
</th>
<td>
resnetv2_152x4_bitm_in21k
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>The smaller ResNet models are both fast and sufficiently accurate in most settings. Unfortunately, the <code>resnet10t</code> and <code>resnet14t</code> models contain operations unsupported by the TensorFlow.js conversion script. We’ll instead use the <code>resnet18</code> model for our lightweight option.</p>
<p><strong>Inspect config for specific model</strong></p>
<p>Each model comes with a set of default configuration parameters. We must keep track of the <code>mean</code> and <code>std</code> values used to normalize the model input. Many pretrained models use the <a href="https://github.com/fastai/fastai/blob/de5982cfac41597d432e3c424da847d250f8c5e1/fastai/vision/core.py#L31">ImageNet normalization stats</a>, but others, like MobileViT, <a href="https://github.com/rwightman/pytorch-image-models/blob/d4ea5c7d7d55967a8bedbfbb58962131d8aba776/timm/models/mobilevit.py#L37">do not</a>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> timm.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> resnet</span>
<span id="cb9-2">resnet_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'resnet18'</span></span>
<span id="cb9-3">pd.DataFrame.from_dict(resnet.default_cfgs[resnet_model], orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>)</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
url
</th>
<td>
https://download.pytorch.org/models/resnet18-5c106cde.pth
</td>
</tr>
<tr>
<th>
num_classes
</th>
<td>
1000
</td>
</tr>
<tr>
<th>
input_size
</th>
<td>
(3, 224, 224)
</td>
</tr>
<tr>
<th>
pool_size
</th>
<td>
(7, 7)
</td>
</tr>
<tr>
<th>
crop_pct
</th>
<td>
0.875
</td>
</tr>
<tr>
<th>
interpolation
</th>
<td>
bilinear
</td>
</tr>
<tr>
<th>
mean
</th>
<td>
(0.485, 0.456, 0.406)
</td>
</tr>
<tr>
<th>
std
</th>
<td>
(0.229, 0.224, 0.225)
</td>
</tr>
<tr>
<th>
first_conv
</th>
<td>
conv1
</td>
</tr>
<tr>
<th>
classifier
</th>
<td>
fc
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>View available <a href="https://arxiv.org/abs/2201.03545">ConvNeXt</a> models</strong></p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">pd.DataFrame(timm.list_models(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'convnext*'</span>, pretrained<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>))</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
convnext_base
</td>
</tr>
<tr>
<th>
1
</th>
<td>
convnext_base_384_in22ft1k
</td>
</tr>
<tr>
<th>
2
</th>
<td>
convnext_base_in22ft1k
</td>
</tr>
<tr>
<th>
3
</th>
<td>
convnext_base_in22k
</td>
</tr>
<tr>
<th>
4
</th>
<td>
convnext_large
</td>
</tr>
<tr>
<th>
5
</th>
<td>
convnext_large_384_in22ft1k
</td>
</tr>
<tr>
<th>
6
</th>
<td>
convnext_large_in22ft1k
</td>
</tr>
<tr>
<th>
7
</th>
<td>
convnext_large_in22k
</td>
</tr>
<tr>
<th>
8
</th>
<td>
convnext_nano
</td>
</tr>
<tr>
<th>
9
</th>
<td>
convnext_small
</td>
</tr>
<tr>
<th>
10
</th>
<td>
convnext_small_384_in22ft1k
</td>
</tr>
<tr>
<th>
11
</th>
<td>
convnext_small_in22ft1k
</td>
</tr>
<tr>
<th>
12
</th>
<td>
convnext_small_in22k
</td>
</tr>
<tr>
<th>
13
</th>
<td>
convnext_tiny
</td>
</tr>
<tr>
<th>
14
</th>
<td>
convnext_tiny_384_in22ft1k
</td>
</tr>
<tr>
<th>
15
</th>
<td>
convnext_tiny_hnf
</td>
</tr>
<tr>
<th>
16
</th>
<td>
convnext_tiny_in22ft1k
</td>
</tr>
<tr>
<th>
17
</th>
<td>
convnext_tiny_in22k
</td>
</tr>
<tr>
<th>
18
</th>
<td>
convnext_xlarge_384_in22ft1k
</td>
</tr>
<tr>
<th>
19
</th>
<td>
convnext_xlarge_in22ft1k
</td>
</tr>
<tr>
<th>
20
</th>
<td>
convnext_xlarge_in22k
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p>The <code>convnext_nano</code> model is highly accurate for its size and is a good choice when compute power is less constrained.</p>
<p><strong>Inspect config for specific model</strong></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> timm.models <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> convnext</span>
<span id="cb11-2">convnext_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'convnext_nano'</span></span>
<span id="cb11-3">pd.DataFrame.from_dict(convnext.default_cfgs[convnext_model], orient<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'index'</span>)</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
url
</th>
<td>
https://github.com/rwightman/pytorch-image-models/releases/download/v0.1-rsb-weights/convnext_nano_d1h-7eb4bdea.pth
</td>
</tr>
<tr>
<th>
num_classes
</th>
<td>
1000
</td>
</tr>
<tr>
<th>
input_size
</th>
<td>
(3, 224, 224)
</td>
</tr>
<tr>
<th>
pool_size
</th>
<td>
(7, 7)
</td>
</tr>
<tr>
<th>
crop_pct
</th>
<td>
0.95
</td>
</tr>
<tr>
<th>
interpolation
</th>
<td>
bicubic
</td>
</tr>
<tr>
<th>
mean
</th>
<td>
(0.485, 0.456, 0.406)
</td>
</tr>
<tr>
<th>
std
</th>
<td>
(0.229, 0.224, 0.225)
</td>
</tr>
<tr>
<th>
first_conv
</th>
<td>
stem.0
</td>
</tr>
<tr>
<th>
classifier
</th>
<td>
head.fc
</td>
</tr>
<tr>
<th>
test_input_size
</th>
<td>
(3, 288, 288)
</td>
</tr>
<tr>
<th>
test_crop_pct
</th>
<td>
1.0
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p><strong>Select a model</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model_type = resnet</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># model_name = resnet_model</span></span></code></pre></div>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1">model_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> convnext</span>
<span id="cb13-2">model_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> convnext_model</span></code></pre></div>
<p><strong>Extract normalization stats from model config</strong></p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1">mean <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.default_cfgs[model_name][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mean'</span>]</span>
<span id="cb14-2">std <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model_type.default_cfgs[model_name][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'std'</span>]</span>
<span id="cb14-3">mean, std</span></code></pre></div>
<pre class="text"><code>((0.485, 0.456, 0.406), (0.229, 0.224, 0.225))</code></pre>
</section>
<section id="download-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="download-the-dataset">Download the Dataset</h2>
<p>The Kaggle API tool requires an API Key for a Kaggle account. Sign in or create a Kaggle account using the link below, then click the Create New API Token button.</p>
<ul>
<li><strong>Kaggle Account Settings:</strong> <a href="https://www.kaggle.com/me/account">https://www.kaggle.com/me/account</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/kaggle-create-new-api-token.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Kaggle will generate and download a <code>kaggle.json</code> file containing your username and new API token. Initialize the <code>creds</code> variable with the values for each.</p>
<p><strong>Enter Kaggle username and API token</strong></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1">creds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'{"username":"","key":""}'</span></span></code></pre></div>
<p><strong>Save Kaggle credentials if none are present</strong></p>
<ul>
<li><strong>Source:</strong> <a href="https://github.com/fastai/fastbook/blob/master/09_tabular.ipynb">https://github.com/fastai/fastbook/blob/master/09_tabular.ipynb</a></li>
</ul>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">cred_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'~/.kaggle/kaggle.json'</span>).expanduser()</span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save API key to a json file if it does not already exist</span></span>
<span id="cb17-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> cred_path.exists():</span>
<span id="cb17-4">    cred_path.parent.mkdir(exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb17-5">    cred_path.write_text(creds)</span>
<span id="cb17-6">    cred_path.chmod(<span class="bn" style="color: #AD0000;
background-color: null;
font-style: inherit;">0o600</span>)</span></code></pre></div>
<p><strong>Import Kaggle API</strong></p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> kaggle <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> api</span></code></pre></div>
<p><strong>Select a dataset</strong></p>
<p>Now that we have our Kaggle credentials set, we need to define the dataset and where to store it. I made three different-sized versions of the dataset available on Kaggle.</p>
<ul>
<li><a href="https://www.kaggle.com/datasets/innominate817/hagrid-classification-512p-no-gesture-150k">HaGRID Classification 512p no_gesture 150k</a>
<ul>
<li>Images: 154,816</li>
<li>Size: 4 GB</li>
</ul></li>
<li><a href="https://www.kaggle.com/datasets/innominate817/hagrid-classification-512p-no-gesture-300k">HaGRID Classification 512p no_gesture 300k</a>
<ul>
<li>Images: 309,632</li>
<li>Size: 8 GB</li>
</ul></li>
<li><a href="https://www.kaggle.com/datasets/innominate817/hagrid-classification-512p-no-gesture">HaGRID Classification 512p no_gesture</a>
<ul>
<li>Images: 619,264</li>
<li>Size: 15 GB</li>
</ul></li>
</ul>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1">dataset_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'hagrid-classification-512p-no-gesture-150k'</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataset_name = 'hagrid-classification-512p-no-gesture-300k'</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># dataset_name = 'hagrid-classification-512p-no-gesture'</span></span>
<span id="cb19-4"></span>
<span id="cb19-5">kaggle_dataset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'innominate817/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span></code></pre></div>
<p><strong>Define path to dataset</strong></p>
<p>We will use the default archive and data folders for the fastai library to store the compressed and uncompressed datasets.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1">archive_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> URLs.path()</span>
<span id="cb20-2">dataset_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> archive_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'../data'</span></span>
<span id="cb20-3">archive_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>archive_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.zip'</span>)</span>
<span id="cb20-4">dataset_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<p><strong>Define method to extract the dataset from an archive file</strong></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> file_extract(fname, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>):</span>
<span id="cb21-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"Extract `fname` to `dest` using `tarfile` or `zipfile`."</span></span>
<span id="cb21-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> dest <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">is</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>: dest <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(fname).parent</span>
<span id="cb21-4">    fname <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(fname)</span>
<span id="cb21-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span>   fname.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gz'</span>):  tarfile.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(fname, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r:gz'</span>).extractall(dest)</span>
<span id="cb21-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">elif</span> fname.endswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'zip'</span>): zipfile.ZipFile(fname     ).extractall(dest)</span>
<span id="cb21-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span>: <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">raise</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Unrecognized archive: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fname<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span></code></pre></div>
<p><strong>Download the dataset if it is not present</strong></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">not</span> archive_path.exists():</span>
<span id="cb22-2">    api.dataset_download_cli(kaggle_dataset, path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>archive_dir)</span>
<span id="cb22-3">    file_extract(fname<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>archive_path, dest<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>dataset_path)</span></code></pre></div>
</section>
<section id="inspect-the-dataset" class="level2">
<h2 class="anchored" data-anchor-id="inspect-the-dataset">Inspect the Dataset</h2>
<p>We can start inspecting the dataset once it finishes downloading.</p>
<p><strong>Inspect the dataset path</strong></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1">pd.DataFrame(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(dataset_path.ls()))</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
/home/innom-dt/.fastai/archive/../data/hagrid-classification-512p-no-gesture-150k/hagrid-classification-512p-no-gesture-150k
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Get image file paths</strong></p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1">img_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dataset_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span>dataset_name</span></code></pre></div>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1">files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> get_image_files(img_dir)</span>
<span id="cb25-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(files)</span></code></pre></div>
<pre class="text"><code>154816</code></pre>
<p><strong>Inspect files</strong></p>
<p>The dataset indicates the image class in the parent folder names.</p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1">pd.DataFrame([files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], files[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
/home/innom-dt/.fastai/archive/../data/hagrid-classification-512p-no-gesture-150k/hagrid-classification-512p-no-gesture-150k/stop/3ac51cf4-cd81-4803-a608-76a55b36df26.jpeg
</td>
</tr>
<tr>
<th>
1
</th>
<td>
/home/innom-dt/.fastai/archive/../data/hagrid-classification-512p-no-gesture-150k/hagrid-classification-512p-no-gesture-150k/two_up/d5a0a30d-92aa-4a7c-9621-1fed0e8f0b66.jpeg
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Inspect class folder names</strong></p>
<p>There are 19 class folders, and the dataset does not predefine a training-validation split.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1">folder_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [path.name <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> path <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> Path(img_dir).ls()]</span>
<span id="cb28-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'models'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> folder_names: </span>
<span id="cb28-3">    os.removedirs(img_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'models'</span>)</span>
<span id="cb28-4">    folder_names.remove(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'models'</span>)</span>
<span id="cb28-5">folder_names.sort()</span>
<span id="cb28-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Num classes: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(folder_names)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-7">pd.DataFrame(folder_names)</span></code></pre></div>
<pre class="text"><code>Num classes: 19</code></pre>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
</th>
<th>
0
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
call
</td>
</tr>
<tr>
<th>
1
</th>
<td>
dislike
</td>
</tr>
<tr>
<th>
2
</th>
<td>
fist
</td>
</tr>
<tr>
<th>
3
</th>
<td>
four
</td>
</tr>
<tr>
<th>
4
</th>
<td>
like
</td>
</tr>
<tr>
<th>
5
</th>
<td>
mute
</td>
</tr>
<tr>
<th>
6
</th>
<td>
no_gesture
</td>
</tr>
<tr>
<th>
7
</th>
<td>
ok
</td>
</tr>
<tr>
<th>
8
</th>
<td>
one
</td>
</tr>
<tr>
<th>
9
</th>
<td>
palm
</td>
</tr>
<tr>
<th>
10
</th>
<td>
peace
</td>
</tr>
<tr>
<th>
11
</th>
<td>
peace_inverted
</td>
</tr>
<tr>
<th>
12
</th>
<td>
rock
</td>
</tr>
<tr>
<th>
13
</th>
<td>
stop
</td>
</tr>
<tr>
<th>
14
</th>
<td>
stop_inverted
</td>
</tr>
<tr>
<th>
15
</th>
<td>
three
</td>
</tr>
<tr>
<th>
16
</th>
<td>
three2
</td>
</tr>
<tr>
<th>
17
</th>
<td>
two_up
</td>
</tr>
<tr>
<th>
18
</th>
<td>
two_up_inverted
</td>
</tr>
</tbody>

</table>
</div>
<hr>
<p><strong>Inspect one of the training images</strong></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PIL</span>
<span id="cb30-2">img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb30-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Class: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>parent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Image Dims: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-5">img</span></code></pre></div>
<pre class="text"><code>    Class: stop
    Image Dims: (512, 512)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_54_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="define-dataloaders" class="level2">
<h2 class="anchored" data-anchor-id="define-dataloaders">Define DataLoaders</h2>
<p>Next, we need to define the <a href="https://docs.fast.ai/vision.augment.html">Transforms</a> for the <a href="https://docs.fast.ai/vision.data.html#ImageDataLoaders">DataLoaders</a> object.</p>
<p><strong>Define target input dimensions</strong></p>
<p>The Unity project will take input from a webcam, which will likely not have a square aspect ratio. We can still train the models with a square aspect ratio, and training at <code>256x256</code> (65,536 pixels) is more efficient than training at <code>384x216</code> (82,944 pixels) for a 16:9 aspect ratio.</p>
<p>The ResNet and ConvNeXt models handle arbitrary input dimensions well. However, we must export some models like MobileViT with the exact input dimensions used for inference.</p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1">size_1_1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">256</span>)</span>
<span id="cb32-2">size_16_9 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">216</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">384</span>)</span>
<span id="cb32-3">size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size_1_1</span></code></pre></div>
<p><strong>Define Transforms</strong></p>
<p>We can leave most of the options in <a href="https://docs.fast.ai/vision.augment.html#aug_transforms"><code>aug_transforms</code></a> at their default values. The HaGRID dataset is diverse enough that we don’t need to add too much augmentation. However, we will disable the <code>max_rotate</code> option as orientation is relevant for gesture recognition.</p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1">item_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [Resize(size, method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ResizeMethod.Pad, pad_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>PadMode.Border)]</span>
<span id="cb33-2"></span>
<span id="cb33-3">batch_tfms <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb33-4">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>aug_transforms(</span>
<span id="cb33-5">        size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>size, </span>
<span id="cb33-6">        mult<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb33-7">        do_flip<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb33-8">        flip_vert<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb33-9">        max_rotate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>,</span>
<span id="cb33-10">        min_zoom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span>,</span>
<span id="cb33-11">        max_zoom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span>,</span>
<span id="cb33-12">        max_lighting<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb33-13">        max_warp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, </span>
<span id="cb33-14">        p_affine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>,</span>
<span id="cb33-15">        pad_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>PadMode.Border)</span>
<span id="cb33-16">]</span></code></pre></div>
<p><strong>Note:</strong> The fastai library automatically normalizes input for timm models as of version <a href="https://github.com/fastai/fastai/releases/tag/2.7.5">2.7.5</a>.</p>
<p><strong>Define batch size</strong></p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1">bs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span></span></code></pre></div>
<p><strong>Define DataLoaders object</strong></p>
<p>We can use the <a href="https://docs.fast.ai/vision.data.html#ImageDataLoaders.from_folder"><code>from_folder</code></a> method to instantiate the DataLoaders object.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1">dls <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ImageDataLoaders.from_folder(</span>
<span id="cb35-2">    path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>img_dir, </span>
<span id="cb35-3">    valid_pct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, </span>
<span id="cb35-4">    bs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bs, </span>
<span id="cb35-5">    item_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>item_tfms, </span>
<span id="cb35-6">    batch_tfms<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>batch_tfms</span>
<span id="cb35-7">)</span></code></pre></div>
<p><strong>Verify DataLoaders object</strong></p>
<p>Let’s verify the DataLoaders object works as expected before training a model.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1">dls.train.show_batch()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_66_0.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="finetune-the-model" class="level2">
<h2 class="anchored" data-anchor-id="finetune-the-model">Finetune the Model</h2>
<p>Now we can define the <a href="https://docs.fast.ai/learner.html#learner"><code>Learner</code></a> object and finetune the selected model.</p>
<p><strong>Define <a href="https://docs.fast.ai/metrics.html">metrics</a></strong></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1">metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [error_rate, accuracy]</span></code></pre></div>
<p><strong>Define Learner object</strong></p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1">learn <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> vision_learner(dls, model_name, metrics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>metrics)</span></code></pre></div>
<p><strong>Define model checkpoint file path</strong></p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1">checkpoint_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.pth"</span>)</span>
<span id="cb39-2">checkpoint_path</span></code></pre></div>
<pre class="text"><code>Path('hagrid-classification-512p-no-gesture-150k-convnext_nano.pth')</code></pre>
<p><strong>Load existing checkpoint (Optional)</strong></p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if checkpoint_path.exists():</span></span>
<span id="cb41-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     print("Loading checkpoint...")</span></span>
<span id="cb41-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     checkpoint = torch.load(checkpoint_path)</span></span>
<span id="cb41-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#     learn.model.load_state_dict(checkpoint)</span></span></code></pre></div>
<p><strong>Find learning rate</strong></p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1">suggested_lrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.lr_find()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_77_2.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Define learning rate</strong></p>
<p>We can use a slightly higher learning rate than the learning rate finder recommends to speed up training.</p>
<div class="sourceCode" id="cb43" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb43-1">lr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> suggested_lrs.valley<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span></span>
<span id="cb43-2">lr</span></code></pre></div>
<pre class="text"><code>0.003606793354265392</code></pre>
<p><strong>Define number of epochs</strong></p>
<p>We should not need to train for more than a few epochs.</p>
<div class="sourceCode" id="cb45" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb45-1">epochs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span></code></pre></div>
<p><strong>Define callbacks</strong></p>
<p>Training with mixed precision can significantly reduce training time on modern GPUs. However, the older GPUs on the free tiers for Google Colab and Kaggle will likely not benefit from it.</p>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1">cbs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [MixedPrecision()]</span></code></pre></div>
<p><strong>Fine tune model</strong></p>
<div class="sourceCode" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb47-1">learn.fine_tune(epochs, base_lr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lr, cbs<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cbs)</span></code></pre></div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
epoch
</th>
<th>
train_loss
</th>
<th>
valid_loss
</th>
<th>
error_rate
</th>
<th>
accuracy
</th>
<th>
time
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0
</td>
<td>
0.372442
</td>
<td>
0.189683
</td>
<td>
0.061299
</td>
<td>
0.938701
</td>
<td>
04:22
</td>
</tr>
</tbody>

</table>
</div>
<div style="overflow-x:auto; overflow-y: auto; max-height:500px">

<table class="dataframe table table-sm table-striped small">
<thead>
<tr>
<th>
epoch
</th>
<th>
train_loss
</th>
<th>
valid_loss
</th>
<th>
error_rate
</th>
<th>
accuracy
</th>
<th>
time
</th>
</tr>
</thead>
<tbody>
<tr>
<td>
0
</td>
<td>
0.096614
</td>
<td>
0.054749
</td>
<td>
0.017214
</td>
<td>
0.982786
</td>
<td>
05:29
</td>
</tr>
<tr>
<td>
1
</td>
<td>
0.048555
</td>
<td>
0.033598
</td>
<td>
0.010012
</td>
<td>
0.989988
</td>
<td>
05:34
</td>
</tr>
<tr>
<td>
2
</td>
<td>
0.030899
</td>
<td>
0.018264
</td>
<td>
0.005555
</td>
<td>
0.994445
</td>
<td>
05:32
</td>
</tr>
<tr>
<td>
3
</td>
<td>
0.018128
</td>
<td>
0.015447
</td>
<td>
0.004877
</td>
<td>
0.995123
</td>
<td>
05:30
</td>
</tr>
</tbody>

</table>
</div>
<p><strong>Save model checkpoint</strong></p>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1">torch.save(learn.model.state_dict(), checkpoint_path)</span></code></pre></div>
<p><strong>Make predictions for a group of images</strong></p>
<div class="sourceCode" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb49-1">learn.show_results()</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_89_2.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Define an Interpretation object</strong></p>
<p>Once the model finishes training, we can create an <a href="https://docs.fast.ai/interpret.html#interpretation">Interpretation</a> object to see where it struggles. An Interpretation object is also helpful to see if there are any mislabeled/low-quality training images.</p>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1">interp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Interpretation.from_learner(learn)</span></code></pre></div>
<p><strong>Plot top losses</strong></p>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1">interp.plot_top_losses(k<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span></code></pre></div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_93_2.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="clean-dataset-optional" class="level2">
<h2 class="anchored" data-anchor-id="clean-dataset-optional">Clean Dataset (Optional)</h2>
<p>I spent some time cleaning the modified HaGRID datasets, but there are likely some training images that should still be moved or deleted. If the model accuracy is insufficient, consider using the <a href="https://docs.fast.ai/vision.widgets.html#imageclassifiercleaner"><code>ImageClassifierCleaner</code></a> widget to edit the dataset.</p>
<p><strong>Import fastai <a href="https://docs.fast.ai/vision.widgets.html#imageclassifiercleaner">ImageClassifierCleaner</a></strong></p>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># from fastai.vision.widgets import ImageClassifierCleaner</span></span></code></pre></div>
<p><strong>Mark images to delete or move</strong></p>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cleaner = ImageClassifierCleaner(learn)</span></span>
<span id="cb53-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cleaner</span></span></code></pre></div>
<p><strong>Inspect samples to change</strong></p>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cleaner.change()</span></span></code></pre></div>
<p><strong>Move selected samples to target class folder</strong></p>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb55-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for idx,cat in cleaner.change(): shutil.move(str(cleaner.fns[idx]), img_dir/cat)</span></span></code></pre></div>
<p><strong>Inspect samples to delete</strong></p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb56-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cleaner.delete()</span></span></code></pre></div>
<p><strong>Delete selected samples</strong></p>
<div class="sourceCode" id="cb57" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb57-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># for idx in cleaner.delete(): cleaner.fns[idx].unlink()</span></span></code></pre></div>
<p><strong>Note:</strong> Restart the notebook and finetune the trained model after cleaning the dataset.</p>
</section>
<section id="test-the-model" class="level2">
<h2 class="anchored" data-anchor-id="test-the-model">Test the Model</h2>
<p>Next, we will test the model on a single image.</p>
<p><strong>Select a test image</strong></p>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb58-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PIL</span></code></pre></div>
<div class="sourceCode" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb59-1">test_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> files[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb59-2">test_file.parent.name, test_file.name</span></code></pre></div>
<pre class="text"><code>('stop', '3ac51cf4-cd81-4803-a608-76a55b36df26.jpeg')</code></pre>
<div class="sourceCode" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb61-1">test_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.Image.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(test_file)</span>
<span id="cb61-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Source image size: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>test_img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb61-3">test_img</span></code></pre></div>
<pre class="text"><code>Source image size: (512, 512)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_112_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Set target size</strong></p>
<p>We will test the model with the target inference resolution to verify it performs as desired.</p>
<div class="sourceCode" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb63-1">size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> size_16_9</span>
<span id="cb63-2">size</span></code></pre></div>
<pre class="text"><code>(216, 384)</code></pre>
<p><strong>Option 1: Pad to target input dims</strong></p>
<div class="sourceCode" id="cb65" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb65-1">padded_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PIL.ImageOps.pad(test_img, [size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]], method<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>PIL.Image.Resampling.BICUBIC)</span>
<span id="cb65-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Padded image size: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>padded_img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb65-3">padded_img</span></code></pre></div>
<pre class="text"><code>Padded image size: (384, 216)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_117_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Option 2: Stretch to target input dims</strong></p>
<div class="sourceCode" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb67-1">stretched_img <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> test_img.resize([size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], size[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])</span>
<span id="cb67-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Stretched image size: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>stretched_img<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb67-3">stretched_img</span></code></pre></div>
<pre class="text"><code>Stretched image size: (384, 216)</code></pre>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/images/output_119_1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Make a prediction on padded image using a <a href="https://docs.fast.ai/vision.core.html#PILImage">fastai.vision.core.PILImage</a></strong></p>
<div class="sourceCode" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb69-1">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage(padded_img))</span>
<span id="cb69-2">pred, pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span></code></pre></div>
<pre class="text"><code>    (('stop',
      TensorBase(13),
      TensorBase([5.6481e-08, 2.9167e-09, 1.7013e-08, 1.0619e-07, 7.0342e-09, 4.3362e-10,
              1.9056e-08, 7.8481e-07, 1.9450e-08, 5.0064e-06, 3.8272e-09, 8.2519e-11,
              4.3597e-08, 9.9999e-01, 2.3984e-08, 1.0935e-08, 2.4180e-09, 2.1497e-08,
              5.9654e-10])),
     TensorBase(1.0000))</code></pre>
<p><strong>Make a prediction on stretched image using a <a href="https://docs.fast.ai/vision.core.html#PILImage">fastai.vision.core.PILImage</a></strong></p>
<div class="sourceCode" id="cb71" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb71-1">pred <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.predict(PILImage(stretched_img))</span>
<span id="cb71-2">pred, pred[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span></code></pre></div>
<pre class="text"><code>(('stop',
  TensorBase(13),
  TensorBase([1.3940e-06, 4.6373e-07, 1.3970e-04, 6.4621e-07, 6.8510e-08, 9.9468e-09,
          1.1748e-07, 1.3881e-06, 1.1672e-06, 3.1076e-04, 9.0491e-09, 7.7261e-10,
          8.4245e-08, 9.9954e-01, 1.7898e-07, 2.6569e-08, 3.4712e-08, 2.2750e-08,
          6.5716e-09])),
 TensorBase(0.9995))</code></pre>
<p>When we are satisfied with the model, we can start preparing for implementing it in TensorFlow.js. We will need to apply some of the preprocessing and post-processing that fastai applies automatically.</p>
<p><strong>Inspect the <code>after_item</code> pipeline</strong></p>
<p>We do not need to worry about padding the input image as both the ResNet and ConvNeXt models handle arbitrary input dimensions.</p>
<div class="sourceCode" id="cb73" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb73-1">learn.dls.after_item</span></code></pre></div>
<pre class="text"><code>Pipeline: Resize -- {'size': (256, 256), 'method': 'pad', 'pad_mode': 'border', 'resamples': (&lt;Resampling.BILINEAR: 2&gt;, &lt;Resampling.NEAREST: 0&gt;), 'p': 1.0} -&gt; ToTensor</code></pre>
<p><strong>Inspect the <code>after_batch</code> pipeline</strong></p>
<p>The <code>after_batch</code> pipeline first scales the image color channel values from <code>[0,255]</code> to <code>[0,1]</code>. We will need to do the same for the TensorFlow.js plugin. We will also need to normalize the input image with the relevant normalization stats.</p>
<div class="sourceCode" id="cb75" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb75-1">learn.dls.after_batch</span></code></pre></div>
<pre class="text"><code>Pipeline: IntToFloatTensor -- {'div': 255.0, 'div_mask': 1} -&gt; Flip -- {'size': (256, 256), 'mode': 'bilinear', 'pad_mode': 'border', 'mode_mask': 'nearest', 'align_corners': True, 'p': 0.5} -&gt; Brightness -- {'max_lighting': 0.2, 'p': 1.0, 'draw': None, 'batch': False} -&gt; Normalize -- {'mean': tensor([[[[0.4850]],

         [[0.4560]],

         [[0.4060]]]], device='cuda:0'), 'std': tensor([[[[0.2290]],

         [[0.2240]],

         [[0.2250]]]], device='cuda:0'), 'axes': (0, 2, 3)}</code></pre>
<p><strong>Convert image to tensor</strong></p>
<p>We’ll first prepare the input image by converting it to a tensor, batching it, and moving it to the GPU.</p>
<div class="sourceCode" id="cb77" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb77-1">img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor(padded_img).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>().unsqueeze(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).cuda()</span>
<span id="cb77-2">img_tensor.shape, img_tensor</span></code></pre></div>
<pre class="text"><code>    (torch.Size([1, 3, 216, 384]),
     tensor([[[[0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               ...,
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.]],
     
              [[0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               ...,
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.]],
     
              [[0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               ...,
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.],
               [0., 0., 0.,  ..., 0., 0., 0.]]]], device='cuda:0'))</code></pre>
<p><strong>Scale tensor values</strong></p>
<p>We’ll then scale the values from [0, 255] to [0, 1].</p>
<div class="sourceCode" id="cb79" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb79-1">scaled_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> img_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">255</span></span></code></pre></div>
<p>Next, we’ll prepare the normalization values.</p>
<p><strong>Prepare mean values</strong></p>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb80-1">mean_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor(mean).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).unsqueeze(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).cuda()</span>
<span id="cb80-2">mean_tensor.shape, mean_tensor</span></code></pre></div>
<pre class="text"><code>    (torch.Size([1, 3, 1, 1]),
     tensor([[[[0.4850]],
     
              [[0.4560]],
     
              [[0.4060]]]], device='cuda:0'))</code></pre>
<p><strong>Prepare std_dev values</strong></p>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb82-1">std_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor(std).view(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).permute(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).unsqueeze(dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).cuda()</span>
<span id="cb82-2">std_tensor.shape, std_tensor</span></code></pre></div>
<pre class="text"><code>    (torch.Size([1, 3, 1, 1]),
     tensor([[[[0.2290]],
     
              [[0.2240]],
     
              [[0.2250]]]], device='cuda:0'))</code></pre>
<p>We can integrate the normalization preprocessing step and the Softmax postprocessing function into the exported model by creating a custom forward method. This way, we don’t need to store the normalization stats for each model in a separate file.</p>
<p><strong>Create a backup of the default model forward function</strong></p>
<p>We first need to create a backup of the current forward method.</p>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb84-1">origin_forward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model.forward</span></code></pre></div>
<p><strong>Define custom forward function for exporting the model</strong></p>
<p>The custom forward method will normalize the input tensor, feed it to the original forward method and pass the raw output through a Softmax function.</p>
<div class="sourceCode" id="cb85" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb85-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">def</span> forward_export(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>, x):</span>
<span id="cb85-2">    </span>
<span id="cb85-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize input</span></span>
<span id="cb85-4">    normalized_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean_tensor) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> std_tensor</span>
<span id="cb85-5">    </span>
<span id="cb85-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get raw model output</span></span>
<span id="cb85-7">    preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> origin_forward(normalized_tensor)</span>
<span id="cb85-8">    </span>
<span id="cb85-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply SoftMax function</span></span>
<span id="cb85-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> torch.nn.functional.softmax(preds, dim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<p><strong>Note:</strong> This custom forward method might also be a suitable spot to resize input images for models like MobileViT with fixed input dimensions.</p>
<p><strong>Add custom forward function to model</strong></p>
<p>We then add the custom forward method to the model using <a href="https://machinelearningmastery.com/monkey-patching-python-code/">monkey patching</a>.</p>
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb86-1">learn.model.forward_export <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> forward_export.<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__get__</span>(learn.model)</span></code></pre></div>
<p><strong>Test custom forward function</strong></p>
<p>Now we can test the custom forward method to verify it returns the expected prediction.</p>
<div class="sourceCode" id="cb87" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb87-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> torch.no_grad():</span>
<span id="cb87-2">    preds <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model.forward_export(scaled_tensor)</span>
<span id="cb87-3">preds.cpu().argmax(), preds.cpu()</span></code></pre></div>
<pre class="text"><code>    (TensorBase(13),
     TensorBase([[1.8443e-08, 1.8163e-09, 1.3866e-08, 2.6368e-08, 1.0109e-09, 6.3904e-10,
              2.6506e-09, 7.7717e-09, 3.7365e-10, 1.0260e-06, 9.1487e-11, 4.4600e-11,
              4.3488e-10, 1.0000e+00, 1.8129e-08, 3.4815e-09, 3.7684e-10, 1.1454e-08,
              1.1459e-10]]))</code></pre>
<p><strong>Get the class labels</strong></p>
<div class="sourceCode" id="cb89" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb89-1">learn.dls.vocab</span></code></pre></div>
<pre class="text"><code>    ['call', 'dislike', 'fist', 'four', 'like', 'mute', 'no_gesture', 'ok', 'one', 'palm', 'peace', 'peace_inverted', 'rock', 'stop', 'stop_inverted', 'three', 'three2', 'two_up', 'two_up_inverted']</code></pre>
<p><strong>Get the predicted class label</strong></p>
<div class="sourceCode" id="cb91" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb91-1">learn.dls.vocab[preds.cpu().argmax()]</span></code></pre></div>
<pre class="text"><code>    'stop'</code></pre>
<p><strong>Replace model forward function with custom function</strong></p>
<p>Lastly, we need to replace the current forward method with the custom one before exporting the model to ONNX.</p>
<div class="sourceCode" id="cb93" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb93-1">learn.model.forward <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> learn.model.forward_export</span></code></pre></div>
</section>
<section id="export-the-model" class="level2">
<h2 class="anchored" data-anchor-id="export-the-model">Export the Model</h2>
<p>Now we can begin the process of converting the PyTorch model to TensorFlow.js.</p>
<p><strong>Define ONNX opset version</strong></p>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb94-1">opset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span></span></code></pre></div>
<p><strong>Define ONNX file name</strong></p>
<div class="sourceCode" id="cb95" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb95-1">onnx_file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>learn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>arch<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-opset</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>opset<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.onnx"</span></span>
<span id="cb95-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(onnx_file_name)</span></code></pre></div>
<pre><code>hagrid-classification-512p-no-gesture-150k-convnext_nano-opset15.onnx</code></pre>
<p><strong>Export trained model to ONNX</strong></p>
<p>We will also unlock the input dimensions for the model to give ourselves more flexibility in Unity. This setting will not matter for models like MobileViT that require exact input dimensions.</p>
<div class="sourceCode" id="cb97" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb97-1">torch.onnx.export(learn.model.cpu(),</span>
<span id="cb97-2">                  batched_tensor,</span>
<span id="cb97-3">                  onnx_file_name,</span>
<span id="cb97-4">                  export_params<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb97-5">                  opset_version<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>opset,</span>
<span id="cb97-6">                  do_constant_folding<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb97-7">                  input_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>],</span>
<span id="cb97-8">                  output_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'output'</span>],</span>
<span id="cb97-9">                  dynamic_axes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'input'</span>: {<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'height'</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> : <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'width'</span>}}</span>
<span id="cb97-10">                 )</span></code></pre></div>
<p><strong>Import dependencies for TensorFlow.js conversion</strong></p>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb98-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> onnx</span>
<span id="cb98-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scc4onnx <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> order_conversion</span>
<span id="cb98-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnxsim <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> simplify</span>
<span id="cb98-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> onnx_tf.backend <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> prepare</span></code></pre></div>
<p><strong>Load ONNX model</strong></p>
<div class="sourceCode" id="cb99" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb99-1">onnx_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx.load(onnx_file_name)</span></code></pre></div>
<p><strong>Inspect model input</strong></p>
<p>Looking at the input layer for the ONNX model, we can see that it is channels-first. However, the channels-last format is more straightforward for preparing model input in JavaScript. We can switch the model input to channels-last format using the <a href="https://pypi.org/project/scc4onnx/">scc4onnx</a> package.</p>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb100-1">onnx_model.graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<pre class="text"><code>name: "input"
type {
  tensor_type {
    elem_type: 1
    shape {
      dim {
        dim_value: 1
      }
      dim {
        dim_value: 3
      }
      dim {
        dim_param: "height"
      }
      dim {
        dim_param: "width"
      }
    }
  }
}</code></pre>
<p><strong>Get input name</strong></p>
<div class="sourceCode" id="cb102" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb102-1">input_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> onnx_model.graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].name</span>
<span id="cb102-2">input_name</span></code></pre></div>
<pre class="text"><code>'input'</code></pre>
<p><strong>Convert model input to channels-last format</strong></p>
<div class="sourceCode" id="cb104" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb104-1">onnx_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> order_conversion(</span>
<span id="cb104-2">    onnx_graph<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>onnx_model,</span>
<span id="cb104-3">    input_op_names_and_order_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>input_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>: [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]},</span>
<span id="cb104-4">    non_verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb104-5">)</span></code></pre></div>
<p><strong>Inspect updated model input</strong></p>
<p>If we look at the input layer again, we can see it is now in channels-last format.</p>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb105-1">onnx_model.graph.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">input</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span></code></pre></div>
<pre class="text"><code>name: "input"
type {
  tensor_type {
    elem_type: 1
    shape {
      dim {
        dim_value: 1
      }
      dim {
        dim_param: "height"
      }
      dim {
        dim_param: "width"
      }
      dim {
        dim_value: 3
      }
    }
  }
}</code></pre>
<p><strong>Simplify ONNX model</strong></p>
<p>The ONNX models generated by PyTorch are not always the most concise. We can use the <a href="https://pypi.org/project/onnx-simplifier/">onnx-simplifier</a> package to tidy up the exported model. This step is entirely optional.</p>
<div class="sourceCode" id="cb107" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb107-1">onnx_model, check <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> simplify(onnx_model)</span>
<span id="cb107-2">check</span></code></pre></div>
<pre class="text"><code>True</code></pre>
<p><strong>Prepare ONNX model for Tensorflow Backend</strong></p>
<p>Next, we need to convert the ONNX model to an internal representation of the computational graph.</p>
<div class="sourceCode" id="cb109" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb109-1">tf_rep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prepare(onnx_model)</span></code></pre></div>
<p><strong>Define path for TensorFlow <a href="https://www.tensorflow.org/guide/saved_model">saved model</a> directory</strong></p>
<div class="sourceCode" id="cb110" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb110-1">tf_model_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"./</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>onnx_file_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb110-2">tf_model_dir</span></code></pre></div>
<pre class="text"><code>'./hagrid-classification-512p-no-gesture-150k-convnext_nano-opset15'</code></pre>
<p>We can now export the internal representation to a Tensorflow proto file.</p>
<p><strong>Export backend representation to a Tensorflow proto file</strong></p>
<div class="sourceCode" id="cb112" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb112-1">tf_rep.export_graph(tf_model_dir)</span></code></pre></div>
<p><strong>Define directory path to store tfjs model files</strong></p>
<div class="sourceCode" id="cb113" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb113-1">tfjs_model_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tf_model_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-tfjs-uint8"</span></span>
<span id="cb113-2">tfjs_model_dir</span></code></pre></div>
<pre class="text"><code>'./hagrid-classification-512p-no-gesture-150k-convnext_nano-opset15-tfjs-uint8'</code></pre>
<p><strong>Define arguments for tfjs converter script</strong></p>
<p>The TensorFlow.js conversion script provides a few quantization options. These can significantly reduce the model file size. The file size matters since users download the models when loading the web demo. However, using the quantization options on small models like MobileNet can hurt accuracy.</p>
<div class="sourceCode" id="cb115" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb115-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> IPython.display <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Markdown, display</span></code></pre></div>
<div class="sourceCode" id="cb116" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb116-1">tfjs_convert_command <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"""tensorflowjs_converter</span></span>
<span id="cb116-2"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 --input_format=tf_saved_model </span></span>
<span id="cb116-3"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 --output_format=tfjs_graph_model </span></span>
<span id="cb116-4"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 --signature_name=serving_default </span></span>
<span id="cb116-5"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 --saved_model_tags=serve </span></span>
<span id="cb116-6"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 "</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tf_model_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">" </span></span>
<span id="cb116-7"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 "</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tfjs_model_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb116-8"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 "--quantize_uint8"</span></span>
<span id="cb116-9"><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">                 """</span></span>
<span id="cb116-10">tfjs_convert_command <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>.join(tfjs_convert_command.split())</span>
<span id="cb116-11">display(Markdown(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"```bash</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tfjs_convert_command<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">```"</span>))</span></code></pre></div>
<div class="sourceCode" id="cb117" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb117-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tensorflowjs_converter</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--input_format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tf_saved_model <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output_format</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>tfjs_graph_model <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--signature_name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>serving_default <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--saved_model_tags</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>serve <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./hagrid-classification-512p-no-gesture-150k-convnext_nano-opset15"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./hagrid-classification-512p-no-gesture-150k-convnext_nano-opset15-tfjs-uint8"</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--quantize_uint8"</span></span></code></pre></div>
<p><strong>Export SavedModel to TFJS format</strong></p>
<p>The conversion script will create a new folder containing a <code>model.json</code> file describing the model architecture and some BIN files storing the model weights.</p>
<div class="sourceCode" id="cb118" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb118-1"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exporting TensorFlow SavedModel to TensorFlow.js Graph model..."</span>)</span>
<span id="cb118-2">conversion_result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>sx $tfjs_convert_command</span>
<span id="cb118-3"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>.join(conversion_result))</span></code></pre></div>
</section>
<section id="export-inference-data" class="level2">
<h2 class="anchored" data-anchor-id="export-inference-data">Export Inference Data</h2>
<p>We can export the list of class labels to a JSON file and import it into the Unity project. That way, we don’t have to hardcode them, and we can easily swap in models trained on different datasets.</p>
<div class="sourceCode" id="cb119" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb119-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span></code></pre></div>
<p><strong>Export class labels</strong></p>
<div class="sourceCode" id="cb120" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb120-1">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(learn.dls.vocab)</span>
<span id="cb120-2">labels</span></code></pre></div>
<pre><code>['call',
 'dislike',
 'fist',
 'four',
 'like',
 'mute',
 'no_gesture',
 'ok',
 'one',
 'palm',
 'peace',
 'peace_inverted',
 'rock',
 'stop',
 'stop_inverted',
 'three',
 'three2',
 'two_up',
 'two_up_inverted']</code></pre>
<div class="sourceCode" id="cb122" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb122-1">class_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"classes"</span>: labels}</span>
<span id="cb122-2">class_labels_file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>dataset_path<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-classes.json"</span></span>
<span id="cb122-3"></span>
<span id="cb122-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(class_labels_file_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"w"</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> write_file:</span>
<span id="cb122-5">    json.dump(class_labels, write_file)</span></code></pre></div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this post, we finetuned an image classifier from the timm library using fastai and exported it to TensorFlow.js. We started by installing and importing the necessary dependencies, then selected a model to use and downloaded a dataset to train it. After inspecting the dataset, we defined data loaders to use for training. Finally, we finetuned and exported the model. We also demonstrated how to clean the dataset to improve training. With this completed, we are ready to move on to Part 2 of this tutorial series, where we will create a TensorFlow.js plugin for the Unity game engine.</p>
<p><strong>Next:</strong> <a href="../part-2/">In-Browser Hand Gesture Recognition for Unity with Fastai and TensorFlow.js Pt. 2</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/tensorflow-js-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>fastai</category>
  <category>unity</category>
  <category>tensorflow</category>
  <category>webgl</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/tensorflow-js-unity-tutorial/part-1/index.html</guid>
  <pubDate>Tue, 04 Oct 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/images/empty.gif" medium="image" type="image/gif"/>
</item>
<item>
  <title>Real-Time Object Detection in Unity With ONNX and DirectML Pt. 2</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Create New Project</li>
<li>Import Assets</li>
<li>Allow Unsafe Code</li>
<li>Create Processing Shader</li>
<li>Create Object Detector Script</li>
<li>Set up Unity Scene</li>
<li>Test in Editor</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../../icevision-openvino-unity-tutorial/part-1/">Training Tutorial</a>: Train a hand gesture classifier using fastai and export it to TensorFlow.js.</li>
<li><a href="../part-1/">Part 1</a>: Create a dynamic link library (DLL) file in Visual Studio to perform object detection with a YOLOX model using ONNX Runtime and DirectML.</li>
<li><a href="../part-2/">Part 2</a>: Perform object detection in a Unity project with ONNX Runtime and DirectML.</li>
<li><a href="https://github.com/cj-mills/onnx-directml-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In Part 2 of this tutorial series, we will integrate our DLL file into a Unity project to perform real-time object detection. We will start by creating a new Unity project and importing the necessary assets. Then, we will allow unsafe code in the project to share input data with the DLL. Next, we will create a processing shader and an object detector script to handle object detection in our Unity project. Finally, we will set up the Unity scene and test the object detection model in the Unity editor. By the end of this post, you will have a working real-time object detection system in Unity for Windows.</p>
<blockquote class="blockquote">
<p><strong>Important:</strong> This post assumes you already have <a href="https://unity3d.com/get-unity/download">Unity Hub</a> on your system. Check out <a href="../../fastai-to-unity-tutorial/part-2/#set-up-unity-hub">this section</a> from a previous tutorial if this is not the case (<a href="../../fastai-to-unity-tutorial/part-2/#set-up-unity-hub">link</a>).</p>
</blockquote>
</section>
<section id="create-new-project" class="level2">
<h2 class="anchored" data-anchor-id="create-new-project">Create New Project</h2>
<p>Open the Unity Hub and click New Project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-hub-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the target editor version from the Editor Version dropdown menu. We’ll use Unity 2022 for this post, but the current LTS release should also work fine.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-hub-new-project-select-unity-version.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the <code>2D Core</code> template.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-hub-new-project-select-2D-template.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Pick a name for the project and a location for the project folder before clicking <code>Create Project</code> in the lower right-hand corner.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-hub-new-project-name-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="import-assets" class="level2">
<h2 class="anchored" data-anchor-id="import-assets">Import Assets</h2>
<p>Once the project loads, we’ll store the DLL files from part 2 in a new folder called <code>Plugins</code>. Right-click a space in the Assets section and select <code>Create → Folder</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The DLL targets 64-bit x86 architectures, so we need to place the DLL files in a subfolder named <code>x86_64</code>.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1DnSJDOUbAMH4nONJ0Nh__xEmlqqsSAKy?usp=sharing">Plugins Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-plugins-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<blockquote class="blockquote">
<p><strong>Note:</strong> You can place the <code>Plugins</code> folder inside another folder if needed.</p>
</blockquote>
<p>Copy all the DLL files into the <code>Assets/Plugins/x86_64</code> folder. We then need to close and reopen the Unity Editor to load the plugin files.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-onnx-plugins-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>After restarting the Unity Editor, create a new folder called <code>Colormaps</code> to store the JSON file from the <a href="../../icevision-openvino-unity-tutorial/part-1/#generate-colormap">training tutorial</a>.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1rs2eD9_3Tyg4ADLbF6CNqwRdnhpsiHgk?usp=sharing">Colormaps Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-colormaps-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We’ll place any test images into a new folder called <code>Images</code>.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1jHp3nTw8bRhk9es-osSfCx-B9ga4pt1G?usp=sharing">Images Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-import-image-assets.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Next, we’ll create a folder to store the ONNX models. We need to place the <code>.onnx</code> files in a <a href="https://docs.unity3d.com/Manual/StreamingAssets.html">StreamingAssets</a> folder to include them in project builds. Create a new folder named <code>StreamingAssets</code>. We’ll place each model file in a separate folder and put those in a new subfolder called <code>ONNXModels</code> to keep things organized.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1r543Rs85Qs78_iaP5_npY0Oi2cC5BLdc?usp=sharing">ONNXModels Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-onnx-models-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="allow-unsafe-code" class="level2">
<h2 class="anchored" data-anchor-id="allow-unsafe-code">Allow Unsafe Code</h2>
<p>Rather than copying the input image from Unity to the plugin, we’ll pass a pointer to the pixel data. First, we need to allow unsafe code for the Unity project. Select <code>Edit → Project Settings...</code> from the top menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-open-project-settings.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>Player → Other Settings</code> dropdown and scroll down to the <code>Allow 'unsafe' Code</code> checkbox. Enable the setting and close the Project Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-allow-unsafe-code.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can start coding.</p>
</section>
<section id="create-processing-shader" class="level2">
<h2 class="anchored" data-anchor-id="create-processing-shader">Create Processing Shader</h2>
<p>The input image gets flipped upside down when we send it to the plugin. We can pre-flip the image in a <a href="https://docs.unity3d.com/Manual/class-ComputeShader.html">Compute Shader</a>. We’ll add the Compute Shader in a new folder called <code>Shaders</code>. Right-click a space in the <code>Shaders</code> folder and select <code>Create → Shader → Compute Shader</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-compute-shader.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the Compute Shader <code>ProcessingShader</code> and open it in the code editor.</p>
<p><strong>Default Compute Shader Code</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each #kernel tells which function to compile; you can have many kernels</span></span>
<span id="cb1-2">#pragma kernel CSMain</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a RenderTexture with enableRandomWrite flag and set it</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with cs.SetTexture</span></span>
<span id="cb1-6">RWTexture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb1-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CSMain</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb1-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb1-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">: insert actual code here!</span></span>
<span id="cb1-12"></span>
<span id="cb1-13">    Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb1-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We need to add a new <code>Texture2D</code> variable to store the pixel data for the input image. We’ll remove the default method and create a new one called <code>FlipXAxis</code>. Replace the default method name in the <code>#pragma kernel</code> line at the top.</p>
<p>We need the input image height for the flip operation, which we can access with the <a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/sm5-object-texture2d-getdimensions">Texture2D::GetDimensions</a> function.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each #kernel tells which function to compile; you can have many kernels</span></span>
<span id="cb2-2">#pragma kernel FlipXAxis</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The pixel data for the input image</span></span>
<span id="cb2-5">Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The pixel data for the processed image</span></span>
<span id="cb2-7">RWTexture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-8"></span>
<span id="cb2-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the image around the x-axis</span></span>
<span id="cb2-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb2-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FlipXAxis</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the InputImage width</span></span>
<span id="cb2-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the InputImage height</span></span>
<span id="cb2-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the dimensions of the InputImage</span></span>
<span id="cb2-18">    InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDimensions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-19"></span>
<span id="cb2-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the y value for the pixel coordinates</span></span>
<span id="cb2-21">    int2 coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-22">    Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="create-object-detector-script" class="level2">
<h2 class="anchored" data-anchor-id="create-object-detector-script">Create Object Detector Script</h2>
<p>We’ll store the C# script that interacts with the plugin in a new <code>Scripts</code> folder. Right-click a space inside it and select <code>Create → C# Script</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-c-sharp-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the script <code>ObjectDetector</code> and open it in the code editor.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-object-detector-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Default script code</strong></p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ObjectDetector <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> MonoBehaviour</span>
<span id="cb3-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb3-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-10">        </span>
<span id="cb3-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-12"></span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update is called once per frame</span></span>
<span id="cb3-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb3-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-16">        </span>
<span id="cb3-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Add required namespaces</strong></p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system?view=net-5.0">System</a>: Contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.UI.html">UnityEngine.UI</a>: Provides access to UI elements.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.render-pipelines.core@5.9/api/UnityEngine.Rendering.html">UnityEngine.Rendering</a>: Provides access to the elements of the rendering pipeline.</li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices?view=net-6.0">System.Runtime.InteropServices</a>: Provides a wide variety of members that support COM interop and platform invoke services.</li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system.io?view=net-6.0">System.IO</a>: Allows reading and writing to files and data streams.</li>
</ul>
<hr>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rendering</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InteropServices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Add code to copy <code>DirectML.dll</code> file to editor folder</strong></p>
<p>We must copy the <code>DirectML.dll</code> file from the Plugins folder to the parent folder for the Unity Editor application to use DirectML in the Editor. We’ll also need to copy that file to the build folder when building the Unity project. We can handle both steps automatically in code.</p>
<p>We can obtain the path to the current Unity Editor from the <a href="https://docs.unity3d.com/ScriptReference/EditorApplication-applicationPath.html"><code>EditorApplication.applicationpath</code></a> variable.</p>
<p>Unity provides an <a href="https://docs.unity3d.com/Manual/RunningEditorCodeOnLaunch.html"><code>InitializeOnLoad</code></a> attribute to run code in the Unity Editor without requiring action from the user. This attribute requires the <a href="https://docs.unity3d.com/ScriptReference/UnityEditor.html"><code>UnityEditor</code></a> namespace. We can only use this while in the Editor, so we need to wrap the code in <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives#conditional-compilation">Conditional compilation</a> preprocessor directives. We’ll place this code right below the namespaces.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Startup</span>
<span id="cb5-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Startup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb5-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get all files named "DirectML.dll" in the Assets directory</span></span>
<span id="cb5-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./Assets/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchOption<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AllDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through each found file</span></span>
<span id="cb5-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb5-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the file is in the "x86_64" folder</span></span>
<span id="cb5-15">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb5-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-17">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the file path for the Editor application</span></span>
<span id="cb5-18">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> editorPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> EditorApplication<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">applicationPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-19">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the parent folder for the Editor application</span></span>
<span id="cb5-20">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> editorDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetParent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>editorPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToString</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb5-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define target file path</span></span>
<span id="cb5-22">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> targetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{editorDir}/DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-23">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only copy the file to the Editor application folder if it is not already present</span></span>
<span id="cb5-24">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Copy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb5-25">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-26">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb5-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span></code></pre></div>
<p>We use the <code>UNITY_EDITOR</code> <a href="https://docs.unity3d.com/Manual/PlatformDependentCompilation.html">scripting symbol</a> to check whether we are in the Unity Editor. We are in the Editor, so it returns true, and the code executes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity_scripting_symbol_in_editor.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>If we check if we are not in the Unity Editor, it returns false, and the code block does not execute.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity_scripting_symbol_not_in_editor.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can verify the code works by saving the script and going to the parent folder for Editor application. The <code>DirectML.dll</code> file should be present.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-verify-initializeonload.png" class="img-fluid figure-img"></p>
</figure>
</div>
<blockquote class="blockquote">
<p><strong>Note:</strong> I install Unity editors to a location that does not require Administrator access. You might need to manually copy the file if this is not the case for you.</p>
</blockquote>
<section id="define-public-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-public-variables">Define public variables</h3>
<p>We’ll add the required public variables above the Start method. We will be able to access these variables in the Inspector tab. We can add <a href="https://docs.unity3d.com/ScriptReference/HeaderAttribute.html">Header</a> attributes to organize the public variables in the Inspector tab and use <a href="https://docs.unity3d.com/ScriptReference/TooltipAttribute.html">Tooltip</a> attributes to provide information about variables.</p>
<p><strong>Define scene object variables</strong></p>
<p>First, we need a variable to access the screen object that displays either a test image or webcam input. We may or may not want to mirror the screen based on whether a webcam is facing the user.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scene Objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Screen object for the scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Transform screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mirror the in-game screen."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define data processing variables</strong></p>
<p>Next, we’ll define the variables for processing model input. We can set the default target input resolution to <code>224</code> and use it to scale the source resolution while maintaining the original aspect ratio.</p>
<p>We’ll also add a public <code>ComputeShader</code> variable to access the <code>ProcessingShader</code> we made earlier.</p>
<p>We need to download the pixel data for the input image from the GPU to the CPU before passing it to the plugin. This step can cause a significant performance bottleneck, so we’ll add the option to read the model output asynchronously at the cost of a few frames of latency. This latency might cause the bounding box to trail slightly behind a fast-moving object on the screen. The effect should be minimal, provided the frame rate is high enough.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The target minimum model input dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The compute shader for GPU processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> ComputeShader processingShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asynchronously download input image from the GPU to the CPU."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define output processing variables</strong></p>
<p>We pass in the JSON file containing the class labels as a <a href="https://docs.unity3d.com/ScriptReference/TextAsset.html">TextAsset</a>.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A json file containing the colormaps for object classes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> TextAsset colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum confidence score for keeping detected objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for debugging</strong></p>
<p>Next, we’ll add a Boolean variable to toggle printing debug messages to the console.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debugging"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Print debugging messages to the console"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> printDebugMessages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define webcam variables</strong></p>
<p>We need to specify a desired resolution and framerate when using a webcam as input.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Use a webcam as input"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2Int webcamDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1280</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb10-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam framerate"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> webcamFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for user interface</strong></p>
<p>We’ll make a simple GUI that displays the predicted class, the current framerate, and controls for selecting webcam devices, models, and execution providers.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GUI"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display predicted class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayBoundingBoxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display number of detected objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayProposalCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display fps"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The on-screen text color"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Color textColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">red</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The scale value for the on-screen font size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fontScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The number of seconds to wait between refreshing the fps value"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsRefreshRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The toggle for using a webcam as the input source"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Toggle useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available webcam devices"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available ONNX models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available ONNX execution providers"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown executionProviderDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define public variables for the ONNX plugin</strong></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ONNX"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the ONNX models folder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> onnxModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ONNXModels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="define-private-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-private-variables">Define private variables</h3>
<p>We’ll add the required private variables right below the public variables.</p>
<p><strong>Define private webcam variables</strong></p>
<p>We’ll keep a list of available webcam devices so users can switch between them. Unity renders webcam input to a <a href="https://docs.unity3d.com/ScriptReference/WebCamTexture.html">WebcamTexture</a>.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of available webcam devices</span></span>
<span id="cb13-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Live video input from a webcam</span></span>
<span id="cb13-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamTexture webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the current webcam  device</span></span>
<span id="cb13-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define input variables</strong></p>
<p>We’ll update the dimensions and content of the screen object based on the test image or webcam.</p>
<p>When using asynchronous GPU readback, we need one Texture that stores data on the GPU and one that stores data on the CPU.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image dimensions</span></span>
<span id="cb14-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image texture</span></span>
<span id="cb14-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current screen object dimensions</span></span>
<span id="cb14-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model GPU input texture</span></span>
<span id="cb14-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTexture inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model CPU input texture</span></span>
<span id="cb14-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variable for tracking the current number of detected objects</strong></p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the number of detected objects</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for storing colormaps</strong></p>
<p>We need to create a couple of classes to parse the JSON content.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for parsing in colormaps from a JSON file</span></span>
<span id="cb16-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb16-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColorMap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for reading in a list of colormaps from a JSON file</span></span>
<span id="cb16-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb16-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColorMapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColorMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores a list of colormaps from a JSON file</span></span>
<span id="cb16-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ColorMapList colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of colors that map to class labels</span></span>
<span id="cb16-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of single pixel textures that map to class labels</span></span>
<span id="cb16-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for tracking the framerate</strong></p>
<p>We’ll define some variables to track the frame rate.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current frame rate value</span></span>
<span id="cb17-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Controls when the frame rate value updates</span></span>
<span id="cb17-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define private variables for the plugin</strong></p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// File paths for the available ONNX models</span></span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelPaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available ONNX models</span></span>
<span id="cb18-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb18-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available ONNX execution providers</span></span>
<span id="cb18-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> onnxExecutionProviders <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span></code></pre></div>
<p><strong>Define a struct for reading object information from the plugin</strong></p>
<p>We need to create an <code>Object</code> struct for Unity to match the one we defined for the ONNX Runtime code, along with an array of <code>Object</code> structs that we’ll update with the <code>PopulateObjectsArray()</code> function.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Indicate that the members of the struct are laid out sequentially</span></span>
<span id="cb19-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StructLayout</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LayoutKind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sequential</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Stores the information for a single object</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb19-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Object</span>
<span id="cb19-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The X coordinate for the top left bounding box corner</span></span>
<span id="cb19-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The Y coordinate for the top left bounding box cornder</span></span>
<span id="cb19-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The width of the bounding box</span></span>
<span id="cb19-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The height of the bounding box</span></span>
<span id="cb19-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The object class index for the detected object</span></span>
<span id="cb19-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model confidence score for the object</span></span>
<span id="cb19-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-20"></span>
<span id="cb19-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb19-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb19-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb19-31"></span>
<span id="cb19-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores information for the current list of detected objects</span></span>
<span id="cb19-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Import functions from the plugin</strong></p>
<p>We pass the pointer to the input pixel data as an <a href="https://docs.microsoft.com/en-us/dotnet/api/system.intptr?view=net-6.0">IntPtr</a>.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Name of the DLL file</span></span>
<span id="cb20-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ONNX_YOLOX_DLL"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitOrtAPI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-6"></span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> IntPtr <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-12"></span>
<span id="cb20-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-15"></span>
<span id="cb20-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RefreshMemory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb20-18"></span>
<span id="cb20-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> execution_provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-21"></span>
<span id="cb20-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IntPtr inputData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-24"></span>
<span id="cb20-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PopulateObjectsArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IntPtr objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb20-27"></span>
<span id="cb20-28"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-29"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FreeResources</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span></code></pre></div>
</section>
<section id="define-initialization-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-initialization-methods">Define Initialization Methods</h3>
<p>We first need to define some methods to initialize webcams, the screen object, any GUI dropdown menus, and the in-game camera.</p>
<p><strong>Define method to initialize a webcam device</strong></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the selected webcam device</span></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb21-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"deviceName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the selected webcam device</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb21-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb21-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb21-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop any webcams already playing</span></span>
<span id="cb21-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-9"></span>
<span id="cb21-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new WebCamTexture</span></span>
<span id="cb21-11">    webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebCamTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-12"></span>
<span id="cb21-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start the webcam</span></span>
<span id="cb21-14">    webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Play</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if webcam is playing</span></span>
<span id="cb21-16">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update toggle value</span></span>
<span id="cb21-18">    useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetIsOnWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-19"></span>
<span id="cb21-20">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam is playing"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam not playing, option disabled"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene screen object</strong></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb22-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position an in-scene screen object</span></span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb22-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb22-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the texture for the screen object</span></span>
<span id="cb22-7">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the screen dimensions</span></span>
<span id="cb22-9">    screenDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-10"></span>
<span id="cb22-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the screen around the Y-Axis when using webcam</span></span>
<span id="cb22-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> yRotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> 180f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the scale value for the Z-Axis when using webcam</span></span>
<span id="cb22-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> zScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-15"></span>
<span id="cb22-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set screen rotation</span></span>
<span id="cb22-17">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Quaternion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Euler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> yRotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen dimensions</span></span>
<span id="cb22-19">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> zScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-20"></span>
<span id="cb22-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen position</span></span>
<span id="cb22-22">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to get the available ONNX models</strong></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb23-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the file paths for available ONNX models</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb23-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb23-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for each model folder</span></span>
<span id="cb23-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dir <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Directory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/{onnxModelsDir}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb23-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Extract the model folder name</span></span>
<span id="cb23-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'\\'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb23-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add name to list of model names</span></span>
<span id="cb23-12">        modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-13"></span>
<span id="cb23-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for the ONNX file for each model</span></span>
<span id="cb23-15">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Directory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb23-16">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-17">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">EndsWith</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".onnx"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb23-18">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-19">                modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-20">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb23-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to get the names of available execution providers</strong></p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb24-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the names of the available ONNX execution providers</span></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb24-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXExecutionProviders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb24-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the number of available ONNX execution providers</span></span>
<span id="cb24-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> providerCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-8">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Provider Count: {providerCount}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-9"></span>
<span id="cb24-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> providerCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb24-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> providerName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Marshal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PtrToStringAnsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetProviderName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb24-13">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>providerName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-14">        providerName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> providerName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Replace</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ExecutionProvider"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-15">        onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>providerName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-17">    onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reverse</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb24-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize GUI dropdown menu options</strong></p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb25-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the GUI dropdown list</span></span>
<span id="cb25-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb25-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb25-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create list of webcam device names</span></span>
<span id="cb25-7">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> webcamNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb25-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-9"></span>
<span id="cb25-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb25-11">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add webcam device names to dropdown menu</span></span>
<span id="cb25-13">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the dropdown to the current webcam device</span></span>
<span id="cb25-15">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IndexOf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb25-16"></span>
<span id="cb25-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb25-18">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add ONNX model names to menu</span></span>
<span id="cb25-20">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb25-22">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-23"></span>
<span id="cb25-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb25-25">    executionProviderDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add ONNX provider names to menu</span></span>
<span id="cb25-27">    executionProviderDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb25-29">    executionProviderDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb25-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene camera object</strong></p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position the main camera based on an in-scene screen object</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb26-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of an in-scene screen object</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb26-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> cameraName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main Camera"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb26-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get a reference to the Main Camera GameObject</span></span>
<span id="cb26-8">    GameObject camera <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cameraName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera position to account for updates to the screenDims</span></span>
<span id="cb26-10">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>10f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render objects with no perspective (i.e. 2D)</span></span>
<span id="cb26-12">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographic</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera size to account for updates to the screenDims</span></span>
<span id="cb26-14">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographicSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb26-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the selected ONNX model</strong></p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb27-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the selected ONNX model</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb27-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateONNXModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb27-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reset objectInfoArray</span></span>
<span id="cb27-7">    objectInfoArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb27-8"></span>
<span id="cb27-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-10">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-11">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span></span>
<span id="cb27-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb27-13"></span>
<span id="cb27-14">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Source input dims: {inputDims[0]} x {inputDims[1]}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-15"></span>
<span id="cb27-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the specified ONNX model</span></span>
<span id="cb27-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> return_msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb27-18">        modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> </span>
<span id="cb27-19">        onnxExecutionProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>executionProviderDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> </span>
<span id="cb27-20">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-21"></span>
<span id="cb27-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-23"></span>
<span id="cb27-24">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> return_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using DirectML"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-26">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using CPU"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb27-27">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb27-28"></span>
<span id="cb27-29">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updated input dims: {inputDims[0]} x {inputDims[1]}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-30">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Return message: {return_messages[return_msg]}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-awake-method" class="level3">
<h3 class="anchored" data-anchor-id="define-awake-method">Define Awake Method</h3>
<p>We’ll implement the code to copy the <code>DirectML.dll</code> file from the <code>Plugins/x86_64</code> folder to the root of the build folder in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Awake.html">Awake()</a> method. The code should be inactive since we are in the Editor.</p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Awake runs when the script instance is being loaded</span></span>
<span id="cb28-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Awake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb28-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>UNITY_EDITOR</span>
<span id="cb28-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the path for the DirectML.dll file in the StreamingAssets folder</span></span>
<span id="cb28-6">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> sourcePath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.dataPath}/Plugins/x86_64/DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-7"></span>
<span id="cb28-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dataPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dataPath</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> buildDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetParent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dataPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ToString</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb28-10"></span>
<span id="cb28-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the destination path for the DirectML.dll file</span></span>
<span id="cb28-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> targetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{buildDir}/DirectML.dll"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb28-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only copy the file if it is not already present at the destination</span></span>
<span id="cb28-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Copy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourcePath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb28-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-start-method" class="level3">
<h3 class="anchored" data-anchor-id="define-start-method">Define Start Method</h3>
<p>The <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Start.html">Start</a> method is <a href="https://docs.unity3d.com/Manual/ExecutionOrder.html">called</a> once before the first frame update, so we’ll perform any required setup steps here.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start runs before the first frame update</span></span>
<span id="cb29-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb29-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image texture</span></span>
<span id="cb29-5">    imageTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image dimensions as a Vector2Int</span></span>
<span id="cb29-7">    imageDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-8"></span>
<span id="cb29-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of available webcam devices</span></span>
<span id="cb29-10">    webcamDevices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebCamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-12">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-13">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam</span></span>
<span id="cb29-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-16"></span>
<span id="cb29-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb29-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb29-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-21"></span>
<span id="cb29-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of color maps from JSON file</span></span>
<span id="cb29-23">    colormapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColorMapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of colors</span></span>
<span id="cb29-25">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of color textures</span></span>
<span id="cb29-27">    colorTextures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb29-28"></span>
<span id="cb29-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Populate the color and color texture arrays</span></span>
<span id="cb29-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb29-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new color object</span></span>
<span id="cb29-33">        colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb29-34">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb29-35">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb29-36">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb29-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a single-pixel texture</span></span>
<span id="cb29-38">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-39">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetPixel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb29-40">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-41"></span>
<span id="cb29-42">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb29-43"></span>
<span id="cb29-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the file paths for available ONNX models</span></span>
<span id="cb29-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the ONNX Runtime API</span></span>
<span id="cb29-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitOrtAPI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the names of available ONNX execution providers</span></span>
<span id="cb29-49">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetONNXExecutionProviders</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-50"></span>
<span id="cb29-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the webcam dropdown list</span></span>
<span id="cb29-52">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb29-53"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-processing-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-processing-methods">Define Processing Methods</h3>
<p>Next, we need to define methods to process images using the Compute Shader, calculate the input resolution, handle asynchronous GPU readback, and scale the bounding box information.</p>
<p><strong>Define method to process images using a compute shader</strong></p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb30-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Process the provided image using the specified function on the GPU</span></span>
<span id="cb30-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target image RenderTexture</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb30-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"computeShader"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target ComputerShader</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb30-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"functionName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target ComputeShader function</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb30-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb30-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageGPU</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ComputeShader computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> functionName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb30-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Specify the number of threads on the GPU</span></span>
<span id="cb30-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numthreads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the index for the specified function in the ComputeShader</span></span>
<span id="cb30-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelHandle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindKernel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>functionName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define a temporary HDR RenderTexture</span></span>
<span id="cb30-15">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Enable random write access</span></span>
<span id="cb30-17">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enableRandomWrite</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create the HDR RenderTexture</span></span>
<span id="cb30-19">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Create</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-20"></span>
<span id="cb30-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the Result variable in the ComputeShader</span></span>
<span id="cb30-22">    computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the InputImage variable in the ComputeShader</span></span>
<span id="cb30-24">    computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"InputImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-25"></span>
<span id="cb30-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Execute the ComputeShader</span></span>
<span id="cb30-27">    computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Dispatch</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> numthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> numthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-28"></span>
<span id="cb30-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result into the source RenderTexture</span></span>
<span id="cb30-30">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-31"></span>
<span id="cb30-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release RenderTexture</span></span>
<span id="cb30-33">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Release</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to calculate input resolution</strong></p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the source image resolution to the target input dimensions</span></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// while maintaing the source aspect ratio.</span></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb31-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"imageDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb31-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"targetDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb31-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb31-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb31-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-10">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-11"></span>
<span id="cb31-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the input dimensions using the target minimum dimension</span></span>
<span id="cb31-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb31-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-15">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb31-16">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb31-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb31-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-20">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-21">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb31-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb31-23"></span>
<span id="cb31-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to handle asynchronous GPU readback</strong></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Called once AsyncGPUReadback has been completed</span></span>
<span id="cb32-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"request"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb32-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnCompleteReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AsyncGPUReadbackRequest request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hasError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-9">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU readback error detected."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb32-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-12"></span>
<span id="cb32-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure the Texture2D is not null</span></span>
<span id="cb32-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fill Texture2D with raw data from the AsyncGPUReadbackRequest</span></span>
<span id="cb32-17">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb32-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply changes to Textur2D</span></span>
<span id="cb32-19">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb32-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to send the input texture data to the plugin</strong></p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb33-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Pin memory for the input data and pass a reference to the plugin for inference</span></span>
<span id="cb33-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"texture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input texture</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb33-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb33-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">unsafe</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UploadTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Texture2D texture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb33-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//Pin Memory</span></span>
<span id="cb33-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">fixed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> texture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb33-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference and get the number of detected objects</span></span>
<span id="cb33-12">        numObjects <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>IntPtr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb33-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb33-14"></span>
<span id="cb33-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the array</span></span>
<span id="cb33-16">    objectInfoArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb33-17"></span>
<span id="cb33-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pin memory</span></span>
<span id="cb33-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">fixed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb33-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the detected objects</span></span>
<span id="cb33-22">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PopulateObjectsArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>IntPtr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb33-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb33-24"></span>
<span id="cb33-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to scale bounding boxes to the display resolution</strong></p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb34-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the latest bounding boxes to the display resolution</span></span>
<span id="cb34-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb34-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb34-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Process new detected objects</span></span>
<span id="cb34-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb34-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest dimension of the screen</span></span>
<span id="cb34-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest input dimension</span></span>
<span id="cb34-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> minInputDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and input dimensions</span></span>
<span id="cb34-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minImgScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> minInputDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and display</span></span>
<span id="cb34-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-17"></span>
<span id="cb34-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box to in-game screen resolution and flip the bbox coordinates vertically</span></span>
<span id="cb34-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-23"></span>
<span id="cb34-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mirror bounding box across screen</span></span>
<span id="cb34-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-26"></span>
<span id="cb34-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding boxes to display resolution</span></span>
<span id="cb34-28">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-29">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-30">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-31">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-32"></span>
<span id="cb34-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Offset the bounding box coordinates based on the difference between the in-game screen and display</span></span>
<span id="cb34-34">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-35">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-update-method" class="level3">
<h3 class="anchored" data-anchor-id="define-update-method">Define Update method</h3>
<p>We’ll place anything we want to run every frame in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Update.html">Update</a> method.</p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update runs once per frame</span></span>
<span id="cb35-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb35-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-4">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb35-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-9"></span>
<span id="cb35-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip the rest of the method if the webcam is not initialized</span></span>
<span id="cb35-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-12"></span>
<span id="cb35-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure screen dimensions match webcam resolution when using webcam</span></span>
<span id="cb35-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb35-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb35-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop the current webcam</span></span>
<span id="cb35-25">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-26"></span>
<span id="cb35-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb35-28">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb35-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-32"></span>
<span id="cb35-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale the source image resolution</span></span>
<span id="cb35-34">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims: {inputDims.x} x {inputDims.y}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-36"></span>
<span id="cb35-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input texture with the calculated input dimensions</span></span>
<span id="cb35-38">    inputTextureGPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-39"></span>
<span id="cb35-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-42">        inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGBA32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the selected ONNX model</span></span>
<span id="cb35-44">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateONNXModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-45">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-46"></span>
<span id="cb35-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the source texture into model input texture</span></span>
<span id="cb35-48">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-49"></span>
<span id="cb35-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip image before sending to DLL</span></span>
<span id="cb35-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageGPU</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> processingShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FlipXAxis"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-52"></span>
<span id="cb35-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download pixel data from GPU to CPU</span></span>
<span id="cb35-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb35-55">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-56">        AsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Request</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGBA32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> OnCompleteReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-57">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-58">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb35-59">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-60">        RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-61">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-62">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-63">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-64"></span>
<span id="cb35-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Send reference to inputData to DLL</span></span>
<span id="cb35-66">    numObjects <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UploadTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-67">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Detected {numObjects} objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding boxes</span></span>
<span id="cb35-69">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb35-70"></span>
<span id="cb35-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the input texture</span></span>
<span id="cb35-72">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-73"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-gui-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-gui-methods">Define GUI Methods</h3>
<p>We need some methods to handle user interactions with the GUI and display the bounding boxes and current framerate.</p>
<p><strong>Define method that to handle switching ONNX models and execution providers</strong></p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb36-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method runs when the value for an ONNX dropdown changes</span></span>
<span id="cb36-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb36-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ONNXDropdownUpdate</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb36-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only call plugin methods after initializing the input texture</span></span>
<span id="cb36-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-9">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RefreshMemory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-10">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateONNXModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update webcam usage from GUI</strong></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb37-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is called when the value for the webcam toggle changes</span></span>
<span id="cb37-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb37-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"useWebcam"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb37-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamToggle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb37-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useWebcam</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update webcam device from GUI</strong></p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// The method is called when the selected value for the webcam dropdown changes</span></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb38-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamDevice</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb38-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-6">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-7">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Selected Webcam: {currentWebcam}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb38-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-10"></span>
<span id="cb38-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb38-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb38-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb38-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the minimum confidence value</strong></p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb39-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the minimum confidence score for keeping bounding box proposals</span></span>
<span id="cb39-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb39-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"slider"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb39-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slider slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb39-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb39-7">    minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb39-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define OnGUI method</strong></p>
<p>We’ll display the predicted bounding boxes and current frame rate in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnGUI.html">OnGUI</a> method.</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// OnGUI handles and renders GUI events.</span></span>
<span id="cb40-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnGUI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb40-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a rectangle for label text</span></span>
<span id="cb40-5">    Rect labelRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a rectangle for bounding boxes</span></span>
<span id="cb40-7">    Rect boxRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-8"></span>
<span id="cb40-9">    GUIStyle labelStyle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb40-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-11">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11e-3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb40-13">    labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alignment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextAnchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MiddleLeft</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-14"></span>
<span id="cb40-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object objectInfo <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>displayBoundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-18"></span>
<span id="cb40-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip object if label index is out of bounds</span></span>
<span id="cb40-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-21"></span>
<span id="cb40-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get color for current class index</span></span>
<span id="cb40-23">        Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get label for current class index</span></span>
<span id="cb40-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-26"></span>
<span id="cb40-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set bounding box coordinates</span></span>
<span id="cb40-28">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-29">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set bounding box dimensions</span></span>
<span id="cb40-31">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-32">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-33"></span>
<span id="cb40-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box line width based on display resolution</span></span>
<span id="cb40-35">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75e-3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render bounding box</span></span>
<span id="cb40-37">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DrawTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb40-38">            position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-39">            image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whiteTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-40">            scaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ScaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StretchToFill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-41">            alphaBlend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-42">            imageAspect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-43">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-44">            borderWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> lineWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-45">            borderRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-46"></span>
<span id="cb40-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include class label and confidence score in label text</span></span>
<span id="cb40-48">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> labelText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" {name}: {(objectInfo.prob * 100).ToString("</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>##<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")}%"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-49"></span>
<span id="cb40-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize label GUI content</span></span>
<span id="cb40-51">        GUIContent labelContent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelText<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-52"></span>
<span id="cb40-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the text size.</span></span>
<span id="cb40-54">        Vector2 textSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcSize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelContent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-55"></span>
<span id="cb40-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text coordinates</span></span>
<span id="cb40-57">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-58">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> lineWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-59"></span>
<span id="cb40-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text dimensions</span></span>
<span id="cb40-61">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-62">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text and backgound color</span></span>
<span id="cb40-64">        labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grayscale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">black</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">white</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-65">        labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render label</span></span>
<span id="cb40-67">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelContent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-68"></span>
<span id="cb40-69">        Rect objectDot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-70">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-71">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-72">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-73">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-74">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-75"></span>
<span id="cb40-76"></span>
<span id="cb40-77">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DrawTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb40-78">            position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-79">            image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whiteTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-80">            scaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ScaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StretchToFill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-81">            alphaBlend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-82">            imageAspect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-83">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-84">            borderWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-85">            borderRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-86"></span>
<span id="cb40-87">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-88"></span>
<span id="cb40-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define styling information for GUI elements</span></span>
<span id="cb40-90">    GUIStyle style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb40-91">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-92">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>100f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fontScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb40-93">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb40-94">    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-95"></span>
<span id="cb40-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define screen spaces for GUI elements</span></span>
<span id="cb40-97">    Rect slot1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-98">    Rect slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-99"></span>
<span id="cb40-100">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Objects Detected: {numObjects}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-101">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayProposalCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-102"></span>
<span id="cb40-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update framerate value</span></span>
<span id="cb40-104">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> fpsTimer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-105">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-106">        fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledDeltaTime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-107">        fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fpsRefreshRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-108">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-109"></span>
<span id="cb40-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust screen position when not showing predicted class</span></span>
<span id="cb40-111">    Rect fpsRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayProposalCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-112">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fpsRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FPS: {fps}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-113"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to exit the application using the GUI</strong></p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb41-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb41-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method runs when the user clicks the GUI Quit button</span></span>
<span id="cb41-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb41-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Quit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb41-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-6">    Application<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Quit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb41-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-onapplicationquit-method" class="level3">
<h3 class="anchored" data-anchor-id="define-onapplicationquit-method">Define OnApplicationQuit Method</h3>
<p>We’ll perform any clean-up steps in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnApplicationQuit.html">OnApplicationQuit</a>method.</p>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb42-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnApplicationQuit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb42-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb42-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FreeResources</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb42-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="set-up-unity-scene" class="level2">
<h2 class="anchored" data-anchor-id="set-up-unity-scene">Set up Unity Scene</h2>
<p>Now we can start setting up our Unity scene. We need a screen to display the webcam feed, an empty object to attach the object detector script, dropdown menus for selecting webcams, models, and execution providers, a toggle to activate a webcam feed, and a slider to update the confidence threshold.</p>
<p><strong>Create Screen object</strong></p>
<p>Right-click a space in the Hierarchy tab and select <code>3D Object → Quad</code>. We can name the new object Screen.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-quad.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Next, drag and drop a test image from the <code>Assets → Images</code> folder onto the Screen object in the Scene view. Note that the Screen looks a bit dim. We need to change the shader for the Screen’s Material so that it does not require an external light source.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-attach-image-to-screen.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the Screen in the Hierarchy tab and open the <code>Shader</code> dropdown menu in the Inspector tab. Type <code>Unlit/Texture</code> into the search box and press enter.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-update-screen-material-shader.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Create Inference Manager object</strong></p>
<p>Right-click a space in the Hierarchy tab and select <code>Create Empty</code>. Name the empty object <code>InferenceManager</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-create-empty-gameobject.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the <code>InferenceManager</code> object selected, drag the <code>ObjectDetector</code> script into the Inspector tab.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-attach-object-detector-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can assign the screen object, compute shader, and colormap file in the Inspector tab by dragging them into their respective fields.</p>
<p><strong>Add GUI prefab</strong></p>
<p>We still need to create the GUI controls. To save time, I made a <a href="https://docs.unity3d.com/Manual/Prefabs.html">Prefab</a> that we can drop into the Scene.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/file/d/14134IOAlvrQpIx0t0uayr4igJa9Pk4OK/view?usp=sharing">Canvas Prefab</a></li>
</ul>
<p>Drag and drop the Canvas prefab into a new folder called Prefabs.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-import-canvas-prefab.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>From there, drag the prefab into the Hierarchy tab. We can see the GUI by switching to the <code>Game</code> view.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-add-canvas-to-hierarchy-tab.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Toggle On Value Changed function</strong></p>
<p>Next, we need to pair the <code>WebcamToggle</code> with the <code>UpdateWebcamToggle</code> function in the <code>ObjectDetector</code> script. Expand the Canvas object and select the <code>WebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-select-webcamtoggle.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click and drag the <code>InferenceManager</code> into the <code>On Value Changed</code> field.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-webcamtoggle-assign-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>No Function</code> dropdown menu and select <code>ObjectDetector → UpdateWebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-webcamtoggle-assign-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Dropdown On Value Changed function</strong></p>
<p>We can follow the same steps to pair the <code>WebcamDropdown</code> with the <code>UpdateWebcamDevice</code> function in the <code>ObjectDetector</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-webcamdropdown-assign-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>This time select <code>ObjectDetector → UpdateWebcamDevice</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-webcamdropdown-assign-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>ONNXModelDropdown</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-update-onnx-model-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>ONNXExecutionProviderDropdown</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-update-onnx-provider-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>ConfidenceThresholdSlider</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-update-confidence-threshold-slider-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>QuitButton</code> On Click Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-quit-button-on-click.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Assign GUI objects to Inference Manager</strong></p>
<p>We can now assign the GUI objects to their respective fields for the <code>ObjectDetector</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-inference-manager-assign-gui-objects.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Add Event System</strong></p>
<p>Before we can use the GUI, we need to add an Event System. Right-click a space in the Hierarchy tab and select <code>UI → Event System</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-add-eventsystem.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="test-in-editor" class="level2">
<h2 class="anchored" data-anchor-id="test-in-editor">Test in Editor</h2>
<p>Click the play button in the top-middle of the Editor window to test the project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-click-play-button.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>There should be a bounding box for the call sign and one for the idle hand.</p>
<p><strong>CPU Execution Provider</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-test-in-editor-cpu.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>DirectML Execution Provider</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/images/unity-test-in-editor-dml.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this two-part tutorial series, you learned how to implement real-time object detection in Unity using ONNX Runtime and DirectML. In Part 1, we created a dynamic link library (DLL) file in Visual Studio to perform object detection with ONNX Runtime and DirectML. In this post, we integrated this DLL file into a Unity project and performed real-time object detection. You should now have the skills and knowledge to leverage ONNX Runtime and DirectML in your Unity projects.</p>
<p><strong>Previous:</strong> <a href="../part-1/">Object Detection for Unity With ONNX Runtime and DirectML Pt. 1</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/onnx-directml-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>onnx</category>
  <category>directml</category>
  <category>yolox</category>
  <category>object-detection</category>
  <category>unity</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/onnx-directml-unity-tutorial/part-2/index.html</guid>
  <pubDate>Fri, 19 Aug 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/posts/onnx-directml-unity-tutorial/social-media/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>Real-Time Object Detection in Unity With ONNX and DirectML Pt. 1</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Introduction</li>
<li>Overview</li>
<li>Download OpenCV</li>
<li>Create DLL Project</li>
<li>Configure the Project</li>
<li>Add Include Directories</li>
<li>Link Libraries</li>
<li>Post Build Events</li>
<li>Install ONNX Runtime</li>
<li>Update Precompiled Header File</li>
<li>Update dllmain File</li>
<li>Build Solution</li>
<li>Gather Dependencies</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../../icevision-openvino-unity-tutorial/part-1/">Training Tutorial</a>: Train a hand gesture classifier using fastai and export it to TensorFlow.js.</li>
<li><a href="../part-1/">Part 1</a>: Create a dynamic link library (DLL) file in Visual Studio to perform object detection with a YOLOX model using ONNX Runtime and DirectML.</li>
<li><a href="../part-2/">Part 2</a>: Perform object detection in a Unity project with ONNX Runtime and DirectML.</li>
<li><a href="https://github.com/cj-mills/onnx-directml-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>In this two-part tutorial series, I will show you how to implement real-time object detection in <a href="https://unity.com/">Unity</a> using <a href="https://onnxruntime.ai/docs/">ONNX Runtime</a> and <a href="https://docs.microsoft.com/en-us/windows/ai/directml/dml">DirectML</a>. ONNX Runtime is a cross-platform model accelerator that works with several hardware acceleration libraries. DirectML is a hardware-accelerated DirectX 12 library for machine learning on Windows.</p>
<p>In Part 1, we will create a dynamic link library (DLL) file in Visual Studio to perform object detection with ONNX Runtime and DirectML. In Part 2, we will integrate this DLL file into a Unity project and perform real-time object detection. By the end of this tutorial series, you will have the skills and knowledge to leverage ONNX Runtime and DirectML in your Unity projects.</p>
<p>This tutorial uses an ONNX model exported in a <a href="../../icevision-openvino-unity-tutorial/part-1/">previous tutorial series</a>, so no modifications to the training code are required.</p>
<ul>
<li><strong>Model Training Tutorial:</strong> <a href="../../icevision-openvino-unity-tutorial/part-1/">End-to-End Object Detection for Unity With IceVision and OpenVINO Pt. 1</a></li>
</ul>
<section id="unity-demo" class="level4">
<h4 class="anchored" data-anchor-id="unity-demo">Unity Demo</h4>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><video src="./videos/unity-onnx-directml-demo.mp4" class="img-fluid" controls=""><a href="./videos/unity-onnx-directml-demo.mp4">Video</a></video></p>
</figure>
</div>
</section>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In Part 1 of this tutorial series, we will create a dynamic link library (<a href="https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/dynamic-link-library">DLL</a>) file in Visual Studio to perform object detection using ONNX Runtime and DirectML. We will first download OpenCV, then create a DLL project and configure it. Next, we will include dependency directories and link libraries and set up post-build events. After that, we will install ONNX Runtime and update the precompiled header and dllmain files. Finally, we will build the project to generate the DLL file. By the end of this post, you will have a DLL file ready to be integrated into a Unity project.</p>
<blockquote class="blockquote">
<p><strong>Important:</strong> This post assumes <a href="https://visualstudio.microsoft.com/downloads/">Visual Studio</a> is present on your system.</p>
</blockquote>
</section>
<section id="download-opencv" class="level2">
<h2 class="anchored" data-anchor-id="download-opencv">Download OpenCV</h2>
<p>We’ll use the <a href="https://github.com/opencv/opencv">OpenCV</a> library to process image data from Unity. The tutorial uses OpenCV <code>4.6.0</code>, which is available at the link below.</p>
<ul>
<li><a href="https://github.com/opencv/opencv/releases/tag/4.6.0">OpenCV 4.6.0 GitHub</a></li>
</ul>
<p>Select the <code>opencv-4.6.0-vc14_vc15.exe</code> option from the Assets list.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/opencv_github_download_executable.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Run the executable once it finishes downloading. You might get a warning from Windows that the executable is an unrecognized app. We can bypass this by clicking the <code>More info</code> text, then the Run anyway button.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/windows-defender-smartscreen-warning.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Then, click the <code>Run anyway</code> button.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/windows-defender-smartscreen-warning-run-anyway.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The executable will prompt us to select a location to extract the <code>opencv</code> folder. We’ll need to give Visual Studio this location to access the library’s functionality. I tend to place my C++ dependencies in a dedicated folder for consistency.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/opencv-select-extraction-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>If we open the <code>opencv</code> folder, we can see a build folder and a source folder. Everything we need is in the build folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/opencv-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="create-dll-project" class="level2">
<h2 class="anchored" data-anchor-id="create-dll-project">Create DLL Project</h2>
<p>Open Visual Studio and select the <code>Create a new project</code> option.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-create-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Type <code>DLL</code> into the text box and select the <code>Dynamic-Link Library (DLL)</code> option. This option automatically configures a few parameters for us compared to starting with a standard console application.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-new-dll-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Choose a name and location for the project and click the <code>Create</code> button. By default, the DLL file will use the project name.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-choose-project-name-and-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="configure-the-project" class="level2">
<h2 class="anchored" data-anchor-id="configure-the-project">Configure the Project</h2>
<p>At the top of the window, open the Solution Configurations dropdown menu, and select <code>Release</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-switch-to-release.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Then, open the Solution Platform dropdown menu and select <code>x64</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-switch-to-64-bit.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="add-include-directories" class="level2">
<h2 class="anchored" data-anchor-id="add-include-directories">Add Include Directories</h2>
<p>We need to tell Visual Studio where OpenCV is so we can access its APIs. Right-click the project name in the Solution Explorer panel.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-solution-explorer-select-project-name.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the <code>Properties</code> option in the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-open-properties.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the Properties Window, open on the <code>C/C++</code> dropdown. Select the <code>Additional Include Directories</code> section and click on <code>&lt;Edit..&gt;</code> in the dropdown.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-open-additional-include-directories.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Add the path for the following folder, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenCV library, and click <code>OK</code>.</p>
<ul>
<li><code>&lt;parent-folder-path&gt;\opencv\build\include</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-add-additional-include-directories.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="link-libraries" class="level2">
<h2 class="anchored" data-anchor-id="link-libraries">Link Libraries</h2>
<p>Next, open the <code>Linker</code> dropdown in the Properties window and select <code>Input</code>. Select <code>Additional Dependencies</code> and click <code>&lt;Edit..&gt;</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-linker-additional-dependencies.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Add the following path, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenCV library, and click <code>OK</code>.</p>
<ul>
<li><code>&lt;parent-folder-path&gt;\opencv\build\x64\vc15\lib\*</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-linker-add-additional-dependencies.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="post-build-events" class="level2">
<h2 class="anchored" data-anchor-id="post-build-events">Post Build Events</h2>
<p>Our DLL file will depend on the following DLL file included with OpenCV.</p>
<p><strong>OpenCV DLL files</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/get-opencv-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can add a post-build event in Visual Studio to automatically copy these DLL files to the build folder for the project at compile time. Open the <code>Build Events</code> dropdown in the Properties window and select <code>Post-Build Event</code>. Select <code>Command Line</code> and click <code>&lt;Edit..&gt;</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-post-build-event-edit-command-line-events.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Add the following commands, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenCV library, and click <code>OK</code>.</p>
<ul>
<li><code>xcopy &lt;parent-folder-path&gt;\opencv\build\x64\vc15\bin\opencv_world452.dll $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-post-build-event-add-xcopy-commands.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Finally, click the <code>Apply</code> button and close the Properties window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-properties-apply-changes.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="install-onnx-runtime" class="level2">
<h2 class="anchored" data-anchor-id="install-onnx-runtime">Install ONNX Runtime</h2>
<p>We can install ONNX Runtime with DirectML directly into our project via the <a href="https://www.nuget.org/">NuGet</a> package manager integrated with Visual Studio. Open the <code>Project</code> menu and select <code>Manage NuGet Packages...</code> from the dropdown menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-open-nuget-package-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the <code>Browse</code> option and enter <code>Microsoft.ML.OnnxRuntime.DirectML</code> into the search box.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-nuget-package-manager-search-for-package.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the package selected, click the <code>Install</code> button. The project uses version <code>1.12.1</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-nuget-package-manager-install-package.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click <code>OK</code> in the popup window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-approve-nuget-package-install.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the dependencies taken care of, we can start modifying the code.</p>
</section>
<section id="update-precompiled-header-file" class="level2">
<h2 class="anchored" data-anchor-id="update-precompiled-header-file">Update Precompiled Header File</h2>
<p>We’ll first update the <code>pch.h</code> <a href="https://docs.microsoft.com/en-us/cpp/build/creating-precompiled-header-files?view=msvc-160">Precompiled Header file</a> with the required header files. We can open the <code>pch.h</code> file by selecting it in the Solution Explorer window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-open-pch-header-file.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Comment or remove the <code>#include</code> line for the <code>framework.h</code> header file.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pch.h: This is a precompiled header file.</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Files listed below are compiled only once, improving build performance for future builds.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This also affects IntelliSense performance, including code completion and many code browsing features.</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// However, files listed here are ALL re-compiled if any one of them is updated between builds.</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Do not add files here that you will be updating frequently as this negates the performance advantage.</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifndef PCH_H</span></span>
<span id="cb1-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PCH_H</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// add headers that you want to pre-compile here</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//#include "framework.h"</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//PCH_H</span></span></code></pre></div>
<p><strong>Add required header files</strong></p>
<p>Next, we’ll add the required header files for ONNX Runtime and OpenCV below <code>//#include "framework.h"</code> line.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pch.h: This is a precompiled header file.</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Files listed below are compiled only once, improving build performance for future builds.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This also affects IntelliSense performance, including code completion and many code browsing features.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// However, files listed here are ALL re-compiled if any one of them is updated between builds.</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Do not add files here that you will be updating frequently as this negates the performance advantage.</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifndef PCH_H</span></span>
<span id="cb2-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PCH_H</span></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// add headers that you want to pre-compile here</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//#include "framework.h"</span></span>
<span id="cb2-12"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;onnxruntime_cxx_api.h&gt;</span></span>
<span id="cb2-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"dml_provider_factory.h"</span></span>
<span id="cb2-14"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;opencv2/opencv.hpp&gt;</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//PCH_H</span></span></code></pre></div>
</section>
<section id="update-dllmain-file" class="level2">
<h2 class="anchored" data-anchor-id="update-dllmain-file">Update dllmain File</h2>
<p>By default, the <code>dllmain.cpp</code> file contains the following code.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// dllmain.cpp : Defines the entry point for the DLL application.</span></span>
<span id="cb3-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"pch.h"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">BOOL APIENTRY DllMain<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> HMODULE hModule<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-5">                       DWORD  ul_reason_for_call<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-6">                       LPVOID lpReserved</span>
<span id="cb3-7">                     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">switch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ul_reason_for_call<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_PROCESS_ATTACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_THREAD_ATTACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_THREAD_DETACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_PROCESS_DETACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> TRUE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We can delete everything below the <code>#include "pch.h"</code> line.</p>
<p><strong>Create a macro to mark functions we want to make accessible in Unity</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// dllmain.cpp : Defines the entry point for the DLL application.</span></span>
<span id="cb4-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"pch.h"</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a macro to quickly mark a function for export</span></span>
<span id="cb4-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define DLLExport </span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">__declspec (dllexport)</span></span></code></pre></div>
<p><strong>Wrap the code in extern “C” to prevent name-mangling issues with the compiler</strong></p>
<p>The rest of our code will go inside here.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wrap code to prevent name-mangling issues</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extern</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define variables</strong></p>
<p>Inside the wrapper, we will declare the persistent variables needed for the DLL.</p>
<ul>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html">OrtApi</a>: ONNX Runtime API interface</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_env.html">OrtEnv</a>: Holds the logging state for the ONNX Runtime objects</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_session_options.html">OrtSessionOptions</a>: Holds the options used when creating a new ONNX Runtime session</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_session.html">OrtSession</a>: The ONNX Runtime session</li>
</ul>
<hr>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current source image width</span></span>
<span id="cb6-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current source image height</span></span>
<span id="cb6-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current model input width</span></span>
<span id="cb6-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current model input height</span></span>
<span id="cb6-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The total number pixels in the input image</span></span>
<span id="cb6-10"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_pixels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The number of color channels </span></span>
<span id="cb6-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-13"></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores information about a single object prediction</span></span>
<span id="cb6-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Object</span>
<span id="cb6-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-18">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-20">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-22">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store grid offset and stride values to decode a section of the model output</span></span>
<span id="cb6-26"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> GridAndStride</span>
<span id="cb6-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-29">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-30">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-31"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-32"></span>
<span id="cb6-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The scale values used to adjust the model output to the source image resolution</span></span>
<span id="cb6-34"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-35"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-36"></span>
<span id="cb6-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The minimum confidence score to consider an object proposal</span></span>
<span id="cb6-38"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The maximum intersection over union value before an object proposal will be ignored</span></span>
<span id="cb6-40"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> nms_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-41"></span>
<span id="cb6-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the grid and stride values to navigate the raw model output</span></span>
<span id="cb6-43"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the object proposals with confidence scores above bbox_conf_thresh</span></span>
<span id="cb6-45"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the indices for the object proposals selected using non-maximum suppression</span></span>
<span id="cb6-47"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-48"></span>
<span id="cb6-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The stride values used to generate the gride_strides vector</span></span>
<span id="cb6-50"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-51"></span>
<span id="cb6-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The mean of the ImageNet dataset used to train the model</span></span>
<span id="cb6-53"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.485</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.456</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.406</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The standard deviation of the ImageNet dataset used to train the model</span></span>
<span id="cb6-55"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> std_dev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.229</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.224</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.225</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-56"></span>
<span id="cb6-57"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// ONNX Runtime API interface</span></span>
<span id="cb6-58"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> OrtApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> ort <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-59"></span>
<span id="cb6-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of available execution providers</span></span>
<span id="cb6-61"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-62"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> provider_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-63"></span>
<span id="cb6-64"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Holds the logging state for the ONNX Runtime objects</span></span>
<span id="cb6-65">OrtEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Holds the options used when creating a new ONNX Runtime session</span></span>
<span id="cb6-67">OrtSessionOptions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-68"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The ONNX Runtime session</span></span>
<span id="cb6-69">OrtSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-70"></span>
<span id="cb6-71"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the model input</span></span>
<span id="cb6-72"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-73"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the model output</span></span>
<span id="cb6-74"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-75"></span>
<span id="cb6-76"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A pointer to the raw input data</span></span>
<span id="cb6-77"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-78"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The memory size of the raw input data</span></span>
<span id="cb6-79"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define a function to convert <code>char</code> data to <code>wchar_t</code></strong></p>
<p>ONNX Runtime expects paths to ONNX model files to be in <code>wchar_t</code> format. We receive the file paths in <code>char</code> format, so we’ll make a function to convert them.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Convert char data to wchar_t</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"text"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb7-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb7-6"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">static</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">wchar_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> charToWChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb7-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-8">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span> size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> strlen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">wchar_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> wText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">wchar_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb7-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span> converted_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-11">    mbstowcs_s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>converted_chars<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> wText<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> _TRUNCATE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> wText<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to initialize the interface to the ONNX Runtime API</strong></p>
<ul>
<li><p><a href="https://onnxruntime.ai/docs/api/c/group___global.html#gaff6ff297798b9337d4c0f89a35b76aa6">OrtGetApiBase</a>: The Onnxruntime library’s entry point to access the C API.</p></li>
<li><p><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#aaacd4a9540eb5044291addd2ebd9bc5f">GetAvailableProviders</a>: Get the names of all available providers.</p></li>
</ul>
<hr>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the ONNX Runtime API interface and get the available execution providers</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb8-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> InitOrtAPI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-6"></span>
<span id="cb8-7">    ort <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> OrtGetApiBase<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()-&gt;</span>GetApi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ORT_API_VERSION<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-8"></span>
<span id="cb8-9">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetAvailableProviders<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>provider_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb8-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to get the number of execution providers</strong></p>
<p>The next function we’ll define will create a list of available execution providers and return the number of providers accessible by ONNX Runtime. We’ll use this information to select which device to use to perform inference from the Unity application.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the number of available execution providers</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The number of available devices</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb9-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> GetProviderCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb9-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the number of available execution providers</span></span>
<span id="cb9-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> provider_count<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to get the name of an execution provider</strong></p>
<p>Next, we’ll define a function to return the name at a specified index in the list of available execution providers.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the name of the execution provider at the specified index</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the execution provider at the specified index</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb10-6">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> GetProviderName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> provider_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb10-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to generate stride values to navigate the raw model output</strong></p>
<p>The method for generating the offset values used to traverse the output array is almost identical to the Python implementation from the <a href="../../icevision-openvino-unity-tutorial/part-1/#define-post-processing-steps">training tutorial</a>.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generate offset values to navigate the raw model output</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"height"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The model input height</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"width"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The model input width</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GenerateGridsAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the values for the previous input resolution</span></span>
<span id="cb11-9">    grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb11-10"></span>
<span id="cb11-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through each stride value</span></span>
<span id="cb11-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb11-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the grid dimensions</span></span>
<span id="cb11-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-17"></span>
<span id="cb11-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store each combination of grid coordinates</span></span>
<span id="cb11-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb11-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb11-22">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-23">                grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb11-24">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-25">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-26">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to set the minimum confidence score from Unity</strong></p>
<p>We might want to try different confidence thresholds for keeping object proposals from the Unity application, so we’ll add a function to enable this.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Set minimum confidence score for keeping bounding box proposals</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"min_confidence"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The minimum confidence score for keeping bounding box proposals</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> SetConfidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> min_confidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-7">    bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_confidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define function to refresh memory when switching models or execution providers</strong></p>
<ul>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#ae311be14b0e35ce3ad3bc1418a79d7bb">ReleaseSession</a></li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a5edc51815e9aeba83516e4fe55ef836a">ReleaseEnv</a></li>
</ul>
<hr>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Refresh memory when switching models or execution providers</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> RefreshMemory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-5">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> free<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-6">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to load an ONNX model</strong></p>
<ul>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a22085f699a2d1adb52f809383f475ed1">CreateEnv</a>: Create an OrtEnv.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a74a22efe6571fe538e60f677654ae01f">DisableTelemetryEvents</a>: Disable telemetry.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a033b8a4a9de072bcc9dda3a8434922c5">CreateSessionOptions</a>: Create an <a href="https://onnxruntime.ai/docs/api/c/group___global.html#gaa6c56bcb36e39611481a17065d3ce620">OrtSessionOptions</a> object.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#ab090eb2a54f5dfaf0377a8cc72d65c5f">DisableMemPattern</a>: Disable the memory pattern optimization.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a8113f817428f87ef4926d97809291155">SetSessionExecutionMode</a>: Controls whether you want to execute operators in your graph sequentially or in parallel.</li>
<li>OrtSessionOptionsAppendExecutionProvider_DML: Add a DirectML execution provider.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a8e8529eb336bbe2334307c9197891838">CreateSession</a>: Create an OrtSession from a model file.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a2fa11d21f36cbd068a82682ea175d774">ReleaseSessionOptions</a>: Free an <a href="https://onnxruntime.ai/docs/api/c/group___global.html#gaa6c56bcb36e39611481a17065d3ce620">OrtSessionOptions</a> object.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_allocator_with_default_options.html">AllocatorWithDefaultOptions</a>: Create the default allocator.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a811b1773c7d713750716a36b432e2102">SessionGetInputName</a>: Get input name.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a130f69dae071631abd50cae5a26d5d9d">SessionGetOutputName</a>: Get output name.</li>
</ul>
<hr>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load a model from the specified file path</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model_path"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The full model path to the ONNX model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"execution_provider"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name for the desired execution_provider</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image_dims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source image dimensions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A status value indicating success or failure to load and reshape the model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb14-8">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> LoadModel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> execution_provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span></span>
<span id="cb14-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-10">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> return_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-11"></span>
<span id="cb14-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the ONNX runtime environment</span></span>
<span id="cb14-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>instance_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yolox-inference"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-14">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ORT_LOGGING_LEVEL_WARNING<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> instance_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>c_str<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-15"></span>
<span id="cb14-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Disable telemetry</span></span>
<span id="cb14-17">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>DisableTelemetryEvents<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-18"></span>
<span id="cb14-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the selected execution provider</span></span>
<span id="cb14-20">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateSessionOptions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(&amp;</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-21">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>provider_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> execution_provider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-22">    </span>
<span id="cb14-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add the specified execution provider</span></span>
<span id="cb14-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>provider_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CPU"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">::</span>npos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-25">        return_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-26">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>provider_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">::</span>npos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-28">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>DisableMemPattern<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-29">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>SetSessionExecutionMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ExecutionMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>ORT_SEQUENTIAL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-30">        OrtSessionOptionsAppendExecutionProvider_DML<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> return_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-33"></span>
<span id="cb14-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new inference session</span></span>
<span id="cb14-35">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> charToWChar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-36">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseSessionOptions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session_options<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-37"></span>
<span id="cb14-38">    Ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>AllocatorWithDefaultOptions allocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-39"></span>
<span id="cb14-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get input and output names</span></span>
<span id="cb14-41">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>SessionGetInputName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> allocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>input_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-42">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>SessionGetOutputName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> allocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>output_name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-43"></span>
<span id="cb14-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The dimensions of the source input image</span></span>
<span id="cb14-45">    img_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-46">    img_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb14-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate new input dimensions based on the max stride value</span></span>
<span id="cb14-48">    input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>roundf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()));</span></span>
<span id="cb14-49">    input_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>roundf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()));</span></span>
<span id="cb14-50">    n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-51"></span>
<span id="cb14-52">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the value used to adjust the model output to the source image resolution</span></span>
<span id="cb14-53">    scale_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-54">    scale_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-55"></span>
<span id="cb14-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate the grid and stride values based on input resolution</span></span>
<span id="cb14-57">    GenerateGridsAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-58"></span>
<span id="cb14-59">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Replace the initial input dims with the updated values</span></span>
<span id="cb14-60">    image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-61">    image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-62"></span>
<span id="cb14-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Allocate memory for the raw input data</span></span>
<span id="cb14-64">    input_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-65">    input_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)</span>malloc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>input_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*));</span></span>
<span id="cb14-66">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> memset<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-67"></span>
<span id="cb14-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return a value of 0 if the model loads successfully</span></span>
<span id="cb14-69">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> return_val<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-70"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to generate object detection proposals from the raw model output</strong></p>
<p>The method to generate object proposals is nearly identical to the Python implementation from the training tutorial.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generate object detection proposals from the raw model output</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"out_ptr"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A pointer to the output tensor data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GenerateYoloxProposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> proposal_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the proposals for the previous model output</span></span>
<span id="cb15-8">    proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb15-9"></span>
<span id="cb15-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Obtain the number of classes the model was trained to detect</span></span>
<span id="cb15-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposal_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-12"></span>
<span id="cb15-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb15-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the current grid and stride values</span></span>
<span id="cb15-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-19"></span>
<span id="cb15-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the starting index for the current proposal</span></span>
<span id="cb15-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposal_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-22"></span>
<span id="cb15-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the coordinates for the center of the predicted bounding box</span></span>
<span id="cb15-24">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-26"></span>
<span id="cb15-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the dimensions for the predicted bounding box</span></span>
<span id="cb15-28">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-29">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-30"></span>
<span id="cb15-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the coordinates for the upper left corner of the bounding box</span></span>
<span id="cb15-32">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-33">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-34"></span>
<span id="cb15-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the confidence score that an object is present</span></span>
<span id="cb15-36">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb15-37"></span>
<span id="cb15-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize object struct with bounding box information</span></span>
<span id="cb15-39">        Object obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb15-40"></span>
<span id="cb15-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find the object class with the highest confidence score</span></span>
<span id="cb15-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> class_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> class_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb15-43">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-44">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the confidence score for the current object class</span></span>
<span id="cb15-45">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_cls_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb15-46">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the final confidence score for the object proposal</span></span>
<span id="cb15-47">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-48"></span>
<span id="cb15-49">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check for the highest confidence score</span></span>
<span id="cb15-50">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>box_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb15-51">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-52">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-53">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-54">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-55">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-56"></span>
<span id="cb15-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only add object proposals with high enough confidence scores</span></span>
<span id="cb15-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bbox_conf_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-59">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-60"></span>
<span id="cb15-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the proposals based on the confidence score in descending order</span></span>
<span id="cb15-62">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>begin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[](</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span></span>
<span id="cb15-63">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb15-64"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define function to sort bounding box proposals using Non-Maximum Suppression</strong></p>
<p>The C++ API for OpenCV has built-in functionality to perform comparison operations between rectangles. Therefore, we don’t need to define helper functions to calculate the intersection and union areas of two bounding boxes. Otherwise, the method to sort bounding box proposals using Non-Maximum Suppression is almost identical to the Python implementation from part 1.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Filter through a sorted list of object proposals using Non-maximum suppression</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> NmsSortedBboxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb16-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the picked proposals for the previous model outptut</span></span>
<span id="cb16-7">    proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-8"></span>
<span id="cb16-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through the object proposals</span></span>
<span id="cb16-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb16-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-12">        Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-13"></span>
<span id="cb16-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create OpenCV rectangle for the Object bounding box</span></span>
<span id="cb16-15">        cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> rect_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-16"></span>
<span id="cb16-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-18"></span>
<span id="cb16-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the current object proposal overlaps any selected objects too much</span></span>
<span id="cb16-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-22">            Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb16-23"></span>
<span id="cb16-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create OpenCV rectangle for the Object bounding box</span></span>
<span id="cb16-25">            cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> rect_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-26"></span>
<span id="cb16-27">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the area where the two object bounding boxes overlap</span></span>
<span id="cb16-28">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>rect_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> rect_b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span>area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the union area of both bounding boxes</span></span>
<span id="cb16-30">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rect_a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> rect_b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> inter_area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-31">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore object proposals that overlap selected objects too much</span></span>
<span id="cb16-32">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> nms_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb16-33">                keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb16-34">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-35"></span>
<span id="cb16-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Keep object proposals that do not overlap selected objects too much</span></span>
<span id="cb16-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>keep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb16-38">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb16-39"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to perform inference</strong></p>
<p>We will access the pixel data for the input image from Unity with a pointer to a <a href="https://docs.opencv.org/4.5.1/d1/d1b/group__core__hal__interface.html#ga65f85814a8290f9797005d3b28e7e5fc">uchar</a> (unsigned 1-byte integer) array and wrap the data in a <a href="https://docs.opencv.org/master/d3/d63/classcv_1_1Mat.html">cv::Mat</a> variable for processing.</p>
<p>After processing the model output, we’ll return the final number of detected objects to Unity so we can initialize an array of objects.</p>
<ul>
<li><a href="https://docs.opencv.org/3.4/d3/d63/classcv_1_1Mat.html">cv::Mat</a>: n-dimensional dense array class<br>
</li>
<li><a href="https://docs.opencv.org/3.4/d8/d01/group__imgproc__color__conversions.html#ga397ae87e1288a81d2363b61574eb8cab">cv::cvtColor()</a>: Converts an image from one color space to another</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_memory_info.html">OrtMemoryInfo</a>:</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a6a64ee931925577fd40f5f3f7472cfed">CreateCpuMemoryInfo</a>: Create an <a href="https://onnxruntime.ai/docs/api/c/group___global.html#ga088f45e429651ac29b4a9efb4d88571a">OrtMemoryInfo</a> for CPU memory.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_value.html">OrtValue</a></li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a2aad3ccd68c66d0b38bdb966467d9324">CreateTensorWithDataAsOrtValue</a>: Create a tensor backed by a user supplied buffer.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a62f73350760cf7cc483216ac44222d0b">ReleaseMemoryInfo</a></li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#ad8b12cad4160d43da92f49191cd91895">Run</a>: Run the model in an <a href="https://onnxruntime.ai/docs/api/c/group___global.html#ga5220ca3b3f0a31a01a3f15057c35cac6">OrtSession</a>.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_1_1_tensor_type_and_shape_info.html">OrtTensorTypeAndShapeInfo</a></li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a97f8d1f1dbcd39214f50f1dc9e8aef7b">GetTensorTypeAndShape</a>: Get type and shape information from a tensor <a href="https://onnxruntime.ai/docs/api/c/group___global.html#gaab167acf3fe9dabc0195b993fbe7ee7d">OrtValue</a>.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a4b4e5b170de480987d23d350ccc55349">GetDimensionsCount</a>: Get dimension count in <a href="https://onnxruntime.ai/docs/api/c/group___global.html#ga6af32c548904330b6bd7e8cba6e186c1">OrtTensorTypeAndShapeInfo</a>.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#ae06620ce959abdb68f982a200fb003cd">GetDimensions</a>: Get dimensions in <a href="https://onnxruntime.ai/docs/api/c/group___global.html#ga6af32c548904330b6bd7e8cba6e186c1">OrtTensorTypeAndShapeInfo</a>.</li>
<li><a href="https://onnxruntime.ai/docs/api/c/struct_ort_api.html#a24486475cc05b9228a57b814b2024d77">GetTensorMutableData</a>: Get a pointer to the raw data inside a tensor.</li>
</ul>
<hr>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Perform inference with the provided texture data</span></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image_data"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source image data from Unity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The final number of detected objects</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb17-6">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PerformInference<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uchar</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb17-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the pixel data for the source input image in an OpenCV Mat</span></span>
<span id="cb17-9">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Mat input_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Mat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> CV_8UC4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the alpha channel</span></span>
<span id="cb17-11">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cvtColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>COLOR_RGBA2RGB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize the image to the model input dimensions</span></span>
<span id="cb17-13">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb17-14"></span>
<span id="cb17-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate over each pixel in image</span></span>
<span id="cb17-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n_pixels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb17-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-18">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> ch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n_channels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-19">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale and normalize each value</span></span>
<span id="cb17-20">            input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ch <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> mean<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> std_dev<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>ch<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb17-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-23"></span>
<span id="cb17-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of input and output names</span></span>
<span id="cb17-25">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> input_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb17-26">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> output_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb17-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of model input dimension</span></span>
<span id="cb17-28">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int64_t</span> input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb17-29">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_shape_len <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">sizeof</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb17-30"></span>
<span id="cb17-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize an input tensor object with the input_data</span></span>
<span id="cb17-32">    OrtMemoryInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-33">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateCpuMemoryInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>OrtArenaAllocator<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> OrtMemTypeDefault<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-34"></span>
<span id="cb17-35">    OrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-36">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>CreateTensorWithDataAsOrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-37">                                        input_shape_len<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ONNX_TENSOR_ELEMENT_DATA_TYPE_FLOAT<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-38">                                        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-39"></span>
<span id="cb17-40">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseMemoryInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>memory_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-41"></span>
<span id="cb17-42"></span>
<span id="cb17-43">    OrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference</span></span>
<span id="cb17-45">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>Run<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span> OrtValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">const</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*)&amp;</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_names<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb17-46">             <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-47"></span>
<span id="cb17-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure the output tensor is not NULL to avoid potential crashes</span></span>
<span id="cb17-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> NULL<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb17-50">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-51">        ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-53">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-54"></span>
<span id="cb17-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the length of a single object proposal (i.e., number of object classes + 5)</span></span>
<span id="cb17-56">    OrtTensorTypeAndShapeInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> output_tensor_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-57">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetTensorTypeAndShape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>output_tensor_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-58">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">size_t</span> output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb17-59">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetDimensionsCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-60">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int64_t</span> output_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{};</span></span>
<span id="cb17-61">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetDimensions<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor_info<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>output_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-62"></span>
<span id="cb17-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Access model output</span></span>
<span id="cb17-64">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-65">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>GetTensorMutableData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**)&amp;</span>out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-66"></span>
<span id="cb17-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate new proposals for the current model output</span></span>
<span id="cb17-68">    GenerateYoloxProposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb17-69"></span>
<span id="cb17-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pick detected objects to keep using Non-maximum Suppression</span></span>
<span id="cb17-71">    NmsSortedBboxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb17-72"></span>
<span id="cb17-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Free memory for input and output tensors</span></span>
<span id="cb17-74">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-75">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseValue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb17-76"></span>
<span id="cb17-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// return the final number of detected objects</span></span>
<span id="cb17-78">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb17-79"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to populate an array of objects from Unity</strong></p>
<p>Next, we’ll define a function to populate an array of objects from Unity. We call this function after initializing the list based on the current number of detected objects. We’ll also scale the bounding box information from the input dimensions to the source image resolution.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb18-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Fill the provided array with the detected objects</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"objects"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A pointer to a list of objects from Unity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb18-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> PopulateObjectsArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> </span>
<span id="cb18-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-7"></span>
<span id="cb18-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb18-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb18-10">        Object obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]];</span></span>
<span id="cb18-11"></span>
<span id="cb18-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust offset to source image resolution and clamp the bounding box</span></span>
<span id="cb18-13">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-14">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-15">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-16">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb18-17"></span>
<span id="cb18-18">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-19">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb18-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to clear memory when the Unity application exits</strong></p>
<p>This last function will free the memory allocated by the plugin. We’ll call it when the Unity application shuts down.</p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Free memory</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb19-4">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> FreeResources<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb19-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb19-6">    grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb19-7">    proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb19-8">    proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb19-9"></span>
<span id="cb19-10">    free<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-11">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseSession<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>session<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-12">    ort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>ReleaseEnv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>env<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb19-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>That is all the code needed for the plugin. We can now build the solution to generate the DLL file.</p>
</section>
<section id="build-solution" class="level2">
<h2 class="anchored" data-anchor-id="build-solution">Build Solution</h2>
<p>Open the Build menu at the top of the Visual Studio window and click <code>Build Solution</code>. Visual Studio will generate a new x64 folder in the project directory containing the DLL file and its dependencies.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-build-solution.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="gather-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="gather-dependencies">Gather Dependencies</h2>
<p>Right-click the project name in the Solution Explorer panel and select <code>Open Folder in File Explorer</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-open-folder-in-explorer.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the new File Explorer window, go to the parent folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-project-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>x64 → Release</code> subfolder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/visual-studio-project-folder-x64-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We’ll need to copy all the DLL files in this folder to the Unity project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/images/file-explorer-select-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this post, we created a dynamic link library (DLL) file in Visual Studio to perform object detection using ONNX Runtime and DirectML. We started by downloading OpenCV and creating a DLL project. Then, we configured the project by adding include directories, linking libraries, and setting up post-build events. After, we installed ONNX Runtime and updated the precompiled header and dllmain files. Finally, we built the project to generate the DLL file. In Part 2, we will cover how to integrate this DLL file into a Unity project and perform real-time object detection.</p>
<p><strong>Training Tutorial:</strong> <a href="../../icevision-openvino-unity-tutorial/part-1/">End-to-End Object Detection for Unity With IceVision and OpenVINO Pt. 1</a></p>
<p><strong>Next:</strong> <a href="../part-2/">Object Detection for Unity With ONNX Runtime and DirectML Pt. 2</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/onnx-directml-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>onnx</category>
  <category>directml</category>
  <category>yolox</category>
  <category>object-detection</category>
  <category>unity</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/onnx-directml-unity-tutorial/part-1/index.html</guid>
  <pubDate>Thu, 18 Aug 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/posts/onnx-directml-unity-tutorial/social-media/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>A Step-by-Step Guide to Object Detection in Unity with IceVision and OpenVINO Pt. 3</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Create New Project</li>
<li>Import Assets</li>
<li>Allow Unsafe Code</li>
<li>Create Processing Shader</li>
<li>Create Object Detector Script</li>
<li>Set up Unity Scene</li>
<li>Test in Editor</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../part-1/">Part 1</a>: Train a YOLOX model using IceVision and export it to OpenVINO.</li>
<li><a href="../part-2/">Part 2</a>: Create a dynamic link library (DLL) file in Visual Studio to perform object detection with a YOLOX model using OpenVINO.</li>
<li><a href="../part-3/">Part 3</a>: Perform object detection in a Unity project with OpenVINO.</li>
<li><a href="https://github.com/cj-mills/icevision-openvino-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In part 3 of this tutorial series, we will integrate the trained YOLOX model into a Unity project to perform real-time object detection. We will begin by creating a new Unity project and importing the necessary assets. Then, we will allow unsafe code in our project to share input data with the DLL file. Next, we will create a processing shader and an object detector script to handle object detection in our Unity project. Lastly, we will set up the Unity scene and test our object detection model in the editor. By the end of this post, you will know how to add object detection functionality to a Unity project.</p>
<blockquote class="blockquote">
<p><strong>Important:</strong> This post assumes you already have <a href="https://unity3d.com/get-unity/download">Unity Hub</a> on your system. Check out <a href="../../fastai-to-unity-tutorial/part-2/#set-up-unity-hub">this section</a> from a previous tutorial if this is not the case (<a href="../../fastai-to-unity-tutorial/part-2/#set-up-unity-hub">link</a>).</p>
</blockquote>
</section>
<section id="create-new-project" class="level2">
<h2 class="anchored" data-anchor-id="create-new-project">Create New Project</h2>
<p>Open the Unity Hub and click New Project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-hub-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the target editor version from the Editor Version dropdown menu. We’ll use Unity 2022 for this post, but the current LTS release should also work fine.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-hub-new-project-select-unity-version.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the <code>2D Core</code> template.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-hub-new-project-select-2D-template.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Pick a name for the project and a location for the project folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-hub-new-project-name-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Finally, click <code>Create Project</code> in the lower right-hand corner.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-hub-new-project-click-create-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="import-assets" class="level2">
<h2 class="anchored" data-anchor-id="import-assets">Import Assets</h2>
<p>Once the project loads, we’ll store the <a href="../part-2/#gather-dependencies">DLL files</a> from part 2 in a new folder called <code>Plugins</code>. Right-click a space in the Assets section and select <code>Create → Folder</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The DLL targets 64-bit x86 architectures, so we need to place the DLL files in a subfolder named <code>x86_64</code>.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1lNsaNuoF2DVcKRN3lpvi716XWfXGWiuN?usp=sharing">Plugins Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-plugins-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<blockquote class="blockquote">
<p><strong>Note:</strong> You can place the <code>Plugins</code> folder inside another folder if needed.</p>
</blockquote>
<p>Copy all the DLL files and the <code>plugins.xml</code> file into the <code>Assets/Plugins/x86_64</code> folder. We then need to close and reopen the project for Unity to load the plugin files.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-openvino-plugins-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Back in the Unity Editor, create a new folder called <code>Colormaps</code> to store the JSON file from <a href="../part-1/#generate-colormap">part 1</a>.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1rs2eD9_3Tyg4ADLbF6CNqwRdnhpsiHgk?usp=sharing">Colormaps Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-colormaps-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We place any test images into a new folder called <code>Images</code>.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1jHp3nTw8bRhk9es-osSfCx-B9ga4pt1G?usp=sharing">Images Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-import-image-assets.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Next, we’ll create a folder to store the OpenVINO IR models. We need to place the XML and BIN files for the IR models in a <a href="https://docs.unity3d.com/Manual/StreamingAssets.html">StreamingAssets</a> folder to include them in project builds. Create a new folder named <code>StreamingAssets</code>. We’ll place files for each model in a separate folder and put those in a new subfolder called <code>OpenVINOModels</code> to keep things organized.</p>
<ul>
<li><a href="https://drive.google.com/drive/folders/1cgcrHTdwrUhqsmYThaaB9zoO-6hBp-xM?usp=sharing">OpenVINOModels Folder Google Drive</a></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-openvino-models-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The plugins.xml file included with the DLL files contains locations for the DLL files needed for using different types of devices.</p>
<p><strong><code>plugins.xml</code> content:</strong></p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode xml code-with-copy"><code class="sourceCode xml"><span id="cb1-1">&lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ie</span>&gt;</span>
<span id="cb1-2">    &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugins</span>&gt;</span>
<span id="cb1-3">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"AUTO"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_auto_plugin.dll"</span>&gt;</span>
<span id="cb1-4">            &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">properties</span>&gt;</span>
<span id="cb1-5">                &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">property</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> key=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MULTI_WORK_MODE_AS_AUTO"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> value=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"YES"</span>/&gt;</span>
<span id="cb1-6">            &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">properties</span>&gt;</span>
<span id="cb1-7">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-8">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BATCH"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_auto_batch_plugin.dll"</span>&gt;</span>
<span id="cb1-9">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-10">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CPU"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_intel_cpu_plugin.dll"</span>&gt;</span>
<span id="cb1-11">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-12">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GNA"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_intel_gna_plugin.dll"</span>&gt;</span>
<span id="cb1-13">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-14">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_intel_gpu_plugin.dll"</span>&gt;</span>
<span id="cb1-15">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-16">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HETERO"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_hetero_plugin.dll"</span>&gt;</span>
<span id="cb1-17">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-18">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MULTI"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_auto_plugin.dll"</span>&gt;</span>
<span id="cb1-19">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-20">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MYRIAD"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_intel_myriad_plugin.dll"</span>&gt;</span>
<span id="cb1-21">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-22">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HDDL"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_intel_hddl_plugin.dll"</span>&gt;</span>
<span id="cb1-23">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-24">        &lt;<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VPUX"</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> location=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"openvino_intel_vpux_plugin.dll"</span>&gt;</span>
<span id="cb1-25">        &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugin</span>&gt;</span>
<span id="cb1-26">    &lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">plugins</span>&gt;</span>
<span id="cb1-27">&lt;/<span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">ie</span>&gt;</span></code></pre></div>
<p>It needs to be in the same folder as the DLL files for the plugin to work. However, Unity does not include XML files in the Plugins folder when building the project. We need to store a copy of the plugins.xml file in the <code>StreamingAssets</code> folder and then copy it back to the <code>Plugins/x86_64</code> folder when first running the built project. We can handle both steps automatically in code.</p>
</section>
<section id="allow-unsafe-code" class="level2">
<h2 class="anchored" data-anchor-id="allow-unsafe-code">Allow Unsafe Code</h2>
<p>Rather than copying the input image from Unity to the OpenVINO plugin, we’ll pass a pointer to the pixel data. First, we need to allow unsafe code for the Unity project. Select <code>Edit → Project Settings...</code> from the top menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-open-project-settings.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>Player → Other Settings</code> dropdown and scroll down to the <code>Allow 'unsafe' Code</code> checkbox. Enable the setting and close the Project Settings window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-allow-unsafe-code.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can start coding.</p>
</section>
<section id="create-processing-shader" class="level2">
<h2 class="anchored" data-anchor-id="create-processing-shader">Create Processing Shader</h2>
<p>The input image gets flipped upside down when we send it to the plugin. We can pre-flip the image in a <a href="https://docs.unity3d.com/Manual/class-ComputeShader.html">Compute Shader</a>. We’ll add the Compute Shader in a new folder called <code>Shaders</code>. Right-click a space in the <code>Shaders</code> folder and select <code>Create → Shader → Compute Shader</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-compute-shader.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the Compute Shader <code>ProcessingShader</code> and open it in the code editor.</p>
<p><strong>Default Compute Shader Code</strong></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each #kernel tells which function to compile; you can have many kernels</span></span>
<span id="cb2-2">#pragma kernel CSMain</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a RenderTexture with enableRandomWrite flag and set it</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// with cs.SetTexture</span></span>
<span id="cb2-6">RWTexture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb2-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CSMain</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb2-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb2-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// </span><span class="al" style="color: #AD0000;
background-color: null;
font-style: inherit;">TODO</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">: insert actual code here!</span></span>
<span id="cb2-12"></span>
<span id="cb2-13">    Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">15.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb2-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We need to add a new <code>Texture2D</code> variable to store the pixel data for the input image. We’ll remove the default method and create a new one called <code>FlipXAxis</code>. Replace the default method name in the <code>#pragma kernel</code> line at the top.</p>
<p>We need the input image height for the flip operation, which we can access with the <a href="https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/sm5-object-texture2d-getdimensions">Texture2D::GetDimensions</a> function.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Each #kernel tells which function to compile; you can have many kernels</span></span>
<span id="cb3-2">#pragma kernel FlipXAxis</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The pixel data for the input image</span></span>
<span id="cb3-5">Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The pixel data for the processed image</span></span>
<span id="cb3-7">RWTexture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>float4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-8"></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the image around the x-axis</span></span>
<span id="cb3-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">numthreads</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb3-11"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FlipXAxis</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>uint3 id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> SV_DispatchThreadID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the InputImage width</span></span>
<span id="cb3-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the InputImage height</span></span>
<span id="cb3-16">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the dimensions of the InputImage</span></span>
<span id="cb3-18">    InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDimensions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-19"></span>
<span id="cb3-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the y value for the pixel coordinates</span></span>
<span id="cb3-21">    int2 coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">int2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-22">    Result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>id<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">float4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> InputImage<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>coords<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">z</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb3-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="create-object-detector-script" class="level2">
<h2 class="anchored" data-anchor-id="create-object-detector-script">Create Object Detector Script</h2>
<p>We’ll store the C# script that interacts with the OpenVINO plugin in a new <code>Scripts</code> folder. Right-click a space inside it and select <code>Create → C# Script</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-c-sharp-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Name the script <code>ObjectDetector</code> and open it in the code editor.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-object-detector-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Default script code</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb4-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ObjectDetector <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> MonoBehaviour</span>
<span id="cb4-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb4-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-10">        </span>
<span id="cb4-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-12"></span>
<span id="cb4-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update is called once per frame</span></span>
<span id="cb4-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb4-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb4-16">        </span>
<span id="cb4-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb4-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Add required namespaces</strong></p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system?view=net-5.0">System</a>: Contains fundamental classes and base classes that define commonly-used value and reference data types, events and event handlers, interfaces, attributes, and processing exceptions.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.ugui@1.0/api/UnityEngine.UI.html">UnityEngine.UI</a>: Provides access to UI elements.</li>
<li><a href="https://docs.unity3d.com/Packages/com.unity.render-pipelines.core@5.9/api/UnityEngine.Rendering.html">UnityEngine.Rendering</a>: Provides access to the elements of the rendering pipeline.</li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system.runtime.interopservices?view=net-6.0">System.Runtime.InteropServices</a>: Provides a wide variety of members that support COM interop and platform invoke services.</li>
<li><a href="https://docs.microsoft.com/en-us/dotnet/api/system.io?view=net-6.0">System.IO</a>: Allows reading and writing to files and data streams.</li>
</ul>
<hr>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb5-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Collections</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Generic</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rendering</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEngine<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Runtime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InteropServices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb5-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Add code to copy <code>plugins.xml</code> file to <code>StreamingAssets</code> folder</strong></p>
<p>Unity provides an <a href="https://docs.unity3d.com/Manual/RunningEditorCodeOnLaunch.html"><code>InitializeOnLoad</code></a> attribute to run code in the Unity Editor without requiring action from the user. This attribute requires the <a href="https://docs.unity3d.com/ScriptReference/UnityEditor.html"><code>UnityEditor</code></a> namespace. We can only use this while in the Editor, so we need to wrap the code in <a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/preprocessor-directives#conditional-compilation">Conditional compilation</a> preprocessor directives. We’ll place this code right below the namespaces.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb6-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> UNITY_EDITOR</span>
<span id="cb6-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">using</span> UnityEditor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>InitializeOnLoad<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb6-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> Startup</span>
<span id="cb6-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Startup</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get all files named "plugins.xml"</span></span>
<span id="cb6-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> files <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Directory<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./Assets/"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plugins.xml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> SearchOption<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AllDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through each found file</span></span>
<span id="cb6-12">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> files<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-13">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-14">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the file is in the "x86_64" folder</span></span>
<span id="cb6-15">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Contains</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x86_64"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb6-16">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-17">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define file path for StreamingAssets folder</span></span>
<span id="cb6-18">                <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> targetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/plugins.xml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Print the source file path</span></span>
<span id="cb6-20">                Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-21">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only copy the file to the StreamingAssets folder if it is not already present</span></span>
<span id="cb6-22">                <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Copy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb6-23">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-24">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-27"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span></code></pre></div>
<p>We use the <code>UNITY_EDITOR</code> <a href="https://docs.unity3d.com/Manual/PlatformDependentCompilation.html">scripting symbol</a> to check whether we are in the Unity Editor. We are in the Editor, so it returns true, and the code executes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity_scripting_symbol_in_editor.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>If we check if we are not in the Unity Editor, it returns false, and the code block does not execute.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity_scripting_symbol_not_in_editor.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can verify the code works by saving the script and going to the <code>StreamingAssets</code> folder in the Editor. The plugins.xml file should be present.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-verify-initializeonload.png" class="img-fluid figure-img"></p>
</figure>
</div>
<section id="define-public-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-public-variables">Define public variables</h3>
<p>We’ll add the required public variables above the Start method. We will be able to access these variables in the Inspector tab. We can add <a href="https://docs.unity3d.com/ScriptReference/HeaderAttribute.html">Header</a> attributes to organize the public variables in the Inspector tab and use <a href="https://docs.unity3d.com/ScriptReference/TooltipAttribute.html">Tooltip</a> attributes to provide information about variables.</p>
<p><strong>Define scene object variables</strong></p>
<p>First, we need a variable to access the screen object that displays either a test image or webcam input. We may or may not want to mirror the screen based on whether a webcam is facing the user.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb7-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Scene Objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The Screen object for the scene"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Transform screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb7-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Mirror the in-game screen."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb7-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define data processing variables</strong></p>
<p>Next, we’ll define the variables for processing model input. We can set the default target input resolution to <code>224</code> and use it to scale the source resolution while maintaining the original aspect ratio.</p>
<p>We’ll also add a public <code>ComputeShader</code> variable to access the <code>ProcessingShader</code> we made earlier.</p>
<p>We need to download the pixel data for the input image from the GPU to the CPU before passing it to the plugin. This step can cause a significant performance bottleneck, so we’ll add the option to read the model output asynchronously at the cost of a few frames of latency. This latency might cause the bounding box to trail slightly behind a fast-moving object on the screen. The effect should be minimal, provided the frame rate is high enough.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb8-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Data Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The target minimum model input dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">224</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The compute shader for GPU processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> ComputeShader processingShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb8-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Asynchronously download input image from the GPU to the CPU."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb8-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useAsyncGPUReadback <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define output processing variables</strong></p>
<p>We pass in the JSON file containing the class labels as a <a href="https://docs.unity3d.com/ScriptReference/TextAsset.html">TextAsset</a>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb9-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output Processing"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"A json file containing the colormaps for object classes"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> TextAsset colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Minimum confidence score for keeping detected objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span>1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb9-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for debugging</strong></p>
<p>Next, we’ll add a Boolean variable to toggle printing debug messages to the console.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb10-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Debugging"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Print debugging messages to the console"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb10-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> printDebugMessages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define webcam variables</strong></p>
<p>We need to specify a desired resolution and framerate when using a webcam as input.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb11-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Use a webcam as input"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam dimensions"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Vector2Int webcamDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1280</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">720</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The requested webcam framerate"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb11-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> webcamFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for user interface</strong></p>
<p>We’ll make a simple GUI that displays the predicted class, the current framerate, and controls for selecting webcam devices, models, and compute devices.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb12-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GUI"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display predicted class"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayBoundingBoxes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display number of detected objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayProposalCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Display fps"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> displayFPS <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The on-screen text color"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-9"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Color textColor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">red</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The scale value for the on-screen font size"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-11"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">99</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fontScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The number of seconds to wait between refreshing the fps value"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-14"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Range</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-15"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsRefreshRate <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The toggle for using a webcam as the input source"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Toggle useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available webcam devices"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-19"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-20"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available OpenVINO models"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-21"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The dropdown menu that lists available OpenVINO devices"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb12-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> Dropdown deviceDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define public variables for the OpenVINO plugin</strong></p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb13-1"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Header</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenVINO"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Tooltip</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"The name of the openvino models folder"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> openvinoModelsDir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenVINOModels"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
</section>
<section id="define-private-variables" class="level3">
<h3 class="anchored" data-anchor-id="define-private-variables">Define private variables</h3>
<p>We’ll add the required private variables right below the public variables.</p>
<p><strong>Define private webcam variables</strong></p>
<p>We’ll keep a list of available webcam devices so users can switch between them. Unity renders webcam input to a <a href="https://docs.unity3d.com/ScriptReference/WebCamTexture.html">WebcamTexture</a>.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of available webcam devices</span></span>
<span id="cb14-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamDevice<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Live video input from a webcam</span></span>
<span id="cb14-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> WebCamTexture webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The name of the current webcam  device</span></span>
<span id="cb14-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define input variables</strong></p>
<p>We’ll update the dimensions and content of the screen object based on the test image or webcam.</p>
<p>When using asynchronous GPU readback, we need one Texture that stores data on the GPU and one that stores data on the CPU.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image dimensions</span></span>
<span id="cb15-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The test image texture</span></span>
<span id="cb15-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current screen object dimensions</span></span>
<span id="cb15-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model GPU input texture</span></span>
<span id="cb15-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> RenderTexture inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model CPU input texture</span></span>
<span id="cb15-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variable for tracking the current number of detected objects</strong></p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the number of detected objects</span></span>
<span id="cb16-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for storing colormaps</strong></p>
<p>We need to create a couple of classes to parse the JSON content.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for parsing in colormaps from a JSON file</span></span>
<span id="cb17-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb17-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColorMap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A class for reading in a list of colormaps from a JSON file</span></span>
<span id="cb17-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Serializable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span></span>
<span id="cb17-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">class</span> ColorMapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColorMap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> items<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb17-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores a list of colormaps from a JSON file</span></span>
<span id="cb17-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> ColorMapList colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of colors that map to class labels</span></span>
<span id="cb17-10"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb17-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A list of single pixel textures that map to class labels</span></span>
<span id="cb17-12"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define variables for tracking the framerate</strong></p>
<p>We’ll define some variables to track the frame rate.</p>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current frame rate value</span></span>
<span id="cb18-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Controls when the frame rate value updates</span></span>
<span id="cb18-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Define private variables for the OpenVINO plugin</strong></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb19-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// File paths for the available OpenVINO models</span></span>
<span id="cb19-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelPaths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb19-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available OpenVINO models</span></span>
<span id="cb19-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> modelNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb19-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Names of the available OpenVINO devices</span></span>
<span id="cb19-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> openvinoDevices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span></code></pre></div>
<p><strong>Define a struct for reading object information from the OpenVINO plugin</strong></p>
<p>We need to create an <code>Object</code> struct for Unity to match the one we defined for the OpenVINO code, along with an array of <code>Object</code> structs that we’ll update with the <code>PopulateObjectsArray()</code> function.</p>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Indicate that the members of the struct are laid out sequentially</span></span>
<span id="cb20-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StructLayout</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>LayoutKind<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sequential</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb20-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Stores the information for a single object</span></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span></span>
<span id="cb20-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Object</span>
<span id="cb20-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The X coordinate for the top left bounding box corner</span></span>
<span id="cb20-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The Y coordinate for the top left bounding box cornder</span></span>
<span id="cb20-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The width of the bounding box</span></span>
<span id="cb20-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The height of the bounding box</span></span>
<span id="cb20-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The object class index for the detected object</span></span>
<span id="cb20-17">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The model confidence score for the object</span></span>
<span id="cb20-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-20"></span>
<span id="cb20-21">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Object</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb20-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb20-23">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-24">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-26">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-27">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-28">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prob</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb20-29">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb20-31"></span>
<span id="cb20-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores information for the current list of detected objects</span></span>
<span id="cb20-33"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span></code></pre></div>
<p><strong>Import functions from the OpenVINO plugin</strong></p>
<p>We pass the pointer to the input pixel data as an <a href="https://docs.microsoft.com/en-us/dotnet/api/system.intptr?view=net-6.0">IntPtr</a>.</p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb21-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Name of the DLL file</span></span>
<span id="cb21-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">const</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dll <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OpenVINO_YOLOX_DLL"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb21-3"></span>
<span id="cb21-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDeviceCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb21-6"></span>
<span id="cb21-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> IntPtr <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDeviceName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-9"></span>
<span id="cb21-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-12"></span>
<span id="cb21-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-14"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-15"></span>
<span id="cb21-16"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-17"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IntPtr inputData<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-18"></span>
<span id="cb21-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PopulateObjectsArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>IntPtr objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb21-21"></span>
<span id="cb21-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DllImport</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dll<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)]</span></span>
<span id="cb21-23"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">static</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">extern</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FreeResources</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span></code></pre></div>
</section>
<section id="define-initialization-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-initialization-methods">Define Initialization Methods</h3>
<p>We first need to define some methods to initialize webcams, the screen object, any GUI dropdown menus, and the in-game camera.</p>
<p><strong>Define method to initialize a webcam device</strong></p>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb22-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the selected webcam device</span></span>
<span id="cb22-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb22-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"deviceName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the selected webcam device</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb22-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb22-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb22-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop any webcams already playing</span></span>
<span id="cb22-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb22-9"></span>
<span id="cb22-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new WebCamTexture</span></span>
<span id="cb22-11">    webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">WebCamTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>deviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-12"></span>
<span id="cb22-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start the webcam</span></span>
<span id="cb22-14">    webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Play</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb22-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if webcam is playing</span></span>
<span id="cb22-16">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb22-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update toggle value</span></span>
<span id="cb22-18">    useWebcamToggle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetIsOnWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-19"></span>
<span id="cb22-20">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam is playing"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Webcam not playing, option disabled"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb22-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene screen object</strong></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb23-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb23-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position an in-scene screen object</span></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb23-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb23-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb23-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the texture for the screen object</span></span>
<span id="cb23-7">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the screen dimensions</span></span>
<span id="cb23-9">    screenDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-10"></span>
<span id="cb23-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip the screen around the Y-Axis when using webcam</span></span>
<span id="cb23-12">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> yRotation <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> 180f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 0f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Invert the scale value for the Z-Axis when using webcam</span></span>
<span id="cb23-14">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> zScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> 1f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb23-15"></span>
<span id="cb23-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set screen rotation</span></span>
<span id="cb23-17">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rotation</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Quaternion<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Euler</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> yRotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen dimensions</span></span>
<span id="cb23-19">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> zScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-20"></span>
<span id="cb23-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the screen position</span></span>
<span id="cb23-22">    screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb23-23"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to get the available OpenVINO models</strong></p>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb24-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the file paths for available OpenVION models</span></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb24-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetOpenVINOModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb24-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for each model folder</span></span>
<span id="cb24-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> dir <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Directory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDirectories</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/{openvinoModelsDir}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb24-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-9">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> modelName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Split</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">'\\'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb24-10"></span>
<span id="cb24-11">        modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Substring</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> modelName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb24-12"></span>
<span id="cb24-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the paths for the XML file for each model</span></span>
<span id="cb24-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> file <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> System<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IO</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Directory</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetFiles</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb24-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-16">            <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">EndsWith</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".xml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span></span>
<span id="cb24-17">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb24-18">                modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>file<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb24-19">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb24-22"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to get the names of available OpenVINO devices</strong></p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb25-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb25-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the names of the available OpenVINO devices</span></span>
<span id="cb25-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb25-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetOpenVINODevices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb25-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the number of available OpenVINO devices</span></span>
<span id="cb25-7">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> deviceCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDeviceCount</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb25-8"></span>
<span id="cb25-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> deviceCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb25-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb25-11">        openvinoDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Marshal<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PtrToStringAnsi</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetDeviceName</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)));</span></span>
<span id="cb25-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb25-13"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize GUI dropdown menu options</strong></p>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb26-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb26-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Initialize the GUI dropdown list</span></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb26-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb26-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb26-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create list of webcam device names</span></span>
<span id="cb26-7">    List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> webcamNames <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> List<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb26-8">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Add</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-9"></span>
<span id="cb26-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb26-11">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add webcam device names to dropdown menu</span></span>
<span id="cb26-13">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the dropdown to the current webcam device</span></span>
<span id="cb26-15">    webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">IndexOf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb26-16"></span>
<span id="cb26-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb26-18">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add OpenVINO model names to menu</span></span>
<span id="cb26-20">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelNames<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb26-22">    modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-23"></span>
<span id="cb26-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove default dropdown options</span></span>
<span id="cb26-25">    deviceDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ClearOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb26-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Add OpenVINO device names to menu</span></span>
<span id="cb26-27">    deviceDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">AddOptions</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>openvinoDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-28">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Select the first option in the dropdown</span></span>
<span id="cb26-29">    deviceDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetValueWithoutNotify</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb26-30"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to initialize the in-scene camera object</strong></p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb27-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Resize and position the main camera based on an in-scene screen object</span></span>
<span id="cb27-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb27-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"screenDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The dimensions of an in-scene screen object</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb27-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> cameraName <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main Camera"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb27-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb27-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get a reference to the Main Camera GameObject</span></span>
<span id="cb27-8">    GameObject camera <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> GameObject<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Find</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>cameraName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera position to account for updates to the screenDims</span></span>
<span id="cb27-10">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>10f<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb27-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render objects with no perspective (i.e. 2D)</span></span>
<span id="cb27-12">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographic</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust the camera size to account for updates to the screenDims</span></span>
<span id="cb27-14">    camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Camera<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">orthographicSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb27-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the selected OpenVINO model</strong></p>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb28-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the selected OpenVINO model</span></span>
<span id="cb28-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb28-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateOpenVINOModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb28-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reset objectInfoArray</span></span>
<span id="cb28-7">    objectInfoArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb28-8"></span>
<span id="cb28-9">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-10">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-11">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span></span>
<span id="cb28-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb28-13"></span>
<span id="cb28-14">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Selected Device: {openvinoDevices[deviceDropdown.value]}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-15"></span>
<span id="cb28-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Load the specified OpenVINO model</span></span>
<span id="cb28-17">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> return_msg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>modelPaths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>modelDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span> deviceDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-18"></span>
<span id="cb28-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-20"></span>
<span id="cb28-21">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[]</span> return_messages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb28-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Model loaded and reshaped successfully"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> </span>
<span id="cb28-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to load model"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Failed to reshape model input"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb28-25">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb28-26"></span>
<span id="cb28-27">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Updated input dims: {inputDims[0]} x {inputDims[1]}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-28">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Return message: {return_messages[return_msg]}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb28-29"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-awake-method" class="level3">
<h3 class="anchored" data-anchor-id="define-awake-method">Define Awake Method</h3>
<p>We’ll implement the code to copy the plugins.xml file from the <code>StreamingAssets</code> folder to the <code>Plugins/x86_64</code> folder in the build folder in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Awake.html">Awake()</a> method. The code should be inactive since we are in the Editor.</p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Awake is called when the script instance is being loaded</span></span>
<span id="cb29-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Awake</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb29-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb29-4">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>UNITY_EDITOR</span>
<span id="cb29-5">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the path for the plugins.xml file in the StreamingAssets folder</span></span>
<span id="cb29-6">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> sourcePath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.streamingAssetsPath}/plugins.xml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define the destination path for the plugins.xml file</span></span>
<span id="cb29-8">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> targetPath <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"{Application.dataPath}/Plugins/x86_64/plugins.xml"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb29-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only copy the file if it is not already present at the destination</span></span>
<span id="cb29-10">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Exists</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">))</span> File<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Copy</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>sourcePath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetPath<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb29-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">#endif</span></span>
<span id="cb29-12"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-start-method" class="level3">
<h3 class="anchored" data-anchor-id="define-start-method">Define Start Method</h3>
<p>The <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Start.html">Start</a> method is <a href="https://docs.unity3d.com/Manual/ExecutionOrder.html">called</a> once before the first frame update, so we’ll perform any required setup steps here.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Start is called before the first frame update</span></span>
<span id="cb30-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Start</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb30-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image texture</span></span>
<span id="cb30-5">    imageTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gameObject</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetComponent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>MeshRenderer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;().</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">material</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mainTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the source image dimensions as a Vector2Int</span></span>
<span id="cb30-7">    imageDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-8"></span>
<span id="cb30-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of available webcam devices</span></span>
<span id="cb30-10">    webcamDevices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> WebCamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">devices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-11">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>WebCamDevice device <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-12">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-13">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb30-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam</span></span>
<span id="cb30-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-16"></span>
<span id="cb30-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb30-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb30-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-21"></span>
<span id="cb30-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize list of color maps from JSON file</span></span>
<span id="cb30-23">    colormapList <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> JsonUtility<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FromJson</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ColorMapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>colormapFile<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of colors</span></span>
<span id="cb30-25">    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb30-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the list of color textures</span></span>
<span id="cb30-27">    colorTextures <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Count</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb30-28"></span>
<span id="cb30-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Populate the color and color texture arrays</span></span>
<span id="cb30-30">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb30-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb30-32">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a new color object</span></span>
<span id="cb30-33">        colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb30-34">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb30-35">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">],</span></span>
<span id="cb30-36">            colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">color</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb30-37">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a single-pixel texture</span></span>
<span id="cb30-38">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb30-39">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetPixel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb30-40">        colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-41"></span>
<span id="cb30-42">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb30-43"></span>
<span id="cb30-44">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the file paths for available OpenVINO models</span></span>
<span id="cb30-45">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetOpenVINOModels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the names of available OpenVINO devices</span></span>
<span id="cb30-47">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetOpenVINODevices</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-48"></span>
<span id="cb30-49">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the webcam dropdown list</span></span>
<span id="cb30-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeDropdown</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb30-51"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-processing-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-processing-methods">Define Processing Methods</h3>
<p>Next, we need to define methods to process images using the Compute Shader, calculate the input resolution, handle asynchronous GPU readback, and scale the bounding box information.</p>
<p><strong>Define method to process images using a compute shader</strong></p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb31-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Process the provided image using the specified function on the GPU</span></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb31-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target image RenderTexture</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb31-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"computeShader"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target ComputerShader</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb31-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"functionName"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The target ComputeShader function</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb31-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb31-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageGPU</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>RenderTexture image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ComputeShader computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> functionName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb31-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb31-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Specify the number of threads on the GPU</span></span>
<span id="cb31-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> numthreads <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the index for the specified function in the ComputeShader</span></span>
<span id="cb31-13">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> kernelHandle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindKernel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>functionName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define a temporary HDR RenderTexture</span></span>
<span id="cb31-15">    RenderTexture result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RenderTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Enable random write access</span></span>
<span id="cb31-17">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">enableRandomWrite</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb31-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create the HDR RenderTexture</span></span>
<span id="cb31-19">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Create</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-20"></span>
<span id="cb31-21">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the Result variable in the ComputeShader</span></span>
<span id="cb31-22">    computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Result"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the value for the InputImage variable in the ComputeShader</span></span>
<span id="cb31-24">    computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"InputImage"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-25"></span>
<span id="cb31-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Execute the ComputeShader</span></span>
<span id="cb31-27">    computeShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Dispatch</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>kernelHandle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> numthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> numthreads<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-28"></span>
<span id="cb31-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the result into the source RenderTexture</span></span>
<span id="cb31-30">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb31-31"></span>
<span id="cb31-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release RenderTexture</span></span>
<span id="cb31-33">    result<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Release</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb31-34"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to calculate input resolution</strong></p>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the source image resolution to the target input dimensions</span></span>
<span id="cb32-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// while maintaing the source aspect ratio.</span></span>
<span id="cb32-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb32-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"imageDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb32-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"targetDims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb32-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb32-8"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> Vector2Int <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Vector2Int imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-10">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Vector2Int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb32-11"></span>
<span id="cb32-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the input dimensions using the target minimum dimension</span></span>
<span id="cb32-13">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb32-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-15">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb32-16">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-17">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-18">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb32-19">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb32-20">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-21">        inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>imageDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb32-22">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb32-23"></span>
<span id="cb32-24">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb32-25"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to handle asynchronous GPU readback</strong></p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb33-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb33-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Called once AsyncGPUReadback has been completed</span></span>
<span id="cb33-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb33-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"request"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb33-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnCompleteReadback</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>AsyncGPUReadbackRequest request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb33-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hasError</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb33-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-9">        Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU readback error detected."</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb33-10">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb33-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb33-12"></span>
<span id="cb33-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure the Texture2D is not null</span></span>
<span id="cb33-14">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb33-15">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb33-16">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Fill Texture2D with raw data from the AsyncGPUReadbackRequest</span></span>
<span id="cb33-17">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LoadRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">uint</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;());</span></span>
<span id="cb33-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Apply changes to Textur2D</span></span>
<span id="cb33-19">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb33-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb33-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to send the input texture data to the plugin</strong></p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb34-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Pin memory for the input data and pass a reference to the plugin for inference</span></span>
<span id="cb34-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"texture"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The input texture</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb34-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;&lt;/returns&gt;</span></span>
<span id="cb34-6"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">unsafe</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UploadTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Texture2D texture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb34-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//Pin Memory</span></span>
<span id="cb34-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">fixed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">byte</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> texture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetRawTextureData</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span></span>
<span id="cb34-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference and get the number of detected objects</span></span>
<span id="cb34-12">        numObjects <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PerformInference</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>IntPtr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-14"></span>
<span id="cb34-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the array</span></span>
<span id="cb34-16">    objectInfoArray <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb34-17"></span>
<span id="cb34-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pin memory</span></span>
<span id="cb34-19">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">fixed</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> o <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb34-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb34-21">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the detected objects</span></span>
<span id="cb34-22">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">PopulateObjectsArray</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>IntPtr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>o<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb34-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb34-24"></span>
<span id="cb34-25">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> numObjects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb34-26"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to scale bounding boxes to the display resolution</strong></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb35-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Scale the latest bounding boxes to the display resolution</span></span>
<span id="cb35-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb35-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb35-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Process new detected objects</span></span>
<span id="cb35-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb35-8">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb35-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest dimension of the screen</span></span>
<span id="cb35-10">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The smallest input dimension</span></span>
<span id="cb35-12">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> minInputDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Min</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb35-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and input dimensions</span></span>
<span id="cb35-14">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> minImgScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> minScreenDim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> minInputDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the scale value between the in-game screen and display</span></span>
<span id="cb35-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> displayScale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-17"></span>
<span id="cb35-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box to in-game screen resolution and flip the bbox coordinates vertically</span></span>
<span id="cb35-19">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-20">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-22">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> minImgScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-23"></span>
<span id="cb35-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Mirror bounding box across screen</span></span>
<span id="cb35-25">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>mirrorScreen <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-26"></span>
<span id="cb35-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding boxes to display resolution</span></span>
<span id="cb35-28">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-29">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-30">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-31">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-32"></span>
<span id="cb35-33">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Offset the bounding box coordinates based on the difference between the in-game screen and display</span></span>
<span id="cb35-34">        objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transform</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">localScale</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> displayScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb35-35">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb35-36"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-update-method" class="level3">
<h3 class="anchored" data-anchor-id="define-update-method">Define Update method</h3>
<p>We’ll place anything we want to run every frame in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.Update.html">Update</a> method.</p>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update is called once per frame</span></span>
<span id="cb36-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Update</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb36-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-4">    useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-5">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-6">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-7">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb36-8">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-9"></span>
<span id="cb36-10">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip the rest of the method if the webcam is not initialized</span></span>
<span id="cb36-11">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-12"></span>
<span id="cb36-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Make sure screen dimensions match webcam resolution when using webcam</span></span>
<span id="cb36-14">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-16">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb36-17">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-18">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb36-19">            <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-21">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-22">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;&amp;</span> webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isPlaying</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-23">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stop the current webcam</span></span>
<span id="cb36-25">        webcamTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Stop</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-26"></span>
<span id="cb36-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb36-28">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb36-30">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-31">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-32"></span>
<span id="cb36-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale the source image resolution</span></span>
<span id="cb36-34">    Vector2Int inputDims <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalculateInputDims</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> targetDim<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-35">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input Dims: {inputDims.x} x {inputDims.y}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-36"></span>
<span id="cb36-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize the input texture with the calculated input dimensions</span></span>
<span id="cb36-38">    inputTextureGPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GetTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> RenderTextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ARGBHalf</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-39"></span>
<span id="cb36-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">||</span> inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-41">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-42">        inputTextureCPU <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Texture2D</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGBA32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-43">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update the selected OpenVINO model</span></span>
<span id="cb36-44">        <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateOpenVINOModel</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-45">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-46"></span>
<span id="cb36-47">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Copy the source texture into model input texture</span></span>
<span id="cb36-48">    Graphics<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Blit</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">((</span>useWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> webcamTexture <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> imageTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-49"></span>
<span id="cb36-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Flip image before sending to DLL</span></span>
<span id="cb36-51">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ProcessImageGPU</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> processingShader<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FlipXAxis"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-52"></span>
<span id="cb36-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Download pixel data from GPU to CPU</span></span>
<span id="cb36-54">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useAsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb36-55">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-56">        AsyncGPUReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Request</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> TextureFormat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RGBA32</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> OnCompleteReadback<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-57">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-58">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span></span>
<span id="cb36-59">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb36-60">        RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">active</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb36-61">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReadPixels</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-62">        inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Apply</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-63">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb36-64"></span>
<span id="cb36-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Send reference to inputData to DLL</span></span>
<span id="cb36-66">    numObjects <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UploadTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureCPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-67">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>printDebugMessages<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Detected {numObjects} objects"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding boxes</span></span>
<span id="cb36-69">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleBoundingBoxes</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb36-70"></span>
<span id="cb36-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Release the input texture</span></span>
<span id="cb36-72">    RenderTexture<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ReleaseTemporary</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inputTextureGPU<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb36-73"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-gui-methods" class="level3">
<h3 class="anchored" data-anchor-id="define-gui-methods">Define GUI Methods</h3>
<p>We need some methods to handle user interactions with the GUI and display the bounding boxes and current framerate.</p>
<p><strong>Define method to update webcam usage from GUI</strong></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb37-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// This method is called when the value for the webcam toggle changes</span></span>
<span id="cb37-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb37-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"useWebcam"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb37-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamToggle</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb37-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb37-7">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">this</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">useWebcam</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb37-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update webcam device from GUI</strong></p>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// The method is called when the selected value for the webcam dropdown changes</span></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb38-4"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateWebcamDevice</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb38-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb38-6">    currentWebcam <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> webcamDevices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>webcamDropdown<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">name</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb38-7">    Debug<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Log</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Selected Webcam: {currentWebcam}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize webcam if it is not already playing</span></span>
<span id="cb38-9">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>useWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeWebcam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>currentWebcam<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-10"></span>
<span id="cb38-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the screen object using the source image dimensions</span></span>
<span id="cb38-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeScreen</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb38-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize and position the main camera using the source image dimensions</span></span>
<span id="cb38-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">InitializeCamera</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>screenDims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb38-15"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to update the minimum confidence value</strong></p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb39-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Update the minimum confidence score for keeping bounding box proposals</span></span>
<span id="cb39-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb39-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"slider"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb39-5"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">UpdateConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Slider slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb39-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb39-7">    minConfidence <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> slider<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">value</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb39-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetConfidenceThreshold</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>minConfidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb39-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define OnGUI method</strong></p>
<p>We’ll display the predicted bounding boxes and current frame rate in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnGUI.html">OnGUI</a> method.</p>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb40-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// OnGUI is called for rendering and handling GUI events.</span></span>
<span id="cb40-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">public</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnGUI</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb40-3"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a rectangle for label text</span></span>
<span id="cb40-5">    Rect labelRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize a rectangle for bounding boxes</span></span>
<span id="cb40-7">    Rect boxRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-8"></span>
<span id="cb40-9">    GUIStyle labelStyle <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb40-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-11">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">11e-3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-12">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb40-13">    labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alignment</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> TextAnchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">MiddleLeft</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-14"></span>
<span id="cb40-15">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">foreach</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object objectInfo <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> objectInfoArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-17">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(!</span>displayBoundingBoxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-18"></span>
<span id="cb40-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip object if label index is out of bounds</span></span>
<span id="cb40-20">        <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Length</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">continue</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-21"></span>
<span id="cb40-22">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get color for current class index</span></span>
<span id="cb40-23">        Color color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get label for current class index</span></span>
<span id="cb40-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colormapList<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">items</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-26"></span>
<span id="cb40-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set bounding box coordinates</span></span>
<span id="cb40-28">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-29">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-30">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set bounding box dimensions</span></span>
<span id="cb40-31">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-32">        boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-33"></span>
<span id="cb40-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Scale bounding box line width based on display resolution</span></span>
<span id="cb40-35">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75e-3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render bounding box</span></span>
<span id="cb40-37">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DrawTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb40-38">            position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-39">            image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whiteTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-40">            scaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ScaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StretchToFill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-41">            alphaBlend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-42">            imageAspect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-43">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-44">            borderWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> lineWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-45">            borderRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-46"></span>
<span id="cb40-47">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Include class label and confidence score in label text</span></span>
<span id="cb40-48">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> labelText <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" {name}: {(objectInfo.prob * 100).ToString("</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.</span>##<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")}%"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-49"></span>
<span id="cb40-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize label GUI content</span></span>
<span id="cb40-51">        GUIContent labelContent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelText<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-52"></span>
<span id="cb40-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the text size.</span></span>
<span id="cb40-54">        Vector2 textSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CalcSize</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelContent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-55"></span>
<span id="cb40-56">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text coordinates</span></span>
<span id="cb40-57">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-58">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> lineWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-59"></span>
<span id="cb40-60">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text dimensions</span></span>
<span id="cb40-61">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Mathf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Max</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-62">        labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textSize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-63">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set label text and backgound color</span></span>
<span id="cb40-64">        labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grayscale</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">black</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">white</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-65">        labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">background</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> colorTextures<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>objectInfo<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb40-66">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Render label</span></span>
<span id="cb40-67">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>labelRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelContent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> labelStyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-68"></span>
<span id="cb40-69">        Rect objectDot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb40-70">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-71">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> lineWidth <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-72">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> radius <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-73">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">x</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-74">        objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">y</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> boxRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">height</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-75"></span>
<span id="cb40-76"></span>
<span id="cb40-77">        GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DrawTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span></span>
<span id="cb40-78">            position<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> objectDot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-79">            image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Texture2D<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">whiteTexture</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-80">            scaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> ScaleMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">StretchToFill</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-81">            alphaBlend<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-82">            imageAspect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-83">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-84">            borderWidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb40-85">            borderRadius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> radius<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-86"></span>
<span id="cb40-87">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-88"></span>
<span id="cb40-89">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define styling information for GUI elements</span></span>
<span id="cb40-90">    GUIStyle style <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> GUIStyle</span>
<span id="cb40-91">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-92">        fontSize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>Screen<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">width</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>100f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fontScale<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)))</span></span>
<span id="cb40-93">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb40-94">    style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normal</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textColor</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> textColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-95"></span>
<span id="cb40-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Define screen spaces for GUI elements</span></span>
<span id="cb40-97">    Rect slot1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-98">    Rect slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Rect</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fontSize</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">500</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-99"></span>
<span id="cb40-100">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">string</span> content <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> $<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Objects Detected: {numObjects}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-101">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayProposalCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>content<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-102"></span>
<span id="cb40-103">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Update framerate value</span></span>
<span id="cb40-104">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> fpsTimer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb40-105">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb40-106">        fps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>1f <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledDeltaTime</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-107">        fpsTimer <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Time<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unscaledTime</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> fpsRefreshRate<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-108">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb40-109"></span>
<span id="cb40-110">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust screen position when not showing predicted class</span></span>
<span id="cb40-111">    Rect fpsRect <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> displayProposalCount <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">?</span> slot2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> slot1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb40-112">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>displayFPS<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> GUI<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Label</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>fpsRect<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">new</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">GUIContent</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>$<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FPS: {fps}"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span> style<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb40-113"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
<section id="define-ondisable-method" class="level3">
<h3 class="anchored" data-anchor-id="define-ondisable-method">Define OnDisable Method</h3>
<p>We’ll perform any clean-up steps in the <a href="https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnDisable.html">OnDisable</a>method.</p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode c# code-with-copy"><code class="sourceCode cs"><span id="cb41-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">private</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">OnDisable</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb41-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb41-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FreeResources</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb41-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</section>
</section>
<section id="set-up-unity-scene" class="level2">
<h2 class="anchored" data-anchor-id="set-up-unity-scene">Set up Unity Scene</h2>
<p>Now we can start setting up our Unity scene. We need a screen to display the webcam feed, an empty object to attach the object detector script, dropdown menus for selecting webcams, models, and compute devices, a toggle to activate a webcam feed, and a slider to update the confidence threshold.</p>
<p><strong>Create Screen object</strong></p>
<p>Right-click a space in the Hierarchy tab and select <code>3D Object → Quad</code>. We can name the new object Screen.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-quad.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Next, drag and drop a test image from the <code>Assets → Images</code> folder onto the Screen object in the Scene view. Note that the Screen looks a bit dim. We need to change the shader for the Screen’s Material so that it does not require an external light source.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-attach-image-to-screen.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the Screen in the Hierarchy tab and open the <code>Shader</code> dropdown menu in the Inspector tab. Type <code>Unlit/Texture</code> into the search box and press enter.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-update-screen-material-shader.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Create Inference Manager object</strong></p>
<p>Right-click a space in the Hierarchy tab and select <code>Create Empty</code>. Name the empty object <code>InferenceManager</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-create-empty-gameobject.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the <code>InferenceManager</code> object selected, drag the <code>ObjectDetector</code> script into the Inspector tab.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-attach-object-detector-script.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can assign the screen object, compute shader, and colormap file in the Inspector tab by dragging them into their respective fields.</p>
<p><strong>Add GUI prefab</strong></p>
<p>We still need to create the GUI controls. To save time, I made a <a href="https://docs.unity3d.com/Manual/Prefabs.html">Prefab</a> that we can drop into the Scene.</p>
<ul>
<li><strong>Google Drive:</strong> <a href="https://drive.google.com/file/d/1RbL7qaIQNzWCI4z-WUArHgDFY8pUZtoE/view?usp=sharing">Canvas Prefab</a></li>
</ul>
<p>Drag and drop the Canvas prefab into a new folder called Prefabs.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-import-canvas-prefab.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>From there, drag the prefab into the Hierarchy tab. We can see the GUI by switching to the Game view.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-add-canvas-to-hierarchy-tab.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Toggle On Value Changed function</strong></p>
<p>Next, we need to pair the <code>WebcamToggle</code> with the <code>UpdateWebcamToggle</code> function in the <code>ObjectDetector</code> script. Expand the Canvas object and select the <code>WebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-select-webcamtoggle.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click and drag the <code>InferenceManager</code> into the <code>On Value Changed</code> field.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-webcamtoggle-assign-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>No Function</code> dropdown menu and select <code>ObjectDetector → UpdateWebcamToggle</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-webcamtoggle-assign-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure Webcam Dropdown On Value Changed function</strong></p>
<p>We can follow the same steps to pair the <code>WebcamDropdown</code> with the <code>UpdateWebcamDevice</code> function in the <code>ObjectDetector</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-webcamdropdown-assign-inference-manager.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>This time select <code>ObjectDetector → UpdateWebcamDevice</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-webcamdropdown-assign-inference-manager-function.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>OpenVINOModelDropdown</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-update-openvino-model-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>OpenVINODeviceDropdown</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-update-openvino-device-dropdown-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Configure <code>ConfidenceThresholdSlider</code> On Value Changed Event</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-update-confidence-threshold-slider-on-value-changed.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Assign GUI objects to Inference Manager</strong></p>
<p>We can now assign the GUI objects to their respective fields for the <code>ObjectDetector</code> script.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-inference-manager-assign-gui-objects.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Add Event System</strong></p>
<p>Before we can use the GUI, we need to add an Event System. Right-click a space in the Hierarchy tab and select <code>UI → Event System</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-add-eventsystem.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="test-in-editor" class="level2">
<h2 class="anchored" data-anchor-id="test-in-editor">Test in Editor</h2>
<p>Click the play button in the top-middle of the Editor window to test the project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-click-play-button.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>There should be a bounding box for the call sign and one for the idle hand.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/images/unity-test-in-editor.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this three-part tutorial series, we learned how to perform end-to-end object detection in Unity using IceVision and OpenVINO. In part 1, we trained a YOLOX model using IceVision and exported it to OpenVINO. In part 2, we created a dynamic link library (DLL) file in Visual Studio to perform object detection with the YOLOX model using OpenVINO. Finally, in this post, we integrated the trained model into a Unity project to perform real-time object detection. You now have a template to perform object detection in Unity that you can adapt to other projects.</p>
<p><strong>Previous:</strong> <a href="../part-2/">End-to-End Object Detection for Unity With IceVision and OpenVINO Pt. 2</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/icevision-openvino-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>icevision</category>
  <category>openvino</category>
  <category>yolox</category>
  <category>object-detection</category>
  <category>unity</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/icevision-openvino-unity-tutorial/part-3/index.html</guid>
  <pubDate>Wed, 10 Aug 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/posts/icevision-openvino-unity-tutorial/social-media/cover.jpg" medium="image" type="image/jpeg"/>
</item>
<item>
  <title>A Step-by-Step Guide to Object Detection in Unity with IceVision and OpenVINO Pt. 2</title>
  <dc:creator>Christian Mills</dc:creator>
  <link>christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/index.html</link>
  <description><![CDATA[ 



<ul>
<li>Overview</li>
<li>Install OpenVINO</li>
<li>Create DLL Project</li>
<li>Configure the Project</li>
<li>Add Include Directories</li>
<li>Link Libraries</li>
<li>Post Build Events</li>
<li>Update Precompiled Header File</li>
<li>Update dllmain File</li>
<li>Build Solution</li>
<li>Gather Dependencies</li>
<li>Summary</li>
</ul>
<section id="tutorial-links" class="level2">
<h2 class="anchored" data-anchor-id="tutorial-links">Tutorial Links</h2>
<ul>
<li><a href="../part-1/">Part 1</a>: Train a YOLOX model using IceVision and export it to OpenVINO.</li>
<li><a href="../part-2/">Part 2</a>: Create a dynamic link library (DLL) file in Visual Studio to perform object detection with a YOLOX model using OpenVINO.</li>
<li><a href="../part-3/">Part 3</a>: Perform object detection in a Unity project with OpenVINO.</li>
<li><a href="https://github.com/cj-mills/icevision-openvino-unity-tutorial">GitHub Repository</a></li>
</ul>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>In part 2 of this tutorial series, we will create a dynamic link library (<a href="https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/dynamic-link-library">DLL</a>) file in Visual Studio to perform object detection with a YOLOX model using <a href="https://docs.openvino.ai/latest/">OpenVINO</a>.</p>
<p>We will begin by installing OpenVINO and creating a DLL project in Visual Studio. Then, we will configure the project by adding the necessary include directories and linking the required libraries. We will also set up post-build events to automatically gather the DLL’s dependencies. Next, we will update the precompiled header and dllmain files to include the necessary code for object detection. Finally, we will build the project to generate the DLL file.</p>
<p>By the end of this post, you will have a DLL file that you can use for object detection in Unity.</p>
<blockquote class="blockquote">
<p><strong>Important:</strong> This post assumes <a href="https://visualstudio.microsoft.com/downloads/">Visual Studio</a> is present on your system.</p>
</blockquote>
</section>
<section id="install-openvino" class="level2">
<h2 class="anchored" data-anchor-id="install-openvino">Install OpenVINO</h2>
<p>We need to download the OpenVINO Toolkit before creating our Visual Studio project. Go to the OpenVINO download page linked below.</p>
<ul>
<li><a href="https://www.intel.com/content/www/us/en/developer/tools/openvino-toolkit/download.html">OpenVINO Download page</a></li>
</ul>
<p><strong>Download OpenVINO Toolkit</strong></p>
<p>Select the options outlined in the image below and click the Download button.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_download_page.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Double-click the file once it finishes downloading and click the Extract button in the popup window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_installer_extract_files.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The installer will then verify the computer meets the system requirements. The toolkit includes the Python scripts for converting models, which require Python 3.6, 3.7, 3.8, or 3.9 to run. We will only use the files for C++ development in this post.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_installer_check_system_requirements.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can stick with the default <code>Recommended Installation</code> option.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_installer_recommended_installation.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>The installer will then ask whether Intel can collect some information before starting the installation process.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_installer_software_improvement_program.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_installer_installation_in_progress.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Click Finish once the installation process completes.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_installer_finish.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>Inspect OpenVINO Folder</strong></p>
<p>If we look at the installation folder for the toolkit, we can see it also includes a version of OpenCV. We’ll use OpenCV to prepare image data from Unity before feeding it to the model.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_install_folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>I like to copy the OpenVINO folder to a separate directory with other dependencies for my C++ projects.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/openvino_move_folder_to_dependencies_directory.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Now we can create our Visual Studio DLL project.</p>
</section>
<section id="create-dll-project" class="level2">
<h2 class="anchored" data-anchor-id="create-dll-project">Create DLL Project</h2>
<p>Open Visual Studio and select the <code>Create a new project</code> option.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-create-new-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Type <code>DLL</code> into the text box and select the <code>Dynamic-Link Library (DLL)</code> option. This option automatically configures a few parameters for us compared to starting with a standard console application.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-new-dll-project.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Choose a name and location for the project and click the <code>Create</code> button. By default, the DLL file will use the project name.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-choose-project-name-and-location.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="configure-the-project" class="level2">
<h2 class="anchored" data-anchor-id="configure-the-project">Configure the Project</h2>
<p>At the top of the window, open the Solution Configurations dropdown menu, and select <code>Release</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-switch-to-release.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Then, open the Solution Platform dropdown menu and select <code>x64</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-switch-to-64-bit.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="add-include-directories" class="level2">
<h2 class="anchored" data-anchor-id="add-include-directories">Add Include Directories</h2>
<p>We need to tell Visual Studio where OpenVINO and OpenCV are so we can access their APIs. Right-click the project name in the Solution Explorer panel.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-solution-explorer-select-project-name.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Select the <code>Properties</code> option in the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-open-properties.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the Properties Window, open on the <code>C/C++</code> dropdown. Select the <code>Additional Include Directories</code> section and click on <code>&lt;Edit..&gt;</code> in the dropdown.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-open-additional-include-directories.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Add the paths for the following folders, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenVINO Toolkit, and click <code>OK</code>.</p>
<ul>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\include\ie</code></li>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\include</code></li>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\opencv\include</code></li>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\3rdparty\tbb\include</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-add-additional-include-directories.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="link-libraries" class="level2">
<h2 class="anchored" data-anchor-id="link-libraries">Link Libraries</h2>
<p>Next, open the <code>Linker</code> dropdown in the Properties window and select <code>Input</code>. Select <code>Additional Dependencies</code> and click <code>&lt;Edit..&gt;</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-linker-additional-dependencies.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Add the paths to the following files, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenVINO Toolkit, and click <code>OK</code>.</p>
<ul>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\opencv\lib\*</code></li>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\lib\intel64\Release\*</code></li>
<li><code>&lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\3rdparty\tbb\lib\*.lib</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-linker-add-additional-dependencies.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="post-build-events" class="level2">
<h2 class="anchored" data-anchor-id="post-build-events">Post Build Events</h2>
<p>Our DLL file will depend on the following DLL files included with the OpenVINO and OpenCV libraries.</p>
<p><strong>OpenCV DLL files</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/get-opencv-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><strong>OpenVINO DLL files</strong></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/get-openvino-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/get-openvino-tbb-dll-file.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We can add a post-build event in Visual Studio to automatically copy these DLL files to the build folder for the project at compile time. Open the <code>Build Events</code> dropdown in the Properties window and select <code>Post-Build Event</code>. Select <code>Command Line</code> and click <code>&lt;Edit..&gt;</code>.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-post-build-event-edit-command-line-events.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Add the following commands, replacing <code>&lt;parent-folder-path&gt;</code> with the full path to the parent folder for the OpenVINO Toolkit, and click <code>OK</code>.</p>
<ul>
<li><code>xcopy &lt;parent-folder-path&gt;\openvino_2022.1.0.643\opencv\bin\opencv_core453.dll $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></li>
<li><code>xcopy &lt;parent-folder-path&gt;\openvino_2022.1.0.643\opencv\bin\opencv_imgproc453.dll $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></li>
<li><code>xcopy &lt;parent-folder-path&gt;\openvino_2022.1.0.643\opencv\bin\opencv_imgcodecs453.dll $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></li>
<li><code>xcopy &lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\bin\intel64\Release\* $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></li>
<li><code>xcopy &lt;parent-folder-path&gt;\openvino_2022.1.0.643\runtime\3rdparty\tbb\bin\tbb.dll $(SolutionDir)$(Platform)\$(Configuration)\ /c /y</code></li>
</ul>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-post-build-event-add-xcopy-commands.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Finally, click the <code>Apply</code> button and close the Properties window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-properties-apply-changes.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With the dependencies taken care of, we can start modifying the code.</p>
</section>
<section id="update-precompiled-header-file" class="level2">
<h2 class="anchored" data-anchor-id="update-precompiled-header-file">Update Precompiled Header File</h2>
<p>We’ll first update the <code>pch.h</code> <a href="https://docs.microsoft.com/en-us/cpp/build/creating-precompiled-header-files?view=msvc-160">Precompiled Header file</a> with the required header files. We can open the <code>pch.h</code> file by selecting it in the Solution Explorer window.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-open-pch-header-file.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Comment or remove the <code>#include</code> line for the <code>framework.h</code> header file.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pch.h: This is a precompiled header file.</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Files listed below are compiled only once, improving build performance for future builds.</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This also affects IntelliSense performance, including code completion and many code browsing features.</span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// However, files listed here are ALL re-compiled if any one of them is updated between builds.</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Do not add files here that you will be updating frequently as this negates the performance advantage.</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifndef PCH_H</span></span>
<span id="cb1-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PCH_H</span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// add headers that you want to pre-compile here</span></span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//#include "framework.h"</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//PCH_H</span></span></code></pre></div>
<p><strong>Add required header files</strong></p>
<p>Next, we’ll add the required header files for OpenVINO and OpenCV below <code>//#include "framework.h"</code> line.</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// pch.h: This is a precompiled header file.</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Files listed below are compiled only once, improving build performance for future builds.</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// This also affects IntelliSense performance, including code completion and many code browsing features.</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// However, files listed here are ALL re-compiled if any one of them is updated between builds.</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Do not add files here that you will be updating frequently as this negates the performance advantage.</span></span>
<span id="cb2-6"></span>
<span id="cb2-7"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#ifndef PCH_H</span></span>
<span id="cb2-8"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define PCH_H</span></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// add headers that you want to pre-compile here</span></span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//#include "framework.h"</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"openvino/openvino.hpp"</span></span>
<span id="cb2-14"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">&lt;opencv2/opencv.hpp&gt;</span></span>
<span id="cb2-15"></span>
<span id="cb2-16"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#endif </span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//PCH_H</span></span></code></pre></div>
</section>
<section id="update-dllmain-file" class="level2">
<h2 class="anchored" data-anchor-id="update-dllmain-file">Update dllmain File</h2>
<p>By default, the <code>dllmain.cpp</code> file contains the following code.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// dllmain.cpp : Defines the entry point for the DLL application.</span></span>
<span id="cb3-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"pch.h"</span></span>
<span id="cb3-3"></span>
<span id="cb3-4">BOOL APIENTRY DllMain<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span> HMODULE hModule<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-5">                       DWORD  ul_reason_for_call<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb3-6">                       LPVOID lpReserved</span>
<span id="cb3-7">                     <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-9">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">switch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ul_reason_for_call<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb3-10">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb3-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_PROCESS_ATTACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_THREAD_ATTACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_THREAD_DETACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">case</span> DLL_PROCESS_DETACH<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span></span>
<span id="cb3-15">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">break</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb3-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> TRUE<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb3-18"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>We can delete everything below the <code>#include "pch.h"</code> line.</p>
<p><strong>Create a macro to mark functions we want to make accessible in Unity</strong></p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// dllmain.cpp : Defines the entry point for the DLL application.</span></span>
<span id="cb4-2"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#include </span><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">"pch.h"</span></span>
<span id="cb4-3"></span>
<span id="cb4-4"></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a macro to quickly mark a function for export</span></span>
<span id="cb4-6"><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">#define DLLExport </span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">__declspec (dllexport)</span></span></code></pre></div>
<p><strong>Wrap the code in extern “C” to prevent name-mangling issues with the compiler</strong></p>
<p>The rest of our code will go inside here.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Wrap code to prevent name-mangling issues</span></span>
<span id="cb5-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extern</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"C"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define variables</strong></p>
<p>Inside the wrapper, we will declare the persistent variables needed for the DLL.</p>
<ul>
<li><a href="https://docs.openvino.ai/nightly/classov_1_1Core.html">ov::Core</a>: represents an OpenVINO runtime Core entity</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1Model.html#doxid-classov-1-1-model">ov::Model</a>: A user-defined model</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1CompiledModel.html">ov::CompiledModel</a>: represents a compiled model</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1InferRequest.html#doxid-classov-1-1-infer-request">ov::InferRequest</a>: an infer request that can be run in asynchronous or synchronous manners</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1Tensor.html">ov::Tensor</a>: API holding host memory</li>
</ul>
<hr>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Inference engine instance</span></span>
<span id="cb6-2">ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Core core<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The user define model representation</span></span>
<span id="cb6-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>shared_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A device-specific compiled model</span></span>
<span id="cb6-6">ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>CompiledModel compiled_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// List of available compute devices</span></span>
<span id="cb6-9"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// An inference request for a compiled model</span></span>
<span id="cb6-11">ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>InferRequest infer_request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the model input data</span></span>
<span id="cb6-13">ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Tensor input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A pointer for accessing the input tensor data</span></span>
<span id="cb6-15"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-16"></span>
<span id="cb6-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// model has only one output</span></span>
<span id="cb6-18">ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Tensor output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// A pointer for accessing the output tensor data</span></span>
<span id="cb6-20"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current source image width</span></span>
<span id="cb6-23"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current source image height</span></span>
<span id="cb6-25"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current model input width</span></span>
<span id="cb6-27"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The current model input height</span></span>
<span id="cb6-29"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The total number pixels in the input image</span></span>
<span id="cb6-31"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_pixels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The number of color channels </span></span>
<span id="cb6-33"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-34"></span>
<span id="cb6-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores information about a single object prediction</span></span>
<span id="cb6-36"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> Object</span>
<span id="cb6-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-38">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-39">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-40">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-41">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-42">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-43">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-44"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-45"></span>
<span id="cb6-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store grid offset and stride values to decode a section of the model output</span></span>
<span id="cb6-47"><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">struct</span> GridAndStride</span>
<span id="cb6-48"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb6-49">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-50">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-51">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-52"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb6-53"></span>
<span id="cb6-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The scale values used to adjust the model output to the source image resolution</span></span>
<span id="cb6-55"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-56"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-57"></span>
<span id="cb6-58"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The minimum confidence score to consider an object proposal</span></span>
<span id="cb6-59"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-60"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The maximum intersection over union value before an object proposal will be ignored</span></span>
<span id="cb6-61"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> nms_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.45</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-62"></span>
<span id="cb6-63"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the grid and stride values to navigate the raw model output</span></span>
<span id="cb6-64"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the object proposals with confidence scores above bbox_conf_thresh</span></span>
<span id="cb6-66"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-67"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Stores the indices for the object proposals selected using non-maximum suppression</span></span>
<span id="cb6-68"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb6-69"></span>
<span id="cb6-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The stride values used to generate the gride_strides vector</span></span>
<span id="cb6-71"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>vector<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> strides <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">32</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span></code></pre></div>
<p><strong>Define a function to get the number of compute devices</strong></p>
<p>The first function we’ll define will create a list of available device names and return the number of devices accessible by OpenVINO. We’ll use this information to select which device to use to perform inference from the Unity application. There might be an option named GNA (Gaussian &amp; Neural Accelerator). GNA is a highly specialized neural coprocessor for tasks like noise cancellation. We’ll exclude it from the list of devices presented to the end user.</p>
<ul>
<li><a href="https://docs.openvino.ai/nightly/classov_1_1Core.html#doxid-classov-1-1-core-1aabd82bca4826ee53893f7b5fc9bce813">ov::Core::get_available_devices()</a>: Returns devices available for inference</li>
</ul>
<hr>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb7-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the number of available compute devices</span></span>
<span id="cb7-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The number of available devices</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb7-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> GetDeviceCount<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> </span>
<span id="cb7-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Reset list of available compute devices</span></span>
<span id="cb7-8">    available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-9"></span>
<span id="cb7-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Populate list of available compute devices</span></span>
<span id="cb7-11">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"> </span>device <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> core<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get_available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">())</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Skip GNA device</span></span>
<span id="cb7-13">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>find<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GNA"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">::</span>npos<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb7-14">            available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb7-15">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-16">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return the number of available compute devices</span></span>
<span id="cb7-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb7-19"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to get the name of a compute device</strong></p>
<p>Next, we’ll define a function to return the name of a device at a specified index for the list of available devices.</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Get the name of the compute device name at the specified index</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;&lt;/param&gt;</span></span>
<span id="cb8-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The name of the device at the specified index</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb8-6">DLLExport <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>string<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> GetDeviceName<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb8-7">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span>available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb8-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to generate stride values to navigate the raw model output</strong></p>
<p>The method for generating the offset values used to traverse the output array is almost identical to the Python implementation from <a href="../part-1/#define-post-processing-steps">part 1</a>.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generate offset values to navigate the raw model output</span></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb9-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"height"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The model input height</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"width"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The model input width</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb9-6"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GenerateGridsAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-8">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the values for the previous input resolution</span></span>
<span id="cb9-9">    grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb9-10"></span>
<span id="cb9-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through each stride value</span></span>
<span id="cb9-12">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb9-13">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the grid dimensions</span></span>
<span id="cb9-15">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid_height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid_width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb9-17"></span>
<span id="cb9-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store each combination of grid coordinates</span></span>
<span id="cb9-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb9-20">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-21">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb9-22">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb9-23">                grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>GridAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> g0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> g1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb9-24">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-25">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-26">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-27"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to set the minimum confidence score from Unity</strong></p>
<p>We might want to try different confidence thresholds for keeping object proposals from the Unity application, so we’ll add a function to enable this.</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb10-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Set minimum confidence score for keeping bounding box proposals</span></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"min_confidence"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The minimum confidence score for keeping bounding box proposals</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb10-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> SetConfidenceThreshold<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> min_confidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb10-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-7">    bbox_conf_thresh <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> min_confidence<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb10-8"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to load an OpenVINO model</strong></p>
<p>OpenVINO needs to compile models for the target device. This process can take several seconds when using GPU inference. We can create a cache directory, so we only need to compile models for a specific resolution-device pair once.</p>
<p>We’ll place the code for loading an OpenVINO model inside a try-catch block to avoid crashing the application if we pass an incorrect file path.</p>
<p>If the model loads successfully, we’ll attempt to reshape the model input to the desired input dimensions. After reshaping the model input, we can compile the model for the target device.</p>
<p>We can get pointers to the model input tensor and create an inference request using the compiled model.</p>
<ul>
<li><a href="https://docs.openvino.ai/nightly/classov_1_1Core.html#doxid-classov-1-1-core-1a14cba2136b972ee34478dd11633293a2">ov::Core::set_property()</a>: Sets properties for a device</li>
<li><a href="https://docs.openvino.ai/nightly/classov_1_1Core.html#doxid-classov-1-1-core-1ae0576a95f841c3a6f5e46e4802716981">ov::Core::read_model()</a>: Reads models from IR/ONNX/PDPD formats</li>
<li><a href="https://docs.openvino.ai/latest/openvino_docs_OV_UG_ShapeInference.html">ov::Model::reshape()</a>: Updates input shapes and propagates them down to the outputs of the model through all intermediate layers</li>
<li><a href="https://docs.openvino.ai/nightly/classov_1_1Core.html#doxid-classov-1-1-core-1a46555f0803e8c29524626be08e7f5c5a">ov::Core::compile_model()</a>: Creates a compiled model from a source model object</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1CompiledModel.html#doxid-classov-1-1-compiled-model-1ae3633c0eb5173ed776446fba32b95953">ov::CompiledModel::create_infer_request()</a>: Creates an inference request object used to infer the compiled model</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1InferRequest.html#doxid-classov-1-1-infer-request-1a5f0bc1ab40de6a7a12136b4a4e6a8b54">ov::InferRequest::get_input_tensor()</a>: Gets an input tensor for inference</li>
</ul>
<hr>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Load a model from the specified file path</span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"model_path"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The full model path to the OpenVINO IR model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"index"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The index for the available_devices vector</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image_dims"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source image dimensions</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A status value indicating success or failure to load and reshape the model</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb11-8">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> LoadModel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">char</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> </span>
<span id="cb11-9"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb11-10"></span>
<span id="cb11-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> return_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Set the cache directory for compiled GPU models</span></span>
<span id="cb11-13">    core<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>set_property<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GPU"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cache_dir<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cache"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb11-14"></span>
<span id="cb11-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Try loading the specified model</span></span>
<span id="cb11-16">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> core<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>read_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model_path<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(...)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-18"></span>
<span id="cb11-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// The dimensions of the source input image</span></span>
<span id="cb11-20">    img_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-21">    img_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb11-22">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate new input dimensions based on the max stride value</span></span>
<span id="cb11-23">    input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>roundf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()));</span></span>
<span id="cb11-24">    input_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)(</span>strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>roundf<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()));</span></span>
<span id="cb11-25">    n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-26"></span>
<span id="cb11-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the value used to adjust the model output to the source image resolution</span></span>
<span id="cb11-28">    scale_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-29">    scale_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-30"></span>
<span id="cb11-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate the grid and stride values based on input resolution</span></span>
<span id="cb11-32">    grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb11-33">    GenerateGridsAndStride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-34"></span>
<span id="cb11-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Try updating the model input dimensions</span></span>
<span id="cb11-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">try</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span>reshape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">({</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">catch</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(...)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> return_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb11-38"></span>
<span id="cb11-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create a compiled model for the taret compute device</span></span>
<span id="cb11-40">    <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">auto</span> compiled_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> core<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>compile_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MULTI"</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span></span>
<span id="cb11-41">                                             ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>device<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>priorities<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]),</span></span>
<span id="cb11-42">                                             ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>hint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>performance_mode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>hint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>PerformanceMode<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>LATENCY<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">),</span></span>
<span id="cb11-43">                                             ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>hint<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>inference_precision<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>ov<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>element<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>f32<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb11-44"></span>
<span id="cb11-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create an inference request</span></span>
<span id="cb11-46">    infer_request <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> compiled_model<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>create_infer_request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb11-47"></span>
<span id="cb11-48">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get input tensor by index</span></span>
<span id="cb11-49">    input_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> infer_request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get_input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb11-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get a pointer to the input tensor data</span></span>
<span id="cb11-51">    input_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb11-52"></span>
<span id="cb11-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get output tensor</span></span>
<span id="cb11-54">    output_tensor <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> infer_request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get_output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb11-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get a pointer to the output tensor data</span></span>
<span id="cb11-56">    out_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;();</span></span>
<span id="cb11-57"></span>
<span id="cb11-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Replace the initial input dims with the updated values</span></span>
<span id="cb11-59">    image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-60">    image_dims<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-61"></span>
<span id="cb11-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Return a value of 0 if the model loads successfully</span></span>
<span id="cb11-63">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> return_val<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb11-64"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define method to generate object detection proposals from the raw model output</strong></p>
<p>The method to generate object proposals is nearly identical to the Python implementation from part 1.</p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Generate object detection proposals from the raw model output</span></span>
<span id="cb12-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"out_ptr"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A pointer to the output tensor data</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb12-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> GenerateYoloxProposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> proposal_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the proposals for the previous model output</span></span>
<span id="cb12-8">    proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb12-9"></span>
<span id="cb12-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Obtain the number of classes the model was trained to detect</span></span>
<span id="cb12-11">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> num_classes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposal_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-12"></span>
<span id="cb12-13">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb12-14">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-15">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the current grid and stride values</span></span>
<span id="cb12-16">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> grid1 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-18">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> stride <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>anchor_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-19"></span>
<span id="cb12-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the starting index for the current proposal</span></span>
<span id="cb12-21">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> anchor_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> proposal_length<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-22"></span>
<span id="cb12-23">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the coordinates for the center of the predicted bounding box</span></span>
<span id="cb12-24">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-25">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> grid1<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-26"></span>
<span id="cb12-27">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the dimensions for the predicted bounding box</span></span>
<span id="cb12-28">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-29">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> exp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">])</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> stride<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-30"></span>
<span id="cb12-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the coordinates for the upper left corner of the bounding box</span></span>
<span id="cb12-32">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> w <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-33">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> y_center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-34"></span>
<span id="cb12-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the confidence score that an object is present</span></span>
<span id="cb12-36">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb12-37"></span>
<span id="cb12-38">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Initialize object struct with bounding box information</span></span>
<span id="cb12-39">        Object obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">};</span></span>
<span id="cb12-40"></span>
<span id="cb12-41">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Find the object class with the highest confidence score</span></span>
<span id="cb12-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> class_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> class_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> num_classes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb12-43">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-44">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Get the confidence score for the current object class</span></span>
<span id="cb12-45">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_cls_score <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> out_ptr<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>start_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb12-46">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the final confidence score for the object proposal</span></span>
<span id="cb12-47">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> box_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_objectness <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> box_cls_score<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-48"></span>
<span id="cb12-49">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check for the highest confidence score</span></span>
<span id="cb12-50">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>box_prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb12-51">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb12-52">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> class_idx<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-53">                obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> box_prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb12-54">            <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-55">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-56"></span>
<span id="cb12-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Only add object proposals with high enough confidence scores</span></span>
<span id="cb12-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> bbox_conf_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb12-59">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb12-60"></span>
<span id="cb12-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Sort the proposals based on the confidence score in descending order</span></span>
<span id="cb12-62">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>sort<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>begin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>end<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(),</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[](</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-&gt;</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span></span>
<span id="cb12-63">              <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">});</span></span>
<span id="cb12-64"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define function to sort bounding box proposals using Non-Maximum Suppression</strong></p>
<p>The C++ API for OpenCV has built-in functionality to perform comparison operations between rectangles. Therefore, we don’t need to define helper functions to calculate the intersection and union areas of two bounding boxes. Otherwise, the method to sort bounding box proposals using Non-Maximum Suppression is almost identical to the Python implementation from part 1.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb13-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb13-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Filter through a sorted list of object proposals using Non-maximum suppression</span></span>
<span id="cb13-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb13-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> NmsSortedBboxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb13-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-6">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the picked proposals for the previous model outptut</span></span>
<span id="cb13-7">    proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb13-8"></span>
<span id="cb13-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate through the object proposals</span></span>
<span id="cb13-10">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb13-11">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-12">        Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb13-13"></span>
<span id="cb13-14">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create OpenCV rectangle for the Object bounding box</span></span>
<span id="cb13-15">        cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> rect_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-16"></span>
<span id="cb13-17">        <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">bool</span> keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">true</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-18"></span>
<span id="cb13-19">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Check if the current object proposal overlaps any selected objects too much</span></span>
<span id="cb13-20">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-21">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb13-22">            Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>j<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">];</span></span>
<span id="cb13-23"></span>
<span id="cb13-24">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Create OpenCV rectangle for the Object bounding box</span></span>
<span id="cb13-25">            cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> rect_b <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Rect_<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;(</span>b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y0<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-26"></span>
<span id="cb13-27">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the area where the two object bounding boxes overlap</span></span>
<span id="cb13-28">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>rect_a <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> rect_b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">).</span>area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb13-29">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Calculate the union area of both bounding boxes</span></span>
<span id="cb13-30">            <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rect_a<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> rect_b<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> inter_area<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-31">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Ignore object proposals that overlap selected objects too much</span></span>
<span id="cb13-32">            <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>inter_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> union_area <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> nms_thresh<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb13-33">                keep <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">false</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb13-34">        <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-35"></span>
<span id="cb13-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Keep object proposals that do not overlap selected objects too much</span></span>
<span id="cb13-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>keep<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>push_back<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb13-38">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb13-39"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to perform inference</strong></p>
<p>We will access the pixel data for the input image from Unity with a pointer to a <a href="https://docs.opencv.org/4.5.1/d1/d1b/group__core__hal__interface.html#ga65f85814a8290f9797005d3b28e7e5fc">uchar</a> (unsigned 1-byte integer) array and wrap the data in a <a href="https://docs.opencv.org/master/d3/d63/classcv_1_1Mat.html">cv::Mat</a> variable for processing.</p>
<p>We don’t need to normalize the input image since the IR model does it internally.</p>
<p>After processing the model output, we’ll return the final number of detected objects to Unity so we can initialize an array of objects.</p>
<ul>
<li><a href="https://docs.opencv.org/3.4/d3/d63/classcv_1_1Mat.html">cv::Mat</a>: n-dimensional dense array class<br>
</li>
<li><a href="https://docs.opencv.org/3.4/d8/d01/group__imgproc__color__conversions.html#ga397ae87e1288a81d2363b61574eb8cab">cv::cvtColor()</a>: Converts an image from one color space to another</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1InferRequest.html#doxid-classov-1-1-infer-request-1abcb7facc9f7c4b9226a1fd343e56958d">ov::InferRequest::infer()</a>: Infers specified input in synchronous mode</li>
<li><a href="https://docs.openvino.ai/latest/classov_1_1InferRequest.html#doxid-classov-1-1-infer-request-1a9bf7bf67c58858bda86ae01e83cd14c1">ov::InferRequest::get_output_tensor()</a>: Gets an output tensor for inference</li>
</ul>
<hr>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb14-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Perform inference with the provided texture data</span></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"image_data"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The source image data from Unity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb14-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;returns&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">The final number of detected objects</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/returns&gt;</span></span>
<span id="cb14-6">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> PerformInference<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">uchar</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> </span>
<span id="cb14-7"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-8"></span>
<span id="cb14-9">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Store the pixel data for the source input image in an OpenCV Mat</span></span>
<span id="cb14-10">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Mat input_image <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Mat<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> CV_8UC4<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> image_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-11"></span>
<span id="cb14-12">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Remove the alpha channel</span></span>
<span id="cb14-13">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>cvtColor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>COLOR_RGBA2RGB<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb14-14"></span>
<span id="cb14-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Resize the input image</span></span>
<span id="cb14-16">    cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>resize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> cv<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>Size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>input_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> input_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">));</span></span>
<span id="cb14-17"></span>
<span id="cb14-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Iterate over each pixel in image</span></span>
<span id="cb14-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> p <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> n_pixels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb14-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb14-21">        input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-22">        input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-23">        input_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_pixels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> input_image<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>p<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>n_channels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">255.0</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">f</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb14-24">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-25"></span>
<span id="cb14-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Perform inference</span></span>
<span id="cb14-27">    infer_request<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>infer<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb14-28"></span>
<span id="cb14-29">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Generate new proposals for the current model output</span></span>
<span id="cb14-30">    GenerateYoloxProposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>out_data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> output_tensor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>get_shape<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()[</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]);</span></span>
<span id="cb14-31"></span>
<span id="cb14-32">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Pick detected objects to keep using Non-maximum Suppression</span></span>
<span id="cb14-33">    NmsSortedBboxes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb14-34"></span>
<span id="cb14-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// return the final number of detected objects</span></span>
<span id="cb14-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">return</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb14-37"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to populate an array of objects from Unity</strong></p>
<p>Next, we’ll define a function to populate an array of objects from Unity. We call this function after initializing the list based on the current number of detected objects. We’ll also scale the bounding box information from the input dimensions to the source image resolution.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb15-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Fill the provided array with the detected objects</span></span>
<span id="cb15-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;param</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;"> name=</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"objects"</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&gt;</span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">A pointer to a list of objects from Unity</span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/param&gt;</span></span>
<span id="cb15-5">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> PopulateObjectsArray<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>Object<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span> </span>
<span id="cb15-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-7"></span>
<span id="cb15-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">int</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>size<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span> i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">++)</span></span>
<span id="cb15-9">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb15-10">        Object obj <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]];</span></span>
<span id="cb15-11"></span>
<span id="cb15-12">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">// Adjust offset to source image resolution and clamp the bounding box</span></span>
<span id="cb15-13">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>x0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-14">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>y0 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-15">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_w<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-16">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">std::</span>min<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span>obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>height <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> scale_y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">,</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">float</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span>img_h<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">);</span></span>
<span id="cb15-17"></span>
<span id="cb15-18">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-19">        objects<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">].</span>prob <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> obj<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>prob<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">;</span></span>
<span id="cb15-20">    <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb15-21"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p><strong>Define a function to reset the vectors when the Unity application exits</strong></p>
<p>This last function will free the memory allocated by the vectors. We’ll call it when the Unity application shuts down.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode cpp code-with-copy"><code class="sourceCode cpp"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;summary&gt;</span></span>
<span id="cb16-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// Reset vectors</span></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/// </span><span class="kw" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;/summary&gt;</span></span>
<span id="cb16-4">DLLExport <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">void</span> FreeResources<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">()</span> </span>
<span id="cb16-5"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb16-6">    available_devices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-7">    grid_strides<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-8">    proposals<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-9">    proposal_indices<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>clear<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">();</span></span>
<span id="cb16-10"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
<p>That is all the code needed for the plugin. We can now build the solution to generate the DLL file.</p>
</section>
<section id="build-solution" class="level2">
<h2 class="anchored" data-anchor-id="build-solution">Build Solution</h2>
<p>Open the Build menu at the top of the Visual Studio window and click <code>Build Solution</code>. Visual Studio will generate a new x64 folder in the project directory containing the DLL file and its dependencies.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-build-solution.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="gather-dependencies" class="level2">
<h2 class="anchored" data-anchor-id="gather-dependencies">Gather Dependencies</h2>
<p>Right-click the project name in the Solution Explorer panel and select <code>Open Folder in File Explorer</code> from the popup menu.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-open-folder-in-explorer.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>In the new File Explorer window, go to the parent folder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-project-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Open the <code>x64 → Release</code> subfolder.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/visual-studio-project-folder-x64-folder.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>We’ll need to copy all the DLL files in this folder and the plugins.xml file to the Unity project.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/images/file-explorer-select-dll-files.png" class="img-fluid figure-img"></p>
</figure>
</div>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">Summary</h2>
<p>In this post, we learned how to create a dynamic link library (DLL) file in Visual Studio to perform object detection with a YOLOX model using OpenVINO. We installed OpenVINO, created a DLL project in Visual Studio, and configured the project by adding include directories and linking libraries. We also set up post-build events to gather the required dependencies for our DLL file and updated the precompiled header and dllmain files to include the necessary code for object detection. Finally, we built the project to generate the DLL file. In part 3, we will integrate this DLL into a Unity project to perform real-time object detection with a YOLOX model.</p>
<p><strong>Previous:</strong> <a href="../part-1/">End-to-End Object Detection for Unity With IceVision and OpenVINO Pt. 1</a></p>
<p><strong>Next:</strong> <a href="../part-3/">End-to-End Object Detection for Unity With IceVision and OpenVINO Pt. 3</a></p>
<p><strong>Project Resources:</strong> <a href="https://github.com/cj-mills/icevision-openvino-unity-tutorial">GitHub Repository</a></p>


</section>

 ]]></description>
  <category>icevision</category>
  <category>openvino</category>
  <category>yolox</category>
  <category>object-detection</category>
  <category>unity</category>
  <category>tutorial</category>
  <guid>christianjmills.com/posts/icevision-openvino-unity-tutorial/part-2/index.html</guid>
  <pubDate>Tue, 09 Aug 2022 07:00:00 GMT</pubDate>
  <media:content url="christianjmills.com/posts/icevision-openvino-unity-tutorial/social-media/cover.jpg" medium="image" type="image/jpeg"/>
</item>
</channel>
</rss>
